volumes:
  prometheus_data: {}
  grafana_data: {}
  bootstrapper_datastore: {}

services:
  bootstrapper:
    restart: unless-stopped
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - 8888:8888
      - 8899:8899
      - 4101:4101
      - 4102:4102
      - 4001:4001
      - 4003:4003
      - 9229:9229
    environment:
      - NODE_OPTIONS="--inspect=0.0.0.0"
    volumes:
      - ./config.json:/config.json
      - bootstrapper_datastore:/datastore
    command: node --config /config.json --enable-kademlia --enable-autonat --enable-tls --api-host=0.0.0.0 --datastore=/datastore

  prometheus:
    restart: unless-stopped
    image: prom/prometheus
    pull_policy: if_not_present
    profiles: ['dashboard'] # only runs with dashboard profile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9080:9090
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana
    pull_policy: if_not_present
    profiles: ['dashboard'] # only runs with dashboard profile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9181:3000
    volumes:
      - ./config/grafana/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
