diff --git a/node_modules/@libp2p/crypto/dist/index.min.js b/node_modules/@libp2p/crypto/dist/index.min.js
index b14a303..f8ffc90 100644
--- a/node_modules/@libp2p/crypto/dist/index.min.js
+++ b/node_modules/@libp2p/crypto/dist/index.min.js
@@ -1,37 +1,7 @@
 (function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2PCrypto = factory()}(typeof self !== 'undefined' ? self : this, function () {
-"use strict";var Libp2PCrypto=(()=>{var fc=Object.create;var Rr=Object.defineProperty;var hc=Object.getOwnPropertyDescriptor;var dc=Object.getOwnPropertyNames;var gc=Object.getPrototypeOf,pc=Object.prototype.hasOwnProperty;var mc=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),ot=(r,t)=>{for(var e in t)Rr(r,e,{get:t[e],enumerable:!0})},Lo=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of dc(t))!pc.call(r,s)&&s!==e&&Rr(r,s,{get:()=>t[s],enumerable:!(n=hc(t,s))||n.enumerable});return r};var yc=(r,t,e)=>(e=r!=null?fc(gc(r)):{},Lo(t||!r||!r.__esModule?Rr(e,"default",{value:r,enumerable:!0}):e,r)),bc=r=>Lo(Rr({},"__esModule",{value:!0}),r);var qi=mc(je=>{"use strict";var Ku="[object ArrayBuffer]",$t=class r{static isArrayBuffer(t){return Object.prototype.toString.call(t)===Ku}static toArrayBuffer(t){return this.isArrayBuffer(t)?t:t.byteLength===t.buffer.byteLength||t.byteOffset===0&&t.byteLength===t.buffer.byteLength?t.buffer:this.toUint8Array(t.buffer).slice(t.byteOffset,t.byteOffset+t.byteLength).buffer}static toUint8Array(t){return this.toView(t,Uint8Array)}static toView(t,e){if(t.constructor===e)return t;if(this.isArrayBuffer(t))return new e(t);if(this.isArrayBufferView(t))return new e(t.buffer,t.byteOffset,t.byteLength);throw new TypeError("The provided value is not of type '(ArrayBuffer or ArrayBufferView)'")}static isBufferSource(t){return this.isArrayBufferView(t)||this.isArrayBuffer(t)}static isArrayBufferView(t){return ArrayBuffer.isView(t)||t&&this.isArrayBuffer(t.buffer)}static isEqual(t,e){let n=r.toUint8Array(t),s=r.toUint8Array(e);if(n.length!==s.byteLength)return!1;for(let o=0;o<n.length;o++)if(n[o]!==s[o])return!1;return!0}static concat(...t){let e;Array.isArray(t[0])&&!(t[1]instanceof Function)||Array.isArray(t[0])&&t[1]instanceof Function?e=t[0]:t[t.length-1]instanceof Function?e=t.slice(0,t.length-1):e=t;let n=0;for(let i of e)n+=i.byteLength;let s=new Uint8Array(n),o=0;for(let i of e){let a=this.toUint8Array(i);s.set(a,o),o+=a.length}return t[t.length-1]instanceof Function?this.toView(s,t[t.length-1]):s.buffer}},oo="string",Pu=/^[0-9a-f\s]+$/i,Fu=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,qu=/^[a-zA-Z0-9-_]+$/,an=class{static fromString(t){let e=unescape(encodeURIComponent(t)),n=new Uint8Array(e.length);for(let s=0;s<e.length;s++)n[s]=e.charCodeAt(s);return n.buffer}static toString(t){let e=$t.toUint8Array(t),n="";for(let o=0;o<e.length;o++)n+=String.fromCharCode(e[o]);return decodeURIComponent(escape(n))}},vt=class{static toString(t,e=!1){let n=$t.toArrayBuffer(t),s=new DataView(n),o="";for(let i=0;i<n.byteLength;i+=2){let a=s.getUint16(i,e);o+=String.fromCharCode(a)}return o}static fromString(t,e=!1){let n=new ArrayBuffer(t.length*2),s=new DataView(n);for(let o=0;o<t.length;o++)s.setUint16(o*2,t.charCodeAt(o),e);return n}},cn=class r{static isHex(t){return typeof t===oo&&Pu.test(t)}static isBase64(t){return typeof t===oo&&Fu.test(t)}static isBase64Url(t){return typeof t===oo&&qu.test(t)}static ToString(t,e="utf8"){let n=$t.toUint8Array(t);switch(e.toLowerCase()){case"utf8":return this.ToUtf8String(n);case"binary":return this.ToBinary(n);case"hex":return this.ToHex(n);case"base64":return this.ToBase64(n);case"base64url":return this.ToBase64Url(n);case"utf16le":return vt.toString(n,!0);case"utf16":case"utf16be":return vt.toString(n);default:throw new Error(`Unknown type of encoding '${e}'`)}}static FromString(t,e="utf8"){if(!t)return new ArrayBuffer(0);switch(e.toLowerCase()){case"utf8":return this.FromUtf8String(t);case"binary":return this.FromBinary(t);case"hex":return this.FromHex(t);case"base64":return this.FromBase64(t);case"base64url":return this.FromBase64Url(t);case"utf16le":return vt.fromString(t,!0);case"utf16":case"utf16be":return vt.fromString(t);default:throw new Error(`Unknown type of encoding '${e}'`)}}static ToBase64(t){let e=$t.toUint8Array(t);if(typeof btoa<"u"){let n=this.ToString(e,"binary");return btoa(n)}else return Buffer.from(e).toString("base64")}static FromBase64(t){let e=this.formatString(t);if(!e)return new ArrayBuffer(0);if(!r.isBase64(e))throw new TypeError("Argument 'base64Text' is not Base64 encoded");return typeof atob<"u"?this.FromBinary(atob(e)):new Uint8Array(Buffer.from(e,"base64")).buffer}static FromBase64Url(t){let e=this.formatString(t);if(!e)return new ArrayBuffer(0);if(!r.isBase64Url(e))throw new TypeError("Argument 'base64url' is not Base64Url encoded");return this.FromBase64(this.Base64Padding(e.replace(/\-/g,"+").replace(/\_/g,"/")))}static ToBase64Url(t){return this.ToBase64(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")}static FromUtf8String(t,e=r.DEFAULT_UTF8_ENCODING){switch(e){case"ascii":return this.FromBinary(t);case"utf8":return an.fromString(t);case"utf16":case"utf16be":return vt.fromString(t);case"utf16le":case"usc2":return vt.fromString(t,!0);default:throw new Error(`Unknown type of encoding '${e}'`)}}static ToUtf8String(t,e=r.DEFAULT_UTF8_ENCODING){switch(e){case"ascii":return this.ToBinary(t);case"utf8":return an.toString(t);case"utf16":case"utf16be":return vt.toString(t);case"utf16le":case"usc2":return vt.toString(t,!0);default:throw new Error(`Unknown type of encoding '${e}'`)}}static FromBinary(t){let e=t.length,n=new Uint8Array(e);for(let s=0;s<e;s++)n[s]=t.charCodeAt(s);return n.buffer}static ToBinary(t){let e=$t.toUint8Array(t),n="";for(let s=0;s<e.length;s++)n+=String.fromCharCode(e[s]);return n}static ToHex(t){let e=$t.toUint8Array(t),n="",s=e.length;for(let o=0;o<s;o++){let i=e[o];i<16&&(n+="0"),n+=i.toString(16)}return n}static FromHex(t){let e=this.formatString(t);if(!e)return new ArrayBuffer(0);if(!r.isHex(e))throw new TypeError("Argument 'hexString' is not HEX encoded");e.length%2&&(e=`0${e}`);let n=new Uint8Array(e.length/2);for(let s=0;s<e.length;s=s+2){let o=e.slice(s,s+2);n[s/2]=parseInt(o,16)}return n.buffer}static ToUtf16String(t,e=!1){return vt.toString(t,e)}static FromUtf16String(t,e=!1){return vt.fromString(t,e)}static Base64Padding(t){let e=4-t.length%4;if(e<4)for(let n=0;n<e;n++)t+="=";return t}static formatString(t){return t?.replace(/[\n\r\t ]/g,"")||""}};cn.DEFAULT_UTF8_ENCODING="utf8";function zu(r,...t){let e=arguments[0];for(let n=1;n<arguments.length;n++){let s=arguments[n];for(let o in s)e[o]=s[o]}return e}function $u(...r){let t=r.map(s=>s.byteLength).reduce((s,o)=>s+o),e=new Uint8Array(t),n=0;return r.map(s=>new Uint8Array(s)).forEach(s=>{for(let o of s)e[n++]=o}),e.buffer}function ju(r,t){if(!(r&&t)||r.byteLength!==t.byteLength)return!1;let e=new Uint8Array(r),n=new Uint8Array(t);for(let s=0;s<r.byteLength;s++)if(e[s]!==n[s])return!1;return!0}je.BufferSourceConverter=$t;je.Convert=cn;je.assign=zu;je.combine=$u;je.isEqual=ju});var Sf={};ot(Sf,{hmac:()=>Hr,keys:()=>Eo,pbkdf2:()=>So,randomBytes:()=>uo});var Hr={};ot(Hr,{create:()=>ns});var tr=class extends Error{constructor(t="An error occurred while signing a message"){super(t),this.name="SigningError"}},er=class extends Error{constructor(t="An error occurred while verifying a message"){super(t),this.name="VerificationError"}},Lr=class extends Error{constructor(t="Missing Web Crypto API"){super(t),this.name="WebCryptoMissingError"}};var Ho={get(r=globalThis){let t=r.crypto;if(t?.subtle==null)throw new Lr("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api");return t}};var it=Ho;var Vo={SHA1:20,SHA256:32,SHA512:64};var xc={SHA1:"SHA-1",SHA256:"SHA-256",SHA512:"SHA-512"},wc=async(r,t)=>{let e=await it.get().subtle.sign({name:"HMAC"},r,t);return new Uint8Array(e,0,e.byteLength)};async function ns(r,t){let e=xc[r],n=await it.get().subtle.importKey("raw",t,{name:"HMAC",hash:{name:e}},!1,["sign"]);return{async digest(s){return wc(n,s)},length:Vo[r]}}var Eo={};ot(Eo,{generateEphemeralKeyPair:()=>Ya,generateKeyPair:()=>pf,generateKeyPairFromSeed:()=>mf,keyStretcher:()=>Qa,privateKeyFromProtobuf:()=>wf,privateKeyFromRaw:()=>vf,privateKeyToProtobuf:()=>Bf,publicKeyFromMultihash:()=>xf,publicKeyFromProtobuf:()=>yf,publicKeyFromRaw:()=>bf,publicKeyToProtobuf:()=>dr});var q=class extends Error{static name="InvalidParametersError";constructor(t="Invalid parameters"){super(t),this.name="InvalidParametersError"}},Ie=class extends Error{static name="InvalidPublicKeyError";constructor(t="Invalid public key"){super(t),this.name="InvalidPublicKeyError"}},rr=class extends Error{static name="InvalidPrivateKeyError";constructor(t="Invalid private key"){super(t),this.name="InvalidPrivateKeyError"}};var Qt=class extends Error{static name="UnsupportedKeyTypeError";constructor(t="Unsupported key type"){super(t),this.name="UnsupportedKeyTypeError"}};var cs={};ot(cs,{base58btc:()=>ut,base58flickr:()=>kc});var _f=new Uint8Array(0);function _o(r,t){if(r===t)return!0;if(r.byteLength!==t.byteLength)return!1;for(let e=0;e<r.byteLength;e++)if(r[e]!==t[e])return!1;return!0}function Kt(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function Oo(r){return new TextEncoder().encode(r)}function Mo(r){return new TextDecoder().decode(r)}function vc(r,t){if(r.length>=255)throw new TypeError("Alphabet too long");for(var e=new Uint8Array(256),n=0;n<e.length;n++)e[n]=255;for(var s=0;s<r.length;s++){var o=r.charAt(s),i=o.charCodeAt(0);if(e[i]!==255)throw new TypeError(o+" is ambiguous");e[i]=s}var a=r.length,c=r.charAt(0),u=Math.log(a)/Math.log(256),l=Math.log(256)/Math.log(a);function f(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var y=0,d=0,x=0,B=b.length;x!==B&&b[x]===0;)x++,y++;for(var p=(B-x)*l+1>>>0,k=new Uint8Array(p);x!==B;){for(var R=b[x],T=0,N=p-1;(R!==0||T<d)&&N!==-1;N--,T++)R+=256*k[N]>>>0,k[N]=R%a>>>0,R=R/a>>>0;if(R!==0)throw new Error("Non-zero carry");d=T,x++}for(var U=p-d;U!==p&&k[U]===0;)U++;for(var I=c.repeat(y);U<p;++U)I+=r.charAt(k[U]);return I}function h(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var y=0;if(b[y]!==" "){for(var d=0,x=0;b[y]===c;)d++,y++;for(var B=(b.length-y)*u+1>>>0,p=new Uint8Array(B);b[y];){var k=e[b.charCodeAt(y)];if(k===255)return;for(var R=0,T=B-1;(k!==0||R<x)&&T!==-1;T--,R++)k+=a*p[T]>>>0,p[T]=k%256>>>0,k=k/256>>>0;if(k!==0)throw new Error("Non-zero carry");x=R,y++}if(b[y]!==" "){for(var N=B-x;N!==B&&p[N]===0;)N++;for(var U=new Uint8Array(d+(B-N)),I=d;N!==B;)U[I++]=p[N++];return U}}}function w(b){var y=h(b);if(y)return y;throw new Error(`Non-${t} character`)}return{encode:f,decodeUnsafe:h,decode:w}}var Bc=vc,Ec=Bc,Ko=Ec;var ss=class{name;prefix;baseEncode;constructor(t,e,n){this.name=t,this.prefix=e,this.baseEncode=n}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},os=class{name;prefix;baseDecode;prefixCodePoint;constructor(t,e,n){this.name=t,this.prefix=e;let s=e.codePointAt(0);if(s===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=s,this.baseDecode=n}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return Po(this,t)}},is=class{decoders;constructor(t){this.decoders=t}or(t){return Po(this,t)}decode(t){let e=t[0],n=this.decoders[e];if(n!=null)return n.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Po(r,t){return new is({...r.decoders??{[r.prefix]:r},...t.decoders??{[t.prefix]:t}})}var as=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(t,e,n,s){this.name=t,this.prefix=e,this.baseEncode=n,this.baseDecode=s,this.encoder=new ss(t,e,n),this.decoder=new os(t,e,s)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function Ce({name:r,prefix:t,encode:e,decode:n}){return new as(r,t,e,n)}function te({name:r,prefix:t,alphabet:e}){let{encode:n,decode:s}=Ko(e,r);return Ce({prefix:t,name:r,encode:n,decode:o=>Kt(s(o))})}function Ac(r,t,e,n){let s={};for(let l=0;l<t.length;++l)s[t[l]]=l;let o=r.length;for(;r[o-1]==="=";)--o;let i=new Uint8Array(o*e/8|0),a=0,c=0,u=0;for(let l=0;l<o;++l){let f=s[r[l]];if(f===void 0)throw new SyntaxError(`Non-${n} character`);c=c<<e|f,a+=e,a>=8&&(a-=8,i[u++]=255&c>>a)}if(a>=e||(255&c<<8-a)!==0)throw new SyntaxError("Unexpected end of data");return i}function Sc(r,t,e){let n=t[t.length-1]==="=",s=(1<<e)-1,o="",i=0,a=0;for(let c=0;c<r.length;++c)for(a=a<<8|r[c],i+=8;i>e;)i-=e,o+=t[s&a>>i];if(i!==0&&(o+=t[s&a<<e-i]),n)for(;(o.length*e&7)!==0;)o+="=";return o}function Y({name:r,prefix:t,bitsPerChar:e,alphabet:n}){return Ce({prefix:t,name:r,encode(s){return Sc(s,n,e)},decode(s){return Ac(s,n,e,r)}})}var ut=te({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),kc=te({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var ls={};ot(ls,{base32:()=>Ue,base32hex:()=>Uc,base32hexpad:()=>Rc,base32hexpadupper:()=>Lc,base32hexupper:()=>Tc,base32pad:()=>Ic,base32padupper:()=>Cc,base32upper:()=>Nc,base32z:()=>Hc});var Ue=Y({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),Nc=Y({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Ic=Y({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),Cc=Y({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),Uc=Y({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Tc=Y({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Rc=Y({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),Lc=Y({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Hc=Y({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var us={};ot(us,{base36:()=>nr,base36upper:()=>Vc});var nr=te({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),Vc=te({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var _c=zo,Fo=128,Oc=127,Mc=~Oc,Dc=Math.pow(2,31);function zo(r,t,e){t=t||[],e=e||0;for(var n=e;r>=Dc;)t[e++]=r&255|Fo,r/=128;for(;r&Mc;)t[e++]=r&255|Fo,r>>>=7;return t[e]=r|0,zo.bytes=e-n+1,t}var Kc=fs,Pc=128,qo=127;function fs(r,n){var e=0,n=n||0,s=0,o=n,i,a=r.length;do{if(o>=a)throw fs.bytes=0,new RangeError("Could not decode varint");i=r[o++],e+=s<28?(i&qo)<<s:(i&qo)*Math.pow(2,s),s+=7}while(i>=Pc);return fs.bytes=o-n,e}var Fc=Math.pow(2,7),qc=Math.pow(2,14),zc=Math.pow(2,21),$c=Math.pow(2,28),jc=Math.pow(2,35),Gc=Math.pow(2,42),Zc=Math.pow(2,49),Wc=Math.pow(2,56),Jc=Math.pow(2,63),Yc=function(r){return r<Fc?1:r<qc?2:r<zc?3:r<$c?4:r<jc?5:r<Gc?6:r<Zc?7:r<Wc?8:r<Jc?9:10},Xc={encode:_c,decode:Kc,encodingLength:Yc},Qc=Xc,sr=Qc;function or(r,t=0){return[sr.decode(r,t),sr.decode.bytes]}function Te(r,t,e=0){return sr.encode(r,t,e),t}function Re(r){return sr.encodingLength(r)}function Et(r,t){let e=t.byteLength,n=Re(r),s=n+Re(e),o=new Uint8Array(s+e);return Te(r,o,0),Te(e,o,n),o.set(t,s),new Le(r,e,t,o)}function $o(r){let t=Kt(r),[e,n]=or(t),[s,o]=or(t.subarray(n)),i=t.subarray(n+o);if(i.byteLength!==s)throw new Error("Incorrect length");return new Le(e,s,i,t)}function jo(r,t){if(r===t)return!0;{let e=t;return r.code===e.code&&r.size===e.size&&e.bytes instanceof Uint8Array&&_o(r.bytes,e.bytes)}}var Le=class{code;size;digest;bytes;constructor(t,e,n,s){this.code=t,this.size=e,this.digest=n,this.bytes=s}};function Go(r,t){let{bytes:e,version:n}=r;switch(n){case 0:return el(e,hs(r),t??ut.encoder);default:return rl(e,hs(r),t??Ue.encoder)}}var Zo=new WeakMap;function hs(r){let t=Zo.get(r);if(t==null){let e=new Map;return Zo.set(r,e),e}return t}var Tt=class r{code;version;multihash;bytes;"/";constructor(t,e,n,s){this.code=e,this.version=t,this.multihash=n,this.bytes=s,this["/"]=s}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:t,multihash:e}=this;if(t!==ar)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(e.code!==nl)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(e)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:t,digest:e}=this.multihash,n=Et(t,e);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(t){return r.equals(this,t)}static equals(t,e){let n=e;return n!=null&&t.code===n.code&&t.version===n.version&&jo(t.multihash,n.multihash)}toString(t){return Go(this,t)}toJSON(){return{"/":Go(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(t){if(t==null)return null;let e=t;if(e instanceof r)return e;if(e["/"]!=null&&e["/"]===e.bytes||e.asCID===e){let{version:n,code:s,multihash:o,bytes:i}=e;return new r(n,s,o,i??Wo(n,s,o.bytes))}else if(e[sl]===!0){let{version:n,multihash:s,code:o}=e,i=$o(s);return r.create(n,o,i)}else return null}static create(t,e,n){if(typeof e!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(t){case 0:{if(e!==ar)throw new Error(`Version 0 CID must use dag-pb (code: ${ar}) block encoding`);return new r(t,e,n,n.bytes)}case 1:{let s=Wo(t,e,n.bytes);return new r(t,e,n,s)}default:throw new Error("Invalid version")}}static createV0(t){return r.create(0,ar,t)}static createV1(t,e){return r.create(1,t,e)}static decode(t){let[e,n]=r.decodeFirst(t);if(n.length!==0)throw new Error("Incorrect length");return e}static decodeFirst(t){let e=r.inspectBytes(t),n=e.size-e.multihashSize,s=Kt(t.subarray(n,n+e.multihashSize));if(s.byteLength!==e.multihashSize)throw new Error("Incorrect length");let o=s.subarray(e.multihashSize-e.digestSize),i=new Le(e.multihashCode,e.digestSize,o,s);return[e.version===0?r.createV0(i):r.createV1(e.codec,i),t.subarray(e.size)]}static inspectBytes(t){let e=0,n=()=>{let[f,h]=or(t.subarray(e));return e+=h,f},s=n(),o=ar;if(s===18?(s=0,e=0):o=n(),s!==0&&s!==1)throw new RangeError(`Invalid CID version ${s}`);let i=e,a=n(),c=n(),u=e+c,l=u-i;return{version:s,codec:o,multihashCode:a,digestSize:c,multihashSize:l,size:u}}static parse(t,e){let[n,s]=tl(t,e),o=r.decode(s);if(o.version===0&&t[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return hs(o).set(n,t),o}};function tl(r,t){switch(r[0]){case"Q":{let e=t??ut;return[ut.prefix,e.decode(`${ut.prefix}${r}`)]}case ut.prefix:{let e=t??ut;return[ut.prefix,e.decode(r)]}case Ue.prefix:{let e=t??Ue;return[Ue.prefix,e.decode(r)]}case nr.prefix:{let e=t??nr;return[nr.prefix,e.decode(r)]}default:{if(t==null)throw Error("To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided");return[r[0],t.decode(r)]}}}function el(r,t,e){let{prefix:n}=e;if(n!==ut.prefix)throw Error(`Cannot string encode V0 in ${e.name} encoding`);let s=t.get(n);if(s==null){let o=e.encode(r).slice(1);return t.set(n,o),o}else return s}function rl(r,t,e){let{prefix:n}=e,s=t.get(n);if(s==null){let o=e.encode(r);return t.set(n,o),o}else return s}var ar=112,nl=18;function Wo(r,t,e){let n=Re(r),s=n+Re(t),o=new Uint8Array(s+e.byteLength);return Te(r,o,0),Te(t,o,n),o.set(e,s),o}var sl=Symbol.for("@ipld/js-cid/CID");var ds={};ot(ds,{identity:()=>cr});var Jo=0,ol="identity",Yo=Kt;function il(r){return Et(Jo,Yo(r))}var cr={code:Jo,name:ol,encode:Yo,digest:il};function At(r,t){if(r===t)return!0;if(r.byteLength!==t.byteLength)return!1;for(let e=0;e<r.byteLength;e++)if(r[e]!==t[e])return!1;return!0}function He(r){if(!Number.isSafeInteger(r)||r<0)throw new Error("positive integer expected, got "+r)}function al(r){return r instanceof Uint8Array||ArrayBuffer.isView(r)&&r.constructor.name==="Uint8Array"}function Ve(r,...t){if(!al(r))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(r.length))throw new Error("Uint8Array expected of length "+t+", got length="+r.length)}function _r(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");He(r.outputLen),He(r.blockLen)}function _e(r,t=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(t&&r.finished)throw new Error("Hash#digest() has already been called")}function Xo(r,t){Ve(r);let e=t.outputLen;if(r.length<e)throw new Error("digestInto() expects output buffer of length at least "+e)}var ye=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function Me(r){return new DataView(r.buffer,r.byteOffset,r.byteLength)}function St(r,t){return r<<32-t|r>>>t}function Or(r,t){return r<<t|r>>>32-t>>>0}function Qo(r){if(typeof r!="string")throw new Error("utf8ToBytes expected string, got "+typeof r);return new Uint8Array(new TextEncoder().encode(r))}function ee(r){return typeof r=="string"&&(r=Qo(r)),Ve(r),r}function gs(...r){let t=0;for(let n=0;n<r.length;n++){let s=r[n];Ve(s),t+=s.length}let e=new Uint8Array(t);for(let n=0,s=0;n<r.length;n++){let o=r[n];e.set(o,s),s+=o.length}return e}var Oe=class{clone(){return this._cloneInto()}};function ti(r,t){if(t!==void 0&&{}.toString.call(t)!=="[object Object]")throw new Error("Options should be object or undefined");return Object.assign(r,t)}function De(r){let t=n=>r().update(ee(n)).digest(),e=r();return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=()=>r(),t}function Ke(r=32){if(ye&&typeof ye.getRandomValues=="function")return ye.getRandomValues(new Uint8Array(r));if(ye&&typeof ye.randomBytes=="function")return ye.randomBytes(r);throw new Error("crypto.getRandomValues must be defined")}function cl(r,t,e,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(t,e,n);let s=BigInt(32),o=BigInt(4294967295),i=Number(e>>s&o),a=Number(e&o),c=n?4:0,u=n?0:4;r.setUint32(t+c,i,n),r.setUint32(t+u,a,n)}function Mr(r,t,e){return r&t^~r&e}function Dr(r,t,e){return r&t^r&e^t&e}var re=class extends Oe{constructor(t,e,n,s){super(),this.blockLen=t,this.outputLen=e,this.padOffset=n,this.isLE=s,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=Me(this.buffer)}update(t){_e(this);let{view:e,buffer:n,blockLen:s}=this;t=ee(t);let o=t.length;for(let i=0;i<o;){let a=Math.min(s-this.pos,o-i);if(a===s){let c=Me(t);for(;s<=o-i;i+=s)this.process(c,i);continue}n.set(t.subarray(i,i+a),this.pos),this.pos+=a,i+=a,this.pos===s&&(this.process(e,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){_e(this),Xo(t,this),this.finished=!0;let{buffer:e,view:n,blockLen:s,isLE:o}=this,{pos:i}=this;e[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>s-i&&(this.process(n,0),i=0);for(let f=i;f<s;f++)e[f]=0;cl(n,s-8,BigInt(this.length*8),o),this.process(n,0);let a=Me(t),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let u=c/4,l=this.get();if(u>l.length)throw new Error("_sha2: outputLen bigger than state");for(let f=0;f<u;f++)a.setUint32(4*f,l[f],o)}digest(){let{buffer:t,outputLen:e}=this;this.digestInto(t);let n=t.slice(0,e);return this.destroy(),n}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());let{blockLen:e,buffer:n,length:s,finished:o,destroyed:i,pos:a}=this;return t.length=s,t.pos=a,t.finished=o,t.destroyed=i,s%e&&t.buffer.set(n),t}};var Kr=BigInt(4294967295),ps=BigInt(32);function ei(r,t=!1){return t?{h:Number(r&Kr),l:Number(r>>ps&Kr)}:{h:Number(r>>ps&Kr)|0,l:Number(r&Kr)|0}}function ll(r,t=!1){let e=new Uint32Array(r.length),n=new Uint32Array(r.length);for(let s=0;s<r.length;s++){let{h:o,l:i}=ei(r[s],t);[e[s],n[s]]=[o,i]}return[e,n]}var ul=(r,t)=>BigInt(r>>>0)<<ps|BigInt(t>>>0),fl=(r,t,e)=>r>>>e,hl=(r,t,e)=>r<<32-e|t>>>e,dl=(r,t,e)=>r>>>e|t<<32-e,gl=(r,t,e)=>r<<32-e|t>>>e,pl=(r,t,e)=>r<<64-e|t>>>e-32,ml=(r,t,e)=>r>>>e-32|t<<64-e,yl=(r,t)=>t,bl=(r,t)=>r,xl=(r,t,e)=>r<<e|t>>>32-e,wl=(r,t,e)=>t<<e|r>>>32-e,vl=(r,t,e)=>t<<e-32|r>>>64-e,Bl=(r,t,e)=>r<<e-32|t>>>64-e;function El(r,t,e,n){let s=(t>>>0)+(n>>>0);return{h:r+e+(s/2**32|0)|0,l:s|0}}var Al=(r,t,e)=>(r>>>0)+(t>>>0)+(e>>>0),Sl=(r,t,e,n)=>t+e+n+(r/2**32|0)|0,kl=(r,t,e,n)=>(r>>>0)+(t>>>0)+(e>>>0)+(n>>>0),Nl=(r,t,e,n,s)=>t+e+n+s+(r/2**32|0)|0,Il=(r,t,e,n,s)=>(r>>>0)+(t>>>0)+(e>>>0)+(n>>>0)+(s>>>0),Cl=(r,t,e,n,s,o)=>t+e+n+s+o+(r/2**32|0)|0;var Ul={fromBig:ei,split:ll,toBig:ul,shrSH:fl,shrSL:hl,rotrSH:dl,rotrSL:gl,rotrBH:pl,rotrBL:ml,rotr32H:yl,rotr32L:bl,rotlSH:xl,rotlSL:wl,rotlBH:vl,rotlBL:Bl,add:El,add3L:Al,add3H:Sl,add4L:kl,add4H:Nl,add5H:Cl,add5L:Il},_=Ul;var[Tl,Rl]=_.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(r=>BigInt(r))),ne=new Uint32Array(80),se=new Uint32Array(80),ms=class extends re{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:t,Al:e,Bh:n,Bl:s,Ch:o,Cl:i,Dh:a,Dl:c,Eh:u,El:l,Fh:f,Fl:h,Gh:w,Gl:b,Hh:y,Hl:d}=this;return[t,e,n,s,o,i,a,c,u,l,f,h,w,b,y,d]}set(t,e,n,s,o,i,a,c,u,l,f,h,w,b,y,d){this.Ah=t|0,this.Al=e|0,this.Bh=n|0,this.Bl=s|0,this.Ch=o|0,this.Cl=i|0,this.Dh=a|0,this.Dl=c|0,this.Eh=u|0,this.El=l|0,this.Fh=f|0,this.Fl=h|0,this.Gh=w|0,this.Gl=b|0,this.Hh=y|0,this.Hl=d|0}process(t,e){for(let p=0;p<16;p++,e+=4)ne[p]=t.getUint32(e),se[p]=t.getUint32(e+=4);for(let p=16;p<80;p++){let k=ne[p-15]|0,R=se[p-15]|0,T=_.rotrSH(k,R,1)^_.rotrSH(k,R,8)^_.shrSH(k,R,7),N=_.rotrSL(k,R,1)^_.rotrSL(k,R,8)^_.shrSL(k,R,7),U=ne[p-2]|0,I=se[p-2]|0,j=_.rotrSH(U,I,19)^_.rotrBH(U,I,61)^_.shrSH(U,I,6),P=_.rotrSL(U,I,19)^_.rotrBL(U,I,61)^_.shrSL(U,I,6),M=_.add4L(N,P,se[p-7],se[p-16]),X=_.add4H(M,T,j,ne[p-7],ne[p-16]);ne[p]=X|0,se[p]=M|0}let{Ah:n,Al:s,Bh:o,Bl:i,Ch:a,Cl:c,Dh:u,Dl:l,Eh:f,El:h,Fh:w,Fl:b,Gh:y,Gl:d,Hh:x,Hl:B}=this;for(let p=0;p<80;p++){let k=_.rotrSH(f,h,14)^_.rotrSH(f,h,18)^_.rotrBH(f,h,41),R=_.rotrSL(f,h,14)^_.rotrSL(f,h,18)^_.rotrBL(f,h,41),T=f&w^~f&y,N=h&b^~h&d,U=_.add5L(B,R,N,Rl[p],se[p]),I=_.add5H(U,x,k,T,Tl[p],ne[p]),j=U|0,P=_.rotrSH(n,s,28)^_.rotrBH(n,s,34)^_.rotrBH(n,s,39),M=_.rotrSL(n,s,28)^_.rotrBL(n,s,34)^_.rotrBL(n,s,39),X=n&o^n&a^o&a,E=s&i^s&c^i&c;x=y|0,B=d|0,y=w|0,d=b|0,w=f|0,b=h|0,{h:f,l:h}=_.add(u|0,l|0,I|0,j|0),u=a|0,l=c|0,a=o|0,c=i|0,o=n|0,i=s|0;let C=_.add3L(j,M,E);n=_.add3H(C,I,P,X),s=C|0}({h:n,l:s}=_.add(this.Ah|0,this.Al|0,n|0,s|0)),{h:o,l:i}=_.add(this.Bh|0,this.Bl|0,o|0,i|0),{h:a,l:c}=_.add(this.Ch|0,this.Cl|0,a|0,c|0),{h:u,l}=_.add(this.Dh|0,this.Dl|0,u|0,l|0),{h:f,l:h}=_.add(this.Eh|0,this.El|0,f|0,h|0),{h:w,l:b}=_.add(this.Fh|0,this.Fl|0,w|0,b|0),{h:y,l:d}=_.add(this.Gh|0,this.Gl|0,y|0,d|0),{h:x,l:B}=_.add(this.Hh|0,this.Hl|0,x|0,B|0),this.set(n,s,o,i,a,c,u,l,f,h,w,b,y,d,x,B)}roundClean(){ne.fill(0),se.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};var Pr=De(()=>new ms);var zr={};ot(zr,{aInRange:()=>yt,abool:()=>kt,abytes:()=>Pe,bitGet:()=>Ml,bitLen:()=>ws,bitMask:()=>ur,bitSet:()=>Dl,bytesToHex:()=>Ft,bytesToNumberBE:()=>qt,bytesToNumberLE:()=>ie,concatBytes:()=>zt,createHmacDrbg:()=>vs,ensureBytes:()=>W,equalBytes:()=>_l,hexToBytes:()=>xe,hexToNumber:()=>xs,inRange:()=>lr,isBytes:()=>oe,memoized:()=>ve,notImplemented:()=>Pl,numberToBytesBE:()=>ae,numberToBytesLE:()=>we,numberToHexUnpadded:()=>be,numberToVarBytesBE:()=>Vl,utf8ToBytes:()=>Ol,validateObject:()=>Rt});var Fr=BigInt(0),qr=BigInt(1),Ll=BigInt(2);function oe(r){return r instanceof Uint8Array||ArrayBuffer.isView(r)&&r.constructor.name==="Uint8Array"}function Pe(r){if(!oe(r))throw new Error("Uint8Array expected")}function kt(r,t){if(typeof t!="boolean")throw new Error(r+" boolean expected, got "+t)}var Hl=Array.from({length:256},(r,t)=>t.toString(16).padStart(2,"0"));function Ft(r){Pe(r);let t="";for(let e=0;e<r.length;e++)t+=Hl[r[e]];return t}function be(r){let t=r.toString(16);return t.length&1?"0"+t:t}function xs(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);return r===""?Fr:BigInt("0x"+r)}var Pt={_0:48,_9:57,A:65,F:70,a:97,f:102};function ri(r){if(r>=Pt._0&&r<=Pt._9)return r-Pt._0;if(r>=Pt.A&&r<=Pt.F)return r-(Pt.A-10);if(r>=Pt.a&&r<=Pt.f)return r-(Pt.a-10)}function xe(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);let t=r.length,e=t/2;if(t%2)throw new Error("hex string expected, got unpadded hex of length "+t);let n=new Uint8Array(e);for(let s=0,o=0;s<e;s++,o+=2){let i=ri(r.charCodeAt(o)),a=ri(r.charCodeAt(o+1));if(i===void 0||a===void 0){let c=r[o]+r[o+1];throw new Error('hex string expected, got non-hex character "'+c+'" at index '+o)}n[s]=i*16+a}return n}function qt(r){return xs(Ft(r))}function ie(r){return Pe(r),xs(Ft(Uint8Array.from(r).reverse()))}function ae(r,t){return xe(r.toString(16).padStart(t*2,"0"))}function we(r,t){return ae(r,t).reverse()}function Vl(r){return xe(be(r))}function W(r,t,e){let n;if(typeof t=="string")try{n=xe(t)}catch(o){throw new Error(r+" must be hex string or Uint8Array, cause: "+o)}else if(oe(t))n=Uint8Array.from(t);else throw new Error(r+" must be hex string or Uint8Array");let s=n.length;if(typeof e=="number"&&s!==e)throw new Error(r+" of length "+e+" expected, got "+s);return n}function zt(...r){let t=0;for(let n=0;n<r.length;n++){let s=r[n];Pe(s),t+=s.length}let e=new Uint8Array(t);for(let n=0,s=0;n<r.length;n++){let o=r[n];e.set(o,s),s+=o.length}return e}function _l(r,t){if(r.length!==t.length)return!1;let e=0;for(let n=0;n<r.length;n++)e|=r[n]^t[n];return e===0}function Ol(r){if(typeof r!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(r))}var ys=r=>typeof r=="bigint"&&Fr<=r;function lr(r,t,e){return ys(r)&&ys(t)&&ys(e)&&t<=r&&r<e}function yt(r,t,e,n){if(!lr(t,e,n))throw new Error("expected valid "+r+": "+e+" <= n < "+n+", got "+t)}function ws(r){let t;for(t=0;r>Fr;r>>=qr,t+=1);return t}function Ml(r,t){return r>>BigInt(t)&qr}function Dl(r,t,e){return r|(e?qr:Fr)<<BigInt(t)}var ur=r=>(Ll<<BigInt(r-1))-qr,bs=r=>new Uint8Array(r),ni=r=>Uint8Array.from(r);function vs(r,t,e){if(typeof r!="number"||r<2)throw new Error("hashLen must be a number");if(typeof t!="number"||t<2)throw new Error("qByteLen must be a number");if(typeof e!="function")throw new Error("hmacFn must be a function");let n=bs(r),s=bs(r),o=0,i=()=>{n.fill(1),s.fill(0),o=0},a=(...f)=>e(s,n,...f),c=(f=bs())=>{s=a(ni([0]),f),n=a(),f.length!==0&&(s=a(ni([1]),f),n=a())},u=()=>{if(o++>=1e3)throw new Error("drbg: tried 1000 values");let f=0,h=[];for(;f<t;){n=a();let w=n.slice();h.push(w),f+=n.length}return zt(...h)};return(f,h)=>{i(),c(f);let w;for(;!(w=h(u()));)c();return i(),w}}var Kl={bigint:r=>typeof r=="bigint",function:r=>typeof r=="function",boolean:r=>typeof r=="boolean",string:r=>typeof r=="string",stringOrUint8Array:r=>typeof r=="string"||oe(r),isSafeInteger:r=>Number.isSafeInteger(r),array:r=>Array.isArray(r),field:(r,t)=>t.Fp.isValid(r),hash:r=>typeof r=="function"&&Number.isSafeInteger(r.outputLen)};function Rt(r,t,e={}){let n=(s,o,i)=>{let a=Kl[o];if(typeof a!="function")throw new Error("invalid validator function");let c=r[s];if(!(i&&c===void 0)&&!a(c,r))throw new Error("param "+String(s)+" is invalid. Expected "+o+", got "+c)};for(let[s,o]of Object.entries(t))n(s,o,!1);for(let[s,o]of Object.entries(e))n(s,o,!0);return r}var Pl=()=>{throw new Error("not implemented")};function ve(r){let t=new WeakMap;return(e,...n)=>{let s=t.get(e);if(s!==void 0)return s;let o=r(e,...n);return t.set(e,o),o}}var Q=BigInt(0),G=BigInt(1),Be=BigInt(2),Fl=BigInt(3),Bs=BigInt(4),si=BigInt(5),oi=BigInt(8),ql=BigInt(9),zl=BigInt(16);function z(r,t){let e=r%t;return e>=Q?e:t+e}function $l(r,t,e){if(t<Q)throw new Error("invalid exponent, negatives unsupported");if(e<=Q)throw new Error("invalid modulus");if(e===G)return Q;let n=G;for(;t>Q;)t&G&&(n=n*r%e),r=r*r%e,t>>=G;return n}function Z(r,t,e){let n=r;for(;t-- >Q;)n*=n,n%=e;return n}function $r(r,t){if(r===Q)throw new Error("invert: expected non-zero number");if(t<=Q)throw new Error("invert: expected positive modulus, got "+t);let e=z(r,t),n=t,s=Q,o=G,i=G,a=Q;for(;e!==Q;){let u=n/e,l=n%e,f=s-i*u,h=o-a*u;n=e,e=l,s=i,o=a,i=f,a=h}if(n!==G)throw new Error("invert: does not exist");return z(s,t)}function jl(r){let t=(r-G)/Be,e,n,s;for(e=r-G,n=0;e%Be===Q;e/=Be,n++);for(s=Be;s<r&&$l(s,t,r)!==r-G;s++)if(s>1e3)throw new Error("Cannot find square root: likely non-prime P");if(n===1){let i=(r+G)/Bs;return function(c,u){let l=c.pow(u,i);if(!c.eql(c.sqr(l),u))throw new Error("Cannot find square root");return l}}let o=(e+G)/Be;return function(a,c){if(a.pow(c,t)===a.neg(a.ONE))throw new Error("Cannot find square root");let u=n,l=a.pow(a.mul(a.ONE,s),e),f=a.pow(c,o),h=a.pow(c,e);for(;!a.eql(h,a.ONE);){if(a.eql(h,a.ZERO))return a.ZERO;let w=1;for(let y=a.sqr(h);w<u&&!a.eql(y,a.ONE);w++)y=a.sqr(y);let b=a.pow(l,G<<BigInt(u-w-1));l=a.sqr(b),f=a.mul(f,b),h=a.mul(h,l),u=w}return f}}function Gl(r){if(r%Bs===Fl){let t=(r+G)/Bs;return function(n,s){let o=n.pow(s,t);if(!n.eql(n.sqr(o),s))throw new Error("Cannot find square root");return o}}if(r%oi===si){let t=(r-si)/oi;return function(n,s){let o=n.mul(s,Be),i=n.pow(o,t),a=n.mul(s,i),c=n.mul(n.mul(a,Be),i),u=n.mul(a,n.sub(c,n.ONE));if(!n.eql(n.sqr(u),s))throw new Error("Cannot find square root");return u}}return r%zl,jl(r)}var ii=(r,t)=>(z(r,t)&G)===G,Zl=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function Es(r){let t={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},e=Zl.reduce((n,s)=>(n[s]="function",n),t);return Rt(r,e)}function Wl(r,t,e){if(e<Q)throw new Error("invalid exponent, negatives unsupported");if(e===Q)return r.ONE;if(e===G)return t;let n=r.ONE,s=t;for(;e>Q;)e&G&&(n=r.mul(n,s)),s=r.sqr(s),e>>=G;return n}function Jl(r,t){let e=new Array(t.length),n=t.reduce((o,i,a)=>r.is0(i)?o:(e[a]=o,r.mul(o,i)),r.ONE),s=r.inv(n);return t.reduceRight((o,i,a)=>r.is0(i)?o:(e[a]=r.mul(o,e[a]),r.mul(o,i)),s),e}function As(r,t){let e=t!==void 0?t:r.toString(2).length,n=Math.ceil(e/8);return{nBitLength:e,nByteLength:n}}function ce(r,t,e=!1,n={}){if(r<=Q)throw new Error("invalid field: expected ORDER > 0, got "+r);let{nBitLength:s,nByteLength:o}=As(r,t);if(o>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let i,a=Object.freeze({ORDER:r,isLE:e,BITS:s,BYTES:o,MASK:ur(s),ZERO:Q,ONE:G,create:c=>z(c,r),isValid:c=>{if(typeof c!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof c);return Q<=c&&c<r},is0:c=>c===Q,isOdd:c=>(c&G)===G,neg:c=>z(-c,r),eql:(c,u)=>c===u,sqr:c=>z(c*c,r),add:(c,u)=>z(c+u,r),sub:(c,u)=>z(c-u,r),mul:(c,u)=>z(c*u,r),pow:(c,u)=>Wl(a,c,u),div:(c,u)=>z(c*$r(u,r),r),sqrN:c=>c*c,addN:(c,u)=>c+u,subN:(c,u)=>c-u,mulN:(c,u)=>c*u,inv:c=>$r(c,r),sqrt:n.sqrt||(c=>(i||(i=Gl(r)),i(a,c))),invertBatch:c=>Jl(a,c),cmov:(c,u,l)=>l?u:c,toBytes:c=>e?we(c,o):ae(c,o),fromBytes:c=>{if(c.length!==o)throw new Error("Field.fromBytes: expected "+o+" bytes, got "+c.length);return e?ie(c):qt(c)}});return Object.freeze(a)}function ai(r){if(typeof r!="bigint")throw new Error("field order must be bigint");let t=r.toString(2).length;return Math.ceil(t/8)}function Ss(r){let t=ai(r);return t+Math.ceil(t/2)}function ci(r,t,e=!1){let n=r.length,s=ai(t),o=Ss(t);if(n<16||n<o||n>1024)throw new Error("expected "+o+"-1024 bytes of input, got "+n);let i=e?ie(r):qt(r),a=z(i,t-G)+G;return e?we(a,s):ae(a,s)}var li=BigInt(0),jr=BigInt(1);function ks(r,t){let e=t.negate();return r?e:t}function ui(r,t){if(!Number.isSafeInteger(r)||r<=0||r>t)throw new Error("invalid window size, expected [1.."+t+"], got W="+r)}function Ns(r,t){ui(r,t);let e=Math.ceil(t/r)+1,n=2**(r-1);return{windows:e,windowSize:n}}function Yl(r,t){if(!Array.isArray(r))throw new Error("array expected");r.forEach((e,n)=>{if(!(e instanceof t))throw new Error("invalid point at index "+n)})}function Xl(r,t){if(!Array.isArray(r))throw new Error("array of scalars expected");r.forEach((e,n)=>{if(!t.isValid(e))throw new Error("invalid scalar at index "+n)})}var Is=new WeakMap,fi=new WeakMap;function Cs(r){return fi.get(r)||1}function Gr(r,t){return{constTimeNegate:ks,hasPrecomputes(e){return Cs(e)!==1},unsafeLadder(e,n,s=r.ZERO){let o=e;for(;n>li;)n&jr&&(s=s.add(o)),o=o.double(),n>>=jr;return s},precomputeWindow(e,n){let{windows:s,windowSize:o}=Ns(n,t),i=[],a=e,c=a;for(let u=0;u<s;u++){c=a,i.push(c);for(let l=1;l<o;l++)c=c.add(a),i.push(c);a=c.double()}return i},wNAF(e,n,s){let{windows:o,windowSize:i}=Ns(e,t),a=r.ZERO,c=r.BASE,u=BigInt(2**e-1),l=2**e,f=BigInt(e);for(let h=0;h<o;h++){let w=h*i,b=Number(s&u);s>>=f,b>i&&(b-=l,s+=jr);let y=w,d=w+Math.abs(b)-1,x=h%2!==0,B=b<0;b===0?c=c.add(ks(x,n[y])):a=a.add(ks(B,n[d]))}return{p:a,f:c}},wNAFUnsafe(e,n,s,o=r.ZERO){let{windows:i,windowSize:a}=Ns(e,t),c=BigInt(2**e-1),u=2**e,l=BigInt(e);for(let f=0;f<i;f++){let h=f*a;if(s===li)break;let w=Number(s&c);if(s>>=l,w>a&&(w-=u,s+=jr),w===0)continue;let b=n[h+Math.abs(w)-1];w<0&&(b=b.negate()),o=o.add(b)}return o},getPrecomputes(e,n,s){let o=Is.get(n);return o||(o=this.precomputeWindow(n,e),e!==1&&Is.set(n,s(o))),o},wNAFCached(e,n,s){let o=Cs(e);return this.wNAF(o,this.getPrecomputes(o,e,s),n)},wNAFCachedUnsafe(e,n,s,o){let i=Cs(e);return i===1?this.unsafeLadder(e,n,o):this.wNAFUnsafe(i,this.getPrecomputes(i,e,s),n,o)},setWindowSize(e,n){ui(n,t),fi.set(e,n),Is.delete(e)}}}function Zr(r,t,e,n){if(Yl(e,r),Xl(n,t),e.length!==n.length)throw new Error("arrays of points and scalars must have equal length");let s=r.ZERO,o=ws(BigInt(e.length)),i=o>12?o-3:o>4?o-2:o?2:1,a=(1<<i)-1,c=new Array(a+1).fill(s),u=Math.floor((t.BITS-1)/i)*i,l=s;for(let f=u;f>=0;f-=i){c.fill(s);for(let w=0;w<n.length;w++){let b=n[w],y=Number(b>>BigInt(f)&BigInt(a));c[y]=c[y].add(e[w])}let h=s;for(let w=c.length-1,b=s;w>0;w--)b=b.add(c[w]),h=h.add(b);if(l=l.add(h),f!==0)for(let w=0;w<i;w++)l=l.double()}return l}function fr(r){return Es(r.Fp),Rt(r,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...As(r.n,r.nBitLength),...r,p:r.Fp.ORDER})}var Nt=BigInt(0),bt=BigInt(1),Wr=BigInt(2),Ql=BigInt(8),tu={zip215:!0};function eu(r){let t=fr(r);return Rt(r,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...t})}function hi(r){let t=eu(r),{Fp:e,n,prehash:s,hash:o,randomBytes:i,nByteLength:a,h:c}=t,u=Wr<<BigInt(a*8)-bt,l=e.create,f=ce(t.n,t.nBitLength),h=t.uvRatio||((m,g)=>{try{return{isValid:!0,value:e.sqrt(m*e.inv(g))}}catch{return{isValid:!1,value:Nt}}}),w=t.adjustScalarBytes||(m=>m),b=t.domain||((m,g,v)=>{if(kt("phflag",v),g.length||v)throw new Error("Contexts/pre-hash are not supported");return m});function y(m,g){yt("coordinate "+m,g,Nt,u)}function d(m){if(!(m instanceof p))throw new Error("ExtendedPoint expected")}let x=ve((m,g)=>{let{ex:v,ey:S,ez:L}=m,H=m.is0();g==null&&(g=H?Ql:e.inv(L));let O=l(v*g),K=l(S*g),V=l(L*g);if(H)return{x:Nt,y:bt};if(V!==bt)throw new Error("invZ was invalid");return{x:O,y:K}}),B=ve(m=>{let{a:g,d:v}=t;if(m.is0())throw new Error("bad point: ZERO");let{ex:S,ey:L,ez:H,et:O}=m,K=l(S*S),V=l(L*L),F=l(H*H),$=l(F*F),et=l(K*g),rt=l(F*l(et+V)),st=l($+l(v*l(K*V)));if(rt!==st)throw new Error("bad point: equation left != right (1)");let lt=l(S*L),mt=l(H*O);if(lt!==mt)throw new Error("bad point: equation left != right (2)");return!0});class p{constructor(g,v,S,L){this.ex=g,this.ey=v,this.ez=S,this.et=L,y("x",g),y("y",v),y("z",S),y("t",L),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(g){if(g instanceof p)throw new Error("extended point not allowed");let{x:v,y:S}=g||{};return y("x",v),y("y",S),new p(v,S,bt,l(v*S))}static normalizeZ(g){let v=e.invertBatch(g.map(S=>S.ez));return g.map((S,L)=>S.toAffine(v[L])).map(p.fromAffine)}static msm(g,v){return Zr(p,f,g,v)}_setWindowSize(g){T.setWindowSize(this,g)}assertValidity(){B(this)}equals(g){d(g);let{ex:v,ey:S,ez:L}=this,{ex:H,ey:O,ez:K}=g,V=l(v*K),F=l(H*L),$=l(S*K),et=l(O*L);return V===F&&$===et}is0(){return this.equals(p.ZERO)}negate(){return new p(l(-this.ex),this.ey,this.ez,l(-this.et))}double(){let{a:g}=t,{ex:v,ey:S,ez:L}=this,H=l(v*v),O=l(S*S),K=l(Wr*l(L*L)),V=l(g*H),F=v+S,$=l(l(F*F)-H-O),et=V+O,rt=et-K,st=V-O,lt=l($*rt),mt=l(et*st),dt=l($*st),Ut=l(rt*et);return new p(lt,mt,Ut,dt)}add(g){d(g);let{a:v,d:S}=t,{ex:L,ey:H,ez:O,et:K}=this,{ex:V,ey:F,ez:$,et}=g;if(v===BigInt(-1)){let ko=l((H-L)*(F+V)),No=l((H+L)*(F-V)),rs=l(No-ko);if(rs===Nt)return this.double();let Io=l(O*Wr*et),Co=l(K*Wr*$),Uo=Co+Io,To=No+ko,Ro=Co-Io,ac=l(Uo*rs),cc=l(To*Ro),lc=l(Uo*Ro),uc=l(rs*To);return new p(ac,cc,uc,lc)}let rt=l(L*V),st=l(H*F),lt=l(K*S*et),mt=l(O*$),dt=l((L+H)*(V+F)-rt-st),Ut=mt-lt,Dt=mt+lt,Qe=l(st-v*rt),nc=l(dt*Ut),sc=l(Dt*Qe),oc=l(dt*Qe),ic=l(Ut*Dt);return new p(nc,sc,ic,oc)}subtract(g){return this.add(g.negate())}wNAF(g){return T.wNAFCached(this,g,p.normalizeZ)}multiply(g){let v=g;yt("scalar",v,bt,n);let{p:S,f:L}=this.wNAF(v);return p.normalizeZ([S,L])[0]}multiplyUnsafe(g,v=p.ZERO){let S=g;return yt("scalar",S,Nt,n),S===Nt?R:this.is0()||S===bt?this:T.wNAFCachedUnsafe(this,S,p.normalizeZ,v)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}isTorsionFree(){return T.unsafeLadder(this,n).is0()}toAffine(g){return x(this,g)}clearCofactor(){let{h:g}=t;return g===bt?this:this.multiplyUnsafe(g)}static fromHex(g,v=!1){let{d:S,a:L}=t,H=e.BYTES;g=W("pointHex",g,H),kt("zip215",v);let O=g.slice(),K=g[H-1];O[H-1]=K&-129;let V=ie(O),F=v?u:e.ORDER;yt("pointHex.y",V,Nt,F);let $=l(V*V),et=l($-bt),rt=l(S*$-L),{isValid:st,value:lt}=h(et,rt);if(!st)throw new Error("Point.fromHex: invalid y coordinate");let mt=(lt&bt)===bt,dt=(K&128)!==0;if(!v&&lt===Nt&&dt)throw new Error("Point.fromHex: x=0 and x_0=1");return dt!==mt&&(lt=l(-lt)),p.fromAffine({x:lt,y:V})}static fromPrivateKey(g){return I(g).point}toRawBytes(){let{x:g,y:v}=this.toAffine(),S=we(v,e.BYTES);return S[S.length-1]|=g&bt?128:0,S}toHex(){return Ft(this.toRawBytes())}}p.BASE=new p(t.Gx,t.Gy,bt,l(t.Gx*t.Gy)),p.ZERO=new p(Nt,bt,bt,Nt);let{BASE:k,ZERO:R}=p,T=Gr(p,a*8);function N(m){return z(m,n)}function U(m){return N(ie(m))}function I(m){let g=e.BYTES;m=W("private key",m,g);let v=W("hashed private key",o(m),2*g),S=w(v.slice(0,g)),L=v.slice(g,2*g),H=U(S),O=k.multiply(H),K=O.toRawBytes();return{head:S,prefix:L,scalar:H,point:O,pointBytes:K}}function j(m){return I(m).pointBytes}function P(m=new Uint8Array,...g){let v=zt(...g);return U(o(b(v,W("context",m),!!s)))}function M(m,g,v={}){m=W("message",m),s&&(m=s(m));let{prefix:S,scalar:L,pointBytes:H}=I(g),O=P(v.context,S,m),K=k.multiply(O).toRawBytes(),V=P(v.context,K,H,m),F=N(O+V*L);yt("signature.s",F,Nt,n);let $=zt(K,we(F,e.BYTES));return W("result",$,e.BYTES*2)}let X=tu;function E(m,g,v,S=X){let{context:L,zip215:H}=S,O=e.BYTES;m=W("signature",m,2*O),g=W("message",g),v=W("publicKey",v,O),H!==void 0&&kt("zip215",H),s&&(g=s(g));let K=ie(m.slice(O,2*O)),V,F,$;try{V=p.fromHex(v,H),F=p.fromHex(m.slice(0,O),H),$=k.multiplyUnsafe(K)}catch{return!1}if(!H&&V.isSmallOrder())return!1;let et=P(L,F.toRawBytes(),V.toRawBytes(),g);return F.add(V.multiplyUnsafe(et)).subtract($).clearCofactor().equals(p.ZERO)}return k._setWindowSize(8),{CURVE:t,getPublicKey:j,sign:M,verify:E,ExtendedPoint:p,utils:{getExtendedPublicKey:I,randomPrivateKey:()=>i(e.BYTES),precompute(m=8,g=p.BASE){return g._setWindowSize(m),g.multiply(BigInt(3)),g}}}}var Us=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),di=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),Ih=BigInt(0),ru=BigInt(1),gi=BigInt(2),Ch=BigInt(3),nu=BigInt(5),su=BigInt(8);function ou(r){let t=BigInt(10),e=BigInt(20),n=BigInt(40),s=BigInt(80),o=Us,a=r*r%o*r%o,c=Z(a,gi,o)*a%o,u=Z(c,ru,o)*r%o,l=Z(u,nu,o)*u%o,f=Z(l,t,o)*l%o,h=Z(f,e,o)*f%o,w=Z(h,n,o)*h%o,b=Z(w,s,o)*w%o,y=Z(b,s,o)*w%o,d=Z(y,t,o)*l%o;return{pow_p_5_8:Z(d,gi,o)*r%o,b2:a}}function iu(r){return r[0]&=248,r[31]&=127,r[31]|=64,r}function au(r,t){let e=Us,n=z(t*t*t,e),s=z(n*n*t,e),o=ou(r*s).pow_p_5_8,i=z(r*n*o,e),a=z(t*i*i,e),c=i,u=z(i*di,e),l=a===r,f=a===z(-r,e),h=a===z(-r*di,e);return l&&(i=c),(f||h)&&(i=u),ii(i,e)&&(i=z(-i,e)),{isValid:l||f,value:i}}var cu=ce(Us,void 0,!0),lu={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:cu,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:su,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:Pr,randomBytes:Ke,adjustScalarBytes:iu,uvRatio:au},Fe=hi(lu);var qe=32,Lt=64,Jr=32;function pi(){let r=Fe.utils.randomPrivateKey(),t=Fe.getPublicKey(r);return{privateKey:xi(r,t),publicKey:t}}function mi(r){if(r.length!==Jr)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');let t=r,e=Fe.getPublicKey(t);return{privateKey:xi(t,e),publicKey:e}}function yi(r,t){let e=r.subarray(0,Jr);return Fe.sign(t instanceof Uint8Array?t:t.subarray(),e)}function bi(r,t,e){return Fe.verify(t,e instanceof Uint8Array?e:e.subarray(),r)}function xi(r,t){let e=new Uint8Array(Lt);for(let n=0;n<Jr;n++)e[n]=r[n],e[Jr+n]=t[n];return e}var hr=class{type="Ed25519";raw;constructor(t){this.raw=ze(t,qe)}toMultihash(){return cr.digest(dr(this))}toCID(){return Tt.createV1(114,this.toMultihash())}toString(){return ut.encode(this.toMultihash().bytes).substring(1)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:At(this.raw,t.raw)}verify(t,e){return bi(this.raw,e,t)}},Ee=class{type="Ed25519";raw;publicKey;constructor(t,e){this.raw=ze(t,Lt),this.publicKey=new hr(e)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:At(this.raw,t.raw)}sign(t){return yi(this.raw,t)}};function Ts(r){if(r.length>Lt){r=ze(r,Lt+qe);let n=r.subarray(0,Lt),s=r.subarray(Lt,r.length);return new Ee(n,s)}r=ze(r,Lt);let t=r.subarray(0,Lt),e=r.subarray(qe);return new Ee(t,e)}function Yr(r){return r=ze(r,qe),new hr(r)}async function vi(){let{privateKey:r,publicKey:t}=pi();return new Ee(r,t)}async function Bi(r){let{privateKey:t,publicKey:e}=mi(r);return new Ee(t,e)}function ze(r,t){if(r=Uint8Array.from(r??[]),r.length!==t)throw new q(`Key must be a Uint8Array of length ${t}, got ${r.length}`);return r}function Ht(r=0){return new Uint8Array(r)}var uu=Math.pow(2,7),fu=Math.pow(2,14),hu=Math.pow(2,21),Ei=Math.pow(2,28),Ai=Math.pow(2,35),Si=Math.pow(2,42),ki=Math.pow(2,49),gt=128,le=127;function gr(r){if(r<uu)return 1;if(r<fu)return 2;if(r<hu)return 3;if(r<Ei)return 4;if(r<Ai)return 5;if(r<Si)return 6;if(r<ki)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function Ni(r,t,e=0){switch(gr(r)){case 8:t[e++]=r&255|gt,r/=128;case 7:t[e++]=r&255|gt,r/=128;case 6:t[e++]=r&255|gt,r/=128;case 5:t[e++]=r&255|gt,r/=128;case 4:t[e++]=r&255|gt,r>>>=7;case 3:t[e++]=r&255|gt,r>>>=7;case 2:t[e++]=r&255|gt,r>>>=7;case 1:{t[e++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return t}function Ii(r,t){let e=r[t],n=0;if(n+=e&le,e<gt||(e=r[t+1],n+=(e&le)<<7,e<gt)||(e=r[t+2],n+=(e&le)<<14,e<gt)||(e=r[t+3],n+=(e&le)<<21,e<gt)||(e=r[t+4],n+=(e&le)*Ei,e<gt)||(e=r[t+5],n+=(e&le)*Ai,e<gt)||(e=r[t+6],n+=(e&le)*Si,e<gt)||(e=r[t+7],n+=(e&le)*ki,e<gt))return n;throw new RangeError("Could not decode varint")}var Rs=new Float32Array([-0]),ue=new Uint8Array(Rs.buffer);function Ci(r,t,e){Rs[0]=r,t[e]=ue[0],t[e+1]=ue[1],t[e+2]=ue[2],t[e+3]=ue[3]}function Ui(r,t){return ue[0]=r[t],ue[1]=r[t+1],ue[2]=r[t+2],ue[3]=r[t+3],Rs[0]}var Ls=new Float64Array([-0]),ft=new Uint8Array(Ls.buffer);function Ti(r,t,e){Ls[0]=r,t[e]=ft[0],t[e+1]=ft[1],t[e+2]=ft[2],t[e+3]=ft[3],t[e+4]=ft[4],t[e+5]=ft[5],t[e+6]=ft[6],t[e+7]=ft[7]}function Ri(r,t){return ft[0]=r[t],ft[1]=r[t+1],ft[2]=r[t+2],ft[3]=r[t+3],ft[4]=r[t+4],ft[5]=r[t+5],ft[6]=r[t+6],ft[7]=r[t+7],Ls[0]}var du=BigInt(Number.MAX_SAFE_INTEGER),gu=BigInt(Number.MIN_SAFE_INTEGER),wt=class r{lo;hi;constructor(t,e){this.lo=t|0,this.hi=e|0}toNumber(t=!1){if(!t&&this.hi>>>31>0){let e=~this.lo+1>>>0,n=~this.hi>>>0;return e===0&&(n=n+1>>>0),-(e+n*4294967296)}return this.lo+this.hi*4294967296}toBigInt(t=!1){if(t)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let e=~this.lo+1>>>0,n=~this.hi>>>0;return e===0&&(n=n+1>>>0),-(BigInt(e)+(BigInt(n)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(t=!1){return this.toBigInt(t).toString()}zzEncode(){let t=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^t)>>>0,this.lo=(this.lo<<1^t)>>>0,this}zzDecode(){let t=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^t)>>>0,this.hi=(this.hi>>>1^t)>>>0,this}length(){let t=this.lo,e=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return n===0?e===0?t<16384?t<128?1:2:t<2097152?3:4:e<16384?e<128?5:6:e<2097152?7:8:n<128?9:10}static fromBigInt(t){if(t===0n)return Ae;if(t<du&&t>gu)return this.fromNumber(Number(t));let e=t<0n;e&&(t=-t);let n=t>>32n,s=t-(n<<32n);return e&&(n=~n|0n,s=~s|0n,++s>Li&&(s=0n,++n>Li&&(n=0n))),new r(Number(s),Number(n))}static fromNumber(t){if(t===0)return Ae;let e=t<0;e&&(t=-t);let n=t>>>0,s=(t-n)/4294967296>>>0;return e&&(s=~s>>>0,n=~n>>>0,++n>4294967295&&(n=0,++s>4294967295&&(s=0))),new r(n,s)}static from(t){return typeof t=="number"?r.fromNumber(t):typeof t=="bigint"?r.fromBigInt(t):typeof t=="string"?r.fromBigInt(BigInt(t)):t.low!=null||t.high!=null?new r(t.low>>>0,t.high>>>0):Ae}},Ae=new wt(0,0);Ae.toBigInt=function(){return 0n};Ae.zzEncode=Ae.zzDecode=function(){return this};Ae.length=function(){return 1};var Li=4294967296n;function Hi(r){let t=0,e=0;for(let n=0;n<r.length;++n)e=r.charCodeAt(n),e<128?t+=1:e<2048?t+=2:(e&64512)===55296&&(r.charCodeAt(n+1)&64512)===56320?(++n,t+=4):t+=3;return t}function Vi(r,t,e){if(e-t<1)return"";let s,o=[],i=0,a;for(;t<e;)a=r[t++],a<128?o[i++]=a:a>191&&a<224?o[i++]=(a&31)<<6|r[t++]&63:a>239&&a<365?(a=((a&7)<<18|(r[t++]&63)<<12|(r[t++]&63)<<6|r[t++]&63)-65536,o[i++]=55296+(a>>10),o[i++]=56320+(a&1023)):o[i++]=(a&15)<<12|(r[t++]&63)<<6|r[t++]&63,i>8191&&((s??(s=[])).push(String.fromCharCode.apply(String,o)),i=0);return s!=null?(i>0&&s.push(String.fromCharCode.apply(String,o.slice(0,i))),s.join("")):String.fromCharCode.apply(String,o.slice(0,i))}function Hs(r,t,e){let n=e,s,o;for(let i=0;i<r.length;++i)s=r.charCodeAt(i),s<128?t[e++]=s:s<2048?(t[e++]=s>>6|192,t[e++]=s&63|128):(s&64512)===55296&&((o=r.charCodeAt(i+1))&64512)===56320?(s=65536+((s&1023)<<10)+(o&1023),++i,t[e++]=s>>18|240,t[e++]=s>>12&63|128,t[e++]=s>>6&63|128,t[e++]=s&63|128):(t[e++]=s>>12|224,t[e++]=s>>6&63|128,t[e++]=s&63|128);return e-n}function It(r,t){return RangeError(`index out of range: ${r.pos} + ${t??1} > ${r.len}`)}function Xr(r,t){return(r[t-4]|r[t-3]<<8|r[t-2]<<16|r[t-1]<<24)>>>0}var Vs=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(t){this.buf=t,this.pos=0,this.len=t.length}uint32(){let t=4294967295;if(t=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(t=(t|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return t;if((this.pos+=5)>this.len)throw this.pos=this.len,It(this,10);return t}int32(){return this.uint32()|0}sint32(){let t=this.uint32();return t>>>1^-(t&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw It(this,4);return Xr(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw It(this,4);return Xr(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw It(this,4);let t=Ui(this.buf,this.pos);return this.pos+=4,t}double(){if(this.pos+8>this.len)throw It(this,4);let t=Ri(this.buf,this.pos);return this.pos+=8,t}bytes(){let t=this.uint32(),e=this.pos,n=this.pos+t;if(n>this.len)throw It(this,t);return this.pos+=t,e===n?new Uint8Array(0):this.buf.subarray(e,n)}string(){let t=this.bytes();return Vi(t,0,t.length)}skip(t){if(typeof t=="number"){if(this.pos+t>this.len)throw It(this,t);this.pos+=t}else do if(this.pos>=this.len)throw It(this);while((this.buf[this.pos++]&128)!==0);return this}skipType(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(t=this.uint32()&7)!==4;)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${t} at offset ${this.pos}`)}return this}readLongVarint(){let t=new wt(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(this.buf[this.pos]&127)<<28)>>>0,t.hi=(t.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return t;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw It(this);if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,t}if(this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw It(this);if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw It(this,8);let t=Xr(this.buf,this.pos+=4),e=Xr(this.buf,this.pos+=4);return new wt(t,e)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let t=Ii(this.buf,this.pos);return this.pos+=gr(t),t}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function _s(r){return new Vs(r instanceof Uint8Array?r:r.subarray())}function Qr(r,t,e){let n=_s(r);return t.decode(n,void 0,e)}var Os={};ot(Os,{base10:()=>pu});var pu=te({prefix:"9",name:"base10",alphabet:"0123456789"});var Ms={};ot(Ms,{base16:()=>mu,base16upper:()=>yu});var mu=Y({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),yu=Y({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Ds={};ot(Ds,{base2:()=>bu});var bu=Y({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Ks={};ot(Ks,{base256emoji:()=>Eu});var Oi=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),xu=Oi.reduce((r,t,e)=>(r[e]=t,r),[]),wu=Oi.reduce((r,t,e)=>{let n=t.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${t}`);return r[n]=e,r},[]);function vu(r){return r.reduce((t,e)=>(t+=xu[e],t),"")}function Bu(r){let t=[];for(let e of r){let n=e.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${e}`);let s=wu[n];if(s==null)throw new Error(`Non-base256emoji character: ${e}`);t.push(s)}return new Uint8Array(t)}var Eu=Ce({prefix:"\u{1F680}",name:"base256emoji",encode:vu,decode:Bu});var Fs={};ot(Fs,{base64:()=>Ps,base64pad:()=>Au,base64url:()=>Su,base64urlpad:()=>ku});var Ps=Y({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Au=Y({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Su=Y({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),ku=Y({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var qs={};ot(qs,{base8:()=>Nu});var Nu=Y({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var zs={};ot(zs,{identity:()=>Iu});var Iu=Ce({prefix:"\0",name:"identity",encode:r=>Mo(r),decode:r=>Oo(r)});var cd=new TextEncoder,ld=new TextDecoder;var Gs={};ot(Gs,{sha256:()=>tn,sha512:()=>Tu});function js({name:r,code:t,encode:e}){return new $s(r,t,e)}var $s=class{name;code;encode;constructor(t,e,n){this.name=t,this.code=e,this.encode=n}digest(t){if(t instanceof Uint8Array){let e=this.encode(t);return e instanceof Uint8Array?Et(this.code,e):e.then(n=>Et(this.code,n))}else throw Error("Unknown type, must be binary type")}};function Di(r){return async t=>new Uint8Array(await crypto.subtle.digest(r,t))}var tn=js({name:"sha2-256",code:18,encode:Di("SHA-256")}),Tu=js({name:"sha2-512",code:19,encode:Di("SHA-512")});var Zs={...zs,...Ds,...qs,...Os,...Ms,...ls,...us,...cs,...Fs,...Ks},vd={...Gs,...ds};function Pi(r,t,e,n){return{name:r,prefix:t,encoder:{name:r,prefix:t,encode:e},decoder:{decode:n}}}var Ki=Pi("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),Ws=Pi("ascii","a",r=>{let t="a";for(let e=0;e<r.length;e++)t+=String.fromCharCode(r[e]);return t},r=>{r=r.substring(1);let t=Ht(r.length);for(let e=0;e<r.length;e++)t[e]=r.charCodeAt(e);return t}),Ru={utf8:Ki,"utf-8":Ki,hex:Zs.base16,latin1:Ws,ascii:Ws,binary:Ws,...Zs},en=Ru;function tt(r,t="utf8"){let e=en[t];if(e==null)throw new Error(`Unsupported encoding "${t}"`);return e.decoder.decode(`${e.prefix}${r}`)}function Js(r){let t=r??8192,e=t>>>1,n,s=t;return function(i){if(i<1||i>e)return Ht(i);s+i>t&&(n=Ht(t),s=0);let a=n.subarray(s,s+=i);return(s&7)!==0&&(s=(s|7)+1),a}}var Se=class{fn;len;next;val;constructor(t,e,n){this.fn=t,this.len=e,this.next=void 0,this.val=n}};function Ys(){}var Qs=class{head;tail;len;next;constructor(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}},Lu=Js();function Hu(r){return globalThis.Buffer!=null?Ht(r):Lu(r)}var mr=class{len;head;tail;states;constructor(){this.len=0,this.head=new Se(Ys,0,0),this.tail=this.head,this.states=null}_push(t,e,n){return this.tail=this.tail.next=new Se(t,e,n),this.len+=e,this}uint32(t){return this.len+=(this.tail=this.tail.next=new to((t=t>>>0)<128?1:t<16384?2:t<2097152?3:t<268435456?4:5,t)).len,this}int32(t){return t<0?this._push(rn,10,wt.fromNumber(t)):this.uint32(t)}sint32(t){return this.uint32((t<<1^t>>31)>>>0)}uint64(t){let e=wt.fromBigInt(t);return this._push(rn,e.length(),e)}uint64Number(t){return this._push(Ni,gr(t),t)}uint64String(t){return this.uint64(BigInt(t))}int64(t){return this.uint64(t)}int64Number(t){return this.uint64Number(t)}int64String(t){return this.uint64String(t)}sint64(t){let e=wt.fromBigInt(t).zzEncode();return this._push(rn,e.length(),e)}sint64Number(t){let e=wt.fromNumber(t).zzEncode();return this._push(rn,e.length(),e)}sint64String(t){return this.sint64(BigInt(t))}bool(t){return this._push(Xs,1,t?1:0)}fixed32(t){return this._push(pr,4,t>>>0)}sfixed32(t){return this.fixed32(t)}fixed64(t){let e=wt.fromBigInt(t);return this._push(pr,4,e.lo)._push(pr,4,e.hi)}fixed64Number(t){let e=wt.fromNumber(t);return this._push(pr,4,e.lo)._push(pr,4,e.hi)}fixed64String(t){return this.fixed64(BigInt(t))}sfixed64(t){return this.fixed64(t)}sfixed64Number(t){return this.fixed64Number(t)}sfixed64String(t){return this.fixed64String(t)}float(t){return this._push(Ci,4,t)}double(t){return this._push(Ti,8,t)}bytes(t){let e=t.length>>>0;return e===0?this._push(Xs,1,0):this.uint32(e)._push(_u,e,t)}string(t){let e=Hi(t);return e!==0?this.uint32(e)._push(Hs,e,t):this._push(Xs,1,0)}fork(){return this.states=new Qs(this),this.head=this.tail=new Se(Ys,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Se(Ys,0,0),this.len=0),this}ldelim(){let t=this.head,e=this.tail,n=this.len;return this.reset().uint32(n),n!==0&&(this.tail.next=t.next,this.tail=e,this.len+=n),this}finish(){let t=this.head.next,e=Hu(this.len),n=0;for(;t!=null;)t.fn(t.val,e,n),n+=t.len,t=t.next;return e}};function Xs(r,t,e){t[e]=r&255}function Vu(r,t,e){for(;r>127;)t[e++]=r&127|128,r>>>=7;t[e]=r}var to=class extends Se{next;constructor(t,e){super(Vu,t,e),this.next=void 0}};function rn(r,t,e){for(;r.hi!==0;)t[e++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)t[e++]=r.lo&127|128,r.lo=r.lo>>>7;t[e++]=r.lo}function pr(r,t,e){t[e]=r&255,t[e+1]=r>>>8&255,t[e+2]=r>>>16&255,t[e+3]=r>>>24}function _u(r,t,e){t.set(r,e)}globalThis.Buffer!=null&&(mr.prototype.bytes=function(r){let t=r.length>>>0;return this.uint32(t),t>0&&this._push(Ou,t,r),this},mr.prototype.string=function(r){let t=globalThis.Buffer.byteLength(r);return this.uint32(t),t>0&&this._push(Mu,t,r),this});function Ou(r,t,e){t.set(r,e)}function Mu(r,t,e){r.length<40?Hs(r,t,e):t.utf8Write!=null?t.utf8Write(r,e):t.set(tt(r),e)}function eo(){return new mr}function nn(r,t){let e=eo();return t.encode(r,e,{lengthDelimited:!1}),e.finish()}var $e;(function(r){r[r.VARINT=0]="VARINT",r[r.BIT64=1]="BIT64",r[r.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",r[r.START_GROUP=3]="START_GROUP",r[r.END_GROUP=4]="END_GROUP",r[r.BIT32=5]="BIT32"})($e||($e={}));function sn(r,t,e,n){return{name:r,type:t,encode:e,decode:n}}function ro(r){function t(s){if(r[s.toString()]==null)throw new Error("Invalid enum value");return r[s]}let e=function(o,i){let a=t(o);i.int32(a)},n=function(o){let i=o.int32();return t(i)};return sn("enum",$e.VARINT,e,n)}function on(r,t){return sn("message",$e.LENGTH_DELIMITED,r,t)}var J;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.secp256k1="secp256k1"})(J||(J={}));var no;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.secp256k1=2]="secp256k1"})(no||(no={}));(function(r){r.codec=()=>ro(no)})(J||(J={}));var Vt;(function(r){let t;r.codec=()=>(t==null&&(t=on((e,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),e.Type!=null&&(n.uint32(8),J.codec().encode(e.Type,n)),e.Data!=null&&(n.uint32(18),n.bytes(e.Data)),s.lengthDelimited!==!1&&n.ldelim()},(e,n,s={})=>{let o={},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let a=e.uint32();switch(a>>>3){case 1:{o.Type=J.codec().decode(e);break}case 2:{o.Data=e.bytes();break}default:{e.skipType(a&7);break}}}return o})),t),r.encode=e=>nn(e,r.codec()),r.decode=(e,n)=>Qr(e,r.codec(),n)})(Vt||(Vt={}));var yr;(function(r){let t;r.codec=()=>(t==null&&(t=on((e,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),e.Type!=null&&(n.uint32(8),J.codec().encode(e.Type,n)),e.Data!=null&&(n.uint32(18),n.bytes(e.Data)),s.lengthDelimited!==!1&&n.ldelim()},(e,n,s={})=>{let o={},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let a=e.uint32();switch(a>>>3){case 1:{o.Type=J.codec().decode(e);break}case 2:{o.Data=e.bytes();break}default:{e.skipType(a&7);break}}}return o})),t),r.encode=e=>nn(e,r.codec()),r.decode=(e,n)=>Qr(e,r.codec(),n)})(yr||(yr={}));var kr={};ot(kr,{MAX_RSA_KEY_SIZE:()=>Jn,generateRSAKeyPair:()=>po,jwkToJWKKeyPair:()=>_a,jwkToPkcs1:()=>tf,jwkToPkix:()=>go,jwkToRSAPrivateKey:()=>Va,pkcs1ToJwk:()=>La,pkcs1ToRSAPrivateKey:()=>Yn,pkixToJwk:()=>Ha,pkixToRSAPublicKey:()=>Xn});var Du=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),fe=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),he=new Uint32Array(64),so=class extends re{constructor(){super(64,32,8,!1),this.A=fe[0]|0,this.B=fe[1]|0,this.C=fe[2]|0,this.D=fe[3]|0,this.E=fe[4]|0,this.F=fe[5]|0,this.G=fe[6]|0,this.H=fe[7]|0}get(){let{A:t,B:e,C:n,D:s,E:o,F:i,G:a,H:c}=this;return[t,e,n,s,o,i,a,c]}set(t,e,n,s,o,i,a,c){this.A=t|0,this.B=e|0,this.C=n|0,this.D=s|0,this.E=o|0,this.F=i|0,this.G=a|0,this.H=c|0}process(t,e){for(let f=0;f<16;f++,e+=4)he[f]=t.getUint32(e,!1);for(let f=16;f<64;f++){let h=he[f-15],w=he[f-2],b=St(h,7)^St(h,18)^h>>>3,y=St(w,17)^St(w,19)^w>>>10;he[f]=y+he[f-7]+b+he[f-16]|0}let{A:n,B:s,C:o,D:i,E:a,F:c,G:u,H:l}=this;for(let f=0;f<64;f++){let h=St(a,6)^St(a,11)^St(a,25),w=l+h+Mr(a,c,u)+Du[f]+he[f]|0,y=(St(n,2)^St(n,13)^St(n,22))+Dr(n,s,o)|0;l=u,u=c,c=a,a=i+w|0,i=o,o=s,s=n,n=w+y|0}n=n+this.A|0,s=s+this.B|0,o=o+this.C|0,i=i+this.D|0,a=a+this.E|0,c=c+this.F|0,u=u+this.G|0,l=l+this.H|0,this.set(n,s,o,i,a,c,u,l)}roundClean(){he.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};var de=De(()=>new so);var D=yc(qi());function ke(r,t){let e=0;if(r.length===1)return r[0];for(let n=r.length-1;n>=0;n--)e+=r[r.length-1-n]*Math.pow(2,t*n);return e}function ge(r,t,e=-1){let n=e,s=r,o=0,i=Math.pow(2,t);for(let a=1;a<8;a++){if(r<i){let c;if(n<0)c=new ArrayBuffer(a),o=a;else{if(n<a)return new ArrayBuffer(0);c=new ArrayBuffer(n),o=n}let u=new Uint8Array(c);for(let l=a-1;l>=0;l--){let f=Math.pow(2,l*t);u[o-l-1]=Math.floor(s/f),s-=u[o-l-1]*f}return c}i*=Math.pow(2,t)}return new ArrayBuffer(0)}function ln(...r){let t=0,e=0;for(let o of r)t+=o.length;let n=new ArrayBuffer(t),s=new Uint8Array(n);for(let o of r)s.set(o,e),e+=o.length;return s}function io(){let r=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){let a=r[0]===255&&r[1]&128,c=r[0]===0&&(r[1]&128)===0;(a||c)&&this.warnings.push("Needlessly long format")}let t=new ArrayBuffer(this.valueHex.byteLength),e=new Uint8Array(t);for(let a=0;a<this.valueHex.byteLength;a++)e[a]=0;e[0]=r[0]&128;let n=ke(e,8),s=new ArrayBuffer(this.valueHex.byteLength),o=new Uint8Array(s);for(let a=0;a<this.valueHex.byteLength;a++)o[a]=r[a];return o[0]&=127,ke(o,8)-n}function zi(r){let t=r<0?r*-1:r,e=128;for(let n=1;n<8;n++){if(t<=e){if(r<0){let i=e-t,a=ge(i,8,n),c=new Uint8Array(a);return c[0]|=128,a}let s=ge(t,8,n),o=new Uint8Array(s);if(o[0]&128){let i=s.slice(0),a=new Uint8Array(i);s=new ArrayBuffer(s.byteLength+1),o=new Uint8Array(s);for(let c=0;c<i.byteLength;c++)o[c+1]=a[c];o[0]=0}return s}e*=Math.pow(2,8)}return new ArrayBuffer(0)}function $i(r,t){if(r.byteLength!==t.byteLength)return!1;let e=new Uint8Array(r),n=new Uint8Array(t);for(let s=0;s<e.length;s++)if(e[s]!==n[s])return!1;return!0}function xt(r,t){let e=r.toString(10);if(t<e.length)return"";let n=t-e.length,s=new Array(n);for(let i=0;i<n;i++)s[i]="0";return s.join("").concat(e)}var r0=Math.log(2);function un(){if(typeof BigInt>"u")throw new Error("BigInt is not defined. Your environment doesn't implement BigInt.")}function ao(r){let t=0,e=0;for(let s=0;s<r.length;s++){let o=r[s];t+=o.byteLength}let n=new Uint8Array(t);for(let s=0;s<r.length;s++){let o=r[s];n.set(new Uint8Array(o),e),e+=o.byteLength}return n.buffer}function Wt(r,t,e,n){return t instanceof Uint8Array?t.byteLength?e<0?(r.error="Wrong parameter: inputOffset less than zero",!1):n<0?(r.error="Wrong parameter: inputLength less than zero",!1):t.byteLength-e-n<0?(r.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1):!0:(r.error="Wrong parameter: inputBuffer has zero length",!1):(r.error="Wrong parameter: inputBuffer must be 'Uint8Array'",!1)}var xr=class{constructor(){this.items=[]}write(t){this.items.push(t)}final(){return ao(this.items)}},br=[new Uint8Array([1])],ji="0123456789";var Je="",Ct=new ArrayBuffer(0),co=new Uint8Array(0),wr="EndOfContent",Zi="OCTET STRING",Wi="BIT STRING";function Jt(r){var t;return t=class extends r{constructor(...n){var s;super(...n);let o=n[0]||{};this.isHexOnly=(s=o.isHexOnly)!==null&&s!==void 0?s:!1,this.valueHexView=o.valueHex?D.BufferSourceConverter.toUint8Array(o.valueHex):co}get valueHex(){return this.valueHexView.slice().buffer}set valueHex(n){this.valueHexView=new Uint8Array(n)}fromBER(n,s,o){let i=n instanceof ArrayBuffer?new Uint8Array(n):n;if(!Wt(this,i,s,o))return-1;let a=s+o;return this.valueHexView=i.subarray(s,a),this.valueHexView.length?(this.blockLength=o,a):(this.warnings.push("Zero buffer length"),s)}toBER(n=!1){return this.isHexOnly?n?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.byteLength===this.valueHexView.buffer.byteLength?this.valueHexView.buffer:this.valueHexView.slice().buffer:(this.error="Flag 'isHexOnly' is not set, abort",Ct)}toJSON(){return{...super.toJSON(),isHexOnly:this.isHexOnly,valueHex:D.Convert.ToHex(this.valueHexView)}}},t.NAME="hexBlock",t}var jt=class{constructor({blockLength:t=0,error:e=Je,warnings:n=[],valueBeforeDecode:s=co}={}){this.blockLength=t,this.error=e,this.warnings=n,this.valueBeforeDecodeView=D.BufferSourceConverter.toUint8Array(s)}static blockName(){return this.NAME}get valueBeforeDecode(){return this.valueBeforeDecodeView.slice().buffer}set valueBeforeDecode(t){this.valueBeforeDecodeView=new Uint8Array(t)}toJSON(){return{blockName:this.constructor.NAME,blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:D.Convert.ToHex(this.valueBeforeDecodeView)}}};jt.NAME="baseBlock";var ht=class extends jt{fromBER(t,e,n){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}toBER(t,e){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}};ht.NAME="valueBlock";var fn=class extends Jt(jt){constructor({idBlock:t={}}={}){var e,n,s,o;super(),t?(this.isHexOnly=(e=t.isHexOnly)!==null&&e!==void 0?e:!1,this.valueHexView=t.valueHex?D.BufferSourceConverter.toUint8Array(t.valueHex):co,this.tagClass=(n=t.tagClass)!==null&&n!==void 0?n:-1,this.tagNumber=(s=t.tagNumber)!==null&&s!==void 0?s:-1,this.isConstructed=(o=t.isConstructed)!==null&&o!==void 0?o:!1):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}toBER(t=!1){let e=0;switch(this.tagClass){case 1:e|=0;break;case 2:e|=64;break;case 3:e|=128;break;case 4:e|=192;break;default:return this.error="Unknown tag class",Ct}if(this.isConstructed&&(e|=32),this.tagNumber<31&&!this.isHexOnly){let s=new Uint8Array(1);if(!t){let o=this.tagNumber;o&=31,e|=o,s[0]=e}return s.buffer}if(!this.isHexOnly){let s=ge(this.tagNumber,7),o=new Uint8Array(s),i=s.byteLength,a=new Uint8Array(i+1);if(a[0]=e|31,!t){for(let c=0;c<i-1;c++)a[c+1]=o[c]|128;a[i]=o[i-1]}return a.buffer}let n=new Uint8Array(this.valueHexView.byteLength+1);if(n[0]=e|31,!t){let s=this.valueHexView;for(let o=0;o<s.length-1;o++)n[o+1]=s[o]|128;n[this.valueHexView.byteLength]=s[s.length-1]}return n.buffer}fromBER(t,e,n){let s=D.BufferSourceConverter.toUint8Array(t);if(!Wt(this,s,e,n))return-1;let o=s.subarray(e,e+n);if(o.length===0)return this.error="Zero buffer length",-1;switch(o[0]&192){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=(o[0]&32)===32,this.isHexOnly=!1;let a=o[0]&31;if(a!==31)this.tagNumber=a,this.blockLength=1;else{let c=1,u=this.valueHexView=new Uint8Array(255),l=255;for(;o[c]&128;){if(u[c-1]=o[c]&127,c++,c>=o.length)return this.error="End of input reached before message was fully decoded",-1;if(c===l){l+=255;let h=new Uint8Array(l);for(let w=0;w<u.length;w++)h[w]=u[w];u=this.valueHexView=new Uint8Array(l)}}this.blockLength=c+1,u[c-1]=o[c]&127;let f=new Uint8Array(c);for(let h=0;h<c;h++)f[h]=u[h];u=this.valueHexView=new Uint8Array(c),u.set(f),this.blockLength<=9?this.tagNumber=ke(u,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(this.tagClass===1&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 13:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return e+this.blockLength}toJSON(){return{...super.toJSON(),tagClass:this.tagClass,tagNumber:this.tagNumber,isConstructed:this.isConstructed}}};fn.NAME="identificationBlock";var hn=class extends jt{constructor({lenBlock:t={}}={}){var e,n,s;super(),this.isIndefiniteForm=(e=t.isIndefiniteForm)!==null&&e!==void 0?e:!1,this.longFormUsed=(n=t.longFormUsed)!==null&&n!==void 0?n:!1,this.length=(s=t.length)!==null&&s!==void 0?s:0}fromBER(t,e,n){let s=D.BufferSourceConverter.toUint8Array(t);if(!Wt(this,s,e,n))return-1;let o=s.subarray(e,e+n);if(o.length===0)return this.error="Zero buffer length",-1;if(o[0]===255)return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=o[0]===128,this.isIndefiniteForm)return this.blockLength=1,e+this.blockLength;if(this.longFormUsed=!!(o[0]&128),this.longFormUsed===!1)return this.length=o[0],this.blockLength=1,e+this.blockLength;let i=o[0]&127;if(i>8)return this.error="Too big integer",-1;if(i+1>o.length)return this.error="End of input reached before message was fully decoded",-1;let a=e+1,c=s.subarray(a,a+i);return c[i-1]===0&&this.warnings.push("Needlessly long encoded length"),this.length=ke(c,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unnecessary usage of long length form"),this.blockLength=i+1,e+this.blockLength}toBER(t=!1){let e,n;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return e=new ArrayBuffer(1),t===!1&&(n=new Uint8Array(e),n[0]=128),e;if(this.longFormUsed){let s=ge(this.length,8);if(s.byteLength>127)return this.error="Too big length",Ct;if(e=new ArrayBuffer(s.byteLength+1),t)return e;let o=new Uint8Array(s);n=new Uint8Array(e),n[0]=s.byteLength|128;for(let i=0;i<s.byteLength;i++)n[i+1]=o[i];return e}return e=new ArrayBuffer(1),t===!1&&(n=new Uint8Array(e),n[0]=this.length),e}toJSON(){return{...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,longFormUsed:this.longFormUsed,length:this.length}}};hn.NAME="lengthBlock";var A={},at=class extends jt{constructor({name:t=Je,optional:e=!1,primitiveSchema:n,...s}={},o){super(s),this.name=t,this.optional=e,n&&(this.primitiveSchema=n),this.idBlock=new fn(s),this.lenBlock=new hn(s),this.valueBlock=o?new o(s):new ht(s)}fromBER(t,e,n){let s=this.valueBlock.fromBER(t,e,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return s===-1?(this.error=this.valueBlock.error,s):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),s)}toBER(t,e){let n=e||new xr;e||Ji(this);let s=this.idBlock.toBER(t);if(n.write(s),this.lenBlock.isIndefiniteForm)n.write(new Uint8Array([128]).buffer),this.valueBlock.toBER(t,n),n.write(new ArrayBuffer(2));else{let o=this.valueBlock.toBER(t);this.lenBlock.length=o.byteLength;let i=this.lenBlock.toBER(t);n.write(i),n.write(o)}return e?Ct:n.final()}toJSON(){let t={...super.toJSON(),idBlock:this.idBlock.toJSON(),lenBlock:this.lenBlock.toJSON(),valueBlock:this.valueBlock.toJSON(),name:this.name,optional:this.optional};return this.primitiveSchema&&(t.primitiveSchema=this.primitiveSchema.toJSON()),t}toString(t="ascii"){return t==="ascii"?this.onAsciiEncoding():D.Convert.ToHex(this.toBER())}onAsciiEncoding(){return`${this.constructor.NAME} : ${D.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`}isEqual(t){if(this===t)return!0;if(!(t instanceof this.constructor))return!1;let e=this.toBER(),n=t.toBER();return $i(e,n)}};at.NAME="BaseBlock";function Ji(r){if(r instanceof A.Constructed)for(let t of r.valueBlock.value)Ji(t)&&(r.lenBlock.isIndefiniteForm=!0);return!!r.lenBlock.isIndefiniteForm}var dn=class extends at{constructor({value:t=Je,...e}={},n){super(e,n),t&&this.fromString(t)}getValue(){return this.valueBlock.value}setValue(t){this.valueBlock.value=t}fromBER(t,e,n){let s=this.valueBlock.fromBER(t,e,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return s===-1?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHexView),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),s)}onAsciiEncoding(){return`${this.constructor.NAME} : '${this.valueBlock.value}'`}};dn.NAME="BaseStringBlock";var gn=class extends Jt(ht){constructor({isHexOnly:t=!0,...e}={}){super(e),this.isHexOnly=t}};gn.NAME="PrimitiveValueBlock";var Yi,pn=class extends at{constructor(t={}){super(t,gn),this.idBlock.isConstructed=!1}};Yi=pn;A.Primitive=Yi;pn.NAME="PRIMITIVE";function Zu(r,t){if(r instanceof t)return r;let e=new t;return e.idBlock=r.idBlock,e.lenBlock=r.lenBlock,e.warnings=r.warnings,e.valueBeforeDecodeView=r.valueBeforeDecodeView,e}function Wn(r,t=0,e=r.length){let n=t,s=new at({},ht),o=new jt;if(!Wt(o,r,t,e))return s.error=o.error,{offset:-1,result:s};if(!r.subarray(t,t+e).length)return s.error="Zero buffer length",{offset:-1,result:s};let a=s.idBlock.fromBER(r,t,e);if(s.idBlock.warnings.length&&s.warnings.concat(s.idBlock.warnings),a===-1)return s.error=s.idBlock.error,{offset:-1,result:s};if(t=a,e-=s.idBlock.blockLength,a=s.lenBlock.fromBER(r,t,e),s.lenBlock.warnings.length&&s.warnings.concat(s.lenBlock.warnings),a===-1)return s.error=s.lenBlock.error,{offset:-1,result:s};if(t=a,e-=s.lenBlock.blockLength,!s.idBlock.isConstructed&&s.lenBlock.isIndefiniteForm)return s.error="Indefinite length form used for primitive encoding form",{offset:-1,result:s};let c=at;switch(s.idBlock.tagClass){case 1:if(s.idBlock.tagNumber>=37&&s.idBlock.isHexOnly===!1)return s.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:s};switch(s.idBlock.tagNumber){case 0:if(s.idBlock.isConstructed&&s.lenBlock.length>0)return s.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:s};c=A.EndOfContent;break;case 1:c=A.Boolean;break;case 2:c=A.Integer;break;case 3:c=A.BitString;break;case 4:c=A.OctetString;break;case 5:c=A.Null;break;case 6:c=A.ObjectIdentifier;break;case 10:c=A.Enumerated;break;case 12:c=A.Utf8String;break;case 13:c=A.RelativeObjectIdentifier;break;case 14:c=A.TIME;break;case 15:return s.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:s};case 16:c=A.Sequence;break;case 17:c=A.Set;break;case 18:c=A.NumericString;break;case 19:c=A.PrintableString;break;case 20:c=A.TeletexString;break;case 21:c=A.VideotexString;break;case 22:c=A.IA5String;break;case 23:c=A.UTCTime;break;case 24:c=A.GeneralizedTime;break;case 25:c=A.GraphicString;break;case 26:c=A.VisibleString;break;case 27:c=A.GeneralString;break;case 28:c=A.UniversalString;break;case 29:c=A.CharacterString;break;case 30:c=A.BmpString;break;case 31:c=A.DATE;break;case 32:c=A.TimeOfDay;break;case 33:c=A.DateTime;break;case 34:c=A.Duration;break;default:{let u=s.idBlock.isConstructed?new A.Constructed:new A.Primitive;u.idBlock=s.idBlock,u.lenBlock=s.lenBlock,u.warnings=s.warnings,s=u}}break;case 2:case 3:case 4:default:c=s.idBlock.isConstructed?A.Constructed:A.Primitive}return s=Zu(s,c),a=s.fromBER(r,t,s.lenBlock.isIndefiniteForm?e:s.lenBlock.length),s.valueBeforeDecodeView=r.subarray(n,n+s.blockLength),{offset:a,result:s}}function lo(r){if(!r.byteLength){let t=new at({},ht);return t.error="Input buffer has zero length",{offset:-1,result:t}}return Wn(D.BufferSourceConverter.toUint8Array(r).slice(),0,r.byteLength)}function Wu(r,t){return r?1:t}var _t=class extends ht{constructor({value:t=[],isIndefiniteForm:e=!1,...n}={}){super(n),this.value=t,this.isIndefiniteForm=e}fromBER(t,e,n){let s=D.BufferSourceConverter.toUint8Array(t);if(!Wt(this,s,e,n))return-1;if(this.valueBeforeDecodeView=s.subarray(e,e+n),this.valueBeforeDecodeView.length===0)return this.warnings.push("Zero buffer length"),e;let o=e;for(;Wu(this.isIndefiniteForm,n)>0;){let i=Wn(s,o,n);if(i.offset===-1)return this.error=i.result.error,this.warnings.concat(i.result.warnings),-1;if(o=i.offset,this.blockLength+=i.result.blockLength,n-=i.result.blockLength,this.value.push(i.result),this.isIndefiniteForm&&i.result.constructor.NAME===wr)break}return this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.NAME===wr?this.value.pop():this.warnings.push("No EndOfContent block encoded")),o}toBER(t,e){let n=e||new xr;for(let s=0;s<this.value.length;s++)this.value[s].toBER(t,n);return e?Ct:n.final()}toJSON(){let t={...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,value:[]};for(let e of this.value)t.value.push(e.toJSON());return t}};_t.NAME="ConstructedValueBlock";var Xi,pe=class extends at{constructor(t={}){super(t,_t),this.idBlock.isConstructed=!0}fromBER(t,e,n){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;let s=this.valueBlock.fromBER(t,e,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return s===-1?(this.error=this.valueBlock.error,s):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),s)}onAsciiEncoding(){let t=[];for(let n of this.valueBlock.value)t.push(n.toString("ascii").split(`
-`).map(s=>`  ${s}`).join(`
-`));let e=this.idBlock.tagClass===3?`[${this.idBlock.tagNumber}]`:this.constructor.NAME;return t.length?`${e} :
-${t.join(`
-`)}`:`${e} :`}};Xi=pe;A.Constructed=Xi;pe.NAME="CONSTRUCTED";var mn=class extends ht{fromBER(t,e,n){return e}toBER(t){return Ct}};mn.override="EndOfContentValueBlock";var Qi,yn=class extends at{constructor(t={}){super(t,mn),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}};Qi=yn;A.EndOfContent=Qi;yn.NAME=wr;var ta,Ge=class extends at{constructor(t={}){super(t,ht),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}fromBER(t,e,n){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=n,e+n>t.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):e+n}toBER(t,e){let n=new ArrayBuffer(2);if(!t){let s=new Uint8Array(n);s[0]=5,s[1]=0}return e&&e.write(n),n}onAsciiEncoding(){return`${this.constructor.NAME}`}};ta=Ge;A.Null=ta;Ge.NAME="NULL";var bn=class extends Jt(ht){constructor({value:t,...e}={}){super(e),e.valueHex?this.valueHexView=D.BufferSourceConverter.toUint8Array(e.valueHex):this.valueHexView=new Uint8Array(1),t&&(this.value=t)}get value(){for(let t of this.valueHexView)if(t>0)return!0;return!1}set value(t){this.valueHexView[0]=t?255:0}fromBER(t,e,n){let s=D.BufferSourceConverter.toUint8Array(t);return Wt(this,s,e,n)?(this.valueHexView=s.subarray(e,e+n),n>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,io.call(this),this.blockLength=n,e+n):-1}toBER(){return this.valueHexView.slice()}toJSON(){return{...super.toJSON(),value:this.value}}};bn.NAME="BooleanValueBlock";var ea,xn=class extends at{constructor(t={}){super(t,bn),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}getValue(){return this.valueBlock.value}setValue(t){this.valueBlock.value=t}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.getValue}`}};ea=xn;A.Boolean=ea;xn.NAME="BOOLEAN";var wn=class extends Jt(_t){constructor({isConstructed:t=!1,...e}={}){super(e),this.isConstructed=t}fromBER(t,e,n){let s=0;if(this.isConstructed){if(this.isHexOnly=!1,s=_t.prototype.fromBER.call(this,t,e,n),s===-1)return s;for(let o=0;o<this.value.length;o++){let i=this.value[o].constructor.NAME;if(i===wr){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(i!==Zi)return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,s=super.fromBER(t,e,n),this.blockLength=n;return s}toBER(t,e){return this.isConstructed?_t.prototype.toBER.call(this,t,e):t?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),isConstructed:this.isConstructed}}};wn.NAME="OctetStringValueBlock";var ra,vn=class r extends at{constructor({idBlock:t={},lenBlock:e={},...n}={}){var s,o;(s=n.isConstructed)!==null&&s!==void 0||(n.isConstructed=!!(!((o=n.value)===null||o===void 0)&&o.length)),super({idBlock:{isConstructed:n.isConstructed,...t},lenBlock:{...e,isIndefiniteForm:!!n.isIndefiniteForm},...n},wn),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(t,e,n){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,n===0)return this.idBlock.error.length===0&&(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length===0&&(this.blockLength+=this.lenBlock.blockLength),e;if(!this.valueBlock.isConstructed){let o=(t instanceof ArrayBuffer?new Uint8Array(t):t).subarray(e,e+n);try{if(o.byteLength){let i=Wn(o,0,o.byteLength);i.offset!==-1&&i.offset===n&&(this.valueBlock.value=[i.result])}}catch{}}return super.fromBER(t,e,n)}onAsciiEncoding(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?pe.prototype.onAsciiEncoding.call(this):`${this.constructor.NAME} : ${D.Convert.ToHex(this.valueBlock.valueHexView)}`}getValue(){if(!this.idBlock.isConstructed)return this.valueBlock.valueHexView.slice().buffer;let t=[];for(let e of this.valueBlock.value)e instanceof r&&t.push(e.valueBlock.valueHexView);return D.BufferSourceConverter.concat(t)}};ra=vn;A.OctetString=ra;vn.NAME=Zi;var Bn=class extends Jt(_t){constructor({unusedBits:t=0,isConstructed:e=!1,...n}={}){super(n),this.unusedBits=t,this.isConstructed=e,this.blockLength=this.valueHexView.byteLength}fromBER(t,e,n){if(!n)return e;let s=-1;if(this.isConstructed){if(s=_t.prototype.fromBER.call(this,t,e,n),s===-1)return s;for(let a of this.value){let c=a.constructor.NAME;if(c===wr){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(c!==Wi)return this.error="BIT STRING may consists of BIT STRINGs only",-1;let u=a.valueBlock;if(this.unusedBits>0&&u.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;this.unusedBits=u.unusedBits}return s}let o=D.BufferSourceConverter.toUint8Array(t);if(!Wt(this,o,e,n))return-1;let i=o.subarray(e,e+n);if(this.unusedBits=i[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){let a=i.subarray(1);try{if(a.byteLength){let c=Wn(a,0,a.byteLength);c.offset!==-1&&c.offset===n-1&&(this.value=[c.result])}}catch{}}return this.valueHexView=i.subarray(1),this.blockLength=i.length,e+n}toBER(t,e){if(this.isConstructed)return _t.prototype.toBER.call(this,t,e);if(t)return new ArrayBuffer(this.valueHexView.byteLength+1);if(!this.valueHexView.byteLength)return Ct;let n=new Uint8Array(this.valueHexView.length+1);return n[0]=this.unusedBits,n.set(this.valueHexView,1),n.buffer}toJSON(){return{...super.toJSON(),unusedBits:this.unusedBits,isConstructed:this.isConstructed}}};Bn.NAME="BitStringValueBlock";var na,Ze=class extends at{constructor({idBlock:t={},lenBlock:e={},...n}={}){var s,o;(s=n.isConstructed)!==null&&s!==void 0||(n.isConstructed=!!(!((o=n.value)===null||o===void 0)&&o.length)),super({idBlock:{isConstructed:n.isConstructed,...t},lenBlock:{...e,isIndefiniteForm:!!n.isIndefiniteForm},...n},Bn),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}fromBER(t,e,n){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(t,e,n)}onAsciiEncoding(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return pe.prototype.onAsciiEncoding.call(this);{let t=[],e=this.valueBlock.valueHexView;for(let s of e)t.push(s.toString(2).padStart(8,"0"));let n=t.join("");return`${this.constructor.NAME} : ${n.substring(0,n.length-this.valueBlock.unusedBits)}`}}};na=Ze;A.BitString=na;Ze.NAME=Wi;var sa;function Ju(r,t){let e=new Uint8Array([0]),n=new Uint8Array(r),s=new Uint8Array(t),o=n.slice(0),i=o.length-1,a=s.slice(0),c=a.length-1,u=0,l=c<i?i:c,f=0;for(let h=l;h>=0;h--,f++){switch(!0){case f<a.length:u=o[i-f]+a[c-f]+e[0];break;default:u=o[i-f]+e[0]}switch(e[0]=u/10,!0){case f>=o.length:o=ln(new Uint8Array([u%10]),o);break;default:o[i-f]=u%10}}return e[0]>0&&(o=ln(e,o)),o}function Gi(r){if(r>=br.length)for(let t=br.length;t<=r;t++){let e=new Uint8Array([0]),n=br[t-1].slice(0);for(let s=n.length-1;s>=0;s--){let o=new Uint8Array([(n[s]<<1)+e[0]]);e[0]=o[0]/10,n[s]=o[0]%10}e[0]>0&&(n=ln(e,n)),br.push(n)}return br[r]}function Yu(r,t){let e=0,n=new Uint8Array(r),s=new Uint8Array(t),o=n.slice(0),i=o.length-1,a=s.slice(0),c=a.length-1,u,l=0;for(let f=c;f>=0;f--,l++)switch(u=o[i-l]-a[c-l]-e,!0){case u<0:e=1,o[i-l]=u+10;break;default:e=0,o[i-l]=u}if(e>0)for(let f=i-c+1;f>=0;f--,l++)if(u=o[i-l]-e,u<0)e=1,o[i-l]=u+10;else{e=0,o[i-l]=u;break}return o.slice()}var vr=class extends Jt(ht){constructor({value:t,...e}={}){super(e),this._valueDec=0,e.valueHex&&this.setValueHex(),t!==void 0&&(this.valueDec=t)}setValueHex(){this.valueHexView.length>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,this.valueHexView.length>0&&(this._valueDec=io.call(this)))}set valueDec(t){this._valueDec=t,this.isHexOnly=!1,this.valueHexView=new Uint8Array(zi(t))}get valueDec(){return this._valueDec}fromDER(t,e,n,s=0){let o=this.fromBER(t,e,n);if(o===-1)return o;let i=this.valueHexView;return i[0]===0&&(i[1]&128)!==0?this.valueHexView=i.subarray(1):s!==0&&i.length<s&&(s-i.length>1&&(s=i.length+1),this.valueHexView=i.subarray(s-i.length)),o}toDER(t=!1){let e=this.valueHexView;switch(!0){case(e[0]&128)!==0:{let n=new Uint8Array(this.valueHexView.length+1);n[0]=0,n.set(e,1),this.valueHexView=n}break;case(e[0]===0&&(e[1]&128)===0):this.valueHexView=this.valueHexView.subarray(1);break}return this.toBER(t)}fromBER(t,e,n){let s=super.fromBER(t,e,n);return s===-1||this.setValueHex(),s}toBER(t){return t?new ArrayBuffer(this.valueHexView.length):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}toString(){let t=this.valueHexView.length*8-1,e=new Uint8Array(this.valueHexView.length*8/3),n=0,s,o=this.valueHexView,i="",a=!1;for(let c=o.byteLength-1;c>=0;c--){s=o[c];for(let u=0;u<8;u++){if((s&1)===1)switch(n){case t:e=Yu(Gi(n),e),i="-";break;default:e=Ju(e,Gi(n))}n++,s>>=1}}for(let c=0;c<e.length;c++)e[c]&&(a=!0),a&&(i+=ji.charAt(e[c]));return a===!1&&(i+=ji.charAt(0)),i}};sa=vr;vr.NAME="IntegerValueBlock";Object.defineProperty(sa.prototype,"valueHex",{set:function(r){this.valueHexView=new Uint8Array(r),this.setValueHex()},get:function(){return this.valueHexView.slice().buffer}});var oa,ct=class r extends at{constructor(t={}){super(t,vr),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}toBigInt(){return un(),BigInt(this.valueBlock.toString())}static fromBigInt(t){un();let e=BigInt(t),n=new xr,s=e.toString(16).replace(/^-/,""),o=new Uint8Array(D.Convert.FromHex(s));if(e<0){let a=new Uint8Array(o.length+(o[0]&128?1:0));a[0]|=128;let u=BigInt(`0x${D.Convert.ToHex(a)}`)+e,l=D.BufferSourceConverter.toUint8Array(D.Convert.FromHex(u.toString(16)));l[0]|=128,n.write(l)}else o[0]&128&&n.write(new Uint8Array([0])),n.write(o);return new r({valueHex:n.final()})}convertToDER(){let t=new r({valueHex:this.valueBlock.valueHexView});return t.valueBlock.toDER(),t}convertFromDER(){return new r({valueHex:this.valueBlock.valueHexView[0]===0?this.valueBlock.valueHexView.subarray(1):this.valueBlock.valueHexView})}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()}`}};oa=ct;A.Integer=oa;ct.NAME="INTEGER";var ia,En=class extends ct{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}};ia=En;A.Enumerated=ia;En.NAME="ENUMERATED";var Br=class extends Jt(ht){constructor({valueDec:t=-1,isFirstSid:e=!1,...n}={}){super(n),this.valueDec=t,this.isFirstSid=e}fromBER(t,e,n){if(!n)return e;let s=D.BufferSourceConverter.toUint8Array(t);if(!Wt(this,s,e,n))return-1;let o=s.subarray(e,e+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=o[a]&127,this.blockLength++,(o[a]&128)!==0);a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,(o[this.blockLength-1]&128)!==0?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=ke(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),e+this.blockLength)}set valueBigInt(t){un();let e=BigInt(t).toString(2);for(;e.length%7;)e="0"+e;let n=new Uint8Array(e.length/7);for(let s=0;s<n.length;s++)n[s]=parseInt(e.slice(s*7,s*7+7),2)+(s+1<n.length?128:0);this.fromBER(n.buffer,0,n.length)}toBER(t){if(this.isHexOnly){if(t)return new ArrayBuffer(this.valueHexView.byteLength);let s=this.valueHexView,o=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)o[i]=s[i]|128;return o[this.blockLength-1]=s[this.blockLength-1],o.buffer}let e=ge(this.valueDec,7);if(e.byteLength===0)return this.error="Error during encoding SID value",Ct;let n=new Uint8Array(e.byteLength);if(!t){let s=new Uint8Array(e),o=e.byteLength-1;for(let i=0;i<o;i++)n[i]=s[i]|128;n[o]=s[o]}return n}toString(){let t="";if(this.isHexOnly)t=D.Convert.ToHex(this.valueHexView);else if(this.isFirstSid){let e=this.valueDec;this.valueDec<=39?t="0.":this.valueDec<=79?(t="1.",e-=40):(t="2.",e-=80),t+=e.toString()}else t=this.valueDec.toString();return t}toJSON(){return{...super.toJSON(),valueDec:this.valueDec,isFirstSid:this.isFirstSid}}};Br.NAME="sidBlock";var An=class extends ht{constructor({value:t=Je,...e}={}){super(e),this.value=[],t&&this.fromString(t)}fromBER(t,e,n){let s=e;for(;n>0;){let o=new Br;if(s=o.fromBER(t,s,n),s===-1)return this.blockLength=0,this.error=o.error,s;this.value.length===0&&(o.isFirstSid=!0),this.blockLength+=o.blockLength,n-=o.blockLength,this.value.push(o)}return s}toBER(t){let e=[];for(let n=0;n<this.value.length;n++){let s=this.value[n].toBER(t);if(s.byteLength===0)return this.error=this.value[n].error,Ct;e.push(s)}return ao(e)}fromString(t){this.value=[];let e=0,n=0,s="",o=!1;do if(n=t.indexOf(".",e),n===-1?s=t.substring(e):s=t.substring(e,n),e=n+1,o){let i=this.value[0],a=0;switch(i.valueDec){case 0:break;case 1:a=40;break;case 2:a=80;break;default:this.value=[];return}let c=parseInt(s,10);if(isNaN(c))return;i.valueDec=c+a,o=!1}else{let i=new Br;if(s>Number.MAX_SAFE_INTEGER){un();let a=BigInt(s);i.valueBigInt=a}else if(i.valueDec=parseInt(s,10),isNaN(i.valueDec))return;this.value.length||(i.isFirstSid=!0,o=!0),this.value.push(i)}while(n!==-1)}toString(){let t="",e=!1;for(let n=0;n<this.value.length;n++){e=this.value[n].isHexOnly;let s=this.value[n].toString();n!==0&&(t=`${t}.`),e?(s=`{${s}}`,this.value[n].isFirstSid?t=`2.{${s} - 80}`:t+=s):t+=s}return t}toJSON(){let t={...super.toJSON(),value:this.toString(),sidArray:[]};for(let e=0;e<this.value.length;e++)t.sidArray.push(this.value[e].toJSON());return t}};An.NAME="ObjectIdentifierValueBlock";var aa,We=class extends at{constructor(t={}){super(t,An),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}getValue(){return this.valueBlock.toString()}setValue(t){this.valueBlock.fromString(t)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};aa=We;A.ObjectIdentifier=aa;We.NAME="OBJECT IDENTIFIER";var Er=class extends Jt(jt){constructor({valueDec:t=0,...e}={}){super(e),this.valueDec=t}fromBER(t,e,n){if(n===0)return e;let s=D.BufferSourceConverter.toUint8Array(t);if(!Wt(this,s,e,n))return-1;let o=s.subarray(e,e+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=o[a]&127,this.blockLength++,(o[a]&128)!==0);a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,(o[this.blockLength-1]&128)!==0?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=ke(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),e+this.blockLength)}toBER(t){if(this.isHexOnly){if(t)return new ArrayBuffer(this.valueHexView.byteLength);let s=this.valueHexView,o=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)o[i]=s[i]|128;return o[this.blockLength-1]=s[this.blockLength-1],o.buffer}let e=ge(this.valueDec,7);if(e.byteLength===0)return this.error="Error during encoding SID value",Ct;let n=new Uint8Array(e.byteLength);if(!t){let s=new Uint8Array(e),o=e.byteLength-1;for(let i=0;i<o;i++)n[i]=s[i]|128;n[o]=s[o]}return n.buffer}toString(){let t="";return this.isHexOnly?t=D.Convert.ToHex(this.valueHexView):t=this.valueDec.toString(),t}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}};Er.NAME="relativeSidBlock";var Sn=class extends ht{constructor({value:t=Je,...e}={}){super(e),this.value=[],t&&this.fromString(t)}fromBER(t,e,n){let s=e;for(;n>0;){let o=new Er;if(s=o.fromBER(t,s,n),s===-1)return this.blockLength=0,this.error=o.error,s;this.blockLength+=o.blockLength,n-=o.blockLength,this.value.push(o)}return s}toBER(t,e){let n=[];for(let s=0;s<this.value.length;s++){let o=this.value[s].toBER(t);if(o.byteLength===0)return this.error=this.value[s].error,Ct;n.push(o)}return ao(n)}fromString(t){this.value=[];let e=0,n=0,s="";do{n=t.indexOf(".",e),n===-1?s=t.substring(e):s=t.substring(e,n),e=n+1;let o=new Er;if(o.valueDec=parseInt(s,10),isNaN(o.valueDec))return!0;this.value.push(o)}while(n!==-1);return!0}toString(){let t="",e=!1;for(let n=0;n<this.value.length;n++){e=this.value[n].isHexOnly;let s=this.value[n].toString();n!==0&&(t=`${t}.`),e&&(s=`{${s}}`),t+=s}return t}toJSON(){let t={...super.toJSON(),value:this.toString(),sidArray:[]};for(let e=0;e<this.value.length;e++)t.sidArray.push(this.value[e].toJSON());return t}};Sn.NAME="RelativeObjectIdentifierValueBlock";var ca,kn=class extends at{constructor(t={}){super(t,Sn),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}getValue(){return this.valueBlock.toString()}setValue(t){this.valueBlock.fromString(t)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};ca=kn;A.RelativeObjectIdentifier=ca;kn.NAME="RelativeObjectIdentifier";var la,Gt=class extends pe{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}};la=Gt;A.Sequence=la;Gt.NAME="SEQUENCE";var ua,Nn=class extends pe{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}};ua=Nn;A.Set=ua;Nn.NAME="SET";var In=class extends Jt(ht){constructor({...t}={}){super(t),this.isHexOnly=!0,this.value=Je}toJSON(){return{...super.toJSON(),value:this.value}}};In.NAME="StringValueBlock";var Cn=class extends In{};Cn.NAME="SimpleStringValueBlock";var pt=class extends dn{constructor({...t}={}){super(t,Cn)}fromBuffer(t){this.valueBlock.value=String.fromCharCode.apply(null,D.BufferSourceConverter.toUint8Array(t))}fromString(t){let e=t.length,n=this.valueBlock.valueHexView=new Uint8Array(e);for(let s=0;s<e;s++)n[s]=t.charCodeAt(s);this.valueBlock.value=t}};pt.NAME="SIMPLE STRING";var Un=class extends pt{fromBuffer(t){this.valueBlock.valueHexView=D.BufferSourceConverter.toUint8Array(t);try{this.valueBlock.value=D.Convert.ToUtf8String(t)}catch(e){this.warnings.push(`Error during "decodeURIComponent": ${e}, using raw string`),this.valueBlock.value=D.Convert.ToBinary(t)}}fromString(t){this.valueBlock.valueHexView=new Uint8Array(D.Convert.FromUtf8String(t)),this.valueBlock.value=t}};Un.NAME="Utf8StringValueBlock";var fa,Zt=class extends Un{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}};fa=Zt;A.Utf8String=fa;Zt.NAME="UTF8String";var Tn=class extends pt{fromBuffer(t){this.valueBlock.value=D.Convert.ToUtf16String(t),this.valueBlock.valueHexView=D.BufferSourceConverter.toUint8Array(t)}fromString(t){this.valueBlock.value=t,this.valueBlock.valueHexView=new Uint8Array(D.Convert.FromUtf16String(t))}};Tn.NAME="BmpStringValueBlock";var ha,Rn=class extends Tn{constructor({...t}={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}};ha=Rn;A.BmpString=ha;Rn.NAME="BMPString";var Ln=class extends pt{fromBuffer(t){let e=ArrayBuffer.isView(t)?t.slice().buffer:t.slice(0),n=new Uint8Array(e);for(let s=0;s<n.length;s+=4)n[s]=n[s+3],n[s+1]=n[s+2],n[s+2]=0,n[s+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(e))}fromString(t){let e=t.length,n=this.valueBlock.valueHexView=new Uint8Array(e*4);for(let s=0;s<e;s++){let o=ge(t.charCodeAt(s),8),i=new Uint8Array(o);if(i.length>4)continue;let a=4-i.length;for(let c=i.length-1;c>=0;c--)n[s*4+c+a]=i[c]}this.valueBlock.value=t}};Ln.NAME="UniversalStringValueBlock";var da,Hn=class extends Ln{constructor({...t}={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}};da=Hn;A.UniversalString=da;Hn.NAME="UniversalString";var ga,Vn=class extends pt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}};ga=Vn;A.NumericString=ga;Vn.NAME="NumericString";var pa,_n=class extends pt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}};pa=_n;A.PrintableString=pa;_n.NAME="PrintableString";var ma,On=class extends pt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}};ma=On;A.TeletexString=ma;On.NAME="TeletexString";var ya,Mn=class extends pt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}};ya=Mn;A.VideotexString=ya;Mn.NAME="VideotexString";var ba,Dn=class extends pt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}};ba=Dn;A.IA5String=ba;Dn.NAME="IA5String";var xa,Kn=class extends pt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}};xa=Kn;A.GraphicString=xa;Kn.NAME="GraphicString";var wa,Ar=class extends pt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}};wa=Ar;A.VisibleString=wa;Ar.NAME="VisibleString";var va,Pn=class extends pt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}};va=Pn;A.GeneralString=va;Pn.NAME="GeneralString";var Ba,Fn=class extends pt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}};Ba=Fn;A.CharacterString=Ba;Fn.NAME="CharacterString";var Ea,Sr=class extends Ar{constructor({value:t,valueDate:e,...n}={}){if(super(n),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,t){this.fromString(t),this.valueBlock.valueHexView=new Uint8Array(t.length);for(let s=0;s<t.length;s++)this.valueBlock.valueHexView[s]=t.charCodeAt(s)}e&&(this.fromDate(e),this.valueBlock.valueHexView=new Uint8Array(this.toBuffer())),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBuffer(t){this.fromString(String.fromCharCode.apply(null,D.BufferSourceConverter.toUint8Array(t)))}toBuffer(){let t=this.toString(),e=new ArrayBuffer(t.length),n=new Uint8Array(e);for(let s=0;s<t.length;s++)n[s]=t.charCodeAt(s);return e}fromDate(t){this.year=t.getUTCFullYear(),this.month=t.getUTCMonth()+1,this.day=t.getUTCDate(),this.hour=t.getUTCHours(),this.minute=t.getUTCMinutes(),this.second=t.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(t){let n=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig.exec(t);if(n===null){this.error="Wrong input string for conversion";return}let s=parseInt(n[1],10);s>=50?this.year=1900+s:this.year=2e3+s,this.month=parseInt(n[2],10),this.day=parseInt(n[3],10),this.hour=parseInt(n[4],10),this.minute=parseInt(n[5],10),this.second=parseInt(n[6],10)}toString(t="iso"){if(t==="iso"){let e=new Array(7);return e[0]=xt(this.year<2e3?this.year-1900:this.year-2e3,2),e[1]=xt(this.month,2),e[2]=xt(this.day,2),e[3]=xt(this.hour,2),e[4]=xt(this.minute,2),e[5]=xt(this.second,2),e[6]="Z",e.join("")}return super.toString(t)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.toDate().toISOString()}`}toJSON(){return{...super.toJSON(),year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second}}};Ea=Sr;A.UTCTime=Ea;Sr.NAME="UTCTime";var Aa,qn=class extends Sr{constructor(t={}){var e;super(t),(e=this.millisecond)!==null&&e!==void 0||(this.millisecond=0),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromDate(t){super.fromDate(t),this.millisecond=t.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(t){let e=!1,n="",s="",o=0,i,a=0,c=0;if(t[t.length-1]==="Z")n=t.substring(0,t.length-1),e=!0;else{let f=new Number(t[t.length-1]);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");n=t}if(e){if(n.indexOf("+")!==-1)throw new Error("Wrong input string for conversion");if(n.indexOf("-")!==-1)throw new Error("Wrong input string for conversion")}else{let f=1,h=n.indexOf("+"),w="";if(h===-1&&(h=n.indexOf("-"),f=-1),h!==-1){if(w=n.substring(h+1),n=n.substring(0,h),w.length!==2&&w.length!==4)throw new Error("Wrong input string for conversion");let b=parseInt(w.substring(0,2),10);if(isNaN(b.valueOf()))throw new Error("Wrong input string for conversion");if(a=f*b,w.length===4){if(b=parseInt(w.substring(2,4),10),isNaN(b.valueOf()))throw new Error("Wrong input string for conversion");c=f*b}}}let u=n.indexOf(".");if(u===-1&&(u=n.indexOf(",")),u!==-1){let f=new Number(`0${n.substring(u)}`);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");o=f.valueOf(),s=n.substring(0,u)}else s=n;switch(!0){case s.length===8:if(i=/(\d{4})(\d{2})(\d{2})/ig,u!==-1)throw new Error("Wrong input string for conversion");break;case s.length===10:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})/ig,u!==-1){let f=60*o;this.minute=Math.floor(f),f=60*(f-this.minute),this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case s.length===12:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig,u!==-1){let f=60*o;this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case s.length===14:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig,u!==-1){let f=1e3*o;this.millisecond=Math.floor(f)}break;default:throw new Error("Wrong input string for conversion")}let l=i.exec(s);if(l===null)throw new Error("Wrong input string for conversion");for(let f=1;f<l.length;f++)switch(f){case 1:this.year=parseInt(l[f],10);break;case 2:this.month=parseInt(l[f],10);break;case 3:this.day=parseInt(l[f],10);break;case 4:this.hour=parseInt(l[f],10)+a;break;case 5:this.minute=parseInt(l[f],10)+c;break;case 6:this.second=parseInt(l[f],10);break;default:throw new Error("Wrong input string for conversion")}if(e===!1){let f=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=f.getUTCFullYear(),this.month=f.getUTCMonth(),this.day=f.getUTCDay(),this.hour=f.getUTCHours(),this.minute=f.getUTCMinutes(),this.second=f.getUTCSeconds(),this.millisecond=f.getUTCMilliseconds()}}toString(t="iso"){if(t==="iso"){let e=[];return e.push(xt(this.year,4)),e.push(xt(this.month,2)),e.push(xt(this.day,2)),e.push(xt(this.hour,2)),e.push(xt(this.minute,2)),e.push(xt(this.second,2)),this.millisecond!==0&&(e.push("."),e.push(xt(this.millisecond,3))),e.push("Z"),e.join("")}return super.toString(t)}toJSON(){return{...super.toJSON(),millisecond:this.millisecond}}};Aa=qn;A.GeneralizedTime=Aa;qn.NAME="GeneralizedTime";var Sa,zn=class extends Zt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}};Sa=zn;A.DATE=Sa;zn.NAME="DATE";var ka,$n=class extends Zt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}};ka=$n;A.TimeOfDay=ka;$n.NAME="TimeOfDay";var Na,jn=class extends Zt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}};Na=jn;A.DateTime=Na;jn.NAME="DateTime";var Ia,Gn=class extends Zt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}};Ia=Gn;A.Duration=Ia;Gn.NAME="Duration";var Ca,Zn=class extends Zt{constructor(t={}){super(t),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}};Ca=Zn;A.TIME=Ca;Zn.NAME="TIME";function Ye(r,t="utf8"){let e=en[t];if(e==null)throw new Error(`Unsupported encoding "${t}"`);return e.encoder.encode(r).substring(1)}function uo(r){if(isNaN(r)||r<=0)throw new q("random bytes length must be a Number bigger than 0");return Ke(r)}async function Ua(r){let t=await it.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),e=await Qu(t);return{privateKey:e[0],publicKey:e[1]}}async function Ta(r,t){let e=await it.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await it.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},e,t instanceof Uint8Array?t:t.subarray());return new Uint8Array(n,0,n.byteLength)}async function Ra(r,t,e){let n=await it.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return it.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,t,e instanceof Uint8Array?e:e.subarray())}async function Qu(r){if(r.privateKey==null||r.publicKey==null)throw new q("Private and public key are required");return Promise.all([it.get().subtle.exportKey("jwk",r.privateKey),it.get().subtle.exportKey("jwk",r.publicKey)])}function fo(r){if(r.kty!=="RSA")throw new q("invalid key type");if(r.n==null)throw new q("invalid key modulus");return tt(r.n,"base64url").length*8}var Xe=class{type="RSA";_key;_raw;_multihash;constructor(t,e){this._key=t,this._multihash=e}get raw(){return this._raw==null&&(this._raw=kr.jwkToPkix(this._key)),this._raw}toMultihash(){return this._multihash}toCID(){return Tt.createV1(114,this._multihash)}toString(){return ut.encode(this.toMultihash().bytes).substring(1)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:At(this.raw,t.raw)}verify(t,e){return Ra(this._key,e,t)}},Nr=class{type="RSA";_key;_raw;publicKey;constructor(t,e){this._key=t,this.publicKey=e}get raw(){return this._raw==null&&(this._raw=kr.jwkToPkcs1(this._key)),this._raw}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:At(this.raw,t.raw)}sign(t){return Ta(this._key,t)}};var Jn=8192,ho=18;function La(r){let{result:t}=lo(r),e=t.valueBlock.value;return{n:Ot(e[1]),e:Ot(e[2]),d:Ot(e[3]),p:Ot(e[4]),q:Ot(e[5]),dp:Ot(e[6]),dq:Ot(e[7]),qi:Ot(e[8]),kty:"RSA",alg:"RS256"}}function tf(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new q("JWK was missing components");let e=new Gt({value:[new ct({value:0}),ct.fromBigInt(Mt(tt(r.n,"base64url"))),ct.fromBigInt(Mt(tt(r.e,"base64url"))),ct.fromBigInt(Mt(tt(r.d,"base64url"))),ct.fromBigInt(Mt(tt(r.p,"base64url"))),ct.fromBigInt(Mt(tt(r.q,"base64url"))),ct.fromBigInt(Mt(tt(r.dp,"base64url"))),ct.fromBigInt(Mt(tt(r.dq,"base64url"))),ct.fromBigInt(Mt(tt(r.qi,"base64url")))]}).toBER();return new Uint8Array(e,0,e.byteLength)}function Ha(r){let{result:t}=lo(r),e=t.valueBlock.value[1].valueBlock.value[0].valueBlock.value;return{kty:"RSA",n:Ot(e[0]),e:Ot(e[1])}}function go(r){if(r.n==null||r.e==null)throw new q("JWK was missing components");let e=new Gt({value:[new Gt({value:[new We({value:"1.2.840.113549.1.1.1"}),new Ge]}),new Ze({valueHex:new Gt({value:[ct.fromBigInt(Mt(tt(r.n,"base64url"))),ct.fromBigInt(Mt(tt(r.e,"base64url")))]}).toBER()})]}).toBER();return new Uint8Array(e,0,e.byteLength)}function Ot(r){let t=r.valueBlock.valueHexView;for(;t[0]===0;)t=t.subarray(1);return Ye(t,"base64url")}function Mt(r){let t=[];return r.forEach(function(e){let n=e.toString(16);n.length%2>0&&(n=`0${n}`),t.push(n)}),BigInt("0x"+t.join(""))}function Yn(r){let t=La(r);return Va(t)}function Xn(r){let t=Ha(r);if(fo(t)>Jn)throw new Ie("Key size is too large");let e=de(Vt.encode({Type:J.RSA,Data:r})),n=Et(ho,e);return new Xe(t,n)}function Va(r){if(fo(r)>Jn)throw new q("Key size is too large");let t=_a(r),e=de(Vt.encode({Type:J.RSA,Data:go(t.publicKey)})),n=Et(ho,e);return new Nr(t.privateKey,new Xe(t.publicKey,n))}async function po(r){if(r>Jn)throw new q("Key size is too large");let t=await Ua(r),e=de(Vt.encode({Type:J.RSA,Data:go(t.publicKey)})),n=Et(ho,e);return new Nr(t.privateKey,new Xe(t.publicKey,n))}function _a(r){if(r==null)throw new q("Missing key parameter");return{privateKey:r,publicKey:{kty:r.kty,n:r.n,e:r.e}}}var Qn=class extends Oe{constructor(t,e){super(),this.finished=!1,this.destroyed=!1,_r(t);let n=ee(e);if(this.iHash=t.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let s=this.blockLen,o=new Uint8Array(s);o.set(n.length>s?t.create().update(n).digest():n);for(let i=0;i<o.length;i++)o[i]^=54;this.iHash.update(o),this.oHash=t.create();for(let i=0;i<o.length;i++)o[i]^=106;this.oHash.update(o),o.fill(0)}update(t){return _e(this),this.iHash.update(t),this}digestInto(t){_e(this),Ve(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){let t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));let{oHash:e,iHash:n,finished:s,destroyed:o,blockLen:i,outputLen:a}=this;return t=t,t.finished=s,t.destroyed=o,t.blockLen=i,t.outputLen=a,t.oHash=e._cloneInto(t.oHash),t.iHash=n._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},Ir=(r,t,e)=>new Qn(r,t).update(e).digest();Ir.create=(r,t)=>new Qn(r,t);function Oa(r){r.lowS!==void 0&&kt("lowS",r.lowS),r.prehash!==void 0&&kt("prehash",r.prehash)}function ef(r){let t=fr(r);Rt(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:e,Fp:n,a:s}=t;if(e){if(!n.eql(s,n.ZERO))throw new Error("invalid endomorphism, can only be defined for Koblitz curves that have a=0");if(typeof e!="object"||typeof e.beta!="bigint"||typeof e.splitScalar!="function")throw new Error("invalid endomorphism, expected beta: bigint and splitScalar: function")}return Object.freeze({...t})}var{bytesToNumberBE:rf,hexToBytes:nf}=zr,mo=class extends Error{constructor(t=""){super(t)}},Yt={Err:mo,_tlv:{encode:(r,t)=>{let{Err:e}=Yt;if(r<0||r>256)throw new e("tlv.encode: wrong tag");if(t.length&1)throw new e("tlv.encode: unpadded data");let n=t.length/2,s=be(n);if(s.length/2&128)throw new e("tlv.encode: long form length too big");let o=n>127?be(s.length/2|128):"";return be(r)+o+s+t},decode(r,t){let{Err:e}=Yt,n=0;if(r<0||r>256)throw new e("tlv.encode: wrong tag");if(t.length<2||t[n++]!==r)throw new e("tlv.decode: wrong tlv");let s=t[n++],o=!!(s&128),i=0;if(!o)i=s;else{let c=s&127;if(!c)throw new e("tlv.decode(long): indefinite length not supported");if(c>4)throw new e("tlv.decode(long): byte length is too big");let u=t.subarray(n,n+c);if(u.length!==c)throw new e("tlv.decode: length bytes not complete");if(u[0]===0)throw new e("tlv.decode(long): zero leftmost byte");for(let l of u)i=i<<8|l;if(n+=c,i<128)throw new e("tlv.decode(long): not minimal encoding")}let a=t.subarray(n,n+i);if(a.length!==i)throw new e("tlv.decode: wrong value length");return{v:a,l:t.subarray(n+i)}}},_int:{encode(r){let{Err:t}=Yt;if(r<Xt)throw new t("integer: negative integers are not allowed");let e=be(r);if(Number.parseInt(e[0],16)&8&&(e="00"+e),e.length&1)throw new t("unexpected DER parsing assertion: unpadded hex");return e},decode(r){let{Err:t}=Yt;if(r[0]&128)throw new t("invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new t("invalid signature integer: unnecessary leading zero");return rf(r)}},toSig(r){let{Err:t,_int:e,_tlv:n}=Yt,s=typeof r=="string"?nf(r):r;Pe(s);let{v:o,l:i}=n.decode(48,s);if(i.length)throw new t("invalid signature: left bytes after parsing");let{v:a,l:c}=n.decode(2,o),{v:u,l}=n.decode(2,c);if(l.length)throw new t("invalid signature: left bytes after parsing");return{r:e.decode(a),s:e.decode(u)}},hexFromSig(r){let{_tlv:t,_int:e}=Yt,n=t.encode(2,e.encode(r.r)),s=t.encode(2,e.encode(r.s)),o=n+s;return t.encode(48,o)}},Xt=BigInt(0),nt=BigInt(1),R0=BigInt(2),Ma=BigInt(3),L0=BigInt(4);function sf(r){let t=ef(r),{Fp:e}=t,n=ce(t.n,t.nBitLength),s=t.toBytes||((y,d,x)=>{let B=d.toAffine();return zt(Uint8Array.from([4]),e.toBytes(B.x),e.toBytes(B.y))}),o=t.fromBytes||(y=>{let d=y.subarray(1),x=e.fromBytes(d.subarray(0,e.BYTES)),B=e.fromBytes(d.subarray(e.BYTES,2*e.BYTES));return{x,y:B}});function i(y){let{a:d,b:x}=t,B=e.sqr(y),p=e.mul(B,y);return e.add(e.add(p,e.mul(y,d)),x)}if(!e.eql(e.sqr(t.Gy),i(t.Gx)))throw new Error("bad generator point: equation left != right");function a(y){return lr(y,nt,t.n)}function c(y){let{allowedPrivateKeyLengths:d,nByteLength:x,wrapPrivateKey:B,n:p}=t;if(d&&typeof y!="bigint"){if(oe(y)&&(y=Ft(y)),typeof y!="string"||!d.includes(y.length))throw new Error("invalid private key");y=y.padStart(x*2,"0")}let k;try{k=typeof y=="bigint"?y:qt(W("private key",y,x))}catch{throw new Error("invalid private key, expected hex or "+x+" bytes, got "+typeof y)}return B&&(k=z(k,p)),yt("private key",k,nt,p),k}function u(y){if(!(y instanceof h))throw new Error("ProjectivePoint expected")}let l=ve((y,d)=>{let{px:x,py:B,pz:p}=y;if(e.eql(p,e.ONE))return{x,y:B};let k=y.is0();d==null&&(d=k?e.ONE:e.inv(p));let R=e.mul(x,d),T=e.mul(B,d),N=e.mul(p,d);if(k)return{x:e.ZERO,y:e.ZERO};if(!e.eql(N,e.ONE))throw new Error("invZ was invalid");return{x:R,y:T}}),f=ve(y=>{if(y.is0()){if(t.allowInfinityPoint&&!e.is0(y.py))return;throw new Error("bad point: ZERO")}let{x:d,y:x}=y.toAffine();if(!e.isValid(d)||!e.isValid(x))throw new Error("bad point: x or y not FE");let B=e.sqr(x),p=i(d);if(!e.eql(B,p))throw new Error("bad point: equation left != right");if(!y.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class h{constructor(d,x,B){if(this.px=d,this.py=x,this.pz=B,d==null||!e.isValid(d))throw new Error("x required");if(x==null||!e.isValid(x))throw new Error("y required");if(B==null||!e.isValid(B))throw new Error("z required");Object.freeze(this)}static fromAffine(d){let{x,y:B}=d||{};if(!d||!e.isValid(x)||!e.isValid(B))throw new Error("invalid affine point");if(d instanceof h)throw new Error("projective point not allowed");let p=k=>e.eql(k,e.ZERO);return p(x)&&p(B)?h.ZERO:new h(x,B,e.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){let x=e.invertBatch(d.map(B=>B.pz));return d.map((B,p)=>B.toAffine(x[p])).map(h.fromAffine)}static fromHex(d){let x=h.fromAffine(o(W("pointHex",d)));return x.assertValidity(),x}static fromPrivateKey(d){return h.BASE.multiply(c(d))}static msm(d,x){return Zr(h,n,d,x)}_setWindowSize(d){b.setWindowSize(this,d)}assertValidity(){f(this)}hasEvenY(){let{y:d}=this.toAffine();if(e.isOdd)return!e.isOdd(d);throw new Error("Field doesn't support isOdd")}equals(d){u(d);let{px:x,py:B,pz:p}=this,{px:k,py:R,pz:T}=d,N=e.eql(e.mul(x,T),e.mul(k,p)),U=e.eql(e.mul(B,T),e.mul(R,p));return N&&U}negate(){return new h(this.px,e.neg(this.py),this.pz)}double(){let{a:d,b:x}=t,B=e.mul(x,Ma),{px:p,py:k,pz:R}=this,T=e.ZERO,N=e.ZERO,U=e.ZERO,I=e.mul(p,p),j=e.mul(k,k),P=e.mul(R,R),M=e.mul(p,k);return M=e.add(M,M),U=e.mul(p,R),U=e.add(U,U),T=e.mul(d,U),N=e.mul(B,P),N=e.add(T,N),T=e.sub(j,N),N=e.add(j,N),N=e.mul(T,N),T=e.mul(M,T),U=e.mul(B,U),P=e.mul(d,P),M=e.sub(I,P),M=e.mul(d,M),M=e.add(M,U),U=e.add(I,I),I=e.add(U,I),I=e.add(I,P),I=e.mul(I,M),N=e.add(N,I),P=e.mul(k,R),P=e.add(P,P),I=e.mul(P,M),T=e.sub(T,I),U=e.mul(P,j),U=e.add(U,U),U=e.add(U,U),new h(T,N,U)}add(d){u(d);let{px:x,py:B,pz:p}=this,{px:k,py:R,pz:T}=d,N=e.ZERO,U=e.ZERO,I=e.ZERO,j=t.a,P=e.mul(t.b,Ma),M=e.mul(x,k),X=e.mul(B,R),E=e.mul(p,T),C=e.add(x,B),m=e.add(k,R);C=e.mul(C,m),m=e.add(M,X),C=e.sub(C,m),m=e.add(x,p);let g=e.add(k,T);return m=e.mul(m,g),g=e.add(M,E),m=e.sub(m,g),g=e.add(B,p),N=e.add(R,T),g=e.mul(g,N),N=e.add(X,E),g=e.sub(g,N),I=e.mul(j,m),N=e.mul(P,E),I=e.add(N,I),N=e.sub(X,I),I=e.add(X,I),U=e.mul(N,I),X=e.add(M,M),X=e.add(X,M),E=e.mul(j,E),m=e.mul(P,m),X=e.add(X,E),E=e.sub(M,E),E=e.mul(j,E),m=e.add(m,E),M=e.mul(X,m),U=e.add(U,M),M=e.mul(g,m),N=e.mul(C,N),N=e.sub(N,M),M=e.mul(C,X),I=e.mul(g,I),I=e.add(I,M),new h(N,U,I)}subtract(d){return this.add(d.negate())}is0(){return this.equals(h.ZERO)}wNAF(d){return b.wNAFCached(this,d,h.normalizeZ)}multiplyUnsafe(d){let{endo:x,n:B}=t;yt("scalar",d,Xt,B);let p=h.ZERO;if(d===Xt)return p;if(this.is0()||d===nt)return this;if(!x||b.hasPrecomputes(this))return b.wNAFCachedUnsafe(this,d,h.normalizeZ);let{k1neg:k,k1:R,k2neg:T,k2:N}=x.splitScalar(d),U=p,I=p,j=this;for(;R>Xt||N>Xt;)R&nt&&(U=U.add(j)),N&nt&&(I=I.add(j)),j=j.double(),R>>=nt,N>>=nt;return k&&(U=U.negate()),T&&(I=I.negate()),I=new h(e.mul(I.px,x.beta),I.py,I.pz),U.add(I)}multiply(d){let{endo:x,n:B}=t;yt("scalar",d,nt,B);let p,k;if(x){let{k1neg:R,k1:T,k2neg:N,k2:U}=x.splitScalar(d),{p:I,f:j}=this.wNAF(T),{p:P,f:M}=this.wNAF(U);I=b.constTimeNegate(R,I),P=b.constTimeNegate(N,P),P=new h(e.mul(P.px,x.beta),P.py,P.pz),p=I.add(P),k=j.add(M)}else{let{p:R,f:T}=this.wNAF(d);p=R,k=T}return h.normalizeZ([p,k])[0]}multiplyAndAddUnsafe(d,x,B){let p=h.BASE,k=(T,N)=>N===Xt||N===nt||!T.equals(p)?T.multiplyUnsafe(N):T.multiply(N),R=k(this,x).add(k(d,B));return R.is0()?void 0:R}toAffine(d){return l(this,d)}isTorsionFree(){let{h:d,isTorsionFree:x}=t;if(d===nt)return!0;if(x)return x(h,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:d,clearCofactor:x}=t;return d===nt?this:x?x(h,this):this.multiplyUnsafe(t.h)}toRawBytes(d=!0){return kt("isCompressed",d),this.assertValidity(),s(h,this,d)}toHex(d=!0){return kt("isCompressed",d),Ft(this.toRawBytes(d))}}h.BASE=new h(t.Gx,t.Gy,e.ONE),h.ZERO=new h(e.ZERO,e.ONE,e.ZERO);let w=t.nBitLength,b=Gr(h,t.endo?Math.ceil(w/2):w);return{CURVE:t,ProjectivePoint:h,normPrivateKeyToScalar:c,weierstrassEquation:i,isWithinCurveOrder:a}}function of(r){let t=fr(r);return Rt(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}function Da(r){let t=of(r),{Fp:e,n}=t,s=e.BYTES+1,o=2*e.BYTES+1;function i(E){return z(E,n)}function a(E){return $r(E,n)}let{ProjectivePoint:c,normPrivateKeyToScalar:u,weierstrassEquation:l,isWithinCurveOrder:f}=sf({...t,toBytes(E,C,m){let g=C.toAffine(),v=e.toBytes(g.x),S=zt;return kt("isCompressed",m),m?S(Uint8Array.from([C.hasEvenY()?2:3]),v):S(Uint8Array.from([4]),v,e.toBytes(g.y))},fromBytes(E){let C=E.length,m=E[0],g=E.subarray(1);if(C===s&&(m===2||m===3)){let v=qt(g);if(!lr(v,nt,e.ORDER))throw new Error("Point is not on curve");let S=l(v),L;try{L=e.sqrt(S)}catch(K){let V=K instanceof Error?": "+K.message:"";throw new Error("Point is not on curve"+V)}let H=(L&nt)===nt;return(m&1)===1!==H&&(L=e.neg(L)),{x:v,y:L}}else if(C===o&&m===4){let v=e.fromBytes(g.subarray(0,e.BYTES)),S=e.fromBytes(g.subarray(e.BYTES,2*e.BYTES));return{x:v,y:S}}else{let v=s,S=o;throw new Error("invalid Point, expected length of "+v+", or uncompressed "+S+", got "+C)}}}),h=E=>Ft(ae(E,t.nByteLength));function w(E){let C=n>>nt;return E>C}function b(E){return w(E)?i(-E):E}let y=(E,C,m)=>qt(E.slice(C,m));class d{constructor(C,m,g){this.r=C,this.s=m,this.recovery=g,this.assertValidity()}static fromCompact(C){let m=t.nByteLength;return C=W("compactSignature",C,m*2),new d(y(C,0,m),y(C,m,2*m))}static fromDER(C){let{r:m,s:g}=Yt.toSig(W("DER",C));return new d(m,g)}assertValidity(){yt("r",this.r,nt,n),yt("s",this.s,nt,n)}addRecoveryBit(C){return new d(this.r,this.s,C)}recoverPublicKey(C){let{r:m,s:g,recovery:v}=this,S=T(W("msgHash",C));if(v==null||![0,1,2,3].includes(v))throw new Error("recovery id invalid");let L=v===2||v===3?m+t.n:m;if(L>=e.ORDER)throw new Error("recovery id 2 or 3 invalid");let H=(v&1)===0?"02":"03",O=c.fromHex(H+h(L)),K=a(L),V=i(-S*K),F=i(g*K),$=c.BASE.multiplyAndAddUnsafe(O,V,F);if(!$)throw new Error("point at infinify");return $.assertValidity(),$}hasHighS(){return w(this.s)}normalizeS(){return this.hasHighS()?new d(this.r,i(-this.s),this.recovery):this}toDERRawBytes(){return xe(this.toDERHex())}toDERHex(){return Yt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return xe(this.toCompactHex())}toCompactHex(){return h(this.r)+h(this.s)}}let x={isValidPrivateKey(E){try{return u(E),!0}catch{return!1}},normPrivateKeyToScalar:u,randomPrivateKey:()=>{let E=Ss(t.n);return ci(t.randomBytes(E),t.n)},precompute(E=8,C=c.BASE){return C._setWindowSize(E),C.multiply(BigInt(3)),C}};function B(E,C=!0){return c.fromPrivateKey(E).toRawBytes(C)}function p(E){let C=oe(E),m=typeof E=="string",g=(C||m)&&E.length;return C?g===s||g===o:m?g===2*s||g===2*o:E instanceof c}function k(E,C,m=!0){if(p(E))throw new Error("first arg must be private key");if(!p(C))throw new Error("second arg must be public key");return c.fromHex(C).multiply(u(E)).toRawBytes(m)}let R=t.bits2int||function(E){if(E.length>8192)throw new Error("input is too large");let C=qt(E),m=E.length*8-t.nBitLength;return m>0?C>>BigInt(m):C},T=t.bits2int_modN||function(E){return i(R(E))},N=ur(t.nBitLength);function U(E){return yt("num < 2^"+t.nBitLength,E,Xt,N),ae(E,t.nByteLength)}function I(E,C,m=j){if(["recovered","canonical"].some(rt=>rt in m))throw new Error("sign() legacy options not supported");let{hash:g,randomBytes:v}=t,{lowS:S,prehash:L,extraEntropy:H}=m;S==null&&(S=!0),E=W("msgHash",E),Oa(m),L&&(E=W("prehashed msgHash",g(E)));let O=T(E),K=u(C),V=[U(K),U(O)];if(H!=null&&H!==!1){let rt=H===!0?v(e.BYTES):H;V.push(W("extraEntropy",rt))}let F=zt(...V),$=O;function et(rt){let st=R(rt);if(!f(st))return;let lt=a(st),mt=c.BASE.multiply(st).toAffine(),dt=i(mt.x);if(dt===Xt)return;let Ut=i(lt*i($+dt*K));if(Ut===Xt)return;let Dt=(mt.x===dt?0:2)|Number(mt.y&nt),Qe=Ut;return S&&w(Ut)&&(Qe=b(Ut),Dt^=1),new d(dt,Qe,Dt)}return{seed:F,k2sig:et}}let j={lowS:t.lowS,prehash:!1},P={lowS:t.lowS,prehash:!1};function M(E,C,m=j){let{seed:g,k2sig:v}=I(E,C,m),S=t;return vs(S.hash.outputLen,S.nByteLength,S.hmac)(g,v)}c.BASE._setWindowSize(8);function X(E,C,m,g=P){let v=E;C=W("msgHash",C),m=W("publicKey",m);let{lowS:S,prehash:L,format:H}=g;if(Oa(g),"strict"in g)throw new Error("options.strict was renamed to lowS");if(H!==void 0&&H!=="compact"&&H!=="der")throw new Error("format must be compact or der");let O=typeof v=="string"||oe(v),K=!O&&!H&&typeof v=="object"&&v!==null&&typeof v.r=="bigint"&&typeof v.s=="bigint";if(!O&&!K)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let V,F;try{if(K&&(V=new d(v.r,v.s)),O){try{H!=="compact"&&(V=d.fromDER(v))}catch(Dt){if(!(Dt instanceof Yt.Err))throw Dt}!V&&H!=="der"&&(V=d.fromCompact(v))}F=c.fromHex(m)}catch{return!1}if(!V||S&&V.hasHighS())return!1;L&&(C=t.hash(C));let{r:$,s:et}=V,rt=T(C),st=a(et),lt=i(rt*st),mt=i($*st),dt=c.BASE.multiplyAndAddUnsafe(F,lt,mt)?.toAffine();return dt?i(dt.x)===$:!1}return{CURVE:t,getPublicKey:B,getSharedSecret:k,sign:M,verify:X,ProjectivePoint:c,Signature:d,utils:x}}function af(r){return{hash:r,hmac:(t,...e)=>Ir(r,t,gs(...e)),randomBytes:Ke}}function Ka(r,t){let e=n=>Da({...r,...af(n)});return{...e(t),create:e}}var qa=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),Pa=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),cf=BigInt(1),yo=BigInt(2),Fa=(r,t)=>(r+t/yo)/t;function lf(r){let t=qa,e=BigInt(3),n=BigInt(6),s=BigInt(11),o=BigInt(22),i=BigInt(23),a=BigInt(44),c=BigInt(88),u=r*r*r%t,l=u*u*r%t,f=Z(l,e,t)*l%t,h=Z(f,e,t)*l%t,w=Z(h,yo,t)*u%t,b=Z(w,s,t)*w%t,y=Z(b,o,t)*b%t,d=Z(y,a,t)*y%t,x=Z(d,c,t)*d%t,B=Z(x,a,t)*y%t,p=Z(B,e,t)*l%t,k=Z(p,i,t)*b%t,R=Z(k,n,t)*u%t,T=Z(R,yo,t);if(!bo.eql(bo.sqr(T),r))throw new Error("Cannot find square root");return T}var bo=ce(qa,void 0,void 0,{sqrt:lf}),Bt=Ka({a:BigInt(0),b:BigInt(7),Fp:bo,n:Pa,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{let t=Pa,e=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-cf*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),s=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=e,i=BigInt("0x100000000000000000000000000000000"),a=Fa(o*r,t),c=Fa(-n*r,t),u=z(r-a*e-c*s,t),l=z(-a*n-c*o,t),f=u>i,h=l>i;if(f&&(u=t-u),h&&(l=t-l),u>i||l>i)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:f,k1:u,k2neg:h,k2:l}}}},de),F0=BigInt(0);var q0=Bt.ProjectivePoint;function Ne(r,t){t==null&&(t=r.reduce((s,o)=>s+o.length,0));let e=Ht(t),n=0;for(let s of r)e.set(s,n),n+=s.length;return e}function xo(r,t){let e=tt(r,"base64urlpad");if(t!=null){if(e.length>t)throw new Error("byte array longer than desired length");e=Ne([new Uint8Array(t-e.length),e])}return e}function wo(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}function za(r,t){let e=tn.digest(t instanceof Uint8Array?t:t.subarray());if(wo(e))return e.then(({digest:n})=>Bt.sign(n,r).toDERRawBytes()).catch(n=>{throw new tr(String(n))});try{return Bt.sign(e.digest,r).toDERRawBytes()}catch(n){throw new tr(String(n))}}function $a(r,t,e){let n=tn.digest(e instanceof Uint8Array?e:e.subarray());if(wo(n))return n.then(({digest:s})=>Bt.verify(t,s,r)).catch(s=>{throw new er(String(s))});try{return Bt.verify(t,n.digest,r)}catch(s){throw new er(String(s))}}var Cr=class{type="secp256k1";raw;_key;constructor(t){this._key=Za(t),this.raw=ja(this._key)}toMultihash(){return cr.digest(dr(this))}toCID(){return Tt.createV1(114,this.toMultihash())}toString(){return ut.encode(this.toMultihash().bytes).substring(1)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:At(this.raw,t.raw)}verify(t,e){return $a(this._key,e,t)}},Ur=class{type="secp256k1";raw;publicKey;constructor(t,e){this.raw=Ga(t),this.publicKey=new Cr(e??Wa(t))}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:At(this.raw,t.raw)}sign(t){return za(this.raw,t)}};function vo(r){return new Ur(r)}function ts(r){return new Cr(r)}async function Ja(){let r=uf();return new Ur(r)}function ja(r){return Bt.ProjectivePoint.fromHex(r).toRawBytes(!0)}function Ga(r){try{return Bt.getPublicKey(r,!0),r}catch(t){throw new rr(String(t))}}function Za(r){try{return Bt.ProjectivePoint.fromHex(r),r}catch(t){throw new Ie(String(t))}}function Wa(r){try{return Bt.getPublicKey(r,!0)}catch(t){throw new rr(String(t))}}function uf(){return Bt.utils.randomPrivateKey()}var es={"P-256":32,"P-384":48,"P-521":66},ff=Object.keys(es),Bo=ff.join(" / ");async function Ya(r){if(r!=="P-256"&&r!=="P-384"&&r!=="P-521")throw new q(`Unknown curve: ${r}. Must be ${Bo}`);let t=await it.get().subtle.generateKey({name:"ECDH",namedCurve:r},!0,["deriveBits"]),e=async(o,i)=>{let a;i!=null?a=await it.get().subtle.importKey("jwk",df(r,i),{name:"ECDH",namedCurve:r},!1,["deriveBits"]):a=t.privateKey;let c=await it.get().subtle.importKey("jwk",Xa(r,o),{name:"ECDH",namedCurve:r},!1,[]),u=await it.get().subtle.deriveBits({name:"ECDH",public:c},a,es[r]*8);return new Uint8Array(u,0,u.byteLength)},n=await it.get().subtle.exportKey("jwk",t.publicKey);return{key:hf(n),genSharedKey:e}}function hf(r){if(r.crv==null||r.x==null||r.y==null)throw new q("JWK was missing components");if(r.crv!=="P-256"&&r.crv!=="P-384"&&r.crv!=="P-521")throw new q(`Unknown curve: ${r.crv}. Must be ${Bo}`);let t=es[r.crv];return Ne([Uint8Array.from([4]),xo(r.x,t),xo(r.y,t)],1+t*2)}function Xa(r,t){if(r!=="P-256"&&r!=="P-384"&&r!=="P-521")throw new q(`Unknown curve: ${r}. Must be ${Bo}`);let e=es[r];if(!At(t.subarray(0,1),Uint8Array.from([4])))throw new q("Cannot unmarshal public key - invalid key format");return{kty:"EC",crv:r,x:Ye(t.subarray(1,e+1),"base64url"),y:Ye(t.subarray(1+e),"base64url"),ext:!0}}var df=(r,t)=>({...Xa(r,t.public),d:Ye(t.private,"base64url")});var gf={"AES-128":{ivSize:16,keySize:16},"AES-256":{ivSize:16,keySize:32},Blowfish:{ivSize:8,keySize:32}};async function Qa(r,t,e){if(r!=="AES-128"&&r!=="AES-256"&&r!=="Blowfish")throw new q("Cipher type was missing or unsupported");if(t!=="SHA1"&&t!=="SHA256"&&t!=="SHA512")throw new q("Hash type was missing or unsupported");if(e==null||!(e instanceof Uint8Array))throw new q("Secret was missing or an incorrect type");let n=gf[r],s=n.keySize,o=n.ivSize,i=20,a=tt("key expansion"),c=2*(o+s+i),u=await ns(t,e),l=await u.digest(a),f=[],h=0;for(;h<c;){let B=await u.digest(Ne([l,a])),p=B.length;h+p>c&&(p=c-h),f.push(B),h+=p,l=await u.digest(l)}let w=c/2,b=Ne(f),y=b.subarray(0,w),d=b.subarray(w,c),x=B=>({iv:B.subarray(0,o),cipherKey:B.subarray(o,o+s),macKey:B.subarray(o+s)});return{k1:x(y),k2:x(d)}}async function pf(r,t){if(r==="Ed25519")return vi();if(r==="secp256k1")return Ja();if(r==="RSA")return po(t??2048);throw new Qt}async function mf(r,t){if(r!=="Ed25519")throw new Qt("Seed key derivation only supported for Ed25519 keys");return Bi(t)}function yf(r){let{Type:t,Data:e}=Vt.decode(r),n=e??new Uint8Array;switch(t){case J.RSA:return Xn(n);case J.Ed25519:return Yr(n);case J.secp256k1:return ts(n);default:throw new Qt}}function bf(r){return r.byteLength===32?Yr(r):r.byteLength===33?ts(r):Xn(r)}function xf(r){let{Type:t,Data:e}=Vt.decode(r.digest),n=e??new Uint8Array;switch(t){case J.Ed25519:return Yr(n);case J.secp256k1:return ts(n);default:throw new Qt}}function dr(r){return Vt.encode({Type:J[r.type],Data:r.raw})}function wf(r){let t=yr.decode(r),e=t.Data??new Uint8Array;switch(t.Type){case J.RSA:return Yn(e);case J.Ed25519:return Ts(e);case J.secp256k1:return vo(e);default:throw new Qt}}function vf(r){return r.byteLength===64?Ts(r):r.byteLength===32?vo(r):Yn(r)}function Bf(r){return yr.encode({Type:J[r.type],Data:r.raw})}function Ef(r,t,e,n){_r(r);let s=ti({dkLen:32,asyncTick:10},n),{c:o,dkLen:i,asyncTick:a}=s;if(He(o),He(i),He(a),o<1)throw new Error("PBKDF2: iterations (c) should be >= 1");let c=ee(t),u=ee(e),l=new Uint8Array(i),f=Ir.create(r,c),h=f._cloneInto().update(u);return{c:o,dkLen:i,asyncTick:a,DK:l,PRF:f,PRFSalt:h}}function Af(r,t,e,n,s){return r.destroy(),t.destroy(),n&&n.destroy(),s.fill(0),e}function tc(r,t,e,n){let{c:s,dkLen:o,DK:i,PRF:a,PRFSalt:c}=Ef(r,t,e,n),u,l=new Uint8Array(4),f=Me(l),h=new Uint8Array(a.outputLen);for(let w=1,b=0;b<o;w++,b+=a.outputLen){let y=i.subarray(b,b+a.outputLen);f.setInt32(0,w,!1),(u=c._cloneInto(u)).update(l).digestInto(h),y.set(h.subarray(0,y.length));for(let d=1;d<s;d++){a._cloneInto(u).update(h).digestInto(h);for(let x=0;x<y.length;x++)y[x]^=h[x]}}return Af(a,c,i,u,h)}var Tr=new Uint32Array([1732584193,4023233417,2562383102,271733878,3285377520]),me=new Uint32Array(80),Ao=class extends re{constructor(){super(64,20,8,!1),this.A=Tr[0]|0,this.B=Tr[1]|0,this.C=Tr[2]|0,this.D=Tr[3]|0,this.E=Tr[4]|0}get(){let{A:t,B:e,C:n,D:s,E:o}=this;return[t,e,n,s,o]}set(t,e,n,s,o){this.A=t|0,this.B=e|0,this.C=n|0,this.D=s|0,this.E=o|0}process(t,e){for(let c=0;c<16;c++,e+=4)me[c]=t.getUint32(e,!1);for(let c=16;c<80;c++)me[c]=Or(me[c-3]^me[c-8]^me[c-14]^me[c-16],1);let{A:n,B:s,C:o,D:i,E:a}=this;for(let c=0;c<80;c++){let u,l;c<20?(u=Mr(s,o,i),l=1518500249):c<40?(u=s^o^i,l=1859775393):c<60?(u=Dr(s,o,i),l=2400959708):(u=s^o^i,l=3395469782);let f=Or(n,5)+u+a+l+me[c]|0;a=i,i=o,o=Or(s,30),s=n,n=f}n=n+this.A|0,s=s+this.B|0,o=o+this.C|0,i=i+this.D|0,a=a+this.E|0,this.set(n,s,o,i,a)}roundClean(){me.fill(0)}destroy(){this.set(0,0,0,0,0),this.buffer.fill(0)}},ec=De(()=>new Ao);var rc={sha1:ec,"sha2-256":de,"sha2-512":Pr};function So(r,t,e,n,s){if(s!=="sha1"&&s!=="sha2-256"&&s!=="sha2-512"){let a=Object.keys(rc).join(" / ");throw new q(`Hash '${s}' is unknown or not supported. Must be ${a}`)}let o=rc[s],i=tc(o,r,t,{c:e,dkLen:n});return Ps.encode(i).substring(1)}return bc(Sf);})();
+"use strict";var Libp2PCrypto=(()=>{var kr=Object.defineProperty;var fi=Object.getOwnPropertyDescriptor;var ui=Object.getOwnPropertyNames;var hi=Object.prototype.hasOwnProperty;var nt=(r,t)=>{for(var e in t)kr(r,e,{get:t[e],enumerable:!0})},li=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of ui(t))!hi.call(r,o)&&o!==e&&kr(r,o,{get:()=>t[o],enumerable:!(n=fi(t,o))||n.enumerable});return r};var di=r=>li(kr({},"__esModule",{value:!0}),r);var bf={};nt(bf,{hmac:()=>nr,keys:()=>no,pbkdf2:()=>so,randomBytes:()=>Zn});var nr={};nt(nr,{create:()=>Hr});var _e=class extends Error{constructor(t="An error occurred while signing a message"){super(t),this.name="SigningError"}},Ce=class extends Error{constructor(t="An error occurred while verifying a message"){super(t),this.name="VerificationError"}},rr=class extends Error{constructor(t="Missing Web Crypto API"){super(t),this.name="WebCryptoMissingError"}};var po={get(r=globalThis){let t=r.crypto;if(t?.subtle==null)throw new rr("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api");return t}};var ot=po;var mo={SHA1:20,SHA256:32,SHA512:64};var pi={SHA1:"SHA-1",SHA256:"SHA-256",SHA512:"SHA-512"},mi=async(r,t)=>{let e=await ot.get().subtle.sign({name:"HMAC"},r,t);return new Uint8Array(e,0,e.byteLength)};async function Hr(r,t){let e=pi[r],n=await ot.get().subtle.importKey("raw",t,{name:"HMAC",hash:{name:e}},!1,["sign"]);return{async digest(o){return mi(n,o)},length:mo[r]}}var no={};nt(no,{generateEphemeralKeyPair:()=>Ys,generateKeyPair:()=>sf,generateKeyPairFromSeed:()=>cf,keyStretcher:()=>$s,privateKeyFromProtobuf:()=>hf,privateKeyFromRaw:()=>lf,privateKeyToProtobuf:()=>df,publicKeyFromMultihash:()=>uf,publicKeyFromProtobuf:()=>af,publicKeyFromRaw:()=>ff,publicKeyToProtobuf:()=>Fe});var q=class extends Error{static name="InvalidParametersError";constructor(t="Invalid parameters"){super(t),this.name="InvalidParametersError"}},he=class extends Error{static name="InvalidPublicKeyError";constructor(t="Invalid public key"){super(t),this.name="InvalidPublicKeyError"}},Ke=class extends Error{static name="InvalidPrivateKeyError";constructor(t="Invalid private key"){super(t),this.name="InvalidPrivateKeyError"}};var Mt=class extends Error{static name="UnsupportedKeyTypeError";constructor(t="Unsupported key type"){super(t),this.name="UnsupportedKeyTypeError"}};var Fr={};nt(Fr,{base58btc:()=>it,base58flickr:()=>Ei});var Lf=new Uint8Array(0);function bo(r,t){if(r===t)return!0;if(r.byteLength!==t.byteLength)return!1;for(let e=0;e<r.byteLength;e++)if(r[e]!==t[e])return!1;return!0}function Ct(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function yo(r){return new TextEncoder().encode(r)}function xo(r){return new TextDecoder().decode(r)}function bi(r,t){if(r.length>=255)throw new TypeError("Alphabet too long");for(var e=new Uint8Array(256),n=0;n<e.length;n++)e[n]=255;for(var o=0;o<r.length;o++){var s=r.charAt(o),i=s.charCodeAt(0);if(e[i]!==255)throw new TypeError(s+" is ambiguous");e[i]=o}var c=r.length,a=r.charAt(0),u=Math.log(c)/Math.log(256),f=Math.log(256)/Math.log(c);function h(g){if(g instanceof Uint8Array||(ArrayBuffer.isView(g)?g=new Uint8Array(g.buffer,g.byteOffset,g.byteLength):Array.isArray(g)&&(g=Uint8Array.from(g))),!(g instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(g.length===0)return"";for(var y=0,l=0,x=0,B=g.length;x!==B&&g[x]===0;)x++,y++;for(var m=(B-x)*f+1>>>0,v=new Uint8Array(m);x!==B;){for(var _=g[x],R=0,I=m-1;(_!==0||R<l)&&I!==-1;I--,R++)_+=256*v[I]>>>0,v[I]=_%c>>>0,_=_/c>>>0;if(_!==0)throw new Error("Non-zero carry");l=R,x++}for(var T=m-l;T!==m&&v[T]===0;)T++;for(var L=a.repeat(y);T<m;++T)L+=r.charAt(v[T]);return L}function d(g){if(typeof g!="string")throw new TypeError("Expected String");if(g.length===0)return new Uint8Array;var y=0;if(g[y]!==" "){for(var l=0,x=0;g[y]===a;)l++,y++;for(var B=(g.length-y)*u+1>>>0,m=new Uint8Array(B);g[y];){var v=e[g.charCodeAt(y)];if(v===255)return;for(var _=0,R=B-1;(v!==0||_<x)&&R!==-1;R--,_++)v+=c*m[R]>>>0,m[R]=v%256>>>0,v=v/256>>>0;if(v!==0)throw new Error("Non-zero carry");x=_,y++}if(g[y]!==" "){for(var I=B-x;I!==B&&m[I]===0;)I++;for(var T=new Uint8Array(l+(B-I)),L=l;I!==B;)T[L++]=m[I++];return T}}}function E(g){var y=d(g);if(y)return y;throw new Error(`Non-${t} character`)}return{encode:h,decodeUnsafe:d,decode:E}}var yi=bi,xi=yi,wo=xi;var Mr=class{name;prefix;baseEncode;constructor(t,e,n){this.name=t,this.prefix=e,this.baseEncode=n}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},qr=class{name;prefix;baseDecode;prefixCodePoint;constructor(t,e,n){this.name=t,this.prefix=e;let o=e.codePointAt(0);if(o===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=o,this.baseDecode=n}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return Eo(this,t)}},Vr=class{decoders;constructor(t){this.decoders=t}or(t){return Eo(this,t)}decode(t){let e=t[0],n=this.decoders[e];if(n!=null)return n.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Eo(r,t){return new Vr({...r.decoders??{[r.prefix]:r},...t.decoders??{[t.prefix]:t}})}var zr=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(t,e,n,o){this.name=t,this.prefix=e,this.baseEncode=n,this.baseDecode=o,this.encoder=new Mr(t,e,n),this.decoder=new qr(t,e,o)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function le({name:r,prefix:t,encode:e,decode:n}){return new zr(r,t,e,n)}function qt({name:r,prefix:t,alphabet:e}){let{encode:n,decode:o}=wo(e,r);return le({prefix:t,name:r,encode:n,decode:s=>Ct(o(s))})}function gi(r,t,e,n){let o={};for(let f=0;f<t.length;++f)o[t[f]]=f;let s=r.length;for(;r[s-1]==="=";)--s;let i=new Uint8Array(s*e/8|0),c=0,a=0,u=0;for(let f=0;f<s;++f){let h=o[r[f]];if(h===void 0)throw new SyntaxError(`Non-${n} character`);a=a<<e|h,c+=e,c>=8&&(c-=8,i[u++]=255&a>>c)}if(c>=e||(255&a<<8-c)!==0)throw new SyntaxError("Unexpected end of data");return i}function wi(r,t,e){let n=t[t.length-1]==="=",o=(1<<e)-1,s="",i=0,c=0;for(let a=0;a<r.length;++a)for(c=c<<8|r[a],i+=8;i>e;)i-=e,s+=t[o&c>>i];if(i!==0&&(s+=t[o&c<<e-i]),n)for(;(s.length*e&7)!==0;)s+="=";return s}function Y({name:r,prefix:t,bitsPerChar:e,alphabet:n}){return le({prefix:t,name:r,encode(o){return wi(o,n,e)},decode(o){return gi(o,n,e,r)}})}var it=qt({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),Ei=qt({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var Zr={};nt(Zr,{base32:()=>de,base32hex:()=>vi,base32hexpad:()=>Li,base32hexpadupper:()=>Ui,base32hexupper:()=>Ii,base32pad:()=>Si,base32padupper:()=>Ai,base32upper:()=>Bi,base32z:()=>Ti});var de=Y({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),Bi=Y({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Si=Y({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),Ai=Y({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),vi=Y({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Ii=Y({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Li=Y({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),Ui=Y({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Ti=Y({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var Gr={};nt(Gr,{base36:()=>Ne,base36upper:()=>Ri});var Ne=qt({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),Ri=qt({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var _i=Ao,Bo=128,Ci=127,Ki=~Ci,Ni=Math.pow(2,31);function Ao(r,t,e){t=t||[],e=e||0;for(var n=e;r>=Ni;)t[e++]=r&255|Bo,r/=128;for(;r&Ki;)t[e++]=r&255|Bo,r>>>=7;return t[e]=r|0,Ao.bytes=e-n+1,t}var Di=jr,Pi=128,So=127;function jr(r,n){var e=0,n=n||0,o=0,s=n,i,c=r.length;do{if(s>=c)throw jr.bytes=0,new RangeError("Could not decode varint");i=r[s++],e+=o<28?(i&So)<<o:(i&So)*Math.pow(2,o),o+=7}while(i>=Pi);return jr.bytes=s-n,e}var Oi=Math.pow(2,7),ki=Math.pow(2,14),Hi=Math.pow(2,21),Mi=Math.pow(2,28),qi=Math.pow(2,35),Vi=Math.pow(2,42),zi=Math.pow(2,49),Fi=Math.pow(2,56),Zi=Math.pow(2,63),Gi=function(r){return r<Oi?1:r<ki?2:r<Hi?3:r<Mi?4:r<qi?5:r<Vi?6:r<zi?7:r<Fi?8:r<Zi?9:10},ji={encode:_i,decode:Di,encodingLength:Gi},Wi=ji,De=Wi;function Pe(r,t=0){return[De.decode(r,t),De.decode.bytes]}function pe(r,t,e=0){return De.encode(r,t,e),t}function me(r){return De.encodingLength(r)}function gt(r,t){let e=t.byteLength,n=me(r),o=n+me(e),s=new Uint8Array(o+e);return pe(r,s,0),pe(e,s,n),s.set(t,o),new be(r,e,t,s)}function vo(r){let t=Ct(r),[e,n]=Pe(t),[o,s]=Pe(t.subarray(n)),i=t.subarray(n+s);if(i.byteLength!==o)throw new Error("Incorrect length");return new be(e,o,i,t)}function Io(r,t){if(r===t)return!0;{let e=t;return r.code===e.code&&r.size===e.size&&e.bytes instanceof Uint8Array&&bo(r.bytes,e.bytes)}}var be=class{code;size;digest;bytes;constructor(t,e,n,o){this.code=t,this.size=e,this.digest=n,this.bytes=o}};function Lo(r,t){let{bytes:e,version:n}=r;switch(n){case 0:return Xi(e,Wr(r),t??it.encoder);default:return $i(e,Wr(r),t??de.encoder)}}var Uo=new WeakMap;function Wr(r){let t=Uo.get(r);if(t==null){let e=new Map;return Uo.set(r,e),e}return t}var It=class r{code;version;multihash;bytes;"/";constructor(t,e,n,o){this.code=e,this.version=t,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:t,multihash:e}=this;if(t!==ke)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(e.code!==Ji)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(e)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:t,digest:e}=this.multihash,n=gt(t,e);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(t){return r.equals(this,t)}static equals(t,e){let n=e;return n!=null&&t.code===n.code&&t.version===n.version&&Io(t.multihash,n.multihash)}toString(t){return Lo(this,t)}toJSON(){return{"/":Lo(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(t){if(t==null)return null;let e=t;if(e instanceof r)return e;if(e["/"]!=null&&e["/"]===e.bytes||e.asCID===e){let{version:n,code:o,multihash:s,bytes:i}=e;return new r(n,o,s,i??To(n,o,s.bytes))}else if(e[Qi]===!0){let{version:n,multihash:o,code:s}=e,i=vo(o);return r.create(n,s,i)}else return null}static create(t,e,n){if(typeof e!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(t){case 0:{if(e!==ke)throw new Error(`Version 0 CID must use dag-pb (code: ${ke}) block encoding`);return new r(t,e,n,n.bytes)}case 1:{let o=To(t,e,n.bytes);return new r(t,e,n,o)}default:throw new Error("Invalid version")}}static createV0(t){return r.create(0,ke,t)}static createV1(t,e){return r.create(1,t,e)}static decode(t){let[e,n]=r.decodeFirst(t);if(n.length!==0)throw new Error("Incorrect length");return e}static decodeFirst(t){let e=r.inspectBytes(t),n=e.size-e.multihashSize,o=Ct(t.subarray(n,n+e.multihashSize));if(o.byteLength!==e.multihashSize)throw new Error("Incorrect length");let s=o.subarray(e.multihashSize-e.digestSize),i=new be(e.multihashCode,e.digestSize,s,o);return[e.version===0?r.createV0(i):r.createV1(e.codec,i),t.subarray(e.size)]}static inspectBytes(t){let e=0,n=()=>{let[h,d]=Pe(t.subarray(e));return e+=d,h},o=n(),s=ke;if(o===18?(o=0,e=0):s=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);let i=e,c=n(),a=n(),u=e+a,f=u-i;return{version:o,codec:s,multihashCode:c,digestSize:a,multihashSize:f,size:u}}static parse(t,e){let[n,o]=Yi(t,e),s=r.decode(o);if(s.version===0&&t[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return Wr(s).set(n,t),s}};function Yi(r,t){switch(r[0]){case"Q":{let e=t??it;return[it.prefix,e.decode(`${it.prefix}${r}`)]}case it.prefix:{let e=t??it;return[it.prefix,e.decode(r)]}case de.prefix:{let e=t??de;return[de.prefix,e.decode(r)]}case Ne.prefix:{let e=t??Ne;return[Ne.prefix,e.decode(r)]}default:{if(t==null)throw Error("To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided");return[r[0],t.decode(r)]}}}function Xi(r,t,e){let{prefix:n}=e;if(n!==it.prefix)throw Error(`Cannot string encode V0 in ${e.name} encoding`);let o=t.get(n);if(o==null){let s=e.encode(r).slice(1);return t.set(n,s),s}else return o}function $i(r,t,e){let{prefix:n}=e,o=t.get(n);if(o==null){let s=e.encode(r);return t.set(n,s),s}else return o}var ke=112,Ji=18;function To(r,t,e){let n=me(r),o=n+me(t),s=new Uint8Array(o+e.byteLength);return pe(r,s,0),pe(t,s,n),s.set(e,o),s}var Qi=Symbol.for("@ipld/js-cid/CID");var Yr={};nt(Yr,{identity:()=>He});var Ro=0,tc="identity",_o=Ct;function ec(r){return gt(Ro,_o(r))}var He={code:Ro,name:tc,encode:_o,digest:ec};function pt(r,t){if(r===t)return!0;if(r.byteLength!==t.byteLength)return!1;for(let e=0;e<r.byteLength;e++)if(r[e]!==t[e])return!1;return!0}function ye(r){if(!Number.isSafeInteger(r)||r<0)throw new Error("positive integer expected, got "+r)}function rc(r){return r instanceof Uint8Array||ArrayBuffer.isView(r)&&r.constructor.name==="Uint8Array"}function xe(r,...t){if(!rc(r))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(r.length))throw new Error("Uint8Array expected of length "+t+", got length="+r.length)}function sr(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");ye(r.outputLen),ye(r.blockLen)}function ge(r,t=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(t&&r.finished)throw new Error("Hash#digest() has already been called")}function Co(r,t){xe(r);let e=t.outputLen;if(r.length<e)throw new Error("digestInto() expects output buffer of length at least "+e)}var re=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function Ee(r){return new DataView(r.buffer,r.byteOffset,r.byteLength)}function wt(r,t){return r<<32-t|r>>>t}function ir(r,t){return r<<t|r>>>32-t>>>0}function Ko(r){if(typeof r!="string")throw new Error("utf8ToBytes expected string, got "+typeof r);return new Uint8Array(new TextEncoder().encode(r))}function Vt(r){return typeof r=="string"&&(r=Ko(r)),xe(r),r}function Xr(...r){let t=0;for(let n=0;n<r.length;n++){let o=r[n];xe(o),t+=o.length}let e=new Uint8Array(t);for(let n=0,o=0;n<r.length;n++){let s=r[n];e.set(s,o),o+=s.length}return e}var we=class{clone(){return this._cloneInto()}};function No(r,t){if(t!==void 0&&{}.toString.call(t)!=="[object Object]")throw new Error("Options should be object or undefined");return Object.assign(r,t)}function Be(r){let t=n=>r().update(Vt(n)).digest(),e=r();return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=()=>r(),t}function Se(r=32){if(re&&typeof re.getRandomValues=="function")return re.getRandomValues(new Uint8Array(r));if(re&&typeof re.randomBytes=="function")return re.randomBytes(r);throw new Error("crypto.getRandomValues must be defined")}function nc(r,t,e,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(t,e,n);let o=BigInt(32),s=BigInt(4294967295),i=Number(e>>o&s),c=Number(e&s),a=n?4:0,u=n?0:4;r.setUint32(t+a,i,n),r.setUint32(t+u,c,n)}function cr(r,t,e){return r&t^~r&e}function ar(r,t,e){return r&t^r&e^t&e}var zt=class extends we{constructor(t,e,n,o){super(),this.blockLen=t,this.outputLen=e,this.padOffset=n,this.isLE=o,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=Ee(this.buffer)}update(t){ge(this);let{view:e,buffer:n,blockLen:o}=this;t=Vt(t);let s=t.length;for(let i=0;i<s;){let c=Math.min(o-this.pos,s-i);if(c===o){let a=Ee(t);for(;o<=s-i;i+=o)this.process(a,i);continue}n.set(t.subarray(i,i+c),this.pos),this.pos+=c,i+=c,this.pos===o&&(this.process(e,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){ge(this),Co(t,this),this.finished=!0;let{buffer:e,view:n,blockLen:o,isLE:s}=this,{pos:i}=this;e[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>o-i&&(this.process(n,0),i=0);for(let h=i;h<o;h++)e[h]=0;nc(n,o-8,BigInt(this.length*8),s),this.process(n,0);let c=Ee(t),a=this.outputLen;if(a%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let u=a/4,f=this.get();if(u>f.length)throw new Error("_sha2: outputLen bigger than state");for(let h=0;h<u;h++)c.setUint32(4*h,f[h],s)}digest(){let{buffer:t,outputLen:e}=this;this.digestInto(t);let n=t.slice(0,e);return this.destroy(),n}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());let{blockLen:e,buffer:n,length:o,finished:s,destroyed:i,pos:c}=this;return t.length=o,t.pos=c,t.finished=s,t.destroyed=i,o%e&&t.buffer.set(n),t}};var fr=BigInt(4294967295),$r=BigInt(32);function Do(r,t=!1){return t?{h:Number(r&fr),l:Number(r>>$r&fr)}:{h:Number(r>>$r&fr)|0,l:Number(r&fr)|0}}function oc(r,t=!1){let e=new Uint32Array(r.length),n=new Uint32Array(r.length);for(let o=0;o<r.length;o++){let{h:s,l:i}=Do(r[o],t);[e[o],n[o]]=[s,i]}return[e,n]}var sc=(r,t)=>BigInt(r>>>0)<<$r|BigInt(t>>>0),ic=(r,t,e)=>r>>>e,cc=(r,t,e)=>r<<32-e|t>>>e,ac=(r,t,e)=>r>>>e|t<<32-e,fc=(r,t,e)=>r<<32-e|t>>>e,uc=(r,t,e)=>r<<64-e|t>>>e-32,hc=(r,t,e)=>r>>>e-32|t<<64-e,lc=(r,t)=>t,dc=(r,t)=>r,pc=(r,t,e)=>r<<e|t>>>32-e,mc=(r,t,e)=>t<<e|r>>>32-e,bc=(r,t,e)=>t<<e-32|r>>>64-e,yc=(r,t,e)=>r<<e-32|t>>>64-e;function xc(r,t,e,n){let o=(t>>>0)+(n>>>0);return{h:r+e+(o/2**32|0)|0,l:o|0}}var gc=(r,t,e)=>(r>>>0)+(t>>>0)+(e>>>0),wc=(r,t,e,n)=>t+e+n+(r/2**32|0)|0,Ec=(r,t,e,n)=>(r>>>0)+(t>>>0)+(e>>>0)+(n>>>0),Bc=(r,t,e,n,o)=>t+e+n+o+(r/2**32|0)|0,Sc=(r,t,e,n,o)=>(r>>>0)+(t>>>0)+(e>>>0)+(n>>>0)+(o>>>0),Ac=(r,t,e,n,o,s)=>t+e+n+o+s+(r/2**32|0)|0;var vc={fromBig:Do,split:oc,toBig:sc,shrSH:ic,shrSL:cc,rotrSH:ac,rotrSL:fc,rotrBH:uc,rotrBL:hc,rotr32H:lc,rotr32L:dc,rotlSH:pc,rotlSL:mc,rotlBH:bc,rotlBL:yc,add:xc,add3L:gc,add3H:wc,add4L:Ec,add4H:Bc,add5H:Ac,add5L:Sc},D=vc;var[Ic,Lc]=D.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(r=>BigInt(r))),Ft=new Uint32Array(80),Zt=new Uint32Array(80),Jr=class extends zt{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:t,Al:e,Bh:n,Bl:o,Ch:s,Cl:i,Dh:c,Dl:a,Eh:u,El:f,Fh:h,Fl:d,Gh:E,Gl:g,Hh:y,Hl:l}=this;return[t,e,n,o,s,i,c,a,u,f,h,d,E,g,y,l]}set(t,e,n,o,s,i,c,a,u,f,h,d,E,g,y,l){this.Ah=t|0,this.Al=e|0,this.Bh=n|0,this.Bl=o|0,this.Ch=s|0,this.Cl=i|0,this.Dh=c|0,this.Dl=a|0,this.Eh=u|0,this.El=f|0,this.Fh=h|0,this.Fl=d|0,this.Gh=E|0,this.Gl=g|0,this.Hh=y|0,this.Hl=l|0}process(t,e){for(let m=0;m<16;m++,e+=4)Ft[m]=t.getUint32(e),Zt[m]=t.getUint32(e+=4);for(let m=16;m<80;m++){let v=Ft[m-15]|0,_=Zt[m-15]|0,R=D.rotrSH(v,_,1)^D.rotrSH(v,_,8)^D.shrSH(v,_,7),I=D.rotrSL(v,_,1)^D.rotrSL(v,_,8)^D.shrSL(v,_,7),T=Ft[m-2]|0,L=Zt[m-2]|0,F=D.rotrSH(T,L,19)^D.rotrBH(T,L,61)^D.shrSH(T,L,6),H=D.rotrSL(T,L,19)^D.rotrBL(T,L,61)^D.shrSL(T,L,6),O=D.add4L(I,H,Zt[m-7],Zt[m-16]),X=D.add4H(O,R,F,Ft[m-7],Ft[m-16]);Ft[m]=X|0,Zt[m]=O|0}let{Ah:n,Al:o,Bh:s,Bl:i,Ch:c,Cl:a,Dh:u,Dl:f,Eh:h,El:d,Fh:E,Fl:g,Gh:y,Gl:l,Hh:x,Hl:B}=this;for(let m=0;m<80;m++){let v=D.rotrSH(h,d,14)^D.rotrSH(h,d,18)^D.rotrBH(h,d,41),_=D.rotrSL(h,d,14)^D.rotrSL(h,d,18)^D.rotrBL(h,d,41),R=h&E^~h&y,I=d&g^~d&l,T=D.add5L(B,_,I,Lc[m],Zt[m]),L=D.add5H(T,x,v,R,Ic[m],Ft[m]),F=T|0,H=D.rotrSH(n,o,28)^D.rotrBH(n,o,34)^D.rotrBH(n,o,39),O=D.rotrSL(n,o,28)^D.rotrBL(n,o,34)^D.rotrBL(n,o,39),X=n&s^n&c^s&c,S=o&i^o&a^i&a;x=y|0,B=l|0,y=E|0,l=g|0,E=h|0,g=d|0,{h,l:d}=D.add(u|0,f|0,L|0,F|0),u=c|0,f=a|0,c=s|0,a=i|0,s=n|0,i=o|0;let U=D.add3L(F,O,S);n=D.add3H(U,L,H,X),o=U|0}({h:n,l:o}=D.add(this.Ah|0,this.Al|0,n|0,o|0)),{h:s,l:i}=D.add(this.Bh|0,this.Bl|0,s|0,i|0),{h:c,l:a}=D.add(this.Ch|0,this.Cl|0,c|0,a|0),{h:u,l:f}=D.add(this.Dh|0,this.Dl|0,u|0,f|0),{h,l:d}=D.add(this.Eh|0,this.El|0,h|0,d|0),{h:E,l:g}=D.add(this.Fh|0,this.Fl|0,E|0,g|0),{h:y,l}=D.add(this.Gh|0,this.Gl|0,y|0,l|0),{h:x,l:B}=D.add(this.Hh|0,this.Hl|0,x|0,B|0),this.set(n,o,s,i,c,a,u,f,h,d,E,g,y,l,x,B)}roundClean(){Ft.fill(0),Zt.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};var ur=Be(()=>new Jr);var dr={};nt(dr,{aInRange:()=>lt,abool:()=>Et,abytes:()=>Ae,bitGet:()=>Kc,bitLen:()=>rn,bitMask:()=>qe,bitSet:()=>Nc,bytesToHex:()=>Nt,bytesToNumberBE:()=>Dt,bytesToNumberLE:()=>jt,concatBytes:()=>Pt,createHmacDrbg:()=>nn,ensureBytes:()=>j,equalBytes:()=>_c,hexToBytes:()=>oe,hexToNumber:()=>en,inRange:()=>Me,isBytes:()=>Gt,memoized:()=>ie,notImplemented:()=>Pc,numberToBytesBE:()=>Wt,numberToBytesLE:()=>se,numberToHexUnpadded:()=>ne,numberToVarBytesBE:()=>Rc,utf8ToBytes:()=>Cc,validateObject:()=>Lt});var hr=BigInt(0),lr=BigInt(1),Uc=BigInt(2);function Gt(r){return r instanceof Uint8Array||ArrayBuffer.isView(r)&&r.constructor.name==="Uint8Array"}function Ae(r){if(!Gt(r))throw new Error("Uint8Array expected")}function Et(r,t){if(typeof t!="boolean")throw new Error(r+" boolean expected, got "+t)}var Tc=Array.from({length:256},(r,t)=>t.toString(16).padStart(2,"0"));function Nt(r){Ae(r);let t="";for(let e=0;e<r.length;e++)t+=Tc[r[e]];return t}function ne(r){let t=r.toString(16);return t.length&1?"0"+t:t}function en(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);return r===""?hr:BigInt("0x"+r)}var Kt={_0:48,_9:57,A:65,F:70,a:97,f:102};function Po(r){if(r>=Kt._0&&r<=Kt._9)return r-Kt._0;if(r>=Kt.A&&r<=Kt.F)return r-(Kt.A-10);if(r>=Kt.a&&r<=Kt.f)return r-(Kt.a-10)}function oe(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);let t=r.length,e=t/2;if(t%2)throw new Error("hex string expected, got unpadded hex of length "+t);let n=new Uint8Array(e);for(let o=0,s=0;o<e;o++,s+=2){let i=Po(r.charCodeAt(s)),c=Po(r.charCodeAt(s+1));if(i===void 0||c===void 0){let a=r[s]+r[s+1];throw new Error('hex string expected, got non-hex character "'+a+'" at index '+s)}n[o]=i*16+c}return n}function Dt(r){return en(Nt(r))}function jt(r){return Ae(r),en(Nt(Uint8Array.from(r).reverse()))}function Wt(r,t){return oe(r.toString(16).padStart(t*2,"0"))}function se(r,t){return Wt(r,t).reverse()}function Rc(r){return oe(ne(r))}function j(r,t,e){let n;if(typeof t=="string")try{n=oe(t)}catch(s){throw new Error(r+" must be hex string or Uint8Array, cause: "+s)}else if(Gt(t))n=Uint8Array.from(t);else throw new Error(r+" must be hex string or Uint8Array");let o=n.length;if(typeof e=="number"&&o!==e)throw new Error(r+" of length "+e+" expected, got "+o);return n}function Pt(...r){let t=0;for(let n=0;n<r.length;n++){let o=r[n];Ae(o),t+=o.length}let e=new Uint8Array(t);for(let n=0,o=0;n<r.length;n++){let s=r[n];e.set(s,o),o+=s.length}return e}function _c(r,t){if(r.length!==t.length)return!1;let e=0;for(let n=0;n<r.length;n++)e|=r[n]^t[n];return e===0}function Cc(r){if(typeof r!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(r))}var Qr=r=>typeof r=="bigint"&&hr<=r;function Me(r,t,e){return Qr(r)&&Qr(t)&&Qr(e)&&t<=r&&r<e}function lt(r,t,e,n){if(!Me(t,e,n))throw new Error("expected valid "+r+": "+e+" <= n < "+n+", got "+t)}function rn(r){let t;for(t=0;r>hr;r>>=lr,t+=1);return t}function Kc(r,t){return r>>BigInt(t)&lr}function Nc(r,t,e){return r|(e?lr:hr)<<BigInt(t)}var qe=r=>(Uc<<BigInt(r-1))-lr,tn=r=>new Uint8Array(r),Oo=r=>Uint8Array.from(r);function nn(r,t,e){if(typeof r!="number"||r<2)throw new Error("hashLen must be a number");if(typeof t!="number"||t<2)throw new Error("qByteLen must be a number");if(typeof e!="function")throw new Error("hmacFn must be a function");let n=tn(r),o=tn(r),s=0,i=()=>{n.fill(1),o.fill(0),s=0},c=(...h)=>e(o,n,...h),a=(h=tn())=>{o=c(Oo([0]),h),n=c(),h.length!==0&&(o=c(Oo([1]),h),n=c())},u=()=>{if(s++>=1e3)throw new Error("drbg: tried 1000 values");let h=0,d=[];for(;h<t;){n=c();let E=n.slice();d.push(E),h+=n.length}return Pt(...d)};return(h,d)=>{i(),a(h);let E;for(;!(E=d(u()));)a();return i(),E}}var Dc={bigint:r=>typeof r=="bigint",function:r=>typeof r=="function",boolean:r=>typeof r=="boolean",string:r=>typeof r=="string",stringOrUint8Array:r=>typeof r=="string"||Gt(r),isSafeInteger:r=>Number.isSafeInteger(r),array:r=>Array.isArray(r),field:(r,t)=>t.Fp.isValid(r),hash:r=>typeof r=="function"&&Number.isSafeInteger(r.outputLen)};function Lt(r,t,e={}){let n=(o,s,i)=>{let c=Dc[s];if(typeof c!="function")throw new Error("invalid validator function");let a=r[o];if(!(i&&a===void 0)&&!c(a,r))throw new Error("param "+String(o)+" is invalid. Expected "+s+", got "+a)};for(let[o,s]of Object.entries(t))n(o,s,!1);for(let[o,s]of Object.entries(e))n(o,s,!0);return r}var Pc=()=>{throw new Error("not implemented")};function ie(r){let t=new WeakMap;return(e,...n)=>{let o=t.get(e);if(o!==void 0)return o;let s=r(e,...n);return t.set(e,s),s}}var $=BigInt(0),Z=BigInt(1),ce=BigInt(2),Oc=BigInt(3),on=BigInt(4),ko=BigInt(5),Ho=BigInt(8),kc=BigInt(9),Hc=BigInt(16);function V(r,t){let e=r%t;return e>=$?e:t+e}function Mc(r,t,e){if(t<$)throw new Error("invalid exponent, negatives unsupported");if(e<=$)throw new Error("invalid modulus");if(e===Z)return $;let n=Z;for(;t>$;)t&Z&&(n=n*r%e),r=r*r%e,t>>=Z;return n}function G(r,t,e){let n=r;for(;t-- >$;)n*=n,n%=e;return n}function pr(r,t){if(r===$)throw new Error("invert: expected non-zero number");if(t<=$)throw new Error("invert: expected positive modulus, got "+t);let e=V(r,t),n=t,o=$,s=Z,i=Z,c=$;for(;e!==$;){let u=n/e,f=n%e,h=o-i*u,d=s-c*u;n=e,e=f,o=i,s=c,i=h,c=d}if(n!==Z)throw new Error("invert: does not exist");return V(o,t)}function qc(r){let t=(r-Z)/ce,e,n,o;for(e=r-Z,n=0;e%ce===$;e/=ce,n++);for(o=ce;o<r&&Mc(o,t,r)!==r-Z;o++)if(o>1e3)throw new Error("Cannot find square root: likely non-prime P");if(n===1){let i=(r+Z)/on;return function(a,u){let f=a.pow(u,i);if(!a.eql(a.sqr(f),u))throw new Error("Cannot find square root");return f}}let s=(e+Z)/ce;return function(c,a){if(c.pow(a,t)===c.neg(c.ONE))throw new Error("Cannot find square root");let u=n,f=c.pow(c.mul(c.ONE,o),e),h=c.pow(a,s),d=c.pow(a,e);for(;!c.eql(d,c.ONE);){if(c.eql(d,c.ZERO))return c.ZERO;let E=1;for(let y=c.sqr(d);E<u&&!c.eql(y,c.ONE);E++)y=c.sqr(y);let g=c.pow(f,Z<<BigInt(u-E-1));f=c.sqr(g),h=c.mul(h,g),d=c.mul(d,f),u=E}return h}}function Vc(r){if(r%on===Oc){let t=(r+Z)/on;return function(n,o){let s=n.pow(o,t);if(!n.eql(n.sqr(s),o))throw new Error("Cannot find square root");return s}}if(r%Ho===ko){let t=(r-ko)/Ho;return function(n,o){let s=n.mul(o,ce),i=n.pow(s,t),c=n.mul(o,i),a=n.mul(n.mul(c,ce),i),u=n.mul(c,n.sub(a,n.ONE));if(!n.eql(n.sqr(u),o))throw new Error("Cannot find square root");return u}}return r%Hc,qc(r)}var Mo=(r,t)=>(V(r,t)&Z)===Z,zc=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function sn(r){let t={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},e=zc.reduce((n,o)=>(n[o]="function",n),t);return Lt(r,e)}function Fc(r,t,e){if(e<$)throw new Error("invalid exponent, negatives unsupported");if(e===$)return r.ONE;if(e===Z)return t;let n=r.ONE,o=t;for(;e>$;)e&Z&&(n=r.mul(n,o)),o=r.sqr(o),e>>=Z;return n}function Zc(r,t){let e=new Array(t.length),n=t.reduce((s,i,c)=>r.is0(i)?s:(e[c]=s,r.mul(s,i)),r.ONE),o=r.inv(n);return t.reduceRight((s,i,c)=>r.is0(i)?s:(e[c]=r.mul(s,e[c]),r.mul(s,i)),o),e}function cn(r,t){let e=t!==void 0?t:r.toString(2).length,n=Math.ceil(e/8);return{nBitLength:e,nByteLength:n}}function Yt(r,t,e=!1,n={}){if(r<=$)throw new Error("invalid field: expected ORDER > 0, got "+r);let{nBitLength:o,nByteLength:s}=cn(r,t);if(s>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let i,c=Object.freeze({ORDER:r,isLE:e,BITS:o,BYTES:s,MASK:qe(o),ZERO:$,ONE:Z,create:a=>V(a,r),isValid:a=>{if(typeof a!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof a);return $<=a&&a<r},is0:a=>a===$,isOdd:a=>(a&Z)===Z,neg:a=>V(-a,r),eql:(a,u)=>a===u,sqr:a=>V(a*a,r),add:(a,u)=>V(a+u,r),sub:(a,u)=>V(a-u,r),mul:(a,u)=>V(a*u,r),pow:(a,u)=>Fc(c,a,u),div:(a,u)=>V(a*pr(u,r),r),sqrN:a=>a*a,addN:(a,u)=>a+u,subN:(a,u)=>a-u,mulN:(a,u)=>a*u,inv:a=>pr(a,r),sqrt:n.sqrt||(a=>(i||(i=Vc(r)),i(c,a))),invertBatch:a=>Zc(c,a),cmov:(a,u,f)=>f?u:a,toBytes:a=>e?se(a,s):Wt(a,s),fromBytes:a=>{if(a.length!==s)throw new Error("Field.fromBytes: expected "+s+" bytes, got "+a.length);return e?jt(a):Dt(a)}});return Object.freeze(c)}function qo(r){if(typeof r!="bigint")throw new Error("field order must be bigint");let t=r.toString(2).length;return Math.ceil(t/8)}function an(r){let t=qo(r);return t+Math.ceil(t/2)}function Vo(r,t,e=!1){let n=r.length,o=qo(t),s=an(t);if(n<16||n<s||n>1024)throw new Error("expected "+s+"-1024 bytes of input, got "+n);let i=e?jt(r):Dt(r),c=V(i,t-Z)+Z;return e?se(c,o):Wt(c,o)}var zo=BigInt(0),mr=BigInt(1);function fn(r,t){let e=t.negate();return r?e:t}function Fo(r,t){if(!Number.isSafeInteger(r)||r<=0||r>t)throw new Error("invalid window size, expected [1.."+t+"], got W="+r)}function un(r,t){Fo(r,t);let e=Math.ceil(t/r)+1,n=2**(r-1);return{windows:e,windowSize:n}}function Gc(r,t){if(!Array.isArray(r))throw new Error("array expected");r.forEach((e,n)=>{if(!(e instanceof t))throw new Error("invalid point at index "+n)})}function jc(r,t){if(!Array.isArray(r))throw new Error("array of scalars expected");r.forEach((e,n)=>{if(!t.isValid(e))throw new Error("invalid scalar at index "+n)})}var hn=new WeakMap,Zo=new WeakMap;function ln(r){return Zo.get(r)||1}function br(r,t){return{constTimeNegate:fn,hasPrecomputes(e){return ln(e)!==1},unsafeLadder(e,n,o=r.ZERO){let s=e;for(;n>zo;)n&mr&&(o=o.add(s)),s=s.double(),n>>=mr;return o},precomputeWindow(e,n){let{windows:o,windowSize:s}=un(n,t),i=[],c=e,a=c;for(let u=0;u<o;u++){a=c,i.push(a);for(let f=1;f<s;f++)a=a.add(c),i.push(a);c=a.double()}return i},wNAF(e,n,o){let{windows:s,windowSize:i}=un(e,t),c=r.ZERO,a=r.BASE,u=BigInt(2**e-1),f=2**e,h=BigInt(e);for(let d=0;d<s;d++){let E=d*i,g=Number(o&u);o>>=h,g>i&&(g-=f,o+=mr);let y=E,l=E+Math.abs(g)-1,x=d%2!==0,B=g<0;g===0?a=a.add(fn(x,n[y])):c=c.add(fn(B,n[l]))}return{p:c,f:a}},wNAFUnsafe(e,n,o,s=r.ZERO){let{windows:i,windowSize:c}=un(e,t),a=BigInt(2**e-1),u=2**e,f=BigInt(e);for(let h=0;h<i;h++){let d=h*c;if(o===zo)break;let E=Number(o&a);if(o>>=f,E>c&&(E-=u,o+=mr),E===0)continue;let g=n[d+Math.abs(E)-1];E<0&&(g=g.negate()),s=s.add(g)}return s},getPrecomputes(e,n,o){let s=hn.get(n);return s||(s=this.precomputeWindow(n,e),e!==1&&hn.set(n,o(s))),s},wNAFCached(e,n,o){let s=ln(e);return this.wNAF(s,this.getPrecomputes(s,e,o),n)},wNAFCachedUnsafe(e,n,o,s){let i=ln(e);return i===1?this.unsafeLadder(e,n,s):this.wNAFUnsafe(i,this.getPrecomputes(i,e,o),n,s)},setWindowSize(e,n){Fo(n,t),Zo.set(e,n),hn.delete(e)}}}function yr(r,t,e,n){if(Gc(e,r),jc(n,t),e.length!==n.length)throw new Error("arrays of points and scalars must have equal length");let o=r.ZERO,s=rn(BigInt(e.length)),i=s>12?s-3:s>4?s-2:s?2:1,c=(1<<i)-1,a=new Array(c+1).fill(o),u=Math.floor((t.BITS-1)/i)*i,f=o;for(let h=u;h>=0;h-=i){a.fill(o);for(let E=0;E<n.length;E++){let g=n[E],y=Number(g>>BigInt(h)&BigInt(c));a[y]=a[y].add(e[E])}let d=o;for(let E=a.length-1,g=o;E>0;E--)g=g.add(a[E]),d=d.add(g);if(f=f.add(d),h!==0)for(let E=0;E<i;E++)f=f.double()}return f}function Ve(r){return sn(r.Fp),Lt(r,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...cn(r.n,r.nBitLength),...r,p:r.Fp.ORDER})}var Bt=BigInt(0),dt=BigInt(1),xr=BigInt(2),Wc=BigInt(8),Yc={zip215:!0};function Xc(r){let t=Ve(r);return Lt(r,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...t})}function Go(r){let t=Xc(r),{Fp:e,n,prehash:o,hash:s,randomBytes:i,nByteLength:c,h:a}=t,u=xr<<BigInt(c*8)-dt,f=e.create,h=Yt(t.n,t.nBitLength),d=t.uvRatio||((b,p)=>{try{return{isValid:!0,value:e.sqrt(b*e.inv(p))}}catch{return{isValid:!1,value:Bt}}}),E=t.adjustScalarBytes||(b=>b),g=t.domain||((b,p,w)=>{if(Et("phflag",w),p.length||w)throw new Error("Contexts/pre-hash are not supported");return b});function y(b,p){lt("coordinate "+b,p,Bt,u)}function l(b){if(!(b instanceof m))throw new Error("ExtendedPoint expected")}let x=ie((b,p)=>{let{ex:w,ey:A,ez:C}=b,K=b.is0();p==null&&(p=K?Wc:e.inv(C));let P=f(w*p),k=f(A*p),N=f(C*p);if(K)return{x:Bt,y:dt};if(N!==dt)throw new Error("invZ was invalid");return{x:P,y:k}}),B=ie(b=>{let{a:p,d:w}=t;if(b.is0())throw new Error("bad point: ZERO");let{ex:A,ey:C,ez:K,et:P}=b,k=f(A*A),N=f(C*C),M=f(K*K),z=f(M*M),Q=f(k*p),tt=f(M*f(Q+N)),rt=f(z+f(w*f(k*N)));if(tt!==rt)throw new Error("bad point: equation left != right (1)");let st=f(A*C),ht=f(K*P);if(st!==ht)throw new Error("bad point: equation left != right (2)");return!0});class m{constructor(p,w,A,C){this.ex=p,this.ey=w,this.ez=A,this.et=C,y("x",p),y("y",w),y("z",A),y("t",C),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(p){if(p instanceof m)throw new Error("extended point not allowed");let{x:w,y:A}=p||{};return y("x",w),y("y",A),new m(w,A,dt,f(w*A))}static normalizeZ(p){let w=e.invertBatch(p.map(A=>A.ez));return p.map((A,C)=>A.toAffine(w[C])).map(m.fromAffine)}static msm(p,w){return yr(m,h,p,w)}_setWindowSize(p){R.setWindowSize(this,p)}assertValidity(){B(this)}equals(p){l(p);let{ex:w,ey:A,ez:C}=this,{ex:K,ey:P,ez:k}=p,N=f(w*k),M=f(K*C),z=f(A*k),Q=f(P*C);return N===M&&z===Q}is0(){return this.equals(m.ZERO)}negate(){return new m(f(-this.ex),this.ey,this.ez,f(-this.et))}double(){let{a:p}=t,{ex:w,ey:A,ez:C}=this,K=f(w*w),P=f(A*A),k=f(xr*f(C*C)),N=f(p*K),M=w+A,z=f(f(M*M)-K-P),Q=N+P,tt=Q-k,rt=N-P,st=f(z*tt),ht=f(Q*rt),at=f(z*rt),vt=f(tt*Q);return new m(st,ht,vt,at)}add(p){l(p);let{a:w,d:A}=t,{ex:C,ey:K,ez:P,et:k}=this,{ex:N,ey:M,ez:z,et:Q}=p;if(w===BigInt(-1)){let io=f((K-C)*(M+N)),co=f((K+C)*(M-N)),Or=f(co-io);if(Or===Bt)return this.double();let ao=f(P*xr*Q),fo=f(k*xr*z),uo=fo+ao,ho=co+io,lo=fo-ao,si=f(uo*Or),ii=f(ho*lo),ci=f(uo*lo),ai=f(Or*ho);return new m(si,ii,ai,ci)}let tt=f(C*N),rt=f(K*M),st=f(k*A*Q),ht=f(P*z),at=f((C+K)*(N+M)-tt-rt),vt=ht-st,_t=ht+st,Re=f(rt-w*tt),ei=f(at*vt),ri=f(_t*Re),ni=f(at*Re),oi=f(vt*_t);return new m(ei,ri,oi,ni)}subtract(p){return this.add(p.negate())}wNAF(p){return R.wNAFCached(this,p,m.normalizeZ)}multiply(p){let w=p;lt("scalar",w,dt,n);let{p:A,f:C}=this.wNAF(w);return m.normalizeZ([A,C])[0]}multiplyUnsafe(p,w=m.ZERO){let A=p;return lt("scalar",A,Bt,n),A===Bt?_:this.is0()||A===dt?this:R.wNAFCachedUnsafe(this,A,m.normalizeZ,w)}isSmallOrder(){return this.multiplyUnsafe(a).is0()}isTorsionFree(){return R.unsafeLadder(this,n).is0()}toAffine(p){return x(this,p)}clearCofactor(){let{h:p}=t;return p===dt?this:this.multiplyUnsafe(p)}static fromHex(p,w=!1){let{d:A,a:C}=t,K=e.BYTES;p=j("pointHex",p,K),Et("zip215",w);let P=p.slice(),k=p[K-1];P[K-1]=k&-129;let N=jt(P),M=w?u:e.ORDER;lt("pointHex.y",N,Bt,M);let z=f(N*N),Q=f(z-dt),tt=f(A*z-C),{isValid:rt,value:st}=d(Q,tt);if(!rt)throw new Error("Point.fromHex: invalid y coordinate");let ht=(st&dt)===dt,at=(k&128)!==0;if(!w&&st===Bt&&at)throw new Error("Point.fromHex: x=0 and x_0=1");return at!==ht&&(st=f(-st)),m.fromAffine({x:st,y:N})}static fromPrivateKey(p){return L(p).point}toRawBytes(){let{x:p,y:w}=this.toAffine(),A=se(w,e.BYTES);return A[A.length-1]|=p&dt?128:0,A}toHex(){return Nt(this.toRawBytes())}}m.BASE=new m(t.Gx,t.Gy,dt,f(t.Gx*t.Gy)),m.ZERO=new m(Bt,dt,dt,Bt);let{BASE:v,ZERO:_}=m,R=br(m,c*8);function I(b){return V(b,n)}function T(b){return I(jt(b))}function L(b){let p=e.BYTES;b=j("private key",b,p);let w=j("hashed private key",s(b),2*p),A=E(w.slice(0,p)),C=w.slice(p,2*p),K=T(A),P=v.multiply(K),k=P.toRawBytes();return{head:A,prefix:C,scalar:K,point:P,pointBytes:k}}function F(b){return L(b).pointBytes}function H(b=new Uint8Array,...p){let w=Pt(...p);return T(s(g(w,j("context",b),!!o)))}function O(b,p,w={}){b=j("message",b),o&&(b=o(b));let{prefix:A,scalar:C,pointBytes:K}=L(p),P=H(w.context,A,b),k=v.multiply(P).toRawBytes(),N=H(w.context,k,K,b),M=I(P+N*C);lt("signature.s",M,Bt,n);let z=Pt(k,se(M,e.BYTES));return j("result",z,e.BYTES*2)}let X=Yc;function S(b,p,w,A=X){let{context:C,zip215:K}=A,P=e.BYTES;b=j("signature",b,2*P),p=j("message",p),w=j("publicKey",w,P),K!==void 0&&Et("zip215",K),o&&(p=o(p));let k=jt(b.slice(P,2*P)),N,M,z;try{N=m.fromHex(w,K),M=m.fromHex(b.slice(0,P),K),z=v.multiplyUnsafe(k)}catch{return!1}if(!K&&N.isSmallOrder())return!1;let Q=H(C,M.toRawBytes(),N.toRawBytes(),p);return M.add(N.multiplyUnsafe(Q)).subtract(z).clearCofactor().equals(m.ZERO)}return v._setWindowSize(8),{CURVE:t,getPublicKey:F,sign:O,verify:S,ExtendedPoint:m,utils:{getExtendedPublicKey:L,randomPrivateKey:()=>i(e.BYTES),precompute(b=8,p=m.BASE){return p._setWindowSize(b),p.multiply(BigInt(3)),p}}}}var dn=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),jo=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),gu=BigInt(0),$c=BigInt(1),Wo=BigInt(2),wu=BigInt(3),Jc=BigInt(5),Qc=BigInt(8);function ta(r){let t=BigInt(10),e=BigInt(20),n=BigInt(40),o=BigInt(80),s=dn,c=r*r%s*r%s,a=G(c,Wo,s)*c%s,u=G(a,$c,s)*r%s,f=G(u,Jc,s)*u%s,h=G(f,t,s)*f%s,d=G(h,e,s)*h%s,E=G(d,n,s)*d%s,g=G(E,o,s)*E%s,y=G(g,o,s)*E%s,l=G(y,t,s)*f%s;return{pow_p_5_8:G(l,Wo,s)*r%s,b2:c}}function ea(r){return r[0]&=248,r[31]&=127,r[31]|=64,r}function ra(r,t){let e=dn,n=V(t*t*t,e),o=V(n*n*t,e),s=ta(r*o).pow_p_5_8,i=V(r*n*s,e),c=V(t*i*i,e),a=i,u=V(i*jo,e),f=c===r,h=c===V(-r,e),d=c===V(-r*jo,e);return f&&(i=a),(h||d)&&(i=u),Mo(i,e)&&(i=V(-i,e)),{isValid:f||h,value:i}}var na=Yt(dn,void 0,!0),oa={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:na,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:Qc,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:ur,randomBytes:Se,adjustScalarBytes:ea,uvRatio:ra},ve=Go(oa);var Ie=32,Ut=64,gr=32;function Yo(){let r=ve.utils.randomPrivateKey(),t=ve.getPublicKey(r);return{privateKey:Qo(r,t),publicKey:t}}function Xo(r){if(r.length!==gr)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');let t=r,e=ve.getPublicKey(t);return{privateKey:Qo(t,e),publicKey:e}}function $o(r,t){let e=r.subarray(0,gr);return ve.sign(t instanceof Uint8Array?t:t.subarray(),e)}function Jo(r,t,e){return ve.verify(t,e instanceof Uint8Array?e:e.subarray(),r)}function Qo(r,t){let e=new Uint8Array(Ut);for(let n=0;n<gr;n++)e[n]=r[n],e[gr+n]=t[n];return e}var ze=class{type="Ed25519";raw;constructor(t){this.raw=Le(t,Ie)}toMultihash(){return He.digest(Fe(this))}toCID(){return It.createV1(114,this.toMultihash())}toString(){return it.encode(this.toMultihash().bytes).substring(1)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:pt(this.raw,t.raw)}verify(t,e){return Jo(this.raw,e,t)}},ae=class{type="Ed25519";raw;publicKey;constructor(t,e){this.raw=Le(t,Ut),this.publicKey=new ze(e)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:pt(this.raw,t.raw)}sign(t){return $o(this.raw,t)}};function pn(r){if(r.length>Ut){r=Le(r,Ut+Ie);let n=r.subarray(0,Ut),o=r.subarray(Ut,r.length);return new ae(n,o)}r=Le(r,Ut);let t=r.subarray(0,Ut),e=r.subarray(Ie);return new ae(t,e)}function wr(r){return r=Le(r,Ie),new ze(r)}async function es(){let{privateKey:r,publicKey:t}=Yo();return new ae(r,t)}async function rs(r){let{privateKey:t,publicKey:e}=Xo(r);return new ae(t,e)}function Le(r,t){if(r=Uint8Array.from(r??[]),r.length!==t)throw new q(`Key must be a Uint8Array of length ${t}, got ${r.length}`);return r}function Ot(r=0){return new Uint8Array(r)}function mt(r=0){return new Uint8Array(r)}var sa=Math.pow(2,7),ia=Math.pow(2,14),ca=Math.pow(2,21),ns=Math.pow(2,28),os=Math.pow(2,35),ss=Math.pow(2,42),is=Math.pow(2,49),ft=128,Xt=127;function Ze(r){if(r<sa)return 1;if(r<ia)return 2;if(r<ca)return 3;if(r<ns)return 4;if(r<os)return 5;if(r<ss)return 6;if(r<is)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function cs(r,t,e=0){switch(Ze(r)){case 8:t[e++]=r&255|ft,r/=128;case 7:t[e++]=r&255|ft,r/=128;case 6:t[e++]=r&255|ft,r/=128;case 5:t[e++]=r&255|ft,r/=128;case 4:t[e++]=r&255|ft,r>>>=7;case 3:t[e++]=r&255|ft,r>>>=7;case 2:t[e++]=r&255|ft,r>>>=7;case 1:{t[e++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return t}function as(r,t){let e=r[t],n=0;if(n+=e&Xt,e<ft||(e=r[t+1],n+=(e&Xt)<<7,e<ft)||(e=r[t+2],n+=(e&Xt)<<14,e<ft)||(e=r[t+3],n+=(e&Xt)<<21,e<ft)||(e=r[t+4],n+=(e&Xt)*ns,e<ft)||(e=r[t+5],n+=(e&Xt)*os,e<ft)||(e=r[t+6],n+=(e&Xt)*ss,e<ft)||(e=r[t+7],n+=(e&Xt)*is,e<ft))return n;throw new RangeError("Could not decode varint")}var mn=new Float32Array([-0]),$t=new Uint8Array(mn.buffer);function fs(r,t,e){mn[0]=r,t[e]=$t[0],t[e+1]=$t[1],t[e+2]=$t[2],t[e+3]=$t[3]}function us(r,t){return $t[0]=r[t],$t[1]=r[t+1],$t[2]=r[t+2],$t[3]=r[t+3],mn[0]}var bn=new Float64Array([-0]),ct=new Uint8Array(bn.buffer);function hs(r,t,e){bn[0]=r,t[e]=ct[0],t[e+1]=ct[1],t[e+2]=ct[2],t[e+3]=ct[3],t[e+4]=ct[4],t[e+5]=ct[5],t[e+6]=ct[6],t[e+7]=ct[7]}function ls(r,t){return ct[0]=r[t],ct[1]=r[t+1],ct[2]=r[t+2],ct[3]=r[t+3],ct[4]=r[t+4],ct[5]=r[t+5],ct[6]=r[t+6],ct[7]=r[t+7],bn[0]}var aa=BigInt(Number.MAX_SAFE_INTEGER),fa=BigInt(Number.MIN_SAFE_INTEGER),bt=class r{lo;hi;constructor(t,e){this.lo=t|0,this.hi=e|0}toNumber(t=!1){if(!t&&this.hi>>>31>0){let e=~this.lo+1>>>0,n=~this.hi>>>0;return e===0&&(n=n+1>>>0),-(e+n*4294967296)}return this.lo+this.hi*4294967296}toBigInt(t=!1){if(t)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let e=~this.lo+1>>>0,n=~this.hi>>>0;return e===0&&(n=n+1>>>0),-(BigInt(e)+(BigInt(n)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(t=!1){return this.toBigInt(t).toString()}zzEncode(){let t=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^t)>>>0,this.lo=(this.lo<<1^t)>>>0,this}zzDecode(){let t=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^t)>>>0,this.hi=(this.hi>>>1^t)>>>0,this}length(){let t=this.lo,e=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return n===0?e===0?t<16384?t<128?1:2:t<2097152?3:4:e<16384?e<128?5:6:e<2097152?7:8:n<128?9:10}static fromBigInt(t){if(t===0n)return fe;if(t<aa&&t>fa)return this.fromNumber(Number(t));let e=t<0n;e&&(t=-t);let n=t>>32n,o=t-(n<<32n);return e&&(n=~n|0n,o=~o|0n,++o>ds&&(o=0n,++n>ds&&(n=0n))),new r(Number(o),Number(n))}static fromNumber(t){if(t===0)return fe;let e=t<0;e&&(t=-t);let n=t>>>0,o=(t-n)/4294967296>>>0;return e&&(o=~o>>>0,n=~n>>>0,++n>4294967295&&(n=0,++o>4294967295&&(o=0))),new r(n,o)}static from(t){return typeof t=="number"?r.fromNumber(t):typeof t=="bigint"?r.fromBigInt(t):typeof t=="string"?r.fromBigInt(BigInt(t)):t.low!=null||t.high!=null?new r(t.low>>>0,t.high>>>0):fe}},fe=new bt(0,0);fe.toBigInt=function(){return 0n};fe.zzEncode=fe.zzDecode=function(){return this};fe.length=function(){return 1};var ds=4294967296n;function ps(r){let t=0,e=0;for(let n=0;n<r.length;++n)e=r.charCodeAt(n),e<128?t+=1:e<2048?t+=2:(e&64512)===55296&&(r.charCodeAt(n+1)&64512)===56320?(++n,t+=4):t+=3;return t}function ms(r,t,e){if(e-t<1)return"";let o,s=[],i=0,c;for(;t<e;)c=r[t++],c<128?s[i++]=c:c>191&&c<224?s[i++]=(c&31)<<6|r[t++]&63:c>239&&c<365?(c=((c&7)<<18|(r[t++]&63)<<12|(r[t++]&63)<<6|r[t++]&63)-65536,s[i++]=55296+(c>>10),s[i++]=56320+(c&1023)):s[i++]=(c&15)<<12|(r[t++]&63)<<6|r[t++]&63,i>8191&&((o??(o=[])).push(String.fromCharCode.apply(String,s)),i=0);return o!=null?(i>0&&o.push(String.fromCharCode.apply(String,s.slice(0,i))),o.join("")):String.fromCharCode.apply(String,s.slice(0,i))}function yn(r,t,e){let n=e,o,s;for(let i=0;i<r.length;++i)o=r.charCodeAt(i),o<128?t[e++]=o:o<2048?(t[e++]=o>>6|192,t[e++]=o&63|128):(o&64512)===55296&&((s=r.charCodeAt(i+1))&64512)===56320?(o=65536+((o&1023)<<10)+(s&1023),++i,t[e++]=o>>18|240,t[e++]=o>>12&63|128,t[e++]=o>>6&63|128,t[e++]=o&63|128):(t[e++]=o>>12|224,t[e++]=o>>6&63|128,t[e++]=o&63|128);return e-n}function St(r,t){return RangeError(`index out of range: ${r.pos} + ${t??1} > ${r.len}`)}function Er(r,t){return(r[t-4]|r[t-3]<<8|r[t-2]<<16|r[t-1]<<24)>>>0}var xn=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(t){this.buf=t,this.pos=0,this.len=t.length}uint32(){let t=4294967295;if(t=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(t=(t|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return t;if((this.pos+=5)>this.len)throw this.pos=this.len,St(this,10);return t}int32(){return this.uint32()|0}sint32(){let t=this.uint32();return t>>>1^-(t&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw St(this,4);return Er(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw St(this,4);return Er(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw St(this,4);let t=us(this.buf,this.pos);return this.pos+=4,t}double(){if(this.pos+8>this.len)throw St(this,4);let t=ls(this.buf,this.pos);return this.pos+=8,t}bytes(){let t=this.uint32(),e=this.pos,n=this.pos+t;if(n>this.len)throw St(this,t);return this.pos+=t,e===n?new Uint8Array(0):this.buf.subarray(e,n)}string(){let t=this.bytes();return ms(t,0,t.length)}skip(t){if(typeof t=="number"){if(this.pos+t>this.len)throw St(this,t);this.pos+=t}else do if(this.pos>=this.len)throw St(this);while((this.buf[this.pos++]&128)!==0);return this}skipType(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(t=this.uint32()&7)!==4;)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${t} at offset ${this.pos}`)}return this}readLongVarint(){let t=new bt(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(this.buf[this.pos]&127)<<28)>>>0,t.hi=(t.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return t;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw St(this);if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,t}if(this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw St(this);if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw St(this,8);let t=Er(this.buf,this.pos+=4),e=Er(this.buf,this.pos+=4);return new bt(t,e)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let t=as(this.buf,this.pos);return this.pos+=Ze(t),t}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function gn(r){return new xn(r instanceof Uint8Array?r:r.subarray())}function Br(r,t,e){let n=gn(r);return t.decode(n,void 0,e)}var wn={};nt(wn,{base10:()=>ua});var ua=qt({prefix:"9",name:"base10",alphabet:"0123456789"});var En={};nt(En,{base16:()=>ha,base16upper:()=>la});var ha=Y({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),la=Y({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Bn={};nt(Bn,{base2:()=>da});var da=Y({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Sn={};nt(Sn,{base256emoji:()=>xa});var ys=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),pa=ys.reduce((r,t,e)=>(r[e]=t,r),[]),ma=ys.reduce((r,t,e)=>{let n=t.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${t}`);return r[n]=e,r},[]);function ba(r){return r.reduce((t,e)=>(t+=pa[e],t),"")}function ya(r){let t=[];for(let e of r){let n=e.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${e}`);let o=ma[n];if(o==null)throw new Error(`Non-base256emoji character: ${e}`);t.push(o)}return new Uint8Array(t)}var xa=le({prefix:"\u{1F680}",name:"base256emoji",encode:ba,decode:ya});var vn={};nt(vn,{base64:()=>An,base64pad:()=>ga,base64url:()=>wa,base64urlpad:()=>Ea});var An=Y({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),ga=Y({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),wa=Y({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),Ea=Y({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var In={};nt(In,{base8:()=>Ba});var Ba=Y({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var Ln={};nt(Ln,{identity:()=>Sa});var Sa=le({prefix:"\0",name:"identity",encode:r=>xo(r),decode:r=>yo(r)});var Qu=new TextEncoder,th=new TextDecoder;var Rn={};nt(Rn,{sha256:()=>Sr,sha512:()=>Ia});function Tn({name:r,code:t,encode:e}){return new Un(r,t,e)}var Un=class{name;code;encode;constructor(t,e,n){this.name=t,this.code=e,this.encode=n}digest(t){if(t instanceof Uint8Array){let e=this.encode(t);return e instanceof Uint8Array?gt(this.code,e):e.then(n=>gt(this.code,n))}else throw Error("Unknown type, must be binary type")}};function gs(r){return async t=>new Uint8Array(await crypto.subtle.digest(r,t))}var Sr=Tn({name:"sha2-256",code:18,encode:gs("SHA-256")}),Ia=Tn({name:"sha2-512",code:19,encode:gs("SHA-512")});var _n={...Ln,...Bn,...In,...wn,...En,...Zr,...Gr,...Fr,...vn,...Sn},lh={...Rn,...Yr};function Es(r,t,e,n){return{name:r,prefix:t,encoder:{name:r,prefix:t,encode:e},decoder:{decode:n}}}var ws=Es("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),Cn=Es("ascii","a",r=>{let t="a";for(let e=0;e<r.length;e++)t+=String.fromCharCode(r[e]);return t},r=>{r=r.substring(1);let t=mt(r.length);for(let e=0;e<r.length;e++)t[e]=r.charCodeAt(e);return t}),La={utf8:ws,"utf-8":ws,hex:_n.base16,latin1:Cn,ascii:Cn,binary:Cn,..._n},Ar=La;function J(r,t="utf8"){let e=Ar[t];if(e==null)throw new Error(`Unsupported encoding "${t}"`);return e.decoder.decode(`${e.prefix}${r}`)}function Kn(r){let t=r??8192,e=t>>>1,n,o=t;return function(i){if(i<1||i>e)return mt(i);o+i>t&&(n=mt(t),o=0);let c=n.subarray(o,o+=i);return(o&7)!==0&&(o=(o|7)+1),c}}var ue=class{fn;len;next;val;constructor(t,e,n){this.fn=t,this.len=e,this.next=void 0,this.val=n}};function Nn(){}var Pn=class{head;tail;len;next;constructor(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}},Ua=Kn();function Ta(r){return globalThis.Buffer!=null?mt(r):Ua(r)}var je=class{len;head;tail;states;constructor(){this.len=0,this.head=new ue(Nn,0,0),this.tail=this.head,this.states=null}_push(t,e,n){return this.tail=this.tail.next=new ue(t,e,n),this.len+=e,this}uint32(t){return this.len+=(this.tail=this.tail.next=new On((t=t>>>0)<128?1:t<16384?2:t<2097152?3:t<268435456?4:5,t)).len,this}int32(t){return t<0?this._push(vr,10,bt.fromNumber(t)):this.uint32(t)}sint32(t){return this.uint32((t<<1^t>>31)>>>0)}uint64(t){let e=bt.fromBigInt(t);return this._push(vr,e.length(),e)}uint64Number(t){return this._push(cs,Ze(t),t)}uint64String(t){return this.uint64(BigInt(t))}int64(t){return this.uint64(t)}int64Number(t){return this.uint64Number(t)}int64String(t){return this.uint64String(t)}sint64(t){let e=bt.fromBigInt(t).zzEncode();return this._push(vr,e.length(),e)}sint64Number(t){let e=bt.fromNumber(t).zzEncode();return this._push(vr,e.length(),e)}sint64String(t){return this.sint64(BigInt(t))}bool(t){return this._push(Dn,1,t?1:0)}fixed32(t){return this._push(Ge,4,t>>>0)}sfixed32(t){return this.fixed32(t)}fixed64(t){let e=bt.fromBigInt(t);return this._push(Ge,4,e.lo)._push(Ge,4,e.hi)}fixed64Number(t){let e=bt.fromNumber(t);return this._push(Ge,4,e.lo)._push(Ge,4,e.hi)}fixed64String(t){return this.fixed64(BigInt(t))}sfixed64(t){return this.fixed64(t)}sfixed64Number(t){return this.fixed64Number(t)}sfixed64String(t){return this.fixed64String(t)}float(t){return this._push(fs,4,t)}double(t){return this._push(hs,8,t)}bytes(t){let e=t.length>>>0;return e===0?this._push(Dn,1,0):this.uint32(e)._push(_a,e,t)}string(t){let e=ps(t);return e!==0?this.uint32(e)._push(yn,e,t):this._push(Dn,1,0)}fork(){return this.states=new Pn(this),this.head=this.tail=new ue(Nn,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new ue(Nn,0,0),this.len=0),this}ldelim(){let t=this.head,e=this.tail,n=this.len;return this.reset().uint32(n),n!==0&&(this.tail.next=t.next,this.tail=e,this.len+=n),this}finish(){let t=this.head.next,e=Ta(this.len),n=0;for(;t!=null;)t.fn(t.val,e,n),n+=t.len,t=t.next;return e}};function Dn(r,t,e){t[e]=r&255}function Ra(r,t,e){for(;r>127;)t[e++]=r&127|128,r>>>=7;t[e]=r}var On=class extends ue{next;constructor(t,e){super(Ra,t,e),this.next=void 0}};function vr(r,t,e){for(;r.hi!==0;)t[e++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)t[e++]=r.lo&127|128,r.lo=r.lo>>>7;t[e++]=r.lo}function Ge(r,t,e){t[e]=r&255,t[e+1]=r>>>8&255,t[e+2]=r>>>16&255,t[e+3]=r>>>24}function _a(r,t,e){t.set(r,e)}globalThis.Buffer!=null&&(je.prototype.bytes=function(r){let t=r.length>>>0;return this.uint32(t),t>0&&this._push(Ca,t,r),this},je.prototype.string=function(r){let t=globalThis.Buffer.byteLength(r);return this.uint32(t),t>0&&this._push(Ka,t,r),this});function Ca(r,t,e){t.set(r,e)}function Ka(r,t,e){r.length<40?yn(r,t,e):t.utf8Write!=null?t.utf8Write(r,e):t.set(J(r),e)}function kn(){return new je}function Ir(r,t){let e=kn();return t.encode(r,e,{lengthDelimited:!1}),e.finish()}var Ue;(function(r){r[r.VARINT=0]="VARINT",r[r.BIT64=1]="BIT64",r[r.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",r[r.START_GROUP=3]="START_GROUP",r[r.END_GROUP=4]="END_GROUP",r[r.BIT32=5]="BIT32"})(Ue||(Ue={}));function Lr(r,t,e,n){return{name:r,type:t,encode:e,decode:n}}function Hn(r){function t(o){if(r[o.toString()]==null)throw new Error("Invalid enum value");return r[o]}let e=function(s,i){let c=t(s);i.int32(c)},n=function(s){let i=s.int32();return t(i)};return Lr("enum",Ue.VARINT,e,n)}function Ur(r,t){return Lr("message",Ue.LENGTH_DELIMITED,r,t)}var W;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.secp256k1="secp256k1"})(W||(W={}));var Mn;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.secp256k1=2]="secp256k1"})(Mn||(Mn={}));(function(r){r.codec=()=>Hn(Mn)})(W||(W={}));var Tt;(function(r){let t;r.codec=()=>(t==null&&(t=Ur((e,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),e.Type!=null&&(n.uint32(8),W.codec().encode(e.Type,n)),e.Data!=null&&(n.uint32(18),n.bytes(e.Data)),o.lengthDelimited!==!1&&n.ldelim()},(e,n,o={})=>{let s={},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let c=e.uint32();switch(c>>>3){case 1:{s.Type=W.codec().decode(e);break}case 2:{s.Data=e.bytes();break}default:{e.skipType(c&7);break}}}return s})),t),r.encode=e=>Ir(e,r.codec()),r.decode=(e,n)=>Br(e,r.codec(),n)})(Tt||(Tt={}));var We;(function(r){let t;r.codec=()=>(t==null&&(t=Ur((e,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),e.Type!=null&&(n.uint32(8),W.codec().encode(e.Type,n)),e.Data!=null&&(n.uint32(18),n.bytes(e.Data)),o.lengthDelimited!==!1&&n.ldelim()},(e,n,o={})=>{let s={},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let c=e.uint32();switch(c>>>3){case 1:{s.Type=W.codec().decode(e);break}case 2:{s.Data=e.bytes();break}default:{e.skipType(c&7);break}}}return s})),t),r.encode=e=>Ir(e,r.codec()),r.decode=(e,n)=>Br(e,r.codec(),n)})(We||(We={}));var Xe={};nt(Xe,{MAX_RSA_KEY_SIZE:()=>Gn,generateRSAKeyPair:()=>Yn,jwkToJWKKeyPair:()=>Ns,jwkToPkcs1:()=>Za,jwkToPkix:()=>Wn,jwkToRSAPrivateKey:()=>Ks,pkcs1ToJwk:()=>_s,pkcs1ToRSAPrivateKey:()=>Cr,pkixToJwk:()=>Cs,pkixToRSAPublicKey:()=>Kr});var Na=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Jt=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Qt=new Uint32Array(64),qn=class extends zt{constructor(){super(64,32,8,!1),this.A=Jt[0]|0,this.B=Jt[1]|0,this.C=Jt[2]|0,this.D=Jt[3]|0,this.E=Jt[4]|0,this.F=Jt[5]|0,this.G=Jt[6]|0,this.H=Jt[7]|0}get(){let{A:t,B:e,C:n,D:o,E:s,F:i,G:c,H:a}=this;return[t,e,n,o,s,i,c,a]}set(t,e,n,o,s,i,c,a){this.A=t|0,this.B=e|0,this.C=n|0,this.D=o|0,this.E=s|0,this.F=i|0,this.G=c|0,this.H=a|0}process(t,e){for(let h=0;h<16;h++,e+=4)Qt[h]=t.getUint32(e,!1);for(let h=16;h<64;h++){let d=Qt[h-15],E=Qt[h-2],g=wt(d,7)^wt(d,18)^d>>>3,y=wt(E,17)^wt(E,19)^E>>>10;Qt[h]=y+Qt[h-7]+g+Qt[h-16]|0}let{A:n,B:o,C:s,D:i,E:c,F:a,G:u,H:f}=this;for(let h=0;h<64;h++){let d=wt(c,6)^wt(c,11)^wt(c,25),E=f+d+cr(c,a,u)+Na[h]+Qt[h]|0,y=(wt(n,2)^wt(n,13)^wt(n,22))+ar(n,o,s)|0;f=u,u=a,a=c,c=i+E|0,i=s,s=o,o=n,n=E+y|0}n=n+this.A|0,o=o+this.B|0,s=s+this.C|0,i=i+this.D|0,c=c+this.E|0,a=a+this.F|0,u=u+this.G|0,f=f+this.H|0,this.set(n,o,s,i,c,a,u,f)}roundClean(){Qt.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};var te=Be(()=>new qn);function ut(r,t="utf8"){let e=Ar[t];if(e==null)throw new Error(`Unsupported encoding "${t}"`);return e.encoder.encode(r).substring(1)}function Rt(r,t){t==null&&(t=r.reduce((o,s)=>o+s.length,0));let e=mt(t),n=0;for(let o of r)e.set(o,n),n+=o.length;return e}var As=Symbol.for("@achingbrain/uint8arraylist");function Ss(r,t){if(t==null||t<0)throw new RangeError("index is out of bounds");let e=0;for(let n of r){let o=e+n.byteLength;if(t<o)return{buf:n,index:t-e};e=o}throw new RangeError("index is out of bounds")}function Tr(r){return!!r?.[As]}var At=class r{bufs;length;[As]=!0;constructor(...t){this.bufs=[],this.length=0,t.length>0&&this.appendAll(t)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...t){this.appendAll(t)}appendAll(t){let e=0;for(let n of t)if(n instanceof Uint8Array)e+=n.byteLength,this.bufs.push(n);else if(Tr(n))e+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}prepend(...t){this.prependAll(t)}prependAll(t){let e=0;for(let n of t.reverse())if(n instanceof Uint8Array)e+=n.byteLength,this.bufs.unshift(n);else if(Tr(n))e+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}get(t){let e=Ss(this.bufs,t);return e.buf[e.index]}set(t,e){let n=Ss(this.bufs,t);n.buf[n.index]=e}write(t,e=0){if(t instanceof Uint8Array)for(let n=0;n<t.length;n++)this.set(e+n,t[n]);else if(Tr(t))for(let n=0;n<t.length;n++)this.set(e+n,t.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(t){if(t=Math.trunc(t),!(Number.isNaN(t)||t<=0)){if(t===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(t>=this.bufs[0].byteLength)t-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(t),this.length-=t;break}}}slice(t,e){let{bufs:n,length:o}=this._subList(t,e);return Rt(n,o)}subarray(t,e){let{bufs:n,length:o}=this._subList(t,e);return n.length===1?n[0]:Rt(n,o)}sublist(t,e){let{bufs:n,length:o}=this._subList(t,e),s=new r;return s.length=o,s.bufs=[...n],s}_subList(t,e){if(t=t??0,e=e??this.length,t<0&&(t=this.length+t),e<0&&(e=this.length+e),t<0||e>this.length)throw new RangeError("index is out of bounds");if(t===e)return{bufs:[],length:0};if(t===0&&e===this.length)return{bufs:this.bufs,length:this.length};let n=[],o=0;for(let s=0;s<this.bufs.length;s++){let i=this.bufs[s],c=o,a=c+i.byteLength;if(o=a,t>=a)continue;let u=t>=c&&t<a,f=e>c&&e<=a;if(u&&f){if(t===c&&e===a){n.push(i);break}let h=t-c;n.push(i.subarray(h,h+(e-t)));break}if(u){if(t===0){n.push(i);continue}n.push(i.subarray(t-c));continue}if(f){if(e===a){n.push(i);break}n.push(i.subarray(0,e-c));break}n.push(i)}return{bufs:n,length:e-t}}indexOf(t,e=0){if(!Tr(t)&&!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let n=t instanceof Uint8Array?t:t.subarray();if(e=Number(e??0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let o=n.byteLength;if(o===0)throw new TypeError("search must be at least 1 byte long");let s=256,i=new Int32Array(s);for(let h=0;h<s;h++)i[h]=-1;for(let h=0;h<o;h++)i[n[h]]=h;let c=i,a=this.byteLength-n.byteLength,u=n.byteLength-1,f;for(let h=e;h<=a;h+=f){f=0;for(let d=u;d>=0;d--){let E=this.get(h+d);if(n[d]!==E){f=Math.max(1,d-c[E]);break}}if(f===0)return h}return-1}getInt8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt8(0)}setInt8(t,e){let n=mt(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,e),this.write(n,t)}getInt16(t,e){let n=this.subarray(t,t+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,e)}setInt16(t,e,n){let o=Ot(2);new DataView(o.buffer,o.byteOffset,o.byteLength).setInt16(0,e,n),this.write(o,t)}getInt32(t,e){let n=this.subarray(t,t+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,e)}setInt32(t,e,n){let o=Ot(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setInt32(0,e,n),this.write(o,t)}getBigInt64(t,e){let n=this.subarray(t,t+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,e)}setBigInt64(t,e,n){let o=Ot(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setBigInt64(0,e,n),this.write(o,t)}getUint8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint8(0)}setUint8(t,e){let n=mt(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,e),this.write(n,t)}getUint16(t,e){let n=this.subarray(t,t+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,e)}setUint16(t,e,n){let o=Ot(2);new DataView(o.buffer,o.byteOffset,o.byteLength).setUint16(0,e,n),this.write(o,t)}getUint32(t,e){let n=this.subarray(t,t+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,e)}setUint32(t,e,n){let o=Ot(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setUint32(0,e,n),this.write(o,t)}getBigUint64(t,e){let n=this.subarray(t,t+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,e)}setBigUint64(t,e,n){let o=Ot(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setBigUint64(0,e,n),this.write(o,t)}getFloat32(t,e){let n=this.subarray(t,t+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,e)}setFloat32(t,e,n){let o=Ot(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setFloat32(0,e,n),this.write(o,t)}getFloat64(t,e){let n=this.subarray(t,t+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,e)}setFloat64(t,e,n){let o=Ot(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setFloat64(0,e,n),this.write(o,t)}equals(t){if(t==null||!(t instanceof r)||t.bufs.length!==this.bufs.length)return!1;for(let e=0;e<this.bufs.length;e++)if(!pt(this.bufs[e],t.bufs[e]))return!1;return!0}static fromUint8Arrays(t,e){let n=new r;return n.bufs=t,e==null&&(e=t.reduce((o,s)=>o+s.byteLength,0)),n.length=e,n}};var Da=parseInt("11111",2),zn=parseInt("10000000",2),Pa=parseInt("01111111",2),vs={2:Oa,3:Ma,5:Ha,6:ka,16:Vn,22:Vn,48:Vn};function Ye(r,t={offset:0}){let e=r[t.offset]&Da;if(t.offset++,vs[e]!=null)return vs[e](r,t);throw new Error("No decoder for tag "+e)}function Rr(r,t){let e=0;if((r[t.offset]&zn)===zn){let n=r[t.offset]&Pa,o="0x";t.offset++;for(let s=0;s<n;s++,t.offset++)o+=r[t.offset].toString(16).padStart(2,"0");e=parseInt(o,16)}else e=r[t.offset],t.offset++;return e}function Vn(r,t){Rr(r,t);let e=[];for(;!(t.offset>=r.byteLength);){let n=Ye(r,t);if(n===null)break;e.push(n)}return e}function Oa(r,t){let e=Rr(r,t),n=t.offset,o=t.offset+e,s=[];for(let i=n;i<o;i++)i===n&&r[i]===0||s.push(r[i]);return t.offset+=e,Uint8Array.from(s)}function ka(r,t){let e=Rr(r,t);return t.offset+=e,["oid-unimplemented"]}function Ha(r,t){return t.offset++,null}function Ma(r,t){let e=Rr(r,t),n=r[t.offset];t.offset++;let o=r.subarray(t.offset,t.offset+e);if(t.offset+=e,n!==0)throw new Error("Unused bits in bit string is unimplemented");return Ye(o,{offset:0})}function qa(r){let t=r.toString(16);t.length%2===1&&(t="0"+t);let e=new At;for(let n=0;n<t.length;n+=2)e.append(Uint8Array.from([parseInt(`${t[n]}${t[n+1]}`,16)]));return e}function Fn(r){if(r.byteLength<128)return Uint8Array.from([r.byteLength]);let t=qa(r.byteLength);return new At(Uint8Array.from([t.byteLength|zn]),t)}function yt(r){let t=new At,e=parseInt("10000000",2);return(r.subarray()[0]&e)===e&&t.append(Uint8Array.from([0])),t.append(r),new At(Uint8Array.from([2]),Fn(t),t)}function Is(r){let t=Uint8Array.from([0]),e=new At(t,r);return new At(Uint8Array.from([3]),Fn(e),e)}function _r(r){let t=new At;for(let e of r)t.append(e);return new At(Uint8Array.from([48]),Fn(t),t)}function Zn(r){if(isNaN(r)||r<=0)throw new q("random bytes length must be a Number bigger than 0");return Se(r)}async function Ls(r){let t=await ot.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),e=await Va(t);return{privateKey:e[0],publicKey:e[1]}}async function Us(r,t){let e=await ot.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await ot.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},e,t instanceof Uint8Array?t:t.subarray());return new Uint8Array(n,0,n.byteLength)}async function Ts(r,t,e){let n=await ot.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return ot.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,t,e instanceof Uint8Array?e:e.subarray())}async function Va(r){if(r.privateKey==null||r.publicKey==null)throw new q("Private and public key are required");return Promise.all([ot.get().subtle.exportKey("jwk",r.privateKey),ot.get().subtle.exportKey("jwk",r.publicKey)])}function Rs(r){if(r.kty!=="RSA")throw new q("invalid key type");if(r.n==null)throw new q("invalid key modulus");return J(r.n,"base64url").length*8}var Te=class{type="RSA";_key;_raw;_multihash;constructor(t,e){this._key=t,this._multihash=e}get raw(){return this._raw==null&&(this._raw=Xe.jwkToPkix(this._key)),this._raw}toMultihash(){return this._multihash}toCID(){return It.createV1(114,this._multihash)}toString(){return it.encode(this.toMultihash().bytes).substring(1)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:pt(this.raw,t.raw)}verify(t,e){return Ts(this._key,e,t)}},$e=class{type="RSA";_key;_raw;publicKey;constructor(t,e){this._key=t,this.publicKey=e}get raw(){return this._raw==null&&(this._raw=Xe.jwkToPkcs1(this._key)),this._raw}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:pt(this.raw,t.raw)}sign(t){return Us(this._key,t)}};var Gn=8192,jn=18,za=1062,Fa=Uint8Array.from([48,13,6,9,42,134,72,134,247,13,1,1,1,5,0]);function _s(r){let t=Ye(r);return{n:ut(t[1],"base64url"),e:ut(t[2],"base64url"),d:ut(t[3],"base64url"),p:ut(t[4],"base64url"),q:ut(t[5],"base64url"),dp:ut(t[6],"base64url"),dq:ut(t[7],"base64url"),qi:ut(t[8],"base64url"),kty:"RSA"}}function Za(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new q("JWK was missing components");return _r([yt(Uint8Array.from([0])),yt(J(r.n,"base64url")),yt(J(r.e,"base64url")),yt(J(r.d,"base64url")),yt(J(r.p,"base64url")),yt(J(r.q,"base64url")),yt(J(r.dp,"base64url")),yt(J(r.dq,"base64url")),yt(J(r.qi,"base64url"))]).subarray()}function Cs(r){let t=Ye(r,{offset:0});return{kty:"RSA",n:ut(t[1][0],"base64url"),e:ut(t[1][1],"base64url")}}function Wn(r){if(r.n==null||r.e==null)throw new q("JWK was missing components");return _r([Fa,Is(_r([yt(J(r.n,"base64url")),yt(J(r.e,"base64url"))]))]).subarray()}function Cr(r){let t=_s(r);return Ks(t)}function Kr(r,t){if(r.byteLength>=za)throw new he("Key size is too large");let e=Cs(r);if(t==null){let n=te(Tt.encode({Type:W.RSA,Data:r}));t=gt(jn,n)}return new Te(e,t)}function Ks(r){if(Rs(r)>Gn)throw new q("Key size is too large");let t=Ns(r),e=te(Tt.encode({Type:W.RSA,Data:Wn(t.publicKey)})),n=gt(jn,e);return new $e(t.privateKey,new Te(t.publicKey,n))}async function Yn(r){if(r>Gn)throw new q("Key size is too large");let t=await Ls(r),e=te(Tt.encode({Type:W.RSA,Data:Wn(t.publicKey)})),n=gt(jn,e);return new $e(t.privateKey,new Te(t.publicKey,n))}function Ns(r){if(r==null)throw new q("Missing key parameter");return{privateKey:r,publicKey:{kty:r.kty,n:r.n,e:r.e}}}var Nr=class extends we{constructor(t,e){super(),this.finished=!1,this.destroyed=!1,sr(t);let n=Vt(e);if(this.iHash=t.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let o=this.blockLen,s=new Uint8Array(o);s.set(n.length>o?t.create().update(n).digest():n);for(let i=0;i<s.length;i++)s[i]^=54;this.iHash.update(s),this.oHash=t.create();for(let i=0;i<s.length;i++)s[i]^=106;this.oHash.update(s),s.fill(0)}update(t){return ge(this),this.iHash.update(t),this}digestInto(t){ge(this),xe(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){let t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));let{oHash:e,iHash:n,finished:o,destroyed:s,blockLen:i,outputLen:c}=this;return t=t,t.finished=o,t.destroyed=s,t.blockLen=i,t.outputLen=c,t.oHash=e._cloneInto(t.oHash),t.iHash=n._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},Je=(r,t,e)=>new Nr(r,t).update(e).digest();Je.create=(r,t)=>new Nr(r,t);function Ds(r){r.lowS!==void 0&&Et("lowS",r.lowS),r.prehash!==void 0&&Et("prehash",r.prehash)}function Ga(r){let t=Ve(r);Lt(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:e,Fp:n,a:o}=t;if(e){if(!n.eql(o,n.ZERO))throw new Error("invalid endomorphism, can only be defined for Koblitz curves that have a=0");if(typeof e!="object"||typeof e.beta!="bigint"||typeof e.splitScalar!="function")throw new Error("invalid endomorphism, expected beta: bigint and splitScalar: function")}return Object.freeze({...t})}var{bytesToNumberBE:ja,hexToBytes:Wa}=dr,Xn=class extends Error{constructor(t=""){super(t)}},kt={Err:Xn,_tlv:{encode:(r,t)=>{let{Err:e}=kt;if(r<0||r>256)throw new e("tlv.encode: wrong tag");if(t.length&1)throw new e("tlv.encode: unpadded data");let n=t.length/2,o=ne(n);if(o.length/2&128)throw new e("tlv.encode: long form length too big");let s=n>127?ne(o.length/2|128):"";return ne(r)+s+o+t},decode(r,t){let{Err:e}=kt,n=0;if(r<0||r>256)throw new e("tlv.encode: wrong tag");if(t.length<2||t[n++]!==r)throw new e("tlv.decode: wrong tlv");let o=t[n++],s=!!(o&128),i=0;if(!s)i=o;else{let a=o&127;if(!a)throw new e("tlv.decode(long): indefinite length not supported");if(a>4)throw new e("tlv.decode(long): byte length is too big");let u=t.subarray(n,n+a);if(u.length!==a)throw new e("tlv.decode: length bytes not complete");if(u[0]===0)throw new e("tlv.decode(long): zero leftmost byte");for(let f of u)i=i<<8|f;if(n+=a,i<128)throw new e("tlv.decode(long): not minimal encoding")}let c=t.subarray(n,n+i);if(c.length!==i)throw new e("tlv.decode: wrong value length");return{v:c,l:t.subarray(n+i)}}},_int:{encode(r){let{Err:t}=kt;if(r<Ht)throw new t("integer: negative integers are not allowed");let e=ne(r);if(Number.parseInt(e[0],16)&8&&(e="00"+e),e.length&1)throw new t("unexpected DER parsing assertion: unpadded hex");return e},decode(r){let{Err:t}=kt;if(r[0]&128)throw new t("invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new t("invalid signature integer: unnecessary leading zero");return ja(r)}},toSig(r){let{Err:t,_int:e,_tlv:n}=kt,o=typeof r=="string"?Wa(r):r;Ae(o);let{v:s,l:i}=n.decode(48,o);if(i.length)throw new t("invalid signature: left bytes after parsing");let{v:c,l:a}=n.decode(2,s),{v:u,l:f}=n.decode(2,a);if(f.length)throw new t("invalid signature: left bytes after parsing");return{r:e.decode(c),s:e.decode(u)}},hexFromSig(r){let{_tlv:t,_int:e}=kt,n=t.encode(2,e.encode(r.r)),o=t.encode(2,e.encode(r.s)),s=n+o;return t.encode(48,s)}},Ht=BigInt(0),et=BigInt(1),Cl=BigInt(2),Ps=BigInt(3),Kl=BigInt(4);function Ya(r){let t=Ga(r),{Fp:e}=t,n=Yt(t.n,t.nBitLength),o=t.toBytes||((y,l,x)=>{let B=l.toAffine();return Pt(Uint8Array.from([4]),e.toBytes(B.x),e.toBytes(B.y))}),s=t.fromBytes||(y=>{let l=y.subarray(1),x=e.fromBytes(l.subarray(0,e.BYTES)),B=e.fromBytes(l.subarray(e.BYTES,2*e.BYTES));return{x,y:B}});function i(y){let{a:l,b:x}=t,B=e.sqr(y),m=e.mul(B,y);return e.add(e.add(m,e.mul(y,l)),x)}if(!e.eql(e.sqr(t.Gy),i(t.Gx)))throw new Error("bad generator point: equation left != right");function c(y){return Me(y,et,t.n)}function a(y){let{allowedPrivateKeyLengths:l,nByteLength:x,wrapPrivateKey:B,n:m}=t;if(l&&typeof y!="bigint"){if(Gt(y)&&(y=Nt(y)),typeof y!="string"||!l.includes(y.length))throw new Error("invalid private key");y=y.padStart(x*2,"0")}let v;try{v=typeof y=="bigint"?y:Dt(j("private key",y,x))}catch{throw new Error("invalid private key, expected hex or "+x+" bytes, got "+typeof y)}return B&&(v=V(v,m)),lt("private key",v,et,m),v}function u(y){if(!(y instanceof d))throw new Error("ProjectivePoint expected")}let f=ie((y,l)=>{let{px:x,py:B,pz:m}=y;if(e.eql(m,e.ONE))return{x,y:B};let v=y.is0();l==null&&(l=v?e.ONE:e.inv(m));let _=e.mul(x,l),R=e.mul(B,l),I=e.mul(m,l);if(v)return{x:e.ZERO,y:e.ZERO};if(!e.eql(I,e.ONE))throw new Error("invZ was invalid");return{x:_,y:R}}),h=ie(y=>{if(y.is0()){if(t.allowInfinityPoint&&!e.is0(y.py))return;throw new Error("bad point: ZERO")}let{x:l,y:x}=y.toAffine();if(!e.isValid(l)||!e.isValid(x))throw new Error("bad point: x or y not FE");let B=e.sqr(x),m=i(l);if(!e.eql(B,m))throw new Error("bad point: equation left != right");if(!y.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class d{constructor(l,x,B){if(this.px=l,this.py=x,this.pz=B,l==null||!e.isValid(l))throw new Error("x required");if(x==null||!e.isValid(x))throw new Error("y required");if(B==null||!e.isValid(B))throw new Error("z required");Object.freeze(this)}static fromAffine(l){let{x,y:B}=l||{};if(!l||!e.isValid(x)||!e.isValid(B))throw new Error("invalid affine point");if(l instanceof d)throw new Error("projective point not allowed");let m=v=>e.eql(v,e.ZERO);return m(x)&&m(B)?d.ZERO:new d(x,B,e.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(l){let x=e.invertBatch(l.map(B=>B.pz));return l.map((B,m)=>B.toAffine(x[m])).map(d.fromAffine)}static fromHex(l){let x=d.fromAffine(s(j("pointHex",l)));return x.assertValidity(),x}static fromPrivateKey(l){return d.BASE.multiply(a(l))}static msm(l,x){return yr(d,n,l,x)}_setWindowSize(l){g.setWindowSize(this,l)}assertValidity(){h(this)}hasEvenY(){let{y:l}=this.toAffine();if(e.isOdd)return!e.isOdd(l);throw new Error("Field doesn't support isOdd")}equals(l){u(l);let{px:x,py:B,pz:m}=this,{px:v,py:_,pz:R}=l,I=e.eql(e.mul(x,R),e.mul(v,m)),T=e.eql(e.mul(B,R),e.mul(_,m));return I&&T}negate(){return new d(this.px,e.neg(this.py),this.pz)}double(){let{a:l,b:x}=t,B=e.mul(x,Ps),{px:m,py:v,pz:_}=this,R=e.ZERO,I=e.ZERO,T=e.ZERO,L=e.mul(m,m),F=e.mul(v,v),H=e.mul(_,_),O=e.mul(m,v);return O=e.add(O,O),T=e.mul(m,_),T=e.add(T,T),R=e.mul(l,T),I=e.mul(B,H),I=e.add(R,I),R=e.sub(F,I),I=e.add(F,I),I=e.mul(R,I),R=e.mul(O,R),T=e.mul(B,T),H=e.mul(l,H),O=e.sub(L,H),O=e.mul(l,O),O=e.add(O,T),T=e.add(L,L),L=e.add(T,L),L=e.add(L,H),L=e.mul(L,O),I=e.add(I,L),H=e.mul(v,_),H=e.add(H,H),L=e.mul(H,O),R=e.sub(R,L),T=e.mul(H,F),T=e.add(T,T),T=e.add(T,T),new d(R,I,T)}add(l){u(l);let{px:x,py:B,pz:m}=this,{px:v,py:_,pz:R}=l,I=e.ZERO,T=e.ZERO,L=e.ZERO,F=t.a,H=e.mul(t.b,Ps),O=e.mul(x,v),X=e.mul(B,_),S=e.mul(m,R),U=e.add(x,B),b=e.add(v,_);U=e.mul(U,b),b=e.add(O,X),U=e.sub(U,b),b=e.add(x,m);let p=e.add(v,R);return b=e.mul(b,p),p=e.add(O,S),b=e.sub(b,p),p=e.add(B,m),I=e.add(_,R),p=e.mul(p,I),I=e.add(X,S),p=e.sub(p,I),L=e.mul(F,b),I=e.mul(H,S),L=e.add(I,L),I=e.sub(X,L),L=e.add(X,L),T=e.mul(I,L),X=e.add(O,O),X=e.add(X,O),S=e.mul(F,S),b=e.mul(H,b),X=e.add(X,S),S=e.sub(O,S),S=e.mul(F,S),b=e.add(b,S),O=e.mul(X,b),T=e.add(T,O),O=e.mul(p,b),I=e.mul(U,I),I=e.sub(I,O),O=e.mul(U,X),L=e.mul(p,L),L=e.add(L,O),new d(I,T,L)}subtract(l){return this.add(l.negate())}is0(){return this.equals(d.ZERO)}wNAF(l){return g.wNAFCached(this,l,d.normalizeZ)}multiplyUnsafe(l){let{endo:x,n:B}=t;lt("scalar",l,Ht,B);let m=d.ZERO;if(l===Ht)return m;if(this.is0()||l===et)return this;if(!x||g.hasPrecomputes(this))return g.wNAFCachedUnsafe(this,l,d.normalizeZ);let{k1neg:v,k1:_,k2neg:R,k2:I}=x.splitScalar(l),T=m,L=m,F=this;for(;_>Ht||I>Ht;)_&et&&(T=T.add(F)),I&et&&(L=L.add(F)),F=F.double(),_>>=et,I>>=et;return v&&(T=T.negate()),R&&(L=L.negate()),L=new d(e.mul(L.px,x.beta),L.py,L.pz),T.add(L)}multiply(l){let{endo:x,n:B}=t;lt("scalar",l,et,B);let m,v;if(x){let{k1neg:_,k1:R,k2neg:I,k2:T}=x.splitScalar(l),{p:L,f:F}=this.wNAF(R),{p:H,f:O}=this.wNAF(T);L=g.constTimeNegate(_,L),H=g.constTimeNegate(I,H),H=new d(e.mul(H.px,x.beta),H.py,H.pz),m=L.add(H),v=F.add(O)}else{let{p:_,f:R}=this.wNAF(l);m=_,v=R}return d.normalizeZ([m,v])[0]}multiplyAndAddUnsafe(l,x,B){let m=d.BASE,v=(R,I)=>I===Ht||I===et||!R.equals(m)?R.multiplyUnsafe(I):R.multiply(I),_=v(this,x).add(v(l,B));return _.is0()?void 0:_}toAffine(l){return f(this,l)}isTorsionFree(){let{h:l,isTorsionFree:x}=t;if(l===et)return!0;if(x)return x(d,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:l,clearCofactor:x}=t;return l===et?this:x?x(d,this):this.multiplyUnsafe(t.h)}toRawBytes(l=!0){return Et("isCompressed",l),this.assertValidity(),o(d,this,l)}toHex(l=!0){return Et("isCompressed",l),Nt(this.toRawBytes(l))}}d.BASE=new d(t.Gx,t.Gy,e.ONE),d.ZERO=new d(e.ZERO,e.ONE,e.ZERO);let E=t.nBitLength,g=br(d,t.endo?Math.ceil(E/2):E);return{CURVE:t,ProjectivePoint:d,normPrivateKeyToScalar:a,weierstrassEquation:i,isWithinCurveOrder:c}}function Xa(r){let t=Ve(r);return Lt(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}function Os(r){let t=Xa(r),{Fp:e,n}=t,o=e.BYTES+1,s=2*e.BYTES+1;function i(S){return V(S,n)}function c(S){return pr(S,n)}let{ProjectivePoint:a,normPrivateKeyToScalar:u,weierstrassEquation:f,isWithinCurveOrder:h}=Ya({...t,toBytes(S,U,b){let p=U.toAffine(),w=e.toBytes(p.x),A=Pt;return Et("isCompressed",b),b?A(Uint8Array.from([U.hasEvenY()?2:3]),w):A(Uint8Array.from([4]),w,e.toBytes(p.y))},fromBytes(S){let U=S.length,b=S[0],p=S.subarray(1);if(U===o&&(b===2||b===3)){let w=Dt(p);if(!Me(w,et,e.ORDER))throw new Error("Point is not on curve");let A=f(w),C;try{C=e.sqrt(A)}catch(k){let N=k instanceof Error?": "+k.message:"";throw new Error("Point is not on curve"+N)}let K=(C&et)===et;return(b&1)===1!==K&&(C=e.neg(C)),{x:w,y:C}}else if(U===s&&b===4){let w=e.fromBytes(p.subarray(0,e.BYTES)),A=e.fromBytes(p.subarray(e.BYTES,2*e.BYTES));return{x:w,y:A}}else{let w=o,A=s;throw new Error("invalid Point, expected length of "+w+", or uncompressed "+A+", got "+U)}}}),d=S=>Nt(Wt(S,t.nByteLength));function E(S){let U=n>>et;return S>U}function g(S){return E(S)?i(-S):S}let y=(S,U,b)=>Dt(S.slice(U,b));class l{constructor(U,b,p){this.r=U,this.s=b,this.recovery=p,this.assertValidity()}static fromCompact(U){let b=t.nByteLength;return U=j("compactSignature",U,b*2),new l(y(U,0,b),y(U,b,2*b))}static fromDER(U){let{r:b,s:p}=kt.toSig(j("DER",U));return new l(b,p)}assertValidity(){lt("r",this.r,et,n),lt("s",this.s,et,n)}addRecoveryBit(U){return new l(this.r,this.s,U)}recoverPublicKey(U){let{r:b,s:p,recovery:w}=this,A=R(j("msgHash",U));if(w==null||![0,1,2,3].includes(w))throw new Error("recovery id invalid");let C=w===2||w===3?b+t.n:b;if(C>=e.ORDER)throw new Error("recovery id 2 or 3 invalid");let K=(w&1)===0?"02":"03",P=a.fromHex(K+d(C)),k=c(C),N=i(-A*k),M=i(p*k),z=a.BASE.multiplyAndAddUnsafe(P,N,M);if(!z)throw new Error("point at infinify");return z.assertValidity(),z}hasHighS(){return E(this.s)}normalizeS(){return this.hasHighS()?new l(this.r,i(-this.s),this.recovery):this}toDERRawBytes(){return oe(this.toDERHex())}toDERHex(){return kt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return oe(this.toCompactHex())}toCompactHex(){return d(this.r)+d(this.s)}}let x={isValidPrivateKey(S){try{return u(S),!0}catch{return!1}},normPrivateKeyToScalar:u,randomPrivateKey:()=>{let S=an(t.n);return Vo(t.randomBytes(S),t.n)},precompute(S=8,U=a.BASE){return U._setWindowSize(S),U.multiply(BigInt(3)),U}};function B(S,U=!0){return a.fromPrivateKey(S).toRawBytes(U)}function m(S){let U=Gt(S),b=typeof S=="string",p=(U||b)&&S.length;return U?p===o||p===s:b?p===2*o||p===2*s:S instanceof a}function v(S,U,b=!0){if(m(S))throw new Error("first arg must be private key");if(!m(U))throw new Error("second arg must be public key");return a.fromHex(U).multiply(u(S)).toRawBytes(b)}let _=t.bits2int||function(S){if(S.length>8192)throw new Error("input is too large");let U=Dt(S),b=S.length*8-t.nBitLength;return b>0?U>>BigInt(b):U},R=t.bits2int_modN||function(S){return i(_(S))},I=qe(t.nBitLength);function T(S){return lt("num < 2^"+t.nBitLength,S,Ht,I),Wt(S,t.nByteLength)}function L(S,U,b=F){if(["recovered","canonical"].some(tt=>tt in b))throw new Error("sign() legacy options not supported");let{hash:p,randomBytes:w}=t,{lowS:A,prehash:C,extraEntropy:K}=b;A==null&&(A=!0),S=j("msgHash",S),Ds(b),C&&(S=j("prehashed msgHash",p(S)));let P=R(S),k=u(U),N=[T(k),T(P)];if(K!=null&&K!==!1){let tt=K===!0?w(e.BYTES):K;N.push(j("extraEntropy",tt))}let M=Pt(...N),z=P;function Q(tt){let rt=_(tt);if(!h(rt))return;let st=c(rt),ht=a.BASE.multiply(rt).toAffine(),at=i(ht.x);if(at===Ht)return;let vt=i(st*i(z+at*k));if(vt===Ht)return;let _t=(ht.x===at?0:2)|Number(ht.y&et),Re=vt;return A&&E(vt)&&(Re=g(vt),_t^=1),new l(at,Re,_t)}return{seed:M,k2sig:Q}}let F={lowS:t.lowS,prehash:!1},H={lowS:t.lowS,prehash:!1};function O(S,U,b=F){let{seed:p,k2sig:w}=L(S,U,b),A=t;return nn(A.hash.outputLen,A.nByteLength,A.hmac)(p,w)}a.BASE._setWindowSize(8);function X(S,U,b,p=H){let w=S;U=j("msgHash",U),b=j("publicKey",b);let{lowS:A,prehash:C,format:K}=p;if(Ds(p),"strict"in p)throw new Error("options.strict was renamed to lowS");if(K!==void 0&&K!=="compact"&&K!=="der")throw new Error("format must be compact or der");let P=typeof w=="string"||Gt(w),k=!P&&!K&&typeof w=="object"&&w!==null&&typeof w.r=="bigint"&&typeof w.s=="bigint";if(!P&&!k)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let N,M;try{if(k&&(N=new l(w.r,w.s)),P){try{K!=="compact"&&(N=l.fromDER(w))}catch(_t){if(!(_t instanceof kt.Err))throw _t}!N&&K!=="der"&&(N=l.fromCompact(w))}M=a.fromHex(b)}catch{return!1}if(!N||A&&N.hasHighS())return!1;C&&(U=t.hash(U));let{r:z,s:Q}=N,tt=R(U),rt=c(Q),st=i(tt*rt),ht=i(z*rt),at=a.BASE.multiplyAndAddUnsafe(M,st,ht)?.toAffine();return at?i(at.x)===z:!1}return{CURVE:t,getPublicKey:B,getSharedSecret:v,sign:O,verify:X,ProjectivePoint:a,Signature:l,utils:x}}function $a(r){return{hash:r,hmac:(t,...e)=>Je(r,t,Xr(...e)),randomBytes:Se}}function ks(r,t){let e=n=>Os({...r,...$a(n)});return{...e(t),create:e}}var qs=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),Hs=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Ja=BigInt(1),$n=BigInt(2),Ms=(r,t)=>(r+t/$n)/t;function Qa(r){let t=qs,e=BigInt(3),n=BigInt(6),o=BigInt(11),s=BigInt(22),i=BigInt(23),c=BigInt(44),a=BigInt(88),u=r*r*r%t,f=u*u*r%t,h=G(f,e,t)*f%t,d=G(h,e,t)*f%t,E=G(d,$n,t)*u%t,g=G(E,o,t)*E%t,y=G(g,s,t)*g%t,l=G(y,c,t)*y%t,x=G(l,a,t)*l%t,B=G(x,c,t)*y%t,m=G(B,e,t)*f%t,v=G(m,i,t)*g%t,_=G(v,n,t)*u%t,R=G(_,$n,t);if(!Jn.eql(Jn.sqr(R),r))throw new Error("Cannot find square root");return R}var Jn=Yt(qs,void 0,void 0,{sqrt:Qa}),xt=ks({a:BigInt(0),b:BigInt(7),Fp:Jn,n:Hs,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{let t=Hs,e=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-Ja*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),s=e,i=BigInt("0x100000000000000000000000000000000"),c=Ms(s*r,t),a=Ms(-n*r,t),u=V(r-c*e-a*o,t),f=V(-c*n-a*s,t),h=u>i,d=f>i;if(h&&(u=t-u),d&&(f=t-f),u>i||f>i)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:h,k1:u,k2neg:d,k2:f}}}},te),Vl=BigInt(0);var zl=xt.ProjectivePoint;function Qn(r,t){let e=J(r,"base64urlpad");if(t!=null){if(e.length>t)throw new Error("byte array longer than desired length");e=Rt([new Uint8Array(t-e.length),e])}return e}function to(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}function Vs(r,t){let e=Sr.digest(t instanceof Uint8Array?t:t.subarray());if(to(e))return e.then(({digest:n})=>xt.sign(n,r).toDERRawBytes()).catch(n=>{throw new _e(String(n))});try{return xt.sign(e.digest,r).toDERRawBytes()}catch(n){throw new _e(String(n))}}function zs(r,t,e){let n=Sr.digest(e instanceof Uint8Array?e:e.subarray());if(to(n))return n.then(({digest:o})=>xt.verify(t,o,r)).catch(o=>{throw new Ce(String(o))});try{return xt.verify(t,n.digest,r)}catch(o){throw new Ce(String(o))}}var Qe=class{type="secp256k1";raw;_key;constructor(t){this._key=Gs(t),this.raw=Fs(this._key)}toMultihash(){return He.digest(Fe(this))}toCID(){return It.createV1(114,this.toMultihash())}toString(){return it.encode(this.toMultihash().bytes).substring(1)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:pt(this.raw,t.raw)}verify(t,e){return zs(this._key,e,t)}},tr=class{type="secp256k1";raw;publicKey;constructor(t,e){this.raw=Zs(t),this.publicKey=new Qe(e??js(t))}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:pt(this.raw,t.raw)}sign(t){return Vs(this.raw,t)}};function eo(r){return new tr(r)}function Dr(r){return new Qe(r)}async function Ws(){let r=tf();return new tr(r)}function Fs(r){return xt.ProjectivePoint.fromHex(r).toRawBytes(!0)}function Zs(r){try{return xt.getPublicKey(r,!0),r}catch(t){throw new Ke(String(t))}}function Gs(r){try{return xt.ProjectivePoint.fromHex(r),r}catch(t){throw new he(String(t))}}function js(r){try{return xt.getPublicKey(r,!0)}catch(t){throw new Ke(String(t))}}function tf(){return xt.utils.randomPrivateKey()}var Pr={"P-256":32,"P-384":48,"P-521":66},ef=Object.keys(Pr),ro=ef.join(" / ");async function Ys(r){if(r!=="P-256"&&r!=="P-384"&&r!=="P-521")throw new q(`Unknown curve: ${r}. Must be ${ro}`);let t=await ot.get().subtle.generateKey({name:"ECDH",namedCurve:r},!0,["deriveBits"]),e=async(s,i)=>{let c;i!=null?c=await ot.get().subtle.importKey("jwk",nf(r,i),{name:"ECDH",namedCurve:r},!1,["deriveBits"]):c=t.privateKey;let a=await ot.get().subtle.importKey("jwk",Xs(r,s),{name:"ECDH",namedCurve:r},!1,[]),u=await ot.get().subtle.deriveBits({name:"ECDH",public:a},c,Pr[r]*8);return new Uint8Array(u,0,u.byteLength)},n=await ot.get().subtle.exportKey("jwk",t.publicKey);return{key:rf(n),genSharedKey:e}}function rf(r){if(r.crv==null||r.x==null||r.y==null)throw new q("JWK was missing components");if(r.crv!=="P-256"&&r.crv!=="P-384"&&r.crv!=="P-521")throw new q(`Unknown curve: ${r.crv}. Must be ${ro}`);let t=Pr[r.crv];return Rt([Uint8Array.from([4]),Qn(r.x,t),Qn(r.y,t)],1+t*2)}function Xs(r,t){if(r!=="P-256"&&r!=="P-384"&&r!=="P-521")throw new q(`Unknown curve: ${r}. Must be ${ro}`);let e=Pr[r];if(!pt(t.subarray(0,1),Uint8Array.from([4])))throw new q("Cannot unmarshal public key - invalid key format");return{kty:"EC",crv:r,x:ut(t.subarray(1,e+1),"base64url"),y:ut(t.subarray(1+e),"base64url"),ext:!0}}var nf=(r,t)=>({...Xs(r,t.public),d:ut(t.private,"base64url")});var of={"AES-128":{ivSize:16,keySize:16},"AES-256":{ivSize:16,keySize:32},Blowfish:{ivSize:8,keySize:32}};async function $s(r,t,e){if(r!=="AES-128"&&r!=="AES-256"&&r!=="Blowfish")throw new q("Cipher type was missing or unsupported");if(t!=="SHA1"&&t!=="SHA256"&&t!=="SHA512")throw new q("Hash type was missing or unsupported");if(e==null||!(e instanceof Uint8Array))throw new q("Secret was missing or an incorrect type");let n=of[r],o=n.keySize,s=n.ivSize,i=20,c=J("key expansion"),a=2*(s+o+i),u=await Hr(t,e),f=await u.digest(c),h=[],d=0;for(;d<a;){let B=await u.digest(Rt([f,c])),m=B.length;d+m>a&&(m=a-d),h.push(B),d+=m,f=await u.digest(f)}let E=a/2,g=Rt(h),y=g.subarray(0,E),l=g.subarray(E,a),x=B=>({iv:B.subarray(0,s),cipherKey:B.subarray(s,s+o),macKey:B.subarray(s+o)});return{k1:x(y),k2:x(l)}}async function sf(r,t){if(r==="Ed25519")return es();if(r==="secp256k1")return Ws();if(r==="RSA")return Yn(t??2048);throw new Mt}async function cf(r,t){if(r!=="Ed25519")throw new Mt("Seed key derivation only supported for Ed25519 keys");return rs(t)}function af(r,t){let{Type:e,Data:n}=Tt.decode(r),o=n??new Uint8Array;switch(e){case W.RSA:return Kr(o,t);case W.Ed25519:return wr(o);case W.secp256k1:return Dr(o);default:throw new Mt}}function ff(r){return r.byteLength===32?wr(r):r.byteLength===33?Dr(r):Kr(r)}function uf(r){let{Type:t,Data:e}=Tt.decode(r.digest),n=e??new Uint8Array;switch(t){case W.Ed25519:return wr(n);case W.secp256k1:return Dr(n);default:throw new Mt}}function Fe(r){return Tt.encode({Type:W[r.type],Data:r.raw})}function hf(r){let t=We.decode(r),e=t.Data??new Uint8Array;switch(t.Type){case W.RSA:return Cr(e);case W.Ed25519:return pn(e);case W.secp256k1:return eo(e);default:throw new Mt}}function lf(r){return r.byteLength===64?pn(r):r.byteLength===32?eo(r):Cr(r)}function df(r){return We.encode({Type:W[r.type],Data:r.raw})}function pf(r,t,e,n){sr(r);let o=No({dkLen:32,asyncTick:10},n),{c:s,dkLen:i,asyncTick:c}=o;if(ye(s),ye(i),ye(c),s<1)throw new Error("PBKDF2: iterations (c) should be >= 1");let a=Vt(t),u=Vt(e),f=new Uint8Array(i),h=Je.create(r,a),d=h._cloneInto().update(u);return{c:s,dkLen:i,asyncTick:c,DK:f,PRF:h,PRFSalt:d}}function mf(r,t,e,n,o){return r.destroy(),t.destroy(),n&&n.destroy(),o.fill(0),e}function Js(r,t,e,n){let{c:o,dkLen:s,DK:i,PRF:c,PRFSalt:a}=pf(r,t,e,n),u,f=new Uint8Array(4),h=Ee(f),d=new Uint8Array(c.outputLen);for(let E=1,g=0;g<s;E++,g+=c.outputLen){let y=i.subarray(g,g+c.outputLen);h.setInt32(0,E,!1),(u=a._cloneInto(u)).update(f).digestInto(d),y.set(d.subarray(0,y.length));for(let l=1;l<o;l++){c._cloneInto(u).update(d).digestInto(d);for(let x=0;x<y.length;x++)y[x]^=d[x]}}return mf(c,a,i,u,d)}var er=new Uint32Array([1732584193,4023233417,2562383102,271733878,3285377520]),ee=new Uint32Array(80),oo=class extends zt{constructor(){super(64,20,8,!1),this.A=er[0]|0,this.B=er[1]|0,this.C=er[2]|0,this.D=er[3]|0,this.E=er[4]|0}get(){let{A:t,B:e,C:n,D:o,E:s}=this;return[t,e,n,o,s]}set(t,e,n,o,s){this.A=t|0,this.B=e|0,this.C=n|0,this.D=o|0,this.E=s|0}process(t,e){for(let a=0;a<16;a++,e+=4)ee[a]=t.getUint32(e,!1);for(let a=16;a<80;a++)ee[a]=ir(ee[a-3]^ee[a-8]^ee[a-14]^ee[a-16],1);let{A:n,B:o,C:s,D:i,E:c}=this;for(let a=0;a<80;a++){let u,f;a<20?(u=cr(o,s,i),f=1518500249):a<40?(u=o^s^i,f=1859775393):a<60?(u=ar(o,s,i),f=2400959708):(u=o^s^i,f=3395469782);let h=ir(n,5)+u+c+f+ee[a]|0;c=i,i=s,s=ir(o,30),o=n,n=h}n=n+this.A|0,o=o+this.B|0,s=s+this.C|0,i=i+this.D|0,c=c+this.E|0,this.set(n,o,s,i,c)}roundClean(){ee.fill(0)}destroy(){this.set(0,0,0,0,0),this.buffer.fill(0)}},Qs=Be(()=>new oo);var ti={sha1:Qs,"sha2-256":te,"sha2-512":ur};function so(r,t,e,n,o){if(o!=="sha1"&&o!=="sha2-256"&&o!=="sha2-512"){let c=Object.keys(ti).join(" / ");throw new q(`Hash '${o}' is unknown or not supported. Must be ${c}`)}let s=ti[o],i=Js(s,r,t,{c:e,dkLen:n});return An.encode(i).substring(1)}return di(bf);})();
 /*! Bundled license information:
 
-pvtsutils/build/index.js:
-  (*!
-   * MIT License
-   * 
-   * Copyright (c) 2017-2024 Peculiar Ventures, LLC
-   * 
-   * Permission is hereby granted, free of charge, to any person obtaining a copy
-   * of this software and associated documentation files (the "Software"), to deal
-   * in the Software without restriction, including without limitation the rights
-   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-   * copies of the Software, and to permit persons to whom the Software is
-   * furnished to do so, subject to the following conditions:
-   * 
-   * The above copyright notice and this permission notice shall be included in all
-   * copies or substantial portions of the Software.
-   * 
-   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-   * SOFTWARE.
-   * 
-   *)
-
 @noble/hashes/esm/utils.js:
   (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
 
@@ -50,46 +20,6 @@ pvtsutils/build/index.js:
 @noble/curves/esm/ed25519.js:
   (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
 
-pvutils/build/utils.es.js:
-  (*!
-   Copyright (c) Peculiar Ventures, LLC
-  *)
-
-asn1js/build/index.es.js:
-  (*!
-   * Copyright (c) 2014, GMO GlobalSign
-   * Copyright (c) 2015-2022, Peculiar Ventures
-   * All rights reserved.
-   * 
-   * Author 2014-2019, Yury Strozhevsky
-   * 
-   * Redistribution and use in source and binary forms, with or without modification,
-   * are permitted provided that the following conditions are met:
-   * 
-   * * Redistributions of source code must retain the above copyright notice, this
-   *   list of conditions and the following disclaimer.
-   * 
-   * * Redistributions in binary form must reproduce the above copyright notice, this
-   *   list of conditions and the following disclaimer in the documentation and/or
-   *   other materials provided with the distribution.
-   * 
-   * * Neither the name of the copyright holder nor the names of its
-   *   contributors may be used to endorse or promote products derived from
-   *   this software without specific prior written permission.
-   * 
-   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
-   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
-   * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-   * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
-   * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-   * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-   * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-   * 
-   *)
-
 @noble/curves/esm/abstract/weierstrass.js:
   (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
 
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/index.d.ts b/node_modules/@libp2p/crypto/dist/src/keys/index.d.ts
index 1ccb73f..b40e2f5 100644
--- a/node_modules/@libp2p/crypto/dist/src/keys/index.d.ts
+++ b/node_modules/@libp2p/crypto/dist/src/keys/index.d.ts
@@ -9,6 +9,7 @@
  */
 import type { PrivateKey, PublicKey, KeyType, RSAPrivateKey, Secp256k1PrivateKey, Ed25519PrivateKey, Secp256k1PublicKey, Ed25519PublicKey } from '@libp2p/interface';
 import type { MultihashDigest } from 'multiformats';
+import type { Digest } from 'multiformats/hashes/digest';
 export { generateEphemeralKeyPair } from './ecdh/index.js';
 export type { Curve } from './ecdh/index.js';
 export type { ECDHKey, EnhancedKey, EnhancedKeyPair, ECDHKeyPair } from './interface.js';
@@ -29,9 +30,15 @@ export declare function generateKeyPair(type: KeyType, bits?: number): Promise<P
 export declare function generateKeyPairFromSeed(type: 'Ed25519', seed: Uint8Array): Promise<Ed25519PrivateKey>;
 export declare function generateKeyPairFromSeed<T extends KeyType>(type: T, seed: Uint8Array, bits?: number): Promise<never>;
 /**
- * Converts a protobuf serialized public key into its representative object
+ * Converts a protobuf serialized public key into its representative object.
+ *
+ * For RSA public keys optionally pass the multihash digest of the public key if
+ * it is known. If the digest is omitted it will be calculated which can be
+ * expensive.
+ *
+ * For other key types the digest option is ignored.
  */
-export declare function publicKeyFromProtobuf(buf: Uint8Array): PublicKey;
+export declare function publicKeyFromProtobuf(buf: Uint8Array, digest?: Digest<18, number>): PublicKey;
 /**
  * Creates a public key from the raw key bytes
  */
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/index.d.ts.map b/node_modules/@libp2p/crypto/dist/src/keys/index.d.ts.map
index 7e757c2..014db94 100644
--- a/node_modules/@libp2p/crypto/dist/src/keys/index.d.ts.map
+++ b/node_modules/@libp2p/crypto/dist/src/keys/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/keys/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAOH,OAAO,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAA;AACpK,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,cAAc,CAAA;AAEnD,OAAO,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAA;AAC1D,YAAY,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAA;AAC5C,YAAY,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AACxF,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAEjD;;GAEG;AACH,wBAAsB,eAAe,CAAE,IAAI,EAAE,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;AACnF,wBAAsB,eAAe,CAAE,IAAI,EAAE,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;AACvF,wBAAsB,eAAe,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AAC1F,wBAAsB,eAAe,CAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAiBzF;;;;;GAKG;AACH,wBAAsB,uBAAuB,CAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;AAC7G,wBAAsB,uBAAuB,CAAE,CAAC,SAAS,OAAO,EAAG,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;AAS5H;;GAEG;AACH,wBAAgB,qBAAqB,CAAE,GAAG,EAAE,UAAU,GAAG,SAAS,CAcjE;AAED;;GAEG;AACH,wBAAgB,gBAAgB,CAAE,GAAG,EAAE,UAAU,GAAG,SAAS,CAQ5D;AAED;;;;;;GAMG;AACH,wBAAgB,sBAAsB,CAAE,MAAM,EAAE,eAAe,CAAC,GAAG,CAAC,GAAG,gBAAgB,GAAG,kBAAkB,CAY3G;AAED;;GAEG;AACH,wBAAgB,mBAAmB,CAAE,GAAG,EAAE,SAAS,GAAG,UAAU,CAK/D;AAED;;GAEG;AACH,wBAAgB,sBAAsB,CAAE,GAAG,EAAE,UAAU,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,aAAa,CAchH;AAED;;;;GAIG;AACH,wBAAgB,iBAAiB,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAQ9D;AAED;;GAEG;AACH,wBAAgB,oBAAoB,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAKjE"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/keys/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAOH,OAAO,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAA;AACpK,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,cAAc,CAAA;AACnD,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,4BAA4B,CAAA;AAExD,OAAO,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAA;AAC1D,YAAY,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAA;AAC5C,YAAY,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AACxF,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAEjD;;GAEG;AACH,wBAAsB,eAAe,CAAE,IAAI,EAAE,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;AACnF,wBAAsB,eAAe,CAAE,IAAI,EAAE,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;AACvF,wBAAsB,eAAe,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AAC1F,wBAAsB,eAAe,CAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAiBzF;;;;;GAKG;AACH,wBAAsB,uBAAuB,CAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;AAC7G,wBAAsB,uBAAuB,CAAE,CAAC,SAAS,OAAO,EAAG,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;AAS5H;;;;;;;;GAQG;AACH,wBAAgB,qBAAqB,CAAE,GAAG,EAAE,UAAU,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,SAAS,CAc9F;AAED;;GAEG;AACH,wBAAgB,gBAAgB,CAAE,GAAG,EAAE,UAAU,GAAG,SAAS,CAQ5D;AAED;;;;;;GAMG;AACH,wBAAgB,sBAAsB,CAAE,MAAM,EAAE,eAAe,CAAC,GAAG,CAAC,GAAG,gBAAgB,GAAG,kBAAkB,CAY3G;AAED;;GAEG;AACH,wBAAgB,mBAAmB,CAAE,GAAG,EAAE,SAAS,GAAG,UAAU,CAK/D;AAED;;GAEG;AACH,wBAAgB,sBAAsB,CAAE,GAAG,EAAE,UAAU,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,aAAa,CAchH;AAED;;;;GAIG;AACH,wBAAgB,iBAAiB,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAQ9D;AAED;;GAEG;AACH,wBAAgB,oBAAoB,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAKjE"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/index.js b/node_modules/@libp2p/crypto/dist/src/keys/index.js
index 1e91030..9560013 100644
--- a/node_modules/@libp2p/crypto/dist/src/keys/index.js
+++ b/node_modules/@libp2p/crypto/dist/src/keys/index.js
@@ -33,14 +33,20 @@ export async function generateKeyPairFromSeed(type, seed) {
     return generateEd25519KeyPairFromSeed(seed);
 }
 /**
- * Converts a protobuf serialized public key into its representative object
+ * Converts a protobuf serialized public key into its representative object.
+ *
+ * For RSA public keys optionally pass the multihash digest of the public key if
+ * it is known. If the digest is omitted it will be calculated which can be
+ * expensive.
+ *
+ * For other key types the digest option is ignored.
  */
-export function publicKeyFromProtobuf(buf) {
+export function publicKeyFromProtobuf(buf, digest) {
     const { Type, Data } = pb.PublicKey.decode(buf);
     const data = Data ?? new Uint8Array();
     switch (Type) {
         case pb.KeyType.RSA:
-            return pkixToRSAPublicKey(data);
+            return pkixToRSAPublicKey(data, digest);
         case pb.KeyType.Ed25519:
             return unmarshalEd25519PublicKey(data);
         case pb.KeyType.secp256k1:
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/index.js.map b/node_modules/@libp2p/crypto/dist/src/keys/index.js.map
index f6aa3cb..12ab6e0 100644
--- a/node_modules/@libp2p/crypto/dist/src/keys/index.js.map
+++ b/node_modules/@libp2p/crypto/dist/src/keys/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/keys/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/keys/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.d.ts b/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.d.ts
new file mode 100644
index 0000000..1f30836
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.d.ts
@@ -0,0 +1,10 @@
+import { Uint8ArrayList } from 'uint8arraylist';
+interface Context {
+    offset: number;
+}
+export declare function decodeDer(buf: Uint8Array, context?: Context): any;
+export declare function encodeInteger(value: Uint8Array | Uint8ArrayList): Uint8ArrayList;
+export declare function encodeBitString(value: Uint8Array | Uint8ArrayList): Uint8ArrayList;
+export declare function encodeSequence(values: Array<Uint8Array | Uint8ArrayList>): Uint8ArrayList;
+export {};
+//# sourceMappingURL=der.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.d.ts.map b/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.d.ts.map
new file mode 100644
index 0000000..7ee6921
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"der.d.ts","sourceRoot":"","sources":["../../../../src/keys/rsa/der.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAA;AAE/C,UAAU,OAAO;IACf,MAAM,EAAE,MAAM,CAAA;CACf;AAoBD,wBAAgB,SAAS,CAAE,GAAG,EAAE,UAAU,EAAE,OAAO,GAAE,OAAuB,GAAG,GAAG,CASjF;AAiID,wBAAgB,aAAa,CAAE,KAAK,EAAE,UAAU,GAAG,cAAc,GAAG,cAAc,CAiBjF;AAED,wBAAgB,eAAe,CAAE,KAAK,EAAE,UAAU,GAAG,cAAc,GAAG,cAAc,CAcnF;AAED,wBAAgB,cAAc,CAAE,MAAM,EAAE,KAAK,CAAC,UAAU,GAAG,cAAc,CAAC,GAAG,cAAc,CAc1F"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.js b/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.js
new file mode 100644
index 0000000..b59cd57
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.js
@@ -0,0 +1,137 @@
+import { Uint8ArrayList } from 'uint8arraylist';
+const TAG_MASK = parseInt('11111', 2);
+const LONG_LENGTH_MASK = parseInt('10000000', 2);
+const LONG_LENGTH_BYTES_MASK = parseInt('01111111', 2);
+const decoders = {
+    0x2: readInteger,
+    0x3: readBitString,
+    0x5: readNull,
+    0x6: readObjectIdentifier,
+    0x10: readSequence,
+    0x16: readSequence,
+    0x30: readSequence
+};
+export function decodeDer(buf, context = { offset: 0 }) {
+    const tag = buf[context.offset] & TAG_MASK;
+    context.offset++;
+    if (decoders[tag] != null) {
+        return decoders[tag](buf, context);
+    }
+    throw new Error('No decoder for tag ' + tag);
+}
+function readLength(buf, context) {
+    let length = 0;
+    if ((buf[context.offset] & LONG_LENGTH_MASK) === LONG_LENGTH_MASK) {
+        // long length
+        const count = buf[context.offset] & LONG_LENGTH_BYTES_MASK;
+        let str = '0x';
+        context.offset++;
+        for (let i = 0; i < count; i++, context.offset++) {
+            str += buf[context.offset].toString(16).padStart(2, '0');
+        }
+        length = parseInt(str, 16);
+    }
+    else {
+        length = buf[context.offset];
+        context.offset++;
+    }
+    return length;
+}
+function readSequence(buf, context) {
+    readLength(buf, context);
+    const entries = [];
+    while (true) {
+        if (context.offset >= buf.byteLength) {
+            break;
+        }
+        const result = decodeDer(buf, context);
+        if (result === null) {
+            break;
+        }
+        entries.push(result);
+    }
+    return entries;
+}
+function readInteger(buf, context) {
+    const length = readLength(buf, context);
+    const start = context.offset;
+    const end = context.offset + length;
+    const vals = [];
+    for (let i = start; i < end; i++) {
+        if (i === start && buf[i] === 0) {
+            continue;
+        }
+        vals.push(buf[i]);
+    }
+    context.offset += length;
+    return Uint8Array.from(vals);
+}
+function readObjectIdentifier(buf, context) {
+    const count = readLength(buf, context);
+    // skip OID
+    context.offset += count;
+    return ['oid-unimplemented'];
+}
+function readNull(buf, context) {
+    context.offset++;
+    return null;
+}
+function readBitString(buf, context) {
+    const length = readLength(buf, context);
+    const unusedBits = buf[context.offset];
+    context.offset++;
+    const bytes = buf.subarray(context.offset, context.offset + length);
+    context.offset += length;
+    if (unusedBits !== 0) {
+        // need to shift all bytes along by this many bits
+        throw new Error('Unused bits in bit string is unimplemented');
+    }
+    return decodeDer(bytes, {
+        offset: 0
+    });
+}
+function encodeNumber(value) {
+    let number = value.toString(16);
+    if (number.length % 2 === 1) {
+        number = '0' + number;
+    }
+    const array = new Uint8ArrayList();
+    for (let i = 0; i < number.length; i += 2) {
+        array.append(Uint8Array.from([parseInt(`${number[i]}${number[i + 1]}`, 16)]));
+    }
+    return array;
+}
+function encodeLength(bytes) {
+    if (bytes.byteLength < 128) {
+        return Uint8Array.from([bytes.byteLength]);
+    }
+    // long length
+    const length = encodeNumber(bytes.byteLength);
+    return new Uint8ArrayList(Uint8Array.from([
+        length.byteLength | LONG_LENGTH_MASK
+    ]), length);
+}
+export function encodeInteger(value) {
+    const contents = new Uint8ArrayList();
+    const mask = parseInt('10000000', 2);
+    const positive = (value.subarray()[0] & mask) === mask;
+    if (positive) {
+        contents.append(Uint8Array.from([0]));
+    }
+    contents.append(value);
+    return new Uint8ArrayList(Uint8Array.from([0x02]), encodeLength(contents), contents);
+}
+export function encodeBitString(value) {
+    // unused bits is always 0 with full-byte-only values
+    const unusedBits = Uint8Array.from([0]);
+    const contents = new Uint8ArrayList(unusedBits, value);
+    return new Uint8ArrayList(Uint8Array.from([0x03]), encodeLength(contents), contents);
+}
+export function encodeSequence(values) {
+    const output = new Uint8ArrayList();
+    for (const buf of values) {
+        output.append(buf);
+    }
+    return new Uint8ArrayList(Uint8Array.from([0x30]), encodeLength(output), output);
+}
+//# sourceMappingURL=der.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.js.map b/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.js.map
new file mode 100644
index 0000000..8216d93
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/src/keys/rsa/der.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"der.js","sourceRoot":"","sources":["../../../../src/keys/rsa/der.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.d.ts b/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.d.ts
index ca138b0..0e0c371 100644
--- a/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.d.ts
+++ b/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.d.ts
@@ -1,20 +1,21 @@
 import type { JWKKeyPair } from '../interface.js';
 import type { RSAPrivateKey, RSAPublicKey } from '@libp2p/interface';
+import type { Digest } from 'multiformats/hashes/digest';
 export declare const MAX_RSA_KEY_SIZE = 8192;
 /**
- * Convert a PKCS#1 in ASN1 DER format to a JWK key
+ * Convert a PKCS#1 in ASN1 DER format to a JWK private key
  */
 export declare function pkcs1ToJwk(bytes: Uint8Array): JsonWebKey;
 /**
- * Convert a JWK key into PKCS#1 in ASN1 DER format
+ * Convert a JWK private key into PKCS#1 in ASN1 DER format
  */
 export declare function jwkToPkcs1(jwk: JsonWebKey): Uint8Array;
 /**
- * Convert a PKIX in ASN1 DER format to a JWK key
+ * Convert a PKIX in ASN1 DER format to a JWK public key
  */
 export declare function pkixToJwk(bytes: Uint8Array): JsonWebKey;
 /**
- * Convert a JWK key to PKIX in ASN1 DER format
+ * Convert a JWK public key to PKIX in ASN1 DER format
  */
 export declare function jwkToPkix(jwk: JsonWebKey): Uint8Array;
 /**
@@ -24,7 +25,7 @@ export declare function pkcs1ToRSAPrivateKey(bytes: Uint8Array): RSAPrivateKey;
 /**
  * Turn PKIX bytes to a PublicKey
  */
-export declare function pkixToRSAPublicKey(bytes: Uint8Array): RSAPublicKey;
+export declare function pkixToRSAPublicKey(bytes: Uint8Array, digest?: Digest<18, number>): RSAPublicKey;
 export declare function jwkToRSAPrivateKey(jwk: JsonWebKey): RSAPrivateKey;
 export declare function generateRSAKeyPair(bits: number): Promise<RSAPrivateKey>;
 /**
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.d.ts.map b/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.d.ts.map
index 39d7a5e..2c1658e 100644
--- a/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.d.ts.map
+++ b/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../../src/keys/rsa/utils.ts"],"names":[],"mappings":"AASA,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AACjD,OAAO,KAAK,EAAE,aAAa,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAEpE,eAAO,MAAM,gBAAgB,OAAO,CAAA;AAGpC;;GAEG;AACH,wBAAgB,UAAU,CAAE,KAAK,EAAE,UAAU,GAAG,UAAU,CAqBzD;AAED;;GAEG;AACH,wBAAgB,UAAU,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAsBvD;AAED;;GAEG;AACH,wBAAgB,SAAS,CAAE,KAAK,EAAE,UAAU,GAAG,UAAU,CAYxD;AAED;;GAEG;AACH,wBAAgB,SAAS,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAgCtD;AA6BD;;GAEG;AACH,wBAAgB,oBAAoB,CAAE,KAAK,EAAE,UAAU,GAAG,aAAa,CAItE;AAED;;GAEG;AACH,wBAAgB,kBAAkB,CAAE,KAAK,EAAE,UAAU,GAAG,YAAY,CAcnE;AAED,wBAAgB,kBAAkB,CAAE,GAAG,EAAE,UAAU,GAAG,aAAa,CAalE;AAED,wBAAsB,kBAAkB,CAAE,IAAI,EAAE,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAa9E;AAED;;GAEG;AACH,wBAAgB,eAAe,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAa5D"}
\ No newline at end of file
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../../src/keys/rsa/utils.ts"],"names":[],"mappings":"AASA,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AACjD,OAAO,KAAK,EAAE,aAAa,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AACpE,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,4BAA4B,CAAA;AAExD,eAAO,MAAM,gBAAgB,OAAO,CAAA;AAQpC;;GAEG;AACH,wBAAgB,UAAU,CAAE,KAAK,EAAE,UAAU,GAAG,UAAU,CAczD;AAED;;GAEG;AACH,wBAAgB,UAAU,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAgBvD;AAED;;GAEG;AACH,wBAAgB,SAAS,CAAE,KAAK,EAAE,UAAU,GAAG,UAAU,CAkBxD;AAED;;GAEG;AACH,wBAAgB,SAAS,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAgBtD;AAED;;GAEG;AACH,wBAAgB,oBAAoB,CAAE,KAAK,EAAE,UAAU,GAAG,aAAa,CAItE;AAED;;GAEG;AACH,wBAAgB,kBAAkB,CAAE,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,YAAY,CAgBhG;AAED,wBAAgB,kBAAkB,CAAE,GAAG,EAAE,UAAU,GAAG,aAAa,CAalE;AAED,wBAAsB,kBAAkB,CAAE,IAAI,EAAE,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAa9E;AAED;;GAEG;AACH,wBAAgB,eAAe,CAAE,GAAG,EAAE,UAAU,GAAG,UAAU,CAa5D"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.js b/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.js
index 374713d..d176b7d 100644
--- a/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.js
+++ b/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.js
@@ -1,124 +1,84 @@
 import { InvalidParametersError, InvalidPublicKeyError } from '@libp2p/interface';
 import { sha256 } from '@noble/hashes/sha256';
-import * as asn1js from 'asn1js';
 import { create } from 'multiformats/hashes/digest';
 import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
 import { toString as uint8ArrayToString } from 'uint8arrays/to-string';
 import * as pb from '../keys.js';
+import { decodeDer, encodeBitString, encodeInteger, encodeSequence } from './der.js';
 import { RSAPrivateKey as RSAPrivateKeyClass, RSAPublicKey as RSAPublicKeyClass } from './rsa.js';
 import { generateRSAKey, rsaKeySize } from './index.js';
 export const MAX_RSA_KEY_SIZE = 8192;
 const SHA2_256_CODE = 0x12;
+const MAX_RSA_JWK_SIZE = 1062;
+const RSA_ALGORITHM_IDENTIFIER = Uint8Array.from([
+    0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05, 0x00
+]);
 /**
- * Convert a PKCS#1 in ASN1 DER format to a JWK key
+ * Convert a PKCS#1 in ASN1 DER format to a JWK private key
  */
 export function pkcs1ToJwk(bytes) {
-    const { result } = asn1js.fromBER(bytes);
-    // @ts-expect-error this looks fragile but DER is a canonical format so we are
-    // safe to have deeply property chains like this
-    const values = result.valueBlock.value;
-    const key = {
-        n: asn1jsIntegerToBase64(values[1]),
-        e: asn1jsIntegerToBase64(values[2]),
-        d: asn1jsIntegerToBase64(values[3]),
-        p: asn1jsIntegerToBase64(values[4]),
-        q: asn1jsIntegerToBase64(values[5]),
-        dp: asn1jsIntegerToBase64(values[6]),
-        dq: asn1jsIntegerToBase64(values[7]),
-        qi: asn1jsIntegerToBase64(values[8]),
-        kty: 'RSA',
-        alg: 'RS256'
+    const values = decodeDer(bytes);
+    return {
+        n: uint8ArrayToString(values[1], 'base64url'),
+        e: uint8ArrayToString(values[2], 'base64url'),
+        d: uint8ArrayToString(values[3], 'base64url'),
+        p: uint8ArrayToString(values[4], 'base64url'),
+        q: uint8ArrayToString(values[5], 'base64url'),
+        dp: uint8ArrayToString(values[6], 'base64url'),
+        dq: uint8ArrayToString(values[7], 'base64url'),
+        qi: uint8ArrayToString(values[8], 'base64url'),
+        kty: 'RSA'
     };
-    return key;
 }
 /**
- * Convert a JWK key into PKCS#1 in ASN1 DER format
+ * Convert a JWK private key into PKCS#1 in ASN1 DER format
  */
 export function jwkToPkcs1(jwk) {
     if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {
         throw new InvalidParametersError('JWK was missing components');
     }
-    const root = new asn1js.Sequence({
-        value: [
-            new asn1js.Integer({ value: 0 }),
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url'))),
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.d, 'base64url'))),
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.p, 'base64url'))),
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.q, 'base64url'))),
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dp, 'base64url'))),
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dq, 'base64url'))),
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.qi, 'base64url')))
-        ]
-    });
-    const der = root.toBER();
-    return new Uint8Array(der, 0, der.byteLength);
+    return encodeSequence([
+        encodeInteger(Uint8Array.from([0])),
+        encodeInteger(uint8ArrayFromString(jwk.n, 'base64url')),
+        encodeInteger(uint8ArrayFromString(jwk.e, 'base64url')),
+        encodeInteger(uint8ArrayFromString(jwk.d, 'base64url')),
+        encodeInteger(uint8ArrayFromString(jwk.p, 'base64url')),
+        encodeInteger(uint8ArrayFromString(jwk.q, 'base64url')),
+        encodeInteger(uint8ArrayFromString(jwk.dp, 'base64url')),
+        encodeInteger(uint8ArrayFromString(jwk.dq, 'base64url')),
+        encodeInteger(uint8ArrayFromString(jwk.qi, 'base64url'))
+    ]).subarray();
 }
 /**
- * Convert a PKIX in ASN1 DER format to a JWK key
+ * Convert a PKIX in ASN1 DER format to a JWK public key
  */
 export function pkixToJwk(bytes) {
-    const { result } = asn1js.fromBER(bytes);
-    // @ts-expect-error this looks fragile but DER is a canonical format so we are
-    // safe to have deeply property chains like this
-    const values = result.valueBlock.value[1].valueBlock.value[0].valueBlock.value;
+    const decoded = decodeDer(bytes, {
+        offset: 0
+    });
+    // this looks fragile but DER is a canonical format so we are safe to have
+    // deeply property chains like this
     return {
         kty: 'RSA',
-        n: asn1jsIntegerToBase64(values[0]),
-        e: asn1jsIntegerToBase64(values[1])
+        n: uint8ArrayToString(decoded[1][0], 'base64url'),
+        e: uint8ArrayToString(decoded[1][1], 'base64url')
     };
 }
 /**
- * Convert a JWK key to PKIX in ASN1 DER format
+ * Convert a JWK public key to PKIX in ASN1 DER format
  */
 export function jwkToPkix(jwk) {
     if (jwk.n == null || jwk.e == null) {
         throw new InvalidParametersError('JWK was missing components');
     }
-    const root = new asn1js.Sequence({
-        value: [
-            new asn1js.Sequence({
-                value: [
-                    // rsaEncryption
-                    new asn1js.ObjectIdentifier({
-                        value: '1.2.840.113549.1.1.1'
-                    }),
-                    new asn1js.Null()
-                ]
-            }),
-            // this appears to be a bug in asn1js.js - this should really be a Sequence
-            // and not a BitString but it generates the same bytes as node-forge so 🤷‍♂️
-            new asn1js.BitString({
-                valueHex: new asn1js.Sequence({
-                    value: [
-                        asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),
-                        asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url')))
-                    ]
-                }).toBER()
-            })
-        ]
-    });
-    const der = root.toBER();
-    return new Uint8Array(der, 0, der.byteLength);
-}
-function asn1jsIntegerToBase64(int) {
-    let buf = int.valueBlock.valueHexView;
-    // chrome rejects values with leading 0s
-    while (buf[0] === 0) {
-        buf = buf.subarray(1);
-    }
-    return uint8ArrayToString(buf, 'base64url');
-}
-function bufToBn(u8) {
-    const hex = [];
-    u8.forEach(function (i) {
-        let h = i.toString(16);
-        if (h.length % 2 > 0) {
-            h = `0${h}`;
-        }
-        hex.push(h);
-    });
-    return BigInt('0x' + hex.join(''));
+    const subjectPublicKeyInfo = encodeSequence([
+        RSA_ALGORITHM_IDENTIFIER,
+        encodeBitString(encodeSequence([
+            encodeInteger(uint8ArrayFromString(jwk.n, 'base64url')),
+            encodeInteger(uint8ArrayFromString(jwk.e, 'base64url'))
+        ]))
+    ]);
+    return subjectPublicKeyInfo.subarray();
 }
 /**
  * Turn PKCS#1 DER bytes to a PrivateKey
@@ -130,16 +90,18 @@ export function pkcs1ToRSAPrivateKey(bytes) {
 /**
  * Turn PKIX bytes to a PublicKey
  */
-export function pkixToRSAPublicKey(bytes) {
-    const jwk = pkixToJwk(bytes);
-    if (rsaKeySize(jwk) > MAX_RSA_KEY_SIZE) {
+export function pkixToRSAPublicKey(bytes, digest) {
+    if (bytes.byteLength >= MAX_RSA_JWK_SIZE) {
         throw new InvalidPublicKeyError('Key size is too large');
     }
-    const hash = sha256(pb.PublicKey.encode({
-        Type: pb.KeyType.RSA,
-        Data: bytes
-    }));
-    const digest = create(SHA2_256_CODE, hash);
+    const jwk = pkixToJwk(bytes);
+    if (digest == null) {
+        const hash = sha256(pb.PublicKey.encode({
+            Type: pb.KeyType.RSA,
+            Data: bytes
+        }));
+        digest = create(SHA2_256_CODE, hash);
+    }
     return new RSAPublicKeyClass(jwk, digest);
 }
 export function jwkToRSAPrivateKey(jwk) {
diff --git a/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.js.map b/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.js.map
index b9239b0..4c8dad7 100644
--- a/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.js.map
+++ b/node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.js.map
@@ -1 +1 @@
-{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/keys/rsa/utils.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/keys/rsa/utils.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/crypto.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/crypto.spec.d.ts
new file mode 100644
index 0000000..0087889
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/crypto.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=crypto.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/crypto.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/crypto.spec.d.ts.map
new file mode 100644
index 0000000..e7f21c8
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/crypto.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"crypto.spec.d.ts","sourceRoot":"","sources":["../../test/crypto.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/crypto.spec.js b/node_modules/@libp2p/crypto/dist/test/crypto.spec.js
new file mode 100644
index 0000000..3e64cfd
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/crypto.spec.js
@@ -0,0 +1,120 @@
+/* eslint max-nested-callbacks: ["error", 8] */
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { base58btc } from 'multiformats/bases/base58';
+import { equals as uint8ArrayEquals } from 'uint8arrays/equals';
+import { generateKeyPair, generateKeyPairFromSeed, privateKeyFromProtobuf, privateKeyToProtobuf, publicKeyFromProtobuf, publicKeyToProtobuf } from '../src/keys/index.js';
+import pbkdf2 from '../src/pbkdf2.js';
+import randomBytes from '../src/random-bytes.js';
+import fixtures from './fixtures/go-key-rsa.js';
+describe('libp2p-crypto', function () {
+    this.timeout(20 * 1000);
+    let key;
+    before(async () => {
+        key = await generateKeyPair('RSA', 512);
+    });
+    it('marshalPublicKey and unmarshalPublicKey', async () => {
+        const key2 = publicKeyFromProtobuf(publicKeyToProtobuf(key.publicKey));
+        expect(key2).to.have.property('type', 'RSA');
+        expect(key2.equals(key.publicKey)).to.be.eql(true);
+    });
+    it('marshalPrivateKey and unmarshalPrivateKey', async () => {
+        const key2 = privateKeyFromProtobuf(privateKeyToProtobuf(key));
+        expect(key2).to.have.property('type', 'RSA');
+        expect(key2.equals(key)).to.be.true();
+        expect(key2.publicKey.equals(key.publicKey)).to.be.true();
+    });
+    it('generateKeyPair', () => {
+        // @ts-expect-error key type is invalid
+        return expect(generateKeyPair('invalid-key-type', 512)).to.eventually.be.rejected
+            .with.property('name', 'UnsupportedKeyTypeError');
+    });
+    it('generateKeyPairFromSeed', () => {
+        const seed = randomBytes(32);
+        // @ts-expect-error key type is invalid
+        return expect(generateKeyPairFromSeed('invalid-key-type', seed, 512)).to.eventually.be.rejected
+            .with.property('name', 'UnsupportedKeyTypeError');
+    });
+    // https://github.com/libp2p/js-libp2p-crypto/issues/314
+    function isSafari() {
+        return typeof navigator !== 'undefined' && navigator.userAgent.includes('AppleWebKit') && !navigator.userAgent.includes('Chrome') && navigator.userAgent.includes('Mac');
+    }
+    // marshaled keys seem to be slightly different
+    // unsure as to if this is just a difference in encoding
+    // or a bug
+    describe.skip('go interop', () => {
+        it.skip('unmarshals private key', async () => {
+            if (isSafari()) {
+                // eslint-disable-next-line no-console
+                console.warn('Skipping test in Safari. Known bug: https://github.com/libp2p/js-libp2p-crypto/issues/314');
+                return;
+            }
+            const key = privateKeyFromProtobuf(fixtures.private.key);
+            expect(fixtures.private.key).to.equalBytes(key.raw);
+            const hash = fixtures.private.hash;
+            const digest = key.publicKey.toCID().multihash;
+            expect(base58btc.encode(digest.bytes)).to.equal(hash);
+        });
+        it('unmarshals public key', async () => {
+            const key = publicKeyFromProtobuf(fixtures.public.key);
+            const hash = fixtures.public.hash;
+            expect(publicKeyToProtobuf(key)).to.equalBytes(fixtures.public.key);
+            const digest = key.toCID().multihash;
+            expect(base58btc.encode(digest.bytes)).to.equal(hash);
+        });
+        it.skip('unmarshal -> marshal, private key', async () => {
+            const key = privateKeyFromProtobuf(fixtures.private.key);
+            const marshaled = privateKeyToProtobuf(key);
+            if (isSafari()) {
+                // eslint-disable-next-line no-console
+                console.warn('Running different test in Safari. Known bug: https://github.com/libp2p/js-libp2p-crypto/issues/314');
+                const key2 = privateKeyFromProtobuf(marshaled);
+                expect(key2.raw).to.equalBytes(key.raw);
+                return;
+            }
+            expect(marshaled).to.equalBytes(fixtures.private.key);
+        });
+        it('unmarshal -> marshal, public key', async () => {
+            const key = publicKeyFromProtobuf(fixtures.public.key);
+            const marshaled = publicKeyToProtobuf(key);
+            expect(uint8ArrayEquals(fixtures.public.key, marshaled)).to.be.true();
+        });
+    });
+    describe('pbkdf2', () => {
+        it('generates a derived password using sha1', () => {
+            const p1 = pbkdf2('password', 'at least 16 character salt', 500, 512 / 8, 'sha1');
+            expect(p1).to.exist();
+            expect(p1).to.be.a('string');
+        });
+        it('generates a derived password using sha2-512', () => {
+            const p1 = pbkdf2('password', 'at least 16 character salt', 500, 512 / 8, 'sha2-512');
+            expect(p1).to.exist();
+            expect(p1).to.be.a('string');
+        });
+        it('generates the same derived password with the same options', () => {
+            const p1 = pbkdf2('password', 'at least 16 character salt', 10, 512 / 8, 'sha1');
+            const p2 = pbkdf2('password', 'at least 16 character salt', 10, 512 / 8, 'sha1');
+            const p3 = pbkdf2('password', 'at least 16 character salt', 11, 512 / 8, 'sha1');
+            expect(p2).to.equal(p1);
+            expect(p3).to.not.equal(p2);
+        });
+        it('throws on invalid hash name', () => {
+            const fn = () => pbkdf2('password', 'at least 16 character salt', 500, 512 / 8, 'shaX-xxx');
+            expect(fn).to.throw().with.property('name', 'InvalidParametersError');
+        });
+    });
+    describe('randomBytes', () => {
+        it('throws with invalid number passed', () => {
+            expect(() => {
+                randomBytes(-1);
+            }).to.throw();
+        });
+        it('generates different random things', () => {
+            const buf1 = randomBytes(10);
+            expect(buf1.length).to.equal(10);
+            const buf2 = randomBytes(10);
+            expect(buf1).to.not.eql(buf2);
+        });
+    });
+});
+//# sourceMappingURL=crypto.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/crypto.spec.js.map b/node_modules/@libp2p/crypto/dist/test/crypto.spec.js.map
new file mode 100644
index 0000000..7b04d10
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/crypto.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"crypto.spec.js","sourceRoot":"","sources":["../../test/crypto.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.d.ts b/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.d.ts
new file mode 100644
index 0000000..a25d897
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.d.ts
@@ -0,0 +1,17 @@
+import type { Curve } from '../../src/keys/ecdh/index.js';
+type GoEllipticKeys = {
+    [key in Curve]: {
+        alice: {
+            private: Uint8Array;
+            public: Uint8Array;
+        };
+        bob: {
+            private: Uint8Array;
+            public: Uint8Array;
+        };
+        shared: Uint8Array;
+    };
+};
+declare const fixtures: GoEllipticKeys;
+export default fixtures;
+//# sourceMappingURL=go-elliptic-key.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.d.ts.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.d.ts.map
new file mode 100644
index 0000000..c368056
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-elliptic-key.d.ts","sourceRoot":"","sources":["../../../test/fixtures/go-elliptic-key.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,8BAA8B,CAAA;AAEzD,KAAK,cAAc,GAAG;KACnB,GAAG,IAAI,KAAK,GAAG;QACd,KAAK,EAAE;YACL,OAAO,EAAE,UAAU,CAAA;YACnB,MAAM,EAAE,UAAU,CAAA;SACnB,CAAA;QACD,GAAG,EAAE;YACH,OAAO,EAAE,UAAU,CAAA;YACnB,MAAM,EAAE,UAAU,CAAA;SACnB,CAAA;QACD,MAAM,EAAE,UAAU,CAAA;KACnB;CACF,CAAA;AAED,QAAA,MAAM,QAAQ,EAAE,cAkCf,CAAA;AAED,eAAe,QAAQ,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.js b/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.js
new file mode 100644
index 0000000..e9e76ff
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.js
@@ -0,0 +1,37 @@
+const fixtures = {
+    'P-256': {
+        alice: {
+            private: Uint8Array.from([37, 140, 166, 161, 212, 132, 254, 140, 126, 65, 100, 6, 148, 131, 215, 92, 208, 103, 221, 6, 128, 23, 135, 79, 255, 73, 11, 225, 82, 212, 107, 80]),
+            public: Uint8Array.from([4, 122, 24, 120, 242, 177, 155, 244, 37, 171, 235, 22, 163, 121, 156, 182, 143, 217, 16, 233, 66, 127, 128, 60, 26, 57, 152, 210, 225, 251, 222, 8, 23, 85, 128, 21, 98, 28, 210, 66, 226, 90, 84, 107, 116, 233, 254, 6, 104, 58, 145, 7, 111, 60, 176, 86, 42, 191, 157, 27, 102, 77, 35, 66, 57])
+        },
+        bob: {
+            private: Uint8Array.from([250, 49, 115, 112, 140, 2, 12, 1, 189, 35, 30, 96, 177, 1, 181, 249, 110, 31, 240, 17, 27, 30, 19, 58, 209, 1, 63, 147, 184, 139, 208, 171]),
+            public: Uint8Array.from([4, 177, 148, 249, 217, 112, 201, 61, 113, 88, 206, 195, 25, 181, 241, 5, 244, 233, 252, 46, 233, 204, 48, 252, 250, 247, 66, 217, 130, 209, 62, 155, 242, 232, 26, 29, 150, 122, 131, 101, 138, 74, 137, 33, 136, 156, 46, 63, 213, 158, 51, 163, 91, 203, 21, 150, 227, 190, 218, 117, 235, 254, 148, 117, 199])
+        },
+        shared: Uint8Array.from([157, 145, 9, 131, 239, 13, 39, 207, 4, 151, 238, 38, 98, 169, 181, 194, 83, 36, 88, 238, 172, 133, 32, 251, 118, 90, 233, 47, 197, 40, 231, 182])
+    },
+    'P-384': {
+        alice: {
+            private: Uint8Array.from([220, 34, 222, 224, 82, 178, 23, 121, 165, 184, 228, 178, 77, 76, 66, 55, 35, 122, 195, 222, 229, 66, 41, 75, 221, 48, 32, 99, 117, 118, 26, 96, 156, 131, 97, 121, 17, 251, 157, 202, 50, 241, 238, 195, 126, 211, 223, 250]),
+            public: Uint8Array.from([4, 91, 188, 238, 169, 244, 3, 234, 174, 151, 59, 224, 217, 125, 111, 92, 118, 37, 26, 14, 102, 223, 122, 181, 164, 142, 48, 97, 59, 33, 33, 99, 122, 51, 111, 125, 199, 218, 171, 248, 117, 45, 39, 9, 243, 31, 62, 156, 221, 95, 110, 148, 158, 232, 50, 83, 98, 91, 68, 162, 173, 125, 87, 56, 101, 118, 243, 47, 203, 135, 246, 194, 249, 78, 42, 70, 205, 229, 100, 59, 17, 153, 198, 185, 202, 146, 227, 242, 136, 36, 18, 169, 213, 227, 90, 77, 163])
+        },
+        bob: {
+            private: Uint8Array.from([234, 194, 98, 206, 63, 134, 230, 192, 54, 44, 167, 95, 131, 97, 64, 109, 241, 143, 69, 216, 170, 102, 70, 53, 209, 24, 145, 207, 102, 240, 123, 165, 12, 4, 28, 47, 159, 143, 131, 96, 114, 43, 144, 227, 114, 166, 174, 232]),
+            public: Uint8Array.from([4, 118, 187, 146, 219, 61, 124, 142, 240, 183, 239, 180, 86, 241, 181, 238, 4, 135, 205, 109, 253, 130, 91, 183, 151, 161, 208, 10, 92, 167, 37, 71, 1, 68, 174, 30, 49, 30, 161, 22, 23, 249, 82, 148, 58, 22, 238, 95, 213, 13, 63, 15, 219, 167, 210, 74, 101, 19, 70, 53, 199, 197, 103, 73, 110, 90, 195, 208, 28, 195, 96, 196, 11, 187, 26, 2, 233, 54, 75, 177, 213, 55, 196, 171, 164, 233, 218, 161, 221, 61, 92, 19, 153, 74, 149, 131, 50])
+        },
+        shared: Uint8Array.from([23, 182, 212, 185, 218, 192, 252, 17, 210, 198, 144, 134, 45, 210, 69, 232, 121, 210, 97, 36, 188, 115, 104, 137, 69, 79, 249, 125, 158, 151, 247, 142, 87, 137, 229, 225, 222, 244, 203, 22, 211, 85, 57, 130, 178, 12, 81, 43])
+    },
+    'P-521': {
+        alice: {
+            private: Uint8Array.from([1, 159, 121, 134, 240, 103, 228, 193, 28, 197, 193, 159, 230, 12, 193, 254, 160, 159, 230, 96, 254, 230, 241, 164, 158, 239, 164, 238, 165, 55, 119, 33, 89, 229, 193, 83, 97, 58, 245, 11, 5, 143, 253, 142, 176, 36, 225, 253, 133, 46, 148, 176, 144, 24, 157, 205, 50, 126, 110, 85, 238, 52, 207, 23, 64, 203]),
+            public: Uint8Array.from([4, 1, 75, 171, 78, 143, 67, 235, 246, 10, 144, 92, 51, 186, 8, 32, 61, 204, 148, 130, 91, 86, 108, 157, 163, 134, 193, 160, 187, 177, 143, 112, 132, 227, 207, 178, 141, 199, 51, 249, 3, 245, 51, 37, 192, 0, 188, 239, 216, 244, 243, 168, 232, 49, 158, 164, 140, 87, 90, 220, 18, 26, 101, 235, 71, 206, 142, 1, 124, 224, 170, 139, 25, 6, 0, 17, 153, 45, 0, 41, 102, 106, 211, 255, 116, 191, 219, 66, 16, 72, 161, 235, 106, 41, 19, 132, 38, 64, 5, 90, 154, 22, 71, 178, 85, 52, 225, 195, 39, 112, 124, 136, 133, 42, 220, 110, 51, 237, 85, 55, 90, 105, 212, 252, 50, 113, 8, 205, 92, 246, 154, 49, 124])
+        },
+        bob: {
+            private: Uint8Array.from([0, 48, 128, 144, 205, 13, 19, 62, 68, 13, 80, 138, 138, 166, 70, 7, 26, 180, 229, 237, 141, 10, 70, 72, 58, 100, 140, 3, 62, 14, 182, 241, 79, 229, 170, 205, 15, 50, 24, 238, 46, 194, 18, 179, 225, 238, 221, 25, 42, 49, 110, 133, 201, 21, 139, 155, 184, 170, 129, 214, 189, 202, 36, 19, 224, 86]),
+            public: Uint8Array.from([4, 1, 222, 110, 155, 186, 20, 231, 105, 66, 36, 75, 141, 111, 195, 120, 250, 27, 80, 251, 156, 245, 226, 181, 242, 40, 218, 227, 78, 217, 162, 221, 54, 29, 67, 216, 82, 160, 196, 57, 241, 33, 54, 52, 23, 109, 156, 247, 253, 89, 199, 141, 27, 105, 232, 230, 97, 159, 156, 215, 224, 72, 147, 124, 16, 43, 69, 0, 174, 197, 20, 217, 121, 68, 66, 130, 205, 40, 209, 16, 46, 78, 244, 51, 162, 27, 141, 30, 146, 245, 211, 149, 81, 195, 174, 233, 42, 177, 16, 141, 217, 63, 193, 149, 68, 204, 216, 153, 167, 139, 194, 182, 96, 209, 249, 151, 172, 153, 24, 243, 4, 143, 120, 178, 228, 155, 14, 16, 222, 196, 96, 10, 154])
+        },
+        shared: Uint8Array.from([1, 135, 156, 15, 251, 68, 247, 200, 153, 189, 60, 183, 63, 215, 139, 185, 242, 96, 23, 86, 39, 175, 173, 170, 7, 189, 168, 209, 241, 1, 212, 136, 241, 212, 136, 90, 145, 48, 133, 46, 41, 142, 218, 133, 198, 127, 56, 9, 70, 35, 16, 156, 217, 58, 74, 72, 69, 188, 53, 11, 130, 164, 57, 160, 113, 76])
+    }
+};
+export default fixtures;
+//# sourceMappingURL=go-elliptic-key.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.js.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.js.map
new file mode 100644
index 0000000..842044e
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-elliptic-key.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-elliptic-key.js","sourceRoot":"","sources":["../../../test/fixtures/go-elliptic-key.ts"],"names":[],"mappings":"AAgBA,MAAM,QAAQ,GAAmB;IAC/B,OAAO,EAAE;QACP,KAAK,EAAE;YACL,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;YAC7K,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAC9T;QACD,GAAG,EAAE;YACH,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtK,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAC3U;QACD,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KAC3K;IACD,OAAO,EAAE;QACP,KAAK,EAAE;YACL,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACvP,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;SACtdxP,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;SACjd;QACD,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;KAC3P;IACD,OAAO,EAAE;QACP,KAAK,EAAE;YACL,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;YAC9U,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;SACjnB;QACD,GAAG,EAAE;YACH,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;YAClU,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;SAC9nB;QACD,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;KACpU;CACF,CAAA;AAED,eAAe,QAAQ,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.d.ts b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.d.ts
new file mode 100644
index 0000000..c364116
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.d.ts
@@ -0,0 +1,16 @@
+declare const _default: {
+    redundantPubKey: {
+        privateKey: Uint8Array;
+        publicKey: Uint8Array;
+        data: Uint8Array;
+        signature: Uint8Array;
+    };
+    verify: {
+        publicKey: Uint8Array;
+        privateKey: Uint8Array;
+        data: Uint8Array;
+        signature: Uint8Array;
+    };
+};
+export default _default;
+//# sourceMappingURL=go-key-ed25519.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.d.ts.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.d.ts.map
new file mode 100644
index 0000000..082e8e2
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-key-ed25519.d.ts","sourceRoot":"","sources":["../../../test/fixtures/go-key-ed25519.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,wBAuCC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.js b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.js
new file mode 100644
index 0000000..11c4d94
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.js
@@ -0,0 +1,38 @@
+export default {
+    // Generation code from https://github.com/libp2p/js-libp2p-crypto/issues/175#issuecomment-634467463
+    //
+    // package main
+    //
+    // import (
+    //   "crypto/rand"
+    //   "fmt"
+    //   "strings"
+    //   "github.com/libp2p/go-libp2p-core/crypto"
+    // )
+    // func main() {
+    //   privateKey, publicKey, _ := crypto.GenerateEd25519Key(rand.Reader)
+    //   publicKeyBytes, _ := publicKey.Bytes()
+    //   privateKeyBytes, _ := privateKey.Bytes()
+    //   data := []byte("hello! and welcome to some awesome crypto primitives")
+    //   sig, _ := privateKey.Sign(data)
+    //   fmt.Println("{\n  publicKey: Uint8Array.from(", strings.Replace(fmt.Sprint(publicKeyBytes), " ", ",", -1), "),")
+    //   fmt.Println("  privateKey: Uint8Array.from(", strings.Replace(fmt.Sprint(privateKeyBytes), " ", ",", -1), "),")
+    //   fmt.Println("  data: Uint8Array.from(", strings.Replace(fmt.Sprint(data), " ", ",", -1), "),")
+    //   fmt.Println("  signature: Uint8Array.from(", strings.Replace(fmt.Sprint(sig), " ", ",", -1), ")\n}")
+    // }
+    //
+    // The legacy key unnecessarily appends the publickey. (It's already included) See https://github.com/libp2p/js-libp2p-crypto/issues/175
+    redundantPubKey: {
+        privateKey: Uint8Array.from([8, 1, 18, 96, 201, 208, 1, 110, 176, 16, 230, 37, 66, 184, 149, 252, 78, 56, 206, 136, 2, 38, 118, 152, 226, 197, 117, 200, 54, 189, 156, 218, 184, 7, 118, 57, 233, 49, 221, 97, 164, 158, 241, 129, 73, 166, 225, 255, 193, 118, 22, 84, 55, 15, 249, 168, 225, 180, 198, 191, 14, 75, 187, 243, 150, 91, 232, 37, 233, 49, 221, 97, 164, 158, 241, 129, 73, 166, 225, 255, 193, 118, 22, 84, 55, 15, 249, 168, 225, 180, 198, 191, 14, 75, 187, 243, 150, 91, 232, 37]),
+        publicKey: Uint8Array.from([8, 1, 18, 32, 233, 49, 221, 97, 164, 158, 241, 129, 73, 166, 225, 255, 193, 118, 22, 84, 55, 15, 249, 168, 225, 180, 198, 191, 14, 75, 187, 243, 150, 91, 232, 37]),
+        data: Uint8Array.from([104, 101, 108, 108, 111, 33, 32, 97, 110, 100, 32, 119, 101, 108, 99, 111, 109, 101, 32, 116, 111, 32, 115, 111, 109, 101, 32, 97, 119, 101, 115, 111, 109, 101, 32, 99, 114, 121, 112, 116, 111, 32, 112, 114, 105, 109, 105, 116, 105, 118, 101, 115]),
+        signature: Uint8Array.from([7, 230, 175, 164, 228, 58, 78, 208, 62, 243, 73, 142, 83, 195, 176, 217, 166, 62, 41, 165, 168, 164, 75, 179, 163, 86, 102, 32, 18, 84, 150, 237, 39, 207, 213, 20, 134, 237, 50, 41, 176, 183, 229, 133, 38, 255, 42, 228, 68, 186, 100, 14, 175, 156, 243, 118, 125, 125, 120, 212, 124, 103, 252, 12])
+    },
+    verify: {
+        publicKey: Uint8Array.from([8, 1, 18, 32, 163, 176, 195, 47, 254, 208, 49, 5, 192, 102, 32, 63, 58, 202, 171, 153, 146, 164, 25, 212, 25, 91, 146, 26, 117, 165, 148, 6, 207, 90, 217, 126]),
+        privateKey: Uint8Array.from([8, 1, 18, 64, 232, 56, 175, 20, 240, 160, 19, 47, 92, 88, 115, 221, 164, 13, 36, 162, 158, 136, 247, 31, 29, 231, 76, 143, 12, 91, 193, 4, 88, 33, 67, 23, 163, 176, 195, 47, 254, 208, 49, 5, 192, 102, 32, 63, 58, 202, 171, 153, 146, 164, 25, 212, 25, 91, 146, 26, 117, 165, 148, 6, 207, 90, 217, 126]),
+        data: Uint8Array.from([104, 101, 108, 108, 111, 33, 32, 97, 110, 100, 32, 119, 101, 108, 99, 111, 109, 101, 32, 116, 111, 32, 115, 111, 109, 101, 32, 97, 119, 101, 115, 111, 109, 101, 32, 99, 114, 121, 112, 116, 111, 32, 112, 114, 105, 109, 105, 116, 105, 118, 101, 115]),
+        signature: Uint8Array.from([160, 125, 30, 62, 213, 189, 239, 92, 87, 76, 205, 169, 251, 149, 187, 57, 96, 85, 175, 213, 22, 132, 229, 60, 196, 18, 117, 194, 12, 174, 135, 31, 39, 168, 174, 103, 78, 55, 37, 222, 37, 172, 222, 239, 153, 63, 197, 152, 67, 167, 191, 215, 161, 212, 216, 163, 81, 77, 45, 228, 151, 79, 101, 1])
+    }
+};
+//# sourceMappingURL=go-key-ed25519.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.js.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.js.map
new file mode 100644
index 0000000..bd594e7
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-ed25519.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-key-ed25519.js","sourceRoot":"","sources":["../../../test/fixtures/go-key-ed25519.ts"],"names":[],"mappings":"AAAA,eAAe;IACb,oGAAoG;IACpG,EAAE;IACF,eAAe;IACf,EAAE;IACF,WAAW;IACX,kBAAkB;IAClB,UAAU;IACV,cAAc;IAEd,8CAA8C;IAC9C,IAAI;IAEJ,gBAAgB;IAChB,uEAAuE;IACvE,2CAA2C;IAC3C,6CAA6C;IAC7C,2EAA2E;IAC3E,oCAAoC;IACpC,qHAAqH;IACrH,oHAAoH;IACpH,mGAAmG;IACnG,yGAAyG;IACzG,IAAI;IACJ,EAAE;IAEF,wIAAwI;IACxI,eAAe,EAAE;QACf,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACve,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAC/L,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC/Q,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;KACtnU;CACF,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.d.ts b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.d.ts
new file mode 100644
index 0000000..a8140da
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.d.ts
@@ -0,0 +1,17 @@
+declare const _default: {
+    private: {
+        hash: Uint8Array;
+        key: Uint8Array;
+    };
+    public: {
+        hash: Uint8Array;
+        key: Uint8Array;
+    };
+    verify: {
+        signature: Uint8Array;
+        data: Uint8Array;
+        publicKey: Uint8Array;
+    };
+};
+export default _default;
+//# sourceMappingURL=go-key-rsa.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.d.ts.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.d.ts.map
new file mode 100644
index 0000000..7b56ad3
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-key-rsa.d.ts","sourceRoot":"","sources":["../../../test/fixtures/go-key-rsa.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,wBA4BC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.js b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.js
new file mode 100644
index 0000000..f7b8d02
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.js
@@ -0,0 +1,30 @@
+export default {
+    private: {
+        hash: Uint8Array.from([
+            18, 32, 168, 125, 165, 65, 34, 157, 209, 4, 24, 158, 80, 196, 125, 86, 103, 0, 228, 145, 109, 252, 153, 7, 189, 9, 16, 37, 239, 36, 48, 78, 214, 212
+        ]),
+        key: Uint8Array.from([
+            8, 0, 18, 192, 2, 48, 130, 1, 60, 2, 1, 0, 2, 65, 0, 230, 157, 160, 242, 74, 222, 87, 0, 77, 180, 91, 175, 217, 166, 2, 95, 193, 239, 195, 140, 224, 57, 84, 207, 46, 172, 113, 196, 20, 133, 117, 205, 45, 7, 224, 41, 40, 195, 254, 124, 14, 84, 223, 147, 67, 198, 48, 36, 53, 161, 112, 46, 153, 90, 19, 123, 94, 247, 5, 116, 1, 238, 32, 15, 2, 3, 1, 0, 1, 2, 65, 0, 191, 59, 140, 255, 254, 23, 123, 91, 148, 19, 240, 71, 213, 26, 181, 51, 68, 181, 150, 153, 214, 65, 148, 83, 45, 103, 239, 250, 225, 237, 125, 173, 111, 244, 37, 124, 87, 178, 86, 10, 14, 207, 63, 105, 213, 37, 81, 23, 230, 4, 222, 179, 144, 40, 252, 163, 190, 7, 241, 221, 28, 54, 225, 209, 2, 33, 0, 235, 132, 229, 150, 99, 182, 176, 194, 198, 65, 210, 160, 184, 70, 82, 49, 235, 199, 14, 11, 92, 66, 237, 45, 220, 72, 235, 1, 244, 145, 205, 57, 2, 33, 0, 250, 171, 146, 180, 188, 194, 14, 152, 52, 64, 38, 52, 158, 86, 46, 109, 66, 100, 122, 43, 88, 167, 143, 98, 104, 143, 160, 60, 171, 185, 31, 135, 2, 33, 0, 206, 47, 255, 203, 100, 170, 137, 31, 75, 240, 78, 84, 212, 95, 4, 16, 158, 73, 27, 27, 136, 255, 50, 163, 166, 169, 211, 204, 87, 111, 217, 201, 2, 33, 0, 177, 51, 194, 213, 3, 175, 7, 84, 47, 115, 189, 206, 106, 180, 47, 195, 203, 48, 110, 112, 224, 14, 43, 189, 124, 127, 51, 222, 79, 226, 225, 87, 2, 32, 67, 23, 190, 222, 106, 22, 115, 139, 217, 244, 178, 53, 153, 99, 5, 176, 72, 77, 193, 61, 67, 134, 37, 238, 69, 66, 159, 28, 39, 5, 238, 125
+        ])
+    },
+    public: {
+        hash: Uint8Array.from([
+            18, 32, 112, 151, 163, 167, 204, 243, 175, 123, 208, 162, 90, 84, 199, 174, 202, 110, 0, 119, 27, 202, 7, 149, 161, 251, 215, 168, 163, 54, 93, 54, 195, 20
+        ]),
+        key: Uint8Array.from([
+            8, 0, 18, 94, 48, 92, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0, 3, 75, 0, 48, 72, 2, 65, 0, 230, 157, 160, 242, 74, 222, 87, 0, 77, 180, 91, 175, 217, 166, 2, 95, 193, 239, 195, 140, 224, 57, 84, 207, 46, 172, 113, 196, 20, 133, 117, 205, 45, 7, 224, 41, 40, 195, 254, 124, 14, 84, 223, 147, 67, 198, 48, 36, 53, 161, 112, 46, 153, 90, 19, 123, 94, 247, 5, 116, 1, 238, 32, 15, 2, 3, 1, 0, 1
+        ])
+    },
+    verify: {
+        signature: Uint8Array.from([
+            3, 116, 81, 57, 91, 194, 7, 1, 230, 236, 229, 142, 36, 209, 208, 107, 47, 52, 164, 236, 139, 35, 155, 97, 43, 64, 145, 91, 19, 218, 149, 63, 99, 164, 191, 110, 145, 37, 18, 7, 98, 112, 144, 35, 29, 186, 169, 150, 165, 88, 145, 170, 197, 110, 42, 163, 188, 10, 42, 63, 34, 93, 91, 94, 199, 110, 10, 82, 238, 80, 93, 93, 77, 130, 22, 216, 229, 172, 36, 229, 82, 162, 20, 78, 19, 46, 82, 243, 43, 80, 115, 125, 145, 231, 194, 224, 30, 187, 55, 228, 74, 52, 203, 191, 254, 148, 136, 218, 62, 147, 171, 130, 251, 181, 105, 29, 238, 207, 197, 249, 61, 105, 202, 172, 160, 174, 43, 124, 115, 130, 169, 30, 76, 41, 52, 200, 2, 26, 53, 190, 43, 20, 203, 10, 217, 250, 47, 102, 92, 103, 197, 22, 108, 184, 74, 218, 82, 202, 180, 98, 13, 114, 12, 92, 1, 139, 150, 170, 8, 92, 32, 116, 168, 219, 157, 162, 28, 77, 29, 29, 74, 136, 144, 49, 173, 245, 253, 76, 167, 200, 169, 163, 7, 49, 133, 120, 99, 191, 53, 10, 66, 26, 234, 240, 139, 235, 134, 30, 55, 248, 150, 100, 242, 150, 159, 198, 44, 78, 150, 7, 133, 139, 59, 76, 3, 225, 94, 13, 89, 122, 34, 95, 95, 107, 74, 169, 171, 169, 222, 25, 191, 182, 148, 116, 66, 67, 102, 12, 193, 217, 247, 243, 148, 233, 161, 157
+        ]),
+        data: Uint8Array.from([
+            10, 16, 27, 128, 228, 220, 147, 176, 53, 105, 175, 171, 32, 213, 35, 236, 203, 60, 18, 171, 2, 8, 0, 18, 166, 2, 48, 130, 1, 34, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0, 3, 130, 1, 15, 0, 48, 130, 1, 10, 2, 130, 1, 1, 0, 181, 113, 138, 108, 208, 103, 166, 102, 37, 36, 204, 250, 228, 165, 44, 64, 176, 210, 205, 141, 241, 55, 200, 110, 98, 68, 85, 199, 254, 19, 86, 204, 63, 250, 167, 38, 59, 249, 146, 228, 73, 171, 63, 18, 96, 104, 191, 137, 186, 244, 255, 90, 16, 119, 195, 52, 177, 213, 254, 187, 174, 84, 174, 173, 12, 236, 53, 234, 3, 209, 82, 37, 78, 111, 214, 135, 76, 195, 9, 242, 134, 188, 153, 84, 139, 231, 51, 146, 177, 60, 12, 25, 158, 91, 215, 152, 7, 0, 84, 35, 36, 230, 227, 67, 198, 72, 50, 110, 37, 209, 98, 193, 65, 93, 173, 199, 4, 198, 102, 99, 148, 144, 224, 217, 114, 53, 144, 245, 251, 114, 211, 20, 82, 163, 123, 75, 16, 192, 106, 213, 128, 2, 11, 200, 203, 84, 41, 199, 224, 155, 171, 217, 64, 109, 116, 188, 151, 183, 173, 52, 205, 164, 93, 13, 251, 65, 182, 160, 154, 185, 239, 33, 184, 84, 159, 105, 101, 173, 194, 251, 123, 84, 92, 66, 61, 180, 45, 104, 162, 224, 214, 233, 64, 220, 165, 2, 104, 116, 150, 2, 234, 203, 112, 21, 124, 23, 48, 66, 30, 63, 30, 36, 246, 135, 203, 218, 115, 22, 189, 39, 39, 125, 205, 65, 222, 220, 77, 18, 84, 121, 161, 153, 125, 25, 139, 137, 170, 239, 150, 106, 119, 168, 216, 140, 113, 121, 26, 53, 118, 110, 53, 192, 244, 252, 145, 85, 2, 3, 1, 0, 1, 26, 17, 80, 45, 50, 53, 54, 44, 80, 45, 51, 56, 52, 44, 80, 45, 53, 50, 49, 34, 24, 65, 69, 83, 45, 50, 53, 54, 44, 65, 69, 83, 45, 49, 50, 56, 44, 66, 108, 111, 119, 102, 105, 115, 104, 42, 13, 83, 72, 65, 50, 53, 54, 44, 83, 72, 65, 53, 49, 50, 10, 16, 220, 83, 240, 105, 6, 203, 78, 83, 210, 115, 6, 106, 98, 82, 1, 161, 18, 171, 2, 8, 0, 18, 166, 2, 48, 130, 1, 34, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0, 3, 130, 1, 15, 0, 48, 130, 1, 10, 2, 130, 1, 1, 0, 185, 234, 19, 191, 164, 33, 65, 94, 87, 42, 74, 83, 224, 25, 142, 44, 26, 7, 92, 242, 189, 42, 170, 197, 178, 92, 45, 240, 107, 141, 128, 59, 122, 252, 48, 140, 4, 85, 85, 203, 3, 197, 8, 127, 120, 98, 44, 169, 135, 196, 70, 137, 117, 180, 177, 134, 170, 35, 165, 88, 105, 30, 114, 138, 11, 96, 68, 99, 18, 149, 223, 166, 105, 12, 176, 77, 48, 214, 22, 236, 17, 154, 213, 209, 158, 169, 202, 5, 100, 210, 83, 90, 201, 38, 205, 246, 231, 106, 63, 86, 222, 143, 157, 173, 62, 4, 85, 232, 20, 188, 6, 209, 186, 132, 192, 117, 146, 181, 233, 26, 0, 240, 138, 206, 91, 170, 114, 137, 217, 132, 139, 242, 144, 213, 103, 101, 190, 146, 188, 250, 188, 134, 255, 70, 125, 78, 65, 136, 239, 190, 206, 139, 155, 140, 163, 233, 170, 247, 205, 87, 209, 19, 29, 173, 10, 147, 43, 28, 90, 46, 6, 197, 217, 186, 66, 68, 126, 76, 64, 184, 8, 170, 23, 79, 243, 223, 119, 133, 118, 50, 226, 44, 246, 176, 10, 161, 219, 83, 54, 68, 248, 5, 14, 177, 114, 54, 63, 11, 71, 136, 142, 56, 151, 123, 230, 61, 80, 15, 180, 42, 49, 220, 148, 99, 231, 20, 230, 220, 85, 207, 187, 37, 210, 137, 171, 125, 71, 14, 53, 100, 91, 83, 209, 50, 132, 165, 253, 25, 161, 5, 97, 164, 163, 83, 95, 53, 2, 3, 1, 0, 1, 26, 17, 80, 45, 50, 53, 54, 44, 80, 45, 51, 56, 52, 44, 80, 45, 53, 50, 49, 34, 15, 65, 69, 83, 45, 50, 53, 54, 44, 65, 69, 83, 45, 49, 50, 56, 42, 13, 83, 72, 65, 50, 53, 54, 44, 83, 72, 65, 53, 49, 50, 4, 97, 54, 203, 112, 136, 34, 231, 162, 19, 154, 131, 27, 105, 26, 121, 238, 120, 25, 203, 66, 232, 53, 198, 20, 19, 96, 119, 218, 90, 64, 170, 3, 132, 116, 1, 87, 116, 232, 165, 161, 198, 117, 167, 60, 145, 1, 253, 108, 50, 150, 117, 8, 140, 133, 48, 30, 236, 36, 84, 186, 22, 144, 87, 101
+        ]),
+        publicKey: Uint8Array.from([
+            8, 0, 18, 166, 2, 48, 130, 1, 34, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0, 3, 130, 1, 15, 0, 48, 130, 1, 10, 2, 130, 1, 1, 0, 181, 113, 138, 108, 208, 103, 166, 102, 37, 36, 204, 250, 228, 165, 44, 64, 176, 210, 205, 141, 241, 55, 200, 110, 98, 68, 85, 199, 254, 19, 86, 204, 63, 250, 167, 38, 59, 249, 146, 228, 73, 171, 63, 18, 96, 104, 191, 137, 186, 244, 255, 90, 16, 119, 195, 52, 177, 213, 254, 187, 174, 84, 174, 173, 12, 236, 53, 234, 3, 209, 82, 37, 78, 111, 214, 135, 76, 195, 9, 242, 134, 188, 153, 84, 139, 231, 51, 146, 177, 60, 12, 25, 158, 91, 215, 152, 7, 0, 84, 35, 36, 230, 227, 67, 198, 72, 50, 110, 37, 209, 98, 193, 65, 93, 173, 199, 4, 198, 102, 99, 148, 144, 224, 217, 114, 53, 144, 245, 251, 114, 211, 20, 82, 163, 123, 75, 16, 192, 106, 213, 128, 2, 11, 200, 203, 84, 41, 199, 224, 155, 171, 217, 64, 109, 116, 188, 151, 183, 173, 52, 205, 164, 93, 13, 251, 65, 182, 160, 154, 185, 239, 33, 184, 84, 159, 105, 101, 173, 194, 251, 123, 84, 92, 66, 61, 180, 45, 104, 162, 224, 214, 233, 64, 220, 165, 2, 104, 116, 150, 2, 234, 203, 112, 21, 124, 23, 48, 66, 30, 63, 30, 36, 246, 135, 203, 218, 115, 22, 189, 39, 39, 125, 205, 65, 222, 220, 77, 18, 84, 121, 161, 153, 125, 25, 139, 137, 170, 239, 150, 106, 119, 168, 216, 140, 113, 121, 26, 53, 118, 110, 53, 192, 244, 252, 145, 85, 2, 3, 1, 0, 1
+        ])
+    }
+};
+//# sourceMappingURL=go-key-rsa.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.js.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.js.map
new file mode 100644
index 0000000..dd4c521
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-rsa.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-key-rsa.js","sourceRoot":"","sources":["../../../test/fixtures/go-key-rsa.ts"],"names":[],"mappings":"AAAA,eAAe;IACb,OAAO,EAAE;QACP,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC;YACpB,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;SACrJ,CAAC;QACF,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC;YACnt5C,CAAC;KACH;IACD,MAAM,EAAE;QACN,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC;YACpB,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE;SAC5J,CAAC;QACF,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC;YACntZ,CAAC;KACH;IACD,MAAM,EAAE;QACN,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC;YACzroC,CAAC;QACF,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC;YACpztzC,CAAC;KACH;CACF,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.d.ts b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.d.ts
new file mode 100644
index 0000000..87a0b33
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.d.ts
@@ -0,0 +1,8 @@
+declare const _default: {
+    privateKey: Uint8Array;
+    publicKey: Uint8Array;
+    message: Uint8Array;
+    signature: Uint8Array;
+};
+export default _default;
+//# sourceMappingURL=go-key-secp256k1.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.d.ts.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.d.ts.map
new file mode 100644
index 0000000..9a21509
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-key-secp256k1.d.ts","sourceRoot":"","sources":["../../../test/fixtures/go-key-secp256k1.ts"],"names":[],"mappings":";;;;;;AAuBA,wBAKC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.js b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.js
new file mode 100644
index 0000000..3e339bb
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.js
@@ -0,0 +1,28 @@
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+// The keypair and signature below were generated in a gore repl session (https://github.com/motemen/gore)
+// using the secp256k1 fork of go-libp2p-crypto by github user @vyzo
+//
+// gore> :import github.com/vyzo/go-libp2p-crypto
+// gore> :import crypto/rand
+// gore> :import io/ioutil
+// gore> priv, pub, err := crypto.GenerateKeyPairWithReader(crypto.Secp256k1, 256, rand.Reader)
+// gore> privBytes, err := priv.Bytes()
+// gore> pubBytes, err := pub.Bytes()
+// gore> msg := []byte("hello! and welcome to some awesome crypto primitives")
+// gore> sig, err := priv.Sign(msg)
+// gore> ioutil.WriteFile("/tmp/secp-go-priv.bin", privBytes, 0644)
+// gore> ioutil.WriteFile("/tmp/secp-go-pub.bin", pubBytes, 0644)
+// gore> ioutil.WriteFile("/tmp/secp-go-sig.bin", sig, 0644)
+//
+// The generated files were then read in a node repl with e.g.:
+// > fs.readFileSync('/tmp/secp-go-pub.bin').toString('hex')
+// '08021221029c0ce5d53646ed47112560297a3e59b78b8cbd4bae37c7a0c236eeb91d0fbeaf'
+//
+// and the results copy/pasted in here
+export default {
+    privateKey: uint8ArrayFromString('08021220358f15db8c2014d570e8e3a622454e2273975a3cca443ec0c45375b13d381d18', 'base16'),
+    publicKey: uint8ArrayFromString('08021221029c0ce5d53646ed47112560297a3e59b78b8cbd4bae37c7a0c236eeb91d0fbeaf', 'base16'),
+    message: uint8ArrayFromString('hello! and welcome to some awesome crypto primitives'),
+    signature: uint8ArrayFromString('304402200e4c629e9f5d99439115e60989cd40087f6978c36078b0b50cf3d30af5c38d4102204110342c8e7f0809897c1c7a66e49e1c6b7cb0a6ed6993640ec2fe742c1899a9', 'base16')
+};
+//# sourceMappingURL=go-key-secp256k1.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.js.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.js.map
new file mode 100644
index 0000000..99e40b6
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-key-secp256k1.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-key-secp256k1.js","sourceRoot":"","sources":["../../../test/fixtures/go-key-secp256k1.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAE5E,0GAA0G;AAC1G,oEAAoE;AACpE,EAAE;AACF,iDAAiD;AACjD,4BAA4B;AAC5B,0BAA0B;AAC1B,+FAA+F;AAC/F,uCAAuC;AACvC,qCAAqC;AACrC,8EAA8E;AAC9E,mCAAmC;AACnC,mEAAmE;AACnE,iEAAiE;AACjE,4DAA4D;AAC5D,EAAE;AACF,+DAA+D;AAC/D,4DAA4D;AAC5D,+EAA+E;AAC/E,EAAE;AACF,sCAAsC;AAEtC,eAAe;IACb,UAAU,EAAE,oBAAoB,CAAC,0EAA0E,EAAE,QAAQ,CAAC;IACtH,SAAS,EAAE,oBAAoB,CAAC,4EAA4E,EAAE,QAAQ,CAAC;IACvH,OAAO,EAAE,oBAAoB,CAAC,sDAAsD,CAAC;IACrF,SAAS,EAAE,oBAAoB,CAAC,8IAA8I,EAAE,QAAQ,CAAC;CAC1L,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.d.ts b/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.d.ts
new file mode 100644
index 0000000..d353518
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.d.ts
@@ -0,0 +1,17 @@
+declare const _default: {
+    cipher: "AES-256";
+    hash: "SHA256";
+    secret: Uint8Array;
+    k1: {
+        iv: Uint8Array;
+        cipherKey: Uint8Array;
+        macKey: Uint8Array;
+    };
+    k2: {
+        iv: Uint8Array;
+        cipherKey: Uint8Array;
+        macKey: Uint8Array;
+    };
+}[];
+export default _default;
+//# sourceMappingURL=go-stretch-key.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.d.ts.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.d.ts.map
new file mode 100644
index 0000000..91d6159
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-stretch-key.d.ts","sourceRoot":"","sources":["../../../test/fixtures/go-stretch-key.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,wBA4BE"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.js b/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.js
new file mode 100644
index 0000000..3385a0a
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.js
@@ -0,0 +1,30 @@
+export default [{
+        cipher: 'AES-256',
+        hash: 'SHA256',
+        secret: Uint8Array.from([
+            195, 191, 209, 165, 209, 201, 127, 122, 136, 111, 31, 66, 111, 68, 38, 155, 216, 204, 46, 181, 200, 188, 170, 204, 104, 74, 239, 251, 173, 114, 222, 234
+        ]),
+        k1: {
+            iv: Uint8Array.from([
+                208, 132, 203, 169, 253, 52, 40, 83, 161, 91, 17, 71, 33, 136, 67, 96
+            ]),
+            cipherKey: Uint8Array.from([
+                156, 48, 241, 157, 92, 248, 153, 186, 114, 127, 195, 114, 106, 104, 215, 133, 35, 11, 131, 137, 123, 70, 74, 26, 15, 60, 189, 32, 67, 221, 115, 137
+            ]),
+            macKey: Uint8Array.from([
+                6, 179, 91, 245, 224, 56, 153, 120, 77, 140, 29, 5, 15, 213, 187, 65, 137, 230, 202, 120
+            ])
+        },
+        k2: {
+            iv: Uint8Array.from([
+                236, 17, 34, 141, 90, 106, 197, 56, 197, 184, 157, 135, 91, 88, 112, 19
+            ]),
+            cipherKey: Uint8Array.from([
+                151, 145, 195, 219, 76, 195, 102, 109, 187, 231, 100, 150, 132, 245, 251, 130, 254, 37, 178, 55, 227, 34, 114, 39, 238, 34, 2, 193, 107, 130, 32, 87
+            ]),
+            macKey: Uint8Array.from([
+                3, 229, 77, 212, 241, 217, 23, 113, 220, 126, 38, 255, 18, 117, 108, 205, 198, 89, 1, 236
+            ])
+        }
+    }];
+//# sourceMappingURL=go-stretch-key.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.js.map b/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.js.map
new file mode 100644
index 0000000..de39f97
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/go-stretch-key.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-stretch-key.js","sourceRoot":"","sources":["../../../test/fixtures/go-stretch-key.ts"],"names":[],"mappings":"AAAA,eAAe,CAAC;QACd,MAAM,EAAE,SAAsB;QAC9B,IAAI,EAAE,QAAoB;QAC1B,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC;YACtB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACzJ,CAAC;QACF,EAAE,EAAE;YACF,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC;gBAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;aACtE,CAAC;YACF,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC;gBACzB,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;aACpJ,CAAC;YACF,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC;gBACtB,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;aACzF,CAAC;SACH;QACD,EAAE,EAAE;YACF,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC;gBAClB,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE;aACxE,CAAC;YACF,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC;gBACzB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;aACrJ,CAAC;YACF,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC;gBACtB,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG;aAC1F,CAAC;SACH;KACF,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.d.ts b/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.d.ts
new file mode 100644
index 0000000..e8686d5
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.d.ts
@@ -0,0 +1,11 @@
+import type { JWKKeyPair } from '../../src/keys/interface';
+/**
+ * A 8200 bit RSA key
+ */
+export declare const RSA_KEY_8200_BITS: JWKKeyPair;
+export declare const RSA_KEY_512_BITS: JWKKeyPair;
+export declare const RSA_KEY_1024_BITS: JWKKeyPair;
+export declare const RSA_KEY_2048_BITS: JWKKeyPair;
+export declare const RSA_KEY_4096_BITS: JWKKeyPair;
+export declare const RSA_KEY_8192_BITS: JWKKeyPair;
+//# sourceMappingURL=rsa.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.d.ts.map b/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.d.ts.map
new file mode 100644
index 0000000..d42e1aa
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"rsa.d.ts","sourceRoot":"","sources":["../../../test/fixtures/rsa.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAA;AAE1D;;GAEG;AACH,eAAO,MAAM,iBAAiB,EAAE,UAiB/B,CAAA;AAED,eAAO,MAAM,gBAAgB,EAAE,UAiB9B,CAAA;AAED,eAAO,MAAM,iBAAiB,EAAE,UAiB/B,CAAA;AAED,eAAO,MAAM,iBAAiB,EAAE,UAiB/B,CAAA;AAED,eAAO,MAAM,iBAAiB,EAAE,UAiB/B,CAAA;AAED,eAAO,MAAM,iBAAiB,EAAE,UAiB/B,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.js b/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.js
new file mode 100644
index 0000000..dcb4a8c
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.js
@@ -0,0 +1,112 @@
+/**
+ * A 8200 bit RSA key
+ */
+export const RSA_KEY_8200_BITS = {
+    privateKey: {
+        kty: 'RSA',
+        n: 'AtSHgbWZ-5MHNh8LpVD4-2lOjLitwGjADZ8gEcs3EqskGl1E7Lna8oGRt6V-0yiGwicgNgWPVRW3M4aK8kXe9izb1O43I20A2QVfmZDZB7inS23hrj9PZs863x497-WMdiyBBa3SVrg0StU_vQ8iUFYi5ihQr0b58IKJhVHA6AhqpuUeCbbTakoH1btzOlfqWb6chlL2bT-1KY1EUSRN25Qrfk5T7wV59QvbkGMUuHJRreh6caTASf3cGEG6nk_2YXTiZ6Yyc5XzR0hNervbwa9WVPc19iCP9fNJ8T6oFmJsJ-T9MnEQqttDSOYGwhnzleV4FWrv0jiWhC1-LMdJ-rdHVXPUH9pKArXwWu1FZBk8EG4o3uAB5rcxgk7Z_5sV3PAXQlAISZl3IwauWcDaWIgckDUU3AmzpdrddPn8IiqVtSpcTMISi2MkKJw1iom97iQk8V0dkPvCpFB1wzOoEJfL-gcl61ePeU5xohzy0eQcwjsGAtuK6XgT_TB_u7Q6_FbS0AwySISYz6JsnV-FHsb-0FMUjj6-jF0A3vb7El43xwZUrAhx7qqn_DuvrztjChsNWyE7dKWDceTwxIHDobEG7LDivMvsq-jkRYIzYoMJabrIzTgRjGBLruxBp8Zl1CuOepD4vFO6JBzbZl5Qy0hrpuP9YAlYBg3sBhwsYcrATZWVYcNRkJDsNIo-lSFNOl8DalFm7IsxW0A6AMuysLzm4oLZe2hDrmfRI9Mh5JBgio8cKetZan-0pLpoU5ezcMdIszlaUC4ggbOa2h7wVZCanTO79VoeiZLIrCimL4hbtlegpiX6A792jaD5G-cmPhMRGqn2rZcbwIx61e1z3Lz_Wag4lc8I2UwSMFUaIFi67OWN9608JgNNv2-W2uj5NpTFNJSBGUO6gfdOt1C-dgAafhXyPyyQ9m1Uq_0JMwaOkqkkTjW5UNKBacx8Hi9S2AVX7Ln9DN2mNFtFZVCmpnS2qKwd53yhcGQWr_1QL3kshTH5-hkpnLr7ntWIf094NGClp9l5Y2BOB-NqO7JecD_3WHxzjh_3jx6yAiSc3FqX9zmNmiOyIlENc6GHDe10a6p3NNZkI3jTO6C6fQfzOFCQ544htxF7JvxahKLazpSIBRkbf7Hxgdo5s8p8kH5S8HTpl5hdCOsMveJjH0rYU801iTF7Sv5rqn_Zd9FGkT98mjhGl8O4fhEHd967-GR9KupALmG9LtfA2jKwipAcwxyhaXFg2hobCpSvHx9KLOW-3gQt93PqNoE9TAGyIlYbHBFyN3IDsH5bKDYkL4C7RlXUFogBq64SpljjXoW3gYmH2guEaXMwMLf7Mogaoi0Or4ubitxd8EvFuhH2W1TekVc',
+        e: 'AQAB',
+        d: 'o85TLBy5PR-XQ-OdJ7ZzGPbyZ9qYstYg_kYA3-H-rYTHFSk9IDP5OgQY8ii_Ut1Mzg3BSPaD9RnrY1LMvbFQFQpKlOUQdFeJuWZI0O_QiBYCvsAUZinsg5O62BqGv25HVX6CKy9v_cuM07PKab6HTUIsqRa82h4uG0U-SCKGE0kRnKFy7svTrxMgZnYBzdilG6xFzkH6pzmtQEwe0EduCozezJS7aJCPL3Qfq9cGcIo4-GOeh_IViHiXX1zy5_87P3LknjWv3koXZqhlxE1F9_9bzFx93hTONYgVK-ZS0UPErUf1fIyZJGOM-ryya62fyTaiGQBJlhOppKNvOktmjMNq9XoTDYZIIJxL4nMa03259T32Tc0APZDK9krhOE30GrAXhQKqqTC_UYZfsnNrKrLSg73IlcTxDY-eH9q6WshoIkCl9ga9Ttfg-pg8TzIKwk875qKFofX6slo9nNM1lSw_xhfzomNEuNCGJ2davuklnLSaNsqsSEK0rp9ib7gaTwLwmKFRtfDamM1Xsz3knHcF4JK4KkVodKp6vno7R-PycmL4Vhx0Kk86fsAUrSeSJFWbseLAV59lQ66Prwrs5po7Ly7EIpLKtyfM80fs0NVy-xDlHPUSuL7DuJSLexaQppxa56Xk5kUiXwfXmCFKJIB6RfeGG_azv7gKFZqPLYgUBJf0yL-nSUa3SoqsS31SbHnFSGLs9Xb0IwX_450Z906Vrva-KNK6N5t4u_Q6S5ZcSrlho7zxcwrpGUWUuqcnuuAVv21qFbO7PshrWhvC_wkXdSrgisRwTxPwCR1OVZ5mTYdWBt5c2mZDVsxmdqLCMoupDOH75eI_FbxuHY82IiSWeWlKTC9Nn0EfXxiin5TuBKMXdJkGLujD66TAkoORG6-E4yx-yQYBD_EuA2niSTmCOFn1H8GHItO0hkY8hd7WOM6PUM7bcJFIALMsCm--ya_-x-uwTU381mY9iliYFKw41GHmTEdA-04igfpjgsI9U5fzLxMYi7ku2fI_NmRtWznY6QU51GxZ9gWnKEVgneowI9fWxi-nAZ0Fl6CMSPSJhurKPAPXgIEYKA-V5ORbzTS5YKMMs5t05lVqSLdO00XBFjuyyeSqAP0X0b3Iy7o5v9S8TTOdKE9KnWR3zda7rwlT-pV_XVHegzclMcpNoRZu68mYIK5r40_mQJfygQBoRpqUyb2lvac3K4o4gVGH82i1YPscDZZvd9iqFAq3YpxutsJSuj3TsRGrYatq0xdgHA1mF1RE1_JN2x4FD2_5QAXLLoGwlLiz6-uhqBT6e3aDNChD8aIFDP88WD7KMjUbzheqt1w2Ym4TMnszfkPru4I45ObIOiN7AoDIwFjOuQ',
+        p: 'Aa5Enbkyn0LpdzDYDmoxJx3bIrhaZ-lINx0eJTqSsjCLtdoV53Ya1dZOPFNY0z1yF1ckL81M7CiTLzetlzqERK-y13yWe194yti8IFtmyA53eAAx4xB70fpL0dIfXvLHar5456UdeaaQkUYm2xAxaQ5SYYwHMOJoMt-SaLq-WSD6d8ej6dtcBjKfX6vnlZGeeVBQUfSuYYO5gMFTlBqvgltkvWJ-FJjfQtHXDM7mooC3RO6hjiGvbpkzAQVj5fR6tZNoeN-Cb7IW0BWQ01UWdJeutl-4Mxn-1byFBgP1Na801yVNpLR-bE145BwfrZVAUVMqPaskcthClhIHCr3NrDGyp06xfONPUyxTmntQvTD9S6fyOzqoxBLz-vB91eDjeZPvt0ULPtZQx9thfLUzxt_fI_uiqVEeh8NEfco442OVij1ciJvREap5mSFzbj_GzLWsZOxUdB65T-1PzXizcMvUIThzLlxJhgpfEEIUC7hOPKjBDTMImrQbFoXJXCiuxy-PGj79ORvbSH5klM3T90KMSoWg_sUozP_fUcUCFAnQEOWHT3-CROzjhox8T5CLzpYUW2BTKCAFm9CMmRTZsDl8y7PhiXmTB3imQRN9Sc7pTTVsj_kYKgaOHOc7Rzuwb3KVDsHAkSBvPPatZJkvLktt-wTxYFXpz772L6EzuGdd',
+        q: 'Aa8UOGhm4KQPVD8gQ29WMjUEoDy3otlOI-fQvI6haOX73SI-8gkuG2U70DVWD08yUQMpCGEpJ5dykhrtXC5xruGqIySkO6RousTB2uad6TIpUpn_GCbbaf_Hb2T_dXJd7cX06cTIf78vXC_o1fWuODAGG-k6uit0mrvC8l69MEQ2CL5Dr29sH6DyNXyhw8NnG45sRIcjiwXyHlrmSJUlrd_HcHXU0JK_2gMyaXB_rFnazDShJ2Td7bRRPUmlVvWQgZ-X8Rw6jL0Zfy4Vsp7yaYnLbi1GKjb-13r1GpAm1ECAVH13jDW8rpM608v2tN-fgYG3eh9SUX5cjNQ6tyqGje_abXl3og4t7wzvLCXwhb5L5nMDrk2XQrzZWuhQBlcYoaLlaks7w6DK9eq_T4JNywtB7PuRMYMOHaQ_p54xzz0PH2ZhRTCCitVoxLmt1S5Ib47DSDjmy4-9ghyluH0M5CfPo5IHY0SOBBG-JF0IpH_LIU5JEChVoKUXLBGoTH2pc5Wy4riFfgcVXmn1JPikAuw0IwQjgrOMvBj4BaN9H3z152pOSyxQeI9LBnWWXrDDtSve7ws4SKiuVmpGvp6S-zWDMw_9hIKoD5WQ5Z85LrJZhZJub9jfyaaz6YiGfh8p8tNSiBfqEN_lbKOLQzE9d7lsozqNMmsCXqmTlOlqZVRD',
+        dp: 'AaFreAifj9p-XN_J-9IR9X0Fh12Kd5zeLnnVMRDuGGj4YWg-L9tolWPfaq8BUY4fDX3A4Y8uvT1v7TL6-egPQgOiYWPBKdepfEFf4ZRK1nMSfBzUSRFIzqEgxWIwhRDLXkeDTFfnjImHXyjLsWK4TM9UJMaQg2Bi7lfv1iK1YAqac3H_F3V0hZ6-9zXy6ivnrpG4GopiUsBUSxFDYD-zXagEx6ax4pGcp1qkYwymu6hcJEfN-_G6HHYMAUWVcRYJpfZoODu-c1Y2w5Doe93kdyBgoxWhwhHKJNlLxFY6oeZkQQUzmkJxE-jlC4gtQ120lDE2nbVXGwOrNaQvqMAStKdSRvYVQq_T2UD7qrdP0PuiAK_iVIvIBtDMWfrOWZxfkyduPEKDcmbA3-N5ZF726E1wUZxiZhkIoXVTESYKoq-N-BsnlnB0F8tnRKQrNB4zY44svYx5Ml5MMbps3U3n59oW5lO5ipSFz8BoEYHJqMUZQcgF4iRMiKmKTgNlIj9lsF_3WOMbDzhzOJVGRwaYSR0KtZGGayQjPR5PLSkPpxkN_hZvezSc0PlwkqvgPeBhgf4fqbZ9dkP6rPtaK3kK5-gdphHREGodtfXadO_PcLeHpxvZQqPKSZsqa-f4nlbOCJEFAtf9Vc49nMtD1IC4QRV0kT5uXaN7vcvpUrP1VUUR',
+        dq: 'rdjbvs7ufXtpIGQkjfwXF2acMKBmXniy5kQ6JtNVeJqQXcVA2w7rIXJzz267kdba8QlVRcnRG7Sq040yBdD3FC8HKTnKi81otPzxCNxaNU6Q72X_GXyXTP3jILodZVgYEiNpO2EYk8PHy9J8py3xnvx3uSFj_y5xUJOYJzjpBDk-YWzujWLvhnrnszGRv3YPmOp04IMnB-jS8Rm539xoOL03z21aCDSy-WMVPrdejIY-oGL1fio6OOQicVbqsPHsNK6UICxEoeZscetyM8PTaCzQbBXF5JP11rKOWeAu7SxT5p2Vv_4t8VZiH_mIjD7JfcS-zW7nSqyMZvKe99l32GkgiUID6u__Xhn-lfZgGZSGhY_QdZ4w3fRSQyoyxGE8nnMi4OBjTq9LabZpnEU_Q3T82598djv1HE5HjPbNevRkV2eW_a9HyjUMUU2XkajIxKxgrgH1yixFEsSKmHPgd2W3s6ajE_yqC3XBOHvJy3fiIK46g-m0dZ_Yt-5FmtABuzd_U6cSYkzt3JFurY-HVjbYgEzJ4xs4qGEt9Pb7AewxvZ-BlYeGd1NscXOJEIR8xgqMINw8ATr9wrJxIYZpJPWaXDKDhCW-0zSyRfpLqMWNprY_CRmHO2GHJvYGWw8RzMOV-v78ey8NFw-Ms4j0haUYVv6mfJ1iC8Vm4pNz9f0',
+        qi: 'VWzU4gk0YHzmtUbU9IKfjGDgWaCY5H_hhUQ3oz9rK-WU1IOrrnpH8ltjLSlcvimpL_Nw2G3JxyY8A1IrsFrTgj6_wqexMEyia_j-62AxNtspt4-lHXbLGxvxv4KswKD88mvFdBloomxEcb5j32v_YX_gQfl6znJBR27dbeU8dyRmbH-WOyM8p9lunZRIbQ7UnSAIWlswN60XvNiqFjVrjAWB5rvAu_F0pAv_raWE46OqHFNBWncOsp2GGoNZa_hOsx_4ORaz3YO2qAqMCwkXpux-YJmAG3sXtzVnr7-dV3R7T5Rz-IkUJJMPwXnlW568j9-lH3xnNEQ8uwmaYFChMYTPUAoa2tF-YHwtvKaRUMuoCUwiqKdgNybtLsBewjbFygrJsiMiYjmmIMzwPGqJfVtXkosolHErGWoGCv19vASbNBwB31zE0GBBMculZ6vOYqq7YKN46MIcCvujxlAUdXyg4-3VoqgHBXYSPj0M2y1LeQ2YXtGWaX5i6g8coKdPcWg5gUu38H_J2RKJiyWYwei9nz3fLB_xsl7cS1a2Wfm30HMa_-wWgwb1XfzLRYQKVACu6yBU7-lx1tq0I2D6s8ufurJRjEj6Uu7NPxP3lmeS2FIxkfXDQkXiqpq2FZu4Bj6cV9BDnXVvBBBeNcqBrvnpFeX25IGGKMEyYn6s9UI'
+    },
+    publicKey: {
+        kty: 'RSA',
+        n: 'AtSHgbWZ-5MHNh8LpVD4-2lOjLitwGjADZ8gEcs3EqskGl1E7Lna8oGRt6V-0yiGwicgNgWPVRW3M4aK8kXe9izb1O43I20A2QVfmZDZB7inS23hrj9PZs863x497-WMdiyBBa3SVrg0StU_vQ8iUFYi5ihQr0b58IKJhVHA6AhqpuUeCbbTakoH1btzOlfqWb6chlL2bT-1KY1EUSRN25Qrfk5T7wV59QvbkGMUuHJRreh6caTASf3cGEG6nk_2YXTiZ6Yyc5XzR0hNervbwa9WVPc19iCP9fNJ8T6oFmJsJ-T9MnEQqttDSOYGwhnzleV4FWrv0jiWhC1-LMdJ-rdHVXPUH9pKArXwWu1FZBk8EG4o3uAB5rcxgk7Z_5sV3PAXQlAISZl3IwauWcDaWIgckDUU3AmzpdrddPn8IiqVtSpcTMISi2MkKJw1iom97iQk8V0dkPvCpFB1wzOoEJfL-gcl61ePeU5xohzy0eQcwjsGAtuK6XgT_TB_u7Q6_FbS0AwySISYz6JsnV-FHsb-0FMUjj6-jF0A3vb7El43xwZUrAhx7qqn_DuvrztjChsNWyE7dKWDceTwxIHDobEG7LDivMvsq-jkRYIzYoMJabrIzTgRjGBLruxBp8Zl1CuOepD4vFO6JBzbZl5Qy0hrpuP9YAlYBg3sBhwsYcrATZWVYcNRkJDsNIo-lSFNOl8DalFm7IsxW0A6AMuysLzm4oLZe2hDrmfRI9Mh5JBgio8cKetZan-0pLpoU5ezcMdIszlaUC4ggbOa2h7wVZCanTO79VoeiZLIrCimL4hbtlegpiX6A792jaD5G-cmPhMRGqn2rZcbwIx61e1z3Lz_Wag4lc8I2UwSMFUaIFi67OWN9608JgNNv2-W2uj5NpTFNJSBGUO6gfdOt1C-dgAafhXyPyyQ9m1Uq_0JMwaOkqkkTjW5UNKBacx8Hi9S2AVX7Ln9DN2mNFtFZVCmpnS2qKwd53yhcGQWr_1QL3kshTH5-hkpnLr7ntWIf094NGClp9l5Y2BOB-NqO7JecD_3WHxzjh_3jx6yAiSc3FqX9zmNmiOyIlENc6GHDe10a6p3NNZkI3jTO6C6fQfzOFCQ544htxF7JvxahKLazpSIBRkbf7Hxgdo5s8p8kH5S8HTpl5hdCOsMveJjH0rYU801iTF7Sv5rqn_Zd9FGkT98mjhGl8O4fhEHd967-GR9KupALmG9LtfA2jKwipAcwxyhaXFg2hobCpSvHx9KLOW-3gQt93PqNoE9TAGyIlYbHBFyN3IDsH5bKDYkL4C7RlXUFogBq64SpljjXoW3gYmH2guEaXMwMLf7Mogaoi0Or4ubitxd8EvFuhH2W1TekVc',
+        e: 'AQAB'
+    }
+};
+export const RSA_KEY_512_BITS = {
+    privateKey: {
+        kty: 'RSA',
+        n: 'wfN6Z4hRb0gh_FbSK3-C_L3UW6jPef7np08i9ta12cvuBAK_ZTUtO_-7OqY2BRPq5qkRvu-fqLeUPQKNhUO4jQ',
+        e: 'AQAB',
+        d: 'Ky8LEgJIH37wEj9CjGzXvW6G2eG8UG1xJs93-X3U_6kFGskKOphVjH84ey56vYqPMvgnGHsTvj0Ab0bTBxFgAQ',
+        p: '4LiCZn45NM_xxMs0Ap6PgUEhX3lUaPVxIAK8cueBUDk',
+        q: '3PKNK-0dXxL9CH-azHPl35WuiY8crvU6IFz0GT_tgvU',
+        dp: 'f1iwNQrkukP5G2-YGr_mTPYuxl8Ica5dnClQx8DfrCk',
+        dq: 'rixqyzjlkYA3hg6JqiinCsVFTN1LYESiqMZ-CrWRd00',
+        qi: 'HNMToc4-GzmNns1TsqRRVTMbyxMY2cEqc025dXstRoQ'
+    },
+    publicKey: {
+        kty: 'RSA',
+        n: 'wfN6Z4hRb0gh_FbSK3-C_L3UW6jPef7np08i9ta12cvuBAK_ZTUtO_-7OqY2BRPq5qkRvu-fqLeUPQKNhUO4jQ',
+        e: 'AQAB'
+    }
+};
+export const RSA_KEY_1024_BITS = {
+    privateKey: {
+        kty: 'RSA',
+        n: '0YGLmnazokxI01jOWEwFyu3Ma8WHuimIjXeictgkh1qIRHaHVutMJL-GZPvKVY6u9neU2SYGIVMdBjgO3uZQ3UxRBki1ndYYoF8X9-uLAQDIOqAEzZLgoXjn-iCKXJ3ylwLLwJYkVQEz2dLhFUioqLtjW2YOKYmbRjVv_OnTS0s',
+        e: 'AQAB',
+        d: 'LXeu43vlalCh8XQxfAorq6nGFpGM7kL7RrBzCfeMne9w6WLL5no0UTlbomjetYi8wfKb1DCjXfIat3HNEGTtoWRfKm0F-K22kx2YAe-BEIGjanXhBaCgxEJjicV2gYvn_kdJGhnske7MvrjtRElzV-VnvKGrkQi8mbmJ3foEVUE',
+        p: '_4_8cCIZh98-MZ4zhkeVhE5x48hUHrsBnf0fibk6JhGGD2bstcVumuh3g6GKOALfxLJXJW5nj_5uI-hCpUmt4Q',
+        q: '0d1fX7lEIHK2pNxkamSgu5BMkqG-6w8zHsuazPP2atH2Mv7bM5qkLK93lx5UyPtvo5i8OyYW9gBeyeIp0-Tmqw',
+        dp: 'T2PkcNU3By2DvZg-u10rhoF0AeXus-k2NGU40ej3tnHFKq23pTQjCv5iekLJlGLYLtuUFO26QFIy1vbFFWHRIQ',
+        dq: 'WZN4sv378zGjfcjIX5Ul-gkEdg3t1Jz_P-S95T84ba3CvU-EtokKDDy0-d6rZ8HSi-yUY1bFtCjCTL9pBRWN0w',
+        qi: 'f9xDNFDBo_vIqRvIQcID4JNgbRFSxnvskf-2g3yYcjyeTFFZuImkbgwYR-LMNJwecEtXoISCp1apySz9OGnGzw'
+    },
+    publicKey: {
+        kty: 'RSA',
+        n: '0YGLmnazokxI01jOWEwFyu3Ma8WHuimIjXeictgkh1qIRHaHVutMJL-GZPvKVY6u9neU2SYGIVMdBjgO3uZQ3UxRBki1ndYYoF8X9-uLAQDIOqAEzZLgoXjn-iCKXJ3ylwLLwJYkVQEz2dLhFUioqLtjW2YOKYmbRjVv_OnTS0s',
+        e: 'AQAB'
+    }
+};
+export const RSA_KEY_2048_BITS = {
+    privateKey: {
+        kty: 'RSA',
+        n: '0Hlf9YEKnUIkD1qnokkmYAni4u2rLPjIfLQxuyerQj5ctD16RZi4DhcwyGYJKza9Zl0g2t9BWXA6W1ZLmnOckSGONw_bRibRi4dMU-2EZX2qMVSub1H6lQZ9FPxuMfXWqq5Uj1vhFX627M3s3Dg-zBGSnDgHHfsIIbDiTQHQoLGvZFbvC-SAwP8aodovYCNJ2brjEd3_VADf69LcNR-LRCSVmyX4A5uMX2hKF_PfREs-BCNpli9zCAltbM0IaQBWgyDEhHS0DQHjql_56JS9khdUtz2pHQgNp1qIaQhppZgrJ4hgGyqYPZ3Ds-FNMW3PQA0K0Y23ZHIrnAzWyrrj3Q',
+        e: 'AQAB',
+        d: 'PiB1rtmSWrQLwAGhpFTNWWCI21y9nuzS_orKqT4UpOylvtb1Wck9zIEvugDiaZzqC5fkQyW2OVufIHoSlMgwV_XahmE01O6bksuyvO4y_vXYotPcGfOhzAh_fSIPCtd67il-rKxSYw_8noxtsmEWocT43pI52L7nOPcYMZ_BVymiPXqcGrNZMmtBlMBQonpR5lKAP6KdshahCr_mYFM8jvsmjHwlqUMPgOMYI9Ws8WRSklEdNf_RA8l7r1AUPrELVcVGnzbT3zGgV91zXkp1CBvZGOAYlkE4qGIJuT2Eh04uoDgYE5G749JsFFpU_JewlpORMKMq8Cx8wWFhTOCYNw',
+        p: '_za6UROLPiek-H8_mwYjLs0nqfQyFjeFe74nrwBLSffigHtzlSprd2S-YhjbIIWfW1MI_NQIycx4laHVyEwkfrRmTJ8xPFAckLSVi3kkgVUYKk7itP2mRcWFq3_MYOeJ__7-UX3AjCWqx-_BMOuCx7lHT_TzZnKTC7cQeBvR2_8',
+        q: '0R3JRHJtigNKBiMTupvuyRJZr5g69rbhQz8zcv0juoWJOxGfhbCafJ9Y_EgVMHQIXg2aEudS-LJfwUUZldcRzpu867-FRGvCVtBbm_fipfHJS_5CThiHdcSAHRo2_0z1lgN-ePmn2BMsggZTuWBhVlA4_t5NVxgqraZDgMQ2MCM',
+        dp: 'CZpjlF1p5eLUAE25dPncJQyvK2P25oMcULWtBJa8PoJHUZJTnQ9Fj-6Ig2RwCl88ydDsC6dm1UEOYIMAalMDJIlhOAzda2mQSZmh7ueWCg_Lovvo5-qLcSCnkPZ0GEleFfXgV-ylbCCWtoM8_7w85YsBNe7_oaE6CzzOL9bMJL0',
+        dq: 'xZnH3g3ixE9nW3U551QBx663YN4QmaEmK01FaJsbb91PV6nHe6Tt1mUcyQe0Phzm6zkfJk3AcZDcOtz42EZqZTl0w7AuVgEdmrs4VaFfYj-fX1fbf8BeAEK2bMmgvo4SYrbag6YlnGBB5nvkEX-pes5DjVKy8mG7smsxzjOaoNE',
+        qi: '1k8qFUA5mKYIJRw_W4ffd2rNmq8woI9R09IZ2B3ABROb_MzacjOC7SKEAhaWdOHGLKVjf7ergLz_6LXvXrWs1kTMNu8Hg7pvtWmG9Er8frkdmJRCs1wK6Si_IQt8iGY-R1Pk4NrEqMDYxhR9BbHMKwqUSdLVq-h9HvzHQY6yr7g'
+    },
+    publicKey: {
+        kty: 'RSA',
+        n: '0Hlf9YEKnUIkD1qnokkmYAni4u2rLPjIfLQxuyerQj5ctD16RZi4DhcwyGYJKza9Zl0g2t9BWXA6W1ZLmnOckSGONw_bRibRi4dMU-2EZX2qMVSub1H6lQZ9FPxuMfXWqq5Uj1vhFX627M3s3Dg-zBGSnDgHHfsIIbDiTQHQoLGvZFbvC-SAwP8aodovYCNJ2brjEd3_VADf69LcNR-LRCSVmyX4A5uMX2hKF_PfREs-BCNpli9zCAltbM0IaQBWgyDEhHS0DQHjql_56JS9khdUtz2pHQgNp1qIaQhppZgrJ4hgGyqYPZ3Ds-FNMW3PQA0K0Y23ZHIrnAzWyrrj3Q',
+        e: 'AQAB'
+    }
+};
+export const RSA_KEY_4096_BITS = {
+    privateKey: {
+        kty: 'RSA',
+        n: 'oWdeeCO4ZvfiNNsGVix09IFq9bakwb4v-Y-ph4507Bg90VXkJwlHEg7tT9G76Q4-jqJAX4hMzIq4O2V_mme5l6LCo_8ATJqVL2C8oHXNCeWLWZ3wjXMOpDLOnq_N0k_ttPdxw2UlbtObKuM69E8hBVYdQXj6qgSBGbSkqHvCtI4NHV59c9xhhtV3bmrFUr8D8yAm33ywD5OnlhAnbOc7pMusfZ8E-dIwF4-TVE7dn5Zih6K4-qnx0lATvHxafdbD5zlfb_Z_7o4DelrgzAlrAm9m-ZNc_GaoGfhyly0RZdGuDyJtF04d6-mICmjP8GmVuQUkXLg9z7bHBO_grttmx1PjaQnBfHbWR2XEoa8RtTSLAC-dtBBGDFft7j6P-3RBIeCIa2VYJ9b-R_4SJfnGdgz0hAnxL8s_joGwC3pKXwghur2CKTAAznoN3Pwop56BDXLNwtD1x6NNfR2nvSI1KT3i_-Iox0PxDS58n_oVUcJE_QkLB-pwpc1gOHH6rzrVZsN2oww6Xblaf4CJz0wx0VDkVO95eURAJ61k5sP71b3oqnBoJV9R4LruCdzsvGuRMosrFuEhCrnNOsLVoLID_APkb9eJ9eTNrGzsgPUDEKSMuGuFP8iJpZv-tOxl4xEEfuGHIBakGuB7PMSA3TN428bEOjGu99joqf--T1AIlH8',
+        e: 'AQAB',
+        d: 'AylRf2GWZhCVkgV25_nc8evAWum7QRQ8P6jMYEcDtprO8ypkhU3i4iaqsp_gDLORDsgnd0zl0YfSDfpx97tFC674yFo2o57PgesPfBvH6q61U7Rf7CqvGbuTsntXuQvZvcFZrW3Dau_4H8HtpgVlbIOq9QetQ-aXWhfgtcV0IzHjwzSA7o5dgVTtuZrxHIAjUAAhjXUVbxNW-qh8V99mRVcRR4X1hKh_n_vZneghjSkBQGOJOK0FezdtpjPQA0ZRS1Z4rmpnR8E-WNzY1FucM02tTawmQRyy-YyVP1ghpBs-9ortFMIcnJdUE9LJEo4ZjFMzysvNDM7UB8kPCehq6JVILz-3nZMv3plRSkptUaXdNx7NblAk4bKg57qMnMhS2pt0ZbSKQMO6rHZfxkRk-yAAawjtbXe2fXioVRK6qpLdNVgb_YlloEFG0y_Im5ACNpMjCYQHatd-pcqxi8ktSAmwQx2tbGUu0PQyTOAzzgdV-fuC8YpGYuJjQp8c4M-TVF-Bh5f4hYWpjLzQEfe2u9JINXIhaQvMfeijgR4rBMw99DhXJtBbVhQpswRXrVagsEX-YQtOnrRikj685D3SJfjSwnXRAYsK-kqsM9j_Q_Yz0vw8YYKp_2gSpi3tTjGdqX_fS_GTRgYMZnvDaGEmY-JA3p4BVWC7ODh5aZ_Y_SE',
+        p: '06p25dhbwcFZ6Z682IVTn14Nn2XTDUwO0rw-gGJ9KRWc9azjYO7yUKFexgUsuTV3HBEVXaq1mqzIXZspqVUBtVdPhaYpYNO-52Fp-FQXmeCF3081bo56yB13trB-YZuzCrw6RZw1m5v2epFhf3eeEarZ8SFm0mrUAKoVhmLTSfQR8DL7oqZc_5V6-gfjAkQPzcDHPUpY6QvOVs54JMYTWJbY5kz7Z3yGhVWvw4F_XuA5_TgsPefexv8ADjwK2bnqIFGpSGoTPDxz_Qu1tQTOASxkzFgEjNyCptRpVn87OfxMKNUROEwnygdLi6h77-OL4LeQuHu8o5PkNHuRzRarcQ',
+        q: 'wzXZOzRSEnVtahaut2HjTs30wObjSkRGm-AMhQGvkLXNtr1As2KALmTZlmZSoQpYJ9KKQhZFDBYYJKcM8nKtp2RWFPWHvg8mQsDU4Su12mSVqnCHUmVl726EotwpAN5a0U4ZLyeTuvhTubfX8Fe5C995jFPIEmMNzmk4t3FRcmoVTofWtc2sIZdV0e4OojPIFxvlgoyfjNJJ0r_UMktv-s7Epp3kVSLX4gMkteYEauH7zwgucIChnEPVRH5mkjZNH_y_qeNR_xT54tmTxNtNUGPhATj7Vymh6cljmf4H-vU6uZmysQeo5wmKaspkNe9hc_V8040Y5MaW7D1WBcfm7w',
+        dp: 'uBgC4VWUOKiaMv7E8OzFFk8POhutvFryaYcgNTlz8k_B_EsqWBx61HYFn-TQSSWfOuIA2z6mRKkSe5eAXK56leYiW_Nw-a4w071-FWXOQR9uUBLsPgPd9j7q6BIJWYu55RRg-joqxfSYI3JegibfbC5U78xFSa1wRkOoBQHfEusczvUItyZKrGCuXNiPMGFR_Xo1z7DiM475H7bj99fu65YHgAZkglVkCoPEIx52UWZkCUDZ-d25fQo8WiUOqt9wKjvcKAdaQ4Gwv913ZMGRCqQ55yCGlJ0VZVRJadmvAXfWJY1rNLPHx4cgxY78fGBEQGZnkIzOPNdcG-l9ngqhgQ',
+        dq: 'M_fW7_r6ym02hqKpOqq1n9oWiXAuHCxW-9JGovYS7hxoOnjhi5_ybedtQavV3YdqdpeHNRbGpPQQ01khij3bWw_MFuJSk9dmoSjCw3sme5CBg5FXhSj3XSl35_9ibxfC56u56qLHomPPrkZyF0rTOYTxz9jSD4sNNuEuNy_Utffl2jUxhM7PP1YRg8SzYp0UbIqBrCKRqySkgJWPASCyG_wFwDGSgtO20zVxBXfJv0aQCcqsykiEPZyVXxmjZtNL7vMTdz_MKXNFHw47V5HmYDtmwDOSPd8Yequhd3J4X2f_jT-MobJfVbplfg6JZQ5oTD2TUKJkeSshLJ0blIhmQw',
+        qi: 'kEzxfmevRpsEdMCIaKJ2W0yyXowCunWsCpagspTw04M0O3KIFi7LL0x_HNIVgEkuo2fp8DfKB4JsRpWkWJC-y7YPtzUXSTTXAbd-SLOOl8wHXo4AuGhzqQ6eMj7P7aD-bfqfxb8yPQbZO5Cbss7U1w5q_9uSh-TMLzQeRED8FMZeYhk3KVz_6ROwZb_bBLzq7XokuEeWhwS5MZL0gxLHVKJuM4_mcg-4e8xu9ExFsIshMvwkKR5iKVWf_puogzQX7rXRX_4uChg608hVQR01dO6ZHoVvzAq3vuva9iZTBowDWtEpKMBb2Z8eXBIVi_f-z6CAhgF_9y1u6SYGC2oCXQ'
+    },
+    publicKey: {
+        kty: 'RSA',
+        n: 'oWdeeCO4ZvfiNNsGVix09IFq9bakwb4v-Y-ph4507Bg90VXkJwlHEg7tT9G76Q4-jqJAX4hMzIq4O2V_mme5l6LCo_8ATJqVL2C8oHXNCeWLWZ3wjXMOpDLOnq_N0k_ttPdxw2UlbtObKuM69E8hBVYdQXj6qgSBGbSkqHvCtI4NHV59c9xhhtV3bmrFUr8D8yAm33ywD5OnlhAnbOc7pMusfZ8E-dIwF4-TVE7dn5Zih6K4-qnx0lATvHxafdbD5zlfb_Z_7o4DelrgzAlrAm9m-ZNc_GaoGfhyly0RZdGuDyJtF04d6-mICmjP8GmVuQUkXLg9z7bHBO_grttmx1PjaQnBfHbWR2XEoa8RtTSLAC-dtBBGDFft7j6P-3RBIeCIa2VYJ9b-R_4SJfnGdgz0hAnxL8s_joGwC3pKXwghur2CKTAAznoN3Pwop56BDXLNwtD1x6NNfR2nvSI1KT3i_-Iox0PxDS58n_oVUcJE_QkLB-pwpc1gOHH6rzrVZsN2oww6Xblaf4CJz0wx0VDkVO95eURAJ61k5sP71b3oqnBoJV9R4LruCdzsvGuRMosrFuEhCrnNOsLVoLID_APkb9eJ9eTNrGzsgPUDEKSMuGuFP8iJpZv-tOxl4xEEfuGHIBakGuB7PMSA3TN428bEOjGu99joqf--T1AIlH8',
+        e: 'AQAB'
+    }
+};
+export const RSA_KEY_8192_BITS = {
+    privateKey: {
+        kty: 'RSA',
+        n: 'xKTFIO94CQT-z9DHhBO3fLg2kNs7LQwEOT6H83j0fmlwA4mfPZguOBV9m9IJp7ePOnrH5KA9NWi3c2dDa8Ky9bDY72svkTmjHQDTe6hkv7CrR_M_r1QGCHXd_YeBrQ_cVp-BkCz3xOfKsDNY-D9AgvD_KOKMFCNF3vwmZ7zCjMHNb4ZLYEbQ4HBe80vB1iAN7gzNK5u8ctx0a0L5OarQgPx2lR_EKBDvcaR8JnzyP6amNxv17HixI9cyOHoZDW17mNmm1KCaLVrDfpLgqGETLVMmRYMsw1uu2coMlEK2TuMqVIybveWMzG_PZ0ttY9C7_N5t9iDmKFAxrSqMb4S9elwPrYmEilRIRQG7m8TNxbSs2g8iLRxhtrNpbNymFjK4S5djdc4hH_8SVMhA7qZ6gKexJ0DDu9p1YbQjx3-551-hZzLprCTBJE40fzNr6U2ewqwDUMv-B6M1uJ6IHmVmNWKAeyRKkF6y3FAUiaRUN20djaC8IuIDQdwS58IM8JTAeAvjmr3eXm-g2MnQHIoYIQRLl9gO62b8XHiEYIMRW7dghtPXvR-m-mtki7AgtwFQrN96sfu-Xv3Y-aSbTMVClB4CxK8PbQmEke96aOI7QkowYfJVEcKvZ9LzupuLKLHWMTqdvojzYDGzRr76U1oniInmIvWBwhdWgsdiux31ZpULTuwc6rGoT3xuRe-Q9xqQMpW4uEj3yusFDkc9VdBlss-Wcoe5q2YcBbzZq6RNG0fiSMpw6JgBZ9ceni2jK5dcvNBu9fuJtCmZziGp2AK5LYTOGxfsXP5M90-eeW3rp7O5FK0FzoOxhej1Gjkh5bbh8o179Y05CTEuodTe-9ZaNJ0siUntLDWoNWUzfsEqE-tw05cztY6vG0VDq41S-n8VIHZbxte3W_Yoe27WjL8IDfuQCb_0gSFq0XzdxF823Jd05PEQ5RnkTvN41DTq2br4epUp75VZU4xFZbfaTC3kOaS8OSxc75EtX5LOJw-TCWVHwrTcFtbW4FAKM8OUDNuAFi3R_lg5JebQ4zGId33d8EKzxOydLo3hEgnhEG6vScVo4GWpMV_vzSdS77mfi21Zz6Xcm2pYFCIWhIlLXRIPQ8gL398wlM0paBTHeHVoPyYVxCFvn2XN1Gkd-w7v-kjL9OaFs6iXAOB_6EXtrCtYOsCdxdb2x6Mwr2-PcEoYmw9DGdLnYq0QWJaLT8jvqFhyO_wtqnNqsTk8KMOps7cCB8L8yAkE68kwd4n0xrgR70xWk9_MAft_Fa5pVTcQEZvXRV-4v4PjYuSsrtJxdeSVqogV3LLfRyO9JyoNlJ1EDgFc7TY8aN3cpt-t_jeDNitNNAKIiSsCHoR7jOnpm8EtTQ',
+        e: 'AQAB',
+        d: 'Nq8fhr4xYki6V65WnXsiLpPH0Na2iRtrXUPvaJy9WR4XIVS3LNjSGZSYXqm1N6fLM9cLGaAaBW0-fuA7lo8JV1u7qDDlhHxDyP_-z8ePZONLbnHNxwMVvmqQtj1lqWvcuVYYILDwohhXfFJ7LmXgmclNG-CMVdlNR-pU_8o1TBFlANuWwIpQ8ekt7nilydcWKJn0wGjJqiN2WJHCXvAKlaQfke7IjN_QxoiYYdejQmIknPSwmfciQ7ZHZ_9EUkCc-2-jfkO_PFeeP-e2g_yi6ZrS7MfCvf0UDcqrXtuCeUOg9Ow5L0DTu9JoGfCW1ggpDvQIHkcd2h4bAm3vqd9_FbTeQ0MX0aQIiPAnbPT4yD8rRmSo-2SGI9mWushNg6TNLXBHH26YNZ6oSV16-SLgtEBt-l1_URE6TVZcENGLMDWe2-UDqHR8JY19-dWh77o_KSHOtjxUQ2l2ugWUEufd2YCv_A6mkalUEgJPA8voA5XbfxQw3X5-q2T4-Ow0zv5-26NqwxCD8z0VvNO6hQU-GohoQSy7UWlNSqXVIkWwoRHIzRXCS_yuYbtVtabgIiRCfCCVrUM1uJLdMOc-rMW6cxg5atrH7mmULUUshFhNZGzfMY3DbHH4d2Xpk35H36Q8zWngjijljV2k3kqjsGRE1CqNDjG5yPDWhP3PjfuRz9msBfW1Jv8zKpEPpPHVs66Bg58ug5JHAVsaYOMdkhQxKBfh96XnKiHhCsTjK8wWQWddz6UXy11PpjRdfemL1E3NaX44GmQRpmQm3Wt3Mgf_VzZL1xc46vSFXVLFiTv4AnJvnO-AbMOLVkikKVQnkV8RGBglyOpZLV_kp7TLbjV6Lms-yUMWAQTR4YFbCNtzndUIPAXCz3bUa8-lmTmdVQnRWyd2ipCYayNYAI6xUAuZ_xG13uPsW3G8zSRhU0iNfSkzGqBGg_RhkC5kmsf_m7NablPJYCLKW8LOnxsssDhRgzNbfMspMK3MSFlvutAgcfqelaDszts0s5VHVwvjmIrkIwcu4-V1EEa3VPIGqbA12xDaqVClXnycqvD9PIzRsA3tVJGboW-UQP441QipPSw3x1N1HOcMjTx5LH7l6p4jVQWwHwgansQv7sXwSR0nifs6Y8Ltox5Mrx9pKc-3R8J0srxz9XH_89aWSAfw1SCsNRLa6klsleZUZW2pUB0LXc_KhrFSVoSB-kX4BxdGnOR0c5xLiE-S7IcTFEszo1E160uAkZKTNB5LD4myLDgxsdE-qhhYT8sFSUqGppI2YD-A1yG9ViTNPJorKxWG8RFNCClFIgNFbyOSa4WCqojo7gdKLTSq1WXuI-Io5uDUZpwS8DZVPVPLkl1t2Vgn-jNwXQ',
+        p: '4WqB768glDXj2VTXhh5Rkg6mNrdxtm7ecYhxBWfpalEE6p6GqICdmiMKRf_V97YBnsnJ7H-UVYELCut8Ip6t2NDZmsjMunJaCZ-pAkyqSAKXO_kr2sGIEvKOySiT9XTqkRXQlXo46JPT7CWcPs5dW2CdxiA-zYnNl59nKqvN69jBDtzVei1aq-P5YczUNsF8cX1XmU1dCqGRy_u6Rh0yDwiLLAKc7yhxyRwK4CXLbvipODf-Q4w_5kS5fccuaKbheqNXgKE5pH-ZJzjeJxOkK600uWggHTd1gV1bXgmUoiQM9s8I-oeSV1YyqdgSY8FbQOVdGZNZkMdI8KFHv8vUZmoIzxcN2RQp7ty_7HihKOgDF7JOe950_2VOfy3zexu2vDUM_E6euig_4aqNMtEybEOJVQZYai-9kvTm-IRgzpeaercHL-5u7c_4HE-On23ciEnc5vYBepsvAhpWxGcxvBo3rvZ9iSDhcRF2PC2cvNS6WBUVVZGjm-KsxamXFEfbdZGgCMKnAwWUPd_Vtffi-RTGrrvbYGnHQXmlCeTKFtFBak7ZAdDq_Za1QaMMVZH35vfz7QGNFLAGvrM0F3Mln7TDEtgWYPeHbr0L-hh89QvOAQQudscEq4yNRxbpmr4DLC8ug5KKiwqpM-AOgzm1VxVH98PIHFrxyyFB4tL-eV8',
+        q: '31LlNaoxbsKhTUL-PmBuPBH5ZQ5_QlHkUoPdArfIrhfn4yoZDBweMH1-Fdwb15ne0jlNz0lS2in3zvMqunBRga8lvHijlCgJugvpdFLDTb02_evFfyBdbgkT5JzO_OSNxCWWCC8KdsZ0H92yxe_iP8XSPfyFzfRTiL5k84zwwcwdVOJE9Cq9VaZtmHAcOY0cgCTRgght0eSqTak7ychXV7DVPGh5nOYxlGZrB6CEESwxlk3uiebY1WA7l_SfuJFly64XPKDS9DBjOjPggChRWDShaNGQ0MHvbga8Fvbb7WA13tY_ABT-eK47GYgBnqt12t33vrIuIJFvkNoIuNCbC0MAQJ-QQgNin-0rOiaS4mm8eVxxSJ0PGlhbznjAXbtNO5nYW0KXjTPvL0Lu5YfooRyl5ksyTOZNeL7fNcM-Do1KBgR5ThOnVfI8rhhDnAjxgMssALe4aTqLyT0B7YYdXMj0OC6ROU85XSeMWwzmCusZ-tV7yqhzmjJ4x7NPVc_EB2zsGivKNNcssOaVcKpcl4HMnyHnoAdkf_7bw2GTErupkJqonqXPcn9y7NgYQucyzTJx7S_VhE8K4PbBxHUVA1g4dfqATGsep0M40dEeGx1BOFLX_lSI2J2Mk7KfFy-njD_LkuHcbzy4M2R3pKYU0joS4mo1hz3rUgfBr2i7XNM',
+        dp: 'Pfyx-p1oEhm3rH4ePm179PQ-VPGhPY_Db-kbW2c10tyww2wQj6m-rTJRkupFhrbwPyAyfOygd9rilIApRMPp_qOAE4aAdg0YIWlcapt2gBLmT8G3g5KQvtUg2sRj263pCzi6gUB5AcwVDO1SyBqrpYMuH9uiKZdph_Z3wk44dFDI1jN4KP7r3jT00SYofV47wGG9gxS5L0E6_KMemEVTDLtGujWFvmaa07j4bKc4CC4tKp6LNzwMHmBrueDaLEEn5DeiymaLmWbVUOncfVZzYOdihlHR8vbbQ1XO2E8-JlBPmFdamrpJTecQS5B1jiUP2Qq5zVyt1phWwIU5W87Le9ZQ0dH_JuDanyrpRDfv6XXT0-JensWP2uOa8HJMcGAwohTcm01rbLnAx2fFKGJKwWbZDx6NlbXHJfBey5xrmqQqAPDv8whYTOFR00c1azYk3P2i14hy46plBOkFT0EpdhanlV-HKfx2wkcRAn9wiKTfEXXKxhskqKtu43Q9bYBNI0mGfqI4lyYjm9g_xqiCLAjAkjBqpVqxRpoS_mOCB0BIAtnn5w3ycQXOllwl-ioHx-YLl_NDPpshX7Ob8Y7im8Zzlm0BymyHO7aU4pN1WVWDstfZhyQ3bo1aFGCCoOD7slzPJ7NWkeG-odtNYlyuN2JMxh96mgGQWFGu8pcfD3U',
+        dq: 'XAFS3SEY7IDS43nONPSVdboR_UhTtYb3gedBjnUZAGBo8HXPi-WpqmCJKYhdEB4cZo-lNtkGgUr5BRG5cMYFTmBSM6uf-NHl7_goXfwa6lQh68rOuukilMq4n17bB-VBYqX5gbWfof9wqBA2LsX9eDiPvWnj1k3qfFO0U4KlTbJCA06VCeLxze-bB0po1m0EaObCScgfNnH2l7g5IZCgK0h3EUQZlkJf-ruXLLU8s7Z5V2sT80xf2MikxJ3Lj8aXIaq_eALp5iBpQPlObH4vxR8pwH1WJCtB8RplMzDQuqMAjqXFnssHa8CcKJCX2j7Zdyorfyz5RAGm7Q5muX134tPfrsAONqQeZbTYMkTiDtVxCK7FHR1Xs4rjh9THq9YWo49mS3LL7SiQSfBRa87qUDX1Q0OHnZbkI_K_Eu81Cdm7vW7qavg94HLD_RWSBR7KID2UC1elafTs0iOIP8sZHbjMpLjKq8mv4GkCsiBGRglF0slRDtUHi2dvyxZcgQXvxP9i5gVUcSCVEOxudNQ7AVBAdO8K9isVhIYDFCOG7BjUavbMsU-uf4VyW5FLrYSCsXcu6IDkfnXyDWybt8xks9QMrs5dPR6EqnRPXGHC_Xi3_fRjeCxrlJKT7-WPFYZUiLtfq0vR_SIO4V1qzTJ_MX0reow3MViZMlpvuUx0pHE',
+        qi: 'dJHbqXfGrmZD5gVbWdwXAUHZxpQjkBjRxGr1NKhN_wxTdFDGsqwl2ATOzbfWc2NmsXJBBsYgoVBXFpBPvZkVHHPWjmup-CzuI39Gj7mb9dcujaC23zE-QYPVk7IV5sNhJ0oeVveKwvYnTGklAtJfdj4pbH0vB3loyaQ-ZX3U9tgpTMf3ZICTpadNOc_Gxwa7TwWbiRn3DqcpQBj3EQx3pm6Ox0wUNDWucOsN5Oeb0lEAB6eSP5FUeqsnTPTBucrZuzebG_SmhVWUZZFfeIzJT88JNzdmiLGpKWu10HFY7T6sxGWkcCUUm5Wcz66Nz9zrj70vh9fBSTjsm-9vScePBGoCm-sD8pkaDr3cXkmxaidn7mzU0JEDjku0avaGGMUyBaGPoW3Wfk69MffI6ccl6I_ItuhV6U4wFF95gQASGzCXCOa97PYrpTZ7AhW3hofqeO3CAyJ44COLYWEOafWO42wNPDrZWCSl7FczWThX5KuejjyE7gg_SK_aelUKo75vDmhtJ_qV8cEt6lXL4pFnLstOh2-wmEE5poR902L3T3tBMAI4SRfc77dGFTCl3CGjuRpheYHD4v-drLCsyk7lnDiWDE8iK-5Q0ImtNkZE2vu8VTBtUyXDoNbCN_yXu9oOT_y-K-mIVCtY_VpSfKJvYdRRdYgoVM1O0FspVtL4CfY'
+    },
+    publicKey: {
+        kty: 'RSA',
+        n: 'xKTFIO94CQT-z9DHhBO3fLg2kNs7LQwEOT6H83j0fmlwA4mfPZguOBV9m9IJp7ePOnrH5KA9NWi3c2dDa8Ky9bDY72svkTmjHQDTe6hkv7CrR_M_r1QGCHXd_YeBrQ_cVp-BkCz3xOfKsDNY-D9AgvD_KOKMFCNF3vwmZ7zCjMHNb4ZLYEbQ4HBe80vB1iAN7gzNK5u8ctx0a0L5OarQgPx2lR_EKBDvcaR8JnzyP6amNxv17HixI9cyOHoZDW17mNmm1KCaLVrDfpLgqGETLVMmRYMsw1uu2coMlEK2TuMqVIybveWMzG_PZ0ttY9C7_N5t9iDmKFAxrSqMb4S9elwPrYmEilRIRQG7m8TNxbSs2g8iLRxhtrNpbNymFjK4S5djdc4hH_8SVMhA7qZ6gKexJ0DDu9p1YbQjx3-551-hZzLprCTBJE40fzNr6U2ewqwDUMv-B6M1uJ6IHmVmNWKAeyRKkF6y3FAUiaRUN20djaC8IuIDQdwS58IM8JTAeAvjmr3eXm-g2MnQHIoYIQRLl9gO62b8XHiEYIMRW7dghtPXvR-m-mtki7AgtwFQrN96sfu-Xv3Y-aSbTMVClB4CxK8PbQmEke96aOI7QkowYfJVEcKvZ9LzupuLKLHWMTqdvojzYDGzRr76U1oniInmIvWBwhdWgsdiux31ZpULTuwc6rGoT3xuRe-Q9xqQMpW4uEj3yusFDkc9VdBlss-Wcoe5q2YcBbzZq6RNG0fiSMpw6JgBZ9ceni2jK5dcvNBu9fuJtCmZziGp2AK5LYTOGxfsXP5M90-eeW3rp7O5FK0FzoOxhej1Gjkh5bbh8o179Y05CTEuodTe-9ZaNJ0siUntLDWoNWUzfsEqE-tw05cztY6vG0VDq41S-n8VIHZbxte3W_Yoe27WjL8IDfuQCb_0gSFq0XzdxF823Jd05PEQ5RnkTvN41DTq2br4epUp75VZU4xFZbfaTC3kOaS8OSxc75EtX5LOJw-TCWVHwrTcFtbW4FAKM8OUDNuAFi3R_lg5JebQ4zGId33d8EKzxOydLo3hEgnhEG6vScVo4GWpMV_vzSdS77mfi21Zz6Xcm2pYFCIWhIlLXRIPQ8gL398wlM0paBTHeHVoPyYVxCFvn2XN1Gkd-w7v-kjL9OaFs6iXAOB_6EXtrCtYOsCdxdb2x6Mwr2-PcEoYmw9DGdLnYq0QWJaLT8jvqFhyO_wtqnNqsTk8KMOps7cCB8L8yAkE68kwd4n0xrgR70xWk9_MAft_Fa5pVTcQEZvXRV-4v4PjYuSsrtJxdeSVqogV3LLfRyO9JyoNlJ1EDgFc7TY8aN3cpt-t_jeDNitNNAKIiSsCHoR7jOnpm8EtTQ',
+        e: 'AQAB'
+    }
+};
+//# sourceMappingURL=rsa.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.js.map b/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.js.map
new file mode 100644
index 0000000..2859cd3
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/rsa.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"rsa.js","sourceRoot":"","sources":["../../../test/fixtures/rsa.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.d.ts b/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.d.ts
new file mode 100644
index 0000000..053de42
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.d.ts
@@ -0,0 +1,6 @@
+declare const _default: {
+    pbmPrivateKey: Uint8Array;
+    pbmPublicKey: Uint8Array;
+};
+export default _default;
+//# sourceMappingURL=secp256k1.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.d.ts.map b/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.d.ts.map
new file mode 100644
index 0000000..3773930
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"secp256k1.d.ts","sourceRoot":"","sources":["../../../test/fixtures/secp256k1.ts"],"names":[],"mappings":";;;;AAEA,wBAKC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.js b/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.js
new file mode 100644
index 0000000..0a7ddd9
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.js
@@ -0,0 +1,8 @@
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+export default {
+    // protobuf marshaled key pair generated with libp2p-crypto-secp256k1
+    // and marshaled with libp2p-crypto.marshalPublicKey / marshalPrivateKey
+    pbmPrivateKey: uint8ArrayFromString('08021220e0600103010000000100000000000000be1dc82c2e000000e8d6030301000000', 'base16'),
+    pbmPublicKey: uint8ArrayFromString('0802122103a9a7272a726fa083abf31ba44037f8347fbc5e5d3113d62a7c6bc26752fd8ee1', 'base16')
+};
+//# sourceMappingURL=secp256k1.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.js.map b/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.js.map
new file mode 100644
index 0000000..758c03c
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/fixtures/secp256k1.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"secp256k1.js","sourceRoot":"","sources":["../../../test/fixtures/secp256k1.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAE5E,eAAe;IACb,qEAAqE;IACrE,wEAAwE;IACxE,aAAa,EAAE,oBAAoB,CAAC,0EAA0E,EAAE,QAAQ,CAAC;IACzH,YAAY,EAAE,oBAAoB,CAAC,4EAA4E,EAAE,QAAQ,CAAC;CAC3H,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.d.ts b/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.d.ts
new file mode 100644
index 0000000..54cd747
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.d.ts
@@ -0,0 +1,2 @@
+export declare function testGarbage(fncName: string, fnc: (...args: Uint8Array[]) => any | Promise<any>, num?: number, skipBuffersAndStrings?: boolean): void;
+//# sourceMappingURL=test-garbage-error-handling.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.d.ts.map b/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.d.ts.map
new file mode 100644
index 0000000..d4e869d
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"test-garbage-error-handling.d.ts","sourceRoot":"","sources":["../../../test/helpers/test-garbage-error-handling.ts"],"names":[],"mappings":"AAMA,wBAAgB,WAAW,CAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,UAAU,EAAE,KAAK,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,MAAM,EAAE,qBAAqB,CAAC,EAAE,OAAO,GAAG,IAAI,CAqBrJ"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.js b/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.js
new file mode 100644
index 0000000..9e020b5
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.js
@@ -0,0 +1,27 @@
+/* eslint-env mocha */
+import util from 'util';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+const garbage = [uint8ArrayFromString('00010203040506070809', 'base16'), {}, null, false, undefined, true, 1, 0, uint8ArrayFromString(''), 'aGVsbG93b3JsZA==', 'helloworld', ''];
+export function testGarbage(fncName, fnc, num, skipBuffersAndStrings) {
+    const count = num ?? 1;
+    garbage.forEach((garbage) => {
+        if (skipBuffersAndStrings === true && (garbage instanceof Uint8Array || (typeof garbage) === 'string')) {
+            // skip this garbage because it's a Uint8Array or a String and we were told do do that
+            return;
+        }
+        const args = [];
+        for (let i = 0; i < count; i++) {
+            args.push(garbage);
+        }
+        it(fncName + '(' + args.map(garbage => util.inspect(garbage)).join(', ') + ')', async () => {
+            try {
+                await fnc.apply(null, args);
+            }
+            catch (err) {
+                return; // expected
+            }
+            throw new Error('Expected error to be thrown');
+        });
+    });
+}
+//# sourceMappingURL=test-garbage-error-handling.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.js.map b/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.js.map
new file mode 100644
index 0000000..15d4f5c
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/helpers/test-garbage-error-handling.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"test-garbage-error-handling.js","sourceRoot":"","sources":["../../../test/helpers/test-garbage-error-handling.ts"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAE5E,MAAM,OAAO,GAAG,CAAC,oBAAoB,CAAC,sBAAsB,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,oBAAoB,CAAC,EAAE,CAAC,EAAE,kBAAkB,EAAE,YAAY,EAAE,EAAE,CAAC,CAAA;AAEhL,MAAM,UAAU,WAAW,CAAE,OAAe,EAAE,GAAkD,EAAE,GAAY,EAAE,qBAA+B;IAC7I,MAAM,KAAK,GAAG,GAAG,IAAI,CAAC,CAAA;IAEtB,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC1B,IAAI,qBAAqB,KAAK,IAAI,IAAI,CAAC,OAAO,YAAY,UAAU,IAAI,CAAC,OAAO,OAAO,CAAC,KAAK,QAAQ,CAAC,EAAE,CAAC;YACvG,sFAAsF;YACtF,OAAM;QACR,CAAC;QACD,MAAM,IAAI,GAAU,EAAE,CAAA;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QACpB,CAAC;QACD,EAAE,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,KAAK,IAAI,EAAE;YACzF,IAAI,CAAC;gBACH,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;YAC7B,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACb,OAAM,CAAC,WAAW;YACpB,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAA;QAChD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.d.ts
new file mode 100644
index 0000000..fa1cc54
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=hmac.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.d.ts.map
new file mode 100644
index 0000000..f9fdd06
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"hmac.spec.d.ts","sourceRoot":"","sources":["../../../test/hmac/hmac.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.js b/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.js
new file mode 100644
index 0000000..1998642
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.js
@@ -0,0 +1,16 @@
+/* eslint max-nested-callbacks: ["error", 8] */
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import * as crypto from '../../src/index.js';
+const hashes = ['SHA1', 'SHA256', 'SHA512'];
+describe('HMAC', () => {
+    hashes.forEach((hash) => {
+        it(`${hash} - sign and verify`, async () => {
+            const hmac = await crypto.hmac.create(hash, uint8ArrayFromString('secret'));
+            const sig = await hmac.digest(uint8ArrayFromString('hello world'));
+            expect(sig).to.have.length(hmac.length);
+        });
+    });
+});
+//# sourceMappingURL=hmac.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.js.map b/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.js.map
new file mode 100644
index 0000000..c31ce40
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/hmac/hmac.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"hmac.spec.js","sourceRoot":"","sources":["../../../test/hmac/hmac.spec.ts"],"names":[],"mappings":"AAAA,+CAA+C;AAC/C,sBAAsB;AACtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAC5E,OAAO,KAAK,MAAM,MAAM,oBAAoB,CAAA;AAE5C,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAiC,CAAA;AAE3E,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;IACpB,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QACtB,EAAE,CAAC,GAAG,IAAI,oBAAoB,EAAE,KAAK,IAAI,EAAE;YACzC,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAA;YAC3E,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAA;YAClE,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACzC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.d.ts
new file mode 100644
index 0000000..c7a9a8f
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=ed25519.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.d.ts.map
new file mode 100644
index 0000000..6fec319
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ed25519.spec.d.ts","sourceRoot":"","sources":["../../../test/keys/ed25519.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.js b/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.js
new file mode 100644
index 0000000..f0eab25
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.js
@@ -0,0 +1,167 @@
+/* eslint-env mocha */
+import { isPrivateKey, isPublicKey } from '@libp2p/interface';
+import { expect } from 'aegir/chai';
+import { Uint8ArrayList } from 'uint8arraylist';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { randomBytes } from '../../src/index.js';
+import { unmarshalEd25519PrivateKey, unmarshalEd25519PublicKey } from '../../src/keys/ed25519/utils.js';
+import { generateKeyPair, generateKeyPairFromSeed, privateKeyFromProtobuf, privateKeyFromRaw, publicKeyFromProtobuf, publicKeyFromRaw } from '../../src/keys/index.js';
+import fixtures from '../fixtures/go-key-ed25519.js';
+import { testGarbage } from '../helpers/test-garbage-error-handling.js';
+describe('ed25519', function () {
+    this.timeout(20 * 1000);
+    let key;
+    before(async () => {
+        key = await generateKeyPair('Ed25519');
+        if (key.type !== 'Ed25519') {
+            throw new Error('Key was incorrect type');
+        }
+    });
+    it('generates a valid key', async () => {
+        expect(key).to.have.property('type', 'Ed25519');
+        expect(key.equals(key)).to.be.true();
+        expect(key.raw).to.have.length(64);
+        expect(key.publicKey.raw).to.have.length(32);
+    });
+    it('generates a valid key from seed', async () => {
+        const seed = randomBytes(32);
+        const seededKey = await generateKeyPairFromSeed('Ed25519', seed);
+        expect(seededKey).to.have.property('type', 'Ed25519');
+        expect(key.raw).to.have.length(64);
+        expect(key.publicKey.raw).to.have.length(32);
+    });
+    it('generates the same key from the same seed', async () => {
+        const seed = randomBytes(32);
+        const seededKey1 = await generateKeyPairFromSeed('Ed25519', seed);
+        const seededKey2 = await generateKeyPairFromSeed('Ed25519', seed);
+        expect(seededKey1.equals(seededKey2)).to.be.true();
+        expect(seededKey1.publicKey.equals(seededKey2.publicKey)).to.be.true();
+    });
+    it('generates different keys for different seeds', async () => {
+        const seed1 = randomBytes(32);
+        const seededKey1 = await generateKeyPairFromSeed('Ed25519', seed1);
+        const seed2 = randomBytes(32);
+        const seededKey2 = await generateKeyPairFromSeed('Ed25519', seed2);
+        expect(seededKey1.equals(seededKey2)).to.be.false();
+        expect(seededKey1.publicKey.equals(seededKey2.publicKey)).to.be.false();
+    });
+    it('signs', async () => {
+        const text = randomBytes(512);
+        const sig = await key.sign(text);
+        const res = key.publicKey.verify(text, sig);
+        expect(res).to.be.be.true();
+    });
+    it('signs a list', async () => {
+        const text = new Uint8ArrayList(randomBytes(512), randomBytes(512));
+        const sig = await key.sign(text);
+        expect(key.sign(text.subarray()))
+            .to.deep.equal(sig, 'list did not have same signature as a single buffer');
+        expect(key.publicKey.verify(text, sig))
+            .to.be.true('did not verify message as list');
+        expect(key.publicKey.verify(text.subarray(), sig))
+            .to.be.true('did not verify message as single buffer');
+    });
+    it('encoding', () => {
+        const keyMarshal = key.raw;
+        const key2 = unmarshalEd25519PrivateKey(keyMarshal);
+        const keyMarshal2 = key2.raw;
+        expect(keyMarshal).to.equalBytes(keyMarshal2);
+        const pk = key.publicKey;
+        const pkMarshal = pk.raw;
+        const pk2 = unmarshalEd25519PublicKey(pkMarshal);
+        const pkMarshal2 = pk2.raw;
+        expect(pkMarshal).to.equalBytes(pkMarshal2);
+    });
+    it('publicKey toString', async () => {
+        const key = privateKeyFromProtobuf(fixtures.verify.privateKey);
+        expect(key.publicKey.toString()).to.eql('12D3KooWLqLxEfJ9nDdEe8Kh8PFvNPQRYDQBwyL7CMM7HhVd5LsX');
+    });
+    describe('key equals', () => {
+        it('equals itself', () => {
+            expect(key.equals(key)).to.be.true();
+            expect(key.publicKey.equals(key.publicKey)).to.be.true();
+        });
+        it('not equals other key', async () => {
+            const key2 = await generateKeyPair('Ed25519');
+            expect(key.equals(key2)).to.be.false();
+            expect(key2.equals(key)).to.be.false();
+            expect(key.publicKey.equals(key2.publicKey)).to.be.false();
+            expect(key2.publicKey.equals(key.publicKey)).to.be.false();
+        });
+    });
+    it('sign and verify', async () => {
+        const data = uint8ArrayFromString('hello world');
+        const sig = await key.sign(data);
+        const valid = key.publicKey.verify(data, sig);
+        expect(valid).to.be.true();
+    });
+    it('sign and verify from seed', async () => {
+        const seed = new Uint8Array(32).fill(1);
+        const seededKey = await generateKeyPairFromSeed('Ed25519', seed);
+        const data = uint8ArrayFromString('hello world');
+        const sig = await seededKey.sign(data);
+        const valid = await seededKey.publicKey.verify(data, sig);
+        expect(valid).to.be.true();
+    });
+    it('fails to verify for different data', async () => {
+        const data = uint8ArrayFromString('hello world');
+        const sig = await key.sign(data);
+        const valid = key.publicKey.verify(uint8ArrayFromString('hello'), sig);
+        expect(valid).to.be.be.false();
+    });
+    it('throws error instead of crashing', () => {
+        const key = publicKeyFromProtobuf(fixtures.verify.publicKey);
+        testGarbage('key.verify', key.verify.bind(key), 2);
+        testGarbage('unmarshalPrivateKey', privateKeyFromProtobuf);
+    });
+    it('imports private key from raw', async () => {
+        const key = await generateKeyPair('Ed25519');
+        const imported = privateKeyFromRaw(key.raw);
+        expect(key.equals(imported)).to.be.true();
+    });
+    it('imports public key from raw', async () => {
+        const key = await generateKeyPair('Ed25519');
+        const imported = publicKeyFromRaw(key.publicKey.raw);
+        expect(key.publicKey.equals(imported)).to.be.true();
+    });
+    it('is PrivateKey', async () => {
+        const key = await generateKeyPair('Ed25519');
+        expect(isPrivateKey(key)).to.be.true();
+        expect(isPublicKey(key)).to.be.false();
+    });
+    it('is PublicKey', async () => {
+        const key = await generateKeyPair('Ed25519');
+        expect(isPrivateKey(key.publicKey)).to.be.false();
+        expect(isPublicKey(key.publicKey)).to.be.true();
+    });
+    describe('go interop', () => {
+        // @ts-check
+        it('verifies with data from go', async () => {
+            const key = publicKeyFromProtobuf(fixtures.verify.publicKey);
+            const ok = await key.verify(fixtures.verify.data, fixtures.verify.signature);
+            expect(ok).to.be.true();
+        });
+        it('does not include the redundant public key when marshalling privatekey', async () => {
+            const key = privateKeyFromProtobuf(fixtures.redundantPubKey.privateKey);
+            const bytes = key.raw;
+            expect(bytes.length).to.equal(64);
+            expect(bytes.subarray(32)).to.eql(key.publicKey.raw);
+        });
+        it('verifies with data from go with redundant public key', async () => {
+            const key = publicKeyFromProtobuf(fixtures.redundantPubKey.publicKey);
+            const ok = await key.verify(fixtures.redundantPubKey.data, fixtures.redundantPubKey.signature);
+            expect(ok).to.be.true();
+        });
+        it('generates the same signature as go', async () => {
+            const key = privateKeyFromProtobuf(fixtures.verify.privateKey);
+            const sig = await key.sign(fixtures.verify.data);
+            expect(sig).to.eql(fixtures.verify.signature);
+        });
+        it('generates the same signature as go with redundant public key', async () => {
+            const key = privateKeyFromProtobuf(fixtures.redundantPubKey.privateKey);
+            const sig = await key.sign(fixtures.redundantPubKey.data);
+            expect(sig).to.eql(fixtures.redundantPubKey.signature);
+        });
+    });
+});
+//# sourceMappingURL=ed25519.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.js.map b/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.js.map
new file mode 100644
index 0000000..0883308
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/ed25519.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ed25519.spec.js","sourceRoot":"","sources":["../../../test/keys/ed25519.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.d.ts
new file mode 100644
index 0000000..2da92e6
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=ephemeral-keys.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.d.ts.map
new file mode 100644
index 0000000..ed9988f
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ephemeral-keys.spec.d.ts","sourceRoot":"","sources":["../../../test/keys/ephemeral-keys.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.js b/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.js
new file mode 100644
index 0000000..a941168
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.js
@@ -0,0 +1,57 @@
+/* eslint max-nested-callbacks: ["error", 8] */
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { generateEphemeralKeyPair } from '../../src/keys/index.js';
+import fixtures from '../fixtures/go-elliptic-key.js';
+const curves = ['P-256', 'P-384', 'P-521'];
+const lengths = {
+    'P-256': 65,
+    'P-384': 97,
+    'P-521': 133
+};
+const secretLengths = {
+    'P-256': 32,
+    'P-384': 48,
+    'P-521': 66
+};
+describe('generateEphemeralKeyPair', () => {
+    curves.forEach((curve) => {
+        it(`generate and shared key ${curve}`, async () => {
+            const keys = await Promise.all([
+                generateEphemeralKeyPair(curve),
+                generateEphemeralKeyPair(curve)
+            ]);
+            expect(keys[0].key).to.have.length(lengths[curve]);
+            expect(keys[1].key).to.have.length(lengths[curve]);
+            const shared = await keys[0].genSharedKey(keys[1].key);
+            expect(shared).to.have.length(secretLengths[curve]);
+        });
+    });
+    describe('go interop', () => {
+        curves.forEach((curve) => {
+            it(`generates a shared secret ${curve}`, async () => {
+                const keys = await Promise.all([
+                    generateEphemeralKeyPair(curve),
+                    generateEphemeralKeyPair(curve)
+                ]);
+                const alice = keys[0];
+                const bob = keys[1];
+                alice.key = fixtures[curve].alice.public;
+                bob.key = fixtures[curve].bob.public;
+                const secrets = await Promise.all([
+                    alice.genSharedKey(bob.key, fixtures[curve].alice),
+                    bob.genSharedKey(alice.key, fixtures[curve].bob)
+                ]);
+                expect(secrets[0]).to.eql(secrets[1]);
+                expect(secrets[0]).to.eql(fixtures[curve].shared);
+                expect(secrets[0]).to.have.length(secretLengths[curve]);
+            });
+        });
+    });
+    it('handles bad curve name', async () => {
+        // @ts-expect-error argument is not a Curve
+        await expect(generateEphemeralKeyPair('bad name')).to.eventually.be.rejected
+            .with.property('name', 'InvalidParametersError');
+    });
+});
+//# sourceMappingURL=ephemeral-keys.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.js.map b/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.js.map
new file mode 100644
index 0000000..2d3130a
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/ephemeral-keys.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ephemeral-keys.spec.js","sourceRoot":"","sources":["../../../test/keys/ephemeral-keys.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.d.ts
new file mode 100644
index 0000000..b2aa6c5
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=key-stretcher.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.d.ts.map
new file mode 100644
index 0000000..0aae199
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"key-stretcher.spec.d.ts","sourceRoot":"","sources":["../../../test/keys/key-stretcher.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.js b/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.js
new file mode 100644
index 0000000..1c1b164
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.js
@@ -0,0 +1,53 @@
+/* eslint max-nested-callbacks: ["error", 8] */
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { keyStretcher, generateEphemeralKeyPair } from '../../src/keys/index.js';
+import fixtures from '../fixtures/go-stretch-key.js';
+describe('keyStretcher', () => {
+    describe('generate', () => {
+        const ciphers = ['AES-128', 'AES-256', 'Blowfish'];
+        const hashes = ['SHA1', 'SHA256', 'SHA512'];
+        let res;
+        let secret;
+        before(async () => {
+            res = await generateEphemeralKeyPair('P-256');
+            secret = await res.genSharedKey(res.key);
+        });
+        ciphers.forEach((cipher) => {
+            hashes.forEach((hash) => {
+                it(`${cipher} - ${hash}`, async () => {
+                    const keys = await keyStretcher(cipher, hash, secret);
+                    expect(keys.k1).to.exist();
+                    expect(keys.k2).to.exist();
+                });
+            });
+        });
+        it('handles invalid cipher type', () => {
+            // @ts-expect-error cipher name is invalid
+            return expect(keyStretcher('invalid-cipher', 'SHA256', 'secret')).to.eventually.be.rejected
+                .with.property('name', 'InvalidParametersError');
+        });
+        it('handles missing hash type', () => {
+            // @ts-expect-error secret name is invalid
+            return expect(keyStretcher('AES-128', undefined, 'secret')).to.eventually.be.rejected
+                .with.property('name', 'InvalidParametersError');
+        });
+    });
+    describe('go interop', () => {
+        fixtures.forEach((test) => {
+            it(`${test.cipher} - ${test.hash}`, async () => {
+                const cipher = test.cipher;
+                const hash = test.hash;
+                const secret = test.secret;
+                const keys = await keyStretcher(cipher, hash, secret);
+                expect(keys.k1.iv).to.be.eql(test.k1.iv);
+                expect(keys.k1.cipherKey).to.be.eql(test.k1.cipherKey);
+                expect(keys.k1.macKey).to.be.eql(test.k1.macKey);
+                expect(keys.k2.iv).to.be.eql(test.k2.iv);
+                expect(keys.k2.cipherKey).to.be.eql(test.k2.cipherKey);
+                expect(keys.k2.macKey).to.be.eql(test.k2.macKey);
+            });
+        });
+    });
+});
+//# sourceMappingURL=key-stretcher.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.js.map b/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.js.map
new file mode 100644
index 0000000..60176e9
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/key-stretcher.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"key-stretcher.spec.js","sourceRoot":"","sources":["../../../test/keys/key-stretcher.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.d.ts
new file mode 100644
index 0000000..0461776
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=rsa.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.d.ts.map
new file mode 100644
index 0000000..a7d6cb4
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"rsa.spec.d.ts","sourceRoot":"","sources":["../../../test/keys/rsa.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.js b/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.js
new file mode 100644
index 0000000..19a0ab6
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.js
@@ -0,0 +1,230 @@
+/* eslint max-nested-callbacks: ["error", 8] */
+/* eslint-env mocha */
+import { isPrivateKey, isPublicKey } from '@libp2p/interface';
+import { sha256 } from '@noble/hashes/sha256';
+import { expect } from 'aegir/chai';
+import * as asn1js from 'asn1js';
+import { create } from 'multiformats/hashes/digest';
+import { Uint8ArrayList } from 'uint8arraylist';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { randomBytes } from '../../src/index.js';
+import { generateKeyPair, privateKeyFromProtobuf, privateKeyFromRaw, privateKeyToProtobuf, publicKeyFromProtobuf, publicKeyFromRaw, publicKeyToProtobuf } from '../../src/keys/index.js';
+import * as pb from '../../src/keys/keys.js';
+import { RSAPrivateKey as RSAPrivateKeyClass, RSAPublicKey as RSAPublicKeyClass } from '../../src/keys/rsa/rsa.js';
+import { MAX_RSA_KEY_SIZE, jwkToPkcs1, jwkToPkix, jwkToRSAPrivateKey, pkcs1ToJwk, pkcs1ToRSAPrivateKey, pkixToJwk, pkixToRSAPublicKey } from '../../src/keys/rsa/utils.js';
+import fixtures from '../fixtures/go-key-rsa.js';
+import { RSA_KEY_1024_BITS, RSA_KEY_2048_BITS, RSA_KEY_512_BITS, RSA_KEY_8192_BITS, RSA_KEY_8200_BITS } from '../fixtures/rsa.js';
+import { testGarbage } from '../helpers/test-garbage-error-handling.js';
+const SHA2_256_CODE = 0x12;
+describe('RSA', function () {
+    this.timeout(20 * 1000);
+    let key;
+    before(async () => {
+        key = await generateKeyPair('RSA', 512);
+    });
+    it('generates a valid key', async () => {
+        expect(key).to.have.property('type', 'RSA');
+        expect(key.equals(key)).to.be.true();
+        expect(key.publicKey.toCID().multihash.digest).to.have.length(32);
+    });
+    it('does not generate a big key', async () => {
+        await expect(generateKeyPair('RSA', MAX_RSA_KEY_SIZE + 1)).to.eventually.be.rejected();
+    });
+    it('does not unmarshal a big key', async function () {
+        const k = RSA_KEY_8200_BITS;
+        const hash = sha256(pb.PublicKey.encode({
+            Type: pb.KeyType.RSA,
+            Data: uint8ArrayFromString(k.publicKey.n ?? '', 'base64url')
+        }));
+        const digest = create(SHA2_256_CODE, hash);
+        const pubK = new RSAPublicKeyClass(k.publicKey, digest);
+        const sk = new RSAPrivateKeyClass(k.privateKey, pubK);
+        const m = privateKeyToProtobuf(sk);
+        const pubM = publicKeyToProtobuf(pubK);
+        expect(() => privateKeyFromProtobuf(m)).to.throw(/too large/);
+        expect(() => publicKeyFromProtobuf(pubM)).to.throw(/too large/);
+        expect(() => jwkToRSAPrivateKey(k.privateKey)).to.throw(/too large/);
+    });
+    it('signs', async () => {
+        const text = uint8ArrayFromString('hello world');
+        const sig = await key.sign(text);
+        const res = await key.publicKey.verify(text, sig);
+        expect(res).to.be.eql(true);
+    });
+    it('signs a list', async () => {
+        const text = new Uint8ArrayList(randomBytes(512), randomBytes(512));
+        const sig = await key.sign(text);
+        await expect(key.sign(text.subarray()))
+            .to.eventually.deep.equal(sig, 'list did not have same signature as a single buffer');
+        await expect(key.publicKey.verify(text, sig))
+            .to.eventually.be.true('did not verify message as list');
+        await expect(key.publicKey.verify(text.subarray(), sig))
+            .to.eventually.be.true('did not verify message as single buffer');
+    });
+    it('encoding', async () => {
+        const keyMarshal = key.raw;
+        const key2 = pkcs1ToRSAPrivateKey(keyMarshal);
+        const keyMarshal2 = key2.raw;
+        expect(keyMarshal).to.equalBytes(keyMarshal2);
+        const pk = key.publicKey;
+        const pkMarshal = pk.raw;
+        const pk2 = pkixToRSAPublicKey(pkMarshal);
+        const pkMarshal2 = pk2.raw;
+        expect(pkMarshal).to.equalBytes(pkMarshal2);
+    });
+    it('publicKey toString', async () => {
+        const key = privateKeyFromProtobuf(uint8ArrayFromString('CAASqAkwggSkAgEAAoIBAQCk0O+6oNRxhcdZe2GxEDrFBkDV4TZFZnp2ly/dL1cGMBql/8oXPZgei6h7+P5zzfDq2YCfwbjbf0IVY1AshRl6B5VGE1WS+9p1y1OZxJf5os6V1ENnTi6FTcyuBl4BN8dmIKOif0hqgqflaT5OhfYZDXfbJyVQj4vb2+Stu2Xpph3nwqAnTw/7GC/7jrt2Cq6Tu1PoZi36wSwEPYW3eQ1HAYxZjTYYDXl2iyHygnTcbkGRwAQ7vjk+mW7u60zyoolCm9f6Y7c/orJ33DDUocbaGJLlHcfd8bioBwaZy/2m7q43X8pQs0Q1/iwUt0HHZj1YARmHKbh0zR31ciFiV37dAgMBAAECggEADtJBNKnA4QKURj47r0YT2uLwkqtBi6UnDyISalQXAdXyl4n0nPlrhBewC5H9I+HZr+zmTbeIjaiYgz7el1pSy7AB4v7bG7AtWZlyx6mvtwHGjR+8/f3AXjl8Vgv5iSeAdXUq8fJ7SyS7v3wi38HZOzCEXj9bci6ud5ODMYJgLE4gZD0+i1+/V9cpuYfGpS/gLTLEMQLiw/9o8NSZ7sAnxg0UlYhotqaQY23hvXPBOe+0oa95zl2n6XTxCafa3dQl/B6CD1tUq9dhbQew4bxqMq/mhRO9pREEqZ083Uh+u4PTc1BeHgIQaS864pHPb+AY1F7KDvPtHhdojnghp8d70QKBgQDeRYFxo6sd04ohY86Z/i9icVYIyCvfXAKnaMKeGUjK7ou6sDJwFX8W97+CzXpZ/vffsk/l5GGhC50KqrITxHAy/h5IjyDODfps7NMIp0Dm9sO4PWibbw3OOVBRc8w3b3i7I8MrUUA1nLHE1T1HA1rKOTz5jYhE0fi9XKiT1ciKOQKBgQC903w+n9y7M7eaMW7Z5/13kZ7PS3HlM681eaPrk8J4J+c6miFF40/8HOsmarS38v0fgTeKkriPz5A7aLzRHhSiOnp350JNM6c3sLwPEs2qx/CRuWWx1rMERatfDdUH6mvlK6QHu0QgSfQR27EO6a6XvVSJXbvFmimjmtIaz/IpxQKBgQDWJ9HYVAGC81abZTaiWK3/A4QJYhQjWNuVwPICsgnYvI4Uib+PDqcs0ffLZ38DRw48kek5bxpBuJbOuDhro1EXUJCNCJpq7jzixituovd9kTRyR3iKii2bDM2+LPwOTXDdnk9lZRugjCEbrPkleq33Ob7uEtfAty4aBTTHe6uEwQKBgQCB+2q8RyMSXNuADhFlzOFXGrOwJm0bEUUMTPrduRQUyt4e1qOqA3klnXe3mqGcxBpnlEe/76/JacvNom6Ikxx16a0qpYRU8OWz0KU1fR6vrrEgV98241k5t6sdL4+MGA1Bo5xyXtzLb1hdUh3vpDwVU2OrnC+To3iXus/b5EBiMQKBgEI1OaBcFiyjgLGEyFKoZbtzH1mdatTExfrAQqCjOVjQByoMpGhHTXwEaosvyYu63Pa8AJPT7juSGaiKYEJFcXO9BiNyVfmQiqSHJcYeuh+fmO9IlHRHgy5xaIIC00AHS2vC/gXwmXAdPis6BZqDJeiCuOLWJ94QXn8JBT8IgGAI', 'base64pad'));
+        expect(key.publicKey.toString()).to.equal('QmQgsppVMDUpe83wcAqaemKbYvHeF127gnSFQ1xFnBodVw');
+    });
+    it('unmarshals a public key', async () => {
+        const pkix = uint8ArrayFromString('MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqIij4fIDgd9gYYyspcLdJ+IruBNfDOnmReSrq7HVzUkqEgUX3m06rw5kDwhmOFm4BdgWdKDcZvH1JnbxkJRUz6K0vrXfUnj6ZNDwWqKwXprHSNRY/DsxLOAZEVPNKc9K6iruy/5SI/jwxx5WsQW2SISZ/jjmoN/WVN0t1lt1CG3JR8SvC25gAXmv8yG599QBvRhi5NhORAlFRnpmWMeSHMdrdbqetEWDOkW4F7qxgxANGHpSPpZb10YnsZwTCV/XwhHe/7illL17WTy1iXnsebgUiuCnf7jhdJ2i5g67G2YvKTj7FSFJ4i8IxRGLVMuqkPf5GHpaC8wTIgXZsq0m7QIDAQAB', 'base64pad');
+        const publicKey = pkixToRSAPublicKey(pkix);
+        expect(publicKey.raw).to.equalBytes(pkix);
+    });
+    it('unmarshals a private key', async () => {
+        const pkcs1 = uint8ArrayFromString('MIIEowIBAAKCAQEAny2Ldm4AuMlC79scjLVabi2tToJ2oRYC9l+ptn7pUjfQQEgwX+wrm+2d/Qg6nkKhUzDyIrA9LBTKtPYJEf/+2ryT/xu8VnVuExi40lD80tQeNQ5pqHFadw5I8pqHoDtW/rxtc7IlcSqfN/eNJc9c17eiN4f/65iP8xYQVraReAkmOyrWWTmWxviC0ku4VqXL6id5nxLJOmKYAYHWQ5eqxZ11Ccq0CeV5PPuSDDPgX6SEf3KN4bQdU9UXwsHJb1Nnhe8hwwO8lYc6uodQNjdL8XCvEj28E0dIGtlpwgSPfkq1kyFROZo+WEB6fbP//VJ6rk22LPeOWtM4jwRFOP/pqQIDAQABAoIBAA9IAG6mDJpw0uTjNoRRID1509yYxIH+MppbsHepSyW2Hz9elstMqVqatxs8tCDvoVxy01oObI7774JsKM6CMqGl7zjTXTM5KpA5hDvHo9/rFnvONolB2Zcap1joCitxKu7BYOoVoQfSWU72jGXD+KQqeE+ntiNUZgRmmrqyY/h/lHa5h0Iqgr5zp0Ka2RY+G5EZIC8/yqVLNtSf7F0ujkAltNG7D+bJ/JkozMOLFLCae4ha0pRcwA3/tKWuT/454P+Y9KnggIiyxmrmFokt10z29IfocXsVw6VgU/cHNlC+LZ79f8gj177xYguxQWR+Mu/PQtGJXpAvPq+/DaFOdwECgYEA27JuD0T8pnuRUDyEzGuCdHTu4KRU4N5e2OYNsopyhWXeJAifs5mdCb+iGaVfhe3D5hs3QqsQUZIN13JwM7kKqfYvptTcNYZAGv50PJMKQ3XlJuqYSWfaQjfMfvo9feh8lCMNscOuRcVoucqqq6JM7LNATWFmocyiu4eneL3HOqkCgYEAuXsNDC5yMa2gH4G1NsrzQUYlb9KRRq2cqn/uEItT1EcTh14d3nlz5BAUBbst1tv3jTZOANTcYzYvH9QD8W8FxcGYCCDCfDFRHlq16BgpbYqqdfUKVfURbsw9gExKF/ryuxfOn6Sl5NaGEev2n9a87XZRGGwaH5J5gpP9PZUHlwECgYBDbWXeBdxM9EvLBmfznWNyfpj6FTV/toABrcmybE9tpbAh+wuYwaKy5T/JAzpoDms7akrxiTL+9gaNgy/wj/A37bj+SQI04zk1j7b5CF/0CHEGGqYWkWspO5rltcO9qubhSEjhsB8Chu33Z74t4ygc1X78wNIRAo9HYwEBS62j0QKBgDGbb4nqgjA3N7Q1hLn63cR/dlPKBYDZviT7wjg6i1kjCV4TFfoCkbRVeIVv4nqsqjDibUpbo/YE7+WbVtKj1u9lL7w8xsdgiUmNCUnh7HKXu6+Ashr7SIZRqcE+pjJzs6fGXkTkTFo/5eu1KGjnjfAUzOuzPeljy4vY+MoXqcgBAoGBAMIlmXJS9BSpgQEM9wmj4ze6wcnwI6BcHiAaEB5bns5iNTIvz1P1eetjq2Fu0uE4RWf4Ooy2AgvHAJuA/qTzAvXn3yhfHuJJ8S7SyhervzPMxRXgi0iX7T1uP9ow55PpgQ3EDeLjxHKHkUTOLPM0Kbz2umx2pBByo85uQcvTuv1r', 'base64pad');
+        const privateKey = pkcs1ToRSAPrivateKey(pkcs1);
+        expect(privateKey.raw).to.equalBytes(pkcs1);
+    });
+    it('imports private key from raw', async () => {
+        const key = await generateKeyPair('RSA', 512);
+        const imported = privateKeyFromRaw(key.raw);
+        expect(key.equals(imported)).to.be.true();
+    });
+    it('imports public key from raw', async () => {
+        const key = await generateKeyPair('RSA', 512);
+        const imported = publicKeyFromRaw(key.publicKey.raw);
+        expect(key.publicKey.equals(imported)).to.be.true();
+    });
+    it('is PrivateKey', async () => {
+        const key = await generateKeyPair('RSA', 512);
+        expect(isPrivateKey(key)).to.be.true();
+        expect(isPublicKey(key)).to.be.false();
+    });
+    it('is PublicKey', async () => {
+        const key = await generateKeyPair('RSA', 512);
+        expect(isPrivateKey(key.publicKey)).to.be.false();
+        expect(isPublicKey(key.publicKey)).to.be.true();
+    });
+    describe('key equals', () => {
+        it('equals itself', () => {
+            expect(key.equals(key)).to.be.true();
+            expect(key.publicKey.equals(key.publicKey)).to.be.true();
+        });
+        it('not equals other key', async () => {
+            const key2 = await generateKeyPair('RSA', 512);
+            expect(key.equals(key2)).to.be.false();
+            expect(key2.equals(key)).to.be.false();
+            expect(key.publicKey.equals(key2.publicKey)).to.be.false();
+            expect(key2.publicKey.equals(key.publicKey)).to.be.false();
+        });
+    });
+    it('sign and verify', async () => {
+        const data = uint8ArrayFromString('hello world');
+        const sig = await key.sign(data);
+        const valid = await key.publicKey.verify(data, sig);
+        expect(valid).to.be.eql(true);
+    });
+    it('fails to verify for different data', async () => {
+        const data = uint8ArrayFromString('hello world');
+        const sig = await key.sign(data);
+        const valid = await key.publicKey.verify(uint8ArrayFromString('hello'), sig);
+        expect(valid).to.be.eql(false);
+    });
+    describe('throws error instead of crashing', () => {
+        const key = publicKeyFromProtobuf(fixtures.verify.publicKey);
+        testGarbage('key.verify', key.verify.bind(key), 2, true);
+        testGarbage('privateKeyFromProtobuf', privateKeyFromProtobuf);
+    });
+    describe('go interop', () => {
+        it('verifies with data from go', async () => {
+            const key = publicKeyFromProtobuf(fixtures.verify.publicKey);
+            const ok = await key.verify(fixtures.verify.data, fixtures.verify.signature);
+            expect(ok).to.equal(true);
+        });
+    });
+    describe('pkix', () => {
+        function roundTrip(jwk) {
+            const pkix = jwkToPkix(jwk.publicKey);
+            const buf = new asn1js.Sequence({
+                value: [
+                    new asn1js.Sequence({
+                        value: [
+                            // rsaEncryption
+                            new asn1js.ObjectIdentifier({
+                                value: '1.2.840.113549.1.1.1'
+                            }),
+                            new asn1js.Null()
+                        ]
+                    }),
+                    new asn1js.BitString({
+                        valueHex: new asn1js.Sequence({
+                            value: [
+                                asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.publicKey.n ?? '', 'base64url'))),
+                                asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.publicKey.e ?? '', 'base64url')))
+                            ]
+                        }).toBER()
+                    })
+                ]
+            }).toBER();
+            expect(pkix).to.equalBytes(new Uint8Array(buf));
+            expect(pkixToJwk(pkix)).to.deep.equal(jwk.publicKey);
+        }
+        it('should round trip 512 bit public key as pkix', () => {
+            roundTrip(RSA_KEY_512_BITS);
+        });
+        it('should round trip 1024 bit public key as pkix', () => {
+            roundTrip(RSA_KEY_1024_BITS);
+        });
+        it('should round trip 2048 bit public key as pkix', () => {
+            roundTrip(RSA_KEY_2048_BITS);
+        });
+        it('should round trip 8192 bit public key as pkix', () => {
+            roundTrip(RSA_KEY_8192_BITS);
+        });
+    });
+    describe('pkcs#1', () => {
+        function roundTrip(jwk) {
+            const pkcs1 = jwkToPkcs1(jwk.privateKey);
+            const buf = new asn1js.Sequence({
+                value: [
+                    new asn1js.Integer({ value: 0 }),
+                    asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.privateKey.n ?? '', 'base64url'))),
+                    asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.privateKey.e ?? '', 'base64url'))),
+                    asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.privateKey.d ?? '', 'base64url'))),
+                    asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.privateKey.p ?? '', 'base64url'))),
+                    asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.privateKey.q ?? '', 'base64url'))),
+                    asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.privateKey.dp ?? '', 'base64url'))),
+                    asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.privateKey.dq ?? '', 'base64url'))),
+                    asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.privateKey.qi ?? '', 'base64url')))
+                ]
+            }).toBER();
+            expect(pkcs1).to.equalBytes(new Uint8Array(buf));
+            expect(pkcs1ToJwk(pkcs1)).to.deep.equal(jwk.privateKey);
+        }
+        it('should round trip 512 bit private key as pkix', () => {
+            roundTrip(RSA_KEY_512_BITS);
+        });
+        it('should round trip 1024 bit private key as pkix', () => {
+            roundTrip(RSA_KEY_1024_BITS);
+        });
+        it('should round trip 2048 bit private key as pkix', () => {
+            roundTrip(RSA_KEY_2048_BITS);
+        });
+        it('should round trip 8192 bit private key as pkix', () => {
+            roundTrip(RSA_KEY_8192_BITS);
+        });
+    });
+});
+function bufToBn(u8) {
+    const hex = [];
+    u8.forEach(function (i) {
+        let h = i.toString(16);
+        if (h.length % 2 > 0) {
+            h = `0${h}`;
+        }
+        hex.push(h);
+    });
+    return BigInt('0x' + hex.join(''));
+}
+//# sourceMappingURL=rsa.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.js.map b/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.js.map
new file mode 100644
index 0000000..a451c33
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/rsa.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"rsa.spec.js","sourceRoot":"","sources":["../../../test/keys/rsa.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.d.ts
new file mode 100644
index 0000000..5f98c09
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=secp256k1.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.d.ts.map
new file mode 100644
index 0000000..5e0efda
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"secp256k1.spec.d.ts","sourceRoot":"","sources":["../../../test/keys/secp256k1.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.js b/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.js
new file mode 100644
index 0000000..d064f83
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.js
@@ -0,0 +1,183 @@
+/* eslint-disable @typescript-eslint/await-thenable */ // secp is sync in node, async in browsers
+/* eslint-env mocha */
+import { isPrivateKey, isPublicKey } from '@libp2p/interface';
+import { expect } from 'aegir/chai';
+import { Uint8ArrayList } from 'uint8arraylist';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { randomBytes } from '../../src/index.js';
+import { generateKeyPair, privateKeyFromRaw, privateKeyToProtobuf, publicKeyFromRaw, publicKeyToProtobuf } from '../../src/keys/index.js';
+import { KeyType, PrivateKey, PublicKey } from '../../src/keys/keys.js';
+import { hashAndSign, hashAndVerify } from '../../src/keys/secp256k1/index.js';
+import { unmarshalSecp256k1PrivateKey, unmarshalSecp256k1PublicKey, compressSecp256k1PublicKey, computeSecp256k1PublicKey, decompressSecp256k1PublicKey, generateSecp256k1PrivateKey, validateSecp256k1PrivateKey, validateSecp256k1PublicKey } from '../../src/keys/secp256k1/utils.js';
+import fixtures from '../fixtures/go-key-secp256k1.js';
+describe('secp256k1 keys', () => {
+    let key;
+    before(async () => {
+        key = await generateKeyPair('secp256k1');
+    });
+    it('generates a valid key', async () => {
+        expect(key).to.have.property('type', 'secp256k1');
+        expect(key.equals(key)).to.be.true();
+        expect(key.raw).to.have.length(32);
+    });
+    it('signs', async () => {
+        const text = randomBytes(512);
+        const sig = await key.sign(text);
+        const res = await key.publicKey.verify(text, sig);
+        expect(res).to.equal(true);
+    });
+    it('signs a list', async () => {
+        const text = new Uint8ArrayList(randomBytes(512), randomBytes(512));
+        const sig = await key.sign(text);
+        expect(await key.sign(text.subarray()))
+            .to.deep.equal(sig, 'list did not have same signature as a single buffer');
+        expect(await key.publicKey.verify(text, sig))
+            .to.be.true('did not verify message as list');
+        expect(await key.publicKey.verify(text.subarray(), sig))
+            .to.be.true('did not verify message as single buffer');
+    });
+    it('encoding', () => {
+        const keyMarshal = key.raw;
+        const key2 = unmarshalSecp256k1PrivateKey(keyMarshal);
+        const keyMarshal2 = key2.raw;
+        expect(keyMarshal).to.equalBytes(keyMarshal2);
+        const pk = key.publicKey;
+        const pkMarshal = pk.raw;
+        const pk2 = unmarshalSecp256k1PublicKey(pkMarshal);
+        const pkMarshal2 = pk2.raw;
+        expect(pkMarshal).to.equalBytes(pkMarshal2);
+    });
+    it('publicKey toString()', async () => {
+        const decoded = PrivateKey.decode(fixtures.privateKey);
+        const key = unmarshalSecp256k1PrivateKey(decoded.Data ?? new Uint8Array());
+        expect(key.publicKey.toString()).to.equal('16Uiu2HAm5vpzEwJ41kQmnwDu9moFusdc16wV1oCUd1AHLgFgPpKY');
+    });
+    it('imports private key from raw', async () => {
+        const key = await generateKeyPair('secp256k1');
+        const imported = privateKeyFromRaw(key.raw);
+        expect(key.equals(imported)).to.be.true();
+    });
+    it('imports public key from raw', async () => {
+        const key = await generateKeyPair('secp256k1');
+        const imported = publicKeyFromRaw(key.publicKey.raw);
+        expect(key.publicKey.equals(imported)).to.be.true();
+    });
+    it('is PrivateKey', async () => {
+        const key = await generateKeyPair('secp256k1');
+        expect(isPrivateKey(key)).to.be.true();
+        expect(isPublicKey(key)).to.be.false();
+    });
+    it('is PublicKey', async () => {
+        const key = await generateKeyPair('secp256k1');
+        expect(isPrivateKey(key.publicKey)).to.be.false();
+        expect(isPublicKey(key.publicKey)).to.be.true();
+    });
+    describe('key equals', () => {
+        it('equals itself', () => {
+            expect(key.equals(key)).to.be.true();
+            expect(key.publicKey.equals(key.publicKey)).to.be.true();
+        });
+        it('not equals other key', async () => {
+            const key2 = await generateKeyPair('secp256k1');
+            expect(key.equals(key2)).to.be.false();
+            expect(key2.equals(key)).to.be.false();
+            expect(key.publicKey.equals(key2.publicKey)).to.be.false();
+            expect(key2.publicKey.equals(key.publicKey)).to.be.false();
+        });
+    });
+    it('sign and verify', async () => {
+        const data = uint8ArrayFromString('hello world');
+        const sig = await key.sign(data);
+        const valid = await key.publicKey.verify(data, sig);
+        expect(valid).to.be.true();
+    });
+    it('fails to verify for different data', async () => {
+        const data = uint8ArrayFromString('hello world');
+        const sig = await key.sign(data);
+        const valid = await key.publicKey.verify(uint8ArrayFromString('hello'), sig);
+        expect(valid).to.be.false();
+    });
+});
+describe('crypto functions', () => {
+    let privKey;
+    let pubKey;
+    before(() => {
+        privKey = generateSecp256k1PrivateKey();
+        pubKey = computeSecp256k1PublicKey(privKey);
+    });
+    it('generates valid keys', () => {
+        expect(() => {
+            validateSecp256k1PrivateKey(privKey);
+            validateSecp256k1PublicKey(pubKey);
+        }).to.not.throw();
+    });
+    it('does not validate an invalid key', () => {
+        expect(() => { validateSecp256k1PublicKey(uint8ArrayFromString('42')); }).to.throw();
+        expect(() => { validateSecp256k1PrivateKey(uint8ArrayFromString('42')); }).to.throw();
+    });
+    it('validates a correct signature', async () => {
+        const sig = await hashAndSign(privKey, uint8ArrayFromString('hello'));
+        const valid = await hashAndVerify(pubKey, sig, uint8ArrayFromString('hello'));
+        expect(valid).to.equal(true);
+    });
+    it('does not validate when validating a message with an invalid signature', async () => {
+        const result = await hashAndVerify(pubKey, uint8ArrayFromString('invalid-sig'), uint8ArrayFromString('hello'));
+        expect(result).to.be.false();
+    });
+    it('errors if given a null Uint8Array to sign', async () => {
+        await expect((async () => {
+            // @ts-expect-error incorrect args
+            await hashAndSign(privKey, null);
+        })()).to.eventually.be.rejected();
+    });
+    it('errors when signing with an invalid key', async () => {
+        await expect((async () => {
+            await hashAndSign(uint8ArrayFromString('42'), uint8ArrayFromString('Hello'));
+        })()).to.eventually.be.rejected
+            .with.property('name', 'SigningError');
+    });
+    it('errors if given a null Uint8Array to validate', async () => {
+        const sig = await hashAndSign(privKey, uint8ArrayFromString('hello'));
+        await expect((async () => {
+            // @ts-expect-error incorrect args
+            await hashAndVerify(privKey, sig, null);
+        })()).to.eventually.be.rejected();
+    });
+    it('throws when compressing an invalid public key', () => {
+        expect(() => compressSecp256k1PublicKey(uint8ArrayFromString('42'))).to.throw();
+    });
+    it('throws when decompressing an invalid public key', () => {
+        expect(() => decompressSecp256k1PublicKey(uint8ArrayFromString('42'))).to.throw();
+    });
+    it('compresses/decompresses a valid public key', () => {
+        const decompressed = decompressSecp256k1PublicKey(pubKey);
+        expect(decompressed).to.exist();
+        expect(decompressed).to.have.lengthOf(65);
+        const recompressed = compressSecp256k1PublicKey(decompressed);
+        expect(recompressed).to.equalBytes(pubKey);
+    });
+});
+describe('go interop', () => {
+    it('loads a private key marshaled by go-libp2p-crypto', () => {
+        // we need to first extract the key data from the protobuf, which is
+        // normally handled by js-libp2p-crypto
+        const decoded = PrivateKey.decode(fixtures.privateKey);
+        expect(decoded.Type).to.equal(KeyType.secp256k1);
+        const key = unmarshalSecp256k1PrivateKey(decoded.Data ?? new Uint8Array());
+        expect(privateKeyToProtobuf(key)).to.equalBytes(fixtures.privateKey);
+    });
+    it('loads a public key marshaled by go-libp2p-crypto', () => {
+        const decoded = PublicKey.decode(fixtures.publicKey);
+        expect(decoded.Type).to.equal(KeyType.secp256k1);
+        const key = unmarshalSecp256k1PublicKey(decoded.Data ?? new Uint8Array());
+        expect(publicKeyToProtobuf(key)).to.equalBytes(fixtures.publicKey);
+    });
+    it('generates the same signature as go-libp2p-crypto', async () => {
+        const decoded = PrivateKey.decode(fixtures.privateKey);
+        expect(decoded.Type).to.equal(KeyType.secp256k1);
+        const key = unmarshalSecp256k1PrivateKey(decoded.Data ?? new Uint8Array());
+        const sig = await key.sign(fixtures.message);
+        expect(sig).to.equalBytes(fixtures.signature);
+    });
+});
+//# sourceMappingURL=secp256k1.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.js.map b/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.js.map
new file mode 100644
index 0000000..6ba905b
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/keys/secp256k1.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"secp256k1.spec.js","sourceRoot":"","sources":["../../../test/keys/secp256k1.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.d.ts
new file mode 100644
index 0000000..a9f40bf
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=random-bytes.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.d.ts.map
new file mode 100644
index 0000000..1c7c1fe
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"random-bytes.spec.d.ts","sourceRoot":"","sources":["../../test/random-bytes.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.js b/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.js
new file mode 100644
index 0000000..2984d5a
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.js
@@ -0,0 +1,19 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import randomBytes from '../src/random-bytes.js';
+describe('randomBytes', () => {
+    it('produces random bytes', () => {
+        expect(randomBytes(16)).to.have.length(16);
+    });
+    it('throws if length is 0', () => {
+        expect(() => randomBytes(0)).to.throw(Error).with.property('name', 'InvalidParametersError');
+    });
+    it('throws if length is < 0', () => {
+        expect(() => randomBytes(-1)).to.throw(Error).with.property('name', 'InvalidParametersError');
+    });
+    it('throws if length is not a number', () => {
+        // @ts-expect-error invalid params
+        expect(() => randomBytes('hi')).to.throw(Error).with.property('name', 'InvalidParametersError');
+    });
+});
+//# sourceMappingURL=random-bytes.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.js.map b/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.js.map
new file mode 100644
index 0000000..4bb7b8b
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/random-bytes.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"random-bytes.spec.js","sourceRoot":"","sources":["../../test/random-bytes.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,WAAW,MAAM,wBAAwB,CAAA;AAEhD,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;IAC5C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAA;IAC9F,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAA;IAC/F,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,kCAAkC;QAClC,MAAM,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAA;IACjG,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/util.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/util.spec.d.ts
new file mode 100644
index 0000000..1fe319f
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/util.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=util.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/util.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/util.spec.d.ts.map
new file mode 100644
index 0000000..458cd2b
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/util.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"util.spec.d.ts","sourceRoot":"","sources":["../../test/util.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/util.spec.js b/node_modules/@libp2p/crypto/dist/test/util.spec.js
new file mode 100644
index 0000000..a8d45bd
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/util.spec.js
@@ -0,0 +1,11 @@
+/* eslint max-nested-callbacks: ["error", 8] */
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import * as util from '../src/util.js';
+describe('Util', () => {
+    it('should convert base64url encoded string to Uint8Array with padding', () => {
+        const buf = util.base64urlToBuffer('AP8', 2);
+        expect(Uint8Array.from([0, 255])).to.eql(buf);
+    });
+});
+//# sourceMappingURL=util.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/util.spec.js.map b/node_modules/@libp2p/crypto/dist/test/util.spec.js.map
new file mode 100644
index 0000000..fd79a8f
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/util.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"util.spec.js","sourceRoot":"","sources":["../../test/util.spec.ts"],"names":[],"mappings":"AAAA,+CAA+C;AAC/C,sBAAsB;AACtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,IAAI,MAAM,gBAAgB,CAAA;AAEtC,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;IACpB,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;QAC5E,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;QAC5C,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC/C,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/workaround.spec.d.ts b/node_modules/@libp2p/crypto/dist/test/workaround.spec.d.ts
new file mode 100644
index 0000000..ab2037b
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/workaround.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=workaround.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/workaround.spec.d.ts.map b/node_modules/@libp2p/crypto/dist/test/workaround.spec.d.ts.map
new file mode 100644
index 0000000..dddfc7f
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/workaround.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"workaround.spec.d.ts","sourceRoot":"","sources":["../../test/workaround.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/workaround.spec.js b/node_modules/@libp2p/crypto/dist/test/workaround.spec.js
new file mode 100644
index 0000000..83d3301
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/workaround.spec.js
@@ -0,0 +1,17 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { derivedEmptyPasswordKey } from '../src/ciphers/aes-gcm.browser.js';
+describe('Constant derived key is generated correctly', () => {
+    it('Generates correctly', async () => {
+        if ((typeof navigator !== 'undefined' && navigator.userAgent.includes('Safari')) || typeof crypto === 'undefined') {
+            // WebKit Linux can't generate this. Hence the workaround.
+            return;
+        }
+        const generatedKey = await crypto.subtle.exportKey('jwk', await crypto.subtle.deriveKey({ name: 'PBKDF2', salt: new Uint8Array(16), iterations: 32767, hash: { name: 'SHA-256' } }, await crypto.subtle.importKey('raw', new Uint8Array(0), { name: 'PBKDF2' }, false, ['deriveKey']), { name: 'AES-GCM', length: 128 }, true, ['encrypt', 'decrypt']));
+        // Webkit macos flips these. Sort them so they match.
+        derivedEmptyPasswordKey.key_ops.sort();
+        generatedKey?.key_ops?.sort();
+        expect(generatedKey).to.eql(derivedEmptyPasswordKey);
+    });
+});
+//# sourceMappingURL=workaround.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/test/workaround.spec.js.map b/node_modules/@libp2p/crypto/dist/test/workaround.spec.js.map
new file mode 100644
index 0000000..ee848a1
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/test/workaround.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"workaround.spec.js","sourceRoot":"","sources":["../../test/workaround.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,uBAAuB,EAAE,MAAM,mCAAmC,CAAA;AAE3E,QAAQ,CAAC,6CAA6C,EAAE,GAAG,EAAE;IAC3D,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,IAAI,CAAC,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;YAClH,0DAA0D;YAC1D,OAAM;QACR,CAAC;QAED,MAAM,YAAY,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EACtD,MAAM,MAAM,CAAC,MAAM,CAAC,SAAS,CAC3B,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAC1F,MAAM,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,EACjG,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAClE,CAAA;QAED,qDAAqD;QACrD,uBAAuB,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;QACtC,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE,CAAA;QAE7B,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAA;IACtD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/tsconfig.tsbuildinfo b/node_modules/@libp2p/crypto/dist/tsconfig.tsbuildinfo
new file mode 100644
index 0000000..313578b
--- /dev/null
+++ b/node_modules/@libp2p/crypto/dist/tsconfig.tsbuildinfo
@@ -0,0 +1 @@
+{"program":{"fileNames":["../../../node_modules/typescript/lib/lib.es5.d.ts","../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../node_modules/typescript/lib/lib.es2021.d.ts","../../../node_modules/typescript/lib/lib.es2022.d.ts","../../../node_modules/typescript/lib/lib.es2023.d.ts","../../../node_modules/typescript/lib/lib.dom.d.ts","../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../node_modules/typescript/lib/lib.webworker.d.ts","../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../node_modules/typescript/lib/lib.es2021.promise.d.ts","../../../node_modules/typescript/lib/lib.es2021.string.d.ts","../../../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../../node_modules/typescript/lib/lib.es2021.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.array.d.ts","../../../node_modules/typescript/lib/lib.es2022.error.d.ts","../../../node_modules/typescript/lib/lib.es2022.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.object.d.ts","../../../node_modules/typescript/lib/lib.es2022.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2022.string.d.ts","../../../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2023.array.d.ts","../../../node_modules/typescript/lib/lib.es2023.collection.d.ts","../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../src/errors.ts","../src/hmac/lengths.ts","../src/hmac/index.ts","../../../node_modules/multiformats/dist/src/bases/interface.d.ts","../../../node_modules/multiformats/dist/src/block/interface.d.ts","../../../node_modules/multiformats/dist/src/hashes/interface.d.ts","../../../node_modules/multiformats/dist/src/link/interface.d.ts","../../../node_modules/multiformats/dist/src/cid.d.ts","../../../node_modules/uint8arraylist/dist/src/index.d.ts","../../interface/dist/src/keys.d.ts","../../interface/dist/src/peer-id.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/protocols-table.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/index.d.ts","../../../node_modules/progress-events/dist/src/index.d.ts","../../../node_modules/@multiformats/dns/dist/src/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/dnsaddr.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/index.d.ts","../../../node_modules/it-stream-types/dist/src/index.d.ts","../../interface/dist/src/connection.d.ts","../../interface/dist/src/peer-info.d.ts","../../interface/dist/src/content-routing.d.ts","../../interface/dist/src/event-target.d.ts","../../interface/dist/src/metrics.d.ts","../../interface/dist/src/peer-routing.d.ts","../../interface/dist/src/peer-store.d.ts","../../interface/dist/src/startable.d.ts","../../interface/dist/src/stream-handler.d.ts","../../interface/dist/src/topology.d.ts","../../interface/dist/src/stream-muxer.d.ts","../../interface/dist/src/transport.d.ts","../../interface/dist/src/connection-encrypter.d.ts","../../interface/dist/src/connection-gater.d.ts","../../interface/dist/src/peer-discovery.d.ts","../../../node_modules/it-pushable/dist/src/index.d.ts","../../interface/dist/src/pubsub.d.ts","../../interface/dist/src/record.d.ts","../../interface/dist/src/errors.d.ts","../../../node_modules/@types/node/compatibility/disposable.d.ts","../../../node_modules/@types/node/compatibility/indexable.d.ts","../../../node_modules/@types/node/compatibility/iterators.d.ts","../../../node_modules/@types/node/compatibility/index.d.ts","../../../node_modules/@types/node/ts5.6/globals.typedarray.d.ts","../../../node_modules/@types/node/ts5.6/buffer.buffer.d.ts","../../../node_modules/buffer/index.d.ts","../../../node_modules/undici-types/header.d.ts","../../../node_modules/undici-types/readable.d.ts","../../../node_modules/undici-types/file.d.ts","../../../node_modules/undici-types/fetch.d.ts","../../../node_modules/undici-types/formdata.d.ts","../../../node_modules/undici-types/connector.d.ts","../../../node_modules/undici-types/client.d.ts","../../../node_modules/undici-types/errors.d.ts","../../../node_modules/undici-types/dispatcher.d.ts","../../../node_modules/undici-types/global-dispatcher.d.ts","../../../node_modules/undici-types/global-origin.d.ts","../../../node_modules/undici-types/pool-stats.d.ts","../../../node_modules/undici-types/pool.d.ts","../../../node_modules/undici-types/handlers.d.ts","../../../node_modules/undici-types/balanced-pool.d.ts","../../../node_modules/undici-types/agent.d.ts","../../../node_modules/undici-types/mock-interceptor.d.ts","../../../node_modules/undici-types/mock-agent.d.ts","../../../node_modules/undici-types/mock-client.d.ts","../../../node_modules/undici-types/mock-pool.d.ts","../../../node_modules/undici-types/mock-errors.d.ts","../../../node_modules/undici-types/proxy-agent.d.ts","../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../node_modules/undici-types/retry-handler.d.ts","../../../node_modules/undici-types/retry-agent.d.ts","../../../node_modules/undici-types/api.d.ts","../../../node_modules/undici-types/interceptors.d.ts","../../../node_modules/undici-types/util.d.ts","../../../node_modules/undici-types/cookies.d.ts","../../../node_modules/undici-types/patch.d.ts","../../../node_modules/undici-types/websocket.d.ts","../../../node_modules/undici-types/eventsource.d.ts","../../../node_modules/undici-types/filereader.d.ts","../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../node_modules/undici-types/content-type.d.ts","../../../node_modules/undici-types/cache.d.ts","../../../node_modules/undici-types/index.d.ts","../../../node_modules/@types/node/globals.d.ts","../../../node_modules/@types/node/assert.d.ts","../../../node_modules/@types/node/assert/strict.d.ts","../../../node_modules/@types/node/async_hooks.d.ts","../../../node_modules/@types/node/buffer.d.ts","../../../node_modules/@types/node/child_process.d.ts","../../../node_modules/@types/node/cluster.d.ts","../../../node_modules/@types/node/console.d.ts","../../../node_modules/@types/node/constants.d.ts","../../../node_modules/@types/node/crypto.d.ts","../../../node_modules/@types/node/dgram.d.ts","../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../node_modules/@types/node/dns.d.ts","../../../node_modules/@types/node/dns/promises.d.ts","../../../node_modules/@types/node/domain.d.ts","../../../node_modules/@types/node/dom-events.d.ts","../../../node_modules/@types/node/events.d.ts","../../../node_modules/@types/node/fs.d.ts","../../../node_modules/@types/node/fs/promises.d.ts","../../../node_modules/@types/node/http.d.ts","../../../node_modules/@types/node/http2.d.ts","../../../node_modules/@types/node/https.d.ts","../../../node_modules/@types/node/inspector.d.ts","../../../node_modules/@types/node/module.d.ts","../../../node_modules/@types/node/net.d.ts","../../../node_modules/@types/node/os.d.ts","../../../node_modules/@types/node/path.d.ts","../../../node_modules/@types/node/perf_hooks.d.ts","../../../node_modules/@types/node/process.d.ts","../../../node_modules/@types/node/punycode.d.ts","../../../node_modules/@types/node/querystring.d.ts","../../../node_modules/@types/node/readline.d.ts","../../../node_modules/@types/node/readline/promises.d.ts","../../../node_modules/@types/node/repl.d.ts","../../../node_modules/@types/node/sea.d.ts","../../../node_modules/@types/node/sqlite.d.ts","../../../node_modules/@types/node/stream.d.ts","../../../node_modules/@types/node/stream/promises.d.ts","../../../node_modules/@types/node/stream/consumers.d.ts","../../../node_modules/@types/node/stream/web.d.ts","../../../node_modules/@types/node/string_decoder.d.ts","../../../node_modules/@types/node/test.d.ts","../../../node_modules/@types/node/timers.d.ts","../../../node_modules/@types/node/timers/promises.d.ts","../../../node_modules/@types/node/tls.d.ts","../../../node_modules/@types/node/trace_events.d.ts","../../../node_modules/@types/node/tty.d.ts","../../../node_modules/@types/node/url.d.ts","../../../node_modules/@types/node/util.d.ts","../../../node_modules/@types/node/v8.d.ts","../../../node_modules/@types/node/vm.d.ts","../../../node_modules/@types/node/wasi.d.ts","../../../node_modules/@types/node/worker_threads.d.ts","../../../node_modules/@types/node/zlib.d.ts","../../../node_modules/@types/node/ts5.6/index.d.ts","../../interface/dist/src/events.d.ts","../../interface/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/bases/base.d.ts","../../../node_modules/multiformats/dist/src/bases/base58.d.ts","../../../node_modules/multiformats/dist/src/hashes/digest.d.ts","../../../node_modules/multiformats/dist/src/hashes/identity.d.ts","../../../node_modules/uint8arrays/dist/src/equals.d.ts","../../../node_modules/uint8arrays/dist/src/concat.d.ts","../../../node_modules/multiformats/dist/src/codecs/interface.d.ts","../../../node_modules/multiformats/dist/src/codecs/json.d.ts","../../../node_modules/multiformats/dist/src/codecs/raw.d.ts","../../../node_modules/multiformats/dist/src/bytes.d.ts","../../../node_modules/multiformats/dist/src/hashes/hasher.d.ts","../../../node_modules/multiformats/dist/src/varint.d.ts","../../../node_modules/multiformats/dist/src/interface.d.ts","../../../node_modules/multiformats/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/basics.d.ts","../../../node_modules/uint8arrays/dist/src/util/bases.d.ts","../../../node_modules/uint8arrays/dist/src/from-string.d.ts","../../../node_modules/uint8arrays/dist/src/to-string.d.ts","../src/keys/interface.ts","../src/keys/ed25519/index.ts","../src/keys/ed25519/ed25519.ts","../src/keys/ed25519/utils.ts","../../../node_modules/protons-runtime/dist/src/codec.d.ts","../../../node_modules/protons-runtime/dist/src/decode.d.ts","../../../node_modules/protons-runtime/dist/src/encode.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/enum.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/message.d.ts","../../../node_modules/protons-runtime/dist/src/utils/reader.d.ts","../../../node_modules/protons-runtime/dist/src/utils/writer.d.ts","../../../node_modules/protons-runtime/dist/src/index.d.ts","../src/keys/keys.ts","../../../node_modules/@noble/hashes/utils.d.ts","../../../node_modules/@noble/hashes/_md.d.ts","../../../node_modules/@noble/hashes/sha256.d.ts","../src/keys/rsa/der.ts","../src/random-bytes.ts","../src/keys/rsa/index.ts","../src/keys/rsa/rsa.ts","../src/keys/rsa/utils.ts","../../../node_modules/@noble/curves/abstract/utils.d.ts","../../../node_modules/@noble/curves/abstract/modular.d.ts","../../../node_modules/@noble/curves/abstract/curve.d.ts","../../../node_modules/@noble/curves/abstract/weierstrass.d.ts","../../../node_modules/@noble/curves/_shortw_utils.d.ts","../../../node_modules/@noble/curves/abstract/hash-to-curve.d.ts","../../../node_modules/@noble/curves/secp256k1.d.ts","../src/keys/secp256k1/index.ts","../src/keys/secp256k1/secp256k1.ts","../src/keys/secp256k1/utils.ts","../src/keys/ecdh/index.ts","../src/keys/key-stretcher.ts","../src/keys/index.ts","../../../node_modules/@noble/hashes/pbkdf2.d.ts","../../../node_modules/@noble/hashes/sha1.d.ts","../../../node_modules/@noble/hashes/sha512.d.ts","../../../node_modules/multiformats/dist/src/bases/base64.d.ts","../src/pbkdf2.ts","../src/index.ts","../src/util.ts","../src/webcrypto/webcrypto.ts","../src/webcrypto/index.ts","../src/ciphers/interface.ts","../src/ciphers/aes-gcm.browser.ts","../src/ciphers/aes-gcm.ts","../src/ciphers/index.ts","../src/hmac/index.browser.ts","../src/keys/ephemeral-keys.ts","../src/keys/ecdh/index.browser.ts","../../../node_modules/@noble/curves/abstract/edwards.d.ts","../../../node_modules/@noble/curves/abstract/montgomery.d.ts","../../../node_modules/@noble/curves/ed25519.d.ts","../src/keys/ed25519/index.browser.ts","../src/keys/rsa/index.browser.ts","../../../node_modules/multiformats/dist/src/hashes/sha2.d.ts","../src/keys/secp256k1/index.browser.ts","../src/webcrypto/webcrypto.browser.ts","../../../node_modules/@types/chai/index.d.ts","../../../node_modules/@types/chai-as-promised/index.d.ts","../../../node_modules/chai-parentheses/index.d.ts","../../../node_modules/@types/chai-subset/index.d.ts","../../../node_modules/chai-bites/index.d.ts","../../../node_modules/@types/chai-string/index.d.ts","../../../node_modules/aegir/dist/utils/chai.d.ts","../test/fixtures/go-key-rsa.ts","../test/crypto.spec.ts","../test/random-bytes.spec.ts","../test/util.spec.ts","../test/workaround.spec.ts","../test/fixtures/go-elliptic-key.ts","../test/fixtures/go-key-ed25519.ts","../test/fixtures/go-key-secp256k1.ts","../test/fixtures/go-stretch-key.ts","../test/fixtures/rsa.ts","../test/fixtures/secp256k1.ts","../test/helpers/test-garbage-error-handling.ts","../test/hmac/hmac.spec.ts","../test/keys/ed25519.spec.ts","../test/keys/ephemeral-keys.spec.ts","../test/keys/key-stretcher.spec.ts","../../../node_modules/pvtsutils/build/index.d.ts","../../../node_modules/asn1js/build/index.d.ts","../test/keys/rsa.spec.ts","../test/keys/secp256k1.spec.ts","../../../node_modules/@babel/types/lib/index.d.ts","../../../node_modules/@types/babel__generator/index.d.ts","../../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../../node_modules/@types/babel__template/index.d.ts","../../../node_modules/@types/babel__traverse/index.d.ts","../../../node_modules/@types/babel__core/index.d.ts","../../../node_modules/keyv/src/index.d.ts","../../../node_modules/@types/http-cache-semantics/index.d.ts","../../../node_modules/@types/responselike/index.d.ts","../../../node_modules/@types/cacheable-request/index.d.ts","../../../node_modules/@types/ms/index.d.ts","../../../node_modules/@types/debug/index.d.ts","../../../node_modules/@types/dns-packet/index.d.ts","../../../node_modules/@types/graceful-fs/index.d.ts","../../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../../node_modules/@types/istanbul-lib-report/index.d.ts","../../../node_modules/@types/istanbul-reports/index.d.ts","../../../node_modules/@types/json-schema/index.d.ts","../../../node_modules/@types/json5/index.d.ts","../../../node_modules/@types/keyv/index.d.ts","../../../node_modules/@types/linkify-it/build/index.cjs.d.ts","../../../node_modules/@types/linkify-it/index.d.ts","../../../node_modules/@types/lodash/common/common.d.ts","../../../node_modules/@types/lodash/common/array.d.ts","../../../node_modules/@types/lodash/common/collection.d.ts","../../../node_modules/@types/lodash/common/date.d.ts","../../../node_modules/@types/lodash/common/function.d.ts","../../../node_modules/@types/lodash/common/lang.d.ts","../../../node_modules/@types/lodash/common/math.d.ts","../../../node_modules/@types/lodash/common/number.d.ts","../../../node_modules/@types/lodash/common/object.d.ts","../../../node_modules/@types/lodash/common/seq.d.ts","../../../node_modules/@types/lodash/common/string.d.ts","../../../node_modules/@types/lodash/common/util.d.ts","../../../node_modules/@types/lodash/index.d.ts","../../../node_modules/@types/lodash.random/index.d.ts","../../../node_modules/@types/lodash.range/index.d.ts","../../../node_modules/@types/mdurl/build/index.cjs.d.ts","../../../node_modules/@types/mdurl/index.d.ts","../../../node_modules/@types/markdown-it/dist/index.cjs.d.ts","../../../node_modules/@types/markdown-it/index.d.ts","../../../node_modules/@types/unist/index.d.ts","../../../node_modules/@types/mdast/index.d.ts","../../../node_modules/@types/minimatch/index.d.ts","../../../node_modules/@types/minimist/index.d.ts","../../../node_modules/@types/mocha/index.d.ts","../../../node_modules/@types/multicast-dns/index.d.ts","../../../node_modules/@types/netmask/index.d.ts","../../../node_modules/@types/node-forge/index.d.ts","../../../node_modules/@types/normalize-package-data/index.d.ts","../../../node_modules/@types/parse-json/index.d.ts","../../../node_modules/@types/retry/index.d.ts","../../../node_modules/@types/semver/classes/semver.d.ts","../../../node_modules/@types/semver/functions/parse.d.ts","../../../node_modules/@types/semver/functions/valid.d.ts","../../../node_modules/@types/semver/functions/clean.d.ts","../../../node_modules/@types/semver/functions/inc.d.ts","../../../node_modules/@types/semver/functions/diff.d.ts","../../../node_modules/@types/semver/functions/major.d.ts","../../../node_modules/@types/semver/functions/minor.d.ts","../../../node_modules/@types/semver/functions/patch.d.ts","../../../node_modules/@types/semver/functions/prerelease.d.ts","../../../node_modules/@types/semver/functions/compare.d.ts","../../../node_modules/@types/semver/functions/rcompare.d.ts","../../../node_modules/@types/semver/functions/compare-loose.d.ts","../../../node_modules/@types/semver/functions/compare-build.d.ts","../../../node_modules/@types/semver/functions/sort.d.ts","../../../node_modules/@types/semver/functions/rsort.d.ts","../../../node_modules/@types/semver/functions/gt.d.ts","../../../node_modules/@types/semver/functions/lt.d.ts","../../../node_modules/@types/semver/functions/eq.d.ts","../../../node_modules/@types/semver/functions/neq.d.ts","../../../node_modules/@types/semver/functions/gte.d.ts","../../../node_modules/@types/semver/functions/lte.d.ts","../../../node_modules/@types/semver/functions/cmp.d.ts","../../../node_modules/@types/semver/functions/coerce.d.ts","../../../node_modules/@types/semver/classes/comparator.d.ts","../../../node_modules/@types/semver/classes/range.d.ts","../../../node_modules/@types/semver/functions/satisfies.d.ts","../../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../../node_modules/@types/semver/ranges/min-version.d.ts","../../../node_modules/@types/semver/ranges/valid.d.ts","../../../node_modules/@types/semver/ranges/outside.d.ts","../../../node_modules/@types/semver/ranges/gtr.d.ts","../../../node_modules/@types/semver/ranges/ltr.d.ts","../../../node_modules/@types/semver/ranges/intersects.d.ts","../../../node_modules/@types/semver/ranges/simplify.d.ts","../../../node_modules/@types/semver/ranges/subset.d.ts","../../../node_modules/@types/semver/internals/identifiers.d.ts","../../../node_modules/@types/semver/index.d.ts","../../../node_modules/@types/sinonjs__fake-timers/index.d.ts","../../../node_modules/@types/sinon/index.d.ts","../../../node_modules/@types/stack-utils/index.d.ts","../../../node_modules/@types/strip-bom/index.d.ts","../../../node_modules/@types/strip-json-comments/index.d.ts","../../../node_modules/@types/tdigest/index.d.ts","../../../node_modules/@types/which/index.d.ts","../../../node_modules/@types/ws/index.d.ts","../../../node_modules/@types/xsalsa20/index.d.ts","../../../node_modules/@types/yargs-parser/index.d.ts","../../../node_modules/@types/yargs/index.d.ts","../../../node_modules/@types/yauzl/index.d.ts"],"fileInfos":[{"version":"824cb491a40f7e8fdeb56f1df5edf91b23f3e3ee6b4cde84d4a99be32338faee","affectsGlobalScope":true},"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","5514e54f17d6d74ecefedc73c504eadffdeda79c7ea205cf9febead32d45c4bc","1c0cdb8dc619bc549c3e5020643e7cf7ae7940058e8c7e5aefa5871b6d86f44b",{"version":"87d693a4920d794a73384b3c779cadcb8548ac6945aa7a925832fe2418c9527a","affectsGlobalScope":true},{"version":"76f838d5d49b65de83bc345c04aa54c62a3cfdb72a477dc0c0fce89a30596c30","affectsGlobalScope":true},{"version":"db88e2781075c7bca86634724f38a132de718ddf3a470a3a2cdb182f4364af9e","affectsGlobalScope":true},{"version":"138fb588d26538783b78d1e3b2c2cc12d55840b97bf5e08bca7f7a174fbe2f17","affectsGlobalScope":true},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true},{"version":"bc47685641087c015972a3f072480889f0d6c65515f12bd85222f49a98952ed7","affectsGlobalScope":true},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true},{"version":"6fc23bb8c3965964be8c597310a2878b53a0306edb71d4b5a4dfe760186bcc01","affectsGlobalScope":true},{"version":"ea011c76963fb15ef1cdd7ce6a6808b46322c527de2077b6cfdf23ae6f5f9ec7","affectsGlobalScope":true},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true},{"version":"bb42a7797d996412ecdc5b2787720de477103a0b2e53058569069a0e2bae6c7e","affectsGlobalScope":true},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true},{"version":"b541a838a13f9234aba650a825393ffc2292dc0fc87681a5d81ef0c96d281e7a","affectsGlobalScope":true},{"version":"b20fe0eca9a4e405f1a5ae24a2b3290b37cf7f21eba6cbe4fc3fab979237d4f3","affectsGlobalScope":true},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true},{"version":"49ed889be54031e1044af0ad2c603d627b8bda8b50c1a68435fe85583901d072","affectsGlobalScope":true},{"version":"e93d098658ce4f0c8a0779e6cab91d0259efb88a318137f686ad76f8410ca270","affectsGlobalScope":true},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true},{"version":"5e07ed3809d48205d5b985642a59f2eba47c402374a7cf8006b686f79efadcbd","affectsGlobalScope":true},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true},{"version":"8073890e29d2f46fdbc19b8d6d2eb9ea58db9a2052f8640af20baff9afbc8640","affectsGlobalScope":true},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true},{"version":"51e547984877a62227042850456de71a5c45e7fe86b7c975c6e68896c86fa23b","affectsGlobalScope":true},{"version":"956d27abdea9652e8368ce029bb1e0b9174e9678a273529f426df4b3d90abd60","affectsGlobalScope":true},{"version":"4fa6ed14e98aa80b91f61b9805c653ee82af3502dc21c9da5268d3857772ca05","affectsGlobalScope":true},{"version":"e6633e05da3ff36e6da2ec170d0d03ccf33de50ca4dc6f5aeecb572cedd162fb","affectsGlobalScope":true},{"version":"d8670852241d4c6e03f2b89d67497a4bbefe29ecaa5a444e2c11a9b05e6fccc6","affectsGlobalScope":true},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true},{"version":"caccc56c72713969e1cfe5c3d44e5bab151544d9d2b373d7dbe5a1e4166652be","affectsGlobalScope":true},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true},{"version":"50d53ccd31f6667aff66e3d62adf948879a3a16f05d89882d1188084ee415bbc","affectsGlobalScope":true},{"version":"08a58483392df5fcc1db57d782e87734f77ae9eab42516028acbfe46f29a3ef7","affectsGlobalScope":true},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true},{"version":"33358442698bb565130f52ba79bfd3d4d484ac85fe33f3cb1759c54d18201393","affectsGlobalScope":true},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true},{"version":"fa61787120580293921ebd3d07fa7d96c77c71a68587d9e701dbb854d17a0ecc","signature":"7cb1bb41c0238ac85ee3c2df6fe1b2a9e60ee99a28fddf765fd2fc1135627719"},{"version":"6ee37df02df390bdf74d6d28c07622e322cbaa2daa2d65ce5c738f9eb1cf4f91","signature":"d916c18a3b2973888f4bbd62f8c3ca1fddae82d11afb73e56c771bb2f9ad3d43"},{"version":"921e01826c70c848d49098ea46561d08277bf04e126ec69a5b53e474f0d1ceb8","signature":"18e2ed308bb90cde2d3d2b4ed6de12abe41b6f73e321616176b7f258de3c2774"},"4a3605bef1a5ef29fd5a1696dd95b0b4e2259e2d07a4d88fac79f3a9765c44a2","370079895f1acdd4bb5194a403c85bf60cfbb2654bced9430a6c7210e7246be8","90240231e730deed31569f6c686766a538e4a024bbc33ea1738fe924f477ba61","552223520e823223ee13c5764e9b69b1819c985818a8bcda435d8d1dbd909bee","49b7c3ddd683c09aa437dd92681699387441f522524b14d2331ce494a9bf2f27","d35b5db21a04a45ae6323c4d4b25acc983dfe2870fc670fd05249eb19d839a5e","ae34b0761f88cf20e922e338970944f0e3abf193cfd4c5589bb03dddd3ca6fc0","72b129e625a479942a4f9e8a1bc12c45c09bbbf6ebae147418584441eb9fba18","5212dd78d1d63ab33332c8846a0ea5ce248159e74033cde16de48373036b4704","954b3c04ee9f94ca1e262f3e5a6e833b0da0066514b3d4b97b92b7f0c85f8700","a2fc9ce1ae5bed7068d701d8aeebf13321de0f42c217dc2e10f1622dcaa53a7f","8e81f220cb935d551e88cff11541d5e89d3a3494a52fe6247e98016a9dbd4c2d","6b2576a04253626ba41b7dc7ec5977bec07f3b6952b16249d9fa8a3a0d79901c","9de17491f2bfbccea92500e174079d53bdedae34dbebe5d4a12a06ab09814710","e88481085a8576fa52efc913e631c1a833d16179486469b8538d8c4fab2f7381","cc8c0bbe9fa2399c83e9f5492f82c55fe184380a371dd6fa462586c6563b054b","d71577e78c7a4257074aaf82f595724175210c89e8b467ef82f949a6cbd891bc","52e78315d331eeec07e0fabb68af969e7cdb28eafeeda17fca75897764a53f0b","c84146dbc9d2e5f43d2cbf15485a4eabf90219dbb66c0d481f20f12d3851bffc","99e58b8cfcc96db650fc7ee19e343d0a51bd3359dc149f7394448c17f191a545","c7bdf13966d47b3b3cf9de4ce1647184717579990cc7143602f02ab224e9bfc6","1caea122dbc7febedf852183deb445487389b9e5a45f7d882514d0b265a96b5d","4105fa0ecfaffb578c8051c3de22e8c984191aac8de14641ee99beed9c5e5bd9","2c19a03df944b85c8c7a77d1f2b1e77d5b26b50bde7e57debb6c1ed785e92f18","1bbbb729d5e059dd824378618907b92dab35947f0a76ecb538891b4d9f5cc0a7","b04614c3b8ee002251cd53eab5360ad5f4826b647ff7471880622862d5edc6d1","87bf184334d223bd9bfa40396fbf691a293107450007937da6939be5ff6f26c7","76b9fa1e321d1a3df90391e97234009ab3a36e55965a53a74038949994b8fb23","203ec8a834b94ec13b9ef098b53024571e1870435d766b9d3614de00591d97a4","44fa41130045a0256c73b8f94d0885d1a170063b543ddf7324293b21af4b18b6","dfd053ae7de29d5bba048fb6d2651caa16a5e4a8f5ed6fb8ebef19fa1c16702f","01a6506b8da0bc64906550a37f4a64acd1e75b0098c4abedcab122bdf5a71787","89346453b46aeb38468711a4880156f29b1eea4eab823bd53802965b3d3fc27d","b3817c7c3c5bb0e9b7eda3c5db73195f953b2369da71e2807218a86075ca31e5","fac83d4c6898d5bf90c508cc84409ded40fdc14611cf42d7fb750fb2c7847979","f08fe1c58de495300c4770cc782f7f1253db35942680427000bcc582b6adedf7","87294fac7de723d78ac6572f168446d0df2698259e7d88526493046df05cc103","75848e9f0cfb046e64bc8610b0b07e97288d340196a2d5bc6bcbf01e595a81d9",{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a",{"version":"613b21ccdf3be6329d56e6caa13b258c842edf8377be7bc9f014ed14cdcfc308","affectsGlobalScope":true},{"version":"2d1319e6b5d0efd8c5eae07eb864a00102151e8b9afddd2d45db52e9aae002c4","affectsGlobalScope":true},"4967529644e391115ca5592184d4b63980569adf60ee685f968fd59ab1557188","5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107",{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true},"4f0539c58717cbc8b73acb29f9e992ab5ff20adba5f9b57130691c7f9b186a4d","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0",{"version":"53eac70430b30089a3a1959d8306b0f9cfaf0de75224b68ef25243e0b5ad1ca3","affectsGlobalScope":true},"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7",{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true},"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb",{"version":"86956cc2eb9dd371d6fab493d326a574afedebf76eef3fa7833b8e0d9b52d6f1","affectsGlobalScope":true},"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393",{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true},"1ff5a53a58e756d2661b73ba60ffe274231a4432d21f7a2d0d9e4f6aa99f4283","1e289f30a48126935a5d408a91129a13a59c9b0f8c007a816f9f16ef821e144e","2ea254f944dfe131df1264d1fb96e4b1f7d110195b21f1f5dbb68fdd394e5518","5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6",{"version":"b11cb909327c874a4e81bfb390bf0d231e5bf9439052689ab80ba8afa50da17b","affectsGlobalScope":true},"23459c1915878a7c1e86e8bdb9c187cddd3aea105b8b1dfce512f093c969bc7e","b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0",{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true},{"version":"5f6f1d54779d0b9ed152b0516b0958cd34889764c1190434bbf18e7a8bb884cd","affectsGlobalScope":true},"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","f7b1df115dbd1b8522cba4f404a9f4fdcd5169e2137129187ffeee9d287e4fd1","b52d379b4939681f3781d1cfd5b2c3cbb35e7e76f2425172e165782f8a08228c","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633",{"version":"745c4240220559bd340c8aeb6e3c5270a709d3565e934dc22a69c304703956bc","affectsGlobalScope":true},"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada",{"version":"993985beef40c7d113f6dd8f0ba26eed63028b691fbfeb6a5b63f26408dd2c6d","affectsGlobalScope":true},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true},"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4",{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true},{"version":"cb094bb347d7df3380299eb69836c2c8758626ecf45917577707c03cf816b6f4","affectsGlobalScope":true},"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","b02784111b3fc9c38590cd4339ff8718f9329a6f4d3fd66e9744a1dcd1d7e191","ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a",{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true},"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","171fd8807643c46a9d17e843959abdf10480d57d60d38d061fb44a4c8d4a8cc4","05f95704d66f66f9368dc98d2da27016ed24ed11d521be55e32d167b88bc56fa","22672b675a503d25f875fe89500c7817e491b7a1d8fdedf3af06487333c372c4","6544dab49004fecb69a4ef775e9ad2773a6148b1f9bfd9b75508e3afa11f5d35","31778bd23d5e0f4172fa75dc794e3acac83535f4dba72c59ae1f6ac9c083db90","3d0e04c8ca3f41da5f3d689500d9c4aeb54a1c59764d66d58f0e579b9af720e5","1b14df9a230ac775a45bb7e8543ff7bc87e0d79ef08d93a6c9785cc5a9d7b4ec","66336b5a5d5e897e932cbf1e306ff8ac8a9929971409a8049c8c8a249cd8b57c","2e34b7e7c07624978db18b34c8a528928a7c24bc4b047add3e9d90bdc49e267f","1447d46bff9e7c5c77da14515a7456ea5e919ce6e28f5e6746edf99818e4be47","ba3f6f0ee47f46cdce55620aec5726de80e92a930982634afe9918c114c38f0b","6f38045547cdfd54ec19abcd943cace72c775fde739c5e0e1d917cf3030c16b5","929fc31f7523aaa1d19735b77e637af06e58d76007648ec088ecfbec1521cbfe","a6eb23f2a83113ce0ab7203bfda2be0888720f8d694a20abaef83b9f62832061","363dca5004ac5a3d9c2bba12812b97a64461911762f0b8f9320a8856ec53bcad","557b8c7481296f4b7ed362320f3bbb40bb87404edf880c81224f365a8d1e17f3","283ed3d075bf7d3e8793f63b2a52f475ed84d95b7b6351c5d5bcc6c49d4b845b","b499490bd2f0d602501eb24d4e91ccb2d7fdfd24acb86889d74d5f16ac15c4ca","e2dd36a524ea5b13de1ed104ede9cea79696588175c1df1940d6a29113a4aee0","ac63a01fcac70315fc9b416e9a57e568b18032c7cfcaa314e1751f03ef71286f","a878d4c7237a7af50e96534295fcf723134d70cbb1e9bfd8365266b912aee6ec",{"version":"9f2269ac40d987dbcd96cb66b5e95c84191fa493231500447fbe8c7306581b7a","signature":"7a6f74294b8fb90f5e3832be21e25898dd81b2a1adc36dda6929813ba4135311"},{"version":"a850c7c7cbec33cce8f7c4d86bb1a3eca2c6cf8159b5c939c627f826df88729d","signature":"8e2c0f6004b73b8627dc5f1adab1e83995b3fe14418ba3205cb7e1bd943d6391"},{"version":"260e3cfcb6466fed936185f16fce0bbb74157c9d102ab5ebb9056fbce11248d9","signature":"712829f2dee5d7965a05d1f8c89ee01147a29c6fa3b0a57fd0cc47bfb79da15a"},{"version":"bdd50cdd07f4258d1fdc043a251a94984ebe4ee93068162466ded27adc33be63","signature":"19d5c506af60eee0614a711900b27adcbd8c74a87dd1ebdf132824cd2bdc8a46"},"6d268309f0e15dd820b2df9806234166554cb4e2fe00d11737adcb4e5489f700","58cf96187feb10cc8ad3bb080871cd30888ef63bc5db131f11458850ef8f6245","9102986ff52326a2016e8cddc1cf3092f0808ac916dcc8dc2d2c7195cd181987","fa82b7b22d9df87323e31e9e2ad75911028f3e544647fd212424b3c4452fee3f","01f20dac9dc14f0d306e5d1215c5c1c3b4d1805905e60ae92fabac4031eae7da","9ceec2a882368c0160a8a3879aa0efce0fb985751fc23ff6191006030969cfa4","cad5d6451789234434c28dd2d6a8267b0d64c479b1ad267321faa31ba90d570b","6516fc98fa10b0cb22c7e332bacea4a7ea80257e113f6cdddd924d03bfde218e",{"version":"48366e28c99d9bf1ca5f56ac04a09627d854f2e93a7b7df591a64f0939918d91","signature":"0470dfceb45a3ee8c40862866cd096181d51abd1a732e696d417c3dfecd7fff8"},"de6166d1f3098af78fe1bd1206e875fd1f02b19eb6bef83431467aff80731380","4bc1b3495cfec279d9c4f1e01d9289d2a31b59bfcae9d59d0d1f944448e08805","180467ed987aa942e66b2673206debf3c42b25445184551dc3d35eebe5f4b5f5",{"version":"75320ce0ed230b7fa9564d9859eecd074ca9dfb021523053a6524400a7ad04d3","signature":"1b0848a7227df55a8f1581793ff1175e1bf2e8072a66b58b009e152cdeb8bf5f"},{"version":"469bfab5983ffaad57d3892bd641bbeef51cc22a2a5c625fe477a71cb7892237","signature":"3d2ec84143e6462a786b5d9ecf06f4f6f67a59a1f16c5a3a5e41721ba8478b7f"},{"version":"f4d339c6d4f42af75c07a83f9331f199bb7aaa1f3a69f385e6d5a3dee122055c","signature":"54c0cee351a71e3dda9d5a9cb001911dea9a79a21f584137bc62837596f7cf52"},{"version":"522e10241e3ce79bc590ef56a024b924dd8476545a6389b379d1cf7bc2ff57ed","signature":"dc0a8ad14d1e89a21617d6ae5c9831b7c0ee24e2e4234d30e4ac06b0f1453305"},{"version":"c63408d4049a801eaac21cb7f33e9569fe476789a346d0aa6cc37f2f96cbbdc1","signature":"4926996f86ff9d8813c57ae594ac1a035364b6781af72d1ea6fde72ede4e0b77"},"22dbb8d2e471ebd92f4cff56e2da114d95a5fda9b6330d88781eff9d9ec0187b","301f3adc8c06c98797d994c52155f0262379c9679bff79d2f8bfafcb9cbf06ac","46d4e51e1829cf6e65cc9e3b3fdf6bd2d8675d21e59cc844842fe2f116d6905a","5fb2dd2d8048bddd216fdcadc6aeb3f47d2d0da4e4374caca1206255190aa458","b6a849714aa5d748bdd9b5ff8ab5b4e74397af0d4da6ad5bb9139ff598f0c66d","ed686fb829b9aa0a50adfe3b00a7384b664f6c3f401ac08742fcd300c10ec774","b4dd619c32040d7b5b66406da35e574dcf859c97ece969536be3da371c42e954",{"version":"967bb94306ad1834cfa177be08327e75ece2206a87262cbb86a50a5d0d08b434","signature":"95da870a7865caf353ce23aed1dbae680d6eb4db79b1021f9cb89a229003b10e"},{"version":"0650ba609f255c9073f303c5c539e829af49a6e24dd0834e699cc0d8ac57b835","signature":"a130b3ec283a66bce78f48c90f975f8f62b95302b5179080777a01aaa1654f8a"},{"version":"473835df790841326bf6edc71b162c416f62d011ac8668deb8562eeb5529718a","signature":"c7d63988be1a1d9a2f52a140972155daabea1c7f7001f0fb192f7d24441c589d"},{"version":"02a35930188da4461e79118f7c01b5ec265be0995ab8bbc36b1bcf0b48703a0d","signature":"3f1370424c252aed11747282fc619f04497e426f63917bf2182fd46d51adc58a"},{"version":"e45610416055e40b9d03cef25fc383864f2135e6ba4190f1bbe18e8e26d45e80","signature":"5d40e6a7071d0d1e6e558e17214ff786ecb3ea73e31b25a88c2cbe2435fa1252"},{"version":"aee516f6d0dc90791e71c5a770f7b9e63e0324f853348539305854c1af2370aa","signature":"63af39c32770e76461a821b811cffda4589dccf43a80e0a8bf8c001fbf859e44"},"2e62dcedaa8462697341007b8e16c853753365cd44605b9e8bcfaa1859333ecf","a1fc7839eab0f7750fe72490136f4708aa30810ab17e9e8f46dd7ed74f7b0bfd","27799eccad07b9ef4958e109a7519cf8cbb76f6a6d8bbf3f94635767e9b80700","7783c20210ca970f8d127d92a1c27f05e3982268445188ab5861e2d0ee2d23f3",{"version":"8bd2501f538cb88f5160f36b43417e585ccccd2bff1688c41f4414353e6598c9","signature":"60cbc38a9b402c14c388a7254781752b279017b3adeb94b840dcbf4872a6a410"},{"version":"7eb2bbdb31d36ae85a7079c4408a10d31f1ca354bfc2a81e67a11135acba0ba3","signature":"96b8f393e636547f0477e387138cd7ca9a7c556343b89f446cfc5672dee5e643"},{"version":"fd9115ef3f5d80c55bcb064d87f2a6ea97d24dd17bbd2bd72fc612a9c2af409e","signature":"19abaee388559be69d2ee159285e1ca0cf96bc4295ffc1bb2b538c238271fdb4"},{"version":"018787b5d7144296a81635a25aaf612002d11a86173db0d4fe7257e8d4ec8e6c","signature":"ea4ef26e52f430420e55f8a2e2c8d57e8cd3ff3ab6ecf656b36bf7e8ab3df4e5"},{"version":"d8164e3251c7ad20b29a1784a6ca1e7c2cd53ce304d7c268c713f8cc07084509","signature":"346fb68f094e1885253f15078f4dd6aa62506448f132c4da444caa4d98707050"},{"version":"2e3b926e7912b8eb51c02044c1bc4a4199e291862ca8a260a519e0b978af29da","signature":"c367795c5d33accaeefe3d8c49fb78d0fbbc9a870cdfd8dbb1fc4308a9df216a"},{"version":"97a077612412e6a7dbd7b520a59edec51c5e3f19fa8a215b3c3fe9e3689c5261","signature":"5b23f0624768b920e23755e0c57bf277f68bcf79716181bd4b564a16af893134"},{"version":"7b249a1bc426695be76c06689b5f711920f1465562fc40bf147f48b7947f01bf","signature":"20484d8584c463c2d794dd7344824ea36d41b319a0dfa07545858228179504a1"},{"version":"3a8f3df76b5a0964c6d74fa64591e74d62b6f20bf43fa0bed7fe34fc430be841","signature":"81b07d43b2eba42e22864da2caf4d72cd2f113143c083418845875853fbb2acf"},{"version":"53c39c88557c8f4e7884e6460824e4f00a995a19d06eed319170ebc00811ef3d","signature":"36c3a0a131ab3f8d892242f19cc291193bf289865b9ec974fbc02d4cb357b33c"},{"version":"edcda5b0b7212e62832f3d1d8d11df3137428cfd7932a664f4d1bc30e52b925f","signature":"36e4719e3caf1f3d0560b44a2c65f0767f50f9f76b34cd209ce1e214f3a196ae"},{"version":"f55dc45816e4b823a8d0d94e1bffcc4ef4c2d86f7785b7d505da87a90fe1feae","signature":"15cb70e059aa59ce7e84b087e49dc05f3f51b6f56782d7c82f3893c0650bec16"},"b55599c3cb9f2494cb3a1a647d75dcea8e0f5d6b169547f63781e5564097b7d0","58ff317d61b47e8fc6688bd50e6770311691202553f119d1e1d79b64d864e200","27fc1335cfe16b8b015fbf9fba40cef2da9b0796b22ee0067f1a3e08a71a4d88",{"version":"a2993ea6faf324402fd9b5c78fb9f6eed0dd8892832c232759400a098fb56771","signature":"7334f6a829e4f040cc894230f01540adb235e63dd0878f90aa9eb010fdc680c1"},{"version":"bbf5c721fac546cdca3f11dd64b9301ad7751de6f36ad14c88f31b61dde4993e","signature":"54c0cee351a71e3dda9d5a9cb001911dea9a79a21f584137bc62837596f7cf52"},"130e4655e30a6d7a8004566642e24bf3016b5e5a2e5dcd72c0a61b663f7df711",{"version":"03174d1635e378b3e00b30e9655c4d63e6097ed66792b0228b5d1deec680c67a","signature":"6eeca08c33c5f8c3073c7d0ba3cd4ccd71a2481c3826fd384443747fb189b7f0"},{"version":"73bedfc9e9ce0adedd73b4e5acc523e5a31b7d31057428b6e8938ca83bd1a433","signature":"75cb2e5f0cc9a58cabe068671cc4c810e6192c178dd2a5e366d9395abcb3d2a4"},{"version":"eef204f061321360559bd19235ea32a9d55b3ec22a362cc78d14ef50d4db4490","affectsGlobalScope":true},{"version":"86e56d97b13ef0a58bc9c59aee782ae7d47d63802b5b32129ec5e5d62c20dbfa","affectsGlobalScope":true},{"version":"c1f79c6d85cd84518fd7349588b3c61bdc189f58e3866f925cbf4631c81e31f9","affectsGlobalScope":true},{"version":"54db406753da16e177f094aa66da79840f447de6d87ddd1543a80c9418c52545","affectsGlobalScope":true},{"version":"42f28f4cfca4a70bd89c1d55d76c7978275030b894f6793f36890265c11a83a4","affectsGlobalScope":true},{"version":"7cf1027da9599f056355b46bbea31dbf7f715f797dffb9cbb3402d4490c503e5","affectsGlobalScope":true},"96dbd0787b57ae02981d26d5f2441f0f8444fb46d7578c56527eab89cff13a7d",{"version":"94e5262ce465356e57ed09cb3ebca7869a9abec5434f52418374c01213365e1e","signature":"21b0def3259632886df82ec6bb39be4500d3509abafbe32208b43a246e66dbe0"},{"version":"ba866ea9b9909d8dd718f94ff767f873f5ffddfa2033201d246dd3dafa469169","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"75816b96acb93cb4724708c3d5a4d7e139b9625393192cc8c3226b6202f5962e","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"fbd9b5df26a7ad96d22343a33b8c69f849ba74af0dd2f6cd464fd0f9224775c1","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"7dd315f498be571653c71e8099f59b1647fa81faafa4c1de2048e4f0140ebe70","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"d9767fc448e4bdf3daba21bd7e37e89899c3e17755caed49856bcf9a84b61e36","signature":"cdcfc1351d2cd5b075bfaebfd4e91fdb6f2a97247b7ca7f159a1baf40fda20e1"},{"version":"a26b7068535b1f5376ec07e464944aee49e1bf3ac5ddd2c79fdbfd2fd0996695","signature":"f1f28b20d37dc56f9a182c3257dea1bbbafdf55a60fcd07dcd47ac91e2da4e99"},{"version":"5d7ee45a0fdc86ac617d9de7ae12e619706b288d7a192dd2e947dceb2c6d1098","signature":"6ce730d602a5296dbe73ea711da0d3858dc51b08c5324a61fd0b0af67835808d"},{"version":"261e13f98be5810529dfe80a2b4e09c81b617f1a7a53d18439ee845994bc076e","signature":"c6eeb6d3bcfd812f3648d25e1e0d52d345b166635cdec7a6943fba09e7131089"},{"version":"fe63afbd82a24bfd742bcc187facfb8f78e9019c3e2c753339159b66cc73bb51","signature":"883e3f88440334c59bf304ad28c8feea02afbc6bb9f703b21867b599d96d79ab"},{"version":"013713bcbabbcfff6df63cebe1539e6fc3fa600bd83d577e73bf1afd638d59f7","signature":"e0d6d5cc5f914afb7b847aac6d7ea47b35407c1837cf3fcd7e26f38990a7cb64"},{"version":"5c9850b407be5b7224eb5bed87c8f20b674a60deb20d63c8e2314d19135a32ef","signature":"63e9b00245c9a7d88b51ef16044a573075a8a9f3db866755c75fbc3c59a7ea45"},{"version":"3af094df229cfe0f00f8df09b39dd914e92c95fa860c7452a2b6f8567853e5c5","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"b98f9b8b497e99caa7efc305b8f2a1ca65d645939799ae2315e19996f320f7bf","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"f39413c8de9274b6211687c4eda71b76a01d82a227a4f33424d0429a16e0233b","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"96c4e6b62df28ba6155abac542d7c1b114927f658e5f6dafeb0ba784a784b7f4","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"2c38c5a35abace8b5753d25ad432308250cdd13137ce787fc83a72f58bb2b295","93c4ac34d56bf2680d729ce053ee25593de4b0f64c19e1e348e3d273cd56eb47",{"version":"6ae7a5f247b45667d99fcac77aa0b8f866626a29acd75f850159361794272a22","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"99cef30ce035fc34dd61e5d08b6ab80457522de8e7a42b1e9061d7ebb5465515","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"8d27e5f73b75340198b2df36f39326f693743e64006bd7b88a925a5f285df628","2c8e55457aaf4902941dfdba4061935922e8ee6e120539c9801cd7b400fae050","1c2cd862994b1fbed3cde0d1e8de47835ff112d197a3debfddf7b2ee3b2c52bc","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","9e0cf651e8e2c5b9bebbabdff2f7c6f8cedd91b1d9afcc0a854cdff053a88f1b","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","42baf4ca38c38deaf411ea73f37bc39ff56c6e5c761a968b64ac1b25c92b5cd8","d7dbe0ad36bdca8a6ecf143422a48e72cc8927bab7b23a1a2485c2f78a7022c6","8718fa41d7cf4aa91de4e8f164c90f88e0bf343aa92a1b9b725a9c675c64e16b","f992cd6cc0bcbaa4e6c810468c90f2d8595f8c6c3cf050c806397d3de8585562","fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","3eb11dbf3489064a47a2e1cf9d261b1f100ef0b3b50ffca6c44dd99d6dd81ac1","bc222163edcb8df6ba9b506d053d6c5afcae50e85695151cf4636a3107deaba9","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","fec943fdb3275eb6e006b35e04a8e2e99e9adf3f4b969ddf15315ac7575a93e4","742f21debb3937c3839a63245648238555bdab1ea095d43fd10c88a64029bf76","7cfdf3b9a5ba934a058bfc9390c074104dc7223b7e3c16fd5335206d789bc3d3","7220461ab7f6d600b313ce621346c315c3a0ebc65b5c6f268488c5c55b68d319","f90d4c1ae3af9afb35920b984ba3e41bdd43f0dc7bae890b89fbd52b978f0cac","fcf79300e5257a23ed3bacaa6861d7c645139c6f7ece134d15e6669447e5e6db","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","aa2c18a1b5a086bbcaae10a4efba409cc95ba7287d8cf8f2591b53704fea3dea","b88749bdb18fc1398370e33aa72bc4f88274118f4960e61ce26605f9b33c5ba2","0aaef8cded245bf5036a7a40b65622dd6c4da71f7a35343112edbe112b348a1e","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","a873c50d3e47c21aa09fbe1e2023d9a44efb07cc0cb8c72f418bf301b0771fd3","7c14ccd2eaa82619fffc1bfa877eb68a012e9fb723d07ee98db451fadb618906","288d992cd0d35fd4bb5a0f23df62114b8bfbc53e55b96a4ad00dde7e6fb72e31","df996e25faa505f85aeb294d15ebe61b399cf1d1e49959cdfaf2cc0815c203f9","4f6a12044ee6f458db11964153830abbc499e73d065c51c329ec97407f4b13dd","13e834b958fe7e9010d2161497f98916974a0618be7a773281a253a948da8b0d","dae5c8e0ca15779492744cb4071c5b3c94c2121940fbaefb43ca9a045557a0c9","0944f27ebff4b20646b71e7e3faaaae50a6debd40bc63e225de1320dd15c5795","5d30565583300c9256072a013ac0318cc603ff769b4c5cafc222394ea93963e1","8a7219b41d3c1c93f3f3b779146f313efade2404eeece88dcd366df7e2364977","a109c4289d59d9019cfe1eeab506fe57817ee549499b02a83a7e9d3bdf662d63","89121c1bf2990f5219bfd802a3e7fc557de447c62058d6af68d6b6348d64499a","d4a22007b481fe2a2e6bfd3a42c00cd62d41edb36d30fc4697df2692e9891fc8","8841e2aa774b89bd23302dede20663306dc1b9902431ac64b24be8b8d0e3f649","fbca5ffaebf282ec3cdac47b0d1d4a138a8b0bb32105251a38acb235087d3318",{"version":"29f72ec1289ae3aeda78bf14b38086d3d803262ac13904b400422941a26a3636","affectsGlobalScope":true},"62a8effc4dd17bbc2c05927b4ca5f67e73fdb458e203b128c041d0d70ffa6b55","d3213ac97e906cb1a935cf80061aacdb05a943a4d0316b469ab44565c34147f2","8b5402ae709d042c3530ed3506c135a967159f42aed3221267e70c5b7240b577","22293bd6fa12747929f8dfca3ec1684a3fe08638aa18023dd286ab337e88a592","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","7d8ddf0f021c53099e34ee831a06c394d50371816caa98684812f089b4c6b3d4","7d2a0ba1297be385a89b5515b88cd31b4a1eeef5236f710166dc1b36b1741e1b","6175dda01fddf3684d6261d97d169d86b024eceb2cc20041936c068789230f8f","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","4006c872e38a2c4e09c593bc0cdd32b7b4f5c4843910bea0def631c483fff6c5","ab6aa3a65d473871ee093e3b7b71ed0f9c69e07d1d4295f45c9efd91a771241d","41392155643024553ab15aa2074c7ed144958cbfe941aefcdfad119492985885","d9a256f69f3956993e65efd88336644be8f8dd36d149e859c14704ef6c6c0eec","eb15edfcef078300657e1d5d678e1944b3518c2dd8f26792fdba2fe29f73d32b","5aac5efd20619b522faeeb0badf250834850c605ad8c5fb91c6502a54057f413","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","74d5a87c3616cd5d8691059d531504403aa857e09cbaecb1c64dfb9ace0db185"],"root":[[64,66],[224,227],236,[240,244],[252,257],[262,273],277,278,280,281,[289,304],307,308],"options":{"allowJs":true,"checkJs":true,"composite":true,"declaration":true,"declarationMap":true,"emitDeclarationOnly":false,"esModuleInterop":true,"module":7,"noEmitOnError":true,"outDir":"./","removeComments":false,"skipLibCheck":true,"sourceMap":true,"strict":true,"stripInternal":true,"target":9},"fileIdsList":[[110,153,309],[110,153],[78,79,110,153],[78,110,153],[76,77,80,110,153],[84,110,153],[75,80,82,83,110,153],[80,82,84,110,153],[81,84,110,153],[110,153,237,245,248],[110,153,246],[110,153,245,247],[110,153,245,246,247],[110,153,245,247,250,274,275],[110,153,245,246,248,249,250],[110,153,237],[110,153,237,238],[110,153,309,310,311,312,313],[110,153,309,311],[110,153,165,168,196,203,315,316,317],[110,153,282],[110,153,319],[110,153,203],[110,153,166,203],[110,153,323],[110,153,324],[110,153,165,203],[110,153,329],[110,153,343],[110,153,331,333,334,335,336,337,338,339,340,341,342,343],[110,153,331,332,334,335,336,337,338,339,340,341,342,343],[110,153,332,333,334,335,336,337,338,339,340,341,342,343],[110,153,331,332,333,335,336,337,338,339,340,341,342,343],[110,153,331,332,333,334,336,337,338,339,340,341,342,343],[110,153,331,332,333,334,335,337,338,339,340,341,342,343],[110,153,331,332,333,334,335,336,338,339,340,341,342,343],[110,153,331,332,333,334,335,336,337,339,340,341,342,343],[110,153,331,332,333,334,335,336,337,338,340,341,342,343],[110,153,331,332,333,334,335,336,337,338,339,341,342,343],[110,153,331,332,333,334,335,336,337,338,339,340,342,343],[110,153,331,332,333,334,335,336,337,338,339,340,341,343],[110,153,331,332,333,334,335,336,337,338,339,340,341,342],[110,153,330,347],[110,153,348],[110,153,350],[110,153,346],[110,153,159,165,203,321],[110,150,153],[110,152,153],[110,153,158,188],[110,153,154,159,165,166,173,185,196],[110,153,154,155,165,173],[105,106,107,110,153],[110,153,156,197],[110,153,157,158,166,174],[110,153,158,185,193],[110,153,159,161,165,173],[110,152,153,160],[110,153,161,162],[110,153,165],[110,153,163,165],[110,152,153,165],[110,153,165,166,167,185,196],[110,153,165,166,167,180,185,188],[110,148,153,201],[110,148,153,161,165,168,173,185,196],[110,153,165,166,168,169,173,185,193,196],[110,153,168,170,185,193,196],[110,153,165,171],[110,153,172,196],[110,153,161,165,173,185],[110,153,174],[110,153,175],[110,152,153,176],[110,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],[110,153,178],[110,153,179],[110,153,165,180,181],[110,153,180,182,197,199],[110,153,165,185,186,187,188],[110,153,185,187],[110,153,185,186],[110,153,188],[110,153,189],[110,150,153,185],[110,153,165,191,192],[110,153,191,192],[110,153,158,173,185,193],[110,153,194],[153],[108,109,110,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],[110,153,173,195],[110,153,168,179,196],[110,153,158,197],[110,153,185,198],[110,153,172,199],[110,153,200],[110,153,158,165,167,176,185,196,199,201],[110,153,185,202],[110,153,168,185,203],[110,153,361,400],[110,153,361,385,400],[110,153,400],[110,153,361],[110,153,361,386,400],[110,153,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399],[110,153,386,400],[110,153,401],[110,153,165,168,170,185,193,196,202,203],[110,153,410],[110,153,165,185,203],[110,153,282,283,284,285,286,287],[110,153,305],[110,153,282,283],[67,110,153],[110,153,206],[110,153,206,213,214,219],[70,71,110,153],[70,110,153],[68,110,153],[110,153,212],[69,110,153],[69,110,153,208],[110,153,208],[110,153,216],[71,110,153,208,215,216,217,218],[67,68,69,70,110,153,212],[67,68,69,110,153],[110,153,235],[110,153,228],[72,110,153,228],[110,153,228,229,230,231,232,233,234],[72,110,153,235],[110,153,221],[110,153,219,220],[110,120,124,153,196],[110,120,153,185,196],[110,115,153],[110,117,120,153,193,196],[110,153,173,193],[110,115,153,203],[110,117,120,153,173,196],[110,112,113,116,119,153,165,185,196],[110,120,127,153],[110,112,118,153],[110,120,141,142,153],[110,116,120,153,188,196,203],[110,141,153,203],[110,114,115,153,203],[110,120,153],[110,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,153],[110,120,135,153],[110,120,127,128,153],[110,118,120,128,129,153],[110,119,153],[110,112,115,120,153],[110,120,124,128,129,153],[110,124,153],[110,118,120,123,153,196],[110,112,117,120,127,153],[110,153,185],[110,115,120,141,153,201,203],[110,153,211,222,266,267],[110,153,158,211,222,267],[110,153,269],[65,110,153,266],[65,110,153,158],[66,110,153,241,257,262],[110,153,205,210,211,223,224,255,264,266],[110,153,158,205,224],[71,72,110,153,205,207,208,209,210,225,227,257],[72,110,153,224,276],[72,110,153,158,211,222,223,224],[110,153,205,225,226],[110,153,255],[110,153,205,208,219,224,227,236,244,254,255,256],[66,110,153,205,211,222,224],[72,110,153],[72,110,153,205,222,224,241,244,266],[72,110,153,158,197,205,222,224,241,244],[71,72,110,153,205,207,208,210,242],[110,153,205,208,222,223,224,236,239,240,242,243],[64,72,110,153,251,264,279],[64,72,110,153,158,251],[71,72,110,153,205,207,208,209,210,252,254,257],[110,153,205,251,253],[110,153,205,239,258,259,260,261],[110,153,205,237],[110,153,211,222],[110,153,265],[64,110,153],[110,153,158],[110,153,205,207,210,241,257,262,288,289],[110,153,222],[110,153,224],[110,153,197,222],[110,153,222,263,288],[72,110,153,205,222,227,257,263,288,295,300],[110,153,255,257,288,294],[110,153,224,257,288,297],[72,110,153,205,208,222,224,236,239,243,244,257,263,288,289,298,300,306],[72,110,153,205,222,236,252,254,257,263,288,296],[110,153,241,288],[110,153,264,288],[110,153,268,288],[72,74,85,86,110,153,205],[74,84,86,110,153],[72,74,84,85,110,153,205],[71,87,110,153,205],[73,74,79,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,110,153,204],[69,71,72,110,153],[86,110,153],[87,89,110,153],[69,71,73,110,153],[74,84,110,153],[74,87,110,153,205],[73,74,84,110,153],[72,73,74,86,89,101,110,153],[72,73,110,153],[72,85,86,110,153,205],[74,86,110,153],[79,84,86,89,96,110,153,205],[267],[269],[66,241,257,262],[224,255],[224],[71,72,205,208],[72,224],[205],[255],[205,208,219,224,255,256],[72,235],[72],[72,224,241,244],[205,208,224],[265],[158]],"referencedMap":[[311,1],[309,2],[80,3],[77,4],[76,4],[78,5],[83,6],[84,7],[75,6],[81,8],[82,9],[249,10],[247,11],[274,12],[250,13],[246,2],[275,2],[245,2],[248,13],[276,14],[251,15],[238,16],[258,16],[259,17],[239,17],[260,17],[237,2],[314,18],[310,1],[312,19],[313,1],[318,20],[283,21],[287,21],[285,21],[282,2],[320,22],[321,23],[322,24],[316,2],[323,2],[324,25],[325,26],[326,2],[327,2],[328,27],[329,2],[330,28],[344,29],[345,29],[332,30],[333,31],[331,32],[334,33],[335,34],[336,35],[337,36],[338,37],[339,38],[340,39],[341,40],[342,41],[343,42],[348,43],[349,44],[351,45],[346,2],[347,46],[352,2],[353,2],[354,2],[319,2],[355,47],[356,2],[357,23],[150,48],[151,48],[152,49],[153,50],[154,51],[155,52],[105,2],[108,53],[106,2],[107,2],[156,54],[157,55],[158,56],[159,57],[160,58],[161,59],[162,59],[164,60],[163,61],[165,62],[166,63],[167,64],[149,65],[168,66],[169,67],[170,68],[171,69],[172,70],[173,71],[174,72],[175,73],[176,74],[177,75],[178,76],[179,77],[180,78],[181,78],[182,79],[183,2],[184,2],[185,80],[187,81],[186,82],[188,83],[189,84],[190,85],[191,86],[192,87],[193,88],[194,89],[110,90],[109,2],[203,91],[195,92],[196,93],[197,94],[198,95],[199,96],[200,97],[201,98],[202,99],[358,2],[359,2],[317,100],[360,2],[385,101],[386,102],[361,103],[364,103],[383,101],[384,101],[374,101],[373,104],[371,101],[366,101],[379,101],[377,101],[381,101],[365,101],[378,101],[382,101],[367,101],[368,101],[380,101],[362,101],[369,101],[370,101],[372,101],[376,101],[387,105],[375,101],[363,101],[400,106],[399,2],[394,105],[396,107],[395,105],[388,105],[389,105],[391,105],[393,105],[397,107],[398,107],[390,107],[392,107],[402,108],[401,2],[403,2],[404,2],[405,2],[406,2],[350,2],[407,2],[408,109],[409,23],[410,2],[411,110],[412,111],[288,112],[306,113],[111,2],[286,21],[284,114],[101,2],[85,2],[315,60],[206,115],[207,116],[261,116],[67,2],[220,117],[68,118],[215,2],[71,119],[212,120],[213,121],[214,121],[208,122],[216,123],[209,124],[69,2],[279,125],[219,126],[218,127],[70,128],[217,2],[79,2],[228,129],[231,130],[232,130],[229,131],[230,130],[235,132],[233,133],[234,129],[305,2],[62,2],[63,2],[11,2],[12,2],[15,2],[14,2],[2,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[23,2],[3,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[8,2],[52,2],[49,2],[50,2],[51,2],[53,2],[9,2],[54,2],[55,2],[56,2],[59,2],[57,2],[58,2],[60,2],[61,2],[10,2],[1,2],[13,2],[72,2],[211,2],[210,2],[222,134],[223,134],[221,135],[127,136],[137,137],[126,136],[147,138],[118,139],[117,140],[146,23],[140,141],[145,142],[120,143],[134,144],[119,145],[143,146],[115,147],[114,23],[144,148],[116,149],[121,150],[122,2],[125,150],[112,2],[148,151],[138,152],[129,153],[130,154],[132,155],[128,156],[131,157],[141,23],[123,158],[124,159],[133,160],[113,161],[136,152],[135,150],[139,2],[142,162],[268,163],[269,164],[270,165],[267,2],[64,2],[271,166],[66,167],[65,2],[263,168],[273,169],[255,170],[226,171],[277,172],[225,173],[227,174],[272,175],[257,176],[224,2],[256,177],[236,133],[240,178],[278,179],[242,180],[243,181],[244,182],[280,183],[252,184],[253,185],[254,186],[262,187],[241,188],[264,189],[266,190],[281,191],[265,192],[290,193],[294,175],[295,2],[289,2],[296,194],[297,2],[298,195],[299,194],[300,196],[301,197],[302,198],[303,199],[304,200],[307,201],[308,202],[291,203],[292,204],[293,205],[98,206],[99,207],[86,208],[88,209],[104,2],[89,2],[204,27],[205,210],[73,211],[90,212],[100,213],[74,214],[87,215],[91,216],[92,217],[102,218],[103,219],[93,2],[94,212],[96,220],[95,221],[97,222]],"exportedModulesMap":[[311,1],[309,2],[80,3],[77,4],[76,4],[78,5],[83,6],[84,7],[75,6],[81,8],[82,9],[249,10],[247,11],[274,12],[250,13],[246,2],[275,2],[245,2],[248,13],[276,14],[251,15],[238,16],[258,16],[259,17],[239,17],[260,17],[237,2],[314,18],[310,1],[312,19],[313,1],[318,20],[283,21],[287,21],[285,21],[282,2],[320,22],[321,23],[322,24],[316,2],[323,2],[324,25],[325,26],[326,2],[327,2],[328,27],[329,2],[330,28],[344,29],[345,29],[332,30],[333,31],[331,32],[334,33],[335,34],[336,35],[337,36],[338,37],[339,38],[340,39],[341,40],[342,41],[343,42],[348,43],[349,44],[351,45],[346,2],[347,46],[352,2],[353,2],[354,2],[319,2],[355,47],[356,2],[357,23],[150,48],[151,48],[152,49],[153,50],[154,51],[155,52],[105,2],[108,53],[106,2],[107,2],[156,54],[157,55],[158,56],[159,57],[160,58],[161,59],[162,59],[164,60],[163,61],[165,62],[166,63],[167,64],[149,65],[168,66],[169,67],[170,68],[171,69],[172,70],[173,71],[174,72],[175,73],[176,74],[177,75],[178,76],[179,77],[180,78],[181,78],[182,79],[183,2],[184,2],[185,80],[187,81],[186,82],[188,83],[189,84],[190,85],[191,86],[192,87],[193,88],[194,89],[110,90],[109,2],[203,91],[195,92],[196,93],[197,94],[198,95],[199,96],[200,97],[201,98],[202,99],[358,2],[359,2],[317,100],[360,2],[385,101],[386,102],[361,103],[364,103],[383,101],[384,101],[374,101],[373,104],[371,101],[366,101],[379,101],[377,101],[381,101],[365,101],[378,101],[382,101],[367,101],[368,101],[380,101],[362,101],[369,101],[370,101],[372,101],[376,101],[387,105],[375,101],[363,101],[400,106],[399,2],[394,105],[396,107],[395,105],[388,105],[389,105],[391,105],[393,105],[397,107],[398,107],[390,107],[392,107],[402,108],[401,2],[403,2],[404,2],[405,2],[406,2],[350,2],[407,2],[408,109],[409,23],[410,2],[411,110],[412,111],[288,112],[306,113],[111,2],[286,21],[284,114],[101,2],[85,2],[315,60],[206,115],[207,116],[261,116],[67,2],[220,117],[68,118],[215,2],[71,119],[212,120],[213,121],[214,121],[208,122],[216,123],[209,124],[69,2],[279,125],[219,126],[218,127],[70,128],[217,2],[79,2],[228,129],[231,130],[232,130],[229,131],[230,130],[235,132],[233,133],[234,129],[305,2],[62,2],[63,2],[11,2],[12,2],[15,2],[14,2],[2,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[23,2],[3,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[8,2],[52,2],[49,2],[50,2],[51,2],[53,2],[9,2],[54,2],[55,2],[56,2],[59,2],[57,2],[58,2],[60,2],[61,2],[10,2],[1,2],[13,2],[72,2],[211,2],[210,2],[222,134],[223,134],[221,135],[127,136],[137,137],[126,136],[147,138],[118,139],[117,140],[146,23],[140,141],[145,142],[120,143],[134,144],[119,145],[143,146],[115,147],[114,23],[144,148],[116,149],[121,150],[122,2],[125,150],[112,2],[148,151],[138,152],[129,153],[130,154],[132,155],[128,156],[131,157],[141,23],[123,158],[124,159],[133,160],[113,161],[136,152],[135,150],[139,2],[142,162],[268,223],[269,223],[270,224],[263,225],[273,226],[255,227],[226,228],[277,229],[225,229],[227,230],[272,231],[257,232],[256,227],[236,233],[240,234],[278,235],[242,235],[243,228],[244,236],[280,234],[252,234],[253,228],[254,230],[266,237],[265,238],[294,231],[298,227],[98,206],[99,207],[86,208],[88,209],[104,2],[89,2],[204,27],[205,210],[73,211],[90,212],[100,213],[74,214],[87,215],[91,216],[92,217],[102,218],[103,219],[93,2],[94,212],[96,220],[95,221],[97,222]],"semanticDiagnosticsPerFile":[311,309,80,77,76,78,83,84,75,81,82,249,247,274,250,246,275,245,248,276,251,238,258,259,239,260,237,314,310,312,313,318,283,287,285,282,320,321,322,316,323,324,325,326,327,328,329,330,344,345,332,333,331,334,335,336,337,338,339,340,341,342,343,348,349,351,346,347,352,353,354,319,355,356,357,150,151,152,153,154,155,105,108,106,107,156,157,158,159,160,161,162,164,163,165,166,167,149,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,186,188,189,190,191,192,193,194,110,109,203,195,196,197,198,199,200,201,202,358,359,317,360,385,386,361,364,383,384,374,373,371,366,379,377,381,365,378,382,367,368,380,362,369,370,372,376,387,375,363,400,399,394,396,395,388,389,391,393,397,398,390,392,402,401,403,404,405,406,350,407,408,409,410,411,412,288,306,111,286,284,101,85,315,206,207,261,67,220,68,215,71,212,213,214,208,216,209,69,279,219,218,70,217,79,228,231,232,229,230,235,233,234,305,62,63,11,12,15,14,2,16,17,18,19,20,21,22,23,3,24,4,25,29,26,27,28,30,31,32,5,33,34,35,36,6,40,37,38,39,41,7,42,47,48,43,44,45,46,8,52,49,50,51,53,9,54,55,56,59,57,58,60,61,10,1,13,72,211,210,222,223,221,127,137,126,147,118,117,146,140,145,120,134,119,143,115,114,144,116,121,122,125,112,148,138,129,130,132,128,131,141,123,124,133,113,136,135,139,142,268,269,270,267,64,271,66,65,263,273,255,226,277,225,227,272,257,224,256,236,240,278,242,243,244,280,252,253,254,262,241,264,266,281,265,290,294,295,289,296,297,298,299,300,301,302,303,304,307,308,291,292,293,98,99,86,88,104,89,204,205,73,90,100,74,87,91,92,102,103,93,94,96,95,97],"latestChangedDtsFile":"./test/keys/secp256k1.spec.d.ts"},"version":"5.4.5"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/dist/typedoc-urls.json b/node_modules/@libp2p/crypto/dist/typedoc-urls.json
deleted file mode 100644
index 82ae22b..0000000
--- a/node_modules/@libp2p/crypto/dist/typedoc-urls.json
+++ /dev/null
@@ -1,34 +0,0 @@
-{
-  "create": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.ciphers.AES_GCM.create.html",
-  "HMAC": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_crypto.hmac.HMAC.html",
-  "./hmac:HMAC": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_crypto.hmac.HMAC.html",
-  "./hmac:create": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.hmac.create.html",
-  "pbkdf2": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.index.pbkdf2.html",
-  "randomBytes": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.index.randomBytes.html",
-  "ECDHKey": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_crypto.keys.ECDHKey.html",
-  "ECDHKeyPair": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_crypto.keys.ECDHKeyPair.html",
-  "EnhancedKey": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_crypto.keys.EnhancedKey.html",
-  "EnhancedKeyPair": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_crypto.keys.EnhancedKeyPair.html",
-  "Curve": "https://libp2p.github.io/js-libp2p/types/_libp2p_crypto.keys.Curve.html",
-  "generateEphemeralKeyPair": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.generateEphemeralKeyPair.html",
-  "generateKeyPair": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.generateKeyPair.html",
-  "./keys:generateKeyPair": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.generateKeyPair.html",
-  "generateKeyPairFromSeed": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.generateKeyPairFromSeed.html",
-  "./keys:generateKeyPairFromSeed": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.generateKeyPairFromSeed.html",
-  "keyStretcher": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.keyStretcher.html",
-  "privateKeyFromProtobuf": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.privateKeyFromProtobuf.html",
-  "./keys:privateKeyFromProtobuf": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.privateKeyFromProtobuf.html",
-  "privateKeyFromRaw": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.privateKeyFromRaw.html",
-  "./keys:privateKeyFromRaw": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.privateKeyFromRaw.html",
-  "privateKeyToProtobuf": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.privateKeyToProtobuf.html",
-  "./keys:privateKeyToProtobuf": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.privateKeyToProtobuf.html",
-  "publicKeyFromMultihash": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.publicKeyFromMultihash.html",
-  "./keys:publicKeyFromMultihash": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.publicKeyFromMultihash.html",
-  "publicKeyFromProtobuf": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.publicKeyFromProtobuf.html",
-  "./keys:publicKeyFromProtobuf": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.publicKeyFromProtobuf.html",
-  "publicKeyFromRaw": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.publicKeyFromRaw.html",
-  "./keys:publicKeyFromRaw": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.publicKeyFromRaw.html",
-  "publicKeyToProtobuf": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.publicKeyToProtobuf.html",
-  "./keys:publicKeyToProtobuf": "https://libp2p.github.io/js-libp2p/functions/_libp2p_crypto.keys.publicKeyToProtobuf.html",
-  "default": "https://libp2p.github.io/js-libp2p/variables/_libp2p_crypto.webcrypto.default.html"
-}
\ No newline at end of file
diff --git a/node_modules/@libp2p/crypto/src/keys/index.ts b/node_modules/@libp2p/crypto/src/keys/index.ts
index 88ebdc7..f8aa289 100644
--- a/node_modules/@libp2p/crypto/src/keys/index.ts
+++ b/node_modules/@libp2p/crypto/src/keys/index.ts
@@ -15,6 +15,7 @@ import { pkcs1ToRSAPrivateKey, pkixToRSAPublicKey, generateRSAKeyPair } from './
 import { generateSecp256k1KeyPair, unmarshalSecp256k1PrivateKey, unmarshalSecp256k1PublicKey } from './secp256k1/utils.js'
 import type { PrivateKey, PublicKey, KeyType, RSAPrivateKey, Secp256k1PrivateKey, Ed25519PrivateKey, Secp256k1PublicKey, Ed25519PublicKey } from '@libp2p/interface'
 import type { MultihashDigest } from 'multiformats'
+import type { Digest } from 'multiformats/hashes/digest'
 
 export { generateEphemeralKeyPair } from './ecdh/index.js'
 export type { Curve } from './ecdh/index.js'
@@ -61,15 +62,21 @@ export async function generateKeyPairFromSeed (type: string, seed: Uint8Array):
 }
 
 /**
- * Converts a protobuf serialized public key into its representative object
+ * Converts a protobuf serialized public key into its representative object.
+ *
+ * For RSA public keys optionally pass the multihash digest of the public key if
+ * it is known. If the digest is omitted it will be calculated which can be
+ * expensive.
+ *
+ * For other key types the digest option is ignored.
  */
-export function publicKeyFromProtobuf (buf: Uint8Array): PublicKey {
+export function publicKeyFromProtobuf (buf: Uint8Array, digest?: Digest<18, number>): PublicKey {
   const { Type, Data } = pb.PublicKey.decode(buf)
   const data = Data ?? new Uint8Array()
 
   switch (Type) {
     case pb.KeyType.RSA:
-      return pkixToRSAPublicKey(data)
+      return pkixToRSAPublicKey(data, digest)
     case pb.KeyType.Ed25519:
       return unmarshalEd25519PublicKey(data)
     case pb.KeyType.secp256k1:
diff --git a/node_modules/@libp2p/crypto/src/keys/rsa/der.ts b/node_modules/@libp2p/crypto/src/keys/rsa/der.ts
new file mode 100644
index 0000000..e2f2626
--- /dev/null
+++ b/node_modules/@libp2p/crypto/src/keys/rsa/der.ts
@@ -0,0 +1,212 @@
+import { Uint8ArrayList } from 'uint8arraylist'
+
+interface Context {
+  offset: number
+}
+
+const TAG_MASK = parseInt('11111', 2)
+const LONG_LENGTH_MASK = parseInt('10000000', 2)
+const LONG_LENGTH_BYTES_MASK = parseInt('01111111', 2)
+
+interface Decoder {
+  (buf: Uint8Array, context: Context): any
+}
+
+const decoders: Record<number, Decoder> = {
+  0x2: readInteger,
+  0x3: readBitString,
+  0x5: readNull,
+  0x6: readObjectIdentifier,
+  0x10: readSequence,
+  0x16: readSequence,
+  0x30: readSequence
+}
+
+export function decodeDer (buf: Uint8Array, context: Context = { offset: 0 }): any {
+  const tag = buf[context.offset] & TAG_MASK
+  context.offset++
+
+  if (decoders[tag] != null) {
+    return decoders[tag](buf, context)
+  }
+
+  throw new Error('No decoder for tag ' + tag)
+}
+
+function readLength (buf: Uint8Array, context: Context): number {
+  let length = 0
+
+  if ((buf[context.offset] & LONG_LENGTH_MASK) === LONG_LENGTH_MASK) {
+    // long length
+    const count = buf[context.offset] & LONG_LENGTH_BYTES_MASK
+    let str = '0x'
+    context.offset++
+
+    for (let i = 0; i < count; i++, context.offset++) {
+      str += buf[context.offset].toString(16).padStart(2, '0')
+    }
+
+    length = parseInt(str, 16)
+  } else {
+    length = buf[context.offset]
+    context.offset++
+  }
+
+  return length
+}
+
+function readSequence (buf: Uint8Array, context: Context): any[] {
+  readLength(buf, context)
+  const entries: any[] = []
+
+  while (true) {
+    if (context.offset >= buf.byteLength) {
+      break
+    }
+
+    const result = decodeDer(buf, context)
+
+    if (result === null) {
+      break
+    }
+
+    entries.push(result)
+  }
+
+  return entries
+}
+
+function readInteger (buf: Uint8Array, context: Context): Uint8Array {
+  const length = readLength(buf, context)
+  const start = context.offset
+  const end = context.offset + length
+
+  const vals: number[] = []
+
+  for (let i = start; i < end; i++) {
+    if (i === start && buf[i] === 0) {
+      continue
+    }
+
+    vals.push(buf[i])
+  }
+
+  context.offset += length
+
+  return Uint8Array.from(vals)
+}
+
+function readObjectIdentifier (buf: Uint8Array, context: Context): string[] {
+  const count = readLength(buf, context)
+
+  // skip OID
+  context.offset += count
+
+  return ['oid-unimplemented']
+}
+
+function readNull (buf: Uint8Array, context: Context): null {
+  context.offset++
+
+  return null
+}
+
+function readBitString (buf: Uint8Array, context: Context): any {
+  const length = readLength(buf, context)
+  const unusedBits = buf[context.offset]
+  context.offset++
+  const bytes = buf.subarray(context.offset, context.offset + length)
+  context.offset += length
+
+  if (unusedBits !== 0) {
+    // need to shift all bytes along by this many bits
+    throw new Error('Unused bits in bit string is unimplemented')
+  }
+
+  return decodeDer(bytes, {
+    offset: 0
+  })
+}
+
+function encodeNumber (value: number): Uint8ArrayList {
+  let number = value.toString(16)
+
+  if (number.length % 2 === 1) {
+    number = '0' + number
+  }
+
+  const array = new Uint8ArrayList()
+
+  for (let i = 0; i < number.length; i += 2) {
+    array.append(Uint8Array.from([parseInt(`${number[i]}${number[i + 1]}`, 16)]))
+  }
+
+  return array
+}
+
+function encodeLength (bytes: { byteLength: number }): Uint8Array | Uint8ArrayList {
+  if (bytes.byteLength < 128) {
+    return Uint8Array.from([bytes.byteLength])
+  }
+
+  // long length
+  const length = encodeNumber(bytes.byteLength)
+
+  return new Uint8ArrayList(
+    Uint8Array.from([
+      length.byteLength | LONG_LENGTH_MASK
+    ]),
+    length
+  )
+}
+
+export function encodeInteger (value: Uint8Array | Uint8ArrayList): Uint8ArrayList {
+  const contents = new Uint8ArrayList()
+
+  const mask = parseInt('10000000', 2)
+  const positive = (value.subarray()[0] & mask) === mask
+
+  if (positive) {
+    contents.append(Uint8Array.from([0]))
+  }
+
+  contents.append(value)
+
+  return new Uint8ArrayList(
+    Uint8Array.from([0x02]),
+    encodeLength(contents),
+    contents
+  )
+}
+
+export function encodeBitString (value: Uint8Array | Uint8ArrayList): Uint8ArrayList {
+  // unused bits is always 0 with full-byte-only values
+  const unusedBits = Uint8Array.from([0])
+
+  const contents = new Uint8ArrayList(
+    unusedBits,
+    value
+  )
+
+  return new Uint8ArrayList(
+    Uint8Array.from([0x03]),
+    encodeLength(contents),
+    contents
+  )
+}
+
+export function encodeSequence (values: Array<Uint8Array | Uint8ArrayList>): Uint8ArrayList {
+  const output = new Uint8ArrayList()
+
+  for (const buf of values) {
+    output.append(
+      buf
+    )
+  }
+
+  return new Uint8ArrayList(
+    Uint8Array.from([0x30]),
+    encodeLength(output),
+    output
+  )
+}
diff --git a/node_modules/@libp2p/crypto/src/keys/rsa/utils.ts b/node_modules/@libp2p/crypto/src/keys/rsa/utils.ts
index c3de1aa..7cdc9bc 100644
--- a/node_modules/@libp2p/crypto/src/keys/rsa/utils.ts
+++ b/node_modules/@libp2p/crypto/src/keys/rsa/utils.ts
@@ -1,150 +1,106 @@
 import { InvalidParametersError, InvalidPublicKeyError } from '@libp2p/interface'
 import { sha256 } from '@noble/hashes/sha256'
-import * as asn1js from 'asn1js'
 import { create } from 'multiformats/hashes/digest'
 import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
 import { toString as uint8ArrayToString } from 'uint8arrays/to-string'
 import * as pb from '../keys.js'
+import { decodeDer, encodeBitString, encodeInteger, encodeSequence } from './der.js'
 import { RSAPrivateKey as RSAPrivateKeyClass, RSAPublicKey as RSAPublicKeyClass } from './rsa.js'
 import { generateRSAKey, rsaKeySize } from './index.js'
 import type { JWKKeyPair } from '../interface.js'
 import type { RSAPrivateKey, RSAPublicKey } from '@libp2p/interface'
+import type { Digest } from 'multiformats/hashes/digest'
 
 export const MAX_RSA_KEY_SIZE = 8192
 const SHA2_256_CODE = 0x12
+const MAX_RSA_JWK_SIZE = 1062
+
+const RSA_ALGORITHM_IDENTIFIER = Uint8Array.from([
+  0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05, 0x00
+])
 
 /**
- * Convert a PKCS#1 in ASN1 DER format to a JWK key
+ * Convert a PKCS#1 in ASN1 DER format to a JWK private key
  */
 export function pkcs1ToJwk (bytes: Uint8Array): JsonWebKey {
-  const { result } = asn1js.fromBER(bytes)
-
-  // @ts-expect-error this looks fragile but DER is a canonical format so we are
-  // safe to have deeply property chains like this
-  const values: asn1js.Integer[] = result.valueBlock.value
-
-  const key = {
-    n: asn1jsIntegerToBase64(values[1]),
-    e: asn1jsIntegerToBase64(values[2]),
-    d: asn1jsIntegerToBase64(values[3]),
-    p: asn1jsIntegerToBase64(values[4]),
-    q: asn1jsIntegerToBase64(values[5]),
-    dp: asn1jsIntegerToBase64(values[6]),
-    dq: asn1jsIntegerToBase64(values[7]),
-    qi: asn1jsIntegerToBase64(values[8]),
-    kty: 'RSA',
-    alg: 'RS256'
-  }
+  const values = decodeDer(bytes)
 
-  return key
+  return {
+    n: uint8ArrayToString(values[1], 'base64url'),
+    e: uint8ArrayToString(values[2], 'base64url'),
+    d: uint8ArrayToString(values[3], 'base64url'),
+    p: uint8ArrayToString(values[4], 'base64url'),
+    q: uint8ArrayToString(values[5], 'base64url'),
+    dp: uint8ArrayToString(values[6], 'base64url'),
+    dq: uint8ArrayToString(values[7], 'base64url'),
+    qi: uint8ArrayToString(values[8], 'base64url'),
+    kty: 'RSA'
+  }
 }
 
 /**
- * Convert a JWK key into PKCS#1 in ASN1 DER format
+ * Convert a JWK private key into PKCS#1 in ASN1 DER format
  */
 export function jwkToPkcs1 (jwk: JsonWebKey): Uint8Array {
   if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {
     throw new InvalidParametersError('JWK was missing components')
   }
 
-  const root = new asn1js.Sequence({
-    value: [
-      new asn1js.Integer({ value: 0 }),
-      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),
-      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url'))),
-      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.d, 'base64url'))),
-      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.p, 'base64url'))),
-      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.q, 'base64url'))),
-      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dp, 'base64url'))),
-      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dq, 'base64url'))),
-      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.qi, 'base64url')))
-    ]
-  })
-
-  const der = root.toBER()
-
-  return new Uint8Array(der, 0, der.byteLength)
+  return encodeSequence([
+    encodeInteger(Uint8Array.from([0])),
+    encodeInteger(uint8ArrayFromString(jwk.n, 'base64url')),
+    encodeInteger(uint8ArrayFromString(jwk.e, 'base64url')),
+    encodeInteger(uint8ArrayFromString(jwk.d, 'base64url')),
+    encodeInteger(uint8ArrayFromString(jwk.p, 'base64url')),
+    encodeInteger(uint8ArrayFromString(jwk.q, 'base64url')),
+    encodeInteger(uint8ArrayFromString(jwk.dp, 'base64url')),
+    encodeInteger(uint8ArrayFromString(jwk.dq, 'base64url')),
+    encodeInteger(uint8ArrayFromString(jwk.qi, 'base64url'))
+  ]).subarray()
 }
 
 /**
- * Convert a PKIX in ASN1 DER format to a JWK key
+ * Convert a PKIX in ASN1 DER format to a JWK public key
  */
 export function pkixToJwk (bytes: Uint8Array): JsonWebKey {
-  const { result } = asn1js.fromBER(bytes)
-
-  // @ts-expect-error this looks fragile but DER is a canonical format so we are
-  // safe to have deeply property chains like this
-  const values: asn1js.Integer[] = result.valueBlock.value[1].valueBlock.value[0].valueBlock.value
+  const decoded = decodeDer(bytes, {
+    offset: 0
+  })
 
+  // this looks fragile but DER is a canonical format so we are safe to have
+  // deeply property chains like this
   return {
     kty: 'RSA',
-    n: asn1jsIntegerToBase64(values[0]),
-    e: asn1jsIntegerToBase64(values[1])
+    n: uint8ArrayToString(
+      decoded[1][0],
+      'base64url'
+    ),
+    e: uint8ArrayToString(
+      decoded[1][1],
+      'base64url'
+    )
   }
 }
 
 /**
- * Convert a JWK key to PKIX in ASN1 DER format
+ * Convert a JWK public key to PKIX in ASN1 DER format
  */
 export function jwkToPkix (jwk: JsonWebKey): Uint8Array {
   if (jwk.n == null || jwk.e == null) {
     throw new InvalidParametersError('JWK was missing components')
   }
 
-  const root = new asn1js.Sequence({
-    value: [
-      new asn1js.Sequence({
-        value: [
-          // rsaEncryption
-          new asn1js.ObjectIdentifier({
-            value: '1.2.840.113549.1.1.1'
-          }),
-          new asn1js.Null()
-        ]
-      }),
-      // this appears to be a bug in asn1js.js - this should really be a Sequence
-      // and not a BitString but it generates the same bytes as node-forge so 🤷‍♂️
-      new asn1js.BitString({
-        valueHex: new asn1js.Sequence({
-          value: [
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),
-            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url')))
-          ]
-        }).toBER()
-      })
-    ]
-  })
-
-  const der = root.toBER()
-
-  return new Uint8Array(der, 0, der.byteLength)
-}
-
-function asn1jsIntegerToBase64 (int: asn1js.Integer): string {
-  let buf = int.valueBlock.valueHexView
-
-  // chrome rejects values with leading 0s
-  while (buf[0] === 0) {
-    buf = buf.subarray(1)
-  }
-
-  return uint8ArrayToString(buf, 'base64url')
-}
-
-function bufToBn (u8: Uint8Array): bigint {
-  const hex: string[] = []
-
-  u8.forEach(function (i) {
-    let h = i.toString(16)
-
-    if (h.length % 2 > 0) {
-      h = `0${h}`
-    }
-
-    hex.push(h)
-  })
-
-  return BigInt('0x' + hex.join(''))
+  const subjectPublicKeyInfo = encodeSequence([
+    RSA_ALGORITHM_IDENTIFIER,
+    encodeBitString(
+      encodeSequence([
+        encodeInteger(uint8ArrayFromString(jwk.n, 'base64url')),
+        encodeInteger(uint8ArrayFromString(jwk.e, 'base64url'))
+      ])
+    )
+  ])
+
+  return subjectPublicKeyInfo.subarray()
 }
 
 /**
@@ -159,18 +115,20 @@ export function pkcs1ToRSAPrivateKey (bytes: Uint8Array): RSAPrivateKey {
 /**
  * Turn PKIX bytes to a PublicKey
  */
-export function pkixToRSAPublicKey (bytes: Uint8Array): RSAPublicKey {
-  const jwk = pkixToJwk(bytes)
-
-  if (rsaKeySize(jwk) > MAX_RSA_KEY_SIZE) {
+export function pkixToRSAPublicKey (bytes: Uint8Array, digest?: Digest<18, number>): RSAPublicKey {
+  if (bytes.byteLength >= MAX_RSA_JWK_SIZE) {
     throw new InvalidPublicKeyError('Key size is too large')
   }
 
-  const hash = sha256(pb.PublicKey.encode({
-    Type: pb.KeyType.RSA,
-    Data: bytes
-  }))
-  const digest = create(SHA2_256_CODE, hash)
+  const jwk = pkixToJwk(bytes)
+
+  if (digest == null) {
+    const hash = sha256(pb.PublicKey.encode({
+      Type: pb.KeyType.RSA,
+      Data: bytes
+    }))
+    digest = create(SHA2_256_CODE, hash)
+  }
 
   return new RSAPublicKeyClass(jwk, digest)
 }
