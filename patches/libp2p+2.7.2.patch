diff --git a/node_modules/libp2p/dist/index.min.js b/node_modules/libp2p/dist/index.min.js
index bb6d21a..9593ba4 100644
--- a/node_modules/libp2p/dist/index.min.js
+++ b/node_modules/libp2p/dist/index.min.js
@@ -1,9 +1,9 @@
 (function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2P = factory()}(typeof self !== 'undefined' ? self : this, function () {
-"use strict";var Libp2P=(()=>{var Dm=Object.create;var qs=Object.defineProperty;var Rm=Object.getOwnPropertyDescriptor;var Mm=Object.getOwnPropertyNames;var Om=Object.getPrototypeOf,Um=Object.prototype.hasOwnProperty;var wt=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),De=(r,e)=>{for(var t in e)qs(r,t,{get:e[t],enumerable:!0})},mf=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Mm(e))!Um.call(r,s)&&s!==t&&qs(r,s,{get:()=>e[s],enumerable:!(n=Rm(e,s))||n.enumerable});return r};var Hr=(r,e,t)=>(t=r!=null?Dm(Om(r)):{},mf(e||!r||!r.__esModule?qs(t,"default",{value:r,enumerable:!0}):t,r)),Fm=r=>mf(qs({},"__esModule",{value:!0}),r);var xd=wt(an=>{"use strict";var ay="[object ArrayBuffer]",Bt=class r{static isArrayBuffer(e){return Object.prototype.toString.call(e)===ay}static toArrayBuffer(e){return this.isArrayBuffer(e)?e:e.byteLength===e.buffer.byteLength||e.byteOffset===0&&e.byteLength===e.buffer.byteLength?e.buffer:this.toUint8Array(e.buffer).slice(e.byteOffset,e.byteOffset+e.byteLength).buffer}static toUint8Array(e){return this.toView(e,Uint8Array)}static toView(e,t){if(e.constructor===t)return e;if(this.isArrayBuffer(e))return new t(e);if(this.isArrayBufferView(e))return new t(e.buffer,e.byteOffset,e.byteLength);throw new TypeError("The provided value is not of type '(ArrayBuffer or ArrayBufferView)'")}static isBufferSource(e){return this.isArrayBufferView(e)||this.isArrayBuffer(e)}static isArrayBufferView(e){return ArrayBuffer.isView(e)||e&&this.isArrayBuffer(e.buffer)}static isEqual(e,t){let n=r.toUint8Array(e),s=r.toUint8Array(t);if(n.length!==s.byteLength)return!1;for(let o=0;o<n.length;o++)if(n[o]!==s[o])return!1;return!0}static concat(...e){let t;Array.isArray(e[0])&&!(e[1]instanceof Function)||Array.isArray(e[0])&&e[1]instanceof Function?t=e[0]:e[e.length-1]instanceof Function?t=e.slice(0,e.length-1):t=e;let n=0;for(let i of t)n+=i.byteLength;let s=new Uint8Array(n),o=0;for(let i of t){let a=this.toUint8Array(i);s.set(a,o),o+=a.length}return e[e.length-1]instanceof Function?this.toView(s,e[e.length-1]):s.buffer}},gl="string",cy=/^[0-9a-f\s]+$/i,ly=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,uy=/^[a-zA-Z0-9-_]+$/,Ao=class{static fromString(e){let t=unescape(encodeURIComponent(e)),n=new Uint8Array(t.length);for(let s=0;s<t.length;s++)n[s]=t.charCodeAt(s);return n.buffer}static toString(e){let t=Bt.toUint8Array(e),n="";for(let o=0;o<t.length;o++)n+=String.fromCharCode(t[o]);return decodeURIComponent(escape(n))}},Ze=class{static toString(e,t=!1){let n=Bt.toArrayBuffer(e),s=new DataView(n),o="";for(let i=0;i<n.byteLength;i+=2){let a=s.getUint16(i,t);o+=String.fromCharCode(a)}return o}static fromString(e,t=!1){let n=new ArrayBuffer(e.length*2),s=new DataView(n);for(let o=0;o<e.length;o++)s.setUint16(o*2,e.charCodeAt(o),t);return n}},So=class r{static isHex(e){return typeof e===gl&&cy.test(e)}static isBase64(e){return typeof e===gl&&ly.test(e)}static isBase64Url(e){return typeof e===gl&&uy.test(e)}static ToString(e,t="utf8"){let n=Bt.toUint8Array(e);switch(t.toLowerCase()){case"utf8":return this.ToUtf8String(n);case"binary":return this.ToBinary(n);case"hex":return this.ToHex(n);case"base64":return this.ToBase64(n);case"base64url":return this.ToBase64Url(n);case"utf16le":return Ze.toString(n,!0);case"utf16":case"utf16be":return Ze.toString(n);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromString(e,t="utf8"){if(!e)return new ArrayBuffer(0);switch(t.toLowerCase()){case"utf8":return this.FromUtf8String(e);case"binary":return this.FromBinary(e);case"hex":return this.FromHex(e);case"base64":return this.FromBase64(e);case"base64url":return this.FromBase64Url(e);case"utf16le":return Ze.fromString(e,!0);case"utf16":case"utf16be":return Ze.fromString(e);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToBase64(e){let t=Bt.toUint8Array(e);if(typeof btoa<"u"){let n=this.ToString(t,"binary");return btoa(n)}else return Buffer.from(t).toString("base64")}static FromBase64(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isBase64(t))throw new TypeError("Argument 'base64Text' is not Base64 encoded");return typeof atob<"u"?this.FromBinary(atob(t)):new Uint8Array(Buffer.from(t,"base64")).buffer}static FromBase64Url(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isBase64Url(t))throw new TypeError("Argument 'base64url' is not Base64Url encoded");return this.FromBase64(this.Base64Padding(t.replace(/\-/g,"+").replace(/\_/g,"/")))}static ToBase64Url(e){return this.ToBase64(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")}static FromUtf8String(e,t=r.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.FromBinary(e);case"utf8":return Ao.fromString(e);case"utf16":case"utf16be":return Ze.fromString(e);case"utf16le":case"usc2":return Ze.fromString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToUtf8String(e,t=r.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.ToBinary(e);case"utf8":return Ao.toString(e);case"utf16":case"utf16be":return Ze.toString(e);case"utf16le":case"usc2":return Ze.toString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromBinary(e){let t=e.length,n=new Uint8Array(t);for(let s=0;s<t;s++)n[s]=e.charCodeAt(s);return n.buffer}static ToBinary(e){let t=Bt.toUint8Array(e),n="";for(let s=0;s<t.length;s++)n+=String.fromCharCode(t[s]);return n}static ToHex(e){let t=Bt.toUint8Array(e),n="",s=t.length;for(let o=0;o<s;o++){let i=t[o];i<16&&(n+="0"),n+=i.toString(16)}return n}static FromHex(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isHex(t))throw new TypeError("Argument 'hexString' is not HEX encoded");t.length%2&&(t=`0${t}`);let n=new Uint8Array(t.length/2);for(let s=0;s<t.length;s=s+2){let o=t.slice(s,s+2);n[s/2]=parseInt(o,16)}return n.buffer}static ToUtf16String(e,t=!1){return Ze.toString(e,t)}static FromUtf16String(e,t=!1){return Ze.fromString(e,t)}static Base64Padding(e){let t=4-e.length%4;if(t<4)for(let n=0;n<t;n++)e+="=";return e}static formatString(e){return e?.replace(/[\n\r\t ]/g,"")||""}};So.DEFAULT_UTF8_ENCODING="utf8";function fy(r,...e){let t=arguments[0];for(let n=1;n<arguments.length;n++){let s=arguments[n];for(let o in s)t[o]=s[o]}return t}function dy(...r){let e=r.map(s=>s.byteLength).reduce((s,o)=>s+o),t=new Uint8Array(e),n=0;return r.map(s=>new Uint8Array(s)).forEach(s=>{for(let o of s)t[n++]=o}),t.buffer}function hy(r,e){if(!(r&&e)||r.byteLength!==e.byteLength)return!1;let t=new Uint8Array(r),n=new Uint8Array(e);for(let s=0;s<r.byteLength;s++)if(t[s]!==n[s])return!1;return!0}an.BufferSourceConverter=Bt;an.Convert=So;an.assign=fy;an.combine=dy;an.isEqual=hy});var Mh=wt((cA,Nl)=>{"use strict";var My=Object.prototype.hasOwnProperty,Ve="~";function ws(){}Object.create&&(ws.prototype=Object.create(null),new ws().__proto__||(Ve=!1));function Oy(r,e,t){this.fn=r,this.context=e,this.once=t||!1}function Rh(r,e,t,n,s){if(typeof t!="function")throw new TypeError("The listener must be a function");var o=new Oy(t,n||r,s),i=Ve?Ve+e:e;return r._events[i]?r._events[i].fn?r._events[i]=[r._events[i],o]:r._events[i].push(o):(r._events[i]=o,r._eventsCount++),r}function yi(r,e){--r._eventsCount===0?r._events=new ws:delete r._events[e]}function Le(){this._events=new ws,this._eventsCount=0}Le.prototype.eventNames=function(){var e=[],t,n;if(this._eventsCount===0)return e;for(n in t=this._events)My.call(t,n)&&e.push(Ve?n.slice(1):n);return Object.getOwnPropertySymbols?e.concat(Object.getOwnPropertySymbols(t)):e};Le.prototype.listeners=function(e){var t=Ve?Ve+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var s=0,o=n.length,i=new Array(o);s<o;s++)i[s]=n[s].fn;return i};Le.prototype.listenerCount=function(e){var t=Ve?Ve+e:e,n=this._events[t];return n?n.fn?1:n.length:0};Le.prototype.emit=function(e,t,n,s,o,i){var a=Ve?Ve+e:e;if(!this._events[a])return!1;var c=this._events[a],l=arguments.length,u,f;if(c.fn){switch(c.once&&this.removeListener(e,c.fn,void 0,!0),l){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,t),!0;case 3:return c.fn.call(c.context,t,n),!0;case 4:return c.fn.call(c.context,t,n,s),!0;case 5:return c.fn.call(c.context,t,n,s,o),!0;case 6:return c.fn.call(c.context,t,n,s,o,i),!0}for(f=1,u=new Array(l-1);f<l;f++)u[f-1]=arguments[f];c.fn.apply(c.context,u)}else{var d=c.length,m;for(f=0;f<d;f++)switch(c[f].once&&this.removeListener(e,c[f].fn,void 0,!0),l){case 1:c[f].fn.call(c[f].context);break;case 2:c[f].fn.call(c[f].context,t);break;case 3:c[f].fn.call(c[f].context,t,n);break;case 4:c[f].fn.call(c[f].context,t,n,s);break;default:if(!u)for(m=1,u=new Array(l-1);m<l;m++)u[m-1]=arguments[m];c[f].fn.apply(c[f].context,u)}}return!0};Le.prototype.on=function(e,t,n){return Rh(this,e,t,n,!1)};Le.prototype.once=function(e,t,n){return Rh(this,e,t,n,!0)};Le.prototype.removeListener=function(e,t,n,s){var o=Ve?Ve+e:e;if(!this._events[o])return this;if(!t)return yi(this,o),this;var i=this._events[o];if(i.fn)i.fn===t&&(!s||i.once)&&(!n||i.context===n)&&yi(this,o);else{for(var a=0,c=[],l=i.length;a<l;a++)(i[a].fn!==t||s&&!i[a].once||n&&i[a].context!==n)&&c.push(i[a]);c.length?this._events[o]=c.length===1?c[0]:c:yi(this,o)}return this};Le.prototype.removeAllListeners=function(e){var t;return e?(t=Ve?Ve+e:e,this._events[t]&&yi(this,t)):(this._events=new ws,this._eventsCount=0),this};Le.prototype.off=Le.prototype.removeListener;Le.prototype.addListener=Le.prototype.on;Le.prefixed=Ve;Le.EventEmitter=Le;typeof Nl<"u"&&(Nl.exports=Le)});var Hh=wt((LA,Vh)=>{Vh.exports=function(r){if(!r)throw Error("hashlru must have a max value, of type number, greater than 0");var e=0,t=Object.create(null),n=Object.create(null);function s(o,i){t[o]=i,e++,e>=r&&(e=0,n=t,t=Object.create(null))}return{has:function(o){return t[o]!==void 0||n[o]!==void 0},remove:function(o){t[o]!==void 0&&(t[o]=void 0),n[o]!==void 0&&(n[o]=void 0)},get:function(o){var i=t[o];if(i!==void 0)return i;if((i=n[o])!==void 0)return s(o,i),i},set:function(o,i){t[o]!==void 0?t[o]=i:s(o,i)},clear:function(){t=Object.create(null),n=Object.create(null)}}}});var op=wt((s_,sp)=>{"use strict";sp.exports=r=>{if(Object.prototype.toString.call(r)!=="[object Object]")return!1;let e=Object.getPrototypeOf(r);return e===null||e===Object.prototype}});var fp=wt((lp,up)=>{"use strict";var Bi=op(),{hasOwnProperty:ap}=Object.prototype,{propertyIsEnumerable:cw}=Object,vn=(r,e,t)=>Object.defineProperty(r,e,{value:t,writable:!0,enumerable:!0,configurable:!0}),lw=lp,ip={concatArrays:!1,ignoreUndefined:!1},ki=r=>{let e=[];for(let t in r)ap.call(r,t)&&e.push(t);if(Object.getOwnPropertySymbols){let t=Object.getOwnPropertySymbols(r);for(let n of t)cw.call(r,n)&&e.push(n)}return e};function En(r){return Array.isArray(r)?uw(r):Bi(r)?fw(r):r}function uw(r){let e=r.slice(0,0);return ki(r).forEach(t=>{vn(e,t,En(r[t]))}),e}function fw(r){let e=Object.getPrototypeOf(r)===null?Object.create(null):{};return ki(r).forEach(t=>{vn(e,t,En(r[t]))}),e}var cp=(r,e,t,n)=>(t.forEach(s=>{typeof e[s]>"u"&&n.ignoreUndefined||(s in r&&r[s]!==Object.getPrototypeOf(r)?vn(r,s,nu(r[s],e[s],n)):vn(r,s,En(e[s])))}),r),dw=(r,e,t)=>{let n=r.slice(0,0),s=0;return[r,e].forEach(o=>{let i=[];for(let a=0;a<o.length;a++)ap.call(o,a)&&(i.push(String(a)),o===r?vn(n,s++,o[a]):vn(n,s++,En(o[a])));n=cp(n,o,ki(o).filter(a=>!i.includes(a)),t)}),n};function nu(r,e,t){return t.concatArrays&&Array.isArray(r)&&Array.isArray(e)?dw(r,e,t):!Bi(e)||!Bi(r)?En(e):cp(r,e,ki(e),t)}up.exports=function(...r){let e=nu(En(ip),this!==lw&&this||{},ip),t={_:{}};for(let n of r)if(n!==void 0){if(!Bi(n))throw new TypeError("`"+n+"` is not an Option Object");t=nu(t,{_:n},e)}return t._}});var Op=wt(ks=>{(function(){var r,e,t,n,s,o,i,a;a=function(c){var l,u,f,d;return l=(c&255<<24)>>>24,u=(c&255<<16)>>>16,f=(c&65280)>>>8,d=c&255,[l,u,f,d].join(".")},i=function(c){var l,u,f,d,m,p;for(l=[],f=d=0;d<=3&&c.length!==0;f=++d){if(f>0){if(c[0]!==".")throw new Error("Invalid IP");c=c.substring(1)}p=e(c),m=p[0],u=p[1],c=c.substring(u),l.push(m)}if(c.length!==0)throw new Error("Invalid IP");switch(l.length){case 1:if(l[0]>4294967295)throw new Error("Invalid IP");return l[0]>>>0;case 2:if(l[0]>255||l[1]>16777215)throw new Error("Invalid IP");return(l[0]<<24|l[1])>>>0;case 3:if(l[0]>255||l[1]>255||l[2]>65535)throw new Error("Invalid IP");return(l[0]<<24|l[1]<<16|l[2])>>>0;case 4:if(l[0]>255||l[1]>255||l[2]>255||l[3]>255)throw new Error("Invalid IP");return(l[0]<<24|l[1]<<16|l[2]<<8|l[3])>>>0;default:throw new Error("Invalid IP")}},t=function(c){return c.charCodeAt(0)},n=t("0"),o=t("a"),s=t("A"),e=function(c){var l,u,f,d,m;for(d=0,l=10,u="9",f=0,c.length>1&&c[f]==="0"&&(c[f+1]==="x"||c[f+1]==="X"?(f+=2,l=16):"0"<=c[f+1]&&c[f+1]<="9"&&(f++,l=8,u="7")),m=f;f<c.length;){if("0"<=c[f]&&c[f]<=u)d=d*l+(t(c[f])-n)>>>0;else if(l===16)if("a"<=c[f]&&c[f]<="f")d=d*l+(10+t(c[f])-o)>>>0;else if("A"<=c[f]&&c[f]<="F")d=d*l+(10+t(c[f])-s)>>>0;else break;else break;if(d>4294967295)throw new Error("too large");f++}if(f===m)throw new Error("empty octet");return[d,f]},r=function(){function c(l,u){var f,d,m,p;if(typeof l!="string")throw new Error("Missing `net' parameter");if(u||(p=l.split("/",2),l=p[0],u=p[1]),u||(u=32),typeof u=="string"&&u.indexOf(".")>-1){try{this.maskLong=i(u)}catch(g){throw f=g,new Error("Invalid mask: "+u)}for(d=m=32;m>=0;d=--m)if(this.maskLong===4294967295<<32-d>>>0){this.bitmask=d;break}}else if(u||u===0)this.bitmask=parseInt(u,10),this.maskLong=0,this.bitmask>0&&(this.maskLong=4294967295<<32-this.bitmask>>>0);else throw new Error("Invalid mask: empty");try{this.netLong=(i(l)&this.maskLong)>>>0}catch(g){throw f=g,new Error("Invalid net address: "+l)}if(!(this.bitmask<=32))throw new Error("Invalid mask for ip4: "+u);this.size=Math.pow(2,32-this.bitmask),this.base=a(this.netLong),this.mask=a(this.maskLong),this.hostmask=a(~this.maskLong),this.first=this.bitmask<=30?a(this.netLong+1):this.base,this.last=this.bitmask<=30?a(this.netLong+this.size-2):a(this.netLong+this.size-1),this.broadcast=this.bitmask<=30?a(this.netLong+this.size-1):void 0}return c.prototype.contains=function(l){return typeof l=="string"&&(l.indexOf("/")>0||l.split(".").length!==4)&&(l=new c(l)),l instanceof c?this.contains(l.base)&&this.contains(l.broadcast||l.last):(i(l)&this.maskLong)>>>0===(this.netLong&this.maskLong)>>>0},c.prototype.next=function(l){return l==null&&(l=1),new c(a(this.netLong+this.size*l),this.mask)},c.prototype.forEach=function(l){var u,f,d;for(d=i(this.first),f=i(this.last),u=0;d<=f;)l(a(d),d,u),u++,d++},c.prototype.toString=function(){return this.base+"/"+this.bitmask},c}(),ks.ip2long=i,ks.long2ip=a,ks.Netmask=r}).call(ks)});var lm=wt((Ek,cm)=>{function Ye(r,e){typeof e=="boolean"&&(e={forever:e}),this._originalTimeouts=JSON.parse(JSON.stringify(r)),this._timeouts=r,this._options=e||{},this._maxRetryTime=e&&e.maxRetryTime||1/0,this._fn=null,this._errors=[],this._attempts=1,this._operationTimeout=null,this._operationTimeoutCb=null,this._timeout=null,this._operationStart=null,this._timer=null,this._options.forever&&(this._cachedTimeouts=this._timeouts.slice(0))}cm.exports=Ye;Ye.prototype.reset=function(){this._attempts=1,this._timeouts=this._originalTimeouts.slice(0)};Ye.prototype.stop=function(){this._timeout&&clearTimeout(this._timeout),this._timer&&clearTimeout(this._timer),this._timeouts=[],this._cachedTimeouts=null};Ye.prototype.retry=function(r){if(this._timeout&&clearTimeout(this._timeout),!r)return!1;var e=new Date().getTime();if(r&&e-this._operationStart>=this._maxRetryTime)return this._errors.push(r),this._errors.unshift(new Error("RetryOperation timeout occurred")),!1;this._errors.push(r);var t=this._timeouts.shift();if(t===void 0)if(this._cachedTimeouts)this._errors.splice(0,this._errors.length-1),t=this._cachedTimeouts.slice(-1);else return!1;var n=this;return this._timer=setTimeout(function(){n._attempts++,n._operationTimeoutCb&&(n._timeout=setTimeout(function(){n._operationTimeoutCb(n._attempts)},n._operationTimeout),n._options.unref&&n._timeout.unref()),n._fn(n._attempts)},t),this._options.unref&&this._timer.unref(),!0};Ye.prototype.attempt=function(r,e){this._fn=r,e&&(e.timeout&&(this._operationTimeout=e.timeout),e.cb&&(this._operationTimeoutCb=e.cb));var t=this;this._operationTimeoutCb&&(this._timeout=setTimeout(function(){t._operationTimeoutCb()},t._operationTimeout)),this._operationStart=new Date().getTime(),this._fn(this._attempts)};Ye.prototype.try=function(r){console.log("Using RetryOperation.try() is deprecated"),this.attempt(r)};Ye.prototype.start=function(r){console.log("Using RetryOperation.start() is deprecated"),this.attempt(r)};Ye.prototype.start=Ye.prototype.try;Ye.prototype.errors=function(){return this._errors};Ye.prototype.attempts=function(){return this._attempts};Ye.prototype.mainError=function(){if(this._errors.length===0)return null;for(var r={},e=null,t=0,n=0;n<this._errors.length;n++){var s=this._errors[n],o=s.message,i=(r[o]||0)+1;r[o]=i,i>=t&&(e=s,t=i)}return e}});var um=wt(Ur=>{var $b=lm();Ur.operation=function(r){var e=Ur.timeouts(r);return new $b(e,{forever:r&&(r.forever||r.retries===1/0),unref:r&&r.unref,maxRetryTime:r&&r.maxRetryTime})};Ur.timeouts=function(r){if(r instanceof Array)return[].concat(r);var e={retries:10,factor:2,minTimeout:1*1e3,maxTimeout:1/0,randomize:!1};for(var t in r)e[t]=r[t];if(e.minTimeout>e.maxTimeout)throw new Error("minTimeout is greater than maxTimeout");for(var n=[],s=0;s<e.retries;s++)n.push(this.createTimeout(s,e));return r&&r.forever&&!n.length&&n.push(this.createTimeout(s,e)),n.sort(function(o,i){return o-i}),n};Ur.createTimeout=function(r,e){var t=e.randomize?Math.random()+1:1,n=Math.round(t*Math.max(e.minTimeout,1)*Math.pow(e.factor,r));return n=Math.min(n,e.maxTimeout),n};Ur.wrap=function(r,e,t){if(e instanceof Array&&(t=e,e=null),!t){t=[];for(var n in r)typeof r[n]=="function"&&t.push(n)}for(var s=0;s<t.length;s++){var o=t[s],i=r[o];r[o]=function(c){var l=Ur.operation(e),u=Array.prototype.slice.call(arguments,1),f=u.pop();u.push(function(d){l.retry(d)||(d&&(arguments[0]=l.mainError()),f.apply(this,arguments))}),l.attempt(function(){c.apply(r,u)})}.bind(r,i),r[o].options=e}}});var dm=wt((Sk,fm)=>{fm.exports=um()});var gx={};De(gx,{createLibp2p:()=>mx});var gf=Symbol.for("@libp2p/connection");var rc=Symbol.for("@libp2p/content-routing");var nc=Symbol.for("@libp2p/peer-discovery");var zs=Symbol.for("@libp2p/peer-id");function Gs(r){return!!r?.[zs]}var sc=Symbol.for("@libp2p/peer-routing");var oc="keep-alive";var Sx=Symbol.for("@libp2p/transport");var Ft;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(Ft||(Ft={}));var Je=class extends Error{static name="AbortError";constructor(e="The operation was aborted"){super(e),this.name="AbortError"}};var D=class extends Error{static name="InvalidParametersError";constructor(e="Invalid parameters"){super(e),this.name="InvalidParametersError"}},Kr=class extends Error{static name="InvalidPublicKeyError";constructor(e="Invalid public key"){super(e),this.name="InvalidPublicKeyError"}},On=class extends Error{static name="InvalidPrivateKeyError";constructor(e="Invalid private key"){super(e),this.name="InvalidPrivateKeyError"}};var Ws=class extends Error{static name="ConnectionClosingError";constructor(e="The connection is closing"){super(e),this.name="ConnectionClosingError"}},$r=class extends Error{static name="ConnectionClosedError";constructor(e="The connection is closed"){super(e),this.name="ConnectionClosedError"}};var js=class extends Error{static name="NotFoundError";constructor(e="Not found"){super(e),this.name="NotFoundError"}},qr=class extends Error{static name="InvalidPeerIdError";constructor(e="Invalid PeerID"){super(e),this.name="InvalidPeerIdError"}},Vt=class extends Error{static name="InvalidMultiaddrError";constructor(e="Invalid multiaddr"){super(e),this.name="InvalidMultiaddrError"}},Zs=class extends Error{static name="InvalidCIDError";constructor(e="Invalid CID"){super(e),this.name="InvalidCIDError"}},Xs=class extends Error{static name="InvalidMultihashError";constructor(e="Invalid Multihash"){super(e),this.name="InvalidMultihashError"}},Un=class extends Error{static name="UnsupportedProtocolError";constructor(e="Unsupported protocol error"){super(e),this.name="UnsupportedProtocolError"}},Ys=class extends Error{static name="InvalidMessageError";constructor(e="Invalid message"){super(e),this.name="InvalidMessageError"}};var Js=class extends Error{static name="TimeoutError";constructor(e="Timed out"){super(e),this.name="TimeoutError"}},bt=class extends Error{static name="NotStartedError";constructor(e="Not started"){super(e),this.name="NotStartedError"}};var zr=class extends Error{static name="DialError";constructor(e="Dial error"){super(e),this.name="DialError"}};var Gr=class extends Error{static name="LimitedConnectionError";constructor(e="Limited connection"){super(e),this.name="LimitedConnectionError"}},Qs=class extends Error{static name="TooManyInboundProtocolStreamsError";constructor(e="Too many inbound protocol streams"){super(e),this.name="TooManyInboundProtocolStreamsError"}},eo=class extends Error{static name="TooManyOutboundProtocolStreamsError";constructor(e="Too many outbound protocol streams"){super(e),this.name="TooManyOutboundProtocolStreamsError"}},Ht=class extends Error{static name="UnsupportedKeyTypeError";constructor(e="Unsupported key type"){super(e),this.name="UnsupportedKeyTypeError"}};var xt=class extends EventTarget{#e=new Map;constructor(){super()}listenerCount(e){let t=this.#e.get(e);return t==null?0:t.length}addEventListener(e,t,n){super.addEventListener(e,t,n);let s=this.#e.get(e);s==null&&(s=[],this.#e.set(e,s)),s.push({callback:t,once:(n!==!0&&n!==!1&&n?.once)??!1})}removeEventListener(e,t,n){super.removeEventListener(e.toString(),t??null,n);let s=this.#e.get(e);s!=null&&(s=s.filter(({callback:o})=>o!==t),this.#e.set(e,s))}dispatchEvent(e){let t=super.dispatchEvent(e),n=this.#e.get(e.type);return n==null||(n=n.filter(({once:s})=>!s),this.#e.set(e.type,n)),t}safeDispatchEvent(e,t={}){return this.dispatchEvent(new CustomEvent(e,t))}};function to(r){return r!=null&&typeof r.start=="function"&&typeof r.stop=="function"}async function yf(...r){let e=[];for(let t of r)to(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStart!=null&&await t.beforeStart()})),await Promise.all(e.map(async t=>{await t.start()})),await Promise.all(e.map(async t=>{t.afterStart!=null&&await t.afterStart()}))}async function wf(...r){let e=[];for(let t of r)to(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStop!=null&&await t.beforeStop()})),await Promise.all(e.map(async t=>{await t.stop()})),await Promise.all(e.map(async t=>{t.afterStop!=null&&await t.afterStop()}))}var Fn=Symbol.for("@libp2p/service-capabilities"),ic=Symbol.for("@libp2p/service-dependencies");var fc={};De(fc,{base58btc:()=>X,base58flickr:()=>zm});var Yx=new Uint8Array(0);function bf(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function vt(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function xf(r){return new TextEncoder().encode(r)}function vf(r){return new TextDecoder().decode(r)}function Vm(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var s=0;s<r.length;s++){var o=r.charAt(s),i=o.charCodeAt(0);if(t[i]!==255)throw new TypeError(o+" is ambiguous");t[i]=s}var a=r.length,c=r.charAt(0),l=Math.log(a)/Math.log(256),u=Math.log(256)/Math.log(a);function f(p){if(p instanceof Uint8Array||(ArrayBuffer.isView(p)?p=new Uint8Array(p.buffer,p.byteOffset,p.byteLength):Array.isArray(p)&&(p=Uint8Array.from(p))),!(p instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(p.length===0)return"";for(var g=0,h=0,w=0,x=p.length;w!==x&&p[w]===0;)w++,g++;for(var y=(x-w)*u+1>>>0,E=new Uint8Array(y);w!==x;){for(var _=p[w],L=0,I=y-1;(_!==0||L<h)&&I!==-1;I--,L++)_+=256*E[I]>>>0,E[I]=_%a>>>0,_=_/a>>>0;if(_!==0)throw new Error("Non-zero carry");h=L,w++}for(var T=y-h;T!==y&&E[T]===0;)T++;for(var k=c.repeat(g);T<y;++T)k+=r.charAt(E[T]);return k}function d(p){if(typeof p!="string")throw new TypeError("Expected String");if(p.length===0)return new Uint8Array;var g=0;if(p[g]!==" "){for(var h=0,w=0;p[g]===c;)h++,g++;for(var x=(p.length-g)*l+1>>>0,y=new Uint8Array(x);p[g];){var E=t[p.charCodeAt(g)];if(E===255)return;for(var _=0,L=x-1;(E!==0||_<w)&&L!==-1;L--,_++)E+=a*y[L]>>>0,y[L]=E%256>>>0,E=E/256>>>0;if(E!==0)throw new Error("Non-zero carry");w=_,g++}if(p[g]!==" "){for(var I=x-w;I!==x&&y[I]===0;)I++;for(var T=new Uint8Array(h+(x-I)),k=h;I!==x;)T[k++]=y[I++];return T}}}function m(p){var g=d(p);if(g)return g;throw new Error(`Non-${e} character`)}return{encode:f,decodeUnsafe:d,decode:m}}var Hm=Vm,Km=Hm,Af=Km;var ac=class{name;prefix;baseEncode;constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},cc=class{name;prefix;baseDecode;prefixCodePoint;constructor(e,t,n){this.name=e,this.prefix=t;let s=t.codePointAt(0);if(s===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=s,this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return Sf(this,e)}},lc=class{decoders;constructor(e){this.decoders=e}or(e){return Sf(this,e)}decode(e){let t=e[0],n=this.decoders[t];if(n!=null)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Sf(r,e){return new lc({...r.decoders??{[r.prefix]:r},...e.decoders??{[e.prefix]:e}})}var uc=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(e,t,n,s){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=s,this.encoder=new ac(e,t,n),this.decoder=new cc(e,t,s)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};function Wr({name:r,prefix:e,encode:t,decode:n}){return new uc(r,e,t,n)}function Kt({name:r,prefix:e,alphabet:t}){let{encode:n,decode:s}=Af(t,r);return Wr({prefix:e,name:r,encode:n,decode:o=>vt(s(o))})}function $m(r,e,t,n){let s={};for(let u=0;u<e.length;++u)s[e[u]]=u;let o=r.length;for(;r[o-1]==="=";)--o;let i=new Uint8Array(o*t/8|0),a=0,c=0,l=0;for(let u=0;u<o;++u){let f=s[r[u]];if(f===void 0)throw new SyntaxError(`Non-${n} character`);c=c<<t|f,a+=t,a>=8&&(a-=8,i[l++]=255&c>>a)}if(a>=t||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return i}function qm(r,e,t){let n=e[e.length-1]==="=",s=(1<<t)-1,o="",i=0,a=0;for(let c=0;c<r.length;++c)for(a=a<<8|r[c],i+=8;i>t;)i-=t,o+=e[s&a>>i];if(i!==0&&(o+=e[s&a<<t-i]),n)for(;o.length*t&7;)o+="=";return o}function ae({name:r,prefix:e,bitsPerChar:t,alphabet:n}){return Wr({prefix:e,name:r,encode(s){return qm(s,n,t)},decode(s){return $m(s,n,t,r)}})}var X=Kt({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),zm=Kt({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var dc={};De(dc,{base32:()=>Ge,base32hex:()=>Zm,base32hexpad:()=>Ym,base32hexpadupper:()=>Jm,base32hexupper:()=>Xm,base32pad:()=>Wm,base32padupper:()=>jm,base32upper:()=>Gm,base32z:()=>Qm});var Ge=ae({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),Gm=ae({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Wm=ae({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),jm=ae({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),Zm=ae({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Xm=ae({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Ym=ae({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),Jm=ae({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Qm=ae({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var hc={};De(hc,{base36:()=>Vn,base36upper:()=>eg});var Vn=Kt({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),eg=Kt({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var tg=If,_f=128,rg=127,ng=~rg,sg=Math.pow(2,31);function If(r,e,t){e=e||[],t=t||0;for(var n=t;r>=sg;)e[t++]=r&255|_f,r/=128;for(;r&ng;)e[t++]=r&255|_f,r>>>=7;return e[t]=r|0,If.bytes=t-n+1,e}var og=pc,ig=128,Cf=127;function pc(r,n){var t=0,n=n||0,s=0,o=n,i,a=r.length;do{if(o>=a)throw pc.bytes=0,new RangeError("Could not decode varint");i=r[o++],t+=s<28?(i&Cf)<<s:(i&Cf)*Math.pow(2,s),s+=7}while(i>=ig);return pc.bytes=o-n,t}var ag=Math.pow(2,7),cg=Math.pow(2,14),lg=Math.pow(2,21),ug=Math.pow(2,28),fg=Math.pow(2,35),dg=Math.pow(2,42),hg=Math.pow(2,49),pg=Math.pow(2,56),mg=Math.pow(2,63),gg=function(r){return r<ag?1:r<cg?2:r<lg?3:r<ug?4:r<fg?5:r<dg?6:r<hg?7:r<pg?8:r<mg?9:10},yg={encode:tg,decode:og,encodingLength:gg},wg=yg,Hn=wg;function Kn(r,e=0){return[Hn.decode(r,e),Hn.decode.bytes]}function jr(r,e,t=0){return Hn.encode(r,e,t),e}function Zr(r){return Hn.encodingLength(r)}function Qe(r,e){let t=e.byteLength,n=Zr(r),s=n+Zr(t),o=new Uint8Array(s+t);return jr(r,o,0),jr(t,o,n),o.set(e,s),new Xr(r,t,e,o)}function et(r){let e=vt(r),[t,n]=Kn(e),[s,o]=Kn(e.subarray(n)),i=e.subarray(n+o);if(i.byteLength!==s)throw new Error("Incorrect length");return new Xr(t,s,i,e)}function Bf(r,e){if(r===e)return!0;{let t=e;return r.code===t.code&&r.size===t.size&&t.bytes instanceof Uint8Array&&bf(r.bytes,t.bytes)}}var Xr=class{code;size;digest;bytes;constructor(e,t,n,s){this.code=e,this.size=t,this.digest=n,this.bytes=s}};function kf(r,e){let{bytes:t,version:n}=r;switch(n){case 0:return xg(t,mc(r),e??X.encoder);default:return vg(t,mc(r),e??Ge.encoder)}}var Tf=new WeakMap;function mc(r){let e=Tf.get(r);if(e==null){let t=new Map;return Tf.set(r,t),t}return e}var pe=class r{code;version;multihash;bytes;"/";constructor(e,t,n,s){this.code=t,this.version=e,this.multihash=n,this.bytes=s,this["/"]=s}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:e,multihash:t}=this;if(e!==$n)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==Eg)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,n=Qe(e,t);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return r.equals(this,e)}static equals(e,t){let n=t;return n!=null&&e.code===n.code&&e.version===n.version&&Bf(e.multihash,n.multihash)}toString(e){return kf(this,e)}toJSON(){return{"/":kf(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;let t=e;if(t instanceof r)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){let{version:n,code:s,multihash:o,bytes:i}=t;return new r(n,s,o,i??Lf(n,s,o.bytes))}else if(t[Ag]===!0){let{version:n,multihash:s,code:o}=t,i=et(s);return r.create(n,o,i)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==$n)throw new Error(`Version 0 CID must use dag-pb (code: ${$n}) block encoding`);return new r(e,t,n,n.bytes)}case 1:{let s=Lf(e,t,n.bytes);return new r(e,t,n,s)}default:throw new Error("Invalid version")}}static createV0(e){return r.create(0,$n,e)}static createV1(e,t){return r.create(1,e,t)}static decode(e){let[t,n]=r.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=r.inspectBytes(e),n=t.size-t.multihashSize,s=vt(e.subarray(n,n+t.multihashSize));if(s.byteLength!==t.multihashSize)throw new Error("Incorrect length");let o=s.subarray(t.multihashSize-t.digestSize),i=new Xr(t.multihashCode,t.digestSize,o,s);return[t.version===0?r.createV0(i):r.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){let t=0,n=()=>{let[f,d]=Kn(e.subarray(t));return t+=d,f},s=n(),o=$n;if(s===18?(s=0,t=0):o=n(),s!==0&&s!==1)throw new RangeError(`Invalid CID version ${s}`);let i=t,a=n(),c=n(),l=t+c,u=l-i;return{version:s,codec:o,multihashCode:a,digestSize:c,multihashSize:u,size:l}}static parse(e,t){let[n,s]=bg(e,t),o=r.decode(s);if(o.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return mc(o).set(n,e),o}};function bg(r,e){switch(r[0]){case"Q":{let t=e??X;return[X.prefix,t.decode(`${X.prefix}${r}`)]}case X.prefix:{let t=e??X;return[X.prefix,t.decode(r)]}case Ge.prefix:{let t=e??Ge;return[Ge.prefix,t.decode(r)]}case Vn.prefix:{let t=e??Vn;return[Vn.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}}function xg(r,e,t){let{prefix:n}=t;if(n!==X.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let s=e.get(n);if(s==null){let o=t.encode(r).slice(1);return e.set(n,o),o}else return s}function vg(r,e,t){let{prefix:n}=t,s=e.get(n);if(s==null){let o=t.encode(r);return e.set(n,o),o}else return s}var $n=112,Eg=18;function Lf(r,e,t){let n=Zr(r),s=n+Zr(e),o=new Uint8Array(s+t.byteLength);return jr(r,o,0),jr(e,o,n),o.set(t,s),o}var Ag=Symbol.for("@ipld/js-cid/CID");var gc={};De(gc,{identity:()=>At});var Pf=0,Sg="identity",Nf=vt;function _g(r){return Qe(Pf,Nf(r))}var At={code:Pf,name:Sg,encode:Nf,digest:_g};function ce(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function Df(r){if(!Number.isSafeInteger(r)||r<0)throw new Error("positive integer expected, got "+r)}function Cg(r){return r instanceof Uint8Array||ArrayBuffer.isView(r)&&r.constructor.name==="Uint8Array"}function Yr(r,...e){if(!Cg(r))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(r.length))throw new Error("Uint8Array expected of length "+e+", got length="+r.length)}function Rf(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");Df(r.outputLen),Df(r.blockLen)}function Jr(r,e=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(e&&r.finished)throw new Error("Hash#digest() has already been called")}function Mf(r,e){Yr(r);let t=e.outputLen;if(r.length<t)throw new Error("digestInto() expects output buffer of length at least "+t)}var cr=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function no(r){return new DataView(r.buffer,r.byteOffset,r.byteLength)}function tt(r,e){return r<<32-e|r>>>e}function Of(r){if(typeof r!="string")throw new Error("utf8ToBytes expected string, got "+typeof r);return new Uint8Array(new TextEncoder().encode(r))}function qn(r){return typeof r=="string"&&(r=Of(r)),Yr(r),r}function yc(...r){let e=0;for(let n=0;n<r.length;n++){let s=r[n];Yr(s),e+=s.length}let t=new Uint8Array(e);for(let n=0,s=0;n<r.length;n++){let o=r[n];t.set(o,s),s+=o.length}return t}var Qr=class{clone(){return this._cloneInto()}};function so(r){let e=n=>r().update(qn(n)).digest(),t=r();return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=()=>r(),e}function en(r=32){if(cr&&typeof cr.getRandomValues=="function")return cr.getRandomValues(new Uint8Array(r));if(cr&&typeof cr.randomBytes=="function")return cr.randomBytes(r);throw new Error("crypto.getRandomValues must be defined")}function Ig(r,e,t,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(e,t,n);let s=BigInt(32),o=BigInt(4294967295),i=Number(t>>s&o),a=Number(t&o),c=n?4:0,l=n?0:4;r.setUint32(e+c,i,n),r.setUint32(e+l,a,n)}function Uf(r,e,t){return r&e^~r&t}function Ff(r,e,t){return r&e^r&t^e&t}var tn=class extends Qr{constructor(e,t,n,s){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=s,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=no(this.buffer)}update(e){Jr(this);let{view:t,buffer:n,blockLen:s}=this;e=qn(e);let o=e.length;for(let i=0;i<o;){let a=Math.min(s-this.pos,o-i);if(a===s){let c=no(e);for(;s<=o-i;i+=s)this.process(c,i);continue}n.set(e.subarray(i,i+a),this.pos),this.pos+=a,i+=a,this.pos===s&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Jr(this),Mf(e,this),this.finished=!0;let{buffer:t,view:n,blockLen:s,isLE:o}=this,{pos:i}=this;t[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>s-i&&(this.process(n,0),i=0);for(let f=i;f<s;f++)t[f]=0;Ig(n,s-8,BigInt(this.length*8),o),this.process(n,0);let a=no(e),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let l=c/4,u=this.get();if(l>u.length)throw new Error("_sha2: outputLen bigger than state");for(let f=0;f<l;f++)a.setUint32(4*f,u[f],o)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());let{blockLen:t,buffer:n,length:s,finished:o,destroyed:i,pos:a}=this;return e.length=s,e.pos=a,e.finished=o,e.destroyed=i,s%t&&e.buffer.set(n),e}};var oo=BigInt(4294967295),wc=BigInt(32);function Vf(r,e=!1){return e?{h:Number(r&oo),l:Number(r>>wc&oo)}:{h:Number(r>>wc&oo)|0,l:Number(r&oo)|0}}function Bg(r,e=!1){let t=new Uint32Array(r.length),n=new Uint32Array(r.length);for(let s=0;s<r.length;s++){let{h:o,l:i}=Vf(r[s],e);[t[s],n[s]]=[o,i]}return[t,n]}var kg=(r,e)=>BigInt(r>>>0)<<wc|BigInt(e>>>0),Tg=(r,e,t)=>r>>>t,Lg=(r,e,t)=>r<<32-t|e>>>t,Pg=(r,e,t)=>r>>>t|e<<32-t,Ng=(r,e,t)=>r<<32-t|e>>>t,Dg=(r,e,t)=>r<<64-t|e>>>t-32,Rg=(r,e,t)=>r>>>t-32|e<<64-t,Mg=(r,e)=>e,Og=(r,e)=>r,Ug=(r,e,t)=>r<<t|e>>>32-t,Fg=(r,e,t)=>e<<t|r>>>32-t,Vg=(r,e,t)=>e<<t-32|r>>>64-t,Hg=(r,e,t)=>r<<t-32|e>>>64-t;function Kg(r,e,t,n){let s=(e>>>0)+(n>>>0);return{h:r+t+(s/2**32|0)|0,l:s|0}}var $g=(r,e,t)=>(r>>>0)+(e>>>0)+(t>>>0),qg=(r,e,t,n)=>e+t+n+(r/2**32|0)|0,zg=(r,e,t,n)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0),Gg=(r,e,t,n,s)=>e+t+n+s+(r/2**32|0)|0,Wg=(r,e,t,n,s)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0)+(s>>>0),jg=(r,e,t,n,s,o)=>e+t+n+s+o+(r/2**32|0)|0;var Zg={fromBig:Vf,split:Bg,toBig:kg,shrSH:Tg,shrSL:Lg,rotrSH:Pg,rotrSL:Ng,rotrBH:Dg,rotrBL:Rg,rotr32H:Mg,rotr32L:Og,rotlSH:Ug,rotlSL:Fg,rotlBH:Vg,rotlBL:Hg,add:Kg,add3L:$g,add3H:qg,add4L:zg,add4H:Gg,add5H:jg,add5L:Wg},U=Zg;var[Xg,Yg]=U.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(r=>BigInt(r))),$t=new Uint32Array(80),qt=new Uint32Array(80),bc=class extends tn{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:e,Al:t,Bh:n,Bl:s,Ch:o,Cl:i,Dh:a,Dl:c,Eh:l,El:u,Fh:f,Fl:d,Gh:m,Gl:p,Hh:g,Hl:h}=this;return[e,t,n,s,o,i,a,c,l,u,f,d,m,p,g,h]}set(e,t,n,s,o,i,a,c,l,u,f,d,m,p,g,h){this.Ah=e|0,this.Al=t|0,this.Bh=n|0,this.Bl=s|0,this.Ch=o|0,this.Cl=i|0,this.Dh=a|0,this.Dl=c|0,this.Eh=l|0,this.El=u|0,this.Fh=f|0,this.Fl=d|0,this.Gh=m|0,this.Gl=p|0,this.Hh=g|0,this.Hl=h|0}process(e,t){for(let y=0;y<16;y++,t+=4)$t[y]=e.getUint32(t),qt[y]=e.getUint32(t+=4);for(let y=16;y<80;y++){let E=$t[y-15]|0,_=qt[y-15]|0,L=U.rotrSH(E,_,1)^U.rotrSH(E,_,8)^U.shrSH(E,_,7),I=U.rotrSL(E,_,1)^U.rotrSL(E,_,8)^U.shrSL(E,_,7),T=$t[y-2]|0,k=qt[y-2]|0,re=U.rotrSH(T,k,19)^U.rotrBH(T,k,61)^U.shrSH(T,k,6),W=U.rotrSL(T,k,19)^U.rotrBL(T,k,61)^U.shrSL(T,k,6),V=U.add4L(I,W,qt[y-7],qt[y-16]),he=U.add4H(V,L,re,$t[y-7],$t[y-16]);$t[y]=he|0,qt[y]=V|0}let{Ah:n,Al:s,Bh:o,Bl:i,Ch:a,Cl:c,Dh:l,Dl:u,Eh:f,El:d,Fh:m,Fl:p,Gh:g,Gl:h,Hh:w,Hl:x}=this;for(let y=0;y<80;y++){let E=U.rotrSH(f,d,14)^U.rotrSH(f,d,18)^U.rotrBH(f,d,41),_=U.rotrSL(f,d,14)^U.rotrSL(f,d,18)^U.rotrBL(f,d,41),L=f&m^~f&g,I=d&p^~d&h,T=U.add5L(x,_,I,Yg[y],qt[y]),k=U.add5H(T,w,E,L,Xg[y],$t[y]),re=T|0,W=U.rotrSH(n,s,28)^U.rotrBH(n,s,34)^U.rotrBH(n,s,39),V=U.rotrSL(n,s,28)^U.rotrBL(n,s,34)^U.rotrBL(n,s,39),he=n&o^n&a^o&a,S=s&i^s&c^i&c;w=g|0,x=h|0,g=m|0,h=p|0,m=f|0,p=d|0,{h:f,l:d}=U.add(l|0,u|0,k|0,re|0),l=a|0,u=c|0,a=o|0,c=i|0,o=n|0,i=s|0;let P=U.add3L(re,V,S);n=U.add3H(P,k,W,he),s=P|0}({h:n,l:s}=U.add(this.Ah|0,this.Al|0,n|0,s|0)),{h:o,l:i}=U.add(this.Bh|0,this.Bl|0,o|0,i|0),{h:a,l:c}=U.add(this.Ch|0,this.Cl|0,a|0,c|0),{h:l,l:u}=U.add(this.Dh|0,this.Dl|0,l|0,u|0),{h:f,l:d}=U.add(this.Eh|0,this.El|0,f|0,d|0),{h:m,l:p}=U.add(this.Fh|0,this.Fl|0,m|0,p|0),{h:g,l:h}=U.add(this.Gh|0,this.Gl|0,g|0,h|0),{h:w,l:x}=U.add(this.Hh|0,this.Hl|0,w|0,x|0),this.set(n,s,o,i,a,c,l,u,f,d,m,p,g,h,w,x)}roundClean(){$t.fill(0),qt.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};var Hf=so(()=>new bc);var co={};De(co,{aInRange:()=>Ke,abool:()=>rt,abytes:()=>rn,bitGet:()=>n0,bitLen:()=>Ac,bitMask:()=>Gn,bitSet:()=>s0,bytesToHex:()=>_t,bytesToNumberBE:()=>Ct,bytesToNumberLE:()=>Gt,concatBytes:()=>It,createHmacDrbg:()=>Sc,ensureBytes:()=>oe,equalBytes:()=>t0,hexToBytes:()=>ur,hexToNumber:()=>Ec,inRange:()=>zn,isBytes:()=>zt,memoized:()=>dr,notImplemented:()=>i0,numberToBytesBE:()=>Wt,numberToBytesLE:()=>fr,numberToHexUnpadded:()=>lr,numberToVarBytesBE:()=>e0,utf8ToBytes:()=>r0,validateObject:()=>ut});var io=BigInt(0),ao=BigInt(1),Jg=BigInt(2);function zt(r){return r instanceof Uint8Array||ArrayBuffer.isView(r)&&r.constructor.name==="Uint8Array"}function rn(r){if(!zt(r))throw new Error("Uint8Array expected")}function rt(r,e){if(typeof e!="boolean")throw new Error(r+" boolean expected, got "+e)}var Qg=Array.from({length:256},(r,e)=>e.toString(16).padStart(2,"0"));function _t(r){rn(r);let e="";for(let t=0;t<r.length;t++)e+=Qg[r[t]];return e}function lr(r){let e=r.toString(16);return e.length&1?"0"+e:e}function Ec(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);return r===""?io:BigInt("0x"+r)}var St={_0:48,_9:57,A:65,F:70,a:97,f:102};function Kf(r){if(r>=St._0&&r<=St._9)return r-St._0;if(r>=St.A&&r<=St.F)return r-(St.A-10);if(r>=St.a&&r<=St.f)return r-(St.a-10)}function ur(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);let e=r.length,t=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);let n=new Uint8Array(t);for(let s=0,o=0;s<t;s++,o+=2){let i=Kf(r.charCodeAt(o)),a=Kf(r.charCodeAt(o+1));if(i===void 0||a===void 0){let c=r[o]+r[o+1];throw new Error('hex string expected, got non-hex character "'+c+'" at index '+o)}n[s]=i*16+a}return n}function Ct(r){return Ec(_t(r))}function Gt(r){return rn(r),Ec(_t(Uint8Array.from(r).reverse()))}function Wt(r,e){return ur(r.toString(16).padStart(e*2,"0"))}function fr(r,e){return Wt(r,e).reverse()}function e0(r){return ur(lr(r))}function oe(r,e,t){let n;if(typeof e=="string")try{n=ur(e)}catch(o){throw new Error(r+" must be hex string or Uint8Array, cause: "+o)}else if(zt(e))n=Uint8Array.from(e);else throw new Error(r+" must be hex string or Uint8Array");let s=n.length;if(typeof t=="number"&&s!==t)throw new Error(r+" of length "+t+" expected, got "+s);return n}function It(...r){let e=0;for(let n=0;n<r.length;n++){let s=r[n];rn(s),e+=s.length}let t=new Uint8Array(e);for(let n=0,s=0;n<r.length;n++){let o=r[n];t.set(o,s),s+=o.length}return t}function t0(r,e){if(r.length!==e.length)return!1;let t=0;for(let n=0;n<r.length;n++)t|=r[n]^e[n];return t===0}function r0(r){if(typeof r!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(r))}var xc=r=>typeof r=="bigint"&&io<=r;function zn(r,e,t){return xc(r)&&xc(e)&&xc(t)&&e<=r&&r<t}function Ke(r,e,t,n){if(!zn(e,t,n))throw new Error("expected valid "+r+": "+t+" <= n < "+n+", got "+e)}function Ac(r){let e;for(e=0;r>io;r>>=ao,e+=1);return e}function n0(r,e){return r>>BigInt(e)&ao}function s0(r,e,t){return r|(t?ao:io)<<BigInt(e)}var Gn=r=>(Jg<<BigInt(r-1))-ao,vc=r=>new Uint8Array(r),$f=r=>Uint8Array.from(r);function Sc(r,e,t){if(typeof r!="number"||r<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof t!="function")throw new Error("hmacFn must be a function");let n=vc(r),s=vc(r),o=0,i=()=>{n.fill(1),s.fill(0),o=0},a=(...f)=>t(s,n,...f),c=(f=vc())=>{s=a($f([0]),f),n=a(),f.length!==0&&(s=a($f([1]),f),n=a())},l=()=>{if(o++>=1e3)throw new Error("drbg: tried 1000 values");let f=0,d=[];for(;f<e;){n=a();let m=n.slice();d.push(m),f+=n.length}return It(...d)};return(f,d)=>{i(),c(f);let m;for(;!(m=d(l()));)c();return i(),m}}var o0={bigint:r=>typeof r=="bigint",function:r=>typeof r=="function",boolean:r=>typeof r=="boolean",string:r=>typeof r=="string",stringOrUint8Array:r=>typeof r=="string"||zt(r),isSafeInteger:r=>Number.isSafeInteger(r),array:r=>Array.isArray(r),field:(r,e)=>e.Fp.isValid(r),hash:r=>typeof r=="function"&&Number.isSafeInteger(r.outputLen)};function ut(r,e,t={}){let n=(s,o,i)=>{let a=o0[o];if(typeof a!="function")throw new Error("invalid validator function");let c=r[s];if(!(i&&c===void 0)&&!a(c,r))throw new Error("param "+String(s)+" is invalid. Expected "+o+", got "+c)};for(let[s,o]of Object.entries(e))n(s,o,!1);for(let[s,o]of Object.entries(t))n(s,o,!0);return r}var i0=()=>{throw new Error("not implemented")};function dr(r){let e=new WeakMap;return(t,...n)=>{let s=e.get(t);if(s!==void 0)return s;let o=r(t,...n);return e.set(t,o),o}}var me=BigInt(0),ne=BigInt(1),hr=BigInt(2),a0=BigInt(3),_c=BigInt(4),qf=BigInt(5),zf=BigInt(8),c0=BigInt(9),l0=BigInt(16);function Q(r,e){let t=r%e;return t>=me?t:e+t}function u0(r,e,t){if(e<me)throw new Error("invalid exponent, negatives unsupported");if(t<=me)throw new Error("invalid modulus");if(t===ne)return me;let n=ne;for(;e>me;)e&ne&&(n=n*r%t),r=r*r%t,e>>=ne;return n}function se(r,e,t){let n=r;for(;e-- >me;)n*=n,n%=t;return n}function lo(r,e){if(r===me)throw new Error("invert: expected non-zero number");if(e<=me)throw new Error("invert: expected positive modulus, got "+e);let t=Q(r,e),n=e,s=me,o=ne,i=ne,a=me;for(;t!==me;){let l=n/t,u=n%t,f=s-i*l,d=o-a*l;n=t,t=u,s=i,o=a,i=f,a=d}if(n!==ne)throw new Error("invert: does not exist");return Q(s,e)}function f0(r){let e=(r-ne)/hr,t,n,s;for(t=r-ne,n=0;t%hr===me;t/=hr,n++);for(s=hr;s<r&&u0(s,e,r)!==r-ne;s++)if(s>1e3)throw new Error("Cannot find square root: likely non-prime P");if(n===1){let i=(r+ne)/_c;return function(c,l){let u=c.pow(l,i);if(!c.eql(c.sqr(u),l))throw new Error("Cannot find square root");return u}}let o=(t+ne)/hr;return function(a,c){if(a.pow(c,e)===a.neg(a.ONE))throw new Error("Cannot find square root");let l=n,u=a.pow(a.mul(a.ONE,s),t),f=a.pow(c,o),d=a.pow(c,t);for(;!a.eql(d,a.ONE);){if(a.eql(d,a.ZERO))return a.ZERO;let m=1;for(let g=a.sqr(d);m<l&&!a.eql(g,a.ONE);m++)g=a.sqr(g);let p=a.pow(u,ne<<BigInt(l-m-1));u=a.sqr(p),f=a.mul(f,p),d=a.mul(d,u),l=m}return f}}function d0(r){if(r%_c===a0){let e=(r+ne)/_c;return function(n,s){let o=n.pow(s,e);if(!n.eql(n.sqr(o),s))throw new Error("Cannot find square root");return o}}if(r%zf===qf){let e=(r-qf)/zf;return function(n,s){let o=n.mul(s,hr),i=n.pow(o,e),a=n.mul(s,i),c=n.mul(n.mul(a,hr),i),l=n.mul(a,n.sub(c,n.ONE));if(!n.eql(n.sqr(l),s))throw new Error("Cannot find square root");return l}}return r%l0,f0(r)}var Gf=(r,e)=>(Q(r,e)&ne)===ne,h0=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function Cc(r){let e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},t=h0.reduce((n,s)=>(n[s]="function",n),e);return ut(r,t)}function p0(r,e,t){if(t<me)throw new Error("invalid exponent, negatives unsupported");if(t===me)return r.ONE;if(t===ne)return e;let n=r.ONE,s=e;for(;t>me;)t&ne&&(n=r.mul(n,s)),s=r.sqr(s),t>>=ne;return n}function m0(r,e){let t=new Array(e.length),n=e.reduce((o,i,a)=>r.is0(i)?o:(t[a]=o,r.mul(o,i)),r.ONE),s=r.inv(n);return e.reduceRight((o,i,a)=>r.is0(i)?o:(t[a]=r.mul(o,t[a]),r.mul(o,i)),s),t}function Ic(r,e){let t=e!==void 0?e:r.toString(2).length,n=Math.ceil(t/8);return{nBitLength:t,nByteLength:n}}function jt(r,e,t=!1,n={}){if(r<=me)throw new Error("invalid field: expected ORDER > 0, got "+r);let{nBitLength:s,nByteLength:o}=Ic(r,e);if(o>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let i,a=Object.freeze({ORDER:r,isLE:t,BITS:s,BYTES:o,MASK:Gn(s),ZERO:me,ONE:ne,create:c=>Q(c,r),isValid:c=>{if(typeof c!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof c);return me<=c&&c<r},is0:c=>c===me,isOdd:c=>(c&ne)===ne,neg:c=>Q(-c,r),eql:(c,l)=>c===l,sqr:c=>Q(c*c,r),add:(c,l)=>Q(c+l,r),sub:(c,l)=>Q(c-l,r),mul:(c,l)=>Q(c*l,r),pow:(c,l)=>p0(a,c,l),div:(c,l)=>Q(c*lo(l,r),r),sqrN:c=>c*c,addN:(c,l)=>c+l,subN:(c,l)=>c-l,mulN:(c,l)=>c*l,inv:c=>lo(c,r),sqrt:n.sqrt||(c=>(i||(i=d0(r)),i(a,c))),invertBatch:c=>m0(a,c),cmov:(c,l,u)=>u?l:c,toBytes:c=>t?fr(c,o):Wt(c,o),fromBytes:c=>{if(c.length!==o)throw new Error("Field.fromBytes: expected "+o+" bytes, got "+c.length);return t?Gt(c):Ct(c)}});return Object.freeze(a)}function Wf(r){if(typeof r!="bigint")throw new Error("field order must be bigint");let e=r.toString(2).length;return Math.ceil(e/8)}function Bc(r){let e=Wf(r);return e+Math.ceil(e/2)}function jf(r,e,t=!1){let n=r.length,s=Wf(e),o=Bc(e);if(n<16||n<o||n>1024)throw new Error("expected "+o+"-1024 bytes of input, got "+n);let i=t?Gt(r):Ct(r),a=Q(i,e-ne)+ne;return t?fr(a,s):Wt(a,s)}var Zf=BigInt(0),uo=BigInt(1);function kc(r,e){let t=e.negate();return r?t:e}function Xf(r,e){if(!Number.isSafeInteger(r)||r<=0||r>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+r)}function Tc(r,e){Xf(r,e);let t=Math.ceil(e/r)+1,n=2**(r-1);return{windows:t,windowSize:n}}function g0(r,e){if(!Array.isArray(r))throw new Error("array expected");r.forEach((t,n)=>{if(!(t instanceof e))throw new Error("invalid point at index "+n)})}function y0(r,e){if(!Array.isArray(r))throw new Error("array of scalars expected");r.forEach((t,n)=>{if(!e.isValid(t))throw new Error("invalid scalar at index "+n)})}var Lc=new WeakMap,Yf=new WeakMap;function Pc(r){return Yf.get(r)||1}function fo(r,e){return{constTimeNegate:kc,hasPrecomputes(t){return Pc(t)!==1},unsafeLadder(t,n,s=r.ZERO){let o=t;for(;n>Zf;)n&uo&&(s=s.add(o)),o=o.double(),n>>=uo;return s},precomputeWindow(t,n){let{windows:s,windowSize:o}=Tc(n,e),i=[],a=t,c=a;for(let l=0;l<s;l++){c=a,i.push(c);for(let u=1;u<o;u++)c=c.add(a),i.push(c);a=c.double()}return i},wNAF(t,n,s){let{windows:o,windowSize:i}=Tc(t,e),a=r.ZERO,c=r.BASE,l=BigInt(2**t-1),u=2**t,f=BigInt(t);for(let d=0;d<o;d++){let m=d*i,p=Number(s&l);s>>=f,p>i&&(p-=u,s+=uo);let g=m,h=m+Math.abs(p)-1,w=d%2!==0,x=p<0;p===0?c=c.add(kc(w,n[g])):a=a.add(kc(x,n[h]))}return{p:a,f:c}},wNAFUnsafe(t,n,s,o=r.ZERO){let{windows:i,windowSize:a}=Tc(t,e),c=BigInt(2**t-1),l=2**t,u=BigInt(t);for(let f=0;f<i;f++){let d=f*a;if(s===Zf)break;let m=Number(s&c);if(s>>=u,m>a&&(m-=l,s+=uo),m===0)continue;let p=n[d+Math.abs(m)-1];m<0&&(p=p.negate()),o=o.add(p)}return o},getPrecomputes(t,n,s){let o=Lc.get(n);return o||(o=this.precomputeWindow(n,t),t!==1&&Lc.set(n,s(o))),o},wNAFCached(t,n,s){let o=Pc(t);return this.wNAF(o,this.getPrecomputes(o,t,s),n)},wNAFCachedUnsafe(t,n,s,o){let i=Pc(t);return i===1?this.unsafeLadder(t,n,o):this.wNAFUnsafe(i,this.getPrecomputes(i,t,s),n,o)},setWindowSize(t,n){Xf(n,e),Yf.set(t,n),Lc.delete(t)}}}function ho(r,e,t,n){if(g0(t,r),y0(n,e),t.length!==n.length)throw new Error("arrays of points and scalars must have equal length");let s=r.ZERO,o=Ac(BigInt(t.length)),i=o>12?o-3:o>4?o-2:o?2:1,a=(1<<i)-1,c=new Array(a+1).fill(s),l=Math.floor((e.BITS-1)/i)*i,u=s;for(let f=l;f>=0;f-=i){c.fill(s);for(let m=0;m<n.length;m++){let p=n[m],g=Number(p>>BigInt(f)&BigInt(a));c[g]=c[g].add(t[m])}let d=s;for(let m=c.length-1,p=s;m>0;m--)p=p.add(c[m]),d=d.add(p);if(u=u.add(d),f!==0)for(let m=0;m<i;m++)u=u.double()}return u}function Wn(r){return Cc(r.Fp),ut(r,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...Ic(r.n,r.nBitLength),...r,p:r.Fp.ORDER})}var nt=BigInt(0),$e=BigInt(1),po=BigInt(2),w0=BigInt(8),b0={zip215:!0};function x0(r){let e=Wn(r);return ut(r,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function Jf(r){let e=x0(r),{Fp:t,n,prehash:s,hash:o,randomBytes:i,nByteLength:a,h:c}=e,l=po<<BigInt(a*8)-$e,u=t.create,f=jt(e.n,e.nBitLength),d=e.uvRatio||((v,b)=>{try{return{isValid:!0,value:t.sqrt(v*t.inv(b))}}catch{return{isValid:!1,value:nt}}}),m=e.adjustScalarBytes||(v=>v),p=e.domain||((v,b,A)=>{if(rt("phflag",A),b.length||A)throw new Error("Contexts/pre-hash are not supported");return v});function g(v,b){Ke("coordinate "+v,b,nt,l)}function h(v){if(!(v instanceof y))throw new Error("ExtendedPoint expected")}let w=dr((v,b)=>{let{ex:A,ey:B,ez:R}=v,M=v.is0();b==null&&(b=M?w0:t.inv(R));let F=u(A*b),K=u(B*b),O=u(R*b);if(M)return{x:nt,y:$e};if(O!==$e)throw new Error("invZ was invalid");return{x:F,y:K}}),x=dr(v=>{let{a:b,d:A}=e;if(v.is0())throw new Error("bad point: ZERO");let{ex:B,ey:R,ez:M,et:F}=v,K=u(B*B),O=u(R*R),J=u(M*M),te=u(J*J),we=u(K*b),be=u(J*u(we+O)),ve=u(te+u(A*u(K*O)));if(be!==ve)throw new Error("bad point: equation left != right (1)");let _e=u(B*R),He=u(M*F);if(_e!==He)throw new Error("bad point: equation left != right (2)");return!0});class y{constructor(b,A,B,R){this.ex=b,this.ey=A,this.ez=B,this.et=R,g("x",b),g("y",A),g("z",B),g("t",R),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(b){if(b instanceof y)throw new Error("extended point not allowed");let{x:A,y:B}=b||{};return g("x",A),g("y",B),new y(A,B,$e,u(A*B))}static normalizeZ(b){let A=t.invertBatch(b.map(B=>B.ez));return b.map((B,R)=>B.toAffine(A[R])).map(y.fromAffine)}static msm(b,A){return ho(y,f,b,A)}_setWindowSize(b){L.setWindowSize(this,b)}assertValidity(){x(this)}equals(b){h(b);let{ex:A,ey:B,ez:R}=this,{ex:M,ey:F,ez:K}=b,O=u(A*K),J=u(M*R),te=u(B*K),we=u(F*R);return O===J&&te===we}is0(){return this.equals(y.ZERO)}negate(){return new y(u(-this.ex),this.ey,this.ez,u(-this.et))}double(){let{a:b}=e,{ex:A,ey:B,ez:R}=this,M=u(A*A),F=u(B*B),K=u(po*u(R*R)),O=u(b*M),J=A+B,te=u(u(J*J)-M-F),we=O+F,be=we-K,ve=O-F,_e=u(te*be),He=u(we*ve),Ne=u(te*ve),lt=u(be*we);return new y(_e,He,lt,Ne)}add(b){h(b);let{a:A,d:B}=e,{ex:R,ey:M,ez:F,et:K}=this,{ex:O,ey:J,ez:te,et:we}=b;if(A===BigInt(-1)){let cf=u((M-R)*(J+O)),lf=u((M+R)*(J-O)),tc=u(lf-cf);if(tc===nt)return this.double();let uf=u(F*po*we),ff=u(K*po*te),df=ff+uf,hf=lf+cf,pf=ff-uf,Tm=u(df*tc),Lm=u(hf*pf),Pm=u(df*pf),Nm=u(tc*hf);return new y(Tm,Lm,Nm,Pm)}let be=u(R*O),ve=u(M*J),_e=u(K*B*we),He=u(F*te),Ne=u((R+M)*(O+J)-be-ve),lt=He-_e,yt=He+_e,Mn=u(ve-A*be),Cm=u(Ne*lt),Im=u(yt*Mn),Bm=u(Ne*Mn),km=u(lt*yt);return new y(Cm,Im,km,Bm)}subtract(b){return this.add(b.negate())}wNAF(b){return L.wNAFCached(this,b,y.normalizeZ)}multiply(b){let A=b;Ke("scalar",A,$e,n);let{p:B,f:R}=this.wNAF(A);return y.normalizeZ([B,R])[0]}multiplyUnsafe(b,A=y.ZERO){let B=b;return Ke("scalar",B,nt,n),B===nt?_:this.is0()||B===$e?this:L.wNAFCachedUnsafe(this,B,y.normalizeZ,A)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}isTorsionFree(){return L.unsafeLadder(this,n).is0()}toAffine(b){return w(this,b)}clearCofactor(){let{h:b}=e;return b===$e?this:this.multiplyUnsafe(b)}static fromHex(b,A=!1){let{d:B,a:R}=e,M=t.BYTES;b=oe("pointHex",b,M),rt("zip215",A);let F=b.slice(),K=b[M-1];F[M-1]=K&-129;let O=Gt(F),J=A?l:t.ORDER;Ke("pointHex.y",O,nt,J);let te=u(O*O),we=u(te-$e),be=u(B*te-R),{isValid:ve,value:_e}=d(we,be);if(!ve)throw new Error("Point.fromHex: invalid y coordinate");let He=(_e&$e)===$e,Ne=(K&128)!==0;if(!A&&_e===nt&&Ne)throw new Error("Point.fromHex: x=0 and x_0=1");return Ne!==He&&(_e=u(-_e)),y.fromAffine({x:_e,y:O})}static fromPrivateKey(b){return k(b).point}toRawBytes(){let{x:b,y:A}=this.toAffine(),B=fr(A,t.BYTES);return B[B.length-1]|=b&$e?128:0,B}toHex(){return _t(this.toRawBytes())}}y.BASE=new y(e.Gx,e.Gy,$e,u(e.Gx*e.Gy)),y.ZERO=new y(nt,$e,$e,nt);let{BASE:E,ZERO:_}=y,L=fo(y,a*8);function I(v){return Q(v,n)}function T(v){return I(Gt(v))}function k(v){let b=t.BYTES;v=oe("private key",v,b);let A=oe("hashed private key",o(v),2*b),B=m(A.slice(0,b)),R=A.slice(b,2*b),M=T(B),F=E.multiply(M),K=F.toRawBytes();return{head:B,prefix:R,scalar:M,point:F,pointBytes:K}}function re(v){return k(v).pointBytes}function W(v=new Uint8Array,...b){let A=It(...b);return T(o(p(A,oe("context",v),!!s)))}function V(v,b,A={}){v=oe("message",v),s&&(v=s(v));let{prefix:B,scalar:R,pointBytes:M}=k(b),F=W(A.context,B,v),K=E.multiply(F).toRawBytes(),O=W(A.context,K,M,v),J=I(F+O*R);Ke("signature.s",J,nt,n);let te=It(K,fr(J,t.BYTES));return oe("result",te,t.BYTES*2)}let he=b0;function S(v,b,A,B=he){let{context:R,zip215:M}=B,F=t.BYTES;v=oe("signature",v,2*F),b=oe("message",b),A=oe("publicKey",A,F),M!==void 0&&rt("zip215",M),s&&(b=s(b));let K=Gt(v.slice(F,2*F)),O,J,te;try{O=y.fromHex(A,M),J=y.fromHex(v.slice(0,F),M),te=E.multiplyUnsafe(K)}catch{return!1}if(!M&&O.isSmallOrder())return!1;let we=W(R,J.toRawBytes(),O.toRawBytes(),b);return J.add(O.multiplyUnsafe(we)).subtract(te).clearCofactor().equals(y.ZERO)}return E._setWindowSize(8),{CURVE:e,getPublicKey:re,sign:V,verify:S,ExtendedPoint:y,utils:{getExtendedPublicKey:k,randomPrivateKey:()=>i(t.BYTES),precompute(v=8,b=y.BASE){return b._setWindowSize(v),b.multiply(BigInt(3)),b}}}}var Nc=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),Qf=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),$v=BigInt(0),v0=BigInt(1),ed=BigInt(2),qv=BigInt(3),E0=BigInt(5),A0=BigInt(8);function S0(r){let e=BigInt(10),t=BigInt(20),n=BigInt(40),s=BigInt(80),o=Nc,a=r*r%o*r%o,c=se(a,ed,o)*a%o,l=se(c,v0,o)*r%o,u=se(l,E0,o)*l%o,f=se(u,e,o)*u%o,d=se(f,t,o)*f%o,m=se(d,n,o)*d%o,p=se(m,s,o)*m%o,g=se(p,s,o)*m%o,h=se(g,e,o)*u%o;return{pow_p_5_8:se(h,ed,o)*r%o,b2:a}}function _0(r){return r[0]&=248,r[31]&=127,r[31]|=64,r}function C0(r,e){let t=Nc,n=Q(e*e*e,t),s=Q(n*n*e,t),o=S0(r*s).pow_p_5_8,i=Q(r*n*o,t),a=Q(e*i*i,t),c=i,l=Q(i*Qf,t),u=a===r,f=a===Q(-r,t),d=a===Q(-r*Qf,t);return u&&(i=c),(f||d)&&(i=l),Gf(i,t)&&(i=Q(-i,t)),{isValid:u||f,value:i}}var I0=jt(Nc,void 0,!0),B0={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:I0,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:A0,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:Hf,randomBytes:en,adjustScalarBytes:_0,uvRatio:C0},jn=Jf(B0);var mo=32,go=64,Dc=32;function td(){let r=jn.utils.randomPrivateKey(),e=jn.getPublicKey(r);return{privateKey:k0(r,e),publicKey:e}}function rd(r,e){let t=r.subarray(0,Dc);return jn.sign(e instanceof Uint8Array?e:e.subarray(),t)}function nd(r,e,t){return jn.verify(e,t instanceof Uint8Array?t:t.subarray(),r)}function k0(r,e){let t=new Uint8Array(go);for(let n=0;n<Dc;n++)t[n]=r[n],t[Dc+n]=e[n];return t}var Zn=class{type="Ed25519";raw;constructor(e){this.raw=wo(e,mo)}toMultihash(){return At.digest(ft(this))}toCID(){return pe.createV1(114,this.toMultihash())}toString(){return X.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}verify(e,t){return nd(this.raw,t,e)}},yo=class{type="Ed25519";raw;publicKey;constructor(e,t){this.raw=wo(e,go),this.publicKey=new Zn(t)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}sign(e){return rd(this.raw,e)}};function Rc(r){return r=wo(r,mo),new Zn(r)}async function od(){let{privateKey:r,publicKey:e}=td();return new yo(r,e)}function wo(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new D(`Key must be a Uint8Array of length ${e}, got ${r.length}`);return r}function le(r=0){return new Uint8Array(r)}function Ce(r=0){return new Uint8Array(r)}var T0=Math.pow(2,7),L0=Math.pow(2,14),P0=Math.pow(2,21),Mc=Math.pow(2,28),Oc=Math.pow(2,35),Uc=Math.pow(2,42),Fc=Math.pow(2,49),Y=128,Ie=127;function de(r){if(r<T0)return 1;if(r<L0)return 2;if(r<P0)return 3;if(r<Mc)return 4;if(r<Oc)return 5;if(r<Uc)return 6;if(r<Fc)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function Vc(r,e,t=0){switch(de(r)){case 8:e[t++]=r&255|Y,r/=128;case 7:e[t++]=r&255|Y,r/=128;case 6:e[t++]=r&255|Y,r/=128;case 5:e[t++]=r&255|Y,r/=128;case 4:e[t++]=r&255|Y,r>>>=7;case 3:e[t++]=r&255|Y,r>>>=7;case 2:e[t++]=r&255|Y,r>>>=7;case 1:{e[t++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return e}function N0(r,e,t=0){switch(de(r)){case 8:e.set(t++,r&255|Y),r/=128;case 7:e.set(t++,r&255|Y),r/=128;case 6:e.set(t++,r&255|Y),r/=128;case 5:e.set(t++,r&255|Y),r/=128;case 4:e.set(t++,r&255|Y),r>>>=7;case 3:e.set(t++,r&255|Y),r>>>=7;case 2:e.set(t++,r&255|Y),r>>>=7;case 1:{e.set(t++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return e}function Hc(r,e){let t=r[e],n=0;if(n+=t&Ie,t<Y||(t=r[e+1],n+=(t&Ie)<<7,t<Y)||(t=r[e+2],n+=(t&Ie)<<14,t<Y)||(t=r[e+3],n+=(t&Ie)<<21,t<Y)||(t=r[e+4],n+=(t&Ie)*Mc,t<Y)||(t=r[e+5],n+=(t&Ie)*Oc,t<Y)||(t=r[e+6],n+=(t&Ie)*Uc,t<Y)||(t=r[e+7],n+=(t&Ie)*Fc,t<Y))return n;throw new RangeError("Could not decode varint")}function D0(r,e){let t=r.get(e),n=0;if(n+=t&Ie,t<Y||(t=r.get(e+1),n+=(t&Ie)<<7,t<Y)||(t=r.get(e+2),n+=(t&Ie)<<14,t<Y)||(t=r.get(e+3),n+=(t&Ie)<<21,t<Y)||(t=r.get(e+4),n+=(t&Ie)*Mc,t<Y)||(t=r.get(e+5),n+=(t&Ie)*Oc,t<Y)||(t=r.get(e+6),n+=(t&Ie)*Uc,t<Y)||(t=r.get(e+7),n+=(t&Ie)*Fc,t<Y))return n;throw new RangeError("Could not decode varint")}function Be(r,e,t=0){return e==null&&(e=Ce(de(r))),e instanceof Uint8Array?Vc(r,e,t):N0(r,e,t)}function st(r,e=0){return r instanceof Uint8Array?Hc(r,e):D0(r,e)}var Kc=new Float32Array([-0]),Zt=new Uint8Array(Kc.buffer);function id(r,e,t){Kc[0]=r,e[t]=Zt[0],e[t+1]=Zt[1],e[t+2]=Zt[2],e[t+3]=Zt[3]}function ad(r,e){return Zt[0]=r[e],Zt[1]=r[e+1],Zt[2]=r[e+2],Zt[3]=r[e+3],Kc[0]}var $c=new Float64Array([-0]),ke=new Uint8Array($c.buffer);function cd(r,e,t){$c[0]=r,e[t]=ke[0],e[t+1]=ke[1],e[t+2]=ke[2],e[t+3]=ke[3],e[t+4]=ke[4],e[t+5]=ke[5],e[t+6]=ke[6],e[t+7]=ke[7]}function ld(r,e){return ke[0]=r[e],ke[1]=r[e+1],ke[2]=r[e+2],ke[3]=r[e+3],ke[4]=r[e+4],ke[5]=r[e+5],ke[6]=r[e+6],ke[7]=r[e+7],$c[0]}var R0=BigInt(Number.MAX_SAFE_INTEGER),M0=BigInt(Number.MIN_SAFE_INTEGER),We=class r{lo;hi;constructor(e,t){this.lo=e|0,this.hi=t|0}toNumber(e=!1){if(!e&&this.hi>>>31>0){let t=~this.lo+1>>>0,n=~this.hi>>>0;return t===0&&(n=n+1>>>0),-(t+n*4294967296)}return this.lo+this.hi*4294967296}toBigInt(e=!1){if(e)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let t=~this.lo+1>>>0,n=~this.hi>>>0;return t===0&&(n=n+1>>>0),-(BigInt(t)+(BigInt(n)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(e=!1){return this.toBigInt(e).toString()}zzEncode(){let e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this}zzDecode(){let e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this}length(){let e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return n===0?t===0?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:n<128?9:10}static fromBigInt(e){if(e===0n)return mr;if(e<R0&&e>M0)return this.fromNumber(Number(e));let t=e<0n;t&&(e=-e);let n=e>>32n,s=e-(n<<32n);return t&&(n=~n|0n,s=~s|0n,++s>ud&&(s=0n,++n>ud&&(n=0n))),new r(Number(s),Number(n))}static fromNumber(e){if(e===0)return mr;let t=e<0;t&&(e=-e);let n=e>>>0,s=(e-n)/4294967296>>>0;return t&&(s=~s>>>0,n=~n>>>0,++n>4294967295&&(n=0,++s>4294967295&&(s=0))),new r(n,s)}static from(e){return typeof e=="number"?r.fromNumber(e):typeof e=="bigint"?r.fromBigInt(e):typeof e=="string"?r.fromBigInt(BigInt(e)):e.low!=null||e.high!=null?new r(e.low>>>0,e.high>>>0):mr}},mr=new We(0,0);mr.toBigInt=function(){return 0n};mr.zzEncode=mr.zzDecode=function(){return this};mr.length=function(){return 1};var ud=4294967296n;function fd(r){let e=0,t=0;for(let n=0;n<r.length;++n)t=r.charCodeAt(n),t<128?e+=1:t<2048?e+=2:(t&64512)===55296&&(r.charCodeAt(n+1)&64512)===56320?(++n,e+=4):e+=3;return e}function dd(r,e,t){if(t-e<1)return"";let s,o=[],i=0,a;for(;e<t;)a=r[e++],a<128?o[i++]=a:a>191&&a<224?o[i++]=(a&31)<<6|r[e++]&63:a>239&&a<365?(a=((a&7)<<18|(r[e++]&63)<<12|(r[e++]&63)<<6|r[e++]&63)-65536,o[i++]=55296+(a>>10),o[i++]=56320+(a&1023)):o[i++]=(a&15)<<12|(r[e++]&63)<<6|r[e++]&63,i>8191&&((s??(s=[])).push(String.fromCharCode.apply(String,o)),i=0);return s!=null?(i>0&&s.push(String.fromCharCode.apply(String,o.slice(0,i))),s.join("")):String.fromCharCode.apply(String,o.slice(0,i))}function qc(r,e,t){let n=t,s,o;for(let i=0;i<r.length;++i)s=r.charCodeAt(i),s<128?e[t++]=s:s<2048?(e[t++]=s>>6|192,e[t++]=s&63|128):(s&64512)===55296&&((o=r.charCodeAt(i+1))&64512)===56320?(s=65536+((s&1023)<<10)+(o&1023),++i,e[t++]=s>>18|240,e[t++]=s>>12&63|128,e[t++]=s>>6&63|128,e[t++]=s&63|128):(e[t++]=s>>12|224,e[t++]=s>>6&63|128,e[t++]=s&63|128);return t-n}function ot(r,e){return RangeError(`index out of range: ${r.pos} + ${e??1} > ${r.len}`)}function bo(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}var zc=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(e){this.buf=e,this.pos=0,this.len=e.length}uint32(){let e=4294967295;if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,ot(this,10);return e}int32(){return this.uint32()|0}sint32(){let e=this.uint32();return e>>>1^-(e&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw ot(this,4);return bo(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw ot(this,4);return bo(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw ot(this,4);let e=ad(this.buf,this.pos);return this.pos+=4,e}double(){if(this.pos+8>this.len)throw ot(this,4);let e=ld(this.buf,this.pos);return this.pos+=8,e}bytes(){let e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw ot(this,e);return this.pos+=e,t===n?new Uint8Array(0):this.buf.subarray(t,n)}string(){let e=this.bytes();return dd(e,0,e.length)}skip(e){if(typeof e=="number"){if(this.pos+e>this.len)throw ot(this,e);this.pos+=e}else do if(this.pos>=this.len)throw ot(this);while(this.buf[this.pos++]&128);return this}skipType(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(e=this.uint32()&7)!==4;)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${e} at offset ${this.pos}`)}return this}readLongVarint(){let e=new We(0,0),t=0;if(this.len-this.pos>4){for(;t<4;++t)if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(this.buf[this.pos]&127)<<28)>>>0,e.hi=(e.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return e;t=0}else{for(;t<3;++t){if(this.pos>=this.len)throw ot(this);if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(this.buf[this.pos++]&127)<<t*7)>>>0,e}if(this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw ot(this);if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw ot(this,8);let e=bo(this.buf,this.pos+=4),t=bo(this.buf,this.pos+=4);return new We(e,t)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let e=Hc(this.buf,this.pos);return this.pos+=de(e),e}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function Gc(r){return new zc(r instanceof Uint8Array?r:r.subarray())}function Re(r,e,t){let n=Gc(r);return e.decode(n,void 0,t)}var Wc={};De(Wc,{base10:()=>O0});var O0=Kt({prefix:"9",name:"base10",alphabet:"0123456789"});var jc={};De(jc,{base16:()=>U0,base16upper:()=>F0});var U0=ae({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),F0=ae({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Zc={};De(Zc,{base2:()=>V0});var V0=ae({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Xc={};De(Xc,{base256emoji:()=>z0});var pd=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),H0=pd.reduce((r,e,t)=>(r[t]=e,r),[]),K0=pd.reduce((r,e,t)=>{let n=e.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${e}`);return r[n]=t,r},[]);function $0(r){return r.reduce((e,t)=>(e+=H0[t],e),"")}function q0(r){let e=[];for(let t of r){let n=t.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${t}`);let s=K0[n];if(s==null)throw new Error(`Non-base256emoji character: ${t}`);e.push(s)}return new Uint8Array(e)}var z0=Wr({prefix:"\u{1F680}",name:"base256emoji",encode:$0,decode:q0});var Qc={};De(Qc,{base64:()=>Yc,base64pad:()=>G0,base64url:()=>Jc,base64urlpad:()=>W0});var Yc=ae({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),G0=ae({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Jc=ae({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),W0=ae({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var el={};De(el,{base8:()=>j0});var j0=ae({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var tl={};De(tl,{identity:()=>Z0});var Z0=Wr({prefix:"\0",name:"identity",encode:r=>vf(r),decode:r=>xf(r)});var A1=new TextEncoder,S1=new TextDecoder;var sl={};De(sl,{sha256:()=>nn,sha512:()=>J0});function nl({name:r,code:e,encode:t}){return new rl(r,e,t)}var rl=class{name;code;encode;constructor(e,t,n){this.name=e,this.code=t,this.encode=n}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?Qe(this.code,t):t.then(n=>Qe(this.code,n))}else throw Error("Unknown type, must be binary type")}};function gd(r){return async e=>new Uint8Array(await crypto.subtle.digest(r,e))}var nn=nl({name:"sha2-256",code:18,encode:gd("SHA-256")}),J0=nl({name:"sha2-512",code:19,encode:gd("SHA-512")});var Xn={...tl,...Zc,...el,...Wc,...jc,...dc,...hc,...fc,...Qc,...Xc},M1={...sl,...gc};function wd(r,e,t,n){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:n}}}var yd=wd("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),ol=wd("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);let e=Ce(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),Q0={utf8:yd,"utf-8":yd,hex:Xn.base16,latin1:ol,ascii:ol,binary:ol,...Xn},xo=Q0;function N(r,e="utf8"){let t=xo[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.decoder.decode(`${t.prefix}${r}`)}function il(r){let e=r??8192,t=e>>>1,n,s=e;return function(i){if(i<1||i>t)return Ce(i);s+i>e&&(n=Ce(e),s=0);let a=n.subarray(s,s+=i);return s&7&&(s=(s|7)+1),a}}var gr=class{fn;len;next;val;constructor(e,t,n){this.fn=e,this.len=t,this.next=void 0,this.val=n}};function al(){}var ll=class{head;tail;len;next;constructor(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}},ey=il();function ty(r){return globalThis.Buffer!=null?Ce(r):ey(r)}var Jn=class{len;head;tail;states;constructor(){this.len=0,this.head=new gr(al,0,0),this.tail=this.head,this.states=null}_push(e,t,n){return this.tail=this.tail.next=new gr(e,t,n),this.len+=t,this}uint32(e){return this.len+=(this.tail=this.tail.next=new ul((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this}int32(e){return e<0?this._push(vo,10,We.fromNumber(e)):this.uint32(e)}sint32(e){return this.uint32((e<<1^e>>31)>>>0)}uint64(e){let t=We.fromBigInt(e);return this._push(vo,t.length(),t)}uint64Number(e){return this._push(Vc,de(e),e)}uint64String(e){return this.uint64(BigInt(e))}int64(e){return this.uint64(e)}int64Number(e){return this.uint64Number(e)}int64String(e){return this.uint64String(e)}sint64(e){let t=We.fromBigInt(e).zzEncode();return this._push(vo,t.length(),t)}sint64Number(e){let t=We.fromNumber(e).zzEncode();return this._push(vo,t.length(),t)}sint64String(e){return this.sint64(BigInt(e))}bool(e){return this._push(cl,1,e?1:0)}fixed32(e){return this._push(Yn,4,e>>>0)}sfixed32(e){return this.fixed32(e)}fixed64(e){let t=We.fromBigInt(e);return this._push(Yn,4,t.lo)._push(Yn,4,t.hi)}fixed64Number(e){let t=We.fromNumber(e);return this._push(Yn,4,t.lo)._push(Yn,4,t.hi)}fixed64String(e){return this.fixed64(BigInt(e))}sfixed64(e){return this.fixed64(e)}sfixed64Number(e){return this.fixed64Number(e)}sfixed64String(e){return this.fixed64String(e)}float(e){return this._push(id,4,e)}double(e){return this._push(cd,8,e)}bytes(e){let t=e.length>>>0;return t===0?this._push(cl,1,0):this.uint32(t)._push(ny,t,e)}string(e){let t=fd(e);return t!==0?this.uint32(t)._push(qc,t,e):this._push(cl,1,0)}fork(){return this.states=new ll(this),this.head=this.tail=new gr(al,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new gr(al,0,0),this.len=0),this}ldelim(){let e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n!==0&&(this.tail.next=e.next,this.tail=t,this.len+=n),this}finish(){let e=this.head.next,t=ty(this.len),n=0;for(;e!=null;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t}};function cl(r,e,t){e[t]=r&255}function ry(r,e,t){for(;r>127;)e[t++]=r&127|128,r>>>=7;e[t]=r}var ul=class extends gr{next;constructor(e,t){super(ry,e,t),this.next=void 0}};function vo(r,e,t){for(;r.hi!==0;)e[t++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[t++]=r.lo&127|128,r.lo=r.lo>>>7;e[t++]=r.lo}function Yn(r,e,t){e[t]=r&255,e[t+1]=r>>>8&255,e[t+2]=r>>>16&255,e[t+3]=r>>>24}function ny(r,e,t){e.set(r,t)}globalThis.Buffer!=null&&(Jn.prototype.bytes=function(r){let e=r.length>>>0;return this.uint32(e),e>0&&this._push(sy,e,r),this},Jn.prototype.string=function(r){let e=globalThis.Buffer.byteLength(r);return this.uint32(e),e>0&&this._push(oy,e,r),this});function sy(r,e,t){e.set(r,t)}function oy(r,e,t){r.length<40?qc(r,e,t):e.utf8Write!=null?e.utf8Write(r,t):e.set(N(r),t)}function fl(){return new Jn}function Me(r,e){let t=fl();return e.encode(r,t,{lengthDelimited:!1}),t.finish()}var sn;(function(r){r[r.VARINT=0]="VARINT",r[r.BIT64=1]="BIT64",r[r.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",r[r.START_GROUP=3]="START_GROUP",r[r.END_GROUP=4]="END_GROUP",r[r.BIT32=5]="BIT32"})(sn||(sn={}));function Eo(r,e,t,n){return{name:r,type:e,encode:t,decode:n}}function dl(r){function e(s){if(r[s.toString()]==null)throw new Error("Invalid enum value");return r[s]}let t=function(o,i){let a=e(o);i.int32(a)},n=function(o){let i=o.int32();return e(i)};return Eo("enum",sn.VARINT,t,n)}function Oe(r,e){return Eo("message",sn.LENGTH_DELIMITED,r,e)}var yr=class extends Error{code="ERR_MAX_LENGTH";name="MaxLengthError"},Qn=class extends Error{code="ERR_MAX_SIZE";name="MaxSizeError"};var ge;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.secp256k1="secp256k1"})(ge||(ge={}));var hl;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.secp256k1=2]="secp256k1"})(hl||(hl={}));(function(r){r.codec=()=>dl(hl)})(ge||(ge={}));var dt;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),ge.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.Type=ge.codec().decode(t);break}case 2:{o.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(dt||(dt={}));var pl;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),ge.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.Type=ge.codec().decode(t);break}case 2:{o.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(pl||(pl={}));var us={};De(us,{MAX_RSA_KEY_SIZE:()=>hi,generateRSAKeyPair:()=>_l,jwkToJWKKeyPair:()=>mh,jwkToPkcs1:()=>vy,jwkToPkix:()=>Al,jwkToRSAPrivateKey:()=>ph,pkcs1ToJwk:()=>fh,pkcs1ToRSAPrivateKey:()=>hh,pkixToJwk:()=>dh,pkixToRSAPublicKey:()=>Sl});var iy=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Xt=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Yt=new Uint32Array(64),ml=class extends tn{constructor(){super(64,32,8,!1),this.A=Xt[0]|0,this.B=Xt[1]|0,this.C=Xt[2]|0,this.D=Xt[3]|0,this.E=Xt[4]|0,this.F=Xt[5]|0,this.G=Xt[6]|0,this.H=Xt[7]|0}get(){let{A:e,B:t,C:n,D:s,E:o,F:i,G:a,H:c}=this;return[e,t,n,s,o,i,a,c]}set(e,t,n,s,o,i,a,c){this.A=e|0,this.B=t|0,this.C=n|0,this.D=s|0,this.E=o|0,this.F=i|0,this.G=a|0,this.H=c|0}process(e,t){for(let f=0;f<16;f++,t+=4)Yt[f]=e.getUint32(t,!1);for(let f=16;f<64;f++){let d=Yt[f-15],m=Yt[f-2],p=tt(d,7)^tt(d,18)^d>>>3,g=tt(m,17)^tt(m,19)^m>>>10;Yt[f]=g+Yt[f-7]+p+Yt[f-16]|0}let{A:n,B:s,C:o,D:i,E:a,F:c,G:l,H:u}=this;for(let f=0;f<64;f++){let d=tt(a,6)^tt(a,11)^tt(a,25),m=u+d+Uf(a,c,l)+iy[f]+Yt[f]|0,g=(tt(n,2)^tt(n,13)^tt(n,22))+Ff(n,s,o)|0;u=l,l=c,c=a,a=i+m|0,i=o,o=s,s=n,n=m+g|0}n=n+this.A|0,s=s+this.B|0,o=o+this.C|0,i=i+this.D|0,a=a+this.E|0,c=c+this.F|0,l=l+this.G|0,u=u+this.H|0,this.set(n,s,o,i,a,c,l,u)}roundClean(){Yt.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};var on=so(()=>new ml);var H=Hr(xd());function wr(r,e){let t=0;if(r.length===1)return r[0];for(let n=r.length-1;n>=0;n--)t+=r[r.length-1-n]*Math.pow(2,e*n);return t}function Jt(r,e,t=-1){let n=t,s=r,o=0,i=Math.pow(2,e);for(let a=1;a<8;a++){if(r<i){let c;if(n<0)c=new ArrayBuffer(a),o=a;else{if(n<a)return new ArrayBuffer(0);c=new ArrayBuffer(n),o=n}let l=new Uint8Array(c);for(let u=a-1;u>=0;u--){let f=Math.pow(2,u*e);l[o-u-1]=Math.floor(s/f),s-=l[o-u-1]*f}return c}i*=Math.pow(2,e)}return new ArrayBuffer(0)}function _o(...r){let e=0,t=0;for(let o of r)e+=o.length;let n=new ArrayBuffer(e),s=new Uint8Array(n);for(let o of r)s.set(o,t),t+=o.length;return s}function yl(){let r=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){let a=r[0]===255&&r[1]&128,c=r[0]===0&&(r[1]&128)===0;(a||c)&&this.warnings.push("Needlessly long format")}let e=new ArrayBuffer(this.valueHex.byteLength),t=new Uint8Array(e);for(let a=0;a<this.valueHex.byteLength;a++)t[a]=0;t[0]=r[0]&128;let n=wr(t,8),s=new ArrayBuffer(this.valueHex.byteLength),o=new Uint8Array(s);for(let a=0;a<this.valueHex.byteLength;a++)o[a]=r[a];return o[0]&=127,wr(o,8)-n}function vd(r){let e=r<0?r*-1:r,t=128;for(let n=1;n<8;n++){if(e<=t){if(r<0){let i=t-e,a=Jt(i,8,n),c=new Uint8Array(a);return c[0]|=128,a}let s=Jt(e,8,n),o=new Uint8Array(s);if(o[0]&128){let i=s.slice(0),a=new Uint8Array(i);s=new ArrayBuffer(s.byteLength+1),o=new Uint8Array(s);for(let c=0;c<i.byteLength;c++)o[c+1]=a[c];o[0]=0}return s}t*=Math.pow(2,8)}return new ArrayBuffer(0)}function Ed(r,e){if(r.byteLength!==e.byteLength)return!1;let t=new Uint8Array(r),n=new Uint8Array(e);for(let s=0;s<t.length;s++)if(t[s]!==n[s])return!1;return!0}function qe(r,e){let t=r.toString(10);if(e<t.length)return"";let n=e-t.length,s=new Array(n);for(let i=0;i<n;i++)s[i]="0";return s.join("").concat(t)}var yE=Math.log(2);function Co(){if(typeof BigInt>"u")throw new Error("BigInt is not defined. Your environment doesn't implement BigInt.")}function wl(r){let e=0,t=0;for(let s=0;s<r.length;s++){let o=r[s];e+=o.byteLength}let n=new Uint8Array(e);for(let s=0;s<r.length;s++){let o=r[s];n.set(new Uint8Array(o),t),t+=o.byteLength}return n.buffer}function Pt(r,e,t,n){return e instanceof Uint8Array?e.byteLength?t<0?(r.error="Wrong parameter: inputOffset less than zero",!1):n<0?(r.error="Wrong parameter: inputLength less than zero",!1):e.byteLength-t-n<0?(r.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1):!0:(r.error="Wrong parameter: inputBuffer has zero length",!1):(r.error="Wrong parameter: inputBuffer must be 'Uint8Array'",!1)}var ts=class{constructor(){this.items=[]}write(e){this.items.push(e)}final(){return wl(this.items)}},es=[new Uint8Array([1])],Ad="0123456789";var fn="",it=new ArrayBuffer(0),bl=new Uint8Array(0),rs="EndOfContent",_d="OCTET STRING",Cd="BIT STRING";function Nt(r){var e;return e=class extends r{constructor(...n){var s;super(...n);let o=n[0]||{};this.isHexOnly=(s=o.isHexOnly)!==null&&s!==void 0?s:!1,this.valueHexView=o.valueHex?H.BufferSourceConverter.toUint8Array(o.valueHex):bl}get valueHex(){return this.valueHexView.slice().buffer}set valueHex(n){this.valueHexView=new Uint8Array(n)}fromBER(n,s,o){let i=n instanceof ArrayBuffer?new Uint8Array(n):n;if(!Pt(this,i,s,o))return-1;let a=s+o;return this.valueHexView=i.subarray(s,a),this.valueHexView.length?(this.blockLength=o,a):(this.warnings.push("Zero buffer length"),s)}toBER(n=!1){return this.isHexOnly?n?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.byteLength===this.valueHexView.buffer.byteLength?this.valueHexView.buffer:this.valueHexView.slice().buffer:(this.error="Flag 'isHexOnly' is not set, abort",it)}toJSON(){return{...super.toJSON(),isHexOnly:this.isHexOnly,valueHex:H.Convert.ToHex(this.valueHexView)}}},e.NAME="hexBlock",e}var kt=class{constructor({blockLength:e=0,error:t=fn,warnings:n=[],valueBeforeDecode:s=bl}={}){this.blockLength=e,this.error=t,this.warnings=n,this.valueBeforeDecodeView=H.BufferSourceConverter.toUint8Array(s)}static blockName(){return this.NAME}get valueBeforeDecode(){return this.valueBeforeDecodeView.slice().buffer}set valueBeforeDecode(e){this.valueBeforeDecodeView=new Uint8Array(e)}toJSON(){return{blockName:this.constructor.NAME,blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:H.Convert.ToHex(this.valueBeforeDecodeView)}}};kt.NAME="baseBlock";var Te=class extends kt{fromBER(e,t,n){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}toBER(e,t){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}};Te.NAME="valueBlock";var Io=class extends Nt(kt){constructor({idBlock:e={}}={}){var t,n,s,o;super(),e?(this.isHexOnly=(t=e.isHexOnly)!==null&&t!==void 0?t:!1,this.valueHexView=e.valueHex?H.BufferSourceConverter.toUint8Array(e.valueHex):bl,this.tagClass=(n=e.tagClass)!==null&&n!==void 0?n:-1,this.tagNumber=(s=e.tagNumber)!==null&&s!==void 0?s:-1,this.isConstructed=(o=e.isConstructed)!==null&&o!==void 0?o:!1):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}toBER(e=!1){let t=0;switch(this.tagClass){case 1:t|=0;break;case 2:t|=64;break;case 3:t|=128;break;case 4:t|=192;break;default:return this.error="Unknown tag class",it}if(this.isConstructed&&(t|=32),this.tagNumber<31&&!this.isHexOnly){let s=new Uint8Array(1);if(!e){let o=this.tagNumber;o&=31,t|=o,s[0]=t}return s.buffer}if(!this.isHexOnly){let s=Jt(this.tagNumber,7),o=new Uint8Array(s),i=s.byteLength,a=new Uint8Array(i+1);if(a[0]=t|31,!e){for(let c=0;c<i-1;c++)a[c+1]=o[c]|128;a[i]=o[i-1]}return a.buffer}let n=new Uint8Array(this.valueHexView.byteLength+1);if(n[0]=t|31,!e){let s=this.valueHexView;for(let o=0;o<s.length-1;o++)n[o+1]=s[o]|128;n[this.valueHexView.byteLength]=s[s.length-1]}return n.buffer}fromBER(e,t,n){let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let o=s.subarray(t,t+n);if(o.length===0)return this.error="Zero buffer length",-1;switch(o[0]&192){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=(o[0]&32)===32,this.isHexOnly=!1;let a=o[0]&31;if(a!==31)this.tagNumber=a,this.blockLength=1;else{let c=1,l=this.valueHexView=new Uint8Array(255),u=255;for(;o[c]&128;){if(l[c-1]=o[c]&127,c++,c>=o.length)return this.error="End of input reached before message was fully decoded",-1;if(c===u){u+=255;let d=new Uint8Array(u);for(let m=0;m<l.length;m++)d[m]=l[m];l=this.valueHexView=new Uint8Array(u)}}this.blockLength=c+1,l[c-1]=o[c]&127;let f=new Uint8Array(c);for(let d=0;d<c;d++)f[d]=l[d];l=this.valueHexView=new Uint8Array(c),l.set(f),this.blockLength<=9?this.tagNumber=wr(l,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(this.tagClass===1&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 13:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){return{...super.toJSON(),tagClass:this.tagClass,tagNumber:this.tagNumber,isConstructed:this.isConstructed}}};Io.NAME="identificationBlock";var Bo=class extends kt{constructor({lenBlock:e={}}={}){var t,n,s;super(),this.isIndefiniteForm=(t=e.isIndefiniteForm)!==null&&t!==void 0?t:!1,this.longFormUsed=(n=e.longFormUsed)!==null&&n!==void 0?n:!1,this.length=(s=e.length)!==null&&s!==void 0?s:0}fromBER(e,t,n){let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let o=s.subarray(t,t+n);if(o.length===0)return this.error="Zero buffer length",-1;if(o[0]===255)return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=o[0]===128,this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(o[0]&128),this.longFormUsed===!1)return this.length=o[0],this.blockLength=1,t+this.blockLength;let i=o[0]&127;if(i>8)return this.error="Too big integer",-1;if(i+1>o.length)return this.error="End of input reached before message was fully decoded",-1;let a=t+1,c=s.subarray(a,a+i);return c[i-1]===0&&this.warnings.push("Needlessly long encoded length"),this.length=wr(c,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unnecessary usage of long length form"),this.blockLength=i+1,t+this.blockLength}toBER(e=!1){let t,n;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),e===!1&&(n=new Uint8Array(t),n[0]=128),t;if(this.longFormUsed){let s=Jt(this.length,8);if(s.byteLength>127)return this.error="Too big length",it;if(t=new ArrayBuffer(s.byteLength+1),e)return t;let o=new Uint8Array(s);n=new Uint8Array(t),n[0]=s.byteLength|128;for(let i=0;i<s.byteLength;i++)n[i+1]=o[i];return t}return t=new ArrayBuffer(1),e===!1&&(n=new Uint8Array(t),n[0]=this.length),t}toJSON(){return{...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,longFormUsed:this.longFormUsed,length:this.length}}};Bo.NAME="lengthBlock";var C={},Ee=class extends kt{constructor({name:e=fn,optional:t=!1,primitiveSchema:n,...s}={},o){super(s),this.name=e,this.optional=t,n&&(this.primitiveSchema=n),this.idBlock=new Io(s),this.lenBlock=new Bo(s),this.valueBlock=o?new o(s):new Te(s)}fromBER(e,t,n){let s=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return s===-1?(this.error=this.valueBlock.error,s):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),s)}toBER(e,t){let n=t||new ts;t||Id(this);let s=this.idBlock.toBER(e);if(n.write(s),this.lenBlock.isIndefiniteForm)n.write(new Uint8Array([128]).buffer),this.valueBlock.toBER(e,n),n.write(new ArrayBuffer(2));else{let o=this.valueBlock.toBER(e);this.lenBlock.length=o.byteLength;let i=this.lenBlock.toBER(e);n.write(i),n.write(o)}return t?it:n.final()}toJSON(){let e={...super.toJSON(),idBlock:this.idBlock.toJSON(),lenBlock:this.lenBlock.toJSON(),valueBlock:this.valueBlock.toJSON(),name:this.name,optional:this.optional};return this.primitiveSchema&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}toString(e="ascii"){return e==="ascii"?this.onAsciiEncoding():H.Convert.ToHex(this.toBER())}onAsciiEncoding(){return`${this.constructor.NAME} : ${H.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`}isEqual(e){if(this===e)return!0;if(!(e instanceof this.constructor))return!1;let t=this.toBER(),n=e.toBER();return Ed(t,n)}};Ee.NAME="BaseBlock";function Id(r){if(r instanceof C.Constructed)for(let e of r.valueBlock.value)Id(e)&&(r.lenBlock.isIndefiniteForm=!0);return!!r.lenBlock.isIndefiniteForm}var ko=class extends Ee{constructor({value:e=fn,...t}={},n){super(t,n),e&&this.fromString(e)}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}fromBER(e,t,n){let s=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return s===-1?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHexView),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),s)}onAsciiEncoding(){return`${this.constructor.NAME} : '${this.valueBlock.value}'`}};ko.NAME="BaseStringBlock";var To=class extends Nt(Te){constructor({isHexOnly:e=!0,...t}={}){super(t),this.isHexOnly=e}};To.NAME="PrimitiveValueBlock";var Bd,Lo=class extends Ee{constructor(e={}){super(e,To),this.idBlock.isConstructed=!1}};Bd=Lo;C.Primitive=Bd;Lo.NAME="PRIMITIVE";function my(r,e){if(r instanceof e)return r;let t=new e;return t.idBlock=r.idBlock,t.lenBlock=r.lenBlock,t.warnings=r.warnings,t.valueBeforeDecodeView=r.valueBeforeDecodeView,t}function fi(r,e=0,t=r.length){let n=e,s=new Ee({},Te),o=new kt;if(!Pt(o,r,e,t))return s.error=o.error,{offset:-1,result:s};if(!r.subarray(e,e+t).length)return s.error="Zero buffer length",{offset:-1,result:s};let a=s.idBlock.fromBER(r,e,t);if(s.idBlock.warnings.length&&s.warnings.concat(s.idBlock.warnings),a===-1)return s.error=s.idBlock.error,{offset:-1,result:s};if(e=a,t-=s.idBlock.blockLength,a=s.lenBlock.fromBER(r,e,t),s.lenBlock.warnings.length&&s.warnings.concat(s.lenBlock.warnings),a===-1)return s.error=s.lenBlock.error,{offset:-1,result:s};if(e=a,t-=s.lenBlock.blockLength,!s.idBlock.isConstructed&&s.lenBlock.isIndefiniteForm)return s.error="Indefinite length form used for primitive encoding form",{offset:-1,result:s};let c=Ee;switch(s.idBlock.tagClass){case 1:if(s.idBlock.tagNumber>=37&&s.idBlock.isHexOnly===!1)return s.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:s};switch(s.idBlock.tagNumber){case 0:if(s.idBlock.isConstructed&&s.lenBlock.length>0)return s.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:s};c=C.EndOfContent;break;case 1:c=C.Boolean;break;case 2:c=C.Integer;break;case 3:c=C.BitString;break;case 4:c=C.OctetString;break;case 5:c=C.Null;break;case 6:c=C.ObjectIdentifier;break;case 10:c=C.Enumerated;break;case 12:c=C.Utf8String;break;case 13:c=C.RelativeObjectIdentifier;break;case 14:c=C.TIME;break;case 15:return s.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:s};case 16:c=C.Sequence;break;case 17:c=C.Set;break;case 18:c=C.NumericString;break;case 19:c=C.PrintableString;break;case 20:c=C.TeletexString;break;case 21:c=C.VideotexString;break;case 22:c=C.IA5String;break;case 23:c=C.UTCTime;break;case 24:c=C.GeneralizedTime;break;case 25:c=C.GraphicString;break;case 26:c=C.VisibleString;break;case 27:c=C.GeneralString;break;case 28:c=C.UniversalString;break;case 29:c=C.CharacterString;break;case 30:c=C.BmpString;break;case 31:c=C.DATE;break;case 32:c=C.TimeOfDay;break;case 33:c=C.DateTime;break;case 34:c=C.Duration;break;default:{let l=s.idBlock.isConstructed?new C.Constructed:new C.Primitive;l.idBlock=s.idBlock,l.lenBlock=s.lenBlock,l.warnings=s.warnings,s=l}}break;case 2:case 3:case 4:default:c=s.idBlock.isConstructed?C.Constructed:C.Primitive}return s=my(s,c),a=s.fromBER(r,e,s.lenBlock.isIndefiniteForm?t:s.lenBlock.length),s.valueBeforeDecodeView=r.subarray(n,n+s.blockLength),{offset:a,result:s}}function xl(r){if(!r.byteLength){let e=new Ee({},Te);return e.error="Input buffer has zero length",{offset:-1,result:e}}return fi(H.BufferSourceConverter.toUint8Array(r).slice(),0,r.byteLength)}function gy(r,e){return r?1:e}var ht=class extends Te{constructor({value:e=[],isIndefiniteForm:t=!1,...n}={}){super(n),this.value=e,this.isIndefiniteForm=t}fromBER(e,t,n){let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;if(this.valueBeforeDecodeView=s.subarray(t,t+n),this.valueBeforeDecodeView.length===0)return this.warnings.push("Zero buffer length"),t;let o=t;for(;gy(this.isIndefiniteForm,n)>0;){let i=fi(s,o,n);if(i.offset===-1)return this.error=i.result.error,this.warnings.concat(i.result.warnings),-1;if(o=i.offset,this.blockLength+=i.result.blockLength,n-=i.result.blockLength,this.value.push(i.result),this.isIndefiniteForm&&i.result.constructor.NAME===rs)break}return this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.NAME===rs?this.value.pop():this.warnings.push("No EndOfContent block encoded")),o}toBER(e,t){let n=t||new ts;for(let s=0;s<this.value.length;s++)this.value[s].toBER(e,n);return t?it:n.final()}toJSON(){let e={...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,value:[]};for(let t of this.value)e.value.push(t.toJSON());return e}};ht.NAME="ConstructedValueBlock";var kd,Qt=class extends Ee{constructor(e={}){super(e,ht),this.idBlock.isConstructed=!0}fromBER(e,t,n){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;let s=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return s===-1?(this.error=this.valueBlock.error,s):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),s)}onAsciiEncoding(){let e=[];for(let n of this.valueBlock.value)e.push(n.toString("ascii").split(`
+"use strict";var Libp2P=(()=>{var Dm=Object.create;var qs=Object.defineProperty;var Rm=Object.getOwnPropertyDescriptor;var Mm=Object.getOwnPropertyNames;var Om=Object.getPrototypeOf,Um=Object.prototype.hasOwnProperty;var wt=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),De=(r,e)=>{for(var t in e)qs(r,t,{get:e[t],enumerable:!0})},mf=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Mm(e))!Um.call(r,s)&&s!==t&&qs(r,s,{get:()=>e[s],enumerable:!(n=Rm(e,s))||n.enumerable});return r};var Hr=(r,e,t)=>(t=r!=null?Dm(Om(r)):{},mf(e||!r||!r.__esModule?qs(t,"default",{value:r,enumerable:!0}):t,r)),Fm=r=>mf(qs({},"__esModule",{value:!0}),r);var xd=wt(an=>{"use strict";var ay="[object ArrayBuffer]",Bt=class r{static isArrayBuffer(e){return Object.prototype.toString.call(e)===ay}static toArrayBuffer(e){return this.isArrayBuffer(e)?e:e.byteLength===e.buffer.byteLength||e.byteOffset===0&&e.byteLength===e.buffer.byteLength?e.buffer:this.toUint8Array(e.buffer).slice(e.byteOffset,e.byteOffset+e.byteLength).buffer}static toUint8Array(e){return this.toView(e,Uint8Array)}static toView(e,t){if(e.constructor===t)return e;if(this.isArrayBuffer(e))return new t(e);if(this.isArrayBufferView(e))return new t(e.buffer,e.byteOffset,e.byteLength);throw new TypeError("The provided value is not of type '(ArrayBuffer or ArrayBufferView)'")}static isBufferSource(e){return this.isArrayBufferView(e)||this.isArrayBuffer(e)}static isArrayBufferView(e){return ArrayBuffer.isView(e)||e&&this.isArrayBuffer(e.buffer)}static isEqual(e,t){let n=r.toUint8Array(e),s=r.toUint8Array(t);if(n.length!==s.byteLength)return!1;for(let o=0;o<n.length;o++)if(n[o]!==s[o])return!1;return!0}static concat(...e){let t;Array.isArray(e[0])&&!(e[1]instanceof Function)||Array.isArray(e[0])&&e[1]instanceof Function?t=e[0]:e[e.length-1]instanceof Function?t=e.slice(0,e.length-1):t=e;let n=0;for(let i of t)n+=i.byteLength;let s=new Uint8Array(n),o=0;for(let i of t){let a=this.toUint8Array(i);s.set(a,o),o+=a.length}return e[e.length-1]instanceof Function?this.toView(s,e[e.length-1]):s.buffer}},gl="string",cy=/^[0-9a-f\s]+$/i,ly=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,uy=/^[a-zA-Z0-9-_]+$/,Ao=class{static fromString(e){let t=unescape(encodeURIComponent(e)),n=new Uint8Array(t.length);for(let s=0;s<t.length;s++)n[s]=t.charCodeAt(s);return n.buffer}static toString(e){let t=Bt.toUint8Array(e),n="";for(let o=0;o<t.length;o++)n+=String.fromCharCode(t[o]);return decodeURIComponent(escape(n))}},Ze=class{static toString(e,t=!1){let n=Bt.toArrayBuffer(e),s=new DataView(n),o="";for(let i=0;i<n.byteLength;i+=2){let a=s.getUint16(i,t);o+=String.fromCharCode(a)}return o}static fromString(e,t=!1){let n=new ArrayBuffer(e.length*2),s=new DataView(n);for(let o=0;o<e.length;o++)s.setUint16(o*2,e.charCodeAt(o),t);return n}},So=class r{static isHex(e){return typeof e===gl&&cy.test(e)}static isBase64(e){return typeof e===gl&&ly.test(e)}static isBase64Url(e){return typeof e===gl&&uy.test(e)}static ToString(e,t="utf8"){let n=Bt.toUint8Array(e);switch(t.toLowerCase()){case"utf8":return this.ToUtf8String(n);case"binary":return this.ToBinary(n);case"hex":return this.ToHex(n);case"base64":return this.ToBase64(n);case"base64url":return this.ToBase64Url(n);case"utf16le":return Ze.toString(n,!0);case"utf16":case"utf16be":return Ze.toString(n);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromString(e,t="utf8"){if(!e)return new ArrayBuffer(0);switch(t.toLowerCase()){case"utf8":return this.FromUtf8String(e);case"binary":return this.FromBinary(e);case"hex":return this.FromHex(e);case"base64":return this.FromBase64(e);case"base64url":return this.FromBase64Url(e);case"utf16le":return Ze.fromString(e,!0);case"utf16":case"utf16be":return Ze.fromString(e);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToBase64(e){let t=Bt.toUint8Array(e);if(typeof btoa<"u"){let n=this.ToString(t,"binary");return btoa(n)}else return Buffer.from(t).toString("base64")}static FromBase64(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isBase64(t))throw new TypeError("Argument 'base64Text' is not Base64 encoded");return typeof atob<"u"?this.FromBinary(atob(t)):new Uint8Array(Buffer.from(t,"base64")).buffer}static FromBase64Url(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isBase64Url(t))throw new TypeError("Argument 'base64url' is not Base64Url encoded");return this.FromBase64(this.Base64Padding(t.replace(/\-/g,"+").replace(/\_/g,"/")))}static ToBase64Url(e){return this.ToBase64(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")}static FromUtf8String(e,t=r.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.FromBinary(e);case"utf8":return Ao.fromString(e);case"utf16":case"utf16be":return Ze.fromString(e);case"utf16le":case"usc2":return Ze.fromString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToUtf8String(e,t=r.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.ToBinary(e);case"utf8":return Ao.toString(e);case"utf16":case"utf16be":return Ze.toString(e);case"utf16le":case"usc2":return Ze.toString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromBinary(e){let t=e.length,n=new Uint8Array(t);for(let s=0;s<t;s++)n[s]=e.charCodeAt(s);return n.buffer}static ToBinary(e){let t=Bt.toUint8Array(e),n="";for(let s=0;s<t.length;s++)n+=String.fromCharCode(t[s]);return n}static ToHex(e){let t=Bt.toUint8Array(e),n="",s=t.length;for(let o=0;o<s;o++){let i=t[o];i<16&&(n+="0"),n+=i.toString(16)}return n}static FromHex(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isHex(t))throw new TypeError("Argument 'hexString' is not HEX encoded");t.length%2&&(t=`0${t}`);let n=new Uint8Array(t.length/2);for(let s=0;s<t.length;s=s+2){let o=t.slice(s,s+2);n[s/2]=parseInt(o,16)}return n.buffer}static ToUtf16String(e,t=!1){return Ze.toString(e,t)}static FromUtf16String(e,t=!1){return Ze.fromString(e,t)}static Base64Padding(e){let t=4-e.length%4;if(t<4)for(let n=0;n<t;n++)e+="=";return e}static formatString(e){return e?.replace(/[\n\r\t ]/g,"")||""}};So.DEFAULT_UTF8_ENCODING="utf8";function fy(r,...e){let t=arguments[0];for(let n=1;n<arguments.length;n++){let s=arguments[n];for(let o in s)t[o]=s[o]}return t}function dy(...r){let e=r.map(s=>s.byteLength).reduce((s,o)=>s+o),t=new Uint8Array(e),n=0;return r.map(s=>new Uint8Array(s)).forEach(s=>{for(let o of s)t[n++]=o}),t.buffer}function hy(r,e){if(!(r&&e)||r.byteLength!==e.byteLength)return!1;let t=new Uint8Array(r),n=new Uint8Array(e);for(let s=0;s<r.byteLength;s++)if(t[s]!==n[s])return!1;return!0}an.BufferSourceConverter=Bt;an.Convert=So;an.assign=fy;an.combine=dy;an.isEqual=hy});var Mh=wt((cA,Nl)=>{"use strict";var My=Object.prototype.hasOwnProperty,Ve="~";function ws(){}Object.create&&(ws.prototype=Object.create(null),new ws().__proto__||(Ve=!1));function Oy(r,e,t){this.fn=r,this.context=e,this.once=t||!1}function Rh(r,e,t,n,s){if(typeof t!="function")throw new TypeError("The listener must be a function");var o=new Oy(t,n||r,s),i=Ve?Ve+e:e;return r._events[i]?r._events[i].fn?r._events[i]=[r._events[i],o]:r._events[i].push(o):(r._events[i]=o,r._eventsCount++),r}function yi(r,e){--r._eventsCount===0?r._events=new ws:delete r._events[e]}function Le(){this._events=new ws,this._eventsCount=0}Le.prototype.eventNames=function(){var e=[],t,n;if(this._eventsCount===0)return e;for(n in t=this._events)My.call(t,n)&&e.push(Ve?n.slice(1):n);return Object.getOwnPropertySymbols?e.concat(Object.getOwnPropertySymbols(t)):e};Le.prototype.listeners=function(e){var t=Ve?Ve+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var s=0,o=n.length,i=new Array(o);s<o;s++)i[s]=n[s].fn;return i};Le.prototype.listenerCount=function(e){var t=Ve?Ve+e:e,n=this._events[t];return n?n.fn?1:n.length:0};Le.prototype.emit=function(e,t,n,s,o,i){var a=Ve?Ve+e:e;if(!this._events[a])return!1;var c=this._events[a],l=arguments.length,u,f;if(c.fn){switch(c.once&&this.removeListener(e,c.fn,void 0,!0),l){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,t),!0;case 3:return c.fn.call(c.context,t,n),!0;case 4:return c.fn.call(c.context,t,n,s),!0;case 5:return c.fn.call(c.context,t,n,s,o),!0;case 6:return c.fn.call(c.context,t,n,s,o,i),!0}for(f=1,u=new Array(l-1);f<l;f++)u[f-1]=arguments[f];c.fn.apply(c.context,u)}else{var d=c.length,m;for(f=0;f<d;f++)switch(c[f].once&&this.removeListener(e,c[f].fn,void 0,!0),l){case 1:c[f].fn.call(c[f].context);break;case 2:c[f].fn.call(c[f].context,t);break;case 3:c[f].fn.call(c[f].context,t,n);break;case 4:c[f].fn.call(c[f].context,t,n,s);break;default:if(!u)for(m=1,u=new Array(l-1);m<l;m++)u[m-1]=arguments[m];c[f].fn.apply(c[f].context,u)}}return!0};Le.prototype.on=function(e,t,n){return Rh(this,e,t,n,!1)};Le.prototype.once=function(e,t,n){return Rh(this,e,t,n,!0)};Le.prototype.removeListener=function(e,t,n,s){var o=Ve?Ve+e:e;if(!this._events[o])return this;if(!t)return yi(this,o),this;var i=this._events[o];if(i.fn)i.fn===t&&(!s||i.once)&&(!n||i.context===n)&&yi(this,o);else{for(var a=0,c=[],l=i.length;a<l;a++)(i[a].fn!==t||s&&!i[a].once||n&&i[a].context!==n)&&c.push(i[a]);c.length?this._events[o]=c.length===1?c[0]:c:yi(this,o)}return this};Le.prototype.removeAllListeners=function(e){var t;return e?(t=Ve?Ve+e:e,this._events[t]&&yi(this,t)):(this._events=new ws,this._eventsCount=0),this};Le.prototype.off=Le.prototype.removeListener;Le.prototype.addListener=Le.prototype.on;Le.prefixed=Ve;Le.EventEmitter=Le;typeof Nl<"u"&&(Nl.exports=Le)});var Hh=wt((LA,Vh)=>{Vh.exports=function(r){if(!r)throw Error("hashlru must have a max value, of type number, greater than 0");var e=0,t=Object.create(null),n=Object.create(null);function s(o,i){t[o]=i,e++,e>=r&&(e=0,n=t,t=Object.create(null))}return{has:function(o){return t[o]!==void 0||n[o]!==void 0},remove:function(o){t[o]!==void 0&&(t[o]=void 0),n[o]!==void 0&&(n[o]=void 0)},get:function(o){var i=t[o];if(i!==void 0)return i;if((i=n[o])!==void 0)return s(o,i),i},set:function(o,i){t[o]!==void 0?t[o]=i:s(o,i)},clear:function(){t=Object.create(null),n=Object.create(null)}}}});var op=wt((i_,sp)=>{"use strict";sp.exports=r=>{if(Object.prototype.toString.call(r)!=="[object Object]")return!1;let e=Object.getPrototypeOf(r);return e===null||e===Object.prototype}});var fp=wt((lp,up)=>{"use strict";var Bi=op(),{hasOwnProperty:ap}=Object.prototype,{propertyIsEnumerable:cw}=Object,vn=(r,e,t)=>Object.defineProperty(r,e,{value:t,writable:!0,enumerable:!0,configurable:!0}),lw=lp,ip={concatArrays:!1,ignoreUndefined:!1},ki=r=>{let e=[];for(let t in r)ap.call(r,t)&&e.push(t);if(Object.getOwnPropertySymbols){let t=Object.getOwnPropertySymbols(r);for(let n of t)cw.call(r,n)&&e.push(n)}return e};function En(r){return Array.isArray(r)?uw(r):Bi(r)?fw(r):r}function uw(r){let e=r.slice(0,0);return ki(r).forEach(t=>{vn(e,t,En(r[t]))}),e}function fw(r){let e=Object.getPrototypeOf(r)===null?Object.create(null):{};return ki(r).forEach(t=>{vn(e,t,En(r[t]))}),e}var cp=(r,e,t,n)=>(t.forEach(s=>{typeof e[s]>"u"&&n.ignoreUndefined||(s in r&&r[s]!==Object.getPrototypeOf(r)?vn(r,s,nu(r[s],e[s],n)):vn(r,s,En(e[s])))}),r),dw=(r,e,t)=>{let n=r.slice(0,0),s=0;return[r,e].forEach(o=>{let i=[];for(let a=0;a<o.length;a++)ap.call(o,a)&&(i.push(String(a)),o===r?vn(n,s++,o[a]):vn(n,s++,En(o[a])));n=cp(n,o,ki(o).filter(a=>!i.includes(a)),t)}),n};function nu(r,e,t){return t.concatArrays&&Array.isArray(r)&&Array.isArray(e)?dw(r,e,t):!Bi(e)||!Bi(r)?En(e):cp(r,e,ki(e),t)}up.exports=function(...r){let e=nu(En(ip),this!==lw&&this||{},ip),t={_:{}};for(let n of r)if(n!==void 0){if(!Bi(n))throw new TypeError("`"+n+"` is not an Option Object");t=nu(t,{_:n},e)}return t._}});var Op=wt(ks=>{(function(){var r,e,t,n,s,o,i,a;a=function(c){var l,u,f,d;return l=(c&255<<24)>>>24,u=(c&255<<16)>>>16,f=(c&65280)>>>8,d=c&255,[l,u,f,d].join(".")},i=function(c){var l,u,f,d,m,p;for(l=[],f=d=0;d<=3&&c.length!==0;f=++d){if(f>0){if(c[0]!==".")throw new Error("Invalid IP");c=c.substring(1)}p=e(c),m=p[0],u=p[1],c=c.substring(u),l.push(m)}if(c.length!==0)throw new Error("Invalid IP");switch(l.length){case 1:if(l[0]>4294967295)throw new Error("Invalid IP");return l[0]>>>0;case 2:if(l[0]>255||l[1]>16777215)throw new Error("Invalid IP");return(l[0]<<24|l[1])>>>0;case 3:if(l[0]>255||l[1]>255||l[2]>65535)throw new Error("Invalid IP");return(l[0]<<24|l[1]<<16|l[2])>>>0;case 4:if(l[0]>255||l[1]>255||l[2]>255||l[3]>255)throw new Error("Invalid IP");return(l[0]<<24|l[1]<<16|l[2]<<8|l[3])>>>0;default:throw new Error("Invalid IP")}},t=function(c){return c.charCodeAt(0)},n=t("0"),o=t("a"),s=t("A"),e=function(c){var l,u,f,d,m;for(d=0,l=10,u="9",f=0,c.length>1&&c[f]==="0"&&(c[f+1]==="x"||c[f+1]==="X"?(f+=2,l=16):"0"<=c[f+1]&&c[f+1]<="9"&&(f++,l=8,u="7")),m=f;f<c.length;){if("0"<=c[f]&&c[f]<=u)d=d*l+(t(c[f])-n)>>>0;else if(l===16)if("a"<=c[f]&&c[f]<="f")d=d*l+(10+t(c[f])-o)>>>0;else if("A"<=c[f]&&c[f]<="F")d=d*l+(10+t(c[f])-s)>>>0;else break;else break;if(d>4294967295)throw new Error("too large");f++}if(f===m)throw new Error("empty octet");return[d,f]},r=function(){function c(l,u){var f,d,m,p;if(typeof l!="string")throw new Error("Missing `net' parameter");if(u||(p=l.split("/",2),l=p[0],u=p[1]),u||(u=32),typeof u=="string"&&u.indexOf(".")>-1){try{this.maskLong=i(u)}catch(g){throw f=g,new Error("Invalid mask: "+u)}for(d=m=32;m>=0;d=--m)if(this.maskLong===4294967295<<32-d>>>0){this.bitmask=d;break}}else if(u||u===0)this.bitmask=parseInt(u,10),this.maskLong=0,this.bitmask>0&&(this.maskLong=4294967295<<32-this.bitmask>>>0);else throw new Error("Invalid mask: empty");try{this.netLong=(i(l)&this.maskLong)>>>0}catch(g){throw f=g,new Error("Invalid net address: "+l)}if(!(this.bitmask<=32))throw new Error("Invalid mask for ip4: "+u);this.size=Math.pow(2,32-this.bitmask),this.base=a(this.netLong),this.mask=a(this.maskLong),this.hostmask=a(~this.maskLong),this.first=this.bitmask<=30?a(this.netLong+1):this.base,this.last=this.bitmask<=30?a(this.netLong+this.size-2):a(this.netLong+this.size-1),this.broadcast=this.bitmask<=30?a(this.netLong+this.size-1):void 0}return c.prototype.contains=function(l){return typeof l=="string"&&(l.indexOf("/")>0||l.split(".").length!==4)&&(l=new c(l)),l instanceof c?this.contains(l.base)&&this.contains(l.broadcast||l.last):(i(l)&this.maskLong)>>>0===(this.netLong&this.maskLong)>>>0},c.prototype.next=function(l){return l==null&&(l=1),new c(a(this.netLong+this.size*l),this.mask)},c.prototype.forEach=function(l){var u,f,d;for(d=i(this.first),f=i(this.last),u=0;d<=f;)l(a(d),d,u),u++,d++},c.prototype.toString=function(){return this.base+"/"+this.bitmask},c}(),ks.ip2long=i,ks.long2ip=a,ks.Netmask=r}).call(ks)});var lm=wt((Sk,cm)=>{function Ye(r,e){typeof e=="boolean"&&(e={forever:e}),this._originalTimeouts=JSON.parse(JSON.stringify(r)),this._timeouts=r,this._options=e||{},this._maxRetryTime=e&&e.maxRetryTime||1/0,this._fn=null,this._errors=[],this._attempts=1,this._operationTimeout=null,this._operationTimeoutCb=null,this._timeout=null,this._operationStart=null,this._timer=null,this._options.forever&&(this._cachedTimeouts=this._timeouts.slice(0))}cm.exports=Ye;Ye.prototype.reset=function(){this._attempts=1,this._timeouts=this._originalTimeouts.slice(0)};Ye.prototype.stop=function(){this._timeout&&clearTimeout(this._timeout),this._timer&&clearTimeout(this._timer),this._timeouts=[],this._cachedTimeouts=null};Ye.prototype.retry=function(r){if(this._timeout&&clearTimeout(this._timeout),!r)return!1;var e=new Date().getTime();if(r&&e-this._operationStart>=this._maxRetryTime)return this._errors.push(r),this._errors.unshift(new Error("RetryOperation timeout occurred")),!1;this._errors.push(r);var t=this._timeouts.shift();if(t===void 0)if(this._cachedTimeouts)this._errors.splice(0,this._errors.length-1),t=this._cachedTimeouts.slice(-1);else return!1;var n=this;return this._timer=setTimeout(function(){n._attempts++,n._operationTimeoutCb&&(n._timeout=setTimeout(function(){n._operationTimeoutCb(n._attempts)},n._operationTimeout),n._options.unref&&n._timeout.unref()),n._fn(n._attempts)},t),this._options.unref&&this._timer.unref(),!0};Ye.prototype.attempt=function(r,e){this._fn=r,e&&(e.timeout&&(this._operationTimeout=e.timeout),e.cb&&(this._operationTimeoutCb=e.cb));var t=this;this._operationTimeoutCb&&(this._timeout=setTimeout(function(){t._operationTimeoutCb()},t._operationTimeout)),this._operationStart=new Date().getTime(),this._fn(this._attempts)};Ye.prototype.try=function(r){console.log("Using RetryOperation.try() is deprecated"),this.attempt(r)};Ye.prototype.start=function(r){console.log("Using RetryOperation.start() is deprecated"),this.attempt(r)};Ye.prototype.start=Ye.prototype.try;Ye.prototype.errors=function(){return this._errors};Ye.prototype.attempts=function(){return this._attempts};Ye.prototype.mainError=function(){if(this._errors.length===0)return null;for(var r={},e=null,t=0,n=0;n<this._errors.length;n++){var s=this._errors[n],o=s.message,i=(r[o]||0)+1;r[o]=i,i>=t&&(e=s,t=i)}return e}});var um=wt(Ur=>{var $b=lm();Ur.operation=function(r){var e=Ur.timeouts(r);return new $b(e,{forever:r&&(r.forever||r.retries===1/0),unref:r&&r.unref,maxRetryTime:r&&r.maxRetryTime})};Ur.timeouts=function(r){if(r instanceof Array)return[].concat(r);var e={retries:10,factor:2,minTimeout:1*1e3,maxTimeout:1/0,randomize:!1};for(var t in r)e[t]=r[t];if(e.minTimeout>e.maxTimeout)throw new Error("minTimeout is greater than maxTimeout");for(var n=[],s=0;s<e.retries;s++)n.push(this.createTimeout(s,e));return r&&r.forever&&!n.length&&n.push(this.createTimeout(s,e)),n.sort(function(o,i){return o-i}),n};Ur.createTimeout=function(r,e){var t=e.randomize?Math.random()+1:1,n=Math.round(t*Math.max(e.minTimeout,1)*Math.pow(e.factor,r));return n=Math.min(n,e.maxTimeout),n};Ur.wrap=function(r,e,t){if(e instanceof Array&&(t=e,e=null),!t){t=[];for(var n in r)typeof r[n]=="function"&&t.push(n)}for(var s=0;s<t.length;s++){var o=t[s],i=r[o];r[o]=function(c){var l=Ur.operation(e),u=Array.prototype.slice.call(arguments,1),f=u.pop();u.push(function(d){l.retry(d)||(d&&(arguments[0]=l.mainError()),f.apply(this,arguments))}),l.attempt(function(){c.apply(r,u)})}.bind(r,i),r[o].options=e}}});var dm=wt((Ck,fm)=>{fm.exports=um()});var gx={};De(gx,{createLibp2p:()=>mx});var gf=Symbol.for("@libp2p/connection");var rc=Symbol.for("@libp2p/content-routing");var nc=Symbol.for("@libp2p/peer-discovery");var zs=Symbol.for("@libp2p/peer-id");function Gs(r){return!!r?.[zs]}var sc=Symbol.for("@libp2p/peer-routing");var oc="keep-alive";var Sx=Symbol.for("@libp2p/transport");var Ft;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(Ft||(Ft={}));var Je=class extends Error{static name="AbortError";constructor(e="The operation was aborted"){super(e),this.name="AbortError"}};var D=class extends Error{static name="InvalidParametersError";constructor(e="Invalid parameters"){super(e),this.name="InvalidParametersError"}},Kr=class extends Error{static name="InvalidPublicKeyError";constructor(e="Invalid public key"){super(e),this.name="InvalidPublicKeyError"}},On=class extends Error{static name="InvalidPrivateKeyError";constructor(e="Invalid private key"){super(e),this.name="InvalidPrivateKeyError"}};var Ws=class extends Error{static name="ConnectionClosingError";constructor(e="The connection is closing"){super(e),this.name="ConnectionClosingError"}},$r=class extends Error{static name="ConnectionClosedError";constructor(e="The connection is closed"){super(e),this.name="ConnectionClosedError"}};var js=class extends Error{static name="NotFoundError";constructor(e="Not found"){super(e),this.name="NotFoundError"}},qr=class extends Error{static name="InvalidPeerIdError";constructor(e="Invalid PeerID"){super(e),this.name="InvalidPeerIdError"}},Vt=class extends Error{static name="InvalidMultiaddrError";constructor(e="Invalid multiaddr"){super(e),this.name="InvalidMultiaddrError"}},Zs=class extends Error{static name="InvalidCIDError";constructor(e="Invalid CID"){super(e),this.name="InvalidCIDError"}},Xs=class extends Error{static name="InvalidMultihashError";constructor(e="Invalid Multihash"){super(e),this.name="InvalidMultihashError"}},Un=class extends Error{static name="UnsupportedProtocolError";constructor(e="Unsupported protocol error"){super(e),this.name="UnsupportedProtocolError"}},Ys=class extends Error{static name="InvalidMessageError";constructor(e="Invalid message"){super(e),this.name="InvalidMessageError"}};var Js=class extends Error{static name="TimeoutError";constructor(e="Timed out"){super(e),this.name="TimeoutError"}},bt=class extends Error{static name="NotStartedError";constructor(e="Not started"){super(e),this.name="NotStartedError"}};var zr=class extends Error{static name="DialError";constructor(e="Dial error"){super(e),this.name="DialError"}};var Gr=class extends Error{static name="LimitedConnectionError";constructor(e="Limited connection"){super(e),this.name="LimitedConnectionError"}},Qs=class extends Error{static name="TooManyInboundProtocolStreamsError";constructor(e="Too many inbound protocol streams"){super(e),this.name="TooManyInboundProtocolStreamsError"}},eo=class extends Error{static name="TooManyOutboundProtocolStreamsError";constructor(e="Too many outbound protocol streams"){super(e),this.name="TooManyOutboundProtocolStreamsError"}},Ht=class extends Error{static name="UnsupportedKeyTypeError";constructor(e="Unsupported key type"){super(e),this.name="UnsupportedKeyTypeError"}};var xt=class extends EventTarget{#e=new Map;constructor(){super()}listenerCount(e){let t=this.#e.get(e);return t==null?0:t.length}addEventListener(e,t,n){super.addEventListener(e,t,n);let s=this.#e.get(e);s==null&&(s=[],this.#e.set(e,s)),s.push({callback:t,once:(n!==!0&&n!==!1&&n?.once)??!1})}removeEventListener(e,t,n){super.removeEventListener(e.toString(),t??null,n);let s=this.#e.get(e);s!=null&&(s=s.filter(({callback:o})=>o!==t),this.#e.set(e,s))}dispatchEvent(e){let t=super.dispatchEvent(e),n=this.#e.get(e.type);return n==null||(n=n.filter(({once:s})=>!s),this.#e.set(e.type,n)),t}safeDispatchEvent(e,t={}){return this.dispatchEvent(new CustomEvent(e,t))}};function to(r){return r!=null&&typeof r.start=="function"&&typeof r.stop=="function"}async function yf(...r){let e=[];for(let t of r)to(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStart!=null&&await t.beforeStart()})),await Promise.all(e.map(async t=>{await t.start()})),await Promise.all(e.map(async t=>{t.afterStart!=null&&await t.afterStart()}))}async function wf(...r){let e=[];for(let t of r)to(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStop!=null&&await t.beforeStop()})),await Promise.all(e.map(async t=>{await t.stop()})),await Promise.all(e.map(async t=>{t.afterStop!=null&&await t.afterStop()}))}var Fn=Symbol.for("@libp2p/service-capabilities"),ic=Symbol.for("@libp2p/service-dependencies");var fc={};De(fc,{base58btc:()=>X,base58flickr:()=>zm});var Yx=new Uint8Array(0);function bf(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function vt(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function xf(r){return new TextEncoder().encode(r)}function vf(r){return new TextDecoder().decode(r)}function Vm(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var s=0;s<r.length;s++){var o=r.charAt(s),i=o.charCodeAt(0);if(t[i]!==255)throw new TypeError(o+" is ambiguous");t[i]=s}var a=r.length,c=r.charAt(0),l=Math.log(a)/Math.log(256),u=Math.log(256)/Math.log(a);function f(p){if(p instanceof Uint8Array||(ArrayBuffer.isView(p)?p=new Uint8Array(p.buffer,p.byteOffset,p.byteLength):Array.isArray(p)&&(p=Uint8Array.from(p))),!(p instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(p.length===0)return"";for(var g=0,h=0,w=0,x=p.length;w!==x&&p[w]===0;)w++,g++;for(var y=(x-w)*u+1>>>0,E=new Uint8Array(y);w!==x;){for(var _=p[w],L=0,I=y-1;(_!==0||L<h)&&I!==-1;I--,L++)_+=256*E[I]>>>0,E[I]=_%a>>>0,_=_/a>>>0;if(_!==0)throw new Error("Non-zero carry");h=L,w++}for(var T=y-h;T!==y&&E[T]===0;)T++;for(var k=c.repeat(g);T<y;++T)k+=r.charAt(E[T]);return k}function d(p){if(typeof p!="string")throw new TypeError("Expected String");if(p.length===0)return new Uint8Array;var g=0;if(p[g]!==" "){for(var h=0,w=0;p[g]===c;)h++,g++;for(var x=(p.length-g)*l+1>>>0,y=new Uint8Array(x);p[g];){var E=t[p.charCodeAt(g)];if(E===255)return;for(var _=0,L=x-1;(E!==0||_<w)&&L!==-1;L--,_++)E+=a*y[L]>>>0,y[L]=E%256>>>0,E=E/256>>>0;if(E!==0)throw new Error("Non-zero carry");w=_,g++}if(p[g]!==" "){for(var I=x-w;I!==x&&y[I]===0;)I++;for(var T=new Uint8Array(h+(x-I)),k=h;I!==x;)T[k++]=y[I++];return T}}}function m(p){var g=d(p);if(g)return g;throw new Error(`Non-${e} character`)}return{encode:f,decodeUnsafe:d,decode:m}}var Hm=Vm,Km=Hm,Af=Km;var ac=class{name;prefix;baseEncode;constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},cc=class{name;prefix;baseDecode;prefixCodePoint;constructor(e,t,n){this.name=e,this.prefix=t;let s=t.codePointAt(0);if(s===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=s,this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return Sf(this,e)}},lc=class{decoders;constructor(e){this.decoders=e}or(e){return Sf(this,e)}decode(e){let t=e[0],n=this.decoders[t];if(n!=null)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Sf(r,e){return new lc({...r.decoders??{[r.prefix]:r},...e.decoders??{[e.prefix]:e}})}var uc=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(e,t,n,s){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=s,this.encoder=new ac(e,t,n),this.decoder=new cc(e,t,s)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};function Wr({name:r,prefix:e,encode:t,decode:n}){return new uc(r,e,t,n)}function Kt({name:r,prefix:e,alphabet:t}){let{encode:n,decode:s}=Af(t,r);return Wr({prefix:e,name:r,encode:n,decode:o=>vt(s(o))})}function $m(r,e,t,n){let s={};for(let u=0;u<e.length;++u)s[e[u]]=u;let o=r.length;for(;r[o-1]==="=";)--o;let i=new Uint8Array(o*t/8|0),a=0,c=0,l=0;for(let u=0;u<o;++u){let f=s[r[u]];if(f===void 0)throw new SyntaxError(`Non-${n} character`);c=c<<t|f,a+=t,a>=8&&(a-=8,i[l++]=255&c>>a)}if(a>=t||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return i}function qm(r,e,t){let n=e[e.length-1]==="=",s=(1<<t)-1,o="",i=0,a=0;for(let c=0;c<r.length;++c)for(a=a<<8|r[c],i+=8;i>t;)i-=t,o+=e[s&a>>i];if(i!==0&&(o+=e[s&a<<t-i]),n)for(;o.length*t&7;)o+="=";return o}function ae({name:r,prefix:e,bitsPerChar:t,alphabet:n}){return Wr({prefix:e,name:r,encode(s){return qm(s,n,t)},decode(s){return $m(s,n,t,r)}})}var X=Kt({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),zm=Kt({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var dc={};De(dc,{base32:()=>Ge,base32hex:()=>Zm,base32hexpad:()=>Ym,base32hexpadupper:()=>Jm,base32hexupper:()=>Xm,base32pad:()=>Wm,base32padupper:()=>jm,base32upper:()=>Gm,base32z:()=>Qm});var Ge=ae({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),Gm=ae({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Wm=ae({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),jm=ae({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),Zm=ae({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Xm=ae({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Ym=ae({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),Jm=ae({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Qm=ae({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var hc={};De(hc,{base36:()=>Vn,base36upper:()=>eg});var Vn=Kt({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),eg=Kt({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var tg=If,_f=128,rg=127,ng=~rg,sg=Math.pow(2,31);function If(r,e,t){e=e||[],t=t||0;for(var n=t;r>=sg;)e[t++]=r&255|_f,r/=128;for(;r&ng;)e[t++]=r&255|_f,r>>>=7;return e[t]=r|0,If.bytes=t-n+1,e}var og=pc,ig=128,Cf=127;function pc(r,n){var t=0,n=n||0,s=0,o=n,i,a=r.length;do{if(o>=a)throw pc.bytes=0,new RangeError("Could not decode varint");i=r[o++],t+=s<28?(i&Cf)<<s:(i&Cf)*Math.pow(2,s),s+=7}while(i>=ig);return pc.bytes=o-n,t}var ag=Math.pow(2,7),cg=Math.pow(2,14),lg=Math.pow(2,21),ug=Math.pow(2,28),fg=Math.pow(2,35),dg=Math.pow(2,42),hg=Math.pow(2,49),pg=Math.pow(2,56),mg=Math.pow(2,63),gg=function(r){return r<ag?1:r<cg?2:r<lg?3:r<ug?4:r<fg?5:r<dg?6:r<hg?7:r<pg?8:r<mg?9:10},yg={encode:tg,decode:og,encodingLength:gg},wg=yg,Hn=wg;function Kn(r,e=0){return[Hn.decode(r,e),Hn.decode.bytes]}function jr(r,e,t=0){return Hn.encode(r,e,t),e}function Zr(r){return Hn.encodingLength(r)}function Qe(r,e){let t=e.byteLength,n=Zr(r),s=n+Zr(t),o=new Uint8Array(s+t);return jr(r,o,0),jr(t,o,n),o.set(e,s),new Xr(r,t,e,o)}function et(r){let e=vt(r),[t,n]=Kn(e),[s,o]=Kn(e.subarray(n)),i=e.subarray(n+o);if(i.byteLength!==s)throw new Error("Incorrect length");return new Xr(t,s,i,e)}function Bf(r,e){if(r===e)return!0;{let t=e;return r.code===t.code&&r.size===t.size&&t.bytes instanceof Uint8Array&&bf(r.bytes,t.bytes)}}var Xr=class{code;size;digest;bytes;constructor(e,t,n,s){this.code=e,this.size=t,this.digest=n,this.bytes=s}};function kf(r,e){let{bytes:t,version:n}=r;switch(n){case 0:return xg(t,mc(r),e??X.encoder);default:return vg(t,mc(r),e??Ge.encoder)}}var Tf=new WeakMap;function mc(r){let e=Tf.get(r);if(e==null){let t=new Map;return Tf.set(r,t),t}return e}var pe=class r{code;version;multihash;bytes;"/";constructor(e,t,n,s){this.code=t,this.version=e,this.multihash=n,this.bytes=s,this["/"]=s}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:e,multihash:t}=this;if(e!==$n)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==Eg)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,n=Qe(e,t);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return r.equals(this,e)}static equals(e,t){let n=t;return n!=null&&e.code===n.code&&e.version===n.version&&Bf(e.multihash,n.multihash)}toString(e){return kf(this,e)}toJSON(){return{"/":kf(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;let t=e;if(t instanceof r)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){let{version:n,code:s,multihash:o,bytes:i}=t;return new r(n,s,o,i??Lf(n,s,o.bytes))}else if(t[Ag]===!0){let{version:n,multihash:s,code:o}=t,i=et(s);return r.create(n,o,i)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==$n)throw new Error(`Version 0 CID must use dag-pb (code: ${$n}) block encoding`);return new r(e,t,n,n.bytes)}case 1:{let s=Lf(e,t,n.bytes);return new r(e,t,n,s)}default:throw new Error("Invalid version")}}static createV0(e){return r.create(0,$n,e)}static createV1(e,t){return r.create(1,e,t)}static decode(e){let[t,n]=r.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=r.inspectBytes(e),n=t.size-t.multihashSize,s=vt(e.subarray(n,n+t.multihashSize));if(s.byteLength!==t.multihashSize)throw new Error("Incorrect length");let o=s.subarray(t.multihashSize-t.digestSize),i=new Xr(t.multihashCode,t.digestSize,o,s);return[t.version===0?r.createV0(i):r.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){let t=0,n=()=>{let[f,d]=Kn(e.subarray(t));return t+=d,f},s=n(),o=$n;if(s===18?(s=0,t=0):o=n(),s!==0&&s!==1)throw new RangeError(`Invalid CID version ${s}`);let i=t,a=n(),c=n(),l=t+c,u=l-i;return{version:s,codec:o,multihashCode:a,digestSize:c,multihashSize:u,size:l}}static parse(e,t){let[n,s]=bg(e,t),o=r.decode(s);if(o.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return mc(o).set(n,e),o}};function bg(r,e){switch(r[0]){case"Q":{let t=e??X;return[X.prefix,t.decode(`${X.prefix}${r}`)]}case X.prefix:{let t=e??X;return[X.prefix,t.decode(r)]}case Ge.prefix:{let t=e??Ge;return[Ge.prefix,t.decode(r)]}case Vn.prefix:{let t=e??Vn;return[Vn.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}}function xg(r,e,t){let{prefix:n}=t;if(n!==X.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let s=e.get(n);if(s==null){let o=t.encode(r).slice(1);return e.set(n,o),o}else return s}function vg(r,e,t){let{prefix:n}=t,s=e.get(n);if(s==null){let o=t.encode(r);return e.set(n,o),o}else return s}var $n=112,Eg=18;function Lf(r,e,t){let n=Zr(r),s=n+Zr(e),o=new Uint8Array(s+t.byteLength);return jr(r,o,0),jr(e,o,n),o.set(t,s),o}var Ag=Symbol.for("@ipld/js-cid/CID");var gc={};De(gc,{identity:()=>At});var Pf=0,Sg="identity",Nf=vt;function _g(r){return Qe(Pf,Nf(r))}var At={code:Pf,name:Sg,encode:Nf,digest:_g};function ce(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function Df(r){if(!Number.isSafeInteger(r)||r<0)throw new Error("positive integer expected, got "+r)}function Cg(r){return r instanceof Uint8Array||ArrayBuffer.isView(r)&&r.constructor.name==="Uint8Array"}function Yr(r,...e){if(!Cg(r))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(r.length))throw new Error("Uint8Array expected of length "+e+", got length="+r.length)}function Rf(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");Df(r.outputLen),Df(r.blockLen)}function Jr(r,e=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(e&&r.finished)throw new Error("Hash#digest() has already been called")}function Mf(r,e){Yr(r);let t=e.outputLen;if(r.length<t)throw new Error("digestInto() expects output buffer of length at least "+t)}var cr=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function no(r){return new DataView(r.buffer,r.byteOffset,r.byteLength)}function tt(r,e){return r<<32-e|r>>>e}function Of(r){if(typeof r!="string")throw new Error("utf8ToBytes expected string, got "+typeof r);return new Uint8Array(new TextEncoder().encode(r))}function qn(r){return typeof r=="string"&&(r=Of(r)),Yr(r),r}function yc(...r){let e=0;for(let n=0;n<r.length;n++){let s=r[n];Yr(s),e+=s.length}let t=new Uint8Array(e);for(let n=0,s=0;n<r.length;n++){let o=r[n];t.set(o,s),s+=o.length}return t}var Qr=class{clone(){return this._cloneInto()}};function so(r){let e=n=>r().update(qn(n)).digest(),t=r();return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=()=>r(),e}function en(r=32){if(cr&&typeof cr.getRandomValues=="function")return cr.getRandomValues(new Uint8Array(r));if(cr&&typeof cr.randomBytes=="function")return cr.randomBytes(r);throw new Error("crypto.getRandomValues must be defined")}function Ig(r,e,t,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(e,t,n);let s=BigInt(32),o=BigInt(4294967295),i=Number(t>>s&o),a=Number(t&o),c=n?4:0,l=n?0:4;r.setUint32(e+c,i,n),r.setUint32(e+l,a,n)}function Uf(r,e,t){return r&e^~r&t}function Ff(r,e,t){return r&e^r&t^e&t}var tn=class extends Qr{constructor(e,t,n,s){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=s,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=no(this.buffer)}update(e){Jr(this);let{view:t,buffer:n,blockLen:s}=this;e=qn(e);let o=e.length;for(let i=0;i<o;){let a=Math.min(s-this.pos,o-i);if(a===s){let c=no(e);for(;s<=o-i;i+=s)this.process(c,i);continue}n.set(e.subarray(i,i+a),this.pos),this.pos+=a,i+=a,this.pos===s&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Jr(this),Mf(e,this),this.finished=!0;let{buffer:t,view:n,blockLen:s,isLE:o}=this,{pos:i}=this;t[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>s-i&&(this.process(n,0),i=0);for(let f=i;f<s;f++)t[f]=0;Ig(n,s-8,BigInt(this.length*8),o),this.process(n,0);let a=no(e),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let l=c/4,u=this.get();if(l>u.length)throw new Error("_sha2: outputLen bigger than state");for(let f=0;f<l;f++)a.setUint32(4*f,u[f],o)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());let{blockLen:t,buffer:n,length:s,finished:o,destroyed:i,pos:a}=this;return e.length=s,e.pos=a,e.finished=o,e.destroyed=i,s%t&&e.buffer.set(n),e}};var oo=BigInt(4294967295),wc=BigInt(32);function Vf(r,e=!1){return e?{h:Number(r&oo),l:Number(r>>wc&oo)}:{h:Number(r>>wc&oo)|0,l:Number(r&oo)|0}}function Bg(r,e=!1){let t=new Uint32Array(r.length),n=new Uint32Array(r.length);for(let s=0;s<r.length;s++){let{h:o,l:i}=Vf(r[s],e);[t[s],n[s]]=[o,i]}return[t,n]}var kg=(r,e)=>BigInt(r>>>0)<<wc|BigInt(e>>>0),Tg=(r,e,t)=>r>>>t,Lg=(r,e,t)=>r<<32-t|e>>>t,Pg=(r,e,t)=>r>>>t|e<<32-t,Ng=(r,e,t)=>r<<32-t|e>>>t,Dg=(r,e,t)=>r<<64-t|e>>>t-32,Rg=(r,e,t)=>r>>>t-32|e<<64-t,Mg=(r,e)=>e,Og=(r,e)=>r,Ug=(r,e,t)=>r<<t|e>>>32-t,Fg=(r,e,t)=>e<<t|r>>>32-t,Vg=(r,e,t)=>e<<t-32|r>>>64-t,Hg=(r,e,t)=>r<<t-32|e>>>64-t;function Kg(r,e,t,n){let s=(e>>>0)+(n>>>0);return{h:r+t+(s/2**32|0)|0,l:s|0}}var $g=(r,e,t)=>(r>>>0)+(e>>>0)+(t>>>0),qg=(r,e,t,n)=>e+t+n+(r/2**32|0)|0,zg=(r,e,t,n)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0),Gg=(r,e,t,n,s)=>e+t+n+s+(r/2**32|0)|0,Wg=(r,e,t,n,s)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0)+(s>>>0),jg=(r,e,t,n,s,o)=>e+t+n+s+o+(r/2**32|0)|0;var Zg={fromBig:Vf,split:Bg,toBig:kg,shrSH:Tg,shrSL:Lg,rotrSH:Pg,rotrSL:Ng,rotrBH:Dg,rotrBL:Rg,rotr32H:Mg,rotr32L:Og,rotlSH:Ug,rotlSL:Fg,rotlBH:Vg,rotlBL:Hg,add:Kg,add3L:$g,add3H:qg,add4L:zg,add4H:Gg,add5H:jg,add5L:Wg},U=Zg;var[Xg,Yg]=U.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(r=>BigInt(r))),$t=new Uint32Array(80),qt=new Uint32Array(80),bc=class extends tn{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:e,Al:t,Bh:n,Bl:s,Ch:o,Cl:i,Dh:a,Dl:c,Eh:l,El:u,Fh:f,Fl:d,Gh:m,Gl:p,Hh:g,Hl:h}=this;return[e,t,n,s,o,i,a,c,l,u,f,d,m,p,g,h]}set(e,t,n,s,o,i,a,c,l,u,f,d,m,p,g,h){this.Ah=e|0,this.Al=t|0,this.Bh=n|0,this.Bl=s|0,this.Ch=o|0,this.Cl=i|0,this.Dh=a|0,this.Dl=c|0,this.Eh=l|0,this.El=u|0,this.Fh=f|0,this.Fl=d|0,this.Gh=m|0,this.Gl=p|0,this.Hh=g|0,this.Hl=h|0}process(e,t){for(let y=0;y<16;y++,t+=4)$t[y]=e.getUint32(t),qt[y]=e.getUint32(t+=4);for(let y=16;y<80;y++){let E=$t[y-15]|0,_=qt[y-15]|0,L=U.rotrSH(E,_,1)^U.rotrSH(E,_,8)^U.shrSH(E,_,7),I=U.rotrSL(E,_,1)^U.rotrSL(E,_,8)^U.shrSL(E,_,7),T=$t[y-2]|0,k=qt[y-2]|0,re=U.rotrSH(T,k,19)^U.rotrBH(T,k,61)^U.shrSH(T,k,6),W=U.rotrSL(T,k,19)^U.rotrBL(T,k,61)^U.shrSL(T,k,6),V=U.add4L(I,W,qt[y-7],qt[y-16]),he=U.add4H(V,L,re,$t[y-7],$t[y-16]);$t[y]=he|0,qt[y]=V|0}let{Ah:n,Al:s,Bh:o,Bl:i,Ch:a,Cl:c,Dh:l,Dl:u,Eh:f,El:d,Fh:m,Fl:p,Gh:g,Gl:h,Hh:w,Hl:x}=this;for(let y=0;y<80;y++){let E=U.rotrSH(f,d,14)^U.rotrSH(f,d,18)^U.rotrBH(f,d,41),_=U.rotrSL(f,d,14)^U.rotrSL(f,d,18)^U.rotrBL(f,d,41),L=f&m^~f&g,I=d&p^~d&h,T=U.add5L(x,_,I,Yg[y],qt[y]),k=U.add5H(T,w,E,L,Xg[y],$t[y]),re=T|0,W=U.rotrSH(n,s,28)^U.rotrBH(n,s,34)^U.rotrBH(n,s,39),V=U.rotrSL(n,s,28)^U.rotrBL(n,s,34)^U.rotrBL(n,s,39),he=n&o^n&a^o&a,S=s&i^s&c^i&c;w=g|0,x=h|0,g=m|0,h=p|0,m=f|0,p=d|0,{h:f,l:d}=U.add(l|0,u|0,k|0,re|0),l=a|0,u=c|0,a=o|0,c=i|0,o=n|0,i=s|0;let P=U.add3L(re,V,S);n=U.add3H(P,k,W,he),s=P|0}({h:n,l:s}=U.add(this.Ah|0,this.Al|0,n|0,s|0)),{h:o,l:i}=U.add(this.Bh|0,this.Bl|0,o|0,i|0),{h:a,l:c}=U.add(this.Ch|0,this.Cl|0,a|0,c|0),{h:l,l:u}=U.add(this.Dh|0,this.Dl|0,l|0,u|0),{h:f,l:d}=U.add(this.Eh|0,this.El|0,f|0,d|0),{h:m,l:p}=U.add(this.Fh|0,this.Fl|0,m|0,p|0),{h:g,l:h}=U.add(this.Gh|0,this.Gl|0,g|0,h|0),{h:w,l:x}=U.add(this.Hh|0,this.Hl|0,w|0,x|0),this.set(n,s,o,i,a,c,l,u,f,d,m,p,g,h,w,x)}roundClean(){$t.fill(0),qt.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};var Hf=so(()=>new bc);var co={};De(co,{aInRange:()=>Ke,abool:()=>rt,abytes:()=>rn,bitGet:()=>n0,bitLen:()=>Ac,bitMask:()=>Gn,bitSet:()=>s0,bytesToHex:()=>_t,bytesToNumberBE:()=>Ct,bytesToNumberLE:()=>Gt,concatBytes:()=>It,createHmacDrbg:()=>Sc,ensureBytes:()=>oe,equalBytes:()=>t0,hexToBytes:()=>ur,hexToNumber:()=>Ec,inRange:()=>zn,isBytes:()=>zt,memoized:()=>dr,notImplemented:()=>i0,numberToBytesBE:()=>Wt,numberToBytesLE:()=>fr,numberToHexUnpadded:()=>lr,numberToVarBytesBE:()=>e0,utf8ToBytes:()=>r0,validateObject:()=>ut});var io=BigInt(0),ao=BigInt(1),Jg=BigInt(2);function zt(r){return r instanceof Uint8Array||ArrayBuffer.isView(r)&&r.constructor.name==="Uint8Array"}function rn(r){if(!zt(r))throw new Error("Uint8Array expected")}function rt(r,e){if(typeof e!="boolean")throw new Error(r+" boolean expected, got "+e)}var Qg=Array.from({length:256},(r,e)=>e.toString(16).padStart(2,"0"));function _t(r){rn(r);let e="";for(let t=0;t<r.length;t++)e+=Qg[r[t]];return e}function lr(r){let e=r.toString(16);return e.length&1?"0"+e:e}function Ec(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);return r===""?io:BigInt("0x"+r)}var St={_0:48,_9:57,A:65,F:70,a:97,f:102};function Kf(r){if(r>=St._0&&r<=St._9)return r-St._0;if(r>=St.A&&r<=St.F)return r-(St.A-10);if(r>=St.a&&r<=St.f)return r-(St.a-10)}function ur(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);let e=r.length,t=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);let n=new Uint8Array(t);for(let s=0,o=0;s<t;s++,o+=2){let i=Kf(r.charCodeAt(o)),a=Kf(r.charCodeAt(o+1));if(i===void 0||a===void 0){let c=r[o]+r[o+1];throw new Error('hex string expected, got non-hex character "'+c+'" at index '+o)}n[s]=i*16+a}return n}function Ct(r){return Ec(_t(r))}function Gt(r){return rn(r),Ec(_t(Uint8Array.from(r).reverse()))}function Wt(r,e){return ur(r.toString(16).padStart(e*2,"0"))}function fr(r,e){return Wt(r,e).reverse()}function e0(r){return ur(lr(r))}function oe(r,e,t){let n;if(typeof e=="string")try{n=ur(e)}catch(o){throw new Error(r+" must be hex string or Uint8Array, cause: "+o)}else if(zt(e))n=Uint8Array.from(e);else throw new Error(r+" must be hex string or Uint8Array");let s=n.length;if(typeof t=="number"&&s!==t)throw new Error(r+" of length "+t+" expected, got "+s);return n}function It(...r){let e=0;for(let n=0;n<r.length;n++){let s=r[n];rn(s),e+=s.length}let t=new Uint8Array(e);for(let n=0,s=0;n<r.length;n++){let o=r[n];t.set(o,s),s+=o.length}return t}function t0(r,e){if(r.length!==e.length)return!1;let t=0;for(let n=0;n<r.length;n++)t|=r[n]^e[n];return t===0}function r0(r){if(typeof r!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(r))}var xc=r=>typeof r=="bigint"&&io<=r;function zn(r,e,t){return xc(r)&&xc(e)&&xc(t)&&e<=r&&r<t}function Ke(r,e,t,n){if(!zn(e,t,n))throw new Error("expected valid "+r+": "+t+" <= n < "+n+", got "+e)}function Ac(r){let e;for(e=0;r>io;r>>=ao,e+=1);return e}function n0(r,e){return r>>BigInt(e)&ao}function s0(r,e,t){return r|(t?ao:io)<<BigInt(e)}var Gn=r=>(Jg<<BigInt(r-1))-ao,vc=r=>new Uint8Array(r),$f=r=>Uint8Array.from(r);function Sc(r,e,t){if(typeof r!="number"||r<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof t!="function")throw new Error("hmacFn must be a function");let n=vc(r),s=vc(r),o=0,i=()=>{n.fill(1),s.fill(0),o=0},a=(...f)=>t(s,n,...f),c=(f=vc())=>{s=a($f([0]),f),n=a(),f.length!==0&&(s=a($f([1]),f),n=a())},l=()=>{if(o++>=1e3)throw new Error("drbg: tried 1000 values");let f=0,d=[];for(;f<e;){n=a();let m=n.slice();d.push(m),f+=n.length}return It(...d)};return(f,d)=>{i(),c(f);let m;for(;!(m=d(l()));)c();return i(),m}}var o0={bigint:r=>typeof r=="bigint",function:r=>typeof r=="function",boolean:r=>typeof r=="boolean",string:r=>typeof r=="string",stringOrUint8Array:r=>typeof r=="string"||zt(r),isSafeInteger:r=>Number.isSafeInteger(r),array:r=>Array.isArray(r),field:(r,e)=>e.Fp.isValid(r),hash:r=>typeof r=="function"&&Number.isSafeInteger(r.outputLen)};function ut(r,e,t={}){let n=(s,o,i)=>{let a=o0[o];if(typeof a!="function")throw new Error("invalid validator function");let c=r[s];if(!(i&&c===void 0)&&!a(c,r))throw new Error("param "+String(s)+" is invalid. Expected "+o+", got "+c)};for(let[s,o]of Object.entries(e))n(s,o,!1);for(let[s,o]of Object.entries(t))n(s,o,!0);return r}var i0=()=>{throw new Error("not implemented")};function dr(r){let e=new WeakMap;return(t,...n)=>{let s=e.get(t);if(s!==void 0)return s;let o=r(t,...n);return e.set(t,o),o}}var me=BigInt(0),ne=BigInt(1),hr=BigInt(2),a0=BigInt(3),_c=BigInt(4),qf=BigInt(5),zf=BigInt(8),c0=BigInt(9),l0=BigInt(16);function Q(r,e){let t=r%e;return t>=me?t:e+t}function u0(r,e,t){if(e<me)throw new Error("invalid exponent, negatives unsupported");if(t<=me)throw new Error("invalid modulus");if(t===ne)return me;let n=ne;for(;e>me;)e&ne&&(n=n*r%t),r=r*r%t,e>>=ne;return n}function se(r,e,t){let n=r;for(;e-- >me;)n*=n,n%=t;return n}function lo(r,e){if(r===me)throw new Error("invert: expected non-zero number");if(e<=me)throw new Error("invert: expected positive modulus, got "+e);let t=Q(r,e),n=e,s=me,o=ne,i=ne,a=me;for(;t!==me;){let l=n/t,u=n%t,f=s-i*l,d=o-a*l;n=t,t=u,s=i,o=a,i=f,a=d}if(n!==ne)throw new Error("invert: does not exist");return Q(s,e)}function f0(r){let e=(r-ne)/hr,t,n,s;for(t=r-ne,n=0;t%hr===me;t/=hr,n++);for(s=hr;s<r&&u0(s,e,r)!==r-ne;s++)if(s>1e3)throw new Error("Cannot find square root: likely non-prime P");if(n===1){let i=(r+ne)/_c;return function(c,l){let u=c.pow(l,i);if(!c.eql(c.sqr(u),l))throw new Error("Cannot find square root");return u}}let o=(t+ne)/hr;return function(a,c){if(a.pow(c,e)===a.neg(a.ONE))throw new Error("Cannot find square root");let l=n,u=a.pow(a.mul(a.ONE,s),t),f=a.pow(c,o),d=a.pow(c,t);for(;!a.eql(d,a.ONE);){if(a.eql(d,a.ZERO))return a.ZERO;let m=1;for(let g=a.sqr(d);m<l&&!a.eql(g,a.ONE);m++)g=a.sqr(g);let p=a.pow(u,ne<<BigInt(l-m-1));u=a.sqr(p),f=a.mul(f,p),d=a.mul(d,u),l=m}return f}}function d0(r){if(r%_c===a0){let e=(r+ne)/_c;return function(n,s){let o=n.pow(s,e);if(!n.eql(n.sqr(o),s))throw new Error("Cannot find square root");return o}}if(r%zf===qf){let e=(r-qf)/zf;return function(n,s){let o=n.mul(s,hr),i=n.pow(o,e),a=n.mul(s,i),c=n.mul(n.mul(a,hr),i),l=n.mul(a,n.sub(c,n.ONE));if(!n.eql(n.sqr(l),s))throw new Error("Cannot find square root");return l}}return r%l0,f0(r)}var Gf=(r,e)=>(Q(r,e)&ne)===ne,h0=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function Cc(r){let e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},t=h0.reduce((n,s)=>(n[s]="function",n),e);return ut(r,t)}function p0(r,e,t){if(t<me)throw new Error("invalid exponent, negatives unsupported");if(t===me)return r.ONE;if(t===ne)return e;let n=r.ONE,s=e;for(;t>me;)t&ne&&(n=r.mul(n,s)),s=r.sqr(s),t>>=ne;return n}function m0(r,e){let t=new Array(e.length),n=e.reduce((o,i,a)=>r.is0(i)?o:(t[a]=o,r.mul(o,i)),r.ONE),s=r.inv(n);return e.reduceRight((o,i,a)=>r.is0(i)?o:(t[a]=r.mul(o,t[a]),r.mul(o,i)),s),t}function Ic(r,e){let t=e!==void 0?e:r.toString(2).length,n=Math.ceil(t/8);return{nBitLength:t,nByteLength:n}}function jt(r,e,t=!1,n={}){if(r<=me)throw new Error("invalid field: expected ORDER > 0, got "+r);let{nBitLength:s,nByteLength:o}=Ic(r,e);if(o>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let i,a=Object.freeze({ORDER:r,isLE:t,BITS:s,BYTES:o,MASK:Gn(s),ZERO:me,ONE:ne,create:c=>Q(c,r),isValid:c=>{if(typeof c!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof c);return me<=c&&c<r},is0:c=>c===me,isOdd:c=>(c&ne)===ne,neg:c=>Q(-c,r),eql:(c,l)=>c===l,sqr:c=>Q(c*c,r),add:(c,l)=>Q(c+l,r),sub:(c,l)=>Q(c-l,r),mul:(c,l)=>Q(c*l,r),pow:(c,l)=>p0(a,c,l),div:(c,l)=>Q(c*lo(l,r),r),sqrN:c=>c*c,addN:(c,l)=>c+l,subN:(c,l)=>c-l,mulN:(c,l)=>c*l,inv:c=>lo(c,r),sqrt:n.sqrt||(c=>(i||(i=d0(r)),i(a,c))),invertBatch:c=>m0(a,c),cmov:(c,l,u)=>u?l:c,toBytes:c=>t?fr(c,o):Wt(c,o),fromBytes:c=>{if(c.length!==o)throw new Error("Field.fromBytes: expected "+o+" bytes, got "+c.length);return t?Gt(c):Ct(c)}});return Object.freeze(a)}function Wf(r){if(typeof r!="bigint")throw new Error("field order must be bigint");let e=r.toString(2).length;return Math.ceil(e/8)}function Bc(r){let e=Wf(r);return e+Math.ceil(e/2)}function jf(r,e,t=!1){let n=r.length,s=Wf(e),o=Bc(e);if(n<16||n<o||n>1024)throw new Error("expected "+o+"-1024 bytes of input, got "+n);let i=t?Gt(r):Ct(r),a=Q(i,e-ne)+ne;return t?fr(a,s):Wt(a,s)}var Zf=BigInt(0),uo=BigInt(1);function kc(r,e){let t=e.negate();return r?t:e}function Xf(r,e){if(!Number.isSafeInteger(r)||r<=0||r>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+r)}function Tc(r,e){Xf(r,e);let t=Math.ceil(e/r)+1,n=2**(r-1);return{windows:t,windowSize:n}}function g0(r,e){if(!Array.isArray(r))throw new Error("array expected");r.forEach((t,n)=>{if(!(t instanceof e))throw new Error("invalid point at index "+n)})}function y0(r,e){if(!Array.isArray(r))throw new Error("array of scalars expected");r.forEach((t,n)=>{if(!e.isValid(t))throw new Error("invalid scalar at index "+n)})}var Lc=new WeakMap,Yf=new WeakMap;function Pc(r){return Yf.get(r)||1}function fo(r,e){return{constTimeNegate:kc,hasPrecomputes(t){return Pc(t)!==1},unsafeLadder(t,n,s=r.ZERO){let o=t;for(;n>Zf;)n&uo&&(s=s.add(o)),o=o.double(),n>>=uo;return s},precomputeWindow(t,n){let{windows:s,windowSize:o}=Tc(n,e),i=[],a=t,c=a;for(let l=0;l<s;l++){c=a,i.push(c);for(let u=1;u<o;u++)c=c.add(a),i.push(c);a=c.double()}return i},wNAF(t,n,s){let{windows:o,windowSize:i}=Tc(t,e),a=r.ZERO,c=r.BASE,l=BigInt(2**t-1),u=2**t,f=BigInt(t);for(let d=0;d<o;d++){let m=d*i,p=Number(s&l);s>>=f,p>i&&(p-=u,s+=uo);let g=m,h=m+Math.abs(p)-1,w=d%2!==0,x=p<0;p===0?c=c.add(kc(w,n[g])):a=a.add(kc(x,n[h]))}return{p:a,f:c}},wNAFUnsafe(t,n,s,o=r.ZERO){let{windows:i,windowSize:a}=Tc(t,e),c=BigInt(2**t-1),l=2**t,u=BigInt(t);for(let f=0;f<i;f++){let d=f*a;if(s===Zf)break;let m=Number(s&c);if(s>>=u,m>a&&(m-=l,s+=uo),m===0)continue;let p=n[d+Math.abs(m)-1];m<0&&(p=p.negate()),o=o.add(p)}return o},getPrecomputes(t,n,s){let o=Lc.get(n);return o||(o=this.precomputeWindow(n,t),t!==1&&Lc.set(n,s(o))),o},wNAFCached(t,n,s){let o=Pc(t);return this.wNAF(o,this.getPrecomputes(o,t,s),n)},wNAFCachedUnsafe(t,n,s,o){let i=Pc(t);return i===1?this.unsafeLadder(t,n,o):this.wNAFUnsafe(i,this.getPrecomputes(i,t,s),n,o)},setWindowSize(t,n){Xf(n,e),Yf.set(t,n),Lc.delete(t)}}}function ho(r,e,t,n){if(g0(t,r),y0(n,e),t.length!==n.length)throw new Error("arrays of points and scalars must have equal length");let s=r.ZERO,o=Ac(BigInt(t.length)),i=o>12?o-3:o>4?o-2:o?2:1,a=(1<<i)-1,c=new Array(a+1).fill(s),l=Math.floor((e.BITS-1)/i)*i,u=s;for(let f=l;f>=0;f-=i){c.fill(s);for(let m=0;m<n.length;m++){let p=n[m],g=Number(p>>BigInt(f)&BigInt(a));c[g]=c[g].add(t[m])}let d=s;for(let m=c.length-1,p=s;m>0;m--)p=p.add(c[m]),d=d.add(p);if(u=u.add(d),f!==0)for(let m=0;m<i;m++)u=u.double()}return u}function Wn(r){return Cc(r.Fp),ut(r,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...Ic(r.n,r.nBitLength),...r,p:r.Fp.ORDER})}var nt=BigInt(0),$e=BigInt(1),po=BigInt(2),w0=BigInt(8),b0={zip215:!0};function x0(r){let e=Wn(r);return ut(r,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function Jf(r){let e=x0(r),{Fp:t,n,prehash:s,hash:o,randomBytes:i,nByteLength:a,h:c}=e,l=po<<BigInt(a*8)-$e,u=t.create,f=jt(e.n,e.nBitLength),d=e.uvRatio||((v,b)=>{try{return{isValid:!0,value:t.sqrt(v*t.inv(b))}}catch{return{isValid:!1,value:nt}}}),m=e.adjustScalarBytes||(v=>v),p=e.domain||((v,b,A)=>{if(rt("phflag",A),b.length||A)throw new Error("Contexts/pre-hash are not supported");return v});function g(v,b){Ke("coordinate "+v,b,nt,l)}function h(v){if(!(v instanceof y))throw new Error("ExtendedPoint expected")}let w=dr((v,b)=>{let{ex:A,ey:B,ez:R}=v,M=v.is0();b==null&&(b=M?w0:t.inv(R));let F=u(A*b),K=u(B*b),O=u(R*b);if(M)return{x:nt,y:$e};if(O!==$e)throw new Error("invZ was invalid");return{x:F,y:K}}),x=dr(v=>{let{a:b,d:A}=e;if(v.is0())throw new Error("bad point: ZERO");let{ex:B,ey:R,ez:M,et:F}=v,K=u(B*B),O=u(R*R),J=u(M*M),te=u(J*J),we=u(K*b),be=u(J*u(we+O)),ve=u(te+u(A*u(K*O)));if(be!==ve)throw new Error("bad point: equation left != right (1)");let _e=u(B*R),He=u(M*F);if(_e!==He)throw new Error("bad point: equation left != right (2)");return!0});class y{constructor(b,A,B,R){this.ex=b,this.ey=A,this.ez=B,this.et=R,g("x",b),g("y",A),g("z",B),g("t",R),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(b){if(b instanceof y)throw new Error("extended point not allowed");let{x:A,y:B}=b||{};return g("x",A),g("y",B),new y(A,B,$e,u(A*B))}static normalizeZ(b){let A=t.invertBatch(b.map(B=>B.ez));return b.map((B,R)=>B.toAffine(A[R])).map(y.fromAffine)}static msm(b,A){return ho(y,f,b,A)}_setWindowSize(b){L.setWindowSize(this,b)}assertValidity(){x(this)}equals(b){h(b);let{ex:A,ey:B,ez:R}=this,{ex:M,ey:F,ez:K}=b,O=u(A*K),J=u(M*R),te=u(B*K),we=u(F*R);return O===J&&te===we}is0(){return this.equals(y.ZERO)}negate(){return new y(u(-this.ex),this.ey,this.ez,u(-this.et))}double(){let{a:b}=e,{ex:A,ey:B,ez:R}=this,M=u(A*A),F=u(B*B),K=u(po*u(R*R)),O=u(b*M),J=A+B,te=u(u(J*J)-M-F),we=O+F,be=we-K,ve=O-F,_e=u(te*be),He=u(we*ve),Ne=u(te*ve),lt=u(be*we);return new y(_e,He,lt,Ne)}add(b){h(b);let{a:A,d:B}=e,{ex:R,ey:M,ez:F,et:K}=this,{ex:O,ey:J,ez:te,et:we}=b;if(A===BigInt(-1)){let cf=u((M-R)*(J+O)),lf=u((M+R)*(J-O)),tc=u(lf-cf);if(tc===nt)return this.double();let uf=u(F*po*we),ff=u(K*po*te),df=ff+uf,hf=lf+cf,pf=ff-uf,Tm=u(df*tc),Lm=u(hf*pf),Pm=u(df*pf),Nm=u(tc*hf);return new y(Tm,Lm,Nm,Pm)}let be=u(R*O),ve=u(M*J),_e=u(K*B*we),He=u(F*te),Ne=u((R+M)*(O+J)-be-ve),lt=He-_e,yt=He+_e,Mn=u(ve-A*be),Cm=u(Ne*lt),Im=u(yt*Mn),Bm=u(Ne*Mn),km=u(lt*yt);return new y(Cm,Im,km,Bm)}subtract(b){return this.add(b.negate())}wNAF(b){return L.wNAFCached(this,b,y.normalizeZ)}multiply(b){let A=b;Ke("scalar",A,$e,n);let{p:B,f:R}=this.wNAF(A);return y.normalizeZ([B,R])[0]}multiplyUnsafe(b,A=y.ZERO){let B=b;return Ke("scalar",B,nt,n),B===nt?_:this.is0()||B===$e?this:L.wNAFCachedUnsafe(this,B,y.normalizeZ,A)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}isTorsionFree(){return L.unsafeLadder(this,n).is0()}toAffine(b){return w(this,b)}clearCofactor(){let{h:b}=e;return b===$e?this:this.multiplyUnsafe(b)}static fromHex(b,A=!1){let{d:B,a:R}=e,M=t.BYTES;b=oe("pointHex",b,M),rt("zip215",A);let F=b.slice(),K=b[M-1];F[M-1]=K&-129;let O=Gt(F),J=A?l:t.ORDER;Ke("pointHex.y",O,nt,J);let te=u(O*O),we=u(te-$e),be=u(B*te-R),{isValid:ve,value:_e}=d(we,be);if(!ve)throw new Error("Point.fromHex: invalid y coordinate");let He=(_e&$e)===$e,Ne=(K&128)!==0;if(!A&&_e===nt&&Ne)throw new Error("Point.fromHex: x=0 and x_0=1");return Ne!==He&&(_e=u(-_e)),y.fromAffine({x:_e,y:O})}static fromPrivateKey(b){return k(b).point}toRawBytes(){let{x:b,y:A}=this.toAffine(),B=fr(A,t.BYTES);return B[B.length-1]|=b&$e?128:0,B}toHex(){return _t(this.toRawBytes())}}y.BASE=new y(e.Gx,e.Gy,$e,u(e.Gx*e.Gy)),y.ZERO=new y(nt,$e,$e,nt);let{BASE:E,ZERO:_}=y,L=fo(y,a*8);function I(v){return Q(v,n)}function T(v){return I(Gt(v))}function k(v){let b=t.BYTES;v=oe("private key",v,b);let A=oe("hashed private key",o(v),2*b),B=m(A.slice(0,b)),R=A.slice(b,2*b),M=T(B),F=E.multiply(M),K=F.toRawBytes();return{head:B,prefix:R,scalar:M,point:F,pointBytes:K}}function re(v){return k(v).pointBytes}function W(v=new Uint8Array,...b){let A=It(...b);return T(o(p(A,oe("context",v),!!s)))}function V(v,b,A={}){v=oe("message",v),s&&(v=s(v));let{prefix:B,scalar:R,pointBytes:M}=k(b),F=W(A.context,B,v),K=E.multiply(F).toRawBytes(),O=W(A.context,K,M,v),J=I(F+O*R);Ke("signature.s",J,nt,n);let te=It(K,fr(J,t.BYTES));return oe("result",te,t.BYTES*2)}let he=b0;function S(v,b,A,B=he){let{context:R,zip215:M}=B,F=t.BYTES;v=oe("signature",v,2*F),b=oe("message",b),A=oe("publicKey",A,F),M!==void 0&&rt("zip215",M),s&&(b=s(b));let K=Gt(v.slice(F,2*F)),O,J,te;try{O=y.fromHex(A,M),J=y.fromHex(v.slice(0,F),M),te=E.multiplyUnsafe(K)}catch{return!1}if(!M&&O.isSmallOrder())return!1;let we=W(R,J.toRawBytes(),O.toRawBytes(),b);return J.add(O.multiplyUnsafe(we)).subtract(te).clearCofactor().equals(y.ZERO)}return E._setWindowSize(8),{CURVE:e,getPublicKey:re,sign:V,verify:S,ExtendedPoint:y,utils:{getExtendedPublicKey:k,randomPrivateKey:()=>i(t.BYTES),precompute(v=8,b=y.BASE){return b._setWindowSize(v),b.multiply(BigInt(3)),b}}}}var Nc=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),Qf=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),$v=BigInt(0),v0=BigInt(1),ed=BigInt(2),qv=BigInt(3),E0=BigInt(5),A0=BigInt(8);function S0(r){let e=BigInt(10),t=BigInt(20),n=BigInt(40),s=BigInt(80),o=Nc,a=r*r%o*r%o,c=se(a,ed,o)*a%o,l=se(c,v0,o)*r%o,u=se(l,E0,o)*l%o,f=se(u,e,o)*u%o,d=se(f,t,o)*f%o,m=se(d,n,o)*d%o,p=se(m,s,o)*m%o,g=se(p,s,o)*m%o,h=se(g,e,o)*u%o;return{pow_p_5_8:se(h,ed,o)*r%o,b2:a}}function _0(r){return r[0]&=248,r[31]&=127,r[31]|=64,r}function C0(r,e){let t=Nc,n=Q(e*e*e,t),s=Q(n*n*e,t),o=S0(r*s).pow_p_5_8,i=Q(r*n*o,t),a=Q(e*i*i,t),c=i,l=Q(i*Qf,t),u=a===r,f=a===Q(-r,t),d=a===Q(-r*Qf,t);return u&&(i=c),(f||d)&&(i=l),Gf(i,t)&&(i=Q(-i,t)),{isValid:u||f,value:i}}var I0=jt(Nc,void 0,!0),B0={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:I0,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:A0,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:Hf,randomBytes:en,adjustScalarBytes:_0,uvRatio:C0},jn=Jf(B0);var mo=32,go=64,Dc=32;function td(){let r=jn.utils.randomPrivateKey(),e=jn.getPublicKey(r);return{privateKey:k0(r,e),publicKey:e}}function rd(r,e){let t=r.subarray(0,Dc);return jn.sign(e instanceof Uint8Array?e:e.subarray(),t)}function nd(r,e,t){return jn.verify(e,t instanceof Uint8Array?t:t.subarray(),r)}function k0(r,e){let t=new Uint8Array(go);for(let n=0;n<Dc;n++)t[n]=r[n],t[Dc+n]=e[n];return t}var Zn=class{type="Ed25519";raw;constructor(e){this.raw=wo(e,mo)}toMultihash(){return At.digest(ft(this))}toCID(){return pe.createV1(114,this.toMultihash())}toString(){return X.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}verify(e,t){return nd(this.raw,t,e)}},yo=class{type="Ed25519";raw;publicKey;constructor(e,t){this.raw=wo(e,go),this.publicKey=new Zn(t)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}sign(e){return rd(this.raw,e)}};function Rc(r){return r=wo(r,mo),new Zn(r)}async function od(){let{privateKey:r,publicKey:e}=td();return new yo(r,e)}function wo(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new D(`Key must be a Uint8Array of length ${e}, got ${r.length}`);return r}function le(r=0){return new Uint8Array(r)}function Ce(r=0){return new Uint8Array(r)}var T0=Math.pow(2,7),L0=Math.pow(2,14),P0=Math.pow(2,21),Mc=Math.pow(2,28),Oc=Math.pow(2,35),Uc=Math.pow(2,42),Fc=Math.pow(2,49),Y=128,Ie=127;function de(r){if(r<T0)return 1;if(r<L0)return 2;if(r<P0)return 3;if(r<Mc)return 4;if(r<Oc)return 5;if(r<Uc)return 6;if(r<Fc)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function Vc(r,e,t=0){switch(de(r)){case 8:e[t++]=r&255|Y,r/=128;case 7:e[t++]=r&255|Y,r/=128;case 6:e[t++]=r&255|Y,r/=128;case 5:e[t++]=r&255|Y,r/=128;case 4:e[t++]=r&255|Y,r>>>=7;case 3:e[t++]=r&255|Y,r>>>=7;case 2:e[t++]=r&255|Y,r>>>=7;case 1:{e[t++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return e}function N0(r,e,t=0){switch(de(r)){case 8:e.set(t++,r&255|Y),r/=128;case 7:e.set(t++,r&255|Y),r/=128;case 6:e.set(t++,r&255|Y),r/=128;case 5:e.set(t++,r&255|Y),r/=128;case 4:e.set(t++,r&255|Y),r>>>=7;case 3:e.set(t++,r&255|Y),r>>>=7;case 2:e.set(t++,r&255|Y),r>>>=7;case 1:{e.set(t++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return e}function Hc(r,e){let t=r[e],n=0;if(n+=t&Ie,t<Y||(t=r[e+1],n+=(t&Ie)<<7,t<Y)||(t=r[e+2],n+=(t&Ie)<<14,t<Y)||(t=r[e+3],n+=(t&Ie)<<21,t<Y)||(t=r[e+4],n+=(t&Ie)*Mc,t<Y)||(t=r[e+5],n+=(t&Ie)*Oc,t<Y)||(t=r[e+6],n+=(t&Ie)*Uc,t<Y)||(t=r[e+7],n+=(t&Ie)*Fc,t<Y))return n;throw new RangeError("Could not decode varint")}function D0(r,e){let t=r.get(e),n=0;if(n+=t&Ie,t<Y||(t=r.get(e+1),n+=(t&Ie)<<7,t<Y)||(t=r.get(e+2),n+=(t&Ie)<<14,t<Y)||(t=r.get(e+3),n+=(t&Ie)<<21,t<Y)||(t=r.get(e+4),n+=(t&Ie)*Mc,t<Y)||(t=r.get(e+5),n+=(t&Ie)*Oc,t<Y)||(t=r.get(e+6),n+=(t&Ie)*Uc,t<Y)||(t=r.get(e+7),n+=(t&Ie)*Fc,t<Y))return n;throw new RangeError("Could not decode varint")}function Be(r,e,t=0){return e==null&&(e=Ce(de(r))),e instanceof Uint8Array?Vc(r,e,t):N0(r,e,t)}function st(r,e=0){return r instanceof Uint8Array?Hc(r,e):D0(r,e)}var Kc=new Float32Array([-0]),Zt=new Uint8Array(Kc.buffer);function id(r,e,t){Kc[0]=r,e[t]=Zt[0],e[t+1]=Zt[1],e[t+2]=Zt[2],e[t+3]=Zt[3]}function ad(r,e){return Zt[0]=r[e],Zt[1]=r[e+1],Zt[2]=r[e+2],Zt[3]=r[e+3],Kc[0]}var $c=new Float64Array([-0]),ke=new Uint8Array($c.buffer);function cd(r,e,t){$c[0]=r,e[t]=ke[0],e[t+1]=ke[1],e[t+2]=ke[2],e[t+3]=ke[3],e[t+4]=ke[4],e[t+5]=ke[5],e[t+6]=ke[6],e[t+7]=ke[7]}function ld(r,e){return ke[0]=r[e],ke[1]=r[e+1],ke[2]=r[e+2],ke[3]=r[e+3],ke[4]=r[e+4],ke[5]=r[e+5],ke[6]=r[e+6],ke[7]=r[e+7],$c[0]}var R0=BigInt(Number.MAX_SAFE_INTEGER),M0=BigInt(Number.MIN_SAFE_INTEGER),We=class r{lo;hi;constructor(e,t){this.lo=e|0,this.hi=t|0}toNumber(e=!1){if(!e&&this.hi>>>31>0){let t=~this.lo+1>>>0,n=~this.hi>>>0;return t===0&&(n=n+1>>>0),-(t+n*4294967296)}return this.lo+this.hi*4294967296}toBigInt(e=!1){if(e)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let t=~this.lo+1>>>0,n=~this.hi>>>0;return t===0&&(n=n+1>>>0),-(BigInt(t)+(BigInt(n)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(e=!1){return this.toBigInt(e).toString()}zzEncode(){let e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this}zzDecode(){let e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this}length(){let e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return n===0?t===0?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:n<128?9:10}static fromBigInt(e){if(e===0n)return mr;if(e<R0&&e>M0)return this.fromNumber(Number(e));let t=e<0n;t&&(e=-e);let n=e>>32n,s=e-(n<<32n);return t&&(n=~n|0n,s=~s|0n,++s>ud&&(s=0n,++n>ud&&(n=0n))),new r(Number(s),Number(n))}static fromNumber(e){if(e===0)return mr;let t=e<0;t&&(e=-e);let n=e>>>0,s=(e-n)/4294967296>>>0;return t&&(s=~s>>>0,n=~n>>>0,++n>4294967295&&(n=0,++s>4294967295&&(s=0))),new r(n,s)}static from(e){return typeof e=="number"?r.fromNumber(e):typeof e=="bigint"?r.fromBigInt(e):typeof e=="string"?r.fromBigInt(BigInt(e)):e.low!=null||e.high!=null?new r(e.low>>>0,e.high>>>0):mr}},mr=new We(0,0);mr.toBigInt=function(){return 0n};mr.zzEncode=mr.zzDecode=function(){return this};mr.length=function(){return 1};var ud=4294967296n;function fd(r){let e=0,t=0;for(let n=0;n<r.length;++n)t=r.charCodeAt(n),t<128?e+=1:t<2048?e+=2:(t&64512)===55296&&(r.charCodeAt(n+1)&64512)===56320?(++n,e+=4):e+=3;return e}function dd(r,e,t){if(t-e<1)return"";let s,o=[],i=0,a;for(;e<t;)a=r[e++],a<128?o[i++]=a:a>191&&a<224?o[i++]=(a&31)<<6|r[e++]&63:a>239&&a<365?(a=((a&7)<<18|(r[e++]&63)<<12|(r[e++]&63)<<6|r[e++]&63)-65536,o[i++]=55296+(a>>10),o[i++]=56320+(a&1023)):o[i++]=(a&15)<<12|(r[e++]&63)<<6|r[e++]&63,i>8191&&((s??(s=[])).push(String.fromCharCode.apply(String,o)),i=0);return s!=null?(i>0&&s.push(String.fromCharCode.apply(String,o.slice(0,i))),s.join("")):String.fromCharCode.apply(String,o.slice(0,i))}function qc(r,e,t){let n=t,s,o;for(let i=0;i<r.length;++i)s=r.charCodeAt(i),s<128?e[t++]=s:s<2048?(e[t++]=s>>6|192,e[t++]=s&63|128):(s&64512)===55296&&((o=r.charCodeAt(i+1))&64512)===56320?(s=65536+((s&1023)<<10)+(o&1023),++i,e[t++]=s>>18|240,e[t++]=s>>12&63|128,e[t++]=s>>6&63|128,e[t++]=s&63|128):(e[t++]=s>>12|224,e[t++]=s>>6&63|128,e[t++]=s&63|128);return t-n}function ot(r,e){return RangeError(`index out of range: ${r.pos} + ${e??1} > ${r.len}`)}function bo(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}var zc=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(e){this.buf=e,this.pos=0,this.len=e.length}uint32(){let e=4294967295;if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,ot(this,10);return e}int32(){return this.uint32()|0}sint32(){let e=this.uint32();return e>>>1^-(e&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw ot(this,4);return bo(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw ot(this,4);return bo(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw ot(this,4);let e=ad(this.buf,this.pos);return this.pos+=4,e}double(){if(this.pos+8>this.len)throw ot(this,4);let e=ld(this.buf,this.pos);return this.pos+=8,e}bytes(){let e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw ot(this,e);return this.pos+=e,t===n?new Uint8Array(0):this.buf.subarray(t,n)}string(){let e=this.bytes();return dd(e,0,e.length)}skip(e){if(typeof e=="number"){if(this.pos+e>this.len)throw ot(this,e);this.pos+=e}else do if(this.pos>=this.len)throw ot(this);while(this.buf[this.pos++]&128);return this}skipType(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(e=this.uint32()&7)!==4;)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${e} at offset ${this.pos}`)}return this}readLongVarint(){let e=new We(0,0),t=0;if(this.len-this.pos>4){for(;t<4;++t)if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(this.buf[this.pos]&127)<<28)>>>0,e.hi=(e.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return e;t=0}else{for(;t<3;++t){if(this.pos>=this.len)throw ot(this);if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(this.buf[this.pos++]&127)<<t*7)>>>0,e}if(this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw ot(this);if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw ot(this,8);let e=bo(this.buf,this.pos+=4),t=bo(this.buf,this.pos+=4);return new We(e,t)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let e=Hc(this.buf,this.pos);return this.pos+=de(e),e}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function Gc(r){return new zc(r instanceof Uint8Array?r:r.subarray())}function Re(r,e,t){let n=Gc(r);return e.decode(n,void 0,t)}var Wc={};De(Wc,{base10:()=>O0});var O0=Kt({prefix:"9",name:"base10",alphabet:"0123456789"});var jc={};De(jc,{base16:()=>U0,base16upper:()=>F0});var U0=ae({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),F0=ae({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Zc={};De(Zc,{base2:()=>V0});var V0=ae({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Xc={};De(Xc,{base256emoji:()=>z0});var pd=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),H0=pd.reduce((r,e,t)=>(r[t]=e,r),[]),K0=pd.reduce((r,e,t)=>{let n=e.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${e}`);return r[n]=t,r},[]);function $0(r){return r.reduce((e,t)=>(e+=H0[t],e),"")}function q0(r){let e=[];for(let t of r){let n=t.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${t}`);let s=K0[n];if(s==null)throw new Error(`Non-base256emoji character: ${t}`);e.push(s)}return new Uint8Array(e)}var z0=Wr({prefix:"\u{1F680}",name:"base256emoji",encode:$0,decode:q0});var Qc={};De(Qc,{base64:()=>Yc,base64pad:()=>G0,base64url:()=>Jc,base64urlpad:()=>W0});var Yc=ae({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),G0=ae({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Jc=ae({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),W0=ae({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var el={};De(el,{base8:()=>j0});var j0=ae({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var tl={};De(tl,{identity:()=>Z0});var Z0=Wr({prefix:"\0",name:"identity",encode:r=>vf(r),decode:r=>xf(r)});var A1=new TextEncoder,S1=new TextDecoder;var sl={};De(sl,{sha256:()=>nn,sha512:()=>J0});function nl({name:r,code:e,encode:t}){return new rl(r,e,t)}var rl=class{name;code;encode;constructor(e,t,n){this.name=e,this.code=t,this.encode=n}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?Qe(this.code,t):t.then(n=>Qe(this.code,n))}else throw Error("Unknown type, must be binary type")}};function gd(r){return async e=>new Uint8Array(await crypto.subtle.digest(r,e))}var nn=nl({name:"sha2-256",code:18,encode:gd("SHA-256")}),J0=nl({name:"sha2-512",code:19,encode:gd("SHA-512")});var Xn={...tl,...Zc,...el,...Wc,...jc,...dc,...hc,...fc,...Qc,...Xc},M1={...sl,...gc};function wd(r,e,t,n){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:n}}}var yd=wd("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),ol=wd("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);let e=Ce(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),Q0={utf8:yd,"utf-8":yd,hex:Xn.base16,latin1:ol,ascii:ol,binary:ol,...Xn},xo=Q0;function N(r,e="utf8"){let t=xo[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.decoder.decode(`${t.prefix}${r}`)}function il(r){let e=r??8192,t=e>>>1,n,s=e;return function(i){if(i<1||i>t)return Ce(i);s+i>e&&(n=Ce(e),s=0);let a=n.subarray(s,s+=i);return s&7&&(s=(s|7)+1),a}}var gr=class{fn;len;next;val;constructor(e,t,n){this.fn=e,this.len=t,this.next=void 0,this.val=n}};function al(){}var ll=class{head;tail;len;next;constructor(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}},ey=il();function ty(r){return globalThis.Buffer!=null?Ce(r):ey(r)}var Jn=class{len;head;tail;states;constructor(){this.len=0,this.head=new gr(al,0,0),this.tail=this.head,this.states=null}_push(e,t,n){return this.tail=this.tail.next=new gr(e,t,n),this.len+=t,this}uint32(e){return this.len+=(this.tail=this.tail.next=new ul((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this}int32(e){return e<0?this._push(vo,10,We.fromNumber(e)):this.uint32(e)}sint32(e){return this.uint32((e<<1^e>>31)>>>0)}uint64(e){let t=We.fromBigInt(e);return this._push(vo,t.length(),t)}uint64Number(e){return this._push(Vc,de(e),e)}uint64String(e){return this.uint64(BigInt(e))}int64(e){return this.uint64(e)}int64Number(e){return this.uint64Number(e)}int64String(e){return this.uint64String(e)}sint64(e){let t=We.fromBigInt(e).zzEncode();return this._push(vo,t.length(),t)}sint64Number(e){let t=We.fromNumber(e).zzEncode();return this._push(vo,t.length(),t)}sint64String(e){return this.sint64(BigInt(e))}bool(e){return this._push(cl,1,e?1:0)}fixed32(e){return this._push(Yn,4,e>>>0)}sfixed32(e){return this.fixed32(e)}fixed64(e){let t=We.fromBigInt(e);return this._push(Yn,4,t.lo)._push(Yn,4,t.hi)}fixed64Number(e){let t=We.fromNumber(e);return this._push(Yn,4,t.lo)._push(Yn,4,t.hi)}fixed64String(e){return this.fixed64(BigInt(e))}sfixed64(e){return this.fixed64(e)}sfixed64Number(e){return this.fixed64Number(e)}sfixed64String(e){return this.fixed64String(e)}float(e){return this._push(id,4,e)}double(e){return this._push(cd,8,e)}bytes(e){let t=e.length>>>0;return t===0?this._push(cl,1,0):this.uint32(t)._push(ny,t,e)}string(e){let t=fd(e);return t!==0?this.uint32(t)._push(qc,t,e):this._push(cl,1,0)}fork(){return this.states=new ll(this),this.head=this.tail=new gr(al,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new gr(al,0,0),this.len=0),this}ldelim(){let e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n!==0&&(this.tail.next=e.next,this.tail=t,this.len+=n),this}finish(){let e=this.head.next,t=ty(this.len),n=0;for(;e!=null;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t}};function cl(r,e,t){e[t]=r&255}function ry(r,e,t){for(;r>127;)e[t++]=r&127|128,r>>>=7;e[t]=r}var ul=class extends gr{next;constructor(e,t){super(ry,e,t),this.next=void 0}};function vo(r,e,t){for(;r.hi!==0;)e[t++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[t++]=r.lo&127|128,r.lo=r.lo>>>7;e[t++]=r.lo}function Yn(r,e,t){e[t]=r&255,e[t+1]=r>>>8&255,e[t+2]=r>>>16&255,e[t+3]=r>>>24}function ny(r,e,t){e.set(r,t)}globalThis.Buffer!=null&&(Jn.prototype.bytes=function(r){let e=r.length>>>0;return this.uint32(e),e>0&&this._push(sy,e,r),this},Jn.prototype.string=function(r){let e=globalThis.Buffer.byteLength(r);return this.uint32(e),e>0&&this._push(oy,e,r),this});function sy(r,e,t){e.set(r,t)}function oy(r,e,t){r.length<40?qc(r,e,t):e.utf8Write!=null?e.utf8Write(r,t):e.set(N(r),t)}function fl(){return new Jn}function Me(r,e){let t=fl();return e.encode(r,t,{lengthDelimited:!1}),t.finish()}var sn;(function(r){r[r.VARINT=0]="VARINT",r[r.BIT64=1]="BIT64",r[r.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",r[r.START_GROUP=3]="START_GROUP",r[r.END_GROUP=4]="END_GROUP",r[r.BIT32=5]="BIT32"})(sn||(sn={}));function Eo(r,e,t,n){return{name:r,type:e,encode:t,decode:n}}function dl(r){function e(s){if(r[s.toString()]==null)throw new Error("Invalid enum value");return r[s]}let t=function(o,i){let a=e(o);i.int32(a)},n=function(o){let i=o.int32();return e(i)};return Eo("enum",sn.VARINT,t,n)}function Oe(r,e){return Eo("message",sn.LENGTH_DELIMITED,r,e)}var yr=class extends Error{code="ERR_MAX_LENGTH";name="MaxLengthError"},Qn=class extends Error{code="ERR_MAX_SIZE";name="MaxSizeError"};var ge;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.secp256k1="secp256k1"})(ge||(ge={}));var hl;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.secp256k1=2]="secp256k1"})(hl||(hl={}));(function(r){r.codec=()=>dl(hl)})(ge||(ge={}));var dt;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),ge.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.Type=ge.codec().decode(t);break}case 2:{o.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(dt||(dt={}));var pl;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),ge.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.Type=ge.codec().decode(t);break}case 2:{o.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(pl||(pl={}));var us={};De(us,{MAX_RSA_KEY_SIZE:()=>hi,generateRSAKeyPair:()=>_l,jwkToJWKKeyPair:()=>mh,jwkToPkcs1:()=>vy,jwkToPkix:()=>Al,jwkToRSAPrivateKey:()=>ph,pkcs1ToJwk:()=>fh,pkcs1ToRSAPrivateKey:()=>hh,pkixToJwk:()=>dh,pkixToRSAPublicKey:()=>Sl});var iy=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Xt=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Yt=new Uint32Array(64),ml=class extends tn{constructor(){super(64,32,8,!1),this.A=Xt[0]|0,this.B=Xt[1]|0,this.C=Xt[2]|0,this.D=Xt[3]|0,this.E=Xt[4]|0,this.F=Xt[5]|0,this.G=Xt[6]|0,this.H=Xt[7]|0}get(){let{A:e,B:t,C:n,D:s,E:o,F:i,G:a,H:c}=this;return[e,t,n,s,o,i,a,c]}set(e,t,n,s,o,i,a,c){this.A=e|0,this.B=t|0,this.C=n|0,this.D=s|0,this.E=o|0,this.F=i|0,this.G=a|0,this.H=c|0}process(e,t){for(let f=0;f<16;f++,t+=4)Yt[f]=e.getUint32(t,!1);for(let f=16;f<64;f++){let d=Yt[f-15],m=Yt[f-2],p=tt(d,7)^tt(d,18)^d>>>3,g=tt(m,17)^tt(m,19)^m>>>10;Yt[f]=g+Yt[f-7]+p+Yt[f-16]|0}let{A:n,B:s,C:o,D:i,E:a,F:c,G:l,H:u}=this;for(let f=0;f<64;f++){let d=tt(a,6)^tt(a,11)^tt(a,25),m=u+d+Uf(a,c,l)+iy[f]+Yt[f]|0,g=(tt(n,2)^tt(n,13)^tt(n,22))+Ff(n,s,o)|0;u=l,l=c,c=a,a=i+m|0,i=o,o=s,s=n,n=m+g|0}n=n+this.A|0,s=s+this.B|0,o=o+this.C|0,i=i+this.D|0,a=a+this.E|0,c=c+this.F|0,l=l+this.G|0,u=u+this.H|0,this.set(n,s,o,i,a,c,l,u)}roundClean(){Yt.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};var on=so(()=>new ml);var H=Hr(xd());function wr(r,e){let t=0;if(r.length===1)return r[0];for(let n=r.length-1;n>=0;n--)t+=r[r.length-1-n]*Math.pow(2,e*n);return t}function Jt(r,e,t=-1){let n=t,s=r,o=0,i=Math.pow(2,e);for(let a=1;a<8;a++){if(r<i){let c;if(n<0)c=new ArrayBuffer(a),o=a;else{if(n<a)return new ArrayBuffer(0);c=new ArrayBuffer(n),o=n}let l=new Uint8Array(c);for(let u=a-1;u>=0;u--){let f=Math.pow(2,u*e);l[o-u-1]=Math.floor(s/f),s-=l[o-u-1]*f}return c}i*=Math.pow(2,e)}return new ArrayBuffer(0)}function _o(...r){let e=0,t=0;for(let o of r)e+=o.length;let n=new ArrayBuffer(e),s=new Uint8Array(n);for(let o of r)s.set(o,t),t+=o.length;return s}function yl(){let r=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){let a=r[0]===255&&r[1]&128,c=r[0]===0&&(r[1]&128)===0;(a||c)&&this.warnings.push("Needlessly long format")}let e=new ArrayBuffer(this.valueHex.byteLength),t=new Uint8Array(e);for(let a=0;a<this.valueHex.byteLength;a++)t[a]=0;t[0]=r[0]&128;let n=wr(t,8),s=new ArrayBuffer(this.valueHex.byteLength),o=new Uint8Array(s);for(let a=0;a<this.valueHex.byteLength;a++)o[a]=r[a];return o[0]&=127,wr(o,8)-n}function vd(r){let e=r<0?r*-1:r,t=128;for(let n=1;n<8;n++){if(e<=t){if(r<0){let i=t-e,a=Jt(i,8,n),c=new Uint8Array(a);return c[0]|=128,a}let s=Jt(e,8,n),o=new Uint8Array(s);if(o[0]&128){let i=s.slice(0),a=new Uint8Array(i);s=new ArrayBuffer(s.byteLength+1),o=new Uint8Array(s);for(let c=0;c<i.byteLength;c++)o[c+1]=a[c];o[0]=0}return s}t*=Math.pow(2,8)}return new ArrayBuffer(0)}function Ed(r,e){if(r.byteLength!==e.byteLength)return!1;let t=new Uint8Array(r),n=new Uint8Array(e);for(let s=0;s<t.length;s++)if(t[s]!==n[s])return!1;return!0}function qe(r,e){let t=r.toString(10);if(e<t.length)return"";let n=e-t.length,s=new Array(n);for(let i=0;i<n;i++)s[i]="0";return s.join("").concat(t)}var yE=Math.log(2);function Co(){if(typeof BigInt>"u")throw new Error("BigInt is not defined. Your environment doesn't implement BigInt.")}function wl(r){let e=0,t=0;for(let s=0;s<r.length;s++){let o=r[s];e+=o.byteLength}let n=new Uint8Array(e);for(let s=0;s<r.length;s++){let o=r[s];n.set(new Uint8Array(o),t),t+=o.byteLength}return n.buffer}function Pt(r,e,t,n){return e instanceof Uint8Array?e.byteLength?t<0?(r.error="Wrong parameter: inputOffset less than zero",!1):n<0?(r.error="Wrong parameter: inputLength less than zero",!1):e.byteLength-t-n<0?(r.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1):!0:(r.error="Wrong parameter: inputBuffer has zero length",!1):(r.error="Wrong parameter: inputBuffer must be 'Uint8Array'",!1)}var ts=class{constructor(){this.items=[]}write(e){this.items.push(e)}final(){return wl(this.items)}},es=[new Uint8Array([1])],Ad="0123456789";var fn="",it=new ArrayBuffer(0),bl=new Uint8Array(0),rs="EndOfContent",_d="OCTET STRING",Cd="BIT STRING";function Nt(r){var e;return e=class extends r{constructor(...n){var s;super(...n);let o=n[0]||{};this.isHexOnly=(s=o.isHexOnly)!==null&&s!==void 0?s:!1,this.valueHexView=o.valueHex?H.BufferSourceConverter.toUint8Array(o.valueHex):bl}get valueHex(){return this.valueHexView.slice().buffer}set valueHex(n){this.valueHexView=new Uint8Array(n)}fromBER(n,s,o){let i=n instanceof ArrayBuffer?new Uint8Array(n):n;if(!Pt(this,i,s,o))return-1;let a=s+o;return this.valueHexView=i.subarray(s,a),this.valueHexView.length?(this.blockLength=o,a):(this.warnings.push("Zero buffer length"),s)}toBER(n=!1){return this.isHexOnly?n?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.byteLength===this.valueHexView.buffer.byteLength?this.valueHexView.buffer:this.valueHexView.slice().buffer:(this.error="Flag 'isHexOnly' is not set, abort",it)}toJSON(){return{...super.toJSON(),isHexOnly:this.isHexOnly,valueHex:H.Convert.ToHex(this.valueHexView)}}},e.NAME="hexBlock",e}var kt=class{constructor({blockLength:e=0,error:t=fn,warnings:n=[],valueBeforeDecode:s=bl}={}){this.blockLength=e,this.error=t,this.warnings=n,this.valueBeforeDecodeView=H.BufferSourceConverter.toUint8Array(s)}static blockName(){return this.NAME}get valueBeforeDecode(){return this.valueBeforeDecodeView.slice().buffer}set valueBeforeDecode(e){this.valueBeforeDecodeView=new Uint8Array(e)}toJSON(){return{blockName:this.constructor.NAME,blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:H.Convert.ToHex(this.valueBeforeDecodeView)}}};kt.NAME="baseBlock";var Te=class extends kt{fromBER(e,t,n){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}toBER(e,t){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}};Te.NAME="valueBlock";var Io=class extends Nt(kt){constructor({idBlock:e={}}={}){var t,n,s,o;super(),e?(this.isHexOnly=(t=e.isHexOnly)!==null&&t!==void 0?t:!1,this.valueHexView=e.valueHex?H.BufferSourceConverter.toUint8Array(e.valueHex):bl,this.tagClass=(n=e.tagClass)!==null&&n!==void 0?n:-1,this.tagNumber=(s=e.tagNumber)!==null&&s!==void 0?s:-1,this.isConstructed=(o=e.isConstructed)!==null&&o!==void 0?o:!1):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}toBER(e=!1){let t=0;switch(this.tagClass){case 1:t|=0;break;case 2:t|=64;break;case 3:t|=128;break;case 4:t|=192;break;default:return this.error="Unknown tag class",it}if(this.isConstructed&&(t|=32),this.tagNumber<31&&!this.isHexOnly){let s=new Uint8Array(1);if(!e){let o=this.tagNumber;o&=31,t|=o,s[0]=t}return s.buffer}if(!this.isHexOnly){let s=Jt(this.tagNumber,7),o=new Uint8Array(s),i=s.byteLength,a=new Uint8Array(i+1);if(a[0]=t|31,!e){for(let c=0;c<i-1;c++)a[c+1]=o[c]|128;a[i]=o[i-1]}return a.buffer}let n=new Uint8Array(this.valueHexView.byteLength+1);if(n[0]=t|31,!e){let s=this.valueHexView;for(let o=0;o<s.length-1;o++)n[o+1]=s[o]|128;n[this.valueHexView.byteLength]=s[s.length-1]}return n.buffer}fromBER(e,t,n){let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let o=s.subarray(t,t+n);if(o.length===0)return this.error="Zero buffer length",-1;switch(o[0]&192){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=(o[0]&32)===32,this.isHexOnly=!1;let a=o[0]&31;if(a!==31)this.tagNumber=a,this.blockLength=1;else{let c=1,l=this.valueHexView=new Uint8Array(255),u=255;for(;o[c]&128;){if(l[c-1]=o[c]&127,c++,c>=o.length)return this.error="End of input reached before message was fully decoded",-1;if(c===u){u+=255;let d=new Uint8Array(u);for(let m=0;m<l.length;m++)d[m]=l[m];l=this.valueHexView=new Uint8Array(u)}}this.blockLength=c+1,l[c-1]=o[c]&127;let f=new Uint8Array(c);for(let d=0;d<c;d++)f[d]=l[d];l=this.valueHexView=new Uint8Array(c),l.set(f),this.blockLength<=9?this.tagNumber=wr(l,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(this.tagClass===1&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 13:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){return{...super.toJSON(),tagClass:this.tagClass,tagNumber:this.tagNumber,isConstructed:this.isConstructed}}};Io.NAME="identificationBlock";var Bo=class extends kt{constructor({lenBlock:e={}}={}){var t,n,s;super(),this.isIndefiniteForm=(t=e.isIndefiniteForm)!==null&&t!==void 0?t:!1,this.longFormUsed=(n=e.longFormUsed)!==null&&n!==void 0?n:!1,this.length=(s=e.length)!==null&&s!==void 0?s:0}fromBER(e,t,n){let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let o=s.subarray(t,t+n);if(o.length===0)return this.error="Zero buffer length",-1;if(o[0]===255)return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=o[0]===128,this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(o[0]&128),this.longFormUsed===!1)return this.length=o[0],this.blockLength=1,t+this.blockLength;let i=o[0]&127;if(i>8)return this.error="Too big integer",-1;if(i+1>o.length)return this.error="End of input reached before message was fully decoded",-1;let a=t+1,c=s.subarray(a,a+i);return c[i-1]===0&&this.warnings.push("Needlessly long encoded length"),this.length=wr(c,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unnecessary usage of long length form"),this.blockLength=i+1,t+this.blockLength}toBER(e=!1){let t,n;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),e===!1&&(n=new Uint8Array(t),n[0]=128),t;if(this.longFormUsed){let s=Jt(this.length,8);if(s.byteLength>127)return this.error="Too big length",it;if(t=new ArrayBuffer(s.byteLength+1),e)return t;let o=new Uint8Array(s);n=new Uint8Array(t),n[0]=s.byteLength|128;for(let i=0;i<s.byteLength;i++)n[i+1]=o[i];return t}return t=new ArrayBuffer(1),e===!1&&(n=new Uint8Array(t),n[0]=this.length),t}toJSON(){return{...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,longFormUsed:this.longFormUsed,length:this.length}}};Bo.NAME="lengthBlock";var C={},Ee=class extends kt{constructor({name:e=fn,optional:t=!1,primitiveSchema:n,...s}={},o){super(s),this.name=e,this.optional=t,n&&(this.primitiveSchema=n),this.idBlock=new Io(s),this.lenBlock=new Bo(s),this.valueBlock=o?new o(s):new Te(s)}fromBER(e,t,n){let s=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return s===-1?(this.error=this.valueBlock.error,s):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),s)}toBER(e,t){let n=t||new ts;t||Id(this);let s=this.idBlock.toBER(e);if(n.write(s),this.lenBlock.isIndefiniteForm)n.write(new Uint8Array([128]).buffer),this.valueBlock.toBER(e,n),n.write(new ArrayBuffer(2));else{let o=this.valueBlock.toBER(e);this.lenBlock.length=o.byteLength;let i=this.lenBlock.toBER(e);n.write(i),n.write(o)}return t?it:n.final()}toJSON(){let e={...super.toJSON(),idBlock:this.idBlock.toJSON(),lenBlock:this.lenBlock.toJSON(),valueBlock:this.valueBlock.toJSON(),name:this.name,optional:this.optional};return this.primitiveSchema&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}toString(e="ascii"){return e==="ascii"?this.onAsciiEncoding():H.Convert.ToHex(this.toBER())}onAsciiEncoding(){return`${this.constructor.NAME} : ${H.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`}isEqual(e){if(this===e)return!0;if(!(e instanceof this.constructor))return!1;let t=this.toBER(),n=e.toBER();return Ed(t,n)}};Ee.NAME="BaseBlock";function Id(r){if(r instanceof C.Constructed)for(let e of r.valueBlock.value)Id(e)&&(r.lenBlock.isIndefiniteForm=!0);return!!r.lenBlock.isIndefiniteForm}var ko=class extends Ee{constructor({value:e=fn,...t}={},n){super(t,n),e&&this.fromString(e)}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}fromBER(e,t,n){let s=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return s===-1?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHexView),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),s)}onAsciiEncoding(){return`${this.constructor.NAME} : '${this.valueBlock.value}'`}};ko.NAME="BaseStringBlock";var To=class extends Nt(Te){constructor({isHexOnly:e=!0,...t}={}){super(t),this.isHexOnly=e}};To.NAME="PrimitiveValueBlock";var Bd,Lo=class extends Ee{constructor(e={}){super(e,To),this.idBlock.isConstructed=!1}};Bd=Lo;C.Primitive=Bd;Lo.NAME="PRIMITIVE";function my(r,e){if(r instanceof e)return r;let t=new e;return t.idBlock=r.idBlock,t.lenBlock=r.lenBlock,t.warnings=r.warnings,t.valueBeforeDecodeView=r.valueBeforeDecodeView,t}function fi(r,e=0,t=r.length){let n=e,s=new Ee({},Te),o=new kt;if(!Pt(o,r,e,t))return s.error=o.error,{offset:-1,result:s};if(!r.subarray(e,e+t).length)return s.error="Zero buffer length",{offset:-1,result:s};let a=s.idBlock.fromBER(r,e,t);if(s.idBlock.warnings.length&&s.warnings.concat(s.idBlock.warnings),a===-1)return s.error=s.idBlock.error,{offset:-1,result:s};if(e=a,t-=s.idBlock.blockLength,a=s.lenBlock.fromBER(r,e,t),s.lenBlock.warnings.length&&s.warnings.concat(s.lenBlock.warnings),a===-1)return s.error=s.lenBlock.error,{offset:-1,result:s};if(e=a,t-=s.lenBlock.blockLength,!s.idBlock.isConstructed&&s.lenBlock.isIndefiniteForm)return s.error="Indefinite length form used for primitive encoding form",{offset:-1,result:s};let c=Ee;switch(s.idBlock.tagClass){case 1:if(s.idBlock.tagNumber>=37&&s.idBlock.isHexOnly===!1)return s.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:s};switch(s.idBlock.tagNumber){case 0:if(s.idBlock.isConstructed&&s.lenBlock.length>0)return s.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:s};c=C.EndOfContent;break;case 1:c=C.Boolean;break;case 2:c=C.Integer;break;case 3:c=C.BitString;break;case 4:c=C.OctetString;break;case 5:c=C.Null;break;case 6:c=C.ObjectIdentifier;break;case 10:c=C.Enumerated;break;case 12:c=C.Utf8String;break;case 13:c=C.RelativeObjectIdentifier;break;case 14:c=C.TIME;break;case 15:return s.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:s};case 16:c=C.Sequence;break;case 17:c=C.Set;break;case 18:c=C.NumericString;break;case 19:c=C.PrintableString;break;case 20:c=C.TeletexString;break;case 21:c=C.VideotexString;break;case 22:c=C.IA5String;break;case 23:c=C.UTCTime;break;case 24:c=C.GeneralizedTime;break;case 25:c=C.GraphicString;break;case 26:c=C.VisibleString;break;case 27:c=C.GeneralString;break;case 28:c=C.UniversalString;break;case 29:c=C.CharacterString;break;case 30:c=C.BmpString;break;case 31:c=C.DATE;break;case 32:c=C.TimeOfDay;break;case 33:c=C.DateTime;break;case 34:c=C.Duration;break;default:{let l=s.idBlock.isConstructed?new C.Constructed:new C.Primitive;l.idBlock=s.idBlock,l.lenBlock=s.lenBlock,l.warnings=s.warnings,s=l}}break;case 2:case 3:case 4:default:c=s.idBlock.isConstructed?C.Constructed:C.Primitive}return s=my(s,c),a=s.fromBER(r,e,s.lenBlock.isIndefiniteForm?t:s.lenBlock.length),s.valueBeforeDecodeView=r.subarray(n,n+s.blockLength),{offset:a,result:s}}function xl(r){if(!r.byteLength){let e=new Ee({},Te);return e.error="Input buffer has zero length",{offset:-1,result:e}}return fi(H.BufferSourceConverter.toUint8Array(r).slice(),0,r.byteLength)}function gy(r,e){return r?1:e}var ht=class extends Te{constructor({value:e=[],isIndefiniteForm:t=!1,...n}={}){super(n),this.value=e,this.isIndefiniteForm=t}fromBER(e,t,n){let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;if(this.valueBeforeDecodeView=s.subarray(t,t+n),this.valueBeforeDecodeView.length===0)return this.warnings.push("Zero buffer length"),t;let o=t;for(;gy(this.isIndefiniteForm,n)>0;){let i=fi(s,o,n);if(i.offset===-1)return this.error=i.result.error,this.warnings.concat(i.result.warnings),-1;if(o=i.offset,this.blockLength+=i.result.blockLength,n-=i.result.blockLength,this.value.push(i.result),this.isIndefiniteForm&&i.result.constructor.NAME===rs)break}return this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.NAME===rs?this.value.pop():this.warnings.push("No EndOfContent block encoded")),o}toBER(e,t){let n=t||new ts;for(let s=0;s<this.value.length;s++)this.value[s].toBER(e,n);return t?it:n.final()}toJSON(){let e={...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,value:[]};for(let t of this.value)e.value.push(t.toJSON());return e}};ht.NAME="ConstructedValueBlock";var kd,Qt=class extends Ee{constructor(e={}){super(e,ht),this.idBlock.isConstructed=!0}fromBER(e,t,n){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;let s=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return s===-1?(this.error=this.valueBlock.error,s):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),s)}onAsciiEncoding(){let e=[];for(let n of this.valueBlock.value)e.push(n.toString("ascii").split(`
 `).map(s=>`  ${s}`).join(`
 `));let t=this.idBlock.tagClass===3?`[${this.idBlock.tagNumber}]`:this.constructor.NAME;return e.length?`${t} :
 ${e.join(`
-`)}`:`${t} :`}};kd=Qt;C.Constructed=kd;Qt.NAME="CONSTRUCTED";var Po=class extends Te{fromBER(e,t,n){return t}toBER(e){return it}};Po.override="EndOfContentValueBlock";var Td,No=class extends Ee{constructor(e={}){super(e,Po),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}};Td=No;C.EndOfContent=Td;No.NAME=rs;var Ld,cn=class extends Ee{constructor(e={}){super(e,Te),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}fromBER(e,t,n){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=n,t+n>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+n}toBER(e,t){let n=new ArrayBuffer(2);if(!e){let s=new Uint8Array(n);s[0]=5,s[1]=0}return t&&t.write(n),n}onAsciiEncoding(){return`${this.constructor.NAME}`}};Ld=cn;C.Null=Ld;cn.NAME="NULL";var Do=class extends Nt(Te){constructor({value:e,...t}={}){super(t),t.valueHex?this.valueHexView=H.BufferSourceConverter.toUint8Array(t.valueHex):this.valueHexView=new Uint8Array(1),e&&(this.value=e)}get value(){for(let e of this.valueHexView)if(e>0)return!0;return!1}set value(e){this.valueHexView[0]=e?255:0}fromBER(e,t,n){let s=H.BufferSourceConverter.toUint8Array(e);return Pt(this,s,t,n)?(this.valueHexView=s.subarray(t,t+n),n>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,yl.call(this),this.blockLength=n,t+n):-1}toBER(){return this.valueHexView.slice()}toJSON(){return{...super.toJSON(),value:this.value}}};Do.NAME="BooleanValueBlock";var Pd,Ro=class extends Ee{constructor(e={}){super(e,Do),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.getValue}`}};Pd=Ro;C.Boolean=Pd;Ro.NAME="BOOLEAN";var Mo=class extends Nt(ht){constructor({isConstructed:e=!1,...t}={}){super(t),this.isConstructed=e}fromBER(e,t,n){let s=0;if(this.isConstructed){if(this.isHexOnly=!1,s=ht.prototype.fromBER.call(this,e,t,n),s===-1)return s;for(let o=0;o<this.value.length;o++){let i=this.value[o].constructor.NAME;if(i===rs){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(i!==_d)return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,s=super.fromBER(e,t,n),this.blockLength=n;return s}toBER(e,t){return this.isConstructed?ht.prototype.toBER.call(this,e,t):e?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),isConstructed:this.isConstructed}}};Mo.NAME="OctetStringValueBlock";var Nd,Oo=class r extends Ee{constructor({idBlock:e={},lenBlock:t={},...n}={}){var s,o;(s=n.isConstructed)!==null&&s!==void 0||(n.isConstructed=!!(!((o=n.value)===null||o===void 0)&&o.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},Mo),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,n){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,n===0)return this.idBlock.error.length===0&&(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length===0&&(this.blockLength+=this.lenBlock.blockLength),t;if(!this.valueBlock.isConstructed){let o=(e instanceof ArrayBuffer?new Uint8Array(e):e).subarray(t,t+n);try{if(o.byteLength){let i=fi(o,0,o.byteLength);i.offset!==-1&&i.offset===n&&(this.valueBlock.value=[i.result])}}catch{}}return super.fromBER(e,t,n)}onAsciiEncoding(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?Qt.prototype.onAsciiEncoding.call(this):`${this.constructor.NAME} : ${H.Convert.ToHex(this.valueBlock.valueHexView)}`}getValue(){if(!this.idBlock.isConstructed)return this.valueBlock.valueHexView.slice().buffer;let e=[];for(let t of this.valueBlock.value)t instanceof r&&e.push(t.valueBlock.valueHexView);return H.BufferSourceConverter.concat(e)}};Nd=Oo;C.OctetString=Nd;Oo.NAME=_d;var Uo=class extends Nt(ht){constructor({unusedBits:e=0,isConstructed:t=!1,...n}={}){super(n),this.unusedBits=e,this.isConstructed=t,this.blockLength=this.valueHexView.byteLength}fromBER(e,t,n){if(!n)return t;let s=-1;if(this.isConstructed){if(s=ht.prototype.fromBER.call(this,e,t,n),s===-1)return s;for(let a of this.value){let c=a.constructor.NAME;if(c===rs){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(c!==Cd)return this.error="BIT STRING may consists of BIT STRINGs only",-1;let l=a.valueBlock;if(this.unusedBits>0&&l.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;this.unusedBits=l.unusedBits}return s}let o=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let i=o.subarray(t,t+n);if(this.unusedBits=i[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){let a=i.subarray(1);try{if(a.byteLength){let c=fi(a,0,a.byteLength);c.offset!==-1&&c.offset===n-1&&(this.value=[c.result])}}catch{}}return this.valueHexView=i.subarray(1),this.blockLength=i.length,t+n}toBER(e,t){if(this.isConstructed)return ht.prototype.toBER.call(this,e,t);if(e)return new ArrayBuffer(this.valueHexView.byteLength+1);if(!this.valueHexView.byteLength)return it;let n=new Uint8Array(this.valueHexView.length+1);return n[0]=this.unusedBits,n.set(this.valueHexView,1),n.buffer}toJSON(){return{...super.toJSON(),unusedBits:this.unusedBits,isConstructed:this.isConstructed}}};Uo.NAME="BitStringValueBlock";var Dd,ln=class extends Ee{constructor({idBlock:e={},lenBlock:t={},...n}={}){var s,o;(s=n.isConstructed)!==null&&s!==void 0||(n.isConstructed=!!(!((o=n.value)===null||o===void 0)&&o.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},Uo),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}fromBER(e,t,n){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,n)}onAsciiEncoding(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return Qt.prototype.onAsciiEncoding.call(this);{let e=[],t=this.valueBlock.valueHexView;for(let s of t)e.push(s.toString(2).padStart(8,"0"));let n=e.join("");return`${this.constructor.NAME} : ${n.substring(0,n.length-this.valueBlock.unusedBits)}`}}};Dd=ln;C.BitString=Dd;ln.NAME=Cd;var Rd;function yy(r,e){let t=new Uint8Array([0]),n=new Uint8Array(r),s=new Uint8Array(e),o=n.slice(0),i=o.length-1,a=s.slice(0),c=a.length-1,l=0,u=c<i?i:c,f=0;for(let d=u;d>=0;d--,f++){switch(!0){case f<a.length:l=o[i-f]+a[c-f]+t[0];break;default:l=o[i-f]+t[0]}switch(t[0]=l/10,!0){case f>=o.length:o=_o(new Uint8Array([l%10]),o);break;default:o[i-f]=l%10}}return t[0]>0&&(o=_o(t,o)),o}function Sd(r){if(r>=es.length)for(let e=es.length;e<=r;e++){let t=new Uint8Array([0]),n=es[e-1].slice(0);for(let s=n.length-1;s>=0;s--){let o=new Uint8Array([(n[s]<<1)+t[0]]);t[0]=o[0]/10,n[s]=o[0]%10}t[0]>0&&(n=_o(t,n)),es.push(n)}return es[r]}function wy(r,e){let t=0,n=new Uint8Array(r),s=new Uint8Array(e),o=n.slice(0),i=o.length-1,a=s.slice(0),c=a.length-1,l,u=0;for(let f=c;f>=0;f--,u++)switch(l=o[i-u]-a[c-u]-t,!0){case l<0:t=1,o[i-u]=l+10;break;default:t=0,o[i-u]=l}if(t>0)for(let f=i-c+1;f>=0;f--,u++)if(l=o[i-u]-t,l<0)t=1,o[i-u]=l+10;else{t=0,o[i-u]=l;break}return o.slice()}var ns=class extends Nt(Te){constructor({value:e,...t}={}){super(t),this._valueDec=0,t.valueHex&&this.setValueHex(),e!==void 0&&(this.valueDec=e)}setValueHex(){this.valueHexView.length>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,this.valueHexView.length>0&&(this._valueDec=yl.call(this)))}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this.valueHexView=new Uint8Array(vd(e))}get valueDec(){return this._valueDec}fromDER(e,t,n,s=0){let o=this.fromBER(e,t,n);if(o===-1)return o;let i=this.valueHexView;return i[0]===0&&i[1]&128?this.valueHexView=i.subarray(1):s!==0&&i.length<s&&(s-i.length>1&&(s=i.length+1),this.valueHexView=i.subarray(s-i.length)),o}toDER(e=!1){let t=this.valueHexView;switch(!0){case(t[0]&128)!==0:{let n=new Uint8Array(this.valueHexView.length+1);n[0]=0,n.set(t,1),this.valueHexView=n}break;case(t[0]===0&&(t[1]&128)===0):this.valueHexView=this.valueHexView.subarray(1);break}return this.toBER(e)}fromBER(e,t,n){let s=super.fromBER(e,t,n);return s===-1||this.setValueHex(),s}toBER(e){return e?new ArrayBuffer(this.valueHexView.length):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}toString(){let e=this.valueHexView.length*8-1,t=new Uint8Array(this.valueHexView.length*8/3),n=0,s,o=this.valueHexView,i="",a=!1;for(let c=o.byteLength-1;c>=0;c--){s=o[c];for(let l=0;l<8;l++){if((s&1)===1)switch(n){case e:t=wy(Sd(n),t),i="-";break;default:t=yy(t,Sd(n))}n++,s>>=1}}for(let c=0;c<t.length;c++)t[c]&&(a=!0),a&&(i+=Ad.charAt(t[c]));return a===!1&&(i+=Ad.charAt(0)),i}};Rd=ns;ns.NAME="IntegerValueBlock";Object.defineProperty(Rd.prototype,"valueHex",{set:function(r){this.valueHexView=new Uint8Array(r),this.setValueHex()},get:function(){return this.valueHexView.slice().buffer}});var Md,Ae=class r extends Ee{constructor(e={}){super(e,ns),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}toBigInt(){return Co(),BigInt(this.valueBlock.toString())}static fromBigInt(e){Co();let t=BigInt(e),n=new ts,s=t.toString(16).replace(/^-/,""),o=new Uint8Array(H.Convert.FromHex(s));if(t<0){let a=new Uint8Array(o.length+(o[0]&128?1:0));a[0]|=128;let l=BigInt(`0x${H.Convert.ToHex(a)}`)+t,u=H.BufferSourceConverter.toUint8Array(H.Convert.FromHex(l.toString(16)));u[0]|=128,n.write(u)}else o[0]&128&&n.write(new Uint8Array([0])),n.write(o);return new r({valueHex:n.final()})}convertToDER(){let e=new r({valueHex:this.valueBlock.valueHexView});return e.valueBlock.toDER(),e}convertFromDER(){return new r({valueHex:this.valueBlock.valueHexView[0]===0?this.valueBlock.valueHexView.subarray(1):this.valueBlock.valueHexView})}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()}`}};Md=Ae;C.Integer=Md;Ae.NAME="INTEGER";var Od,Fo=class extends Ae{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}};Od=Fo;C.Enumerated=Od;Fo.NAME="ENUMERATED";var ss=class extends Nt(Te){constructor({valueDec:e=-1,isFirstSid:t=!1,...n}={}){super(n),this.valueDec=e,this.isFirstSid=t}fromBER(e,t,n){if(!n)return t;let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let o=s.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=o[a]&127,this.blockLength++,!!(o[a]&128));a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,o[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=wr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}set valueBigInt(e){Co();let t=BigInt(e).toString(2);for(;t.length%7;)t="0"+t;let n=new Uint8Array(t.length/7);for(let s=0;s<n.length;s++)n[s]=parseInt(t.slice(s*7,s*7+7),2)+(s+1<n.length?128:0);this.fromBER(n.buffer,0,n.length)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let s=this.valueHexView,o=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)o[i]=s[i]|128;return o[this.blockLength-1]=s[this.blockLength-1],o.buffer}let t=Jt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",it;let n=new Uint8Array(t.byteLength);if(!e){let s=new Uint8Array(t),o=t.byteLength-1;for(let i=0;i<o;i++)n[i]=s[i]|128;n[o]=s[o]}return n}toString(){let e="";if(this.isHexOnly)e=H.Convert.ToHex(this.valueHexView);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec,isFirstSid:this.isFirstSid}}};ss.NAME="sidBlock";var Vo=class extends Te{constructor({value:e=fn,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let s=t;for(;n>0;){let o=new ss;if(s=o.fromBER(e,s,n),s===-1)return this.blockLength=0,this.error=o.error,s;this.value.length===0&&(o.isFirstSid=!0),this.blockLength+=o.blockLength,n-=o.blockLength,this.value.push(o)}return s}toBER(e){let t=[];for(let n=0;n<this.value.length;n++){let s=this.value[n].toBER(e);if(s.byteLength===0)return this.error=this.value[n].error,it;t.push(s)}return wl(t)}fromString(e){this.value=[];let t=0,n=0,s="",o=!1;do if(n=e.indexOf(".",t),n===-1?s=e.substring(t):s=e.substring(t,n),t=n+1,o){let i=this.value[0],a=0;switch(i.valueDec){case 0:break;case 1:a=40;break;case 2:a=80;break;default:this.value=[];return}let c=parseInt(s,10);if(isNaN(c))return;i.valueDec=c+a,o=!1}else{let i=new ss;if(s>Number.MAX_SAFE_INTEGER){Co();let a=BigInt(s);i.valueBigInt=a}else if(i.valueDec=parseInt(s,10),isNaN(i.valueDec))return;this.value.length||(i.isFirstSid=!0,o=!0),this.value.push(i)}while(n!==-1)}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let s=this.value[n].toString();n!==0&&(e=`${e}.`),t?(s=`{${s}}`,this.value[n].isFirstSid?e=`2.{${s} - 80}`:e+=s):e+=s}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};Vo.NAME="ObjectIdentifierValueBlock";var Ud,un=class extends Ee{constructor(e={}){super(e,Vo),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};Ud=un;C.ObjectIdentifier=Ud;un.NAME="OBJECT IDENTIFIER";var os=class extends Nt(kt){constructor({valueDec:e=0,...t}={}){super(t),this.valueDec=e}fromBER(e,t,n){if(n===0)return t;let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let o=s.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=o[a]&127,this.blockLength++,!!(o[a]&128));a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,o[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=wr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let s=this.valueHexView,o=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)o[i]=s[i]|128;return o[this.blockLength-1]=s[this.blockLength-1],o.buffer}let t=Jt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",it;let n=new Uint8Array(t.byteLength);if(!e){let s=new Uint8Array(t),o=t.byteLength-1;for(let i=0;i<o;i++)n[i]=s[i]|128;n[o]=s[o]}return n.buffer}toString(){let e="";return this.isHexOnly?e=H.Convert.ToHex(this.valueHexView):e=this.valueDec.toString(),e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}};os.NAME="relativeSidBlock";var Ho=class extends Te{constructor({value:e=fn,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let s=t;for(;n>0;){let o=new os;if(s=o.fromBER(e,s,n),s===-1)return this.blockLength=0,this.error=o.error,s;this.blockLength+=o.blockLength,n-=o.blockLength,this.value.push(o)}return s}toBER(e,t){let n=[];for(let s=0;s<this.value.length;s++){let o=this.value[s].toBER(e);if(o.byteLength===0)return this.error=this.value[s].error,it;n.push(o)}return wl(n)}fromString(e){this.value=[];let t=0,n=0,s="";do{n=e.indexOf(".",t),n===-1?s=e.substring(t):s=e.substring(t,n),t=n+1;let o=new os;if(o.valueDec=parseInt(s,10),isNaN(o.valueDec))return!0;this.value.push(o)}while(n!==-1);return!0}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let s=this.value[n].toString();n!==0&&(e=`${e}.`),t&&(s=`{${s}}`),e+=s}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};Ho.NAME="RelativeObjectIdentifierValueBlock";var Fd,Ko=class extends Ee{constructor(e={}){super(e,Ho),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};Fd=Ko;C.RelativeObjectIdentifier=Fd;Ko.NAME="RelativeObjectIdentifier";var Vd,Tt=class extends Qt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}};Vd=Tt;C.Sequence=Vd;Tt.NAME="SEQUENCE";var Hd,$o=class extends Qt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}};Hd=$o;C.Set=Hd;$o.NAME="SET";var qo=class extends Nt(Te){constructor({...e}={}){super(e),this.isHexOnly=!0,this.value=fn}toJSON(){return{...super.toJSON(),value:this.value}}};qo.NAME="StringValueBlock";var zo=class extends qo{};zo.NAME="SimpleStringValueBlock";var Ue=class extends ko{constructor({...e}={}){super(e,zo)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t);for(let s=0;s<t;s++)n[s]=e.charCodeAt(s);this.valueBlock.value=e}};Ue.NAME="SIMPLE STRING";var Go=class extends Ue{fromBuffer(e){this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e);try{this.valueBlock.value=H.Convert.ToUtf8String(e)}catch(t){this.warnings.push(`Error during "decodeURIComponent": ${t}, using raw string`),this.valueBlock.value=H.Convert.ToBinary(e)}}fromString(e){this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf8String(e)),this.valueBlock.value=e}};Go.NAME="Utf8StringValueBlock";var Kd,Lt=class extends Go{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}};Kd=Lt;C.Utf8String=Kd;Lt.NAME="UTF8String";var Wo=class extends Ue{fromBuffer(e){this.valueBlock.value=H.Convert.ToUtf16String(e),this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e)}fromString(e){this.valueBlock.value=e,this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf16String(e))}};Wo.NAME="BmpStringValueBlock";var $d,jo=class extends Wo{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}};$d=jo;C.BmpString=$d;jo.NAME="BMPString";var Zo=class extends Ue{fromBuffer(e){let t=ArrayBuffer.isView(e)?e.slice().buffer:e.slice(0),n=new Uint8Array(t);for(let s=0;s<n.length;s+=4)n[s]=n[s+3],n[s+1]=n[s+2],n[s+2]=0,n[s+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t*4);for(let s=0;s<t;s++){let o=Jt(e.charCodeAt(s),8),i=new Uint8Array(o);if(i.length>4)continue;let a=4-i.length;for(let c=i.length-1;c>=0;c--)n[s*4+c+a]=i[c]}this.valueBlock.value=e}};Zo.NAME="UniversalStringValueBlock";var qd,Xo=class extends Zo{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}};qd=Xo;C.UniversalString=qd;Xo.NAME="UniversalString";var zd,Yo=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}};zd=Yo;C.NumericString=zd;Yo.NAME="NumericString";var Gd,Jo=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}};Gd=Jo;C.PrintableString=Gd;Jo.NAME="PrintableString";var Wd,Qo=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}};Wd=Qo;C.TeletexString=Wd;Qo.NAME="TeletexString";var jd,ei=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}};jd=ei;C.VideotexString=jd;ei.NAME="VideotexString";var Zd,ti=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}};Zd=ti;C.IA5String=Zd;ti.NAME="IA5String";var Xd,ri=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}};Xd=ri;C.GraphicString=Xd;ri.NAME="GraphicString";var Yd,is=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}};Yd=is;C.VisibleString=Yd;is.NAME="VisibleString";var Jd,ni=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}};Jd=ni;C.GeneralString=Jd;ni.NAME="GeneralString";var Qd,si=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}};Qd=si;C.CharacterString=Qd;si.NAME="CharacterString";var eh,as=class extends is{constructor({value:e,valueDate:t,...n}={}){if(super(n),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,e){this.fromString(e),this.valueBlock.valueHexView=new Uint8Array(e.length);for(let s=0;s<e.length;s++)this.valueBlock.valueHexView[s]=e.charCodeAt(s)}t&&(this.fromDate(t),this.valueBlock.valueHexView=new Uint8Array(this.toBuffer())),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e)))}toBuffer(){let e=this.toString(),t=new ArrayBuffer(e.length),n=new Uint8Array(t);for(let s=0;s<e.length;s++)n[s]=e.charCodeAt(s);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){let n=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig.exec(e);if(n===null){this.error="Wrong input string for conversion";return}let s=parseInt(n[1],10);s>=50?this.year=1900+s:this.year=2e3+s,this.month=parseInt(n[2],10),this.day=parseInt(n[3],10),this.hour=parseInt(n[4],10),this.minute=parseInt(n[5],10),this.second=parseInt(n[6],10)}toString(e="iso"){if(e==="iso"){let t=new Array(7);return t[0]=qe(this.year<2e3?this.year-1900:this.year-2e3,2),t[1]=qe(this.month,2),t[2]=qe(this.day,2),t[3]=qe(this.hour,2),t[4]=qe(this.minute,2),t[5]=qe(this.second,2),t[6]="Z",t.join("")}return super.toString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.toDate().toISOString()}`}toJSON(){return{...super.toJSON(),year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second}}};eh=as;C.UTCTime=eh;as.NAME="UTCTime";var th,oi=class extends as{constructor(e={}){var t;super(e),(t=this.millisecond)!==null&&t!==void 0||(this.millisecond=0),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromDate(e){super.fromDate(e),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t=!1,n="",s="",o=0,i,a=0,c=0;if(e[e.length-1]==="Z")n=e.substring(0,e.length-1),t=!0;else{let f=new Number(e[e.length-1]);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");n=e}if(t){if(n.indexOf("+")!==-1)throw new Error("Wrong input string for conversion");if(n.indexOf("-")!==-1)throw new Error("Wrong input string for conversion")}else{let f=1,d=n.indexOf("+"),m="";if(d===-1&&(d=n.indexOf("-"),f=-1),d!==-1){if(m=n.substring(d+1),n=n.substring(0,d),m.length!==2&&m.length!==4)throw new Error("Wrong input string for conversion");let p=parseInt(m.substring(0,2),10);if(isNaN(p.valueOf()))throw new Error("Wrong input string for conversion");if(a=f*p,m.length===4){if(p=parseInt(m.substring(2,4),10),isNaN(p.valueOf()))throw new Error("Wrong input string for conversion");c=f*p}}}let l=n.indexOf(".");if(l===-1&&(l=n.indexOf(",")),l!==-1){let f=new Number(`0${n.substring(l)}`);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");o=f.valueOf(),s=n.substring(0,l)}else s=n;switch(!0){case s.length===8:if(i=/(\d{4})(\d{2})(\d{2})/ig,l!==-1)throw new Error("Wrong input string for conversion");break;case s.length===10:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=60*o;this.minute=Math.floor(f),f=60*(f-this.minute),this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case s.length===12:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=60*o;this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case s.length===14:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=1e3*o;this.millisecond=Math.floor(f)}break;default:throw new Error("Wrong input string for conversion")}let u=i.exec(s);if(u===null)throw new Error("Wrong input string for conversion");for(let f=1;f<u.length;f++)switch(f){case 1:this.year=parseInt(u[f],10);break;case 2:this.month=parseInt(u[f],10);break;case 3:this.day=parseInt(u[f],10);break;case 4:this.hour=parseInt(u[f],10)+a;break;case 5:this.minute=parseInt(u[f],10)+c;break;case 6:this.second=parseInt(u[f],10);break;default:throw new Error("Wrong input string for conversion")}if(t===!1){let f=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=f.getUTCFullYear(),this.month=f.getUTCMonth(),this.day=f.getUTCDay(),this.hour=f.getUTCHours(),this.minute=f.getUTCMinutes(),this.second=f.getUTCSeconds(),this.millisecond=f.getUTCMilliseconds()}}toString(e="iso"){if(e==="iso"){let t=[];return t.push(qe(this.year,4)),t.push(qe(this.month,2)),t.push(qe(this.day,2)),t.push(qe(this.hour,2)),t.push(qe(this.minute,2)),t.push(qe(this.second,2)),this.millisecond!==0&&(t.push("."),t.push(qe(this.millisecond,3))),t.push("Z"),t.join("")}return super.toString(e)}toJSON(){return{...super.toJSON(),millisecond:this.millisecond}}};th=oi;C.GeneralizedTime=th;oi.NAME="GeneralizedTime";var rh,ii=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}};rh=ii;C.DATE=rh;ii.NAME="DATE";var nh,ai=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}};nh=ai;C.TimeOfDay=nh;ai.NAME="TimeOfDay";var sh,ci=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}};sh=ci;C.DateTime=sh;ci.NAME="DateTime";var oh,li=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}};oh=li;C.Duration=oh;li.NAME="Duration";var ih,ui=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}};ih=ui;C.TIME=ih;ui.NAME="TIME";function z(r,e="utf8"){let t=xo[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.encoder.encode(r).substring(1)}function dn(r){if(isNaN(r)||r<=0)throw new D("random bytes length must be a Number bigger than 0");return en(r)}var cs=class extends Error{constructor(e="An error occurred while signing a message"){super(e),this.name="SigningError"}},ls=class extends Error{constructor(e="An error occurred while verifying a message"){super(e),this.name="VerificationError"}},di=class extends Error{constructor(e="Missing Web Crypto API"){super(e),this.name="WebCryptoMissingError"}};var ah={get(r=globalThis){let e=r.crypto;if(e?.subtle==null)throw new di("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api");return e}};var er=ah;async function ch(r){let e=await er.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await xy(e);return{privateKey:t[0],publicKey:t[1]}}async function lh(r,e){let t=await er.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await er.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,e instanceof Uint8Array?e:e.subarray());return new Uint8Array(n,0,n.byteLength)}async function uh(r,e,t){let n=await er.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return er.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t instanceof Uint8Array?t:t.subarray())}async function xy(r){if(r.privateKey==null||r.publicKey==null)throw new D("Private and public key are required");return Promise.all([er.get().subtle.exportKey("jwk",r.privateKey),er.get().subtle.exportKey("jwk",r.publicKey)])}function vl(r){if(r.kty!=="RSA")throw new D("invalid key type");if(r.n==null)throw new D("invalid key modulus");return N(r.n,"base64url").length*8}var hn=class{type="RSA";_key;_raw;_multihash;constructor(e,t){this._key=e,this._multihash=t}get raw(){return this._raw==null&&(this._raw=us.jwkToPkix(this._key)),this._raw}toMultihash(){return this._multihash}toCID(){return pe.createV1(114,this._multihash)}toString(){return X.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}verify(e,t){return uh(this._key,t,e)}},fs=class{type="RSA";_key;_raw;publicKey;constructor(e,t){this._key=e,this.publicKey=t}get raw(){return this._raw==null&&(this._raw=us.jwkToPkcs1(this._key)),this._raw}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}sign(e){return lh(this._key,e)}};var hi=8192,El=18;function fh(r){let{result:e}=xl(r),t=e.valueBlock.value;return{n:pt(t[1]),e:pt(t[2]),d:pt(t[3]),p:pt(t[4]),q:pt(t[5]),dp:pt(t[6]),dq:pt(t[7]),qi:pt(t[8]),kty:"RSA",alg:"RS256"}}function vy(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new D("JWK was missing components");let t=new Tt({value:[new Ae({value:0}),Ae.fromBigInt(mt(N(r.n,"base64url"))),Ae.fromBigInt(mt(N(r.e,"base64url"))),Ae.fromBigInt(mt(N(r.d,"base64url"))),Ae.fromBigInt(mt(N(r.p,"base64url"))),Ae.fromBigInt(mt(N(r.q,"base64url"))),Ae.fromBigInt(mt(N(r.dp,"base64url"))),Ae.fromBigInt(mt(N(r.dq,"base64url"))),Ae.fromBigInt(mt(N(r.qi,"base64url")))]}).toBER();return new Uint8Array(t,0,t.byteLength)}function dh(r){let{result:e}=xl(r),t=e.valueBlock.value[1].valueBlock.value[0].valueBlock.value;return{kty:"RSA",n:pt(t[0]),e:pt(t[1])}}function Al(r){if(r.n==null||r.e==null)throw new D("JWK was missing components");let t=new Tt({value:[new Tt({value:[new un({value:"1.2.840.113549.1.1.1"}),new cn]}),new ln({valueHex:new Tt({value:[Ae.fromBigInt(mt(N(r.n,"base64url"))),Ae.fromBigInt(mt(N(r.e,"base64url")))]}).toBER()})]}).toBER();return new Uint8Array(t,0,t.byteLength)}function pt(r){let e=r.valueBlock.valueHexView;for(;e[0]===0;)e=e.subarray(1);return z(e,"base64url")}function mt(r){let e=[];return r.forEach(function(t){let n=t.toString(16);n.length%2>0&&(n=`0${n}`),e.push(n)}),BigInt("0x"+e.join(""))}function hh(r){let e=fh(r);return ph(e)}function Sl(r){let e=dh(r);if(vl(e)>hi)throw new Kr("Key size is too large");let t=on(dt.encode({Type:ge.RSA,Data:r})),n=Qe(El,t);return new hn(e,n)}function ph(r){if(vl(r)>hi)throw new D("Key size is too large");let e=mh(r),t=on(dt.encode({Type:ge.RSA,Data:Al(e.publicKey)})),n=Qe(El,t);return new fs(e.privateKey,new hn(e.publicKey,n))}async function _l(r){if(r>hi)throw new D("Key size is too large");let e=await ch(r),t=on(dt.encode({Type:ge.RSA,Data:Al(e.publicKey)})),n=Qe(El,t);return new fs(e.privateKey,new hn(e.publicKey,n))}function mh(r){if(r==null)throw new D("Missing key parameter");return{privateKey:r,publicKey:{kty:r.kty,n:r.n,e:r.e}}}var pi=class extends Qr{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,Rf(e);let n=qn(t);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let s=this.blockLen,o=new Uint8Array(s);o.set(n.length>s?e.create().update(n).digest():n);for(let i=0;i<o.length;i++)o[i]^=54;this.iHash.update(o),this.oHash=e.create();for(let i=0;i<o.length;i++)o[i]^=106;this.oHash.update(o),o.fill(0)}update(e){return Jr(this),this.iHash.update(e),this}digestInto(e){Jr(this),Yr(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:n,finished:s,destroyed:o,blockLen:i,outputLen:a}=this;return e=e,e.finished=s,e.destroyed=o,e.blockLen=i,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},Cl=(r,e,t)=>new pi(r,e).update(t).digest();Cl.create=(r,e)=>new pi(r,e);function gh(r){r.lowS!==void 0&&rt("lowS",r.lowS),r.prehash!==void 0&&rt("prehash",r.prehash)}function Ey(r){let e=Wn(r);ut(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:t,Fp:n,a:s}=e;if(t){if(!n.eql(s,n.ZERO))throw new Error("invalid endomorphism, can only be defined for Koblitz curves that have a=0");if(typeof t!="object"||typeof t.beta!="bigint"||typeof t.splitScalar!="function")throw new Error("invalid endomorphism, expected beta: bigint and splitScalar: function")}return Object.freeze({...e})}var{bytesToNumberBE:Ay,hexToBytes:Sy}=co,Il=class extends Error{constructor(e=""){super(e)}},Dt={Err:Il,_tlv:{encode:(r,e)=>{let{Err:t}=Dt;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length&1)throw new t("tlv.encode: unpadded data");let n=e.length/2,s=lr(n);if(s.length/2&128)throw new t("tlv.encode: long form length too big");let o=n>127?lr(s.length/2|128):"";return lr(r)+o+s+e},decode(r,e){let{Err:t}=Dt,n=0;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length<2||e[n++]!==r)throw new t("tlv.decode: wrong tlv");let s=e[n++],o=!!(s&128),i=0;if(!o)i=s;else{let c=s&127;if(!c)throw new t("tlv.decode(long): indefinite length not supported");if(c>4)throw new t("tlv.decode(long): byte length is too big");let l=e.subarray(n,n+c);if(l.length!==c)throw new t("tlv.decode: length bytes not complete");if(l[0]===0)throw new t("tlv.decode(long): zero leftmost byte");for(let u of l)i=i<<8|u;if(n+=c,i<128)throw new t("tlv.decode(long): not minimal encoding")}let a=e.subarray(n,n+i);if(a.length!==i)throw new t("tlv.decode: wrong value length");return{v:a,l:e.subarray(n+i)}}},_int:{encode(r){let{Err:e}=Dt;if(r<Rt)throw new e("integer: negative integers are not allowed");let t=lr(r);if(Number.parseInt(t[0],16)&8&&(t="00"+t),t.length&1)throw new e("unexpected DER parsing assertion: unpadded hex");return t},decode(r){let{Err:e}=Dt;if(r[0]&128)throw new e("invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("invalid signature integer: unnecessary leading zero");return Ay(r)}},toSig(r){let{Err:e,_int:t,_tlv:n}=Dt,s=typeof r=="string"?Sy(r):r;rn(s);let{v:o,l:i}=n.decode(48,s);if(i.length)throw new e("invalid signature: left bytes after parsing");let{v:a,l:c}=n.decode(2,o),{v:l,l:u}=n.decode(2,c);if(u.length)throw new e("invalid signature: left bytes after parsing");return{r:t.decode(a),s:t.decode(l)}},hexFromSig(r){let{_tlv:e,_int:t}=Dt,n=e.encode(2,t.encode(r.r)),s=e.encode(2,t.encode(r.s)),o=n+s;return e.encode(48,o)}},Rt=BigInt(0),xe=BigInt(1),JE=BigInt(2),yh=BigInt(3),QE=BigInt(4);function _y(r){let e=Ey(r),{Fp:t}=e,n=jt(e.n,e.nBitLength),s=e.toBytes||((g,h,w)=>{let x=h.toAffine();return It(Uint8Array.from([4]),t.toBytes(x.x),t.toBytes(x.y))}),o=e.fromBytes||(g=>{let h=g.subarray(1),w=t.fromBytes(h.subarray(0,t.BYTES)),x=t.fromBytes(h.subarray(t.BYTES,2*t.BYTES));return{x:w,y:x}});function i(g){let{a:h,b:w}=e,x=t.sqr(g),y=t.mul(x,g);return t.add(t.add(y,t.mul(g,h)),w)}if(!t.eql(t.sqr(e.Gy),i(e.Gx)))throw new Error("bad generator point: equation left != right");function a(g){return zn(g,xe,e.n)}function c(g){let{allowedPrivateKeyLengths:h,nByteLength:w,wrapPrivateKey:x,n:y}=e;if(h&&typeof g!="bigint"){if(zt(g)&&(g=_t(g)),typeof g!="string"||!h.includes(g.length))throw new Error("invalid private key");g=g.padStart(w*2,"0")}let E;try{E=typeof g=="bigint"?g:Ct(oe("private key",g,w))}catch{throw new Error("invalid private key, expected hex or "+w+" bytes, got "+typeof g)}return x&&(E=Q(E,y)),Ke("private key",E,xe,y),E}function l(g){if(!(g instanceof d))throw new Error("ProjectivePoint expected")}let u=dr((g,h)=>{let{px:w,py:x,pz:y}=g;if(t.eql(y,t.ONE))return{x:w,y:x};let E=g.is0();h==null&&(h=E?t.ONE:t.inv(y));let _=t.mul(w,h),L=t.mul(x,h),I=t.mul(y,h);if(E)return{x:t.ZERO,y:t.ZERO};if(!t.eql(I,t.ONE))throw new Error("invZ was invalid");return{x:_,y:L}}),f=dr(g=>{if(g.is0()){if(e.allowInfinityPoint&&!t.is0(g.py))return;throw new Error("bad point: ZERO")}let{x:h,y:w}=g.toAffine();if(!t.isValid(h)||!t.isValid(w))throw new Error("bad point: x or y not FE");let x=t.sqr(w),y=i(h);if(!t.eql(x,y))throw new Error("bad point: equation left != right");if(!g.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class d{constructor(h,w,x){if(this.px=h,this.py=w,this.pz=x,h==null||!t.isValid(h))throw new Error("x required");if(w==null||!t.isValid(w))throw new Error("y required");if(x==null||!t.isValid(x))throw new Error("z required");Object.freeze(this)}static fromAffine(h){let{x:w,y:x}=h||{};if(!h||!t.isValid(w)||!t.isValid(x))throw new Error("invalid affine point");if(h instanceof d)throw new Error("projective point not allowed");let y=E=>t.eql(E,t.ZERO);return y(w)&&y(x)?d.ZERO:new d(w,x,t.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(h){let w=t.invertBatch(h.map(x=>x.pz));return h.map((x,y)=>x.toAffine(w[y])).map(d.fromAffine)}static fromHex(h){let w=d.fromAffine(o(oe("pointHex",h)));return w.assertValidity(),w}static fromPrivateKey(h){return d.BASE.multiply(c(h))}static msm(h,w){return ho(d,n,h,w)}_setWindowSize(h){p.setWindowSize(this,h)}assertValidity(){f(this)}hasEvenY(){let{y:h}=this.toAffine();if(t.isOdd)return!t.isOdd(h);throw new Error("Field doesn't support isOdd")}equals(h){l(h);let{px:w,py:x,pz:y}=this,{px:E,py:_,pz:L}=h,I=t.eql(t.mul(w,L),t.mul(E,y)),T=t.eql(t.mul(x,L),t.mul(_,y));return I&&T}negate(){return new d(this.px,t.neg(this.py),this.pz)}double(){let{a:h,b:w}=e,x=t.mul(w,yh),{px:y,py:E,pz:_}=this,L=t.ZERO,I=t.ZERO,T=t.ZERO,k=t.mul(y,y),re=t.mul(E,E),W=t.mul(_,_),V=t.mul(y,E);return V=t.add(V,V),T=t.mul(y,_),T=t.add(T,T),L=t.mul(h,T),I=t.mul(x,W),I=t.add(L,I),L=t.sub(re,I),I=t.add(re,I),I=t.mul(L,I),L=t.mul(V,L),T=t.mul(x,T),W=t.mul(h,W),V=t.sub(k,W),V=t.mul(h,V),V=t.add(V,T),T=t.add(k,k),k=t.add(T,k),k=t.add(k,W),k=t.mul(k,V),I=t.add(I,k),W=t.mul(E,_),W=t.add(W,W),k=t.mul(W,V),L=t.sub(L,k),T=t.mul(W,re),T=t.add(T,T),T=t.add(T,T),new d(L,I,T)}add(h){l(h);let{px:w,py:x,pz:y}=this,{px:E,py:_,pz:L}=h,I=t.ZERO,T=t.ZERO,k=t.ZERO,re=e.a,W=t.mul(e.b,yh),V=t.mul(w,E),he=t.mul(x,_),S=t.mul(y,L),P=t.add(w,x),v=t.add(E,_);P=t.mul(P,v),v=t.add(V,he),P=t.sub(P,v),v=t.add(w,y);let b=t.add(E,L);return v=t.mul(v,b),b=t.add(V,S),v=t.sub(v,b),b=t.add(x,y),I=t.add(_,L),b=t.mul(b,I),I=t.add(he,S),b=t.sub(b,I),k=t.mul(re,v),I=t.mul(W,S),k=t.add(I,k),I=t.sub(he,k),k=t.add(he,k),T=t.mul(I,k),he=t.add(V,V),he=t.add(he,V),S=t.mul(re,S),v=t.mul(W,v),he=t.add(he,S),S=t.sub(V,S),S=t.mul(re,S),v=t.add(v,S),V=t.mul(he,v),T=t.add(T,V),V=t.mul(b,v),I=t.mul(P,I),I=t.sub(I,V),V=t.mul(P,he),k=t.mul(b,k),k=t.add(k,V),new d(I,T,k)}subtract(h){return this.add(h.negate())}is0(){return this.equals(d.ZERO)}wNAF(h){return p.wNAFCached(this,h,d.normalizeZ)}multiplyUnsafe(h){let{endo:w,n:x}=e;Ke("scalar",h,Rt,x);let y=d.ZERO;if(h===Rt)return y;if(this.is0()||h===xe)return this;if(!w||p.hasPrecomputes(this))return p.wNAFCachedUnsafe(this,h,d.normalizeZ);let{k1neg:E,k1:_,k2neg:L,k2:I}=w.splitScalar(h),T=y,k=y,re=this;for(;_>Rt||I>Rt;)_&xe&&(T=T.add(re)),I&xe&&(k=k.add(re)),re=re.double(),_>>=xe,I>>=xe;return E&&(T=T.negate()),L&&(k=k.negate()),k=new d(t.mul(k.px,w.beta),k.py,k.pz),T.add(k)}multiply(h){let{endo:w,n:x}=e;Ke("scalar",h,xe,x);let y,E;if(w){let{k1neg:_,k1:L,k2neg:I,k2:T}=w.splitScalar(h),{p:k,f:re}=this.wNAF(L),{p:W,f:V}=this.wNAF(T);k=p.constTimeNegate(_,k),W=p.constTimeNegate(I,W),W=new d(t.mul(W.px,w.beta),W.py,W.pz),y=k.add(W),E=re.add(V)}else{let{p:_,f:L}=this.wNAF(h);y=_,E=L}return d.normalizeZ([y,E])[0]}multiplyAndAddUnsafe(h,w,x){let y=d.BASE,E=(L,I)=>I===Rt||I===xe||!L.equals(y)?L.multiplyUnsafe(I):L.multiply(I),_=E(this,w).add(E(h,x));return _.is0()?void 0:_}toAffine(h){return u(this,h)}isTorsionFree(){let{h,isTorsionFree:w}=e;if(h===xe)return!0;if(w)return w(d,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h,clearCofactor:w}=e;return h===xe?this:w?w(d,this):this.multiplyUnsafe(e.h)}toRawBytes(h=!0){return rt("isCompressed",h),this.assertValidity(),s(d,this,h)}toHex(h=!0){return rt("isCompressed",h),_t(this.toRawBytes(h))}}d.BASE=new d(e.Gx,e.Gy,t.ONE),d.ZERO=new d(t.ZERO,t.ONE,t.ZERO);let m=e.nBitLength,p=fo(d,e.endo?Math.ceil(m/2):m);return{CURVE:e,ProjectivePoint:d,normPrivateKeyToScalar:c,weierstrassEquation:i,isWithinCurveOrder:a}}function Cy(r){let e=Wn(r);return ut(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function wh(r){let e=Cy(r),{Fp:t,n}=e,s=t.BYTES+1,o=2*t.BYTES+1;function i(S){return Q(S,n)}function a(S){return lo(S,n)}let{ProjectivePoint:c,normPrivateKeyToScalar:l,weierstrassEquation:u,isWithinCurveOrder:f}=_y({...e,toBytes(S,P,v){let b=P.toAffine(),A=t.toBytes(b.x),B=It;return rt("isCompressed",v),v?B(Uint8Array.from([P.hasEvenY()?2:3]),A):B(Uint8Array.from([4]),A,t.toBytes(b.y))},fromBytes(S){let P=S.length,v=S[0],b=S.subarray(1);if(P===s&&(v===2||v===3)){let A=Ct(b);if(!zn(A,xe,t.ORDER))throw new Error("Point is not on curve");let B=u(A),R;try{R=t.sqrt(B)}catch(K){let O=K instanceof Error?": "+K.message:"";throw new Error("Point is not on curve"+O)}let M=(R&xe)===xe;return(v&1)===1!==M&&(R=t.neg(R)),{x:A,y:R}}else if(P===o&&v===4){let A=t.fromBytes(b.subarray(0,t.BYTES)),B=t.fromBytes(b.subarray(t.BYTES,2*t.BYTES));return{x:A,y:B}}else{let A=s,B=o;throw new Error("invalid Point, expected length of "+A+", or uncompressed "+B+", got "+P)}}}),d=S=>_t(Wt(S,e.nByteLength));function m(S){let P=n>>xe;return S>P}function p(S){return m(S)?i(-S):S}let g=(S,P,v)=>Ct(S.slice(P,v));class h{constructor(P,v,b){this.r=P,this.s=v,this.recovery=b,this.assertValidity()}static fromCompact(P){let v=e.nByteLength;return P=oe("compactSignature",P,v*2),new h(g(P,0,v),g(P,v,2*v))}static fromDER(P){let{r:v,s:b}=Dt.toSig(oe("DER",P));return new h(v,b)}assertValidity(){Ke("r",this.r,xe,n),Ke("s",this.s,xe,n)}addRecoveryBit(P){return new h(this.r,this.s,P)}recoverPublicKey(P){let{r:v,s:b,recovery:A}=this,B=L(oe("msgHash",P));if(A==null||![0,1,2,3].includes(A))throw new Error("recovery id invalid");let R=A===2||A===3?v+e.n:v;if(R>=t.ORDER)throw new Error("recovery id 2 or 3 invalid");let M=A&1?"03":"02",F=c.fromHex(M+d(R)),K=a(R),O=i(-B*K),J=i(b*K),te=c.BASE.multiplyAndAddUnsafe(F,O,J);if(!te)throw new Error("point at infinify");return te.assertValidity(),te}hasHighS(){return m(this.s)}normalizeS(){return this.hasHighS()?new h(this.r,i(-this.s),this.recovery):this}toDERRawBytes(){return ur(this.toDERHex())}toDERHex(){return Dt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return ur(this.toCompactHex())}toCompactHex(){return d(this.r)+d(this.s)}}let w={isValidPrivateKey(S){try{return l(S),!0}catch{return!1}},normPrivateKeyToScalar:l,randomPrivateKey:()=>{let S=Bc(e.n);return jf(e.randomBytes(S),e.n)},precompute(S=8,P=c.BASE){return P._setWindowSize(S),P.multiply(BigInt(3)),P}};function x(S,P=!0){return c.fromPrivateKey(S).toRawBytes(P)}function y(S){let P=zt(S),v=typeof S=="string",b=(P||v)&&S.length;return P?b===s||b===o:v?b===2*s||b===2*o:S instanceof c}function E(S,P,v=!0){if(y(S))throw new Error("first arg must be private key");if(!y(P))throw new Error("second arg must be public key");return c.fromHex(P).multiply(l(S)).toRawBytes(v)}let _=e.bits2int||function(S){if(S.length>8192)throw new Error("input is too large");let P=Ct(S),v=S.length*8-e.nBitLength;return v>0?P>>BigInt(v):P},L=e.bits2int_modN||function(S){return i(_(S))},I=Gn(e.nBitLength);function T(S){return Ke("num < 2^"+e.nBitLength,S,Rt,I),Wt(S,e.nByteLength)}function k(S,P,v=re){if(["recovered","canonical"].some(be=>be in v))throw new Error("sign() legacy options not supported");let{hash:b,randomBytes:A}=e,{lowS:B,prehash:R,extraEntropy:M}=v;B==null&&(B=!0),S=oe("msgHash",S),gh(v),R&&(S=oe("prehashed msgHash",b(S)));let F=L(S),K=l(P),O=[T(K),T(F)];if(M!=null&&M!==!1){let be=M===!0?A(t.BYTES):M;O.push(oe("extraEntropy",be))}let J=It(...O),te=F;function we(be){let ve=_(be);if(!f(ve))return;let _e=a(ve),He=c.BASE.multiply(ve).toAffine(),Ne=i(He.x);if(Ne===Rt)return;let lt=i(_e*i(te+Ne*K));if(lt===Rt)return;let yt=(He.x===Ne?0:2)|Number(He.y&xe),Mn=lt;return B&&m(lt)&&(Mn=p(lt),yt^=1),new h(Ne,Mn,yt)}return{seed:J,k2sig:we}}let re={lowS:e.lowS,prehash:!1},W={lowS:e.lowS,prehash:!1};function V(S,P,v=re){let{seed:b,k2sig:A}=k(S,P,v),B=e;return Sc(B.hash.outputLen,B.nByteLength,B.hmac)(b,A)}c.BASE._setWindowSize(8);function he(S,P,v,b=W){let A=S;P=oe("msgHash",P),v=oe("publicKey",v);let{lowS:B,prehash:R,format:M}=b;if(gh(b),"strict"in b)throw new Error("options.strict was renamed to lowS");if(M!==void 0&&M!=="compact"&&M!=="der")throw new Error("format must be compact or der");let F=typeof A=="string"||zt(A),K=!F&&!M&&typeof A=="object"&&A!==null&&typeof A.r=="bigint"&&typeof A.s=="bigint";if(!F&&!K)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let O,J;try{if(K&&(O=new h(A.r,A.s)),F){try{M!=="compact"&&(O=h.fromDER(A))}catch(yt){if(!(yt instanceof Dt.Err))throw yt}!O&&M!=="der"&&(O=h.fromCompact(A))}J=c.fromHex(v)}catch{return!1}if(!O||B&&O.hasHighS())return!1;R&&(P=e.hash(P));let{r:te,s:we}=O,be=L(P),ve=a(we),_e=i(be*ve),He=i(te*ve),Ne=c.BASE.multiplyAndAddUnsafe(J,_e,He)?.toAffine();return Ne?i(Ne.x)===te:!1}return{CURVE:e,getPublicKey:x,getSharedSecret:E,sign:V,verify:he,ProjectivePoint:c,Signature:h,utils:w}}function Iy(r){return{hash:r,hmac:(e,...t)=>Cl(r,e,yc(...t)),randomBytes:en}}function bh(r,e){let t=n=>wh({...r,...Iy(n)});return{...t(e),create:t}}var Eh=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),xh=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),By=BigInt(1),Bl=BigInt(2),vh=(r,e)=>(r+e/Bl)/e;function ky(r){let e=Eh,t=BigInt(3),n=BigInt(6),s=BigInt(11),o=BigInt(22),i=BigInt(23),a=BigInt(44),c=BigInt(88),l=r*r*r%e,u=l*l*r%e,f=se(u,t,e)*u%e,d=se(f,t,e)*u%e,m=se(d,Bl,e)*l%e,p=se(m,s,e)*m%e,g=se(p,o,e)*p%e,h=se(g,a,e)*g%e,w=se(h,c,e)*h%e,x=se(w,a,e)*g%e,y=se(x,t,e)*u%e,E=se(y,i,e)*p%e,_=se(E,n,e)*l%e,L=se(_,Bl,e);if(!kl.eql(kl.sqr(L),r))throw new Error("Cannot find square root");return L}var kl=jt(Eh,void 0,void 0,{sqrt:ky}),Xe=bh({a:BigInt(0),b:BigInt(7),Fp:kl,n:xh,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{let e=xh,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-By*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),s=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=t,i=BigInt("0x100000000000000000000000000000000"),a=vh(o*r,e),c=vh(-n*r,e),l=Q(r-a*t-c*s,e),u=Q(-a*n-c*o,e),f=l>i,d=u>i;if(f&&(l=e-l),d&&(u=e-u),l>i||u>i)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:f,k1:l,k2neg:d,k2:u}}}},on),c2=BigInt(0);var l2=Xe.ProjectivePoint;function Fe(r,e){e==null&&(e=r.reduce((s,o)=>s+o.length,0));let t=Ce(e),n=0;for(let s of r)t.set(s,n),n+=s.length;return t}function Tl(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}function Ah(r,e){let t=nn.digest(e instanceof Uint8Array?e:e.subarray());if(Tl(t))return t.then(({digest:n})=>Xe.sign(n,r).toDERRawBytes()).catch(n=>{throw new cs(String(n))});try{return Xe.sign(t.digest,r).toDERRawBytes()}catch(n){throw new cs(String(n))}}function Sh(r,e,t){let n=nn.digest(t instanceof Uint8Array?t:t.subarray());if(Tl(n))return n.then(({digest:s})=>Xe.verify(e,s,r)).catch(s=>{throw new ls(String(s))});try{return Xe.verify(e,n.digest,r)}catch(s){throw new ls(String(s))}}var ds=class{type="secp256k1";raw;_key;constructor(e){this._key=Ih(e),this.raw=_h(this._key)}toMultihash(){return At.digest(ft(this))}toCID(){return pe.createV1(114,this.toMultihash())}toString(){return X.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}verify(e,t){return Sh(this._key,t,e)}},mi=class{type="secp256k1";raw;publicKey;constructor(e,t){this.raw=Ch(e),this.publicKey=new ds(t??Bh(e))}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}sign(e){return Ah(this.raw,e)}};function Ll(r){return new ds(r)}async function kh(){let r=Ty();return new mi(r)}function _h(r){return Xe.ProjectivePoint.fromHex(r).toRawBytes(!0)}function Ch(r){try{return Xe.getPublicKey(r,!0),r}catch(e){throw new On(String(e))}}function Ih(r){try{return Xe.ProjectivePoint.fromHex(r),r}catch(e){throw new Kr(String(e))}}function Bh(r){try{return Xe.getPublicKey(r,!0)}catch(e){throw new On(String(e))}}function Ty(){return Xe.utils.randomPrivateKey()}async function Th(r,e){if(r==="Ed25519")return od();if(r==="secp256k1")return kh();if(r==="RSA")return _l(e??2048);throw new Ht}function pn(r){let{Type:e,Data:t}=dt.decode(r),n=t??new Uint8Array;switch(e){case ge.RSA:return Sl(n);case ge.Ed25519:return Rc(n);case ge.secp256k1:return Ll(n);default:throw new Ht}}function Lh(r){let{Type:e,Data:t}=dt.decode(r.digest),n=t??new Uint8Array;switch(e){case ge.Ed25519:return Rc(n);case ge.secp256k1:return Ll(n);default:throw new Ht}}function ft(r){return dt.encode({Type:ge[r.type],Data:r.raw})}var Ph=Symbol.for("nodejs.util.inspect.custom"),Ly=114,hs=class{type;multihash;publicKey;string;constructor(e){this.type=e.type,this.multihash=e.multihash,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[zs]=!0;toString(){return this.string==null&&(this.string=X.encode(this.multihash.bytes).slice(1)),this.string}toMultihash(){return this.multihash}toCID(){return pe.createV1(Ly,this.multihash)}toJSON(){return this.toString()}equals(e){if(e==null)return!1;if(e instanceof Uint8Array)return ce(this.multihash.bytes,e);if(typeof e=="string")return this.toString()===e;if(e?.toMultihash()?.bytes!=null)return ce(this.multihash.bytes,e.toMultihash().bytes);throw new Error("not valid Id")}[Ph](){return`PeerId(${this.toString()})`}},ps=class extends hs{type="RSA";publicKey;constructor(e){super({...e,type:"RSA"}),this.publicKey=e.publicKey}},ms=class extends hs{type="Ed25519";publicKey;constructor(e){super({...e,type:"Ed25519"}),this.publicKey=e.publicKey}},gs=class extends hs{type="secp256k1";publicKey;constructor(e){super({...e,type:"secp256k1"}),this.publicKey=e.publicKey}},Py=2336,ys=class{type="url";multihash;publicKey;url;constructor(e){this.url=e.toString(),this.multihash=At.digest(N(this.url))}[Ph](){return`PeerId(${this.url})`}[zs]=!0;toString(){return this.toCID().toString()}toMultihash(){return this.multihash}toCID(){return pe.createV1(Py,this.toMultihash())}toJSON(){return this.toString()}equals(e){return e==null?!1:(e instanceof Uint8Array&&(e=z(e)),e.toString()===this.toString())}};var Ny=114,Nh=2336;function gt(r,e){let t;if(r.charAt(0)==="1"||r.charAt(0)==="Q")t=et(X.decode(`z${r}`));else{if(e==null)throw new D('Please pass a multibase decoder for strings that do not start with "1" or "Q"');t=et(e.decode(r))}return mn(t)}function Pl(r){if(r.type==="Ed25519")return new ms({multihash:r.toCID().multihash,publicKey:r});if(r.type==="secp256k1")return new gs({multihash:r.toCID().multihash,publicKey:r});if(r.type==="RSA")return new ps({multihash:r.toCID().multihash,publicKey:r});throw new Ht}function Dh(r){return Pl(r.publicKey)}function mn(r){if(Ry(r))return new ps({multihash:r});if(Dy(r))try{let e=Lh(r);if(e.type==="Ed25519")return new ms({multihash:r,publicKey:e});if(e.type==="secp256k1")return new gs({multihash:r,publicKey:e})}catch{let t=z(r.digest);return new ys(new URL(t))}throw new Xs("Supplied PeerID Multihash is invalid")}function gi(r){if(r?.multihash==null||r.version==null||r.version===1&&r.code!==Ny&&r.code!==Nh)throw new Zs("Supplied PeerID CID is invalid");if(r.code===Nh){let e=z(r.multihash.digest);return new ys(new URL(e))}return mn(r.multihash)}function Dy(r){return r.code===At.code}function Ry(r){return r.code===nn.code}var fe=class extends Event{type;detail;constructor(e,t){super(e),this.type=e,this.detail=t}};var Dl=Hr(Mh(),1);var bs=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},Rl=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}},Oh=r=>globalThis.DOMException===void 0?new Rl(r):new DOMException(r),Uh=r=>{let e=r.reason===void 0?Oh("This operation was aborted."):r.reason;return e instanceof Error?e:Oh(e)};function xs(r,e){let{milliseconds:t,fallback:n,message:s,customTimers:o={setTimeout,clearTimeout}}=e,i,a,l=new Promise((u,f)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){let{signal:m}=e;m.aborted&&f(Uh(m)),a=()=>{f(Uh(m))},m.addEventListener("abort",a,{once:!0})}if(t===Number.POSITIVE_INFINITY){r.then(u,f);return}let d=new bs;i=o.setTimeout.call(void 0,()=>{if(n){try{u(n())}catch(m){f(m)}return}typeof r.cancel=="function"&&r.cancel(),s===!1?u():s instanceof Error?f(s):(d.message=s??`Promise timed out after ${t} milliseconds`,f(d))},t),(async()=>{try{u(await r)}catch(m){f(m)}})()}).finally(()=>{l.clear(),a&&e.signal&&e.signal.removeEventListener("abort",a)});return l.clear=()=>{o.clearTimeout.call(void 0,i),i=void 0},l}function Ml(r,e,t){let n=0,s=r.length;for(;s>0;){let o=Math.trunc(s/2),i=n+o;t(r[i],e)<=0?(n=++i,s-=o+1):s=o}return n}var vs=class{#e=[];enqueue(e,t){t={priority:0,...t};let n={priority:t.priority,id:t.id,run:e};if(this.size===0||this.#e[this.size-1].priority>=t.priority){this.#e.push(n);return}let s=Ml(this.#e,n,(o,i)=>i.priority-o.priority);this.#e.splice(s,0,n)}setPriority(e,t){let n=this.#e.findIndex(o=>o.id===e);if(n===-1)throw new ReferenceError(`No promise function with the id "${e}" exists in the queue.`);let[s]=this.#e.splice(n,1);this.enqueue(s.run,{priority:t,id:e})}dequeue(){return this.#e.shift()?.run}filter(e){return this.#e.filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return this.#e.length}};var tr=class extends Dl.default{#e;#t;#o=0;#a;#c;#p=0;#n;#l;#r;#m;#s=0;#u;#i;#g;#b=1n;timeout;constructor(e){if(super(),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:vs,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${e.intervalCap?.toString()??""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${e.interval?.toString()??""}\` (${typeof e.interval})`);this.#e=e.carryoverConcurrencyCount,this.#t=e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,this.#a=e.intervalCap,this.#c=e.interval,this.#r=new e.queueClass,this.#m=e.queueClass,this.concurrency=e.concurrency,this.timeout=e.timeout,this.#g=e.throwOnTimeout===!0,this.#i=e.autoStart===!1}get#x(){return this.#t||this.#o<this.#a}get#v(){return this.#s<this.#u}#E(){this.#s--,this.#f(),this.emit("next")}#A(){this.#w(),this.#y(),this.#l=void 0}get#S(){let e=Date.now();if(this.#n===void 0){let t=this.#p-e;if(t<0)this.#o=this.#e?this.#s:0;else return this.#l===void 0&&(this.#l=setTimeout(()=>{this.#A()},t)),!0}return!1}#f(){if(this.#r.size===0)return this.#n&&clearInterval(this.#n),this.#n=void 0,this.emit("empty"),this.#s===0&&this.emit("idle"),!1;if(!this.#i){let e=!this.#S;if(this.#x&&this.#v){let t=this.#r.dequeue();return t?(this.emit("active"),t(),e&&this.#y(),!0):!1}}return!1}#y(){this.#t||this.#n!==void 0||(this.#n=setInterval(()=>{this.#w()},this.#c),this.#p=Date.now()+this.#c)}#w(){this.#o===0&&this.#s===0&&this.#n&&(clearInterval(this.#n),this.#n=void 0),this.#o=this.#e?this.#s:0,this.#d()}#d(){for(;this.#f(););}get concurrency(){return this.#u}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);this.#u=e,this.#d()}async#_(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(e.reason)},{once:!0})})}setPriority(e,t){this.#r.setPriority(e,t)}async add(e,t={}){return t.id??=(this.#b++).toString(),t={timeout:this.timeout,throwOnTimeout:this.#g,...t},new Promise((n,s)=>{this.#r.enqueue(async()=>{this.#s++,this.#o++;try{t.signal?.throwIfAborted();let o=e({signal:t.signal});t.timeout&&(o=xs(Promise.resolve(o),{milliseconds:t.timeout})),t.signal&&(o=Promise.race([o,this.#_(t.signal)]));let i=await o;n(i),this.emit("completed",i)}catch(o){if(o instanceof bs&&!t.throwOnTimeout){n();return}s(o),this.emit("error",o)}finally{this.#E()}},t),this.emit("add"),this.#f()})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return this.#i?(this.#i=!1,this.#d(),this):this}pause(){this.#i=!0}clear(){this.#r=new this.#m}async onEmpty(){this.#r.size!==0&&await this.#h("empty")}async onSizeLessThan(e){this.#r.size<e||await this.#h("next",()=>this.#r.size<e)}async onIdle(){this.#s===0&&this.#r.size===0||await this.#h("idle")}async#h(e,t){return new Promise(n=>{let s=()=>{t&&!t()||(this.off(e,s),n())};this.on(e,s)})}get size(){return this.#r.size}sizeBy(e){return this.#r.filter(e).length}get pending(){return this.#s}get isPaused(){return this.#i}};function wi(r){let e=[je.A];return r==null?e:Array.isArray(r)?r.length===0?e:r:[r]}var Ol=60;function bi(r){return{Status:r.Status??0,TC:r.TC??r.flag_tc??!1,RD:r.RD??r.flag_rd??!1,RA:r.RA??r.flag_ra??!1,AD:r.AD??r.flag_ad??!1,CD:r.CD??r.flag_cd??!1,Question:(r.Question??r.questions??[]).map(e=>({name:e.name,type:je[e.type]})),Answer:(r.Answer??r.answers??[]).map(e=>({name:e.name,type:je[e.type],TTL:e.TTL??e.ttl??Ol,data:e.data instanceof Uint8Array?z(e.data):e.data}))}}var Uy=4;function Ul(r,e={}){let t=new tr({concurrency:e.queryConcurrency??Uy});return async(n,s={})=>{let o=new URLSearchParams;o.set("name",n),wi(s.types).forEach(a=>{o.append("type",je[a])}),s.onProgress?.(new fe("dns:query",{detail:n}));let i=await t.add(async()=>{let a=await fetch(`${r}?${o}`,{headers:{accept:"application/dns-json"},signal:s?.signal});if(a.status!==200)throw new Error(`Unexpected HTTP status: ${a.status} - ${a.statusText}`);let c=bi(await a.json());return s.onProgress?.(new fe("dns:response",{detail:c})),c},{signal:s.signal});if(i==null)throw new Error("No DNS response received");return i}}function Fh(){return[Ul("https://cloudflare-dns.com/dns-query"),Ul("https://dns.google/resolve")]}var Kh=Hr(Hh(),1);var Fl=class{lru;constructor(e){this.lru=(0,Kh.default)(e)}get(e,t){let n=!0,s=[];for(let o of t){let i=this.getAnswers(e,o);if(i.length===0){n=!1;break}s.push(...i)}if(n)return bi({answers:s})}getAnswers(e,t){let n=`${e.toLowerCase()}-${t}`,s=this.lru.get(n);if(s!=null){let o=s.filter(i=>i.expires>Date.now()).map(({expires:i,value:a})=>({...a,TTL:Math.round((i-Date.now())/1e3),type:je[a.type]}));return o.length===0&&this.lru.remove(n),o}return[]}add(e,t){let n=`${e.toLowerCase()}-${t.type}`,s=this.lru.get(n)??[];s.push({expires:Date.now()+(t.TTL??Ol)*1e3,value:t}),this.lru.set(n,s)}remove(e,t){let n=`${e.toLowerCase()}-${t}`;this.lru.remove(n)}clear(){this.lru.clear()}};function $h(r){return new Fl(r)}var Fy=1e3,xi=class{resolvers;cache;constructor(e){this.resolvers={},this.cache=$h(e.cacheSize??Fy),Object.entries(e.resolvers??{}).forEach(([t,n])=>{Array.isArray(n)||(n=[n]),t.endsWith(".")||(t=`${t}.`),this.resolvers[t]=n}),this.resolvers["."]==null&&(this.resolvers["."]=Fh())}async query(e,t={}){let n=wi(t.types),s=t.cached!==!1?this.cache.get(e,n):void 0;if(s!=null)return t.onProgress?.(new fe("dns:cache",{detail:s})),s;let o=`${e.split(".").pop()}.`,i=(this.resolvers[o]??this.resolvers["."]).sort(()=>Math.random()>.5?-1:1),a=[];for(let c of i){if(t.signal?.aborted===!0)break;try{let l=await c(e,{...t,types:n});for(let u of l.Answer)this.cache.add(e,u);return l}catch(l){a.push(l),t.onProgress?.(new fe("dns:error",{detail:l}))}}throw a.length===1?a[0]:new AggregateError(a,`DNS lookup of ${e} ${n} failed`)}};var je;(function(r){r[r.A=1]="A",r[r.CNAME=5]="CNAME",r[r.TXT=16]="TXT",r[r.AAAA=28]="AAAA"})(je||(je={}));function qh(r={}){return new xi(r)}var vi=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,n=e();return n===void 0&&(this.index=t),n}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,n){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,t,n,s){return this.readAtomically(()=>{let o=0,i=0,a=this.peekChar();if(a===void 0)return;let c=a==="0",l=2**(8*s)-1;for(;;){let u=this.readAtomically(()=>{let f=this.readChar();if(f===void 0)return;let d=Number.parseInt(f,e);if(!Number.isNaN(d))return d});if(u===void 0)break;if(o*=e,o+=u,o>l||(i+=1,t!==void 0&&i>t))return}if(i!==0)return!n&&c&&i>1?void 0:o})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let n=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[t]=n}return e})}readIPv6Addr(){let e=t=>{for(let n=0;n<t.length/2;n++){let s=n*2;if(n<t.length-3){let i=this.readSeparator(":",n,()=>this.readIPv4Addr());if(i!==void 0)return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],[s+4,!0]}let o=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(o===void 0)return[s,!1];t[s]=o>>8,t[s+1]=o&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[n,s]=e(t);if(n===16)return t;if(s||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let o=new Uint8Array(14),i=16-(n+2),[a]=e(o.subarray(0,i));return t.set(o.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var zh=45,Vy=15,gn=new vi;function Ei(r){if(!(r.length>Vy))return gn.new(r).parseWith(()=>gn.readIPv4Addr())}function Ai(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>zh))return gn.new(r).parseWith(()=>gn.readIPv6Addr())}function br(r,e=!1){if(r.includes("%")&&(r=r.split("%")[0]),r.length>zh)return;let t=gn.new(r).parseWith(()=>gn.readIPAddr());if(t)return e&&t.length===4?Uint8Array.from([0,0,0,0,0,0,0,0,0,0,255,255,t[0],t[1],t[2],t[3]]):t}function Gh(r,e,t){let n=0;for(let s of r)if(!(n<e)){if(n>t)break;if(s!==255)return!1;n++}return!0}function Wh(r,e,t,n){let s=0;for(let o of r)if(!(s<t)){if(s>n)break;if(o!==e[s])return!1;s++}return!0}function Vl(r){switch(r.length){case xr:return r.join(".");case vr:{let e=[];for(let t=0;t<r.length;t++)t%2===0&&e.push(r[t].toString(16).padStart(2,"0")+r[t+1].toString(16).padStart(2,"0"));return e.join(":")}default:throw new Error("Invalid ip length")}}function jh(r){let e=0;for(let[t,n]of r.entries()){if(n===255){e+=8;continue}for(;n&128;)e++,n=n<<1;if(n&128)return-1;for(let s=t+1;s<r.length;s++)if(r[s]!=0)return-1;break}return e}function Zh(r){let e="0x";for(let t of r)e+=(t>>4).toString(16)+(t&15).toString(16);return e}var xr=4,vr=16,ZA=parseInt("0xFFFF",16),Hy=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);function Es(r,e){e.length===vr&&r.length===xr&&Gh(e,0,11)&&(e=e.slice(12)),e.length===xr&&r.length===vr&&Wh(r,Hy,0,11)&&(r=r.slice(12));let t=r.length;if(t!=e.length)throw new Error("Failed to mask ip");let n=new Uint8Array(t);for(let s=0;s<t;s++)n[s]=r[s]&e[s];return n}function Xh(r,e){if(typeof e=="string"&&(e=br(e)),e==null)throw new Error("Invalid ip");if(e.length!==r.network.length)return!1;for(let t=0;t<e.length;t++)if((r.network[t]&r.mask[t])!==(e[t]&r.mask[t]))return!1;return!0}function Hl(r){let[e,t]=r.split("/");if(!e||!t)throw new Error("Failed to parse given CIDR: "+r);let n=xr,s=Ei(e);if(s==null&&(n=vr,s=Ai(e),s==null))throw new Error("Failed to parse given CIDR: "+r);let o=parseInt(t,10);if(Number.isNaN(o)||String(o).length!==t.length||o<0||o>n*8)throw new Error("Failed to parse given CIDR: "+r);let i=Kl(o,8*n);return{network:Es(s,i),mask:i}}function Kl(r,e){if(e!==8*xr&&e!==8*vr)throw new Error("Invalid CIDR mask");if(r<0||r>e)throw new Error("Invalid CIDR mask");let t=e/8,n=new Uint8Array(t);for(let s=0;s<t;s++){if(r>=8){n[s]=255,r-=8;continue}n[s]=255-(255>>r),r=0}return n}var yn=class{constructor(e,t){if(t==null)({network:this.network,mask:this.mask}=Hl(e));else{let n=br(e);if(n==null)throw new Error("Failed to parse network");t=String(t);let s=parseInt(t,10);if(Number.isNaN(s)||String(s).length!==t.length||s<0||s>n.length*8){let o=br(t);if(o==null)throw new Error("Failed to parse mask");this.mask=o}else this.mask=Kl(s,8*n.length);this.network=Es(n,this.mask)}}contains(e){return Xh({network:this.network,mask:this.mask},e)}toString(){let e=jh(this.mask),t=e!==-1?String(e):Zh(this.mask);return Vl(this.network)+"/"+t}};function at(r){return!!Ei(r)}function wn(r){return!!Ai(r)}function Si(r){return!!br(r)}var Yh=at,Ky=wn,$l=function(r){let e=0;if(r=r.toString().trim(),Yh(r)){let t=new Uint8Array(e+4);return r.split(/\./g).forEach(n=>{t[e++]=parseInt(n,10)&255}),t}if(Ky(r)){let t=r.split(":",8),n;for(n=0;n<t.length;n++){let o=Yh(t[n]),i;o&&(i=$l(t[n]),t[n]=z(i.slice(0,2),"base16")),i!=null&&++n<8&&t.splice(n,0,z(i.slice(2,4),"base16"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(n=0;n<t.length&&t[n]!=="";n++);let o=[n,1];for(n=9-t.length;n>0;n--)o.push("0");t.splice.apply(t,o)}let s=new Uint8Array(e+16);for(n=0;n<t.length;n++){let o=parseInt(t[n],16);s[e++]=o>>8&255,s[e++]=o&255}return s}throw new Error("invalid ip address")},Jh=function(r,e=0,t){e=~~e,t=t??r.length-e;let n=new DataView(r.buffer);if(t===4){let s=[];for(let o=0;o<t;o++)s.push(r[e+o]);return s.join(".")}if(t===16){let s=[];for(let o=0;o<t;o+=2)s.push(n.getUint16(e+o).toString(16));return s.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var bn={},ql={},qy=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];qy.forEach(r=>{let e=zy(...r);ql[e.code]=e,bn[e.name]=e});function zy(r,e,t,n,s){return{code:r,size:e,name:t,resolvable:!!n,path:!!s}}function G(r){if(typeof r=="number"){if(ql[r]!=null)return ql[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(bn[r]!=null)return bn[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var Gy=G("ip4"),Wy=G("ip6"),jy=G("ipcidr");function jl(r,e){switch(G(r).code){case 4:case 41:return Xy(e);case 42:return Wl(e);case 43:return z(e,"base10");case 6:case 273:case 33:case 132:return tp(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Wl(e);case 421:return ew(e);case 444:return ep(e);case 445:return ep(e);case 466:return Qy(e);case 481:return globalThis.encodeURIComponent(Wl(e));default:return z(e,"base16")}}function Zl(r,e){switch(G(r).code){case 4:return Qh(e);case 41:return Qh(e);case 42:return Gl(e);case 43:return N(e,"base10");case 6:case 273:case 33:case 132:return Yl(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Gl(e);case 421:return Yy(e);case 444:return tw(e);case 445:return rw(e);case 466:return Jy(e);case 481:return Gl(globalThis.decodeURIComponent(e));default:return N(e,"base16")}}function Xl(r){let e,t;if(r.stringTuples().forEach(([n,s])=>{(n===Gy.code||n===Wy.code)&&(t=s),n===jy.code&&(e=s)}),e==null||t==null)throw new Error("Invalid multiaddr");return new yn(t,e)}var zl=Object.values(Xn).map(r=>r.decoder),Zy=function(){let r=zl[0].or(zl[1]);return zl.slice(2).forEach(e=>r=r.or(e)),r}();function Qh(r){if(!Si(r))throw new Error("invalid ip address");return $l(r)}function Xy(r){let e=Jh(r,0,r.length);if(e==null)throw new Error("ipBuff is required");if(!Si(e))throw new Error("invalid ip address");return e}function Yl(r){let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function tp(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function Gl(r){let e=N(r),t=Uint8Array.from(Be(e.length));return Fe([t,e],t.length+e.length)}function Wl(r){let e=st(r);if(r=r.slice(de(e)),r.length!==e)throw new Error("inconsistent lengths");return z(r)}function Yy(r){let e;r[0]==="Q"||r[0]==="1"?e=et(X.decode(`z${r}`)).bytes:e=pe.parse(r).multihash.bytes;let t=Uint8Array.from(Be(e.length));return Fe([t,e],t.length+e.length)}function Jy(r){let e=Zy.decode(r),t=Uint8Array.from(Be(e.length));return Fe([t,e],t.length+e.length)}function Qy(r){let e=st(r),t=r.slice(de(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+z(t,"base64url")}function ew(r){let e=st(r),t=r.slice(de(e));if(t.length!==e)throw new Error("inconsistent lengths");return z(t,"base58btc")}function tw(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);let t=Ge.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let s=Yl(n);return Fe([t,s],t.length+s.length)}function rw(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);let t=Ge.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let s=Yl(n);return Fe([t,s],t.length+s.length)}function ep(r){let e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=z(e,"base32"),s=tp(t);return`${n}:${s}`}function rp(r){r=Jl(r);let e=[],t=[],n=null,s=r.split("/").slice(1);if(s.length===1&&s[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let o=0;o<s.length;o++){let i=s[o],a=G(i);if(a.size===0){e.push([a.code]),t.push([a.code]);continue}if(o++,o>=s.length)throw new _i("invalid address: "+r);if(a.path===!0){n=Jl(s.slice(o).join("/")),e.push([a.code,Zl(a.code,n)]),t.push([a.code,n]);break}let c=Zl(a.code,s[o]);e.push([a.code,c]),t.push([a.code,jl(a.code,c)])}return{string:np(t),bytes:Ci(e),tuples:e,stringTuples:t,path:n}}function Ql(r){let e=[],t=[],n=null,s=0;for(;s<r.length;){let o=st(r,s),i=de(o),a=G(o),c=nw(a,r.slice(s+i));if(c===0){e.push([o]),t.push([o]),s+=i;continue}let l=r.slice(s+i,s+i+c);if(s+=c+i,s>r.length)throw new _i("Invalid address Uint8Array: "+z(r,"base16"));e.push([o,l]);let u=jl(o,l);if(t.push([o,u]),a.path===!0){n=u;break}}return{bytes:Uint8Array.from(r),string:np(t),tuples:e,stringTuples:t,path:n}}function np(r){let e=[];return r.map(t=>{let n=G(t[0]);return e.push(n.name),t.length>1&&t[1]!=null&&e.push(t[1]),null}),Jl(e.join("/"))}function Ci(r){return Fe(r.map(e=>{let t=G(e[0]),n=Uint8Array.from(Be(t.code));return e.length>1&&e[1]!=null&&(n=Fe([n,e[1]])),n}))}function nw(r,e){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let t=st(e instanceof Uint8Array?e:Uint8Array.from(e));return t+de(t)}}function Jl(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}var _i=class extends Error{static name="ParseError";name="ParseError";constructor(e){super(`Error parsing address: ${e}`)}};var sw=Symbol.for("nodejs.util.inspect.custom"),tu=Symbol.for("@multiformats/js-multiaddr/multiaddr"),ow=[G("dns").code,G("dns4").code,G("dns6").code,G("dnsaddr").code],eu=class extends Error{constructor(e="No available resolver"){super(e),this.name="NoAvailableResolverError"}},Ii=class r{bytes;#e;#t;#o;#a;[tu]=!0;constructor(e){e==null&&(e="");let t;if(e instanceof Uint8Array)t=Ql(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);t=rp(e)}else if(rr(e))t=Ql(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=t.bytes,this.#e=t.string,this.#t=t.tuples,this.#o=t.stringTuples,this.#a=t.path}toString(){return this.#e}toJSON(){return this.toString()}toOptions(){let e,t,n,s,o="",i=G("tcp"),a=G("udp"),c=G("ip4"),l=G("ip6"),u=G("dns6"),f=G("ip6zone");for(let[m,p]of this.stringTuples())m===f.code&&(o=`%${p??""}`),ow.includes(m)&&(t=i.name==="tcp"?"tcp":"udp",s=443,n=`${p??""}${o}`,e=m===u.code?6:4),(m===i.code||m===a.code)&&(t=G(m).name==="tcp"?"tcp":"udp",s=parseInt(p??"")),(m===c.code||m===l.code)&&(t=G(m).name==="tcp"?"tcp":"udp",n=`${p??""}${o}`,e=m===l.code?6:4);if(e==null||t==null||n==null||s==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:t,port:s}}protos(){return this.#t.map(([e])=>Object.assign({},G(e)))}protoCodes(){return this.#t.map(([e])=>e)}protoNames(){return this.#t.map(([e])=>G(e).name)}tuples(){return this.#t.map(([e,t])=>t==null?[e]:[e,t])}stringTuples(){return this.#o.map(([e,t])=>t==null?[e]:[e,t])}encapsulate(e){return e=new r(e),new r(this.toString()+e.toString())}decapsulate(e){let t=e.toString(),n=this.toString(),s=n.lastIndexOf(t);if(s<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new r(n.slice(0,s))}decapsulateCode(e){let t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new r(Ci(t.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,s])=>{n===bn.p2p.code&&e.push([n,s]),n===bn["p2p-circuit"].code&&(e=[])});let t=e.pop();if(t?.[1]!=null){let n=t[1];return n[0]==="Q"||n[0]==="1"?z(X.decode(`z${n}`),"base58btc"):z(pe.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#a}equals(e){return ce(this.bytes,e.bytes)}async resolve(e){let t=this.protos().find(o=>o.resolvable);if(t==null)return[this];let n=xn.get(t.name);if(n==null)throw new eu(`no available resolver for ${t.name}`);return(await n(this,e)).map(o=>j(o))}nodeAddress(){let e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){let t=(e??this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}[sw](){return`Multiaddr(${this.#e})`}};var xn=new Map;function rr(r){return!!r?.[tu]}function j(r){return new Ii(r)}var iw=32,{code:aw}=G("dnsaddr"),ru=class extends Error{constructor(e="Max recursive depth reached"){super(e),this.name="RecursionLimitError"}},Er=async function(e,t={}){let n=t.maxRecursiveDepth??iw;if(n===0)throw new ru("Max recursive depth reached");let[,s]=e.stringTuples().find(([l])=>l===aw)??[],i=await(t?.dns??qh()).query(`_dnsaddr.${s}`,{signal:t?.signal,types:[je.TXT]}),a=e.getPeerId(),c=[];for(let l of i.Answer){let u=l.data.replace(/["']/g,"").trim().split("=")[1];if(u==null||a!=null&&!u.includes(a))continue;let f=j(u);if(u.startsWith("/dnsaddr")){let d=await f.resolve({...t,maxRecursiveDepth:n-1});c.push(...d.map(m=>m.toString()))}else c.push(f.toString())}return c};var dp=Hr(fp(),1),Ti=dp.default;var hw={addresses:{listen:[],announce:[],noAnnounce:[],announceFilter:r=>r},connectionManager:{resolvers:{dnsaddr:Er}},transportManager:{faultTolerance:Ft.FATAL_ALL}};async function hp(r){let e=Ti(hw,r);if(e.connectionProtector===null&&globalThis.process?.env?.LIBP2P_FORCE_PNET!=null)throw new D("Private network is enforced, but no protector was provided");return e}function pw(r,e){try{if(typeof r=="string"&&r.length>0)return mw(r);if(typeof r=="number"&&isFinite(r))return e?.long?yw(r):gw(r);throw new Error("Value is not a string or number.")}catch(t){let n=ww(t)?`${t.message}. value=${JSON.stringify(r)}`:"An unknown error has occured.";throw new Error(n)}}function mw(r){if(r=String(r),r.length>100)throw new Error("Value exceeds the maximum length of 100 characters.");let e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(r);if(!e)return NaN;let t=parseFloat(e[1]),n=(e[2]||"ms").toLowerCase();switch(n){case"years":case"year":case"yrs":case"yr":case"y":return t*315576e5;case"weeks":case"week":case"w":return t*6048e5;case"days":case"day":case"d":return t*864e5;case"hours":case"hour":case"hrs":case"hr":case"h":return t*36e5;case"minutes":case"minute":case"mins":case"min":case"m":return t*6e4;case"seconds":case"second":case"secs":case"sec":case"s":return t*1e3;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t;default:throw new Error(`The unit ${n} was matched, but no matching case exists.`)}}var Pi=pw;function gw(r){let e=Math.abs(r);return e>=864e5?`${Math.round(r/864e5)}d`:e>=36e5?`${Math.round(r/36e5)}h`:e>=6e4?`${Math.round(r/6e4)}m`:e>=1e3?`${Math.round(r/1e3)}s`:`${r}ms`}function yw(r){let e=Math.abs(r);return e>=864e5?Li(r,e,864e5,"day"):e>=36e5?Li(r,e,36e5,"hour"):e>=6e4?Li(r,e,6e4,"minute"):e>=1e3?Li(r,e,1e3,"second"):`${r} ms`}function Li(r,e,t,n){let s=e>=t*1.5;return`${Math.round(r/t)} ${n}${s?"s":""}`}function ww(r){return typeof r=="object"&&r!==null&&"message"in r}function su(r){t.debug=t,t.default=t,t.coerce=c,t.disable=o,t.enable=s,t.enabled=i,t.humanize=Pi,t.destroy=l,Object.keys(r).forEach(u=>{t[u]=r[u]}),t.names=[],t.skips=[],t.formatters={};function e(u){let f=0;for(let d=0;d<u.length;d++)f=(f<<5)-f+u.charCodeAt(d),f|=0;return t.colors[Math.abs(f)%t.colors.length]}t.selectColor=e;function t(u){let f,d=null,m,p;function g(...h){if(!g.enabled)return;let w=g,x=Number(new Date),y=x-(f||x);w.diff=y,w.prev=f,w.curr=x,f=x,h[0]=t.coerce(h[0]),typeof h[0]!="string"&&h.unshift("%O");let E=0;h[0]=h[0].replace(/%([a-zA-Z%])/g,(L,I)=>{if(L==="%%")return"%";E++;let T=t.formatters[I];if(typeof T=="function"){let k=h[E];L=T.call(w,k),h.splice(E,1),E--}return L}),t.formatArgs.call(w,h),(w.log||t.log).apply(w,h)}return g.namespace=u,g.useColors=t.useColors(),g.color=t.selectColor(u),g.extend=n,g.destroy=t.destroy,Object.defineProperty(g,"enabled",{enumerable:!0,configurable:!1,get:()=>d!==null?d:(m!==t.namespaces&&(m=t.namespaces,p=t.enabled(u)),p),set:h=>{d=h}}),typeof t.init=="function"&&t.init(g),g}function n(u,f){let d=t(this.namespace+(typeof f>"u"?":":f)+u);return d.log=this.log,d}function s(u){t.save(u),t.namespaces=u,t.names=[],t.skips=[];let f,d=(typeof u=="string"?u:"").split(/[\s,]+/),m=d.length;for(f=0;f<m;f++)d[f]&&(u=d[f].replace(/\*/g,".*?"),u[0]==="-"?t.skips.push(new RegExp("^"+u.substr(1)+"$")):t.names.push(new RegExp("^"+u+"$")))}function o(){let u=[...t.names.map(a),...t.skips.map(a).map(f=>"-"+f)].join(",");return t.enable(""),u}function i(u){if(u[u.length-1]==="*")return!0;let f,d;for(f=0,d=t.skips.length;f<d;f++)if(t.skips[f].test(u))return!1;for(f=0,d=t.names.length;f<d;f++)if(t.names[f].test(u))return!0;return!1}function a(u){return u.toString().substring(2,u.toString().length-2).replace(/\.\*\?$/,"*")}function c(u){return u instanceof Error?u.stack??u.message:u}function l(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return t.setupFormatters(t.formatters),t.enable(t.load()),t}var Ni=_w(),bw=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function xw(){return typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/(edge|trident)\/(\d+)/)!=null?!1:typeof document<"u"&&document.documentElement?.style?.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/firefox\/(\d+)/)!=null&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/applewebkit\/(\d+)/)}function vw(r){if(r[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+r[0]+(this.useColors?"%c ":" ")+"+"+Pi(this.diff),!this.useColors)return;let e="color: "+this.color;r.splice(1,0,e,"color: inherit");let t=0,n=0;r[0].replace(/%[a-zA-Z%]/g,s=>{s!=="%%"&&(t++,s==="%c"&&(n=t))}),r.splice(n,0,e)}var Ew=console.debug??console.log??(()=>{});function Aw(r){try{r?Ni?.setItem("debug",r):Ni?.removeItem("debug")}catch{}}function Sw(){let r;try{r=Ni?.getItem("debug")}catch{}return!r&&typeof globalThis.process<"u"&&"env"in globalThis.process&&(r=globalThis.process.env.DEBUG),r}function _w(){try{return localStorage}catch{}}function Cw(r){r.j=function(e){try{return JSON.stringify(e)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}}var pp=su({formatArgs:vw,save:Aw,load:Sw,useColors:xw,setupFormatters:Cw,colors:bw,storage:Ni,log:Ew});var ze=pp;ze.formatters.b=r=>r==null?"undefined":X.baseEncode(r);ze.formatters.t=r=>r==null?"undefined":Ge.baseEncode(r);ze.formatters.m=r=>r==null?"undefined":Yc.baseEncode(r);ze.formatters.p=r=>r==null?"undefined":r.toString();ze.formatters.c=r=>r==null?"undefined":r.toString();ze.formatters.k=r=>r==null?"undefined":r.toString();ze.formatters.a=r=>r==null?"undefined":r.toString();ze.formatters.e=r=>r==null?"undefined":mp(r.stack)??mp(r.message)??r.toString();function Iw(r){let e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=r,e.destroy=()=>!0,e.extend=()=>e,e}function Di(){return{forComponent(r){return Bw(r)}}}function Bw(r){let e=Iw(`${r}:trace`);return ze.enabled(`${r}:trace`)&&ze.names.map(t=>t.toString()).find(t=>t.includes(":trace"))!=null&&(e=ze(`${r}:trace`)),Object.assign(ze(r),{error:ze(`${r}:error`),trace:e})}function mp(r){if(r!=null&&(r=r.trim(),r.length!==0))return r}function Ar(r,e){let t={[Symbol.iterator]:()=>t,next:()=>{let n=r.next(),s=n.value;return n.done===!0||s==null?{done:!0,value:void 0}:{done:!1,value:e(s)}}};return t}function Ri(r){let e=et(X.decode(`z${r}`));return mn(e)}var Mt=class{map;constructor(e){if(this.map=new Map,e!=null)for(let[t,n]of e.entries())this.map.set(t.toString(),{key:t,value:n})}[Symbol.iterator](){return this.entries()}clear(){this.map.clear()}delete(e){return this.map.delete(e.toString())}entries(){return Ar(this.map.entries(),e=>[e[1].key,e[1].value])}forEach(e){this.map.forEach((t,n)=>{e(t.value,t.key,this)})}get(e){return this.map.get(e.toString())?.value}has(e){return this.map.has(e.toString())}set(e,t){this.map.set(e.toString(),{key:e,value:t})}keys(){return Ar(this.map.values(),e=>e.key)}values(){return Ar(this.map.values(),e=>e.value)}get size(){return this.map.size}};var Sr=class r{set;constructor(e){if(this.set=new Set,e!=null)for(let t of e)this.set.add(t.toString())}get size(){return this.set.size}[Symbol.iterator](){return this.values()}add(e){this.set.add(e.toString())}clear(){this.set.clear()}delete(e){this.set.delete(e.toString())}entries(){return Ar(this.set.entries(),e=>{let t=Ri(e[0]);return[t,t]})}forEach(e){this.set.forEach(t=>{let n=Ri(t);e(n,n,this)})}has(e){return this.set.has(e.toString())}values(){return Ar(this.set.values(),e=>Ri(e))}intersection(e){let t=new r;for(let n of e)this.has(n)&&t.add(n);return t}difference(e){let t=new r;for(let n of this)e.has(n)||t.add(n);return t}union(e){let t=new r;for(let n of e)t.add(n);for(let n of this)t.add(n);return t}};var yp=Symbol.for("@achingbrain/uint8arraylist");function gp(r,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let t=0;for(let n of r){let s=t+n.byteLength;if(e<s)return{buf:n,index:e-t};t=s}throw new RangeError("index is out of bounds")}function Mi(r){return!!r?.[yp]}var ye=class r{bufs;length;[yp]=!0;constructor(...e){this.bufs=[],this.length=0,e.length>0&&this.appendAll(e)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...e){this.appendAll(e)}appendAll(e){let t=0;for(let n of e)if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.push(n);else if(Mi(n))t+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}prepend(...e){this.prependAll(e)}prependAll(e){let t=0;for(let n of e.reverse())if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.unshift(n);else if(Mi(n))t+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}get(e){let t=gp(this.bufs,e);return t.buf[t.index]}set(e,t){let n=gp(this.bufs,e);n.buf[n.index]=t}write(e,t=0){if(e instanceof Uint8Array)for(let n=0;n<e.length;n++)this.set(t+n,e[n]);else if(Mi(e))for(let n=0;n<e.length;n++)this.set(t+n,e.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(e){if(e=Math.trunc(e),!(Number.isNaN(e)||e<=0)){if(e===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(e>=this.bufs[0].byteLength)e-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(e),this.length-=e;break}}}slice(e,t){let{bufs:n,length:s}=this._subList(e,t);return Fe(n,s)}subarray(e,t){let{bufs:n,length:s}=this._subList(e,t);return n.length===1?n[0]:Fe(n,s)}sublist(e,t){let{bufs:n,length:s}=this._subList(e,t),o=new r;return o.length=s,o.bufs=[...n],o}_subList(e,t){if(e=e??0,t=t??this.length,e<0&&(e=this.length+e),t<0&&(t=this.length+t),e<0||t>this.length)throw new RangeError("index is out of bounds");if(e===t)return{bufs:[],length:0};if(e===0&&t===this.length)return{bufs:this.bufs,length:this.length};let n=[],s=0;for(let o=0;o<this.bufs.length;o++){let i=this.bufs[o],a=s,c=a+i.byteLength;if(s=c,e>=c)continue;let l=e>=a&&e<c,u=t>a&&t<=c;if(l&&u){if(e===a&&t===c){n.push(i);break}let f=e-a;n.push(i.subarray(f,f+(t-e)));break}if(l){if(e===0){n.push(i);continue}n.push(i.subarray(e-a));continue}if(u){if(t===c){n.push(i);break}n.push(i.subarray(0,t-a));break}n.push(i)}return{bufs:n,length:t-e}}indexOf(e,t=0){if(!Mi(e)&&!(e instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let n=e instanceof Uint8Array?e:e.subarray();if(t=Number(t??0),isNaN(t)&&(t=0),t<0&&(t=this.length+t),t<0&&(t=0),e.length===0)return t>this.length?this.length:t;let s=n.byteLength;if(s===0)throw new TypeError("search must be at least 1 byte long");let o=256,i=new Int32Array(o);for(let f=0;f<o;f++)i[f]=-1;for(let f=0;f<s;f++)i[n[f]]=f;let a=i,c=this.byteLength-n.byteLength,l=n.byteLength-1,u;for(let f=t;f<=c;f+=u){u=0;for(let d=l;d>=0;d--){let m=this.get(f+d);if(n[d]!==m){u=Math.max(1,d-a[m]);break}}if(u===0)return f}return-1}getInt8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getInt8(0)}setInt8(e,t){let n=Ce(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,t),this.write(n,e)}getInt16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,t)}setInt16(e,t,n){let s=le(2);new DataView(s.buffer,s.byteOffset,s.byteLength).setInt16(0,t,n),this.write(s,e)}getInt32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,t)}setInt32(e,t,n){let s=le(4);new DataView(s.buffer,s.byteOffset,s.byteLength).setInt32(0,t,n),this.write(s,e)}getBigInt64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,t)}setBigInt64(e,t,n){let s=le(8);new DataView(s.buffer,s.byteOffset,s.byteLength).setBigInt64(0,t,n),this.write(s,e)}getUint8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getUint8(0)}setUint8(e,t){let n=Ce(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,t),this.write(n,e)}getUint16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,t)}setUint16(e,t,n){let s=le(2);new DataView(s.buffer,s.byteOffset,s.byteLength).setUint16(0,t,n),this.write(s,e)}getUint32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,t)}setUint32(e,t,n){let s=le(4);new DataView(s.buffer,s.byteOffset,s.byteLength).setUint32(0,t,n),this.write(s,e)}getBigUint64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,t)}setBigUint64(e,t,n){let s=le(8);new DataView(s.buffer,s.byteOffset,s.byteLength).setBigUint64(0,t,n),this.write(s,e)}getFloat32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,t)}setFloat32(e,t,n){let s=le(4);new DataView(s.buffer,s.byteOffset,s.byteLength).setFloat32(0,t,n),this.write(s,e)}getFloat64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,t)}setFloat64(e,t,n){let s=le(8);new DataView(s.buffer,s.byteOffset,s.byteLength).setFloat64(0,t,n),this.write(s,e)}equals(e){if(e==null||!(e instanceof r)||e.bufs.length!==this.bufs.length)return!1;for(let t=0;t<this.bufs.length;t++)if(!ce(this.bufs[t],e.bufs[t]))return!1;return!0}static fromUint8Arrays(e,t){let n=new r;return n.bufs=e,t==null&&(t=e.reduce((s,o)=>s+o.byteLength,0)),n.length=t,n}};var ou={32:16777619n,64:1099511628211n,128:309485009821345068724781371n,256:374144419156711147060143317175368453031918731002211n,512:35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852759n,1024:5016456510113118655434598811035278955030765345404790744303017523831112055108147451509157692220295382716162651878526895249385292291816524375083746691371804094271873160484737966720260389217684476157468082573n},wp={32:2166136261n,64:14695981039346656037n,128:144066263297769815596495629667062367629n,256:100029257958052580907070968620625704837092796014241193945225284501741471925557n,512:9659303129496669498009435400716310466090418745672637896108374329434462657994582932197716438449813051892206539805784495328239340083876191928701583869517785n,1024:14197795064947621068722070641403218320880622795441933960878474914617582723252296732303717722150864096521202355549365628174669108571814760471015076148029755969804077320157692458563003215304957150157403644460363550505412711285966361610267868082893823963790439336411086884584107735010676915n},bp=new globalThis.TextEncoder;function kw(r,e){let t=ou[e],n=wp[e];for(let s=0;s<r.length;s++)n^=BigInt(r[s]),n=BigInt.asUintN(e,n*t);return n}function Tw(r,e,t){if(t.length===0)throw new Error("The `utf8Buffer` option must have a length greater than zero");let n=ou[e],s=wp[e],o=r;for(;o.length>0;){let i=bp.encodeInto(o,t);o=o.slice(i.read);for(let a=0;a<i.written;a++)s^=BigInt(t[a]),s=BigInt.asUintN(e,s*n)}return s}function iu(r,{size:e=32,utf8Buffer:t}={}){if(!ou[e])throw new Error("The `size` option must be one of 32, 64, 128, 256, 512, or 1024");if(typeof r=="string"){if(t)return Tw(r,e,t);r=bp.encode(r)}return kw(r,e)}var As={hash:r=>Number(iu(r,{size:32})),hashV:(r,e)=>Lw(As.hash(r,e))};function Lw(r){let e=r.toString(16);return e.length%2===1&&(e=`0${e}`),N(e,"base16")}var au=64,ct=class{fp;h;seed;constructor(e,t,n,s=2){if(s>au)throw new TypeError("Invalid Fingerprint Size");let o=t.hashV(e,n),i=le(s);for(let a=0;a<i.length;a++)i[a]=o[a];i.length===0&&(i[0]=7),this.fp=i,this.h=t,this.seed=n}hash(){return this.h.hash(this.fp,this.seed)}equals(e){return e?.fp instanceof Uint8Array?ce(this.fp,e.fp):!1}};function _r(r,e){return Math.floor(Math.random()*(e-r))+r}var Cr=class{contents;constructor(e){this.contents=new Array(e).fill(null)}has(e){if(!(e instanceof ct))throw new TypeError("Invalid Fingerprint");return this.contents.some(t=>e.equals(t))}add(e){if(!(e instanceof ct))throw new TypeError("Invalid Fingerprint");for(let t=0;t<this.contents.length;t++)if(this.contents[t]==null)return this.contents[t]=e,!0;return!0}swap(e){if(!(e instanceof ct))throw new TypeError("Invalid Fingerprint");let t=_r(0,this.contents.length-1),n=this.contents[t];return this.contents[t]=e,n}remove(e){if(!(e instanceof ct))throw new TypeError("Invalid Fingerprint");let t=this.contents.findIndex(n=>e.equals(n));return t>-1?(this.contents[t]=null,!0):!1}};var Pw=500,Ss=class{bucketSize;filterSize;fingerprintSize;buckets;count;hash;seed;constructor(e){this.filterSize=e.filterSize,this.bucketSize=e.bucketSize??4,this.fingerprintSize=e.fingerprintSize??2,this.count=0,this.buckets=[],this.hash=e.hash??As,this.seed=e.seed??_r(0,Math.pow(2,10))}add(e){typeof e=="string"&&(e=N(e));let t=new ct(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,s=(n^t.hash())%this.filterSize;if(this.buckets[n]==null&&(this.buckets[n]=new Cr(this.bucketSize)),this.buckets[s]==null&&(this.buckets[s]=new Cr(this.bucketSize)),this.buckets[n].add(t)||this.buckets[s].add(t))return this.count++,!0;let o=[n,s],i=o[_r(0,o.length-1)];this.buckets[i]==null&&(this.buckets[i]=new Cr(this.bucketSize));for(let a=0;a<Pw;a++){let c=this.buckets[i].swap(t);if(c!=null&&(i=(i^c.hash())%this.filterSize,this.buckets[i]==null&&(this.buckets[i]=new Cr(this.bucketSize)),this.buckets[i].add(c)))return this.count++,!0}return!1}has(e){typeof e=="string"&&(e=N(e));let t=new ct(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,s=this.buckets[n]?.has(t)??!1;if(s)return s;let o=(n^t.hash())%this.filterSize;return this.buckets[o]?.has(t)??!1}remove(e){typeof e=="string"&&(e=N(e));let t=new ct(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,s=this.buckets[n]?.remove(t)??!1;if(s)return this.count--,s;let o=(n^t.hash())%this.filterSize,i=this.buckets[o]?.remove(t)??!1;return i&&this.count--,i}get reliable(){return Math.floor(100*(this.count/this.filterSize))<=90}},Nw={1:.5,2:.84,4:.95,8:.98};function Dw(r=.001){return r>.002?2:r>1e-5?4:8}function xp(r,e=.001){let t=Dw(e),n=Nw[t],s=Math.round(r/n),o=Math.min(Math.ceil(Math.log2(1/e)+Math.log2(2*t)),au);return{filterSize:s,bucketSize:t,fingerprintSize:o}}var Oi=class{filterSize;bucketSize;fingerprintSize;scale;filterSeries;hash;seed;constructor(e){this.bucketSize=e.bucketSize??4,this.filterSize=e.filterSize??(1<<18)/this.bucketSize,this.fingerprintSize=e.fingerprintSize??2,this.scale=e.scale??2,this.hash=e.hash??As,this.seed=e.seed??_r(0,Math.pow(2,10)),this.filterSeries=[new Ss({filterSize:this.filterSize,bucketSize:this.bucketSize,fingerprintSize:this.fingerprintSize,hash:this.hash,seed:this.seed})]}add(e){if(typeof e=="string"&&(e=N(e)),this.has(e))return!0;let t=this.filterSeries.find(n=>n.reliable);if(t==null){let n=this.filterSize*Math.pow(this.scale,this.filterSeries.length);t=new Ss({filterSize:n,bucketSize:this.bucketSize,fingerprintSize:this.fingerprintSize,hash:this.hash,seed:this.seed}),this.filterSeries.push(t)}return t.add(e)}has(e){typeof e=="string"&&(e=N(e));for(let t=0;t<this.filterSeries.length;t++)if(this.filterSeries[t].has(e))return!0;return!1}remove(e){typeof e=="string"&&(e=N(e));for(let t=0;t<this.filterSeries.length;t++)if(this.filterSeries[t].remove(e))return!0;return!1}get count(){return this.filterSeries.reduce((e,t)=>e+t.count,0)}};function _s(r,e=.001,t){return new Oi({...xp(r,e),...t??{}})}var Cs;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.publicKey!=null&&t.publicKey.byteLength>0&&(n.uint32(10),n.bytes(t.publicKey)),t.payloadType!=null&&t.payloadType.byteLength>0&&(n.uint32(18),n.bytes(t.payloadType)),t.payload!=null&&t.payload.byteLength>0&&(n.uint32(26),n.bytes(t.payload)),t.signature!=null&&t.signature.byteLength>0&&(n.uint32(42),n.bytes(t.signature)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={publicKey:le(0),payloadType:le(0),payload:le(0),signature:le(0)},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.publicKey=t.bytes();break}case 2:{o.payloadType=t.bytes();break}case 3:{o.payload=t.bytes();break}case 5:{o.signature=t.bytes();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(Cs||(Cs={}));var Ui=class extends Error{constructor(e="Invalid signature"){super(e),this.name="InvalidSignatureError"}};var An=class r{static createFromProtobuf=async e=>{let t=Cs.decode(e),n=pn(t.publicKey);return new r({publicKey:n,payloadType:t.payloadType,payload:t.payload,signature:t.signature})};static seal=async(e,t)=>{if(t==null)throw new Error("Missing private key");let n=e.domain,s=e.codec,o=e.marshal(),i=vp(n,s,o),a=await t.sign(i.subarray());return new r({publicKey:t.publicKey,payloadType:s,payload:o,signature:a})};static openAndCertify=async(e,t)=>{let n=await r.createFromProtobuf(e);if(!await n.validate(t))throw new Ui("Envelope signature is not valid for the given domain");return n};publicKey;payloadType;payload;signature;marshaled;constructor(e){let{publicKey:t,payloadType:n,payload:s,signature:o}=e;this.publicKey=t,this.payloadType=n,this.payload=s,this.signature=o}marshal(){return this.marshaled==null&&(this.marshaled=Cs.encode({publicKey:ft(this.publicKey),payloadType:this.payloadType,payload:this.payload.subarray(),signature:this.signature})),this.marshaled}equals(e){return ce(this.marshal(),e.marshal())}async validate(e){let t=vp(e,this.payloadType,this.payload);return this.publicKey.verify(t.subarray(),this.signature)}},vp=(r,e,t)=>{let n=N(r),s=Be(n.byteLength),o=Be(e.length),i=Be(t.length);return new ye(s,n,o,e,i,t)};function Ep(r,e){let t=(n,s)=>n.toString().localeCompare(s.toString());return r.length!==e.length?!1:(e.sort(t),r.sort(t).every((n,s)=>e[s].equals(n)))}var Ap="libp2p-peer-record",Sp=Uint8Array.from([3,1]);var Is;(function(r){let e;(function(n){let s;n.codec=()=>(s==null&&(s=Oe((o,i,a={})=>{a.lengthDelimited!==!1&&i.fork(),o.multiaddr!=null&&o.multiaddr.byteLength>0&&(i.uint32(10),i.bytes(o.multiaddr)),a.lengthDelimited!==!1&&i.ldelim()},(o,i,a={})=>{let c={multiaddr:le(0)},l=i==null?o.len:o.pos+i;for(;o.pos<l;){let u=o.uint32();switch(u>>>3){case 1:{c.multiaddr=o.bytes();break}default:{o.skipType(u&7);break}}}return c})),s),n.encode=o=>Me(o,n.codec()),n.decode=(o,i)=>Re(o,n.codec(),i)})(e=r.AddressInfo||(r.AddressInfo={}));let t;r.codec=()=>(t==null&&(t=Oe((n,s,o={})=>{if(o.lengthDelimited!==!1&&s.fork(),n.peerId!=null&&n.peerId.byteLength>0&&(s.uint32(10),s.bytes(n.peerId)),n.seq!=null&&n.seq!==0n&&(s.uint32(16),s.uint64(n.seq)),n.addresses!=null)for(let i of n.addresses)s.uint32(26),r.AddressInfo.codec().encode(i,s);o.lengthDelimited!==!1&&s.ldelim()},(n,s,o={})=>{let i={peerId:le(0),seq:0n,addresses:[]},a=s==null?n.len:n.pos+s;for(;n.pos<a;){let c=n.uint32();switch(c>>>3){case 1:{i.peerId=n.bytes();break}case 2:{i.seq=n.uint64();break}case 3:{if(o.limits?.addresses!=null&&i.addresses.length===o.limits.addresses)throw new yr('Decode error - map field "addresses" had too many elements');i.addresses.push(r.AddressInfo.codec().decode(n,n.uint32(),{limits:o.limits?.addresses$}));break}default:{n.skipType(c&7);break}}}return i})),t),r.encode=n=>Me(n,r.codec()),r.decode=(n,s)=>Re(n,r.codec(),s)})(Is||(Is={}));var Ir=class r{static createFromProtobuf=e=>{let t=Is.decode(e),n=mn(et(t.peerId)),s=(t.addresses??[]).map(i=>j(i.multiaddr)),o=t.seq;return new r({peerId:n,multiaddrs:s,seqNumber:o})};static DOMAIN=Ap;static CODEC=Sp;peerId;multiaddrs;seqNumber;domain=r.DOMAIN;codec=r.CODEC;marshaled;constructor(e){let{peerId:t,multiaddrs:n,seqNumber:s}=e;this.peerId=t,this.multiaddrs=n??[],this.seqNumber=s??BigInt(Date.now())}marshal(){return this.marshaled==null&&(this.marshaled=Is.encode({peerId:this.peerId.toMultihash().bytes,seq:BigInt(this.seqNumber),addresses:this.multiaddrs.map(e=>({multiaddr:e.bytes}))})),this.marshaled}equals(e){return!(!(e instanceof r)||!this.peerId.equals(e.peerId)||this.seqNumber!==e.seqNumber||!Ep(this.multiaddrs,e.multiaddrs))}};function Rw(r){return r[Symbol.asyncIterator]!=null}function Mw(r){if(Rw(r))return(async()=>{let t=[];for await(let n of r)t.push(n);return t})();let e=[];for(let t of r)e.push(t);return e}var Bs=Mw;var nr={},Sn=r=>{r.addEventListener("message",e=>{Sn.dispatchEvent("message",r,e)}),r.port!=null&&r.port.addEventListener("message",e=>{Sn.dispatchEvent("message",r,e)})};Sn.addEventListener=(r,e)=>{nr[r]==null&&(nr[r]=[]),nr[r].push(e)};Sn.removeEventListener=(r,e)=>{nr[r]!=null&&(nr[r]=nr[r].filter(t=>t===e))};Sn.dispatchEvent=function(r,e,t){nr[r]!=null&&nr[r].forEach(n=>n(e,t))};var cu=Sn;var lu="lock:worker:request-read",uu="lock:worker:release-read",fu="lock:master:grant-read",du="lock:worker:request-write",hu="lock:worker:release-write",pu="lock:master:grant-write";var _p=(r=21)=>Math.random().toString().substring(2);var Cp=(r,e,t,n,s)=>(o,i)=>{if(i.data.type!==t)return;let a={type:i.data.type,name:i.data.name,identifier:i.data.identifier};r.dispatchEvent(new MessageEvent(e,{data:{name:a.name,handler:async()=>{o.postMessage({type:s,name:a.name,identifier:a.identifier}),await new Promise(c=>{let l=u=>{if(u?.data==null)return;let f={type:u.data.type,name:u.data.name,identifier:u.data.identifier};f.type===n&&f.identifier===a.identifier&&(o.removeEventListener("message",l),c())};o.addEventListener("message",l)})}}}))},Ip=(r,e,t,n)=>async()=>{let s=_p();return globalThis.postMessage({type:e,identifier:s,name:r}),new Promise(o=>{let i=a=>{if(a?.data==null)return;let c={type:a.data.type,identifier:a.data.identifier};c.type===t&&c.identifier===s&&(globalThis.removeEventListener("message",i),o(()=>{globalThis.postMessage({type:n,identifier:s,name:r})}))};globalThis.addEventListener("message",i)})},Ow={singleProcess:!1},Bp=r=>{if(r=Object.assign({},Ow,r),!!globalThis.document||r.singleProcess){let t=new EventTarget;return cu.addEventListener("message",Cp(t,"requestReadLock",lu,uu,fu)),cu.addEventListener("message",Cp(t,"requestWriteLock",du,hu,pu)),t}return{isWorker:!0,readLock:t=>Ip(t,lu,fu,uu),writeLock:t=>Ip(t,du,pu,hu)}};var Br={},sr;async function mu(r,e){let t,n=new Promise(s=>{t=s});return r.add(async()=>xs((async()=>{await new Promise(s=>{t(()=>{s()})})})(),{milliseconds:e.timeout})),n}var Uw=(r,e)=>{if(sr.isWorker===!0)return{readLock:sr.readLock(r,e),writeLock:sr.writeLock(r,e)};let t=new tr({concurrency:1}),n;return{async readLock(){if(n!=null)return mu(n,e);n=new tr({concurrency:e.concurrency,autoStart:!1});let s=n,o=mu(n,e);return t.add(async()=>{s.start(),await s.onIdle().then(()=>{n===s&&(n=null)})}),o},async writeLock(){return n=null,mu(t,e)}}},Fw={name:"lock",concurrency:1/0,timeout:846e5,singleProcess:!1};function gu(r){let e=Object.assign({},Fw,r);return sr==null&&(sr=Bp(e),sr.isWorker!==!0&&(sr.addEventListener("requestReadLock",t=>{Br[t.data.name]!=null&&Br[t.data.name].readLock().then(async n=>t.data.handler().finally(()=>{n()}))}),sr.addEventListener("requestWriteLock",async t=>{Br[t.data.name]!=null&&Br[t.data.name].writeLock().then(async n=>t.data.handler().finally(()=>{n()}))}))),Br[e.name]==null&&(Br[e.name]=Uw(e.name,e)),Br[e.name]}var _n;(function(r){let e;(function(s){let o;s.codec=()=>(o==null&&(o=Oe((i,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),i.key!=null&&i.key!==""&&(a.uint32(10),a.string(i.key)),i.value!=null&&i.value.byteLength>0&&(a.uint32(18),a.bytes(i.value)),c.lengthDelimited!==!1&&a.ldelim()},(i,a,c={})=>{let l={key:"",value:le(0)},u=a==null?i.len:i.pos+a;for(;i.pos<u;){let f=i.uint32();switch(f>>>3){case 1:{l.key=i.string();break}case 2:{l.value=i.bytes();break}default:{i.skipType(f&7);break}}}return l})),o),s.encode=i=>Me(i,s.codec()),s.decode=(i,a)=>Re(i,s.codec(),a)})(e=r.Peer$metadataEntry||(r.Peer$metadataEntry={}));let t;(function(s){let o;s.codec=()=>(o==null&&(o=Oe((i,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),i.key!=null&&i.key!==""&&(a.uint32(10),a.string(i.key)),i.value!=null&&(a.uint32(18),Vi.codec().encode(i.value,a)),c.lengthDelimited!==!1&&a.ldelim()},(i,a,c={})=>{let l={key:""},u=a==null?i.len:i.pos+a;for(;i.pos<u;){let f=i.uint32();switch(f>>>3){case 1:{l.key=i.string();break}case 2:{l.value=Vi.codec().decode(i,i.uint32(),{limits:c.limits?.value});break}default:{i.skipType(f&7);break}}}return l})),o),s.encode=i=>Me(i,s.codec()),s.decode=(i,a)=>Re(i,s.codec(),a)})(t=r.Peer$tagsEntry||(r.Peer$tagsEntry={}));let n;r.codec=()=>(n==null&&(n=Oe((s,o,i={})=>{if(i.lengthDelimited!==!1&&o.fork(),s.addresses!=null)for(let a of s.addresses)o.uint32(10),Fi.codec().encode(a,o);if(s.protocols!=null)for(let a of s.protocols)o.uint32(18),o.string(a);if(s.publicKey!=null&&(o.uint32(34),o.bytes(s.publicKey)),s.peerRecordEnvelope!=null&&(o.uint32(42),o.bytes(s.peerRecordEnvelope)),s.metadata!=null&&s.metadata.size!==0)for(let[a,c]of s.metadata.entries())o.uint32(50),r.Peer$metadataEntry.codec().encode({key:a,value:c},o);if(s.tags!=null&&s.tags.size!==0)for(let[a,c]of s.tags.entries())o.uint32(58),r.Peer$tagsEntry.codec().encode({key:a,value:c},o);i.lengthDelimited!==!1&&o.ldelim()},(s,o,i={})=>{let a={addresses:[],protocols:[],metadata:new Map,tags:new Map},c=o==null?s.len:s.pos+o;for(;s.pos<c;){let l=s.uint32();switch(l>>>3){case 1:{if(i.limits?.addresses!=null&&a.addresses.length===i.limits.addresses)throw new yr('Decode error - map field "addresses" had too many elements');a.addresses.push(Fi.codec().decode(s,s.uint32(),{limits:i.limits?.addresses$}));break}case 2:{if(i.limits?.protocols!=null&&a.protocols.length===i.limits.protocols)throw new yr('Decode error - map field "protocols" had too many elements');a.protocols.push(s.string());break}case 4:{a.publicKey=s.bytes();break}case 5:{a.peerRecordEnvelope=s.bytes();break}case 6:{if(i.limits?.metadata!=null&&a.metadata.size===i.limits.metadata)throw new Qn('Decode error - map field "metadata" had too many elements');let u=r.Peer$metadataEntry.codec().decode(s,s.uint32());a.metadata.set(u.key,u.value);break}case 7:{if(i.limits?.tags!=null&&a.tags.size===i.limits.tags)throw new Qn('Decode error - map field "tags" had too many elements');let u=r.Peer$tagsEntry.codec().decode(s,s.uint32(),{limits:{value:i.limits?.tags$value}});a.tags.set(u.key,u.value);break}default:{s.skipType(l&7);break}}}return a})),n),r.encode=s=>Me(s,r.codec()),r.decode=(s,o)=>Re(s,r.codec(),o)})(_n||(_n={}));var Fi;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.multiaddr!=null&&t.multiaddr.byteLength>0&&(n.uint32(10),n.bytes(t.multiaddr)),t.isCertified!=null&&(n.uint32(16),n.bool(t.isCertified)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={multiaddr:le(0)},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.multiaddr=t.bytes();break}case 2:{o.isCertified=t.bool();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(Fi||(Fi={}));var Vi;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.value!=null&&t.value!==0&&(n.uint32(8),n.uint32(t.value)),t.expiry!=null&&(n.uint32(16),n.uint64(t.expiry)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={value:0},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.value=t.uint32();break}case 2:{o.expiry=t.uint64();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(Vi||(Vi={}));function Cn(r,e){let t=_n.decode(e);if(t.publicKey!=null&&r.publicKey==null){let o=pn(t.publicKey);r=Pl(o)}let n=new Map,s=BigInt(Date.now());for(let[o,i]of t.tags.entries())i.expiry!=null&&i.expiry<s||n.set(o,i);return{...t,id:r,addresses:t.addresses.map(({multiaddr:o,isCertified:i})=>({multiaddr:j(o),isCertified:i??!1})),metadata:t.metadata,peerRecordEnvelope:t.peerRecordEnvelope??void 0,tags:n}}var Ot="/",kp=new TextEncoder().encode(Ot),Hi=kp[0],kr=class r{_buf;constructor(e,t){if(typeof e=="string")this._buf=N(e);else if(e instanceof Uint8Array)this._buf=e;else throw new Error("Invalid key, should be String of Uint8Array");if(t==null&&(t=!0),t&&this.clean(),this._buf.byteLength===0||this._buf[0]!==Hi)throw new Error("Invalid key")}toString(e="utf8"){return z(this._buf,e)}uint8Array(){return this._buf}get[Symbol.toStringTag](){return`Key(${this.toString()})`}static withNamespaces(e){return new r(e.join(Ot))}static random(){return new r(Math.random().toString().substring(2))}static asKey(e){return e instanceof Uint8Array||typeof e=="string"?new r(e):typeof e.uint8Array=="function"?new r(e.uint8Array()):null}clean(){if((this._buf==null||this._buf.byteLength===0)&&(this._buf=kp),this._buf[0]!==Hi){let e=new Uint8Array(this._buf.byteLength+1);e.fill(Hi,0,1),e.set(this._buf,1),this._buf=e}for(;this._buf.byteLength>1&&this._buf[this._buf.byteLength-1]===Hi;)this._buf=this._buf.subarray(0,-1)}less(e){let t=this.list(),n=e.list();for(let s=0;s<t.length;s++){if(n.length<s+1)return!1;let o=t[s],i=n[s];if(o<i)return!0;if(o>i)return!1}return t.length<n.length}reverse(){return r.withNamespaces(this.list().slice().reverse())}namespaces(){return this.list()}baseNamespace(){let e=this.namespaces();return e[e.length-1]}list(){return this.toString().split(Ot).slice(1)}type(){return Vw(this.baseNamespace())}name(){return Hw(this.baseNamespace())}instance(e){return new r(this.toString()+":"+e)}path(){let e=this.parent().toString();return e.endsWith(Ot)||(e+=Ot),e+=this.type(),new r(e)}parent(){let e=this.list();return e.length===1?new r(Ot):new r(e.slice(0,-1).join(Ot))}child(e){return this.toString()===Ot?e:e.toString()===Ot?this:new r(this.toString()+e.toString(),!1)}isAncestorOf(e){return e.toString()===this.toString()?!1:e.toString().startsWith(this.toString())}isDecendantOf(e){return e.toString()===this.toString()?!1:this.toString().startsWith(e.toString())}isTopLevel(){return this.list().length===1}concat(...e){return r.withNamespaces([...this.namespaces(),...Kw(e.map(t=>t.namespaces()))])}};function Vw(r){let e=r.split(":");return e.length<2?"":e.slice(0,-1).join(":")}function Hw(r){let e=r.split(":");return e[e.length-1]}function Kw(r){return[].concat(...r)}var yu="/peers/";function In(r){if(!Gs(r)||r.type==null)throw new D("Invalid PeerId");let e=r.toCID().toString();return new kr(`${yu}${e}`)}async function Tp(r,e,t){let n=new Map;for(let s of t){if(s==null)continue;if(s.multiaddr instanceof Uint8Array&&(s.multiaddr=j(s.multiaddr)),!rr(s.multiaddr))throw new D("Multiaddr was invalid");if(!await e(r,s.multiaddr))continue;let o=s.isCertified??!1,i=s.multiaddr.toString(),a=n.get(i);a!=null?s.isCertified=a.isCertified||o:n.set(i,{multiaddr:s.multiaddr,isCertified:o})}return[...n.values()].sort((s,o)=>s.multiaddr.toString().localeCompare(o.multiaddr.toString())).map(({isCertified:s,multiaddr:o})=>({isCertified:s,multiaddr:o.bytes}))}async function $i(r,e,t,n){if(e==null)throw new D("Invalid PeerData");if(e.publicKey!=null&&r.publicKey!=null&&!e.publicKey.equals(r.publicKey))throw new D("publicKey bytes do not match peer id publicKey bytes");let s=n.existingPeer;if(s!=null&&!r.equals(s.id))throw new D("peer id did not match existing peer id");let o=s?.addresses??[],i=new Set(s?.protocols??[]),a=s?.metadata??new Map,c=s?.tags??new Map,l=s?.peerRecordEnvelope;if(t==="patch"){if((e.multiaddrs!=null||e.addresses!=null)&&(o=[],e.multiaddrs!=null&&o.push(...e.multiaddrs.map(d=>({isCertified:!1,multiaddr:d}))),e.addresses!=null&&o.push(...e.addresses)),e.protocols!=null&&(i=new Set(e.protocols)),e.metadata!=null){let d=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);a=Ki(d,{validate:Lp})}if(e.tags!=null){let d=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags);c=Ki(d,{validate:Pp,map:Np})}e.peerRecordEnvelope!=null&&(l=e.peerRecordEnvelope)}if(t==="merge"){if(e.multiaddrs!=null&&o.push(...e.multiaddrs.map(d=>({isCertified:!1,multiaddr:d}))),e.addresses!=null&&o.push(...e.addresses),e.protocols!=null&&(i=new Set([...i,...e.protocols])),e.metadata!=null){let d=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);for(let[m,p]of d)p==null?a.delete(m):a.set(m,p);a=Ki([...a.entries()],{validate:Lp})}if(e.tags!=null){let d=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags),m=new Map(c);for(let[p,g]of d)g==null?m.delete(p):m.set(p,g);c=Ki([...m.entries()],{validate:Pp,map:Np})}e.peerRecordEnvelope!=null&&(l=e.peerRecordEnvelope)}let u;s?.id.publicKey!=null?u=ft(s.id.publicKey):e.publicKey!=null?u=ft(e.publicKey):r.publicKey!=null&&(u=ft(r.publicKey));let f={addresses:await Tp(r,n.addressFilter??(async()=>!0),o),protocols:[...i.values()].sort((d,m)=>d.localeCompare(m)),metadata:a,tags:c,publicKey:u,peerRecordEnvelope:l};return r.type!=="RSA"&&delete f.publicKey,f}function Ki(r,e){let t=new Map;for(let[n,s]of r)s!=null&&e.validate(n,s);for(let[n,s]of r.sort(([o],[i])=>o.localeCompare(i)))s!=null&&t.set(n,e.map?.(n,s)??s);return t}function Lp(r,e){if(typeof r!="string")throw new D("Metadata key must be a string");if(!(e instanceof Uint8Array))throw new D("Metadata value must be a Uint8Array")}function Pp(r,e){if(typeof r!="string")throw new D("Tag name must be a string");if(e.value!=null){if(parseInt(`${e.value}`,10)!==e.value)throw new D("Tag value must be an integer");if(e.value<0||e.value>100)throw new D("Tag value must be between 0-100")}if(e.ttl!=null){if(parseInt(`${e.ttl}`,10)!==e.ttl)throw new D("Tag ttl must be an integer");if(e.ttl<0)throw new D("Tag ttl must be between greater than 0")}}function Np(r,e){let t;return e.expiry!=null&&(t=e.expiry),e.ttl!=null&&(t=BigInt(Date.now()+Number(e.ttl))),{value:e.value??0,expiry:t}}function qi(r,e){let t=r.toString().split("/")[2],n=pe.parse(t,Ge),s=gi(n);return Cn(s,e)}function $w(r){return r==null?{}:{prefix:yu,filters:(r.filters??[]).map(e=>({key:t,value:n})=>e(qi(t,n))),orders:(r.orders??[]).map(e=>(t,n)=>e(qi(t.key,t.value),qi(n.key,n.value)))}}var zi=class{peerId;datastore;lock;addressFilter;log;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-store"),this.peerId=e.peerId,this.datastore=e.datastore,this.addressFilter=t.addressFilter,this.lock=gu({name:"peer-store",singleProcess:!0})}async has(e){return this.datastore.has(In(e))}async delete(e){if(this.peerId.equals(e))throw new D("Cannot delete self peer");await this.datastore.delete(In(e))}async load(e){let t=await this.datastore.get(In(e));return Cn(e,t)}async save(e,t){let{existingBuf:n,existingPeer:s}=await this.#e(e),o=await $i(e,t,"patch",{addressFilter:this.addressFilter});return this.#t(e,o,n,s)}async patch(e,t){let{existingBuf:n,existingPeer:s}=await this.#e(e),o=await $i(e,t,"patch",{addressFilter:this.addressFilter,existingPeer:s});return this.#t(e,o,n,s)}async merge(e,t){let{existingBuf:n,existingPeer:s}=await this.#e(e),o=await $i(e,t,"merge",{addressFilter:this.addressFilter,existingPeer:s});return this.#t(e,o,n,s)}async*all(e){for await(let{key:t,value:n}of this.datastore.query($w(e??{}))){let s=qi(t,n);s.id.equals(this.peerId)||(yield s)}}async#e(e){try{let t=await this.datastore.get(In(e)),n=Cn(e,t);return{existingBuf:t,existingPeer:n}}catch(t){t.name!=="NotFoundError"&&this.log.error("invalid peer data found in peer store - %e",t)}return{}}async#t(e,t,n,s){let o=_n.encode(t);return n!=null&&ce(o,n)?{peer:Cn(e,o),previous:s,updated:!1}:(await this.datastore.put(In(e),o),{peer:Cn(e,o),previous:s,updated:!0})}};var wu=class{store;events;peerId;log;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-store"),this.events=e.events,this.peerId=e.peerId,this.store=new zi(e,t)}[Symbol.toStringTag]="@libp2p/peer-store";async forEach(e,t){this.log.trace("forEach await read lock");let n=await this.store.lock.readLock();this.log.trace("forEach got read lock");try{for await(let s of this.store.all(t))e(s)}finally{this.log.trace("forEach release read lock"),n()}}async all(e){this.log.trace("all await read lock");let t=await this.store.lock.readLock();this.log.trace("all got read lock");try{return await Bs(this.store.all(e))}finally{this.log.trace("all release read lock"),t()}}async delete(e){this.log.trace("delete await write lock");let t=await this.store.lock.writeLock();this.log.trace("delete got write lock");try{await this.store.delete(e)}finally{this.log.trace("delete release write lock"),t()}}async has(e){this.log.trace("has await read lock");let t=await this.store.lock.readLock();this.log.trace("has got read lock");try{return await this.store.has(e)}finally{this.log.trace("has release read lock"),t()}}async get(e){this.log.trace("get await read lock");let t=await this.store.lock.readLock();this.log.trace("get got read lock");try{return await this.store.load(e)}finally{this.log.trace("get release read lock"),t()}}async save(e,t){this.log.trace("save await write lock");let n=await this.store.lock.writeLock();this.log.trace("save got write lock");try{let s=await this.store.save(e,t);return this.#e(e,s),s.peer}finally{this.log.trace("save release write lock"),n()}}async patch(e,t){this.log.trace("patch await write lock");let n=await this.store.lock.writeLock();this.log.trace("patch got write lock");try{let s=await this.store.patch(e,t);return this.#e(e,s),s.peer}finally{this.log.trace("patch release write lock"),n()}}async merge(e,t){this.log.trace("merge await write lock");let n=await this.store.lock.writeLock();this.log.trace("merge got write lock");try{let s=await this.store.merge(e,t);return this.#e(e,s),s.peer}finally{this.log.trace("merge release write lock"),n()}}async consumePeerRecord(e,t){let n=await An.openAndCertify(e,Ir.DOMAIN),s=gi(n.publicKey.toCID());if(t?.equals(s)===!1)return this.log("envelope peer id was not the expected peer id - expected: %p received: %p",t,s),!1;let o=Ir.createFromProtobuf(n.payload),i;try{i=await this.get(s)}catch(a){if(a.name!=="NotFoundError")throw a}if(i?.peerRecordEnvelope!=null){let a=await An.createFromProtobuf(i.peerRecordEnvelope),c=Ir.createFromProtobuf(a.payload);if(c.seqNumber>=o.seqNumber)return this.log("sequence number was lower or equal to existing sequence number - stored: %d received: %d",c.seqNumber,o.seqNumber),!1}return await this.patch(o.peerId,{peerRecordEnvelope:e,addresses:o.multiaddrs.map(a=>({isCertified:!0,multiaddr:a}))}),!0}#e(e,t){t.updated&&(this.peerId.equals(e)?this.events.safeDispatchEvent("self:peer:update",{detail:t}):this.events.safeDispatchEvent("peer:update",{detail:t}))}};function Dp(r,e={}){return new wu(r,e)}var Gi=class r extends Error{static name="NotFoundError";static code="ERR_NOT_FOUND";name=r.name;code=r.code;constructor(e="Not Found"){super(e)}};function qw(r){return r[Symbol.asyncIterator]!=null}function zw(r){if(qw(r))return(async()=>{for await(let e of r);})();for(let e of r);}var bu=zw;function Gw(r){let[e,t]=r[Symbol.asyncIterator]!=null?[r[Symbol.asyncIterator](),Symbol.asyncIterator]:[r[Symbol.iterator](),Symbol.iterator],n=[];return{peek:()=>e.next(),push:s=>{n.push(s)},next:()=>n.length>0?{done:!1,value:n.shift()}:e.next(),[t](){return this}}}var Rp=Gw;function Ww(r){return r[Symbol.asyncIterator]!=null}function jw(r,e){let t=0;if(Ww(r))return async function*(){for await(let c of r)await e(c,t++)&&(yield c)}();let n=Rp(r),{value:s,done:o}=n.next();if(o===!0)return function*(){}();let i=e(s,t++);if(typeof i.then=="function")return async function*(){await i&&(yield s);for await(let c of n)await e(c,t++)&&(yield c)}();let a=e;return function*(){i===!0&&(yield s);for(let c of n)a(c,t++)&&(yield c)}()}var Tr=jw;function Zw(r){return r[Symbol.asyncIterator]!=null}function Xw(r,e){return Zw(r)?async function*(){yield*(await Bs(r)).sort(e)}():function*(){yield*Bs(r).sort(e)}()}var xu=Xw;function Yw(r){return r[Symbol.asyncIterator]!=null}function Jw(r,e){return Yw(r)?async function*(){let t=0;if(!(e<1)){for await(let n of r)if(yield n,t++,t===e)return}}():function*(){let t=0;if(!(e<1)){for(let n of r)if(yield n,t++,t===e)return}}()}var vu=Jw;var Wi=class{put(e,t,n){return Promise.reject(new Error(".put is not implemented"))}get(e,t){return Promise.reject(new Error(".get is not implemented"))}has(e,t){return Promise.reject(new Error(".has is not implemented"))}delete(e,t){return Promise.reject(new Error(".delete is not implemented"))}async*putMany(e,t={}){for await(let{key:n,value:s}of e)await this.put(n,s,t),yield n}async*getMany(e,t={}){for await(let n of e)yield{key:n,value:await this.get(n,t)}}async*deleteMany(e,t={}){for await(let n of e)await this.delete(n,t),yield n}batch(){let e=[],t=[];return{put(n,s){e.push({key:n,value:s})},delete(n){t.push(n)},commit:async n=>{await bu(this.putMany(e,n)),e=[],await bu(this.deleteMany(t,n)),t=[]}}}async*_all(e,t){throw new Error("._all is not implemented")}async*_allKeys(e,t){throw new Error("._allKeys is not implemented")}query(e,t){let n=this._all(e,t);if(e.prefix!=null){let s=e.prefix;n=Tr(n,o=>o.key.toString().startsWith(s))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((s,o)=>Tr(s,o),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((s,o)=>xu(s,o),n)),e.offset!=null){let s=0,o=e.offset;n=Tr(n,()=>s++>=o)}return e.limit!=null&&(n=vu(n,e.limit)),n}queryKeys(e,t){let n=this._allKeys(e,t);if(e.prefix!=null){let s=e.prefix;n=Tr(n,o=>o.toString().startsWith(s))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((s,o)=>Tr(s,o),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((s,o)=>xu(s,o),n)),e.offset!=null){let s=e.offset,o=0;n=Tr(n,()=>o++>=s)}return e.limit!=null&&(n=vu(n,e.limit)),n}};var ji=class extends Wi{data;constructor(){super(),this.data=new Map}put(e,t){return this.data.set(e.toString(),t),e}get(e){let t=this.data.get(e.toString());if(t==null)throw new Gi;return t}has(e){return this.data.has(e.toString())}delete(e){this.data.delete(e.toString())}*_all(){for(let[e,t]of this.data.entries())yield{key:new kr(e),value:t}}*_allKeys(){for(let e of this.data.keys())yield new kr(e)}};function Mp(r,e){let t,n=function(){let s=function(){t=void 0,r()};clearTimeout(t),t=setTimeout(s,e)};return n.start=()=>{},n.stop=()=>{clearTimeout(t)},n}var Up=Hr(Op(),1),Qw=["0.0.0.0/8","10.0.0.0/8","100.64.0.0/10","127.0.0.0/8","169.254.0.0/16","172.16.0.0/12","192.0.0.0/24","192.0.0.0/29","192.0.0.8/32","192.0.0.9/32","192.0.0.10/32","192.0.0.170/32","192.0.0.171/32","192.0.2.0/24","192.31.196.0/24","192.52.193.0/24","192.88.99.0/24","192.168.0.0/16","192.175.48.0/24","198.18.0.0/15","198.51.100.0/24","203.0.113.0/24","240.0.0.0/4","255.255.255.255/32"],eb=Qw.map(r=>new Up.Netmask(r));function Eu(r){for(let e of eb)if(e.contains(r))return!0;return!1}function tb(r){return/^::ffff:([0-9a-fA-F]{1,4}):([0-9a-fA-F]{1,4})$/.test(r)}function rb(r){let e=r.split(":");if(e.length<2)return!1;let t=e[e.length-1].padStart(4,"0"),n=e[e.length-2].padStart(4,"0"),s=`${parseInt(n.substring(0,2),16)}.${parseInt(n.substring(2),16)}.${parseInt(t.substring(0,2),16)}.${parseInt(t.substring(2),16)}`;return Eu(s)}function nb(r){return/^::ffff:([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)}function sb(r){let e=r.split(":"),t=e[e.length-1];return Eu(t)}function ob(r){return/^::$/.test(r)||/^::1$/.test(r)||/^64:ff9b::([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)||/^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^f[c-d]([0-9a-fA-F]{2,2}):/i.test(r)||/^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(r)||/^ff([0-9a-fA-F]{2,2}):/i.test(r)}function or(r){return at(r)?Eu(r):tb(r)?rb(r):nb(r)?sb(r):wn(r)?ob(r):void 0}var ib=r=>r.toString().split("/").slice(1),Bn=r=>({match:e=>e.length<1?!1:r(e[0])?e.slice(1):!1,pattern:"fn"}),$=r=>({match:e=>Bn(t=>t===r).match(e),pattern:r}),Lr=()=>({match:r=>Bn(e=>typeof e=="string").match(r),pattern:"{string}"}),Ts=()=>({match:r=>Bn(e=>!isNaN(parseInt(e))).match(r),pattern:"{number}"}),ee=()=>({match:r=>{if(r.length<2||r[0]!=="p2p"&&r[0]!=="ipfs")return!1;if(r[1].startsWith("Q")||r[1].startsWith("1"))try{X.decode(`z${r[1]}`)}catch{return!1}else return!1;return r.slice(2)},pattern:"/p2p/{peerid}"}),Ls=()=>({match:r=>{if(r.length<2||r[0]!=="certhash")return!1;try{Jc.decode(r[1])}catch{return!1}return r.slice(2)},pattern:"/certhash/{certhash}"}),Z=r=>({match:e=>{let t=r.match(e);return t===!1?e:t},pattern:`optional(${r.pattern})`}),Pe=(...r)=>({match:e=>{let t;for(let n of r){let s=n.match(e);s!==!1&&(t==null||s.length<t.length)&&(t=s)}return t??!1},pattern:`or(${r.map(e=>e.pattern).join(", ")})`}),q=(...r)=>({match:e=>{for(let t of r){let n=t.match(e);if(n===!1)return!1;e=n}return e},pattern:`and(${r.map(e=>e.pattern).join(", ")})`});function ie(...r){function e(s){let o=ib(s);for(let i of r){let a=i.match(o);if(a===!1)return!1;o=a}return o}function t(s){return e(s)!==!1}function n(s){let o=e(s);return o===!1?!1:o.length===0}return{matchers:r,matches:t,exactMatch:n}}var Xi=q($("dns4"),Lr()),Yi=q($("dns6"),Lr()),Ji=q($("dnsaddr"),Lr()),Su=q($("dns"),Lr()),iI=ie(Xi,Z(ee())),aI=ie(Yi,Z(ee())),cI=ie(Ji,Z(ee())),lI=ie(Pe(Su,Ji,Xi,Yi),Z(ee())),Fp=q($("ip4"),Bn(at)),Vp=q($("ip6"),Bn(wn)),_u=Pe(Fp,Vp),Ut=Pe(_u,Su,Xi,Yi,Ji),uI=ie(Pe(_u,q(Pe(Su,Ji,Xi,Yi),Z(ee())))),fI=ie(Fp),dI=ie(Vp),hI=ie(_u),Cu=q(Ut,$("tcp"),Ts()),Ps=q(Ut,$("udp"),Ts()),Ns=ie(q(Cu,Z(ee()))),pI=ie(Ps),Iu=q(Ps,$("quic"),Z(ee())),Qi=q(Ps,$("quic-v1"),Z(ee())),ab=Pe(Iu,Qi),mI=ie(Iu),Hp=ie(Qi),Au=Pe(Ut,Cu,Ps,Iu,Qi),Kp=Pe(q(Au,$("ws"),Z(ee()))),Pr=ie(Kp),$p=Pe(q(Au,$("wss"),Z(ee())),q(Au,$("tls"),Z(q($("sni"),Lr())),$("ws"),Z(ee()))),Ds=ie($p),qp=q(Ps,$("webrtc-direct"),Z(Ls()),Z(Ls()),Z(ee())),Bu=ie(qp),zp=q(Qi,$("webtransport"),Z(Ls()),Z(Ls()),Z(ee())),ku=ie(zp),Zi=Pe(Kp,$p,q(Cu,Z(ee())),q(ab,Z(ee())),q(Ut,Z(ee())),qp,zp,ee()),gI=ie(Zi),cb=q(Zi,$("p2p-circuit"),ee()),Rs=ie(cb),lb=Pe(q(Zi,$("p2p-circuit"),$("webrtc"),Z(ee())),q(Zi,$("webrtc"),Z(ee())),q($("webrtc"),Z(ee()))),Tu=ie(lb),ub=Pe(q(Ut,$("tcp"),Ts(),$("http"),Z(ee())),q(Ut,$("http"),Z(ee()))),yI=ie(ub),fb=Pe(q(Ut,$("tcp"),Pe(q($("443"),$("http")),q(Ts(),$("https"))),Z(ee())),q(Ut,$("tls"),$("http"),Z(ee())),q(Ut,$("https"),Z(ee()))),wI=ie(fb),db=Pe(q($("memory"),Lr(),Z(ee()))),bI=ie(db);var Gp=864e13;var hb=448,Lu=449,pb=53,mb=54,gb=55,yb=56,ea=class{log;mappings;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:address-manager:dns-mappings"),this.mappings=new Map}has(e){let t=this.findHost(e);for(let n of this.mappings.values())if(n.domain===t)return!0;return!1}add(e,t){t.forEach(n=>{this.log("add DNS mapping %s to %s",n,e);let s=or(n)===!0;this.mappings.set(n,{domain:e,verified:s,expires:s?Gp-Date.now():0,lastVerified:s?Gp-Date.now():void 0})})}remove(e){let t=this.findHost(e),n=!1;for(let[s,o]of this.mappings.entries())o.domain===t&&(this.log("removing %s to %s DNS mapping %e",s,o.domain,new Error("where")),this.mappings.delete(s),n=n||o.verified);return n}getAll(e){let t=[];for(let n=0;n<e.length;n++){let o=e[n].multiaddr.stringTuples(),i=o[0][1];if(i!=null)for(let[a,c]of this.mappings.entries()){if(i!==a)continue;this.maybeAddSNITuple(o,c.domain)&&(e.splice(n,1),n--,t.push({multiaddr:j(`/${o.map(u=>[G(u[0]).name,u[1]].join("/")).join("/")}`),verified:c.verified,type:"dns-mapping",expires:c.expires,lastVerified:c.lastVerified}))}}return t}maybeAddSNITuple(e,t){for(let n=0;n<e.length;n++)if(e[n][0]===hb&&e[n+1]?.[0]!==Lu)return e.splice(n+1,0,[Lu,t]),!0;return!1}confirm(e,t){let n=this.findHost(e),s=!1;for(let[o,i]of this.mappings.entries())i.domain===n&&(this.log("marking %s to %s DNS mapping as verified",o,i.domain),s=i.verified,i.verified=!0,i.expires=Date.now()+t,i.lastVerified=Date.now());return s}unconfirm(e,t){let n=this.findHost(e),s=!1;for(let[o,i]of this.mappings.entries())i.domain===n&&(this.log("removing verification of %s to %s DNS mapping",o,i.domain),s=s||i.verified,i.verified=!1,i.expires=Date.now()+t);return s}findHost(e){for(let t of e.stringTuples())if(t[0]===Lu||t[0]===pb||t[0]===mb||t[0]===gb||t[0]===yb)return t[1]}};var Pu=4,Nu=41,Du=6,wb=273,ta=class{log;mappings;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:address-manager:ip-mappings"),this.mappings=new Map}has(e){let t=e.stringTuples();for(let n of this.mappings.values())for(let s of n)if(s.externalIp===t[0][1])return!0;return!1}add(e,t,n,s=t,o="tcp"){let i=`${e}-${t}-${o}`,a=this.mappings.get(i)??[],c={internalIp:e,internalPort:t,externalIp:n,externalPort:s,externalFamily:at(n)?4:6,protocol:o,verified:!1,expires:0};a.push(c),this.mappings.set(i,a)}remove(e){let t=e.stringTuples(),n=t[0][1]??"",s=t[1][0]===Du?"tcp":"udp",o=parseInt(t[1][1]??"0"),i=!1;for(let[a,c]of this.mappings.entries()){for(let l=0;l<c.length;l++){let u=c[l];u.externalIp===n&&u.externalPort===o&&u.protocol===s&&(this.log("removing %s:%s to %s:%s %s IP mapping",u.externalIp,u.externalPort,n,o,s),i=i||u.verified,c.splice(l,1),l--)}c.length===0&&this.mappings.delete(a)}return i}getAll(e){let t=[];for(let{multiaddr:n}of e){let s=n.stringTuples(),o;if((s[0][0]===Pu||s[0][0]===Nu)&&s[1][0]===Du?o=`${s[0][1]}-${s[1][1]}-tcp`:(s[0][0]===Pu||s[0][0]===Nu)&&s[1][0]===wb&&(o=`${s[0][1]}-${s[1][1]}-udp`),o==null)continue;let i=this.mappings.get(o);if(i!=null)for(let a of i)s[0][0]=a.externalFamily===4?Pu:Nu,s[0][1]=a.externalIp,s[1][1]=`${a.externalPort}`,t.push({multiaddr:j(`/${s.map(c=>[G(c[0]).name,c[1]].join("/")).join("/")}`),verified:a.verified,type:"ip-mapping",expires:a.expires,lastVerified:a.lastVerified})}return t}confirm(e,t){let s=e.stringTuples()[0][1],o=!1;for(let i of this.mappings.values())for(let a of i)a.externalIp===s&&(this.log("marking %s to %s IP mapping as verified",a.internalIp,a.externalIp),o=a.verified,a.verified=!0,a.expires=Date.now()+t,a.lastVerified=Date.now());return o}unconfirm(e,t){let n=e.stringTuples(),s=n[0][1]??"",o=n[1][0]===Du?"tcp":"udp",i=parseInt(n[1][1]??"0"),a=!1;for(let c of this.mappings.values())for(let l=0;l<c.length;l++){let u=c[l];u.externalIp===s&&u.externalPort===i&&u.protocol===o&&(this.log("removing verification of %s:%s to %s:%s %s IP mapping",u.externalIp,u.externalPort,s,i,o),a=a||u.verified,u.verified=!1,u.expires=Date.now()+t)}return a}};function Wp(r){try{let[[e,t]]=r.stringTuples();if(t==null)return!1;if(e===4)return t.startsWith("169.254.");if(e===41)return t.toLowerCase().startsWith("fe80")}catch{}return!1}function ra(r){try{let[[e]]=r.stringTuples();return e===4||e===41}catch{}return!1}function Nr(r){try{if(!ra(r))return!1;let[[,e]]=r.stringTuples();return e==null?!1:or(e)??!1}catch{}return!0}var bb={maxObservedAddresses:10},na=class{log;addresses;maxObservedAddresses;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:address-manager:observed-addresses"),this.addresses=new Map,this.maxObservedAddresses=t.maxObservedAddresses??bb.maxObservedAddresses}has(e){return this.addresses.has(e.toString())}removePrefixed(e){for(let t of this.addresses.keys())t.toString().startsWith(e)&&this.addresses.delete(t)}add(e){this.addresses.size!==this.maxObservedAddresses&&(Nr(e)||Wp(e)||(this.log("adding observed address %a",e),this.addresses.set(e.toString(),{verified:!1,expires:0})))}getAll(){return Array.from(this.addresses).map(([e,t])=>({multiaddr:j(e),verified:t.verified,type:"observed",expires:t.expires,lastVerified:t.lastVerified}))}remove(e){let t=this.addresses.get(e.toString())?.verified??!1;return this.log("removing observed address %a",e),this.addresses.delete(e.toString()),t}confirm(e,t){let n=e.toString(),s=this.addresses.get(n)??{verified:!1,expires:Date.now()+t,lastVerified:Date.now()},o=s.verified;return s.verified=!0,s.expires=Date.now()+t,s.lastVerified=Date.now(),this.log("marking observed address %a as verified",n),this.addresses.set(n,s),o}};var xb=[4,41,53,54,55,56];function Ru(r){try{let[[e]]=r.stringTuples();return xb.includes(e)}catch{}return!1}var vb={maxObservedAddresses:10},sa=class{log;addresses;maxObservedAddresses;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:address-manager:observed-addresses"),this.addresses=new Map,this.maxObservedAddresses=t.maxObservedAddresses??vb.maxObservedAddresses}get(e,t){if(Nr(e))return{multiaddr:e,verified:!0,type:"transport",expires:Date.now()+t,lastVerified:Date.now()};let n=this.toKey(e),s=this.addresses.get(n);return s==null&&(s={verified:!Ru(e),expires:0},this.addresses.set(n,s)),{multiaddr:e,verified:s.verified,type:"transport",expires:s.expires,lastVerified:s.lastVerified}}has(e){let t=this.toKey(e);return this.addresses.has(t)}remove(e){let t=this.toKey(e),n=this.addresses.get(t)?.verified??!1;return this.log("removing observed address %a",e),this.addresses.delete(t),n}confirm(e,t){let n=this.toKey(e),s=this.addresses.get(n)??{verified:!1,expires:0,lastVerified:0},o=s.verified;return s.verified=!0,s.expires=Date.now()+t,s.lastVerified=Date.now(),this.addresses.set(n,s),o}unconfirm(e,t){let n=this.toKey(e),s=this.addresses.get(n)??{verified:!1,expires:0},o=s.verified;return s.verified=!1,s.expires=Date.now()+t,this.addresses.set(n,s),o}toKey(e){if(Ru(e)){let t=e.toOptions();return`${t.host}-${t.port}-${t.transport}`}return e.toString()}};var jp=6e4,Zp={maxObservedAddresses:10,addressVerificationTTL:jp*10,addressVerificationRetry:jp*5},Eb=r=>r;function Mu(r,e){let t=r.getPeerId();return t!=null&&gt(t).equals(e)&&(r=r.decapsulate(j(`/p2p/${e.toString()}`))),r}var oa=class{log;components;listen;announce;appendAnnounce;announceFilter;observed;dnsMappings;ipMappings;transportAddresses;observedAddressFilter;addressVerificationTTL;addressVerificationRetry;constructor(e,t={}){let{listen:n=[],announce:s=[],appendAnnounce:o=[]}=t;this.components=e,this.log=e.logger.forComponent("libp2p:address-manager"),this.listen=n.map(i=>i.toString()),this.announce=new Set(s.map(i=>i.toString())),this.appendAnnounce=new Set(o.map(i=>i.toString())),this.observed=new na(e,t),this.dnsMappings=new ea(e,t),this.ipMappings=new ta(e,t),this.transportAddresses=new sa(e,t),this.announceFilter=t.announceFilter??Eb,this.observedAddressFilter=_s(1024),this.addressVerificationTTL=t.addressVerificationTTL??Zp.addressVerificationTTL,this.addressVerificationRetry=t.addressVerificationRetry??Zp.addressVerificationRetry,this._updatePeerStoreAddresses=Mp(this._updatePeerStoreAddresses.bind(this),1e3),e.events.addEventListener("transport:listening",()=>{this._updatePeerStoreAddresses()}),e.events.addEventListener("transport:close",()=>{this._updatePeerStoreAddresses()})}[Symbol.toStringTag]="@libp2p/address-manager";_updatePeerStoreAddresses(){let e=this.getAddresses().map(t=>t.getPeerId()===this.components.peerId.toString()?t.decapsulate(`/p2p/${this.components.peerId.toString()}`):t);this.components.peerStore.patch(this.components.peerId,{multiaddrs:e}).catch(t=>{this.log.error("error updating addresses",t)})}getListenAddrs(){return Array.from(this.listen).map(e=>j(e))}getAnnounceAddrs(){return Array.from(this.announce).map(e=>j(e))}getAppendAnnounceAddrs(){return Array.from(this.appendAnnounce).map(e=>j(e))}getObservedAddrs(){return this.observed.getAll().map(e=>e.multiaddr)}addObservedAddr(e){let t=e.stringTuples(),n=`${t[0][1]}:${t[1][1]}`;this.observedAddressFilter.has(n)||(this.observedAddressFilter.add(n),e=Mu(e,this.components.peerId),!this.ipMappings.has(e)&&(this.dnsMappings.has(e)||this.observed.add(e)))}confirmObservedAddr(e,t){e=Mu(e,this.components.peerId);let n=!0;(t?.type==="transport"||this.transportAddresses.has(e))&&!this.transportAddresses.confirm(e,t?.ttl??this.addressVerificationTTL)&&n&&(n=!1),(t?.type==="dns-mapping"||this.dnsMappings.has(e))&&!this.dnsMappings.confirm(e,t?.ttl??this.addressVerificationTTL)&&n&&(n=!1),(t?.type==="ip-mapping"||this.ipMappings.has(e))&&!this.ipMappings.confirm(e,t?.ttl??this.addressVerificationTTL)&&n&&(n=!1),(t?.type==="observed"||this.observed.has(e))&&(this.maybeUpgradeToIPMapping(e)?(this.ipMappings.confirm(e,t?.ttl??this.addressVerificationTTL),n=!1):!this.observed.confirm(e,t?.ttl??this.addressVerificationTTL)&&n&&(n=!1)),n||this._updatePeerStoreAddresses()}removeObservedAddr(e,t){e=Mu(e,this.components.peerId);let n=!1;this.observed.has(e)&&!this.observed.remove(e)&&n&&(n=!1),this.transportAddresses.has(e)&&!this.transportAddresses.unconfirm(e,t?.ttl??this.addressVerificationRetry)&&n&&(n=!1),this.dnsMappings.has(e)&&!this.dnsMappings.unconfirm(e,t?.ttl??this.addressVerificationRetry)&&n&&(n=!1),this.ipMappings.has(e)&&!this.ipMappings.unconfirm(e,t?.ttl??this.addressVerificationRetry)&&n&&(n=!1),n&&this._updatePeerStoreAddresses()}getAddresses(){let e=new Set,t=this.getAddressesWithMetadata().filter(n=>{if(!n.verified)return!1;let s=n.multiaddr.toString();return e.has(s)?!1:(e.add(s),!0)}).map(n=>n.multiaddr);return this.announceFilter(t.map(n=>{let s=j(n);return s.protos().pop()?.path===!0||s.getPeerId()===this.components.peerId.toString()?s:s.encapsulate(`/p2p/${this.components.peerId.toString()}`)}))}getAddressesWithMetadata(){let e=this.getAnnounceAddrs();if(e.length>0)return this.components.transportManager.getListeners().forEach(n=>{n.updateAnnounceAddrs(e)}),e.map(n=>({multiaddr:n,verified:!0,type:"announce",expires:Date.now()+this.addressVerificationTTL,lastVerified:Date.now()}));let t=[];return t=t.concat(this.components.transportManager.getAddrs().map(n=>this.transportAddresses.get(n,this.addressVerificationTTL))),t=t.concat(this.getAppendAnnounceAddrs().map(n=>({multiaddr:n,verified:!0,type:"announce",expires:Date.now()+this.addressVerificationTTL,lastVerified:Date.now()}))),t=t.concat(this.observed.getAll()),t=t.concat(this.ipMappings.getAll(t)),t=t.concat(this.dnsMappings.getAll(t)),t}addDNSMapping(e,t){this.dnsMappings.add(e,t)}removeDNSMapping(e){this.dnsMappings.remove(j(`/dns/${e}`))&&this._updatePeerStoreAddresses()}addPublicAddressMapping(e,t,n,s=t,o="tcp"){this.ipMappings.add(e,t,n,s,o),this.observed.removePrefixed(`/ip${at(n)?4:6}/${n}/${o}/${s}`)}removePublicAddressMapping(e,t,n,s=t,o="tcp"){this.ipMappings.remove(j(`/ip${at(n)?4:6}/${n}/${o}/${s}`))&&this._updatePeerStoreAddresses()}maybeUpgradeToIPMapping(e){if(this.ipMappings.has(e))return!1;let t=e.toOptions();if(t.family===6||t.host==="127.0.0.1"||or(t.host)===!0)return!1;let n=this.components.transportManager.getListeners(),s=[o=>Pr.exactMatch(o)||Ds.exactMatch(o),o=>Ns.exactMatch(o),o=>Hp.exactMatch(o)];for(let o of s){if(!o(e))continue;let i=n.filter(l=>l.getAddrs().filter(u=>u.toOptions().family===4&&o(u)).length>0);if(i.length!==1)continue;let a=i[0].getAddrs().filter(l=>l.toOptions().host!=="127.0.0.1").pop();if(a==null)continue;let c=a.toOptions();return this.observed.remove(e),this.ipMappings.add(c.host,c.port,t.host,t.port,t.transport),!0}return!1}};var Xp;(function(r){r.NOT_STARTED_YET="The libp2p node is not started yet",r.NOT_FOUND="Not found"})(Xp||(Xp={}));var ia=class extends Error{constructor(e="Missing service"){super(e),this.name="MissingServiceError"}},aa=class extends Error{constructor(e="Unmet service dependencies"){super(e),this.name="UnmetServiceDependenciesError"}},kn=class extends Error{constructor(e="No content routers available"){super(e),this.name="NoContentRoutersError"}},Ms=class extends Error{constructor(e="No peer routers available"){super(e),this.name="NoPeerRoutersError"}},ca=class extends Error{constructor(e="Should not try to find self"){super(e),this.name="QueriedForSelfError"}},la=class extends Error{constructor(e="Unhandled protocol error"){super(e),this.name="UnhandledProtocolError"}},ua=class extends Error{constructor(e="Duplicate protocol handler error"){super(e),this.name="DuplicateProtocolHandlerError"}},Os=class extends Error{constructor(e="Dial denied error"){super(e),this.name="DialDeniedError"}},Dr=class extends Error{constructor(e="No valid addresses"){super(e),this.name="NoValidAddressesError"}},fa=class extends Error{constructor(e="Connection intercepted"){super(e),this.name="ConnectionInterceptedError"}},da=class extends Error{constructor(e="Connection denied"){super(e),this.name="ConnectionDeniedError"}},Rr=class extends Error{constructor(e="Stream is not multiplexed"){super(e),this.name="MuxerUnavailableError"}},Mr=class extends Error{constructor(e="Encryption failed"){super(e),this.name="EncryptionFailedError"}},ha=class extends Error{constructor(e="Transport unavailable"){super(e),this.name="TransportUnavailableError"}};var Ou=class{components={};_started=!1;constructor(e={}){this.components={};for(let[t,n]of Object.entries(e))this.components[t]=n;this.components.logger==null&&(this.components.logger=Di())}isStarted(){return this._started}async _invokeStartableMethod(e){await Promise.all(Object.values(this.components).filter(t=>to(t)).map(async t=>{await t[e]?.()}))}async beforeStart(){await this._invokeStartableMethod("beforeStart")}async start(){await this._invokeStartableMethod("start"),this._started=!0}async afterStart(){await this._invokeStartableMethod("afterStart")}async beforeStop(){await this._invokeStartableMethod("beforeStop")}async stop(){await this._invokeStartableMethod("stop"),this._started=!1}async afterStop(){await this._invokeStartableMethod("afterStop")}},Sb=["metrics","connectionProtector","dns"],_b=["components","isStarted","beforeStart","start","afterStart","beforeStop","stop","afterStop","then","_invokeStartableMethod"];function Yp(r={}){let e=new Ou(r);return new Proxy(e,{get(n,s,o){if(typeof s=="string"&&!_b.includes(s)){let i=e.components[s];if(i==null&&!Sb.includes(s))throw new ia(`${s} not set`);return i}return Reflect.get(n,s,o)},set(n,s,o){return typeof s=="string"?e.components[s]=o:Reflect.set(n,s,o),!0}})}function Jp(r){let e={};for(let t of Object.values(r.components))for(let n of Cb(t))e[n]=!0;for(let t of Object.values(r.components))for(let n of Ib(t))if(e[n]!==!0)throw new aa(`Service "${Bb(t)}" required capability "${n}" but it was not provided by any component, you may need to add additional configuration when creating your node.`)}function Cb(r){return Array.isArray(r?.[Fn])?r[Fn]:[]}function Ib(r){return Array.isArray(r?.[ic])?r[ic]:[]}function Bb(r){return r?.[Symbol.toStringTag]??r?.toString()??"unknown"}var kb=4,Tb=41;function Qp(r={}){return{denyDialPeer:async()=>!1,denyDialMultiaddr:async e=>{if(Pr.matches(e))return!1;let t=e.stringTuples();return t[0][0]===kb||t[0][0]===Tb?!!or(`${t[0][1]}`):!1},denyInboundConnection:async()=>!1,denyOutboundConnection:async()=>!1,denyInboundEncryptedConnection:async()=>!1,denyOutboundEncryptedConnection:async()=>!1,denyInboundUpgradedConnection:async()=>!1,denyOutboundUpgradedConnection:async()=>!1,filterMultiaddrForPeer:async()=>!0,...r}}var em=()=>{let r=new Error("Delay aborted");return r.name="AbortError",r},Lb=new WeakMap;function Pb({clearTimeout:r,setTimeout:e}={}){return(t,{value:n,signal:s}={})=>{if(s?.aborted)return Promise.reject(em());let o,i,a,c=r??clearTimeout,l=()=>{c(o),a(em())},u=()=>{s&&s.removeEventListener("abort",l)},f=new Promise((d,m)=>{i=()=>{u(),d(n)},a=m,o=(e??setTimeout)(i,t)});return s&&s.addEventListener("abort",l,{once:!0}),Lb.set(f,()=>{c(o),o=null,i()}),f}}var Nb=Pb(),tm=Nb;var pa=class extends Error{remainingPoints;msBeforeNext;consumedPoints;isFirstInDuration;constructor(e="Rate limit exceeded",t){super(e),this.name="RateLimitError",this.remainingPoints=t.remainingPoints,this.msBeforeNext=t.msBeforeNext,this.consumedPoints=t.consumedPoints,this.isFirstInDuration=t.isFirstInDuration}},ma=class extends Error{static name="QueueFullError";constructor(e="The queue was full"){super(e),this.name="QueueFullError"}};var ga=class{memoryStorage;points;duration;blockDuration;execEvenly;execEvenlyMinDelayMs;keyPrefix;constructor(e={}){this.points=e.points??4,this.duration=e.duration??1,this.blockDuration=e.blockDuration??0,this.execEvenly=e.execEvenly??!1,this.execEvenlyMinDelayMs=e.execEvenlyMinDelayMs??this.duration*1e3/this.points,this.keyPrefix=e.keyPrefix??"rlflx",this.memoryStorage=new Uu}async consume(e,t=1,n={}){let s=this.getKey(e),o=this._getKeySecDuration(n),i=this.memoryStorage.incrby(s,t,o);if(i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i.consumedPoints>this.points)throw this.blockDuration>0&&i.consumedPoints<=this.points+t&&(i=this.memoryStorage.set(s,i.consumedPoints,this.blockDuration)),new pa("Rate limit exceeded",i);if(this.execEvenly&&i.msBeforeNext>0&&!i.isFirstInDuration){let a=Math.ceil(i.msBeforeNext/(i.remainingPoints+2));a<this.execEvenlyMinDelayMs&&(a=i.consumedPoints*this.execEvenlyMinDelayMs),await tm(a)}return i}penalty(e,t=1,n={}){let s=this.getKey(e),o=this._getKeySecDuration(n),i=this.memoryStorage.incrby(s,t,o);return i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i}reward(e,t=1,n={}){let s=this.getKey(e),o=this._getKeySecDuration(n),i=this.memoryStorage.incrby(s,-t,o);return i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i}block(e,t){let n=t*1e3,s=this.points+1;return this.memoryStorage.set(this.getKey(e),s,t),{remainingPoints:0,msBeforeNext:n===0?-1:n,consumedPoints:s,isFirstInDuration:!1}}set(e,t,n=0){let s=(n>=0?n:this.duration)*1e3;return this.memoryStorage.set(this.getKey(e),t,n),{remainingPoints:0,msBeforeNext:s===0?-1:s,consumedPoints:t,isFirstInDuration:!1}}get(e){let t=this.memoryStorage.get(this.getKey(e));return t!=null&&(t.remainingPoints=Math.max(this.points-t.consumedPoints,0)),t}delete(e){this.memoryStorage.delete(this.getKey(e))}_getKeySecDuration(e){return e?.customDuration!=null&&e.customDuration>=0?e.customDuration:this.duration}getKey(e){return this.keyPrefix.length>0?`${this.keyPrefix}:${e}`:e}parseKey(e){return e.substring(this.keyPrefix.length)}},Uu=class{storage;constructor(){this.storage=new Map}incrby(e,t,n){let s=this.storage.get(e);if(s!=null){let o=s.expiresAt!=null?s.expiresAt.getTime()-new Date().getTime():-1;return s.expiresAt==null||o>0?(s.value+=t,{remainingPoints:0,msBeforeNext:o,consumedPoints:s.value,isFirstInDuration:!1}):this.set(e,t,n)}return this.set(e,t,n)}set(e,t,n){let s=n*1e3,o=this.storage.get(e);o!=null&&clearTimeout(o.timeoutId);let i={value:t,expiresAt:s>0?new Date(Date.now()+s):void 0};return this.storage.set(e,i),s>0&&(i.timeoutId=setTimeout(()=>{this.storage.delete(e)},s),i.timeoutId.unref!=null&&i.timeoutId.unref()),{remainingPoints:0,msBeforeNext:s===0?-1:s,consumedPoints:i.value,isFirstInDuration:!0}}get(e){let t=this.storage.get(e);if(t!=null)return{remainingPoints:0,msBeforeNext:t.expiresAt!=null?t.expiresAt.getTime()-new Date().getTime():-1,consumedPoints:t.value,isFirstInDuration:!1}}delete(e){let t=this.storage.get(e);return t!=null?(t.timeoutId!=null&&clearTimeout(t.timeoutId),this.storage.delete(e),!0):!1}};function ya(r){if(Gs(r))return{peerId:r,multiaddrs:[]};Array.isArray(r)||(r=[r]);let e;if(r.length>0){let t=r[0].getPeerId();e=t==null?void 0:gt(t),r.forEach(n=>{if(!rr(n))throw new Vt("Invalid multiaddr");let s=n.getPeerId();if(s==null){if(e!=null)throw new D("Multiaddrs must all have the same peer id or have no peer id")}else{let o=gt(s);if(e?.equals(o)!==!0)throw new D("Multiaddrs must all have the same peer id or have no peer id")}})}return{peerId:e,multiaddrs:r}}var Db=["/ipfs/id/1.0.0","/ipfs/id/push/1.0.0","/libp2p/autonat/1.0.0","/libp2p/dcutr"];async function rm(r,e){let t=r?.streams?.map(s=>s.protocol)??[],n=e?.closableProtocols??Db;if(!(t.filter(s=>s!=null&&!n.includes(s)).length>0))try{await r?.close(e)}catch(s){r?.abort(s)}}var nm="last-dial-failure",sm="last-dial-success";var wa=100,ba=50;async function om(r,e){let t=!1;for(let s of xn.keys())if(t=r.protoNames().includes(s),t)break;if(!t)return[r];let n=await r.resolve(e);return e.log("resolved %s to",r,n.map(s=>s.toString())),n}function Us(r){try{let e;if(typeof r=="string"?e=j(r):e=r,!e.protoNames().includes("ipcidr")){let n=e.protoNames().includes("ip6")?"/ipcidr/128":"/ipcidr/32";e=e.encapsulate(n)}return Xl(e)}catch{throw new Error(`Can't convert to IpNet, Invalid multiaddr format: ${r}`)}}var Rb={maxConnections:wa,allow:[]},xa=class{maxConnections;connectionManager;peerStore;allow;events;log;constructor(e,t={}){this.maxConnections=t.maxConnections??Rb.maxConnections,this.allow=(t.allow??[]).map(n=>Us(n)),this.connectionManager=e.connectionManager,this.peerStore=e.peerStore,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager:connection-pruner"),this.maybePruneConnections=this.maybePruneConnections.bind(this)}start(){this.events.addEventListener("connection:open",this.maybePruneConnections)}stop(){this.events.removeEventListener("connection:open",this.maybePruneConnections)}maybePruneConnections(){this._maybePruneConnections().catch(e=>{this.log.error("error while pruning connections %e",e)})}async _maybePruneConnections(){let e=this.connectionManager.getConnections(),t=e.length;if(this.log("checking max connections limit %d/%d",t,this.maxConnections),t<=this.maxConnections)return;let n=new Mt;for(let a of e){let c=a.remotePeer;if(!n.has(c)){n.set(c,0);try{let l=await this.peerStore.get(c);n.set(c,[...l.tags.values()].reduce((u,f)=>u+f.value,0))}catch(l){l.name!=="NotFoundError"&&this.log.error("error loading peer tags",l)}}}let s=this.sortConnections(e,n),o=Math.max(t-this.maxConnections,0),i=[];for(let a of s)if(this.log("too many connections open - closing a connection to %p",a.remotePeer),this.allow.some(l=>l.contains(a.remoteAddr.nodeAddress().address))||i.push(a),i.length===o)break;await Promise.all(i.map(async a=>{await rm(a,{signal:AbortSignal.timeout(1e3)})})),this.events.safeDispatchEvent("connection:prune",{detail:i})}sortConnections(e,t){return e.sort((n,s)=>{let o=n.timeline.open,i=s.timeline.open;return o<i?1:o>i?-1:0}).sort((n,s)=>n.direction==="outbound"&&s.direction==="inbound"?1:n.direction==="inbound"&&s.direction==="outbound"?-1:0).sort((n,s)=>n.streams.length>s.streams.length?1:n.streams.length<s.streams.length?-1:0).sort((n,s)=>{let o=t.get(n.remotePeer)??0,i=t.get(s.remotePeer)??0;return o>i?1:o<i?-1:0})}};function ue(){let r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t}),r}var va=class{buffer;mask;top;btm;next;constructor(e){if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}},Tn=class{size;hwm;head;tail;constructor(e={}){this.hwm=e.splitLimit??16,this.head=new va(this.hwm),this.tail=this.head,this.size=0}calculateSize(e){return e?.byteLength!=null?e.byteLength:1}push(e){if(e?.value!=null&&(this.size+=this.calculateSize(e.value)),!this.head.push(e)){let t=this.head;this.head=t.next=new va(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next!=null){let t=this.tail.next;this.tail.next=null,this.tail=t,e=this.tail.shift()}return e?.value!=null&&(this.size-=this.calculateSize(e.value)),e}isEmpty(){return this.head.isEmpty()}};var Fu=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.code=t??"ABORT_ERR"}};function Ea(r={}){return Mb(t=>{let n=t.shift();if(n==null)return{done:!0};if(n.error!=null)throw n.error;return{done:n.done===!0,value:n.value}},r)}function Mb(r,e){e=e??{};let t=e.onEnd,n=new Tn,s,o,i,a=ue(),c=async()=>{try{return n.isEmpty()?i?{done:!0}:await new Promise((h,w)=>{o=x=>{o=null,n.push(x);try{h(r(n))}catch(y){w(y)}return s}}):r(n)}finally{n.isEmpty()&&queueMicrotask(()=>{a.resolve(),a=ue()})}},l=h=>o!=null?o(h):(n.push(h),s),u=h=>(n=new Tn,o!=null?o({error:h}):(n.push({error:h}),s)),f=h=>{if(i)return s;if(e?.objectMode!==!0&&h?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return l({done:!1,value:h})},d=h=>i?s:(i=!0,h!=null?u(h):l({done:!0})),m=()=>(n=new Tn,d(),{done:!0}),p=h=>(d(h),{done:!0});if(s={[Symbol.asyncIterator](){return this},next:c,return:m,throw:p,push:f,end:d,get readableLength(){return n.size},onEmpty:async h=>{let w=h?.signal;if(w?.throwIfAborted(),n.isEmpty())return;let x,y;w!=null&&(x=new Promise((E,_)=>{y=()=>{_(new Fu)},w.addEventListener("abort",y)}));try{await Promise.race([a.promise,x])}finally{y!=null&&w!=null&&w?.removeEventListener("abort",y)}}},t==null)return s;let g=s;return s={[Symbol.asyncIterator](){return this},next(){return g.next()},throw(h){return g.throw(h),t!=null&&(t(h),t=void 0),{done:!0}},return(){return g.return(),t!=null&&(t(),t=void 0),{done:!0}},push:f,end(h){return g.end(h),t!=null&&(t(h),t=void 0),s},get readableLength(){return g.readableLength},onEmpty:h=>g.onEmpty(h)},s}var Vu=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=t??"ABORT_ERR"}};async function Ln(r,e,t,n){let s=new Vu(n?.errorMessage,n?.errorCode);return t?.aborted===!0?Promise.reject(s):new Promise((o,i)=>{function a(){t?.removeEventListener("abort",u),r.removeEventListener(e,c),n?.errorEvent!=null&&r.removeEventListener(n.errorEvent,l)}let c=f=>{try{if(n?.filter?.(f)===!1)return}catch(d){a(),i(d);return}a(),o(f)},l=f=>{a(),i(f.detail)},u=()=>{a(),i(s)};t?.addEventListener("abort",u),r.addEventListener(e,c),n?.errorEvent!=null&&r.addEventListener(n.errorEvent,l)})}var Aa=class extends Error{type;code;constructor(e,t,n){super(e??"The operation was aborted"),this.type="aborted",this.name=n??"AbortError",this.code=t??"ABORT_ERR"}};async function ir(r,e,t){if(e==null)return r;if(e.aborted){let o=Promise.reject(new Aa(t?.errorMessage,t?.errorCode,t?.errorName));return Promise.race([o,Promise.resolve().then(async()=>{try{await r}catch{}return o})])}let n,s=new Aa(t?.errorMessage,t?.errorCode,t?.errorName);try{return await Promise.race([r,new Promise((o,i)=>{n=()=>{i(s)},e.addEventListener("abort",n)})])}finally{n!=null&&e.removeEventListener("abort",n)}}var Sa=class{deferred;signal;constructor(e){this.signal=e,this.deferred=ue(),this.onAbort=this.onAbort.bind(this),this.signal?.addEventListener("abort",this.onAbort)}onAbort(){this.deferred.reject(this.signal?.reason??new Je)}cleanup(){this.signal?.removeEventListener("abort",this.onAbort)}};function Ob(){return`${parseInt(String(Math.random()*1e9),10).toString()}${Date.now()}`}var _a=class{id;fn;options;recipients;status;timeline;controller;constructor(e,t){this.id=Ob(),this.status="queued",this.fn=e,this.options=t,this.recipients=[],this.timeline={created:Date.now()},this.controller=new AbortController,this.controller.signal,this.onAbort=this.onAbort.bind(this)}abort(e){this.controller.abort(e)}onAbort(){this.recipients.reduce((t,n)=>t&&n.signal?.aborted===!0,!0)&&(this.controller.abort(new Je),this.cleanup())}async join(e={}){let t=new Sa(e.signal);return this.recipients.push(t),e.signal?.addEventListener("abort",this.onAbort),t.deferred.promise}async run(){this.status="running",this.timeline.started=Date.now();try{this.controller.signal.throwIfAborted();let e=await ir(this.fn({...this.options??{},signal:this.controller.signal}),this.controller.signal);this.recipients.forEach(t=>{t.deferred.resolve(e)}),this.status="complete"}catch(e){this.recipients.forEach(t=>{t.deferred.reject(e)}),this.status="errored"}finally{this.timeline.finished=Date.now(),this.cleanup()}}cleanup(){this.recipients.forEach(e=>{e.cleanup(),e.signal?.removeEventListener("abort",this.onAbort)})}};var Nn=class extends xt{concurrency;maxSize;queue;pending;sort;constructor(e={}){super(),this.concurrency=e.concurrency??Number.POSITIVE_INFINITY,this.maxSize=e.maxSize??Number.POSITIVE_INFINITY,this.pending=0,e.metricName!=null&&e.metrics?.registerMetricGroup(e.metricName,{calculate:()=>({size:this.queue.length,running:this.pending,queued:this.queue.length-this.pending})}),this.sort=e.sort,this.queue=[]}tryToStartAnother(){if(this.size===0)return queueMicrotask(()=>{this.safeDispatchEvent("empty")}),this.running===0&&queueMicrotask(()=>{this.safeDispatchEvent("idle")}),!1;if(this.pending<this.concurrency){let e;for(let t of this.queue)if(t.status==="queued"){e=t;break}return e==null?!1:(this.safeDispatchEvent("active"),this.pending++,e.run().finally(()=>{for(let t=0;t<this.queue.length;t++)if(this.queue[t]===e){this.queue.splice(t,1);break}this.pending--,this.tryToStartAnother(),this.safeDispatchEvent("next")}),!0)}return!1}enqueue(e){this.queue.push(e),this.sort!=null&&this.queue.sort(this.sort)}async add(e,t){if(t?.signal?.throwIfAborted(),this.size===this.maxSize)throw new ma;let n=new _a(e,t);return this.enqueue(n),this.safeDispatchEvent("add"),this.tryToStartAnother(),n.join(t).then(s=>(this.safeDispatchEvent("completed",{detail:s}),this.safeDispatchEvent("success",{detail:{job:n,result:s}}),s)).catch(s=>{if(n.status==="queued"){for(let o=0;o<this.queue.length;o++)if(this.queue[o]===n){this.queue.splice(o,1);break}}throw this.safeDispatchEvent("error",{detail:s}),this.safeDispatchEvent("failure",{detail:{job:n,error:s}}),s})}clear(){this.queue.splice(0,this.queue.length)}abort(){this.queue.forEach(e=>{e.abort(new Je)}),this.clear()}async onEmpty(e){this.size!==0&&await Ln(this,"empty",e?.signal)}async onSizeLessThan(e,t){this.size<e||await Ln(this,"next",t?.signal,{filter:()=>this.size<e})}async onIdle(e){this.pending===0&&this.size===0||await Ln(this,"idle",e?.signal)}get size(){return this.queue.length}get queued(){return this.queue.length-this.pending}get running(){return this.pending}async*toGenerator(e){e?.signal?.throwIfAborted();let t=Ea({objectMode:!0}),n=c=>{c!=null?this.abort():this.clear(),t.end(c)},s=c=>{c.detail!=null&&t.push(c.detail)},o=c=>{n(c.detail)},i=()=>{n()},a=()=>{n(new Je("Queue aborted"))};this.addEventListener("completed",s),this.addEventListener("error",o),this.addEventListener("idle",i),e?.signal?.addEventListener("abort",a);try{yield*t}finally{this.removeEventListener("completed",s),this.removeEventListener("error",o),this.removeEventListener("idle",i),e?.signal?.removeEventListener("abort",a),n()}}};var Ca=class extends Nn{constructor(e={}){super({...e,sort:(t,n)=>t.options.priority>n.options.priority?-1:t.options.priority<n.options.priority?1:0})}};function Or(r){let e=new globalThis.AbortController;function t(){e.abort();for(let o of r)o?.removeEventListener!=null&&o.removeEventListener("abort",t)}for(let o of r){if(o?.aborted===!0){t();break}o?.addEventListener!=null&&o.addEventListener("abort",t)}function n(){for(let o of r)o?.removeEventListener!=null&&o.removeEventListener("abort",t)}let s=e.signal;return s.clear=n,s}function im(r){return/^127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(r)||/^::1$/.test(r)}function Hu(r){if(!ra(r))return!1;let{address:e}=r.nodeAddress();return im(e)}function Ub(r,e){let t=Ns.exactMatch(r.multiaddr),n=Ns.exactMatch(e.multiaddr);if(t&&!n)return-1;if(!t&&n)return 1;let s=Ds.exactMatch(r.multiaddr),o=Ds.exactMatch(e.multiaddr);if(s&&!o)return-1;if(!s&&o)return 1;let i=Pr.exactMatch(r.multiaddr),a=Pr.exactMatch(e.multiaddr);if(i&&!a)return-1;if(!i&&a)return 1;let c=Tu.exactMatch(r.multiaddr),l=Tu.exactMatch(e.multiaddr);if(c&&!l)return-1;if(!c&&l)return 1;let u=Bu.exactMatch(r.multiaddr),f=Bu.exactMatch(e.multiaddr);if(u&&!f)return-1;if(!u&&f)return 1;let d=ku.exactMatch(r.multiaddr),m=ku.exactMatch(e.multiaddr);return d&&!m?-1:!d&&m?1:0}function Fb(r,e){let t=Hu(r.multiaddr),n=Hu(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function Vb(r,e){let t=Nr(r.multiaddr),n=Nr(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function Hb(r,e){return r.isCertified&&!e.isCertified?-1:!r.isCertified&&e.isCertified?1:0}function Kb(r,e){let t=Rs.exactMatch(r.multiaddr),n=Rs.exactMatch(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function am(r){return r.sort(Ub).sort(Hb).sort(Kb).sort(Vb).sort(Fb)}var Ia={maxParallelDials:ba,maxDialQueueLength:500,maxPeerAddrsToDial:25,dialTimeout:5e3,resolvers:{dnsaddr:Er}},Ba=class{queue;components;addressSorter;maxPeerAddrsToDial;maxDialQueueLength;dialTimeout;shutDownController;connections;log;constructor(e,t={}){this.addressSorter=t.addressSorter,this.maxPeerAddrsToDial=t.maxPeerAddrsToDial??Ia.maxPeerAddrsToDial,this.maxDialQueueLength=t.maxDialQueueLength??Ia.maxDialQueueLength,this.dialTimeout=t.dialTimeout??Ia.dialTimeout,this.connections=t.connections??new Mt,this.log=e.logger.forComponent("libp2p:connection-manager:dial-queue"),this.components=e,this.shutDownController=new AbortController,this.shutDownController.signal;for(let[n,s]of Object.entries(t.resolvers??{}))xn.set(n,s);this.queue=new Ca({concurrency:t.maxParallelDials??Ia.maxParallelDials,metricName:"libp2p_dial_queue",metrics:e.metrics}),this.queue.addEventListener("error",n=>{n.detail.name!==Je.name&&this.log.error("error in dial queue - %e",n.detail)})}start(){this.shutDownController=new AbortController,this.shutDownController.signal}stop(){this.shutDownController.abort(),this.queue.abort()}async dial(e,t={}){let{peerId:n,multiaddrs:s}=ya(e),o=Array.from(this.connections.values()).flat().find(a=>t.force===!0?!1:a.remotePeer.equals(n)?!0:s.find(c=>c.equals(a.remoteAddr)));if(o?.status==="open")return this.log("already connected to %a",o.remoteAddr),t.onProgress?.(new fe("dial-queue:already-connected")),o;let i=this.queue.queue.find(a=>{if(n?.equals(a.options.peerId)===!0)return!0;let c=a.options.multiaddrs;if(c==null)return!1;for(let l of s)if(c.has(l.toString()))return!0;return!1});if(i!=null){this.log("joining existing dial target for %p",n);for(let a of s)i.options.multiaddrs.add(a.toString());return t.onProgress?.(new fe("dial-queue:already-in-dial-queue")),i.join(t)}if(this.queue.size>=this.maxDialQueueLength)throw new zr("Dial queue is full");return this.log("creating dial target for %p",n,s.map(a=>a.toString())),t.onProgress?.(new fe("dial-queue:add-to-dial-queue")),this.queue.add(async a=>{a?.onProgress?.(new fe("dial-queue:start-dial"));let c=Or([this.shutDownController.signal,a.signal]);let l;try{l=await this.calculateMultiaddrs(n,a?.multiaddrs,{...a,signal:c}),a?.onProgress?.(new fe("dial-queue:calculated-addresses",l)),l.map(({multiaddr:u})=>u.toString()).forEach(u=>{a?.multiaddrs.add(u)})}catch(u){throw c.clear(),u}try{let u=0,f=[];for(let d of l){if(u===this.maxPeerAddrsToDial)throw this.log("dialed maxPeerAddrsToDial (%d) addresses for %p, not trying any others",u,n),new zr("Peer had more than maxPeerAddrsToDial");u++;try{let m=await this.components.transportManager.dial(d.multiaddr,{...a,signal:c});this.log("dial to %a succeeded",d.multiaddr);try{await this.components.peerStore.merge(m.remotePeer,{multiaddrs:[m.remoteAddr],metadata:{[sm]:N(Date.now().toString())}})}catch(p){this.log.error("could not update last dial failure key for %p",n,p)}return m}catch(m){if(this.log.error("dial failed to %a",d.multiaddr,m),n!=null)try{await this.components.peerStore.merge(n,{metadata:{[nm]:N(Date.now().toString())}})}catch(p){this.log.error("could not update last dial failure key for %p",n,p)}if(c.aborted)throw new Js(m.message);f.push(m)}}throw f.length===1?f[0]:new AggregateError(f,"All multiaddr dials failed")}finally{c.clear()}},{peerId:n,priority:t.priority??zu,multiaddrs:new Set(s.map(a=>a.toString())),signal:t.signal??AbortSignal.timeout(this.dialTimeout),onProgress:t.onProgress})}async calculateMultiaddrs(e,t=new Set,n={}){let s=[...t].map(f=>({multiaddr:j(f),isCertified:!1}));if(e!=null){if(this.components.peerId.equals(e))throw new zr("Tried to dial self");if(await this.components.connectionGater.denyDialPeer?.(e)===!0)throw new Os("The dial request is blocked by gater.allowDialPeer");if(s.length===0){this.log("loading multiaddrs for %p",e);try{let f=await this.components.peerStore.get(e);s.push(...f.addresses),this.log("loaded multiaddrs for %p",e,s.map(({multiaddr:d})=>d.toString()))}catch(f){if(f.name!=="NotFoundError")throw f}}if(s.length===0){this.log("looking up multiaddrs for %p in the peer routing",e);try{let f=await this.components.peerRouting.findPeer(e,n);this.log("found multiaddrs for %p in the peer routing",e,s.map(({multiaddr:d})=>d.toString())),s.push(...f.multiaddrs.map(d=>({multiaddr:d,isCertified:!1})))}catch(f){f.name!=="NoPeerRoutersError"&&this.log.error("looking up multiaddrs for %p in the peer routing failed",e,f)}}}let o=(await Promise.all(s.map(async f=>{let d=await om(f.multiaddr,{dns:this.components.dns,...n,log:this.log});return d.length===1&&d[0].equals(f.multiaddr)?f:d.map(m=>({multiaddr:m,isCertified:!1}))}))).flat();if(e!=null){let f=`/p2p/${e.toString()}`;o=o.map(d=>d.multiaddr.protos().pop()?.path===!0?d:d.multiaddr.getPeerId()==null?{multiaddr:d.multiaddr.encapsulate(f),isCertified:d.isCertified}:d)}let i=o.filter(f=>{if(this.components.transportManager.dialTransportForMultiaddr(f.multiaddr)==null)return!1;let d=f.multiaddr.getPeerId();return e!=null&&d!=null?e.equals(d):!0}),a=new Map;for(let f of i){let d=f.multiaddr.toString(),m=a.get(d);if(m!=null){m.isCertified=m.isCertified||f.isCertified||!1;continue}a.set(d,f)}let c=[...a.values()];if(c.length===0)throw new Dr("The dial request has no valid addresses");let l=[];for(let f of c)this.components.connectionGater.denyDialMultiaddr!=null&&await this.components.connectionGater.denyDialMultiaddr(f.multiaddr)||l.push(f);let u=this.addressSorter==null?am(l):l.sort(this.addressSorter);if(u.length===0)throw new Os("The connection gater denied all addresses in the dial request");return this.log.trace("addresses for %p before filtering",e??"unknown peer",o.map(({multiaddr:f})=>f.toString())),this.log.trace("addresses for %p after filtering",e??"unknown peer",u.map(({multiaddr:f})=>f.toString())),u}async isDialable(e,t={}){Array.isArray(e)||(e=[e]);try{let n=await this.calculateMultiaddrs(void 0,new Set(e.map(s=>s.toString())),t);return t.runOnLimitedConnection===!1?n.find(s=>!Rs.matches(s.multiaddr))!=null:!0}catch(n){this.log.trace("error calculating if multiaddr(s) were dialable",n)}return!1}};var ka=class extends Nn{has(e){return this.find(e)!=null}find(e){return this.queue.find(t=>e.equals(t.options.peerId))}};var pm=Hr(dm(),1);var qb=Object.prototype.toString,zb=r=>qb.call(r)==="[object Error]",Gb=new Set(["network error","Failed to fetch","NetworkError when attempting to fetch resource.","The Internet connection appears to be offline.","Load failed","Network request failed","fetch failed","terminated"]);function Gu(r){return r&&zb(r)&&r.name==="TypeError"&&typeof r.message=="string"?r.message==="Load failed"?r.stack===void 0:Gb.has(r.message):!1}var Wu=class extends Error{constructor(e){super(),e instanceof Error?(this.originalError=e,{message:e}=e):(this.originalError=new Error(e),this.originalError.stack=this.stack),this.name="AbortError",this.message=e}},hm=(r,e,t)=>{let n=t.retries-(e-1);return r.attemptNumber=e,r.retriesLeft=n,r};async function ju(r,e){return new Promise((t,n)=>{e={...e},e.onFailedAttempt??=()=>{},e.shouldRetry??=()=>!0,e.retries??=10;let s=pm.default.operation(e),o=()=>{s.stop(),n(e.signal?.reason)};e.signal&&!e.signal.aborted&&e.signal.addEventListener("abort",o,{once:!0});let i=()=>{e.signal?.removeEventListener("abort",o),s.stop()};s.attempt(async a=>{try{let c=await r(a);i(),t(c)}catch(c){try{if(!(c instanceof Error))throw new TypeError(`Non-error was thrown: "${c}". You should only throw errors.`);if(c instanceof Wu)throw c.originalError;if(c instanceof TypeError&&!Gu(c))throw c;if(hm(c,a,e),await e.shouldRetry(c)||(s.stop(),n(c)),await e.onFailedAttempt(c),!s.retry(c))throw s.mainError()}catch(l){hm(l,a,e),i(),n(l)}}})})}var Ta=class{log;queue;started;peerStore;retries;retryInterval;backoffFactor;connectionManager;events;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:reconnect-queue"),this.peerStore=e.peerStore,this.connectionManager=e.connectionManager,this.queue=new ka({concurrency:t.maxParallelReconnects??5,metricName:"libp2p_reconnect_queue",metrics:e.metrics}),this.started=!1,this.retries=t.retries??5,this.backoffFactor=t.backoffFactor,this.retryInterval=t.retryInterval,this.events=e.events,e.events.addEventListener("peer:disconnect",n=>{this.maybeReconnect(n.detail).catch(s=>{this.log.error("failed to maybe reconnect to %p - %e",n.detail,s)})})}async maybeReconnect(e){if(!this.started)return;let t=await this.peerStore.get(e);mm(t)&&(this.queue.has(e)||this.queue.add(async n=>{await ju(async s=>{if(this.started)try{await this.connectionManager.openConnection(e,{signal:n?.signal})}catch(o){throw this.log("reconnecting to %p attempt %d of %d failed - %e",e,s,this.retries,o),o}},{signal:n?.signal,retries:this.retries,factor:this.backoffFactor,minTimeout:this.retryInterval})},{peerId:e}).catch(async n=>{this.log.error("failed to reconnect to %p - %e",e,n);let s={};[...t.tags.keys()].forEach(o=>{o.startsWith(oc)&&(s[o]=void 0)}),await this.peerStore.merge(e,{tags:s}),this.events.safeDispatchEvent("peer:reconnect-failure",{detail:e})}).catch(async n=>{this.log.error("failed to remove keep-alive tag from %p - %e",e,n)}))}start(){this.started=!0}async afterStart(){Promise.resolve().then(async()=>{let e=await this.peerStore.all({filters:[t=>mm(t)]});await Promise.all(e.map(async t=>{await this.connectionManager.openConnection(t.id).catch(n=>{this.log.error(n)})}))}).catch(e=>{this.log.error(e)})}stop(){this.started=!1,this.queue.abort()}};function mm(r){for(let e of r.tags.keys())if(e.startsWith(oc))return!0;return!1}var zu=50,Zu={maxConnections:wa,inboundConnectionThreshold:5,maxIncomingPendingConnections:10},La=class{started;connections;allow;deny;maxIncomingPendingConnections;incomingPendingConnections;outboundPendingConnections;maxConnections;dialQueue;reconnectQueue;connectionPruner;inboundConnectionRateLimiter;peerStore;metrics;events;log;peerId;constructor(e,t={}){if(this.maxConnections=t.maxConnections??Zu.maxConnections,this.maxConnections<1)throw new D("Connection Manager maxConnections must be greater than 0");this.connections=new Mt,this.started=!1,this.peerId=e.peerId,this.peerStore=e.peerStore,this.metrics=e.metrics,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager"),this.onConnect=this.onConnect.bind(this),this.onDisconnect=this.onDisconnect.bind(this),this.allow=(t.allow??[]).map(n=>Us(n)),this.deny=(t.deny??[]).map(n=>Us(n)),this.incomingPendingConnections=0,this.maxIncomingPendingConnections=t.maxIncomingPendingConnections??Zu.maxIncomingPendingConnections,this.outboundPendingConnections=0,this.inboundConnectionRateLimiter=new ga({points:t.inboundConnectionThreshold??Zu.inboundConnectionThreshold,duration:1}),this.connectionPruner=new xa({connectionManager:this,peerStore:e.peerStore,events:e.events,logger:e.logger},{maxConnections:this.maxConnections,allow:t.allow?.map(n=>j(n))}),this.dialQueue=new Ba(e,{addressSorter:t.addressSorter,maxParallelDials:t.maxParallelDials??ba,maxDialQueueLength:t.maxDialQueueLength??500,maxPeerAddrsToDial:t.maxPeerAddrsToDial??25,dialTimeout:t.dialTimeout??5e3,resolvers:t.resolvers??{dnsaddr:Er},connections:this.connections}),this.reconnectQueue=new Ta({events:e.events,peerStore:e.peerStore,logger:e.logger,connectionManager:this},{retries:t.reconnectRetries,retryInterval:t.reconnectRetryInterval,backoffFactor:t.reconnectBackoffFactor,maxParallelReconnects:t.maxParallelReconnects})}[Symbol.toStringTag]="@libp2p/connection-manager";async start(){this.metrics?.registerMetricGroup("libp2p_connection_manager_connections",{calculate:()=>{let e={inbound:0,"inbound pending":this.incomingPendingConnections,outbound:0,"outbound pending":this.outboundPendingConnections};for(let t of this.connections.values())for(let n of t)e[n.direction]++;return e}}),this.metrics?.registerMetricGroup("libp2p_protocol_streams_total",{label:"protocol",calculate:()=>{let e={};for(let t of this.connections.values())for(let n of t)for(let s of n.streams){let o=`${s.direction} ${s.protocol??"unnegotiated"}`;e[o]=(e[o]??0)+1}return e}}),this.metrics?.registerMetricGroup("libp2p_connection_manager_protocol_streams_per_connection_90th_percentile",{label:"protocol",calculate:()=>{let e={};for(let n of this.connections.values())for(let s of n){let o={};for(let i of s.streams){let a=`${i.direction} ${i.protocol??"unnegotiated"}`;o[a]=(o[a]??0)+1}for(let[i,a]of Object.entries(o))e[i]=e[i]??[],e[i].push(a)}let t={};for(let[n,s]of Object.entries(e)){s=s.sort((i,a)=>i-a);let o=Math.floor(s.length*.9);t[n]=s[o]}return t}}),this.events.addEventListener("connection:open",this.onConnect),this.events.addEventListener("connection:close",this.onDisconnect),await yf(this.dialQueue,this.reconnectQueue,this.connectionPruner),this.started=!0,this.log("started")}async stop(){this.events.removeEventListener("connection:open",this.onConnect),this.events.removeEventListener("connection:close",this.onDisconnect),await wf(this.reconnectQueue,this.dialQueue,this.connectionPruner);let e=[];for(let t of this.connections.values())for(let n of t)e.push((async()=>{try{await n.close()}catch(s){this.log.error(s)}})());this.log("closing %d connections",e.length),await Promise.all(e),this.connections.clear(),this.log("stopped")}getMaxConnections(){return this.maxConnections}onConnect(e){this._onConnect(e).catch(t=>{this.log.error(t)})}async _onConnect(e){let{detail:t}=e;if(!this.started){await t.close();return}if(t.status!=="open")return;let n=t.remotePeer,s=!this.connections.has(n),o=this.connections.get(n)??[];o.push(t),this.connections.set(n,o),n.publicKey!=null&&n.type==="RSA"&&await this.peerStore.patch(n,{publicKey:n.publicKey}),s&&this.events.safeDispatchEvent("peer:connect",{detail:t.remotePeer})}onDisconnect(e){let{detail:t}=e,n=t.remotePeer,o=(this.connections.get(n)??[]).filter(i=>i.id!==t.id);this.connections.set(n,o),o.length===0&&(this.log("onDisconnect remove all connections for peer %p",n),this.connections.delete(n),this.events.safeDispatchEvent("peer:disconnect",{detail:t.remotePeer}))}getConnections(e){if(e!=null)return this.connections.get(e)??[];let t=[];for(let n of this.connections.values())t=t.concat(n);return t}getConnectionsMap(){return this.connections}async openConnection(e,t={}){if(!this.started)throw new bt("Not started");this.outboundPendingConnections++;try{t.signal?.throwIfAborted();let{peerId:n}=ya(e);if(this.peerId.equals(n))throw new qr("Can not dial self");if(n!=null&&t.force!==!0){this.log("dial %p",n);let a=this.getConnections(n).find(c=>c.limits==null);if(a!=null)return this.log("had an existing non-limited connection to %p",n),t.onProgress?.(new fe("dial-queue:already-connected")),a}let s=await this.dialQueue.dial(e,{...t,priority:t.priority??zu});if(s.status!=="open")throw new $r("Remote closed connection during opening");let o=this.connections.get(s.remotePeer);o==null&&(o=[],this.connections.set(s.remotePeer,o));let i=!1;for(let a of o)if(a.id===s.id&&(i=!0),t.force!==!0&&a.id!==s.id&&a.remoteAddr.equals(s.remoteAddr))return s.abort(new Vt("Duplicate multiaddr connection")),a;return i||o.push(s),s}finally{this.outboundPendingConnections--}}async closeConnections(e,t={}){let n=this.connections.get(e)??[];await Promise.all(n.map(async s=>{try{await s.close(t)}catch(o){s.abort(o)}}))}async acceptIncomingConnection(e){if(this.deny.some(s=>s.contains(e.remoteAddr.nodeAddress().address)))return this.log("connection from %a refused - connection remote address was in deny list",e.remoteAddr),!1;if(this.allow.some(s=>s.contains(e.remoteAddr.nodeAddress().address)))return this.incomingPendingConnections++,!0;if(this.incomingPendingConnections===this.maxIncomingPendingConnections)return this.log("connection from %a refused - incomingPendingConnections exceeded by host",e.remoteAddr),!1;if(e.remoteAddr.isThinWaistAddress()){let s=e.remoteAddr.nodeAddress().address;try{await this.inboundConnectionRateLimiter.consume(s,1)}catch{return this.log("connection from %a refused - inboundConnectionThreshold exceeded by host %s",e.remoteAddr,s),!1}}return this.getConnections().length<this.maxConnections?(this.incomingPendingConnections++,!0):(this.log("connection from %a refused - maxConnections exceeded",e.remoteAddr),!1)}afterUpgradeInbound(){this.incomingPendingConnections--}getDialQueue(){let e={queued:"queued",running:"active",errored:"error",complete:"success"};return this.dialQueue.queue.queue.map(t=>({id:t.id,status:e[t.status],peerId:t.options.peerId,multiaddrs:[...t.options.multiaddrs].map(n=>j(n))}))}async isDialable(e,t={}){return this.dialQueue.isDialable(e,t)}};var Dn=class{movingAverage;variance;deviation;forecast;timespan;previousTime;constructor(e){this.timespan=e,this.movingAverage=0,this.variance=0,this.deviation=0,this.forecast=0}alpha(e,t){return 1-Math.exp(-(e-t)/this.timespan)}push(e,t=Date.now()){if(this.previousTime!=null){let n=this.alpha(t,this.previousTime),s=e-this.movingAverage,o=n*s;this.movingAverage=n*e+(1-n)*this.movingAverage,this.variance=(1-n)*(this.variance+s*o),this.deviation=Math.sqrt(this.variance),this.forecast=this.movingAverage+n*s}else this.movingAverage=e;this.previousTime=t}};var Zb=1.2,Xb=2,Yb=2e3,Pa=class{success;failure;next;metric;timeoutMultiplier;failureMultiplier;minTimeout;constructor(e={}){this.success=new Dn(e.interval??5e3),this.failure=new Dn(e.interval??5e3),this.next=new Dn(e.interval??5e3),this.failureMultiplier=e.failureMultiplier??Xb,this.timeoutMultiplier=e.timeoutMultiplier??Zb,this.minTimeout=e.minTimeout??Yb,e.metricName!=null&&(this.metric=e.metrics?.registerMetricGroup(e.metricName))}getTimeoutSignal(e={}){let t=Math.max(Math.round(this.next.movingAverage*(e.timeoutFactor??this.timeoutMultiplier)),this.minTimeout),n=AbortSignal.timeout(t),s=Or([e.signal,n]);return s.start=Date.now(),s.timeout=t,s}cleanUp(e){let t=Date.now()-e.start;e.aborted?(this.failure.push(t),this.next.push(t*this.failureMultiplier),this.metric?.update({failureMovingAverage:this.failure.movingAverage,failureDeviation:this.failure.deviation,failureForecast:this.failure.forecast,failureVariance:this.failure.variance,failure:t})):(this.success.push(t),this.next.push(t),this.metric?.update({successMovingAverage:this.success.movingAverage,successDeviation:this.success.deviation,successForecast:this.success.forecast,successVariance:this.success.variance,success:t}))}};var Xu=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=ue(),this.haveNext=ue()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let e=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=ue(),e}async throw(e){return this.ended=!0,e!=null&&(this.haveNext.promise.catch(()=>{}),this.haveNext.reject(e)),{done:!0,value:void 0}}async return(){let e={done:!0,value:void 0};return await this._push(void 0),e}async push(e,t){await this._push(e,t)}async end(e,t){e!=null?await this.throw(e):await this._push(void 0,t)}async _push(e,t){if(e!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");for(;this.nextResult!=null;)await this.readNext.promise;e!=null?this.nextResult={done:!1,value:e}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=ue(),await ir(this.readNext.promise,t?.signal,t)}};function gm(){return new Xu}var Na=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var Yu=class extends Error{code;constructor(e,t){super(e),this.code=t}},Ju=class extends Yu{type;constructor(e){super(e,"ABORT_ERR"),this.type="aborted",this.name="AbortError"}};function Da(r,e){let t=gm();r.sink(t).catch(async i=>{await t.end(i)}),r.sink=async i=>{for await(let a of i)await t.push(a);await t.end()};let n=r.source;r.source[Symbol.iterator]!=null?n=r.source[Symbol.iterator]():r.source[Symbol.asyncIterator]!=null&&(n=r.source[Symbol.asyncIterator]());let s=new ye;return{read:async(i,a)=>{a?.signal?.throwIfAborted();let c,l=new Promise((u,f)=>{c=()=>{f(new Ju("Read aborted"))},a?.signal?.addEventListener("abort",c)});try{if(i==null){let{done:f,value:d}=await Promise.race([n.next(),l]);return f===!0?new ye:d}for(;s.byteLength<i;){let{value:f,done:d}=await Promise.race([n.next(),l]);if(d===!0)throw new Na("unexpected end of input");s.append(f)}let u=s.sublist(0,i);return s.consume(i),u}finally{c!=null&&a?.signal?.removeEventListener("abort",c)}},write:async(i,a)=>{a?.signal?.throwIfAborted(),i instanceof Uint8Array?await t.push(i,a):await t.push(i.subarray(),a)},unwrap:()=>{if(s.byteLength>0){let i=r.source;r.source=async function*(){e?.yieldBytes===!1?yield s:yield*s,yield*i}()}return r}}}var Jb=1e4,Qb="1.0.0",ex="ping",tx="ipfs",ym=32,rx=!0,Ra=class{protocol;components;log;heartbeatInterval;pingIntervalMs;abortController;timeout;abortConnectionOnPingFailure;constructor(e,t={}){this.components=e,this.protocol=`/${t.protocolPrefix??tx}/${ex}/${Qb}`,this.log=e.logger.forComponent("libp2p:connection-monitor"),this.pingIntervalMs=t.pingInterval??Jb,this.abortConnectionOnPingFailure=t.abortConnectionOnPingFailure??rx,this.timeout=new Pa({...t.pingTimeout??{},metrics:e.metrics,metricName:"libp2p_connection_monitor_ping_time_milliseconds"})}[Symbol.toStringTag]="@libp2p/connection-monitor";[Fn]=["@libp2p/connection-monitor"];start(){this.abortController=new AbortController,this.abortController.signal,this.heartbeatInterval=setInterval(()=>{this.components.connectionManager.getConnections().forEach(e=>{Promise.resolve().then(async()=>{let t=Date.now();try{let n=this.timeout.getTimeoutSignal({signal:this.abortController?.signal}),s=await e.newStream(this.protocol,{signal:n,runOnLimitedConnection:!0}),o=Da(s);t=Date.now(),await Promise.all([o.write(dn(ym),{signal:n}),o.read(ym,{signal:n})]),e.rtt=Date.now()-t,await o.unwrap().close({signal:n})}catch(n){if(n.name!=="UnsupportedProtocolError")throw n;e.rtt=(Date.now()-t)/2}}).catch(t=>{this.log.error("error during heartbeat",t),this.abortConnectionOnPingFailure?(this.log.error("aborting connection due to ping failure"),e.abort(t)):this.log("connection ping failed, but not aborting due to abortConnectionOnPingFailure flag")})})},this.pingIntervalMs)}stop(){this.abortController?.abort(),this.heartbeatInterval!=null&&clearInterval(this.heartbeatInterval)}};function nx(r){return r[Symbol.asyncIterator]!=null}function sx(...r){let e=[];for(let t of r)nx(t)||e.push(t);return e.length===r.length?function*(){for(let t of e)yield*t}():async function*(){let t=Ea({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(r.map(async n=>{for await(let s of n)t.push(s)})),t.end()}catch(n){t.end(n)}}),yield*t}()}var Fs=sx;var Ma=class{routers;started;components;constructor(e,t){this.routers=t.routers??[],this.started=!1,this.components=e,this.findProviders=e.metrics?.traceFunction("libp2p.contentRouting.findProviders",this.findProviders.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,cid:n.toString()}),getAttributesFromYieldedValue:(n,s)=>({...s,providers:[...Array.isArray(s.providers)?s.providers:[],n.id.toString()]})})??this.findProviders,this.provide=e.metrics?.traceFunction("libp2p.contentRouting.provide",this.provide.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,cid:n.toString()})})??this.provide,this.cancelReprovide=e.metrics?.traceFunction("libp2p.contentRouting.cancelReprovide",this.cancelReprovide.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,cid:n.toString()})})??this.cancelReprovide,this.put=e.metrics?.traceFunction("libp2p.contentRouting.put",this.put.bind(this),{optionsIndex:2,getAttributesFromArgs:([n])=>({key:z(n,"base36")})})??this.put,this.get=e.metrics?.traceFunction("libp2p.contentRouting.get",this.get.bind(this),{optionsIndex:1,getAttributesFromArgs:([n])=>({key:z(n,"base36")})})??this.get}[Symbol.toStringTag]="@libp2p/content-routing";isStarted(){return this.started}async start(){this.started=!0}async stop(){this.started=!1}async*findProviders(e,t={}){if(this.routers.length===0)throw new kn("No content routers available");let n=this,s=new Sr;for await(let o of Fs(...n.routers.map(i=>i.findProviders(e,t))))o!=null&&(o.multiaddrs.length>0&&await this.components.peerStore.merge(o.id,{multiaddrs:o.multiaddrs}),!s.has(o.id)&&(s.add(o.id),yield o))}async provide(e,t={}){if(this.routers.length===0)throw new kn("No content routers available");await Promise.all(this.routers.map(async n=>{await n.provide(e,t)}))}async cancelReprovide(e,t={}){if(this.routers.length===0)throw new kn("No content routers available");await Promise.all(this.routers.map(async n=>{await n.cancelReprovide(e,t)}))}async put(e,t,n){if(!this.isStarted())throw new bt;await Promise.all(this.routers.map(async s=>{await s.put(e,t,n)}))}async get(e,t){if(!this.isStarted())throw new bt;return Promise.any(this.routers.map(async n=>n.get(e,t)))}};var Oa=globalThis.CustomEvent??Event;async function*Qu(r,e={}){let t=e.concurrency??1/0;t<1&&(t=1/0);let n=e.ordered==null?!1:e.ordered,s=new EventTarget,o=[],i=ue(),a=ue(),c=!1,l,u=!1;s.addEventListener("task-complete",()=>{a.resolve()}),Promise.resolve().then(async()=>{try{for await(let p of r){if(o.length===t&&(i=ue(),await i.promise),u)break;let g={done:!1};o.push(g),p().then(h=>{g.done=!0,g.ok=!0,g.value=h,s.dispatchEvent(new Oa("task-complete"))},h=>{g.done=!0,g.err=h,s.dispatchEvent(new Oa("task-complete"))})}c=!0,s.dispatchEvent(new Oa("task-complete"))}catch(p){l=p,s.dispatchEvent(new Oa("task-complete"))}});function f(){return n?o[0]?.done:!!o.find(p=>p.done)}function*d(){for(;o.length>0&&o[0].done;){let p=o[0];if(o.shift(),p.ok)yield p.value;else throw u=!0,i.resolve(),p.err;i.resolve()}}function*m(){for(;f();)for(let p=0;p<o.length;p++)if(o[p].done){let g=o[p];if(o.splice(p,1),p--,g.ok)yield g.value;else throw u=!0,i.resolve(),g.err;i.resolve()}}for(;;){if(f()||(a=ue(),await a.promise),l!=null)throw l;if(n?yield*d():yield*m(),c&&o.length===0)break}}var Ua=class{log;peerId;peerStore;routers;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-routing"),this.peerId=e.peerId,this.peerStore=e.peerStore,this.routers=t.routers??[],this.findPeer=e.metrics?.traceFunction("libp2p.peerRouting.findPeer",this.findPeer.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,peer:n.toString()})})??this.findPeer,this.getClosestPeers=e.metrics?.traceFunction("libp2p.peerRouting.getClosestPeers",this.getClosestPeers.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,key:z(n,"base36")}),getAttributesFromYieldedValue:(n,s)=>({...s,peers:[...Array.isArray(s.peers)?s.peers:[],n.id.toString()]})})??this.getClosestPeers}[Symbol.toStringTag]="@libp2p/peer-routing";async findPeer(e,t){if(this.routers.length===0)throw new Ms("No peer routers available");if(e.toString()===this.peerId.toString())throw new ca("Should not try to find self");let n=this,s=Fs(...this.routers.map(o=>async function*(){try{yield await o.findPeer(e,t)}catch(i){n.log.error(i)}}()));for await(let o of s)if(o!=null)return o.multiaddrs.length>0&&await this.peerStore.merge(o.id,{multiaddrs:o.multiaddrs}),o;throw new js}async*getClosestPeers(e,t={}){if(this.routers.length===0)throw new Ms("No peer routers available");let n=this,s=_s(1024);for await(let o of Qu(async function*(){let i=Fs(...n.routers.map(a=>a.getClosestPeers(e,t)));for await(let a of i)yield async()=>{if(a.multiaddrs.length===0)try{a=await n.findPeer(a.id,{...t,useCache:!1})}catch(c){n.log.error("could not find peer multiaddrs",c);return}return a}}()))o!=null&&(o.multiaddrs.length>0&&await this.peerStore.merge(o.id,{multiaddrs:o.multiaddrs}),!s.has(o.id.toMultihash().bytes)&&(s.add(o.id.toMultihash().bytes),yield o))}};var Fa=class extends xt{peerRouting;log;walking;walkers;shutdownController;walkController;needNext;constructor(e){super(),this.log=e.logger.forComponent("libp2p:random-walk"),this.peerRouting=e.peerRouting,this.walkers=0,this.walking=!1,this.shutdownController=new AbortController,this.shutdownController.signal}[Symbol.toStringTag]="@libp2p/random-walk";start(){this.shutdownController=new AbortController,this.shutdownController.signal}stop(){this.shutdownController.abort()}async*walk(e){this.walking||this.startWalk(),this.walkers++;let t=Or([this.shutdownController.signal,e?.signal]);try{for(;;)this.needNext?.resolve(),this.needNext=ue(),yield(await Ln(this,"walk:peer",t,{errorEvent:"walk:error"})).detail}finally{t.clear(),this.walkers--,this.walkers===0&&(this.walkController?.abort(),this.walkController=void 0)}}startWalk(){this.walking=!0,this.walkController=new AbortController,this.walkController.signal;let e=Or([this.walkController.signal,this.shutdownController.signal]);let t=Date.now(),n=0;Promise.resolve().then(async()=>{for(this.log("start walk");this.walkers>0;)try{let s=dn(32),o=Date.now();for await(let i of this.peerRouting.getClosestPeers(s,{signal:e}))e.aborted&&this.log("aborting walk"),e.throwIfAborted(),this.log("found peer %p after %dms for %d walkers",i.id,Date.now()-o,this.walkers),n++,this.safeDispatchEvent("walk:peer",{detail:i}),this.walkers===1&&this.needNext!=null&&(this.log("wait for need next"),await ir(this.needNext.promise,e)),o=Date.now();this.log("walk iteration for %b and %d walkers finished, found %d peers",s,this.walkers,n)}catch(s){this.log.error("randomwalk errored",s),this.safeDispatchEvent("walk:error",{detail:s})}this.log("no walkers left, ended walk")}).catch(s=>{this.log.error("randomwalk errored",s)}).finally(()=>{this.log("finished walk, found %d peers after %dms",n,Date.now()-t),this.walking=!1})}};var ef=32,tf=64,Va=class{log;topologies;handlers;components;constructor(e){this.log=e.logger.forComponent("libp2p:registrar"),this.topologies=new Map,this.handlers=new Map,this.components=e,this._onDisconnect=this._onDisconnect.bind(this),this._onPeerUpdate=this._onPeerUpdate.bind(this),this._onPeerIdentify=this._onPeerIdentify.bind(this),this.components.events.addEventListener("peer:disconnect",this._onDisconnect),this.components.events.addEventListener("peer:update",this._onPeerUpdate),this.components.events.addEventListener("peer:identify",this._onPeerIdentify)}[Symbol.toStringTag]="@libp2p/registrar";getProtocols(){return Array.from(new Set([...this.handlers.keys()])).sort()}getHandler(e){let t=this.handlers.get(e);if(t==null)throw new la(`No handler registered for protocol ${e}`);return t}getTopologies(e){let t=this.topologies.get(e);return t==null?[]:[...t.values()]}async handle(e,t,n){if(this.handlers.has(e)&&n?.force!==!0)throw new ua(`Handler already registered for protocol ${e}`);let s=Ti.bind({ignoreUndefined:!0})({maxInboundStreams:ef,maxOutboundStreams:tf},n);this.handlers.set(e,{handler:t,options:s}),await this.components.peerStore.merge(this.components.peerId,{protocols:[e]})}async unhandle(e){(Array.isArray(e)?e:[e]).forEach(n=>{this.handlers.delete(n)}),await this.components.peerStore.patch(this.components.peerId,{protocols:this.getProtocols()})}async register(e,t){if(t==null)throw new D("invalid topology");let n=`${(Math.random()*1e9).toString(36)}${Date.now()}`,s=this.topologies.get(e);return s==null&&(s=new Map,this.topologies.set(e,s)),s.set(n,t),n}unregister(e){for(let[t,n]of this.topologies.entries())n.has(e)&&(n.delete(e),n.size===0&&this.topologies.delete(t))}_onDisconnect(e){let t=e.detail;this.components.peerStore.get(t).then(n=>{for(let s of n.protocols){let o=this.topologies.get(s);if(o!=null)for(let i of o.values())i.filter?.has(t)!==!1&&(i.filter?.remove(t),i.onDisconnect?.(t))}}).catch(n=>{n.name!=="NotFoundError"&&this.log.error("could not inform topologies of disconnecting peer %p",t,n)})}_onPeerUpdate(e){let{peer:t,previous:n}=e.detail,s=(n?.protocols??[]).filter(o=>!t.protocols.includes(o));for(let o of s){let i=this.topologies.get(o);if(i!=null)for(let a of i.values())a.filter?.has(t.id)!==!1&&(a.filter?.remove(t.id),a.onDisconnect?.(t.id))}}_onPeerIdentify(e){let t=e.detail.protocols,n=e.detail.connection,s=e.detail.peerId;for(let o of t){let i=this.topologies.get(o);if(i!=null)for(let a of i.values())n.limits!=null&&a.notifyOnLimitedConnection!==!0||a.filter?.has(s)!==!0&&(a.filter?.add(s),a.onConnect?.(s,n))}}};var rf=class extends Map{metric;constructor(e){super();let{name:t,metrics:n}=e;this.metric=n.registerMetric(t),this.updateComponentMetric()}set(e,t){return super.set(e,t),this.updateComponentMetric(),this}delete(e){let t=super.delete(e);return this.updateComponentMetric(),t}clear(){super.clear(),this.updateComponentMetric()}updateComponentMetric(){this.metric.update(this.size)}};function wm(r){let{name:e,metrics:t}=r,n;return t!=null?n=new rf({name:e,metrics:t}):n=new Map,n}var Ha=class{log;components;transports;listeners;faultTolerance;started;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:transports"),this.components=e,this.started=!1,this.transports=new Map,this.listeners=wm({name:"libp2p_transport_manager_listeners",metrics:this.components.metrics}),this.faultTolerance=t.faultTolerance??Ft.FATAL_ALL}[Symbol.toStringTag]="@libp2p/transport-manager";add(e){let t=e[Symbol.toStringTag];if(t==null)throw new D("Transport must have a valid tag");if(this.transports.has(t))throw new D(`There is already a transport with the tag ${t}`);this.log("adding transport %s",t),this.transports.set(t,e),this.listeners.has(t)||this.listeners.set(t,[])}isStarted(){return this.started}start(){this.started=!0}async afterStart(){let e=this.components.addressManager.getListenAddrs();await this.listen(e)}async stop(){let e=[];for(let[t,n]of this.listeners)for(this.log("closing listeners for %s",t);n.length>0;){let s=n.pop();s!=null&&e.push(s.close())}await Promise.all(e),this.log("all listeners closed");for(let t of this.listeners.keys())this.listeners.set(t,[]);this.started=!1}async dial(e,t){let n=this.dialTransportForMultiaddr(e);if(n==null)throw new ha(`No transport available for address ${String(e)}`);return t?.onProgress?.(new fe("transport-manager:selected-transport",n[Symbol.toStringTag])),n.dial(e,{...t,upgrader:this.components.upgrader})}getAddrs(){let e=[];for(let t of this.listeners.values())for(let n of t)e=[...e,...n.getAddrs()];return e}getTransports(){return Array.of(...this.transports.values())}getListeners(){return Array.of(...this.listeners.values()).flat()}dialTransportForMultiaddr(e){for(let t of this.transports.values())if(t.dialFilter([e]).length>0)return t}listenTransportForMultiaddr(e){for(let t of this.transports.values())if(t.listenFilter([e]).length>0)return t}async listen(e){if(!this.isStarted())throw new bt("Not started");if(e==null||e.length===0){this.log("no addresses were provided for listening, this node is dial only");return}let t=[];for(let[n,s]of this.transports.entries()){let o=s.listenFilter(e),i=[];for(let l of o){this.log("creating listener for %s on %a",n,l);let u=s.createListener({upgrader:this.components.upgrader}),f=this.listeners.get(n)??[];f==null&&(f=[],this.listeners.set(n,f)),f.push(u),u.addEventListener("listening",()=>{this.components.events.safeDispatchEvent("transport:listening",{detail:u})}),u.addEventListener("close",()=>{let d=f.findIndex(m=>m===u);f.splice(d,1),this.components.events.safeDispatchEvent("transport:close",{detail:u})}),i.push(u.listen(l))}if(i.length===0){t.push(n);continue}if((await Promise.allSettled(i)).find(l=>l.status==="fulfilled")==null&&this.faultTolerance!==Ft.NO_FATAL)throw new Dr(`Transport (${n}) could not listen on any available address`)}if(t.length===this.transports.size){let n=`no valid addresses were provided for transports [${t.join(", ")}]`;if(this.faultTolerance===Ft.FATAL_ALL)throw new Dr(n);this.log(`libp2p in dial mode only: ${n}`)}}async remove(e){let t=this.listeners.get(e)??[];this.log.trace("removing transport %s",e);let n=[];for(this.log.trace("closing listeners for %s",e);t.length>0;){let s=t.pop();s!=null&&n.push(s.close())}await Promise.all(n),this.transports.delete(e),this.listeners.delete(e)}async removeAll(){let e=[];for(let t of this.transports.keys())e.push(this.remove(t));await Promise.all(e)}};var Se="/multistream/1.0.0";var Ka=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},$a=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},qa=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"};function Vs(r,e={}){let t=Da(r,e);e.maxDataLength!=null&&e.maxLengthLength==null&&(e.maxLengthLength=de(e.maxDataLength));let n=e?.lengthDecoder??st,s=e?.lengthEncoder??Be;return{read:async i=>{let a=-1,c=new ye;for(;;){c.append(await t.read(1,i));try{a=n(c)}catch(l){if(l instanceof RangeError)continue;throw l}if(a<0)throw new Ka("Invalid message length");if(e?.maxLengthLength!=null&&c.byteLength>e.maxLengthLength)throw new qa("message length length too long");if(a>-1)break}if(e?.maxDataLength!=null&&a>e.maxDataLength)throw new $a("message length too long");return t.read(a,i)},write:async(i,a)=>{await t.write(new ye(s(i.byteLength),i),a)},writeV:async(i,a)=>{let c=new ye(...i.flatMap(l=>[s(l.byteLength),l]));await t.write(c,a)},unwrap:()=>t.unwrap()}}var ox=N(`
+`)}`:`${t} :`}};kd=Qt;C.Constructed=kd;Qt.NAME="CONSTRUCTED";var Po=class extends Te{fromBER(e,t,n){return t}toBER(e){return it}};Po.override="EndOfContentValueBlock";var Td,No=class extends Ee{constructor(e={}){super(e,Po),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}};Td=No;C.EndOfContent=Td;No.NAME=rs;var Ld,cn=class extends Ee{constructor(e={}){super(e,Te),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}fromBER(e,t,n){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=n,t+n>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+n}toBER(e,t){let n=new ArrayBuffer(2);if(!e){let s=new Uint8Array(n);s[0]=5,s[1]=0}return t&&t.write(n),n}onAsciiEncoding(){return`${this.constructor.NAME}`}};Ld=cn;C.Null=Ld;cn.NAME="NULL";var Do=class extends Nt(Te){constructor({value:e,...t}={}){super(t),t.valueHex?this.valueHexView=H.BufferSourceConverter.toUint8Array(t.valueHex):this.valueHexView=new Uint8Array(1),e&&(this.value=e)}get value(){for(let e of this.valueHexView)if(e>0)return!0;return!1}set value(e){this.valueHexView[0]=e?255:0}fromBER(e,t,n){let s=H.BufferSourceConverter.toUint8Array(e);return Pt(this,s,t,n)?(this.valueHexView=s.subarray(t,t+n),n>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,yl.call(this),this.blockLength=n,t+n):-1}toBER(){return this.valueHexView.slice()}toJSON(){return{...super.toJSON(),value:this.value}}};Do.NAME="BooleanValueBlock";var Pd,Ro=class extends Ee{constructor(e={}){super(e,Do),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.getValue}`}};Pd=Ro;C.Boolean=Pd;Ro.NAME="BOOLEAN";var Mo=class extends Nt(ht){constructor({isConstructed:e=!1,...t}={}){super(t),this.isConstructed=e}fromBER(e,t,n){let s=0;if(this.isConstructed){if(this.isHexOnly=!1,s=ht.prototype.fromBER.call(this,e,t,n),s===-1)return s;for(let o=0;o<this.value.length;o++){let i=this.value[o].constructor.NAME;if(i===rs){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(i!==_d)return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,s=super.fromBER(e,t,n),this.blockLength=n;return s}toBER(e,t){return this.isConstructed?ht.prototype.toBER.call(this,e,t):e?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),isConstructed:this.isConstructed}}};Mo.NAME="OctetStringValueBlock";var Nd,Oo=class r extends Ee{constructor({idBlock:e={},lenBlock:t={},...n}={}){var s,o;(s=n.isConstructed)!==null&&s!==void 0||(n.isConstructed=!!(!((o=n.value)===null||o===void 0)&&o.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},Mo),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,n){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,n===0)return this.idBlock.error.length===0&&(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length===0&&(this.blockLength+=this.lenBlock.blockLength),t;if(!this.valueBlock.isConstructed){let o=(e instanceof ArrayBuffer?new Uint8Array(e):e).subarray(t,t+n);try{if(o.byteLength){let i=fi(o,0,o.byteLength);i.offset!==-1&&i.offset===n&&(this.valueBlock.value=[i.result])}}catch{}}return super.fromBER(e,t,n)}onAsciiEncoding(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?Qt.prototype.onAsciiEncoding.call(this):`${this.constructor.NAME} : ${H.Convert.ToHex(this.valueBlock.valueHexView)}`}getValue(){if(!this.idBlock.isConstructed)return this.valueBlock.valueHexView.slice().buffer;let e=[];for(let t of this.valueBlock.value)t instanceof r&&e.push(t.valueBlock.valueHexView);return H.BufferSourceConverter.concat(e)}};Nd=Oo;C.OctetString=Nd;Oo.NAME=_d;var Uo=class extends Nt(ht){constructor({unusedBits:e=0,isConstructed:t=!1,...n}={}){super(n),this.unusedBits=e,this.isConstructed=t,this.blockLength=this.valueHexView.byteLength}fromBER(e,t,n){if(!n)return t;let s=-1;if(this.isConstructed){if(s=ht.prototype.fromBER.call(this,e,t,n),s===-1)return s;for(let a of this.value){let c=a.constructor.NAME;if(c===rs){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(c!==Cd)return this.error="BIT STRING may consists of BIT STRINGs only",-1;let l=a.valueBlock;if(this.unusedBits>0&&l.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;this.unusedBits=l.unusedBits}return s}let o=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let i=o.subarray(t,t+n);if(this.unusedBits=i[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){let a=i.subarray(1);try{if(a.byteLength){let c=fi(a,0,a.byteLength);c.offset!==-1&&c.offset===n-1&&(this.value=[c.result])}}catch{}}return this.valueHexView=i.subarray(1),this.blockLength=i.length,t+n}toBER(e,t){if(this.isConstructed)return ht.prototype.toBER.call(this,e,t);if(e)return new ArrayBuffer(this.valueHexView.byteLength+1);if(!this.valueHexView.byteLength)return it;let n=new Uint8Array(this.valueHexView.length+1);return n[0]=this.unusedBits,n.set(this.valueHexView,1),n.buffer}toJSON(){return{...super.toJSON(),unusedBits:this.unusedBits,isConstructed:this.isConstructed}}};Uo.NAME="BitStringValueBlock";var Dd,ln=class extends Ee{constructor({idBlock:e={},lenBlock:t={},...n}={}){var s,o;(s=n.isConstructed)!==null&&s!==void 0||(n.isConstructed=!!(!((o=n.value)===null||o===void 0)&&o.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},Uo),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}fromBER(e,t,n){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,n)}onAsciiEncoding(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return Qt.prototype.onAsciiEncoding.call(this);{let e=[],t=this.valueBlock.valueHexView;for(let s of t)e.push(s.toString(2).padStart(8,"0"));let n=e.join("");return`${this.constructor.NAME} : ${n.substring(0,n.length-this.valueBlock.unusedBits)}`}}};Dd=ln;C.BitString=Dd;ln.NAME=Cd;var Rd;function yy(r,e){let t=new Uint8Array([0]),n=new Uint8Array(r),s=new Uint8Array(e),o=n.slice(0),i=o.length-1,a=s.slice(0),c=a.length-1,l=0,u=c<i?i:c,f=0;for(let d=u;d>=0;d--,f++){switch(!0){case f<a.length:l=o[i-f]+a[c-f]+t[0];break;default:l=o[i-f]+t[0]}switch(t[0]=l/10,!0){case f>=o.length:o=_o(new Uint8Array([l%10]),o);break;default:o[i-f]=l%10}}return t[0]>0&&(o=_o(t,o)),o}function Sd(r){if(r>=es.length)for(let e=es.length;e<=r;e++){let t=new Uint8Array([0]),n=es[e-1].slice(0);for(let s=n.length-1;s>=0;s--){let o=new Uint8Array([(n[s]<<1)+t[0]]);t[0]=o[0]/10,n[s]=o[0]%10}t[0]>0&&(n=_o(t,n)),es.push(n)}return es[r]}function wy(r,e){let t=0,n=new Uint8Array(r),s=new Uint8Array(e),o=n.slice(0),i=o.length-1,a=s.slice(0),c=a.length-1,l,u=0;for(let f=c;f>=0;f--,u++)switch(l=o[i-u]-a[c-u]-t,!0){case l<0:t=1,o[i-u]=l+10;break;default:t=0,o[i-u]=l}if(t>0)for(let f=i-c+1;f>=0;f--,u++)if(l=o[i-u]-t,l<0)t=1,o[i-u]=l+10;else{t=0,o[i-u]=l;break}return o.slice()}var ns=class extends Nt(Te){constructor({value:e,...t}={}){super(t),this._valueDec=0,t.valueHex&&this.setValueHex(),e!==void 0&&(this.valueDec=e)}setValueHex(){this.valueHexView.length>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,this.valueHexView.length>0&&(this._valueDec=yl.call(this)))}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this.valueHexView=new Uint8Array(vd(e))}get valueDec(){return this._valueDec}fromDER(e,t,n,s=0){let o=this.fromBER(e,t,n);if(o===-1)return o;let i=this.valueHexView;return i[0]===0&&i[1]&128?this.valueHexView=i.subarray(1):s!==0&&i.length<s&&(s-i.length>1&&(s=i.length+1),this.valueHexView=i.subarray(s-i.length)),o}toDER(e=!1){let t=this.valueHexView;switch(!0){case(t[0]&128)!==0:{let n=new Uint8Array(this.valueHexView.length+1);n[0]=0,n.set(t,1),this.valueHexView=n}break;case(t[0]===0&&(t[1]&128)===0):this.valueHexView=this.valueHexView.subarray(1);break}return this.toBER(e)}fromBER(e,t,n){let s=super.fromBER(e,t,n);return s===-1||this.setValueHex(),s}toBER(e){return e?new ArrayBuffer(this.valueHexView.length):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}toString(){let e=this.valueHexView.length*8-1,t=new Uint8Array(this.valueHexView.length*8/3),n=0,s,o=this.valueHexView,i="",a=!1;for(let c=o.byteLength-1;c>=0;c--){s=o[c];for(let l=0;l<8;l++){if((s&1)===1)switch(n){case e:t=wy(Sd(n),t),i="-";break;default:t=yy(t,Sd(n))}n++,s>>=1}}for(let c=0;c<t.length;c++)t[c]&&(a=!0),a&&(i+=Ad.charAt(t[c]));return a===!1&&(i+=Ad.charAt(0)),i}};Rd=ns;ns.NAME="IntegerValueBlock";Object.defineProperty(Rd.prototype,"valueHex",{set:function(r){this.valueHexView=new Uint8Array(r),this.setValueHex()},get:function(){return this.valueHexView.slice().buffer}});var Md,Ae=class r extends Ee{constructor(e={}){super(e,ns),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}toBigInt(){return Co(),BigInt(this.valueBlock.toString())}static fromBigInt(e){Co();let t=BigInt(e),n=new ts,s=t.toString(16).replace(/^-/,""),o=new Uint8Array(H.Convert.FromHex(s));if(t<0){let a=new Uint8Array(o.length+(o[0]&128?1:0));a[0]|=128;let l=BigInt(`0x${H.Convert.ToHex(a)}`)+t,u=H.BufferSourceConverter.toUint8Array(H.Convert.FromHex(l.toString(16)));u[0]|=128,n.write(u)}else o[0]&128&&n.write(new Uint8Array([0])),n.write(o);return new r({valueHex:n.final()})}convertToDER(){let e=new r({valueHex:this.valueBlock.valueHexView});return e.valueBlock.toDER(),e}convertFromDER(){return new r({valueHex:this.valueBlock.valueHexView[0]===0?this.valueBlock.valueHexView.subarray(1):this.valueBlock.valueHexView})}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()}`}};Md=Ae;C.Integer=Md;Ae.NAME="INTEGER";var Od,Fo=class extends Ae{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}};Od=Fo;C.Enumerated=Od;Fo.NAME="ENUMERATED";var ss=class extends Nt(Te){constructor({valueDec:e=-1,isFirstSid:t=!1,...n}={}){super(n),this.valueDec=e,this.isFirstSid=t}fromBER(e,t,n){if(!n)return t;let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let o=s.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=o[a]&127,this.blockLength++,!!(o[a]&128));a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,o[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=wr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}set valueBigInt(e){Co();let t=BigInt(e).toString(2);for(;t.length%7;)t="0"+t;let n=new Uint8Array(t.length/7);for(let s=0;s<n.length;s++)n[s]=parseInt(t.slice(s*7,s*7+7),2)+(s+1<n.length?128:0);this.fromBER(n.buffer,0,n.length)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let s=this.valueHexView,o=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)o[i]=s[i]|128;return o[this.blockLength-1]=s[this.blockLength-1],o.buffer}let t=Jt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",it;let n=new Uint8Array(t.byteLength);if(!e){let s=new Uint8Array(t),o=t.byteLength-1;for(let i=0;i<o;i++)n[i]=s[i]|128;n[o]=s[o]}return n}toString(){let e="";if(this.isHexOnly)e=H.Convert.ToHex(this.valueHexView);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec,isFirstSid:this.isFirstSid}}};ss.NAME="sidBlock";var Vo=class extends Te{constructor({value:e=fn,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let s=t;for(;n>0;){let o=new ss;if(s=o.fromBER(e,s,n),s===-1)return this.blockLength=0,this.error=o.error,s;this.value.length===0&&(o.isFirstSid=!0),this.blockLength+=o.blockLength,n-=o.blockLength,this.value.push(o)}return s}toBER(e){let t=[];for(let n=0;n<this.value.length;n++){let s=this.value[n].toBER(e);if(s.byteLength===0)return this.error=this.value[n].error,it;t.push(s)}return wl(t)}fromString(e){this.value=[];let t=0,n=0,s="",o=!1;do if(n=e.indexOf(".",t),n===-1?s=e.substring(t):s=e.substring(t,n),t=n+1,o){let i=this.value[0],a=0;switch(i.valueDec){case 0:break;case 1:a=40;break;case 2:a=80;break;default:this.value=[];return}let c=parseInt(s,10);if(isNaN(c))return;i.valueDec=c+a,o=!1}else{let i=new ss;if(s>Number.MAX_SAFE_INTEGER){Co();let a=BigInt(s);i.valueBigInt=a}else if(i.valueDec=parseInt(s,10),isNaN(i.valueDec))return;this.value.length||(i.isFirstSid=!0,o=!0),this.value.push(i)}while(n!==-1)}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let s=this.value[n].toString();n!==0&&(e=`${e}.`),t?(s=`{${s}}`,this.value[n].isFirstSid?e=`2.{${s} - 80}`:e+=s):e+=s}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};Vo.NAME="ObjectIdentifierValueBlock";var Ud,un=class extends Ee{constructor(e={}){super(e,Vo),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};Ud=un;C.ObjectIdentifier=Ud;un.NAME="OBJECT IDENTIFIER";var os=class extends Nt(kt){constructor({valueDec:e=0,...t}={}){super(t),this.valueDec=e}fromBER(e,t,n){if(n===0)return t;let s=H.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let o=s.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=o[a]&127,this.blockLength++,!!(o[a]&128));a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,o[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=wr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let s=this.valueHexView,o=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)o[i]=s[i]|128;return o[this.blockLength-1]=s[this.blockLength-1],o.buffer}let t=Jt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",it;let n=new Uint8Array(t.byteLength);if(!e){let s=new Uint8Array(t),o=t.byteLength-1;for(let i=0;i<o;i++)n[i]=s[i]|128;n[o]=s[o]}return n.buffer}toString(){let e="";return this.isHexOnly?e=H.Convert.ToHex(this.valueHexView):e=this.valueDec.toString(),e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}};os.NAME="relativeSidBlock";var Ho=class extends Te{constructor({value:e=fn,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let s=t;for(;n>0;){let o=new os;if(s=o.fromBER(e,s,n),s===-1)return this.blockLength=0,this.error=o.error,s;this.blockLength+=o.blockLength,n-=o.blockLength,this.value.push(o)}return s}toBER(e,t){let n=[];for(let s=0;s<this.value.length;s++){let o=this.value[s].toBER(e);if(o.byteLength===0)return this.error=this.value[s].error,it;n.push(o)}return wl(n)}fromString(e){this.value=[];let t=0,n=0,s="";do{n=e.indexOf(".",t),n===-1?s=e.substring(t):s=e.substring(t,n),t=n+1;let o=new os;if(o.valueDec=parseInt(s,10),isNaN(o.valueDec))return!0;this.value.push(o)}while(n!==-1);return!0}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let s=this.value[n].toString();n!==0&&(e=`${e}.`),t&&(s=`{${s}}`),e+=s}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};Ho.NAME="RelativeObjectIdentifierValueBlock";var Fd,Ko=class extends Ee{constructor(e={}){super(e,Ho),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};Fd=Ko;C.RelativeObjectIdentifier=Fd;Ko.NAME="RelativeObjectIdentifier";var Vd,Tt=class extends Qt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}};Vd=Tt;C.Sequence=Vd;Tt.NAME="SEQUENCE";var Hd,$o=class extends Qt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}};Hd=$o;C.Set=Hd;$o.NAME="SET";var qo=class extends Nt(Te){constructor({...e}={}){super(e),this.isHexOnly=!0,this.value=fn}toJSON(){return{...super.toJSON(),value:this.value}}};qo.NAME="StringValueBlock";var zo=class extends qo{};zo.NAME="SimpleStringValueBlock";var Ue=class extends ko{constructor({...e}={}){super(e,zo)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t);for(let s=0;s<t;s++)n[s]=e.charCodeAt(s);this.valueBlock.value=e}};Ue.NAME="SIMPLE STRING";var Go=class extends Ue{fromBuffer(e){this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e);try{this.valueBlock.value=H.Convert.ToUtf8String(e)}catch(t){this.warnings.push(`Error during "decodeURIComponent": ${t}, using raw string`),this.valueBlock.value=H.Convert.ToBinary(e)}}fromString(e){this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf8String(e)),this.valueBlock.value=e}};Go.NAME="Utf8StringValueBlock";var Kd,Lt=class extends Go{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}};Kd=Lt;C.Utf8String=Kd;Lt.NAME="UTF8String";var Wo=class extends Ue{fromBuffer(e){this.valueBlock.value=H.Convert.ToUtf16String(e),this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e)}fromString(e){this.valueBlock.value=e,this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf16String(e))}};Wo.NAME="BmpStringValueBlock";var $d,jo=class extends Wo{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}};$d=jo;C.BmpString=$d;jo.NAME="BMPString";var Zo=class extends Ue{fromBuffer(e){let t=ArrayBuffer.isView(e)?e.slice().buffer:e.slice(0),n=new Uint8Array(t);for(let s=0;s<n.length;s+=4)n[s]=n[s+3],n[s+1]=n[s+2],n[s+2]=0,n[s+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t*4);for(let s=0;s<t;s++){let o=Jt(e.charCodeAt(s),8),i=new Uint8Array(o);if(i.length>4)continue;let a=4-i.length;for(let c=i.length-1;c>=0;c--)n[s*4+c+a]=i[c]}this.valueBlock.value=e}};Zo.NAME="UniversalStringValueBlock";var qd,Xo=class extends Zo{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}};qd=Xo;C.UniversalString=qd;Xo.NAME="UniversalString";var zd,Yo=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}};zd=Yo;C.NumericString=zd;Yo.NAME="NumericString";var Gd,Jo=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}};Gd=Jo;C.PrintableString=Gd;Jo.NAME="PrintableString";var Wd,Qo=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}};Wd=Qo;C.TeletexString=Wd;Qo.NAME="TeletexString";var jd,ei=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}};jd=ei;C.VideotexString=jd;ei.NAME="VideotexString";var Zd,ti=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}};Zd=ti;C.IA5String=Zd;ti.NAME="IA5String";var Xd,ri=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}};Xd=ri;C.GraphicString=Xd;ri.NAME="GraphicString";var Yd,is=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}};Yd=is;C.VisibleString=Yd;is.NAME="VisibleString";var Jd,ni=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}};Jd=ni;C.GeneralString=Jd;ni.NAME="GeneralString";var Qd,si=class extends Ue{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}};Qd=si;C.CharacterString=Qd;si.NAME="CharacterString";var eh,as=class extends is{constructor({value:e,valueDate:t,...n}={}){if(super(n),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,e){this.fromString(e),this.valueBlock.valueHexView=new Uint8Array(e.length);for(let s=0;s<e.length;s++)this.valueBlock.valueHexView[s]=e.charCodeAt(s)}t&&(this.fromDate(t),this.valueBlock.valueHexView=new Uint8Array(this.toBuffer())),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e)))}toBuffer(){let e=this.toString(),t=new ArrayBuffer(e.length),n=new Uint8Array(t);for(let s=0;s<e.length;s++)n[s]=e.charCodeAt(s);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){let n=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig.exec(e);if(n===null){this.error="Wrong input string for conversion";return}let s=parseInt(n[1],10);s>=50?this.year=1900+s:this.year=2e3+s,this.month=parseInt(n[2],10),this.day=parseInt(n[3],10),this.hour=parseInt(n[4],10),this.minute=parseInt(n[5],10),this.second=parseInt(n[6],10)}toString(e="iso"){if(e==="iso"){let t=new Array(7);return t[0]=qe(this.year<2e3?this.year-1900:this.year-2e3,2),t[1]=qe(this.month,2),t[2]=qe(this.day,2),t[3]=qe(this.hour,2),t[4]=qe(this.minute,2),t[5]=qe(this.second,2),t[6]="Z",t.join("")}return super.toString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.toDate().toISOString()}`}toJSON(){return{...super.toJSON(),year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second}}};eh=as;C.UTCTime=eh;as.NAME="UTCTime";var th,oi=class extends as{constructor(e={}){var t;super(e),(t=this.millisecond)!==null&&t!==void 0||(this.millisecond=0),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromDate(e){super.fromDate(e),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t=!1,n="",s="",o=0,i,a=0,c=0;if(e[e.length-1]==="Z")n=e.substring(0,e.length-1),t=!0;else{let f=new Number(e[e.length-1]);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");n=e}if(t){if(n.indexOf("+")!==-1)throw new Error("Wrong input string for conversion");if(n.indexOf("-")!==-1)throw new Error("Wrong input string for conversion")}else{let f=1,d=n.indexOf("+"),m="";if(d===-1&&(d=n.indexOf("-"),f=-1),d!==-1){if(m=n.substring(d+1),n=n.substring(0,d),m.length!==2&&m.length!==4)throw new Error("Wrong input string for conversion");let p=parseInt(m.substring(0,2),10);if(isNaN(p.valueOf()))throw new Error("Wrong input string for conversion");if(a=f*p,m.length===4){if(p=parseInt(m.substring(2,4),10),isNaN(p.valueOf()))throw new Error("Wrong input string for conversion");c=f*p}}}let l=n.indexOf(".");if(l===-1&&(l=n.indexOf(",")),l!==-1){let f=new Number(`0${n.substring(l)}`);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");o=f.valueOf(),s=n.substring(0,l)}else s=n;switch(!0){case s.length===8:if(i=/(\d{4})(\d{2})(\d{2})/ig,l!==-1)throw new Error("Wrong input string for conversion");break;case s.length===10:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=60*o;this.minute=Math.floor(f),f=60*(f-this.minute),this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case s.length===12:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=60*o;this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case s.length===14:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=1e3*o;this.millisecond=Math.floor(f)}break;default:throw new Error("Wrong input string for conversion")}let u=i.exec(s);if(u===null)throw new Error("Wrong input string for conversion");for(let f=1;f<u.length;f++)switch(f){case 1:this.year=parseInt(u[f],10);break;case 2:this.month=parseInt(u[f],10);break;case 3:this.day=parseInt(u[f],10);break;case 4:this.hour=parseInt(u[f],10)+a;break;case 5:this.minute=parseInt(u[f],10)+c;break;case 6:this.second=parseInt(u[f],10);break;default:throw new Error("Wrong input string for conversion")}if(t===!1){let f=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=f.getUTCFullYear(),this.month=f.getUTCMonth(),this.day=f.getUTCDay(),this.hour=f.getUTCHours(),this.minute=f.getUTCMinutes(),this.second=f.getUTCSeconds(),this.millisecond=f.getUTCMilliseconds()}}toString(e="iso"){if(e==="iso"){let t=[];return t.push(qe(this.year,4)),t.push(qe(this.month,2)),t.push(qe(this.day,2)),t.push(qe(this.hour,2)),t.push(qe(this.minute,2)),t.push(qe(this.second,2)),this.millisecond!==0&&(t.push("."),t.push(qe(this.millisecond,3))),t.push("Z"),t.join("")}return super.toString(e)}toJSON(){return{...super.toJSON(),millisecond:this.millisecond}}};th=oi;C.GeneralizedTime=th;oi.NAME="GeneralizedTime";var rh,ii=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}};rh=ii;C.DATE=rh;ii.NAME="DATE";var nh,ai=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}};nh=ai;C.TimeOfDay=nh;ai.NAME="TimeOfDay";var sh,ci=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}};sh=ci;C.DateTime=sh;ci.NAME="DateTime";var oh,li=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}};oh=li;C.Duration=oh;li.NAME="Duration";var ih,ui=class extends Lt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}};ih=ui;C.TIME=ih;ui.NAME="TIME";function z(r,e="utf8"){let t=xo[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.encoder.encode(r).substring(1)}function dn(r){if(isNaN(r)||r<=0)throw new D("random bytes length must be a Number bigger than 0");return en(r)}var cs=class extends Error{constructor(e="An error occurred while signing a message"){super(e),this.name="SigningError"}},ls=class extends Error{constructor(e="An error occurred while verifying a message"){super(e),this.name="VerificationError"}},di=class extends Error{constructor(e="Missing Web Crypto API"){super(e),this.name="WebCryptoMissingError"}};var ah={get(r=globalThis){let e=r.crypto;if(e?.subtle==null)throw new di("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api");return e}};var er=ah;async function ch(r){let e=await er.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await xy(e);return{privateKey:t[0],publicKey:t[1]}}async function lh(r,e){let t=await er.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await er.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,e instanceof Uint8Array?e:e.subarray());return new Uint8Array(n,0,n.byteLength)}async function uh(r,e,t){let n=await er.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return er.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t instanceof Uint8Array?t:t.subarray())}async function xy(r){if(r.privateKey==null||r.publicKey==null)throw new D("Private and public key are required");return Promise.all([er.get().subtle.exportKey("jwk",r.privateKey),er.get().subtle.exportKey("jwk",r.publicKey)])}function vl(r){if(r.kty!=="RSA")throw new D("invalid key type");if(r.n==null)throw new D("invalid key modulus");return N(r.n,"base64url").length*8}var hn=class{type="RSA";_key;_raw;_multihash;constructor(e,t){this._key=e,this._multihash=t}get raw(){return this._raw==null&&(this._raw=us.jwkToPkix(this._key)),this._raw}toMultihash(){return this._multihash}toCID(){return pe.createV1(114,this._multihash)}toString(){return X.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}verify(e,t){return uh(this._key,t,e)}},fs=class{type="RSA";_key;_raw;publicKey;constructor(e,t){this._key=e,this.publicKey=t}get raw(){return this._raw==null&&(this._raw=us.jwkToPkcs1(this._key)),this._raw}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}sign(e){return lh(this._key,e)}};var hi=8192,El=18;function fh(r){let{result:e}=xl(r),t=e.valueBlock.value;return{n:pt(t[1]),e:pt(t[2]),d:pt(t[3]),p:pt(t[4]),q:pt(t[5]),dp:pt(t[6]),dq:pt(t[7]),qi:pt(t[8]),kty:"RSA",alg:"RS256"}}function vy(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new D("JWK was missing components");let t=new Tt({value:[new Ae({value:0}),Ae.fromBigInt(mt(N(r.n,"base64url"))),Ae.fromBigInt(mt(N(r.e,"base64url"))),Ae.fromBigInt(mt(N(r.d,"base64url"))),Ae.fromBigInt(mt(N(r.p,"base64url"))),Ae.fromBigInt(mt(N(r.q,"base64url"))),Ae.fromBigInt(mt(N(r.dp,"base64url"))),Ae.fromBigInt(mt(N(r.dq,"base64url"))),Ae.fromBigInt(mt(N(r.qi,"base64url")))]}).toBER();return new Uint8Array(t,0,t.byteLength)}function dh(r){let{result:e}=xl(r),t=e.valueBlock.value[1].valueBlock.value[0].valueBlock.value;return{kty:"RSA",n:pt(t[0]),e:pt(t[1])}}function Al(r){if(r.n==null||r.e==null)throw new D("JWK was missing components");let t=new Tt({value:[new Tt({value:[new un({value:"1.2.840.113549.1.1.1"}),new cn]}),new ln({valueHex:new Tt({value:[Ae.fromBigInt(mt(N(r.n,"base64url"))),Ae.fromBigInt(mt(N(r.e,"base64url")))]}).toBER()})]}).toBER();return new Uint8Array(t,0,t.byteLength)}function pt(r){let e=r.valueBlock.valueHexView;for(;e[0]===0;)e=e.subarray(1);return z(e,"base64url")}function mt(r){let e=[];return r.forEach(function(t){let n=t.toString(16);n.length%2>0&&(n=`0${n}`),e.push(n)}),BigInt("0x"+e.join(""))}function hh(r){let e=fh(r);return ph(e)}function Sl(r){let e=dh(r);if(vl(e)>hi)throw new Kr("Key size is too large");let t=on(dt.encode({Type:ge.RSA,Data:r})),n=Qe(El,t);return new hn(e,n)}function ph(r){if(vl(r)>hi)throw new D("Key size is too large");let e=mh(r),t=on(dt.encode({Type:ge.RSA,Data:Al(e.publicKey)})),n=Qe(El,t);return new fs(e.privateKey,new hn(e.publicKey,n))}async function _l(r){if(r>hi)throw new D("Key size is too large");let e=await ch(r),t=on(dt.encode({Type:ge.RSA,Data:Al(e.publicKey)})),n=Qe(El,t);return new fs(e.privateKey,new hn(e.publicKey,n))}function mh(r){if(r==null)throw new D("Missing key parameter");return{privateKey:r,publicKey:{kty:r.kty,n:r.n,e:r.e}}}var pi=class extends Qr{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,Rf(e);let n=qn(t);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let s=this.blockLen,o=new Uint8Array(s);o.set(n.length>s?e.create().update(n).digest():n);for(let i=0;i<o.length;i++)o[i]^=54;this.iHash.update(o),this.oHash=e.create();for(let i=0;i<o.length;i++)o[i]^=106;this.oHash.update(o),o.fill(0)}update(e){return Jr(this),this.iHash.update(e),this}digestInto(e){Jr(this),Yr(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:n,finished:s,destroyed:o,blockLen:i,outputLen:a}=this;return e=e,e.finished=s,e.destroyed=o,e.blockLen=i,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},Cl=(r,e,t)=>new pi(r,e).update(t).digest();Cl.create=(r,e)=>new pi(r,e);function gh(r){r.lowS!==void 0&&rt("lowS",r.lowS),r.prehash!==void 0&&rt("prehash",r.prehash)}function Ey(r){let e=Wn(r);ut(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:t,Fp:n,a:s}=e;if(t){if(!n.eql(s,n.ZERO))throw new Error("invalid endomorphism, can only be defined for Koblitz curves that have a=0");if(typeof t!="object"||typeof t.beta!="bigint"||typeof t.splitScalar!="function")throw new Error("invalid endomorphism, expected beta: bigint and splitScalar: function")}return Object.freeze({...e})}var{bytesToNumberBE:Ay,hexToBytes:Sy}=co,Il=class extends Error{constructor(e=""){super(e)}},Dt={Err:Il,_tlv:{encode:(r,e)=>{let{Err:t}=Dt;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length&1)throw new t("tlv.encode: unpadded data");let n=e.length/2,s=lr(n);if(s.length/2&128)throw new t("tlv.encode: long form length too big");let o=n>127?lr(s.length/2|128):"";return lr(r)+o+s+e},decode(r,e){let{Err:t}=Dt,n=0;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length<2||e[n++]!==r)throw new t("tlv.decode: wrong tlv");let s=e[n++],o=!!(s&128),i=0;if(!o)i=s;else{let c=s&127;if(!c)throw new t("tlv.decode(long): indefinite length not supported");if(c>4)throw new t("tlv.decode(long): byte length is too big");let l=e.subarray(n,n+c);if(l.length!==c)throw new t("tlv.decode: length bytes not complete");if(l[0]===0)throw new t("tlv.decode(long): zero leftmost byte");for(let u of l)i=i<<8|u;if(n+=c,i<128)throw new t("tlv.decode(long): not minimal encoding")}let a=e.subarray(n,n+i);if(a.length!==i)throw new t("tlv.decode: wrong value length");return{v:a,l:e.subarray(n+i)}}},_int:{encode(r){let{Err:e}=Dt;if(r<Rt)throw new e("integer: negative integers are not allowed");let t=lr(r);if(Number.parseInt(t[0],16)&8&&(t="00"+t),t.length&1)throw new e("unexpected DER parsing assertion: unpadded hex");return t},decode(r){let{Err:e}=Dt;if(r[0]&128)throw new e("invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("invalid signature integer: unnecessary leading zero");return Ay(r)}},toSig(r){let{Err:e,_int:t,_tlv:n}=Dt,s=typeof r=="string"?Sy(r):r;rn(s);let{v:o,l:i}=n.decode(48,s);if(i.length)throw new e("invalid signature: left bytes after parsing");let{v:a,l:c}=n.decode(2,o),{v:l,l:u}=n.decode(2,c);if(u.length)throw new e("invalid signature: left bytes after parsing");return{r:t.decode(a),s:t.decode(l)}},hexFromSig(r){let{_tlv:e,_int:t}=Dt,n=e.encode(2,t.encode(r.r)),s=e.encode(2,t.encode(r.s)),o=n+s;return e.encode(48,o)}},Rt=BigInt(0),xe=BigInt(1),JE=BigInt(2),yh=BigInt(3),QE=BigInt(4);function _y(r){let e=Ey(r),{Fp:t}=e,n=jt(e.n,e.nBitLength),s=e.toBytes||((g,h,w)=>{let x=h.toAffine();return It(Uint8Array.from([4]),t.toBytes(x.x),t.toBytes(x.y))}),o=e.fromBytes||(g=>{let h=g.subarray(1),w=t.fromBytes(h.subarray(0,t.BYTES)),x=t.fromBytes(h.subarray(t.BYTES,2*t.BYTES));return{x:w,y:x}});function i(g){let{a:h,b:w}=e,x=t.sqr(g),y=t.mul(x,g);return t.add(t.add(y,t.mul(g,h)),w)}if(!t.eql(t.sqr(e.Gy),i(e.Gx)))throw new Error("bad generator point: equation left != right");function a(g){return zn(g,xe,e.n)}function c(g){let{allowedPrivateKeyLengths:h,nByteLength:w,wrapPrivateKey:x,n:y}=e;if(h&&typeof g!="bigint"){if(zt(g)&&(g=_t(g)),typeof g!="string"||!h.includes(g.length))throw new Error("invalid private key");g=g.padStart(w*2,"0")}let E;try{E=typeof g=="bigint"?g:Ct(oe("private key",g,w))}catch{throw new Error("invalid private key, expected hex or "+w+" bytes, got "+typeof g)}return x&&(E=Q(E,y)),Ke("private key",E,xe,y),E}function l(g){if(!(g instanceof d))throw new Error("ProjectivePoint expected")}let u=dr((g,h)=>{let{px:w,py:x,pz:y}=g;if(t.eql(y,t.ONE))return{x:w,y:x};let E=g.is0();h==null&&(h=E?t.ONE:t.inv(y));let _=t.mul(w,h),L=t.mul(x,h),I=t.mul(y,h);if(E)return{x:t.ZERO,y:t.ZERO};if(!t.eql(I,t.ONE))throw new Error("invZ was invalid");return{x:_,y:L}}),f=dr(g=>{if(g.is0()){if(e.allowInfinityPoint&&!t.is0(g.py))return;throw new Error("bad point: ZERO")}let{x:h,y:w}=g.toAffine();if(!t.isValid(h)||!t.isValid(w))throw new Error("bad point: x or y not FE");let x=t.sqr(w),y=i(h);if(!t.eql(x,y))throw new Error("bad point: equation left != right");if(!g.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class d{constructor(h,w,x){if(this.px=h,this.py=w,this.pz=x,h==null||!t.isValid(h))throw new Error("x required");if(w==null||!t.isValid(w))throw new Error("y required");if(x==null||!t.isValid(x))throw new Error("z required");Object.freeze(this)}static fromAffine(h){let{x:w,y:x}=h||{};if(!h||!t.isValid(w)||!t.isValid(x))throw new Error("invalid affine point");if(h instanceof d)throw new Error("projective point not allowed");let y=E=>t.eql(E,t.ZERO);return y(w)&&y(x)?d.ZERO:new d(w,x,t.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(h){let w=t.invertBatch(h.map(x=>x.pz));return h.map((x,y)=>x.toAffine(w[y])).map(d.fromAffine)}static fromHex(h){let w=d.fromAffine(o(oe("pointHex",h)));return w.assertValidity(),w}static fromPrivateKey(h){return d.BASE.multiply(c(h))}static msm(h,w){return ho(d,n,h,w)}_setWindowSize(h){p.setWindowSize(this,h)}assertValidity(){f(this)}hasEvenY(){let{y:h}=this.toAffine();if(t.isOdd)return!t.isOdd(h);throw new Error("Field doesn't support isOdd")}equals(h){l(h);let{px:w,py:x,pz:y}=this,{px:E,py:_,pz:L}=h,I=t.eql(t.mul(w,L),t.mul(E,y)),T=t.eql(t.mul(x,L),t.mul(_,y));return I&&T}negate(){return new d(this.px,t.neg(this.py),this.pz)}double(){let{a:h,b:w}=e,x=t.mul(w,yh),{px:y,py:E,pz:_}=this,L=t.ZERO,I=t.ZERO,T=t.ZERO,k=t.mul(y,y),re=t.mul(E,E),W=t.mul(_,_),V=t.mul(y,E);return V=t.add(V,V),T=t.mul(y,_),T=t.add(T,T),L=t.mul(h,T),I=t.mul(x,W),I=t.add(L,I),L=t.sub(re,I),I=t.add(re,I),I=t.mul(L,I),L=t.mul(V,L),T=t.mul(x,T),W=t.mul(h,W),V=t.sub(k,W),V=t.mul(h,V),V=t.add(V,T),T=t.add(k,k),k=t.add(T,k),k=t.add(k,W),k=t.mul(k,V),I=t.add(I,k),W=t.mul(E,_),W=t.add(W,W),k=t.mul(W,V),L=t.sub(L,k),T=t.mul(W,re),T=t.add(T,T),T=t.add(T,T),new d(L,I,T)}add(h){l(h);let{px:w,py:x,pz:y}=this,{px:E,py:_,pz:L}=h,I=t.ZERO,T=t.ZERO,k=t.ZERO,re=e.a,W=t.mul(e.b,yh),V=t.mul(w,E),he=t.mul(x,_),S=t.mul(y,L),P=t.add(w,x),v=t.add(E,_);P=t.mul(P,v),v=t.add(V,he),P=t.sub(P,v),v=t.add(w,y);let b=t.add(E,L);return v=t.mul(v,b),b=t.add(V,S),v=t.sub(v,b),b=t.add(x,y),I=t.add(_,L),b=t.mul(b,I),I=t.add(he,S),b=t.sub(b,I),k=t.mul(re,v),I=t.mul(W,S),k=t.add(I,k),I=t.sub(he,k),k=t.add(he,k),T=t.mul(I,k),he=t.add(V,V),he=t.add(he,V),S=t.mul(re,S),v=t.mul(W,v),he=t.add(he,S),S=t.sub(V,S),S=t.mul(re,S),v=t.add(v,S),V=t.mul(he,v),T=t.add(T,V),V=t.mul(b,v),I=t.mul(P,I),I=t.sub(I,V),V=t.mul(P,he),k=t.mul(b,k),k=t.add(k,V),new d(I,T,k)}subtract(h){return this.add(h.negate())}is0(){return this.equals(d.ZERO)}wNAF(h){return p.wNAFCached(this,h,d.normalizeZ)}multiplyUnsafe(h){let{endo:w,n:x}=e;Ke("scalar",h,Rt,x);let y=d.ZERO;if(h===Rt)return y;if(this.is0()||h===xe)return this;if(!w||p.hasPrecomputes(this))return p.wNAFCachedUnsafe(this,h,d.normalizeZ);let{k1neg:E,k1:_,k2neg:L,k2:I}=w.splitScalar(h),T=y,k=y,re=this;for(;_>Rt||I>Rt;)_&xe&&(T=T.add(re)),I&xe&&(k=k.add(re)),re=re.double(),_>>=xe,I>>=xe;return E&&(T=T.negate()),L&&(k=k.negate()),k=new d(t.mul(k.px,w.beta),k.py,k.pz),T.add(k)}multiply(h){let{endo:w,n:x}=e;Ke("scalar",h,xe,x);let y,E;if(w){let{k1neg:_,k1:L,k2neg:I,k2:T}=w.splitScalar(h),{p:k,f:re}=this.wNAF(L),{p:W,f:V}=this.wNAF(T);k=p.constTimeNegate(_,k),W=p.constTimeNegate(I,W),W=new d(t.mul(W.px,w.beta),W.py,W.pz),y=k.add(W),E=re.add(V)}else{let{p:_,f:L}=this.wNAF(h);y=_,E=L}return d.normalizeZ([y,E])[0]}multiplyAndAddUnsafe(h,w,x){let y=d.BASE,E=(L,I)=>I===Rt||I===xe||!L.equals(y)?L.multiplyUnsafe(I):L.multiply(I),_=E(this,w).add(E(h,x));return _.is0()?void 0:_}toAffine(h){return u(this,h)}isTorsionFree(){let{h,isTorsionFree:w}=e;if(h===xe)return!0;if(w)return w(d,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h,clearCofactor:w}=e;return h===xe?this:w?w(d,this):this.multiplyUnsafe(e.h)}toRawBytes(h=!0){return rt("isCompressed",h),this.assertValidity(),s(d,this,h)}toHex(h=!0){return rt("isCompressed",h),_t(this.toRawBytes(h))}}d.BASE=new d(e.Gx,e.Gy,t.ONE),d.ZERO=new d(t.ZERO,t.ONE,t.ZERO);let m=e.nBitLength,p=fo(d,e.endo?Math.ceil(m/2):m);return{CURVE:e,ProjectivePoint:d,normPrivateKeyToScalar:c,weierstrassEquation:i,isWithinCurveOrder:a}}function Cy(r){let e=Wn(r);return ut(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function wh(r){let e=Cy(r),{Fp:t,n}=e,s=t.BYTES+1,o=2*t.BYTES+1;function i(S){return Q(S,n)}function a(S){return lo(S,n)}let{ProjectivePoint:c,normPrivateKeyToScalar:l,weierstrassEquation:u,isWithinCurveOrder:f}=_y({...e,toBytes(S,P,v){let b=P.toAffine(),A=t.toBytes(b.x),B=It;return rt("isCompressed",v),v?B(Uint8Array.from([P.hasEvenY()?2:3]),A):B(Uint8Array.from([4]),A,t.toBytes(b.y))},fromBytes(S){let P=S.length,v=S[0],b=S.subarray(1);if(P===s&&(v===2||v===3)){let A=Ct(b);if(!zn(A,xe,t.ORDER))throw new Error("Point is not on curve");let B=u(A),R;try{R=t.sqrt(B)}catch(K){let O=K instanceof Error?": "+K.message:"";throw new Error("Point is not on curve"+O)}let M=(R&xe)===xe;return(v&1)===1!==M&&(R=t.neg(R)),{x:A,y:R}}else if(P===o&&v===4){let A=t.fromBytes(b.subarray(0,t.BYTES)),B=t.fromBytes(b.subarray(t.BYTES,2*t.BYTES));return{x:A,y:B}}else{let A=s,B=o;throw new Error("invalid Point, expected length of "+A+", or uncompressed "+B+", got "+P)}}}),d=S=>_t(Wt(S,e.nByteLength));function m(S){let P=n>>xe;return S>P}function p(S){return m(S)?i(-S):S}let g=(S,P,v)=>Ct(S.slice(P,v));class h{constructor(P,v,b){this.r=P,this.s=v,this.recovery=b,this.assertValidity()}static fromCompact(P){let v=e.nByteLength;return P=oe("compactSignature",P,v*2),new h(g(P,0,v),g(P,v,2*v))}static fromDER(P){let{r:v,s:b}=Dt.toSig(oe("DER",P));return new h(v,b)}assertValidity(){Ke("r",this.r,xe,n),Ke("s",this.s,xe,n)}addRecoveryBit(P){return new h(this.r,this.s,P)}recoverPublicKey(P){let{r:v,s:b,recovery:A}=this,B=L(oe("msgHash",P));if(A==null||![0,1,2,3].includes(A))throw new Error("recovery id invalid");let R=A===2||A===3?v+e.n:v;if(R>=t.ORDER)throw new Error("recovery id 2 or 3 invalid");let M=A&1?"03":"02",F=c.fromHex(M+d(R)),K=a(R),O=i(-B*K),J=i(b*K),te=c.BASE.multiplyAndAddUnsafe(F,O,J);if(!te)throw new Error("point at infinify");return te.assertValidity(),te}hasHighS(){return m(this.s)}normalizeS(){return this.hasHighS()?new h(this.r,i(-this.s),this.recovery):this}toDERRawBytes(){return ur(this.toDERHex())}toDERHex(){return Dt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return ur(this.toCompactHex())}toCompactHex(){return d(this.r)+d(this.s)}}let w={isValidPrivateKey(S){try{return l(S),!0}catch{return!1}},normPrivateKeyToScalar:l,randomPrivateKey:()=>{let S=Bc(e.n);return jf(e.randomBytes(S),e.n)},precompute(S=8,P=c.BASE){return P._setWindowSize(S),P.multiply(BigInt(3)),P}};function x(S,P=!0){return c.fromPrivateKey(S).toRawBytes(P)}function y(S){let P=zt(S),v=typeof S=="string",b=(P||v)&&S.length;return P?b===s||b===o:v?b===2*s||b===2*o:S instanceof c}function E(S,P,v=!0){if(y(S))throw new Error("first arg must be private key");if(!y(P))throw new Error("second arg must be public key");return c.fromHex(P).multiply(l(S)).toRawBytes(v)}let _=e.bits2int||function(S){if(S.length>8192)throw new Error("input is too large");let P=Ct(S),v=S.length*8-e.nBitLength;return v>0?P>>BigInt(v):P},L=e.bits2int_modN||function(S){return i(_(S))},I=Gn(e.nBitLength);function T(S){return Ke("num < 2^"+e.nBitLength,S,Rt,I),Wt(S,e.nByteLength)}function k(S,P,v=re){if(["recovered","canonical"].some(be=>be in v))throw new Error("sign() legacy options not supported");let{hash:b,randomBytes:A}=e,{lowS:B,prehash:R,extraEntropy:M}=v;B==null&&(B=!0),S=oe("msgHash",S),gh(v),R&&(S=oe("prehashed msgHash",b(S)));let F=L(S),K=l(P),O=[T(K),T(F)];if(M!=null&&M!==!1){let be=M===!0?A(t.BYTES):M;O.push(oe("extraEntropy",be))}let J=It(...O),te=F;function we(be){let ve=_(be);if(!f(ve))return;let _e=a(ve),He=c.BASE.multiply(ve).toAffine(),Ne=i(He.x);if(Ne===Rt)return;let lt=i(_e*i(te+Ne*K));if(lt===Rt)return;let yt=(He.x===Ne?0:2)|Number(He.y&xe),Mn=lt;return B&&m(lt)&&(Mn=p(lt),yt^=1),new h(Ne,Mn,yt)}return{seed:J,k2sig:we}}let re={lowS:e.lowS,prehash:!1},W={lowS:e.lowS,prehash:!1};function V(S,P,v=re){let{seed:b,k2sig:A}=k(S,P,v),B=e;return Sc(B.hash.outputLen,B.nByteLength,B.hmac)(b,A)}c.BASE._setWindowSize(8);function he(S,P,v,b=W){let A=S;P=oe("msgHash",P),v=oe("publicKey",v);let{lowS:B,prehash:R,format:M}=b;if(gh(b),"strict"in b)throw new Error("options.strict was renamed to lowS");if(M!==void 0&&M!=="compact"&&M!=="der")throw new Error("format must be compact or der");let F=typeof A=="string"||zt(A),K=!F&&!M&&typeof A=="object"&&A!==null&&typeof A.r=="bigint"&&typeof A.s=="bigint";if(!F&&!K)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let O,J;try{if(K&&(O=new h(A.r,A.s)),F){try{M!=="compact"&&(O=h.fromDER(A))}catch(yt){if(!(yt instanceof Dt.Err))throw yt}!O&&M!=="der"&&(O=h.fromCompact(A))}J=c.fromHex(v)}catch{return!1}if(!O||B&&O.hasHighS())return!1;R&&(P=e.hash(P));let{r:te,s:we}=O,be=L(P),ve=a(we),_e=i(be*ve),He=i(te*ve),Ne=c.BASE.multiplyAndAddUnsafe(J,_e,He)?.toAffine();return Ne?i(Ne.x)===te:!1}return{CURVE:e,getPublicKey:x,getSharedSecret:E,sign:V,verify:he,ProjectivePoint:c,Signature:h,utils:w}}function Iy(r){return{hash:r,hmac:(e,...t)=>Cl(r,e,yc(...t)),randomBytes:en}}function bh(r,e){let t=n=>wh({...r,...Iy(n)});return{...t(e),create:t}}var Eh=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),xh=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),By=BigInt(1),Bl=BigInt(2),vh=(r,e)=>(r+e/Bl)/e;function ky(r){let e=Eh,t=BigInt(3),n=BigInt(6),s=BigInt(11),o=BigInt(22),i=BigInt(23),a=BigInt(44),c=BigInt(88),l=r*r*r%e,u=l*l*r%e,f=se(u,t,e)*u%e,d=se(f,t,e)*u%e,m=se(d,Bl,e)*l%e,p=se(m,s,e)*m%e,g=se(p,o,e)*p%e,h=se(g,a,e)*g%e,w=se(h,c,e)*h%e,x=se(w,a,e)*g%e,y=se(x,t,e)*u%e,E=se(y,i,e)*p%e,_=se(E,n,e)*l%e,L=se(_,Bl,e);if(!kl.eql(kl.sqr(L),r))throw new Error("Cannot find square root");return L}var kl=jt(Eh,void 0,void 0,{sqrt:ky}),Xe=bh({a:BigInt(0),b:BigInt(7),Fp:kl,n:xh,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{let e=xh,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-By*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),s=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=t,i=BigInt("0x100000000000000000000000000000000"),a=vh(o*r,e),c=vh(-n*r,e),l=Q(r-a*t-c*s,e),u=Q(-a*n-c*o,e),f=l>i,d=u>i;if(f&&(l=e-l),d&&(u=e-u),l>i||u>i)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:f,k1:l,k2neg:d,k2:u}}}},on),c2=BigInt(0);var l2=Xe.ProjectivePoint;function Fe(r,e){e==null&&(e=r.reduce((s,o)=>s+o.length,0));let t=Ce(e),n=0;for(let s of r)t.set(s,n),n+=s.length;return t}function Tl(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}function Ah(r,e){let t=nn.digest(e instanceof Uint8Array?e:e.subarray());if(Tl(t))return t.then(({digest:n})=>Xe.sign(n,r).toDERRawBytes()).catch(n=>{throw new cs(String(n))});try{return Xe.sign(t.digest,r).toDERRawBytes()}catch(n){throw new cs(String(n))}}function Sh(r,e,t){let n=nn.digest(t instanceof Uint8Array?t:t.subarray());if(Tl(n))return n.then(({digest:s})=>Xe.verify(e,s,r)).catch(s=>{throw new ls(String(s))});try{return Xe.verify(e,n.digest,r)}catch(s){throw new ls(String(s))}}var ds=class{type="secp256k1";raw;_key;constructor(e){this._key=Ih(e),this.raw=_h(this._key)}toMultihash(){return At.digest(ft(this))}toCID(){return pe.createV1(114,this.toMultihash())}toString(){return X.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}verify(e,t){return Sh(this._key,t,e)}},mi=class{type="secp256k1";raw;publicKey;constructor(e,t){this.raw=Ch(e),this.publicKey=new ds(t??Bh(e))}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ce(this.raw,e.raw)}sign(e){return Ah(this.raw,e)}};function Ll(r){return new ds(r)}async function kh(){let r=Ty();return new mi(r)}function _h(r){return Xe.ProjectivePoint.fromHex(r).toRawBytes(!0)}function Ch(r){try{return Xe.getPublicKey(r,!0),r}catch(e){throw new On(String(e))}}function Ih(r){try{return Xe.ProjectivePoint.fromHex(r),r}catch(e){throw new Kr(String(e))}}function Bh(r){try{return Xe.getPublicKey(r,!0)}catch(e){throw new On(String(e))}}function Ty(){return Xe.utils.randomPrivateKey()}async function Th(r,e){if(r==="Ed25519")return od();if(r==="secp256k1")return kh();if(r==="RSA")return _l(e??2048);throw new Ht}function pn(r){let{Type:e,Data:t}=dt.decode(r),n=t??new Uint8Array;switch(e){case ge.RSA:return Sl(n);case ge.Ed25519:return Rc(n);case ge.secp256k1:return Ll(n);default:throw new Ht}}function Lh(r){let{Type:e,Data:t}=dt.decode(r.digest),n=t??new Uint8Array;switch(e){case ge.Ed25519:return Rc(n);case ge.secp256k1:return Ll(n);default:throw new Ht}}function ft(r){return dt.encode({Type:ge[r.type],Data:r.raw})}var Ph=Symbol.for("nodejs.util.inspect.custom"),Ly=114,hs=class{type;multihash;publicKey;string;constructor(e){this.type=e.type,this.multihash=e.multihash,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[zs]=!0;toString(){return this.string==null&&(this.string=X.encode(this.multihash.bytes).slice(1)),this.string}toMultihash(){return this.multihash}toCID(){return pe.createV1(Ly,this.multihash)}toJSON(){return this.toString()}equals(e){if(e==null)return!1;if(e instanceof Uint8Array)return ce(this.multihash.bytes,e);if(typeof e=="string")return this.toString()===e;if(e?.toMultihash()?.bytes!=null)return ce(this.multihash.bytes,e.toMultihash().bytes);throw new Error("not valid Id")}[Ph](){return`PeerId(${this.toString()})`}},ps=class extends hs{type="RSA";publicKey;constructor(e){super({...e,type:"RSA"}),this.publicKey=e.publicKey}},ms=class extends hs{type="Ed25519";publicKey;constructor(e){super({...e,type:"Ed25519"}),this.publicKey=e.publicKey}},gs=class extends hs{type="secp256k1";publicKey;constructor(e){super({...e,type:"secp256k1"}),this.publicKey=e.publicKey}},Py=2336,ys=class{type="url";multihash;publicKey;url;constructor(e){this.url=e.toString(),this.multihash=At.digest(N(this.url))}[Ph](){return`PeerId(${this.url})`}[zs]=!0;toString(){return this.toCID().toString()}toMultihash(){return this.multihash}toCID(){return pe.createV1(Py,this.toMultihash())}toJSON(){return this.toString()}equals(e){return e==null?!1:(e instanceof Uint8Array&&(e=z(e)),e.toString()===this.toString())}};var Ny=114,Nh=2336;function gt(r,e){let t;if(r.charAt(0)==="1"||r.charAt(0)==="Q")t=et(X.decode(`z${r}`));else{if(e==null)throw new D('Please pass a multibase decoder for strings that do not start with "1" or "Q"');t=et(e.decode(r))}return mn(t)}function Pl(r){if(r.type==="Ed25519")return new ms({multihash:r.toCID().multihash,publicKey:r});if(r.type==="secp256k1")return new gs({multihash:r.toCID().multihash,publicKey:r});if(r.type==="RSA")return new ps({multihash:r.toCID().multihash,publicKey:r});throw new Ht}function Dh(r){return Pl(r.publicKey)}function mn(r){if(Ry(r))return new ps({multihash:r});if(Dy(r))try{let e=Lh(r);if(e.type==="Ed25519")return new ms({multihash:r,publicKey:e});if(e.type==="secp256k1")return new gs({multihash:r,publicKey:e})}catch{let t=z(r.digest);return new ys(new URL(t))}throw new Xs("Supplied PeerID Multihash is invalid")}function gi(r){if(r?.multihash==null||r.version==null||r.version===1&&r.code!==Ny&&r.code!==Nh)throw new Zs("Supplied PeerID CID is invalid");if(r.code===Nh){let e=z(r.multihash.digest);return new ys(new URL(e))}return mn(r.multihash)}function Dy(r){return r.code===At.code}function Ry(r){return r.code===nn.code}var fe=class extends Event{type;detail;constructor(e,t){super(e),this.type=e,this.detail=t}};var Dl=Hr(Mh(),1);var bs=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},Rl=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}},Oh=r=>globalThis.DOMException===void 0?new Rl(r):new DOMException(r),Uh=r=>{let e=r.reason===void 0?Oh("This operation was aborted."):r.reason;return e instanceof Error?e:Oh(e)};function xs(r,e){let{milliseconds:t,fallback:n,message:s,customTimers:o={setTimeout,clearTimeout}}=e,i,a,l=new Promise((u,f)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){let{signal:m}=e;m.aborted&&f(Uh(m)),a=()=>{f(Uh(m))},m.addEventListener("abort",a,{once:!0})}if(t===Number.POSITIVE_INFINITY){r.then(u,f);return}let d=new bs;i=o.setTimeout.call(void 0,()=>{if(n){try{u(n())}catch(m){f(m)}return}typeof r.cancel=="function"&&r.cancel(),s===!1?u():s instanceof Error?f(s):(d.message=s??`Promise timed out after ${t} milliseconds`,f(d))},t),(async()=>{try{u(await r)}catch(m){f(m)}})()}).finally(()=>{l.clear(),a&&e.signal&&e.signal.removeEventListener("abort",a)});return l.clear=()=>{o.clearTimeout.call(void 0,i),i=void 0},l}function Ml(r,e,t){let n=0,s=r.length;for(;s>0;){let o=Math.trunc(s/2),i=n+o;t(r[i],e)<=0?(n=++i,s-=o+1):s=o}return n}var vs=class{#e=[];enqueue(e,t){t={priority:0,...t};let n={priority:t.priority,id:t.id,run:e};if(this.size===0||this.#e[this.size-1].priority>=t.priority){this.#e.push(n);return}let s=Ml(this.#e,n,(o,i)=>i.priority-o.priority);this.#e.splice(s,0,n)}setPriority(e,t){let n=this.#e.findIndex(o=>o.id===e);if(n===-1)throw new ReferenceError(`No promise function with the id "${e}" exists in the queue.`);let[s]=this.#e.splice(n,1);this.enqueue(s.run,{priority:t,id:e})}dequeue(){return this.#e.shift()?.run}filter(e){return this.#e.filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return this.#e.length}};var tr=class extends Dl.default{#e;#t;#o=0;#a;#c;#p=0;#n;#l;#r;#m;#s=0;#u;#i;#g;#b=1n;timeout;constructor(e){if(super(),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:vs,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${e.intervalCap?.toString()??""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${e.interval?.toString()??""}\` (${typeof e.interval})`);this.#e=e.carryoverConcurrencyCount,this.#t=e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,this.#a=e.intervalCap,this.#c=e.interval,this.#r=new e.queueClass,this.#m=e.queueClass,this.concurrency=e.concurrency,this.timeout=e.timeout,this.#g=e.throwOnTimeout===!0,this.#i=e.autoStart===!1}get#x(){return this.#t||this.#o<this.#a}get#v(){return this.#s<this.#u}#E(){this.#s--,this.#f(),this.emit("next")}#A(){this.#w(),this.#y(),this.#l=void 0}get#S(){let e=Date.now();if(this.#n===void 0){let t=this.#p-e;if(t<0)this.#o=this.#e?this.#s:0;else return this.#l===void 0&&(this.#l=setTimeout(()=>{this.#A()},t)),!0}return!1}#f(){if(this.#r.size===0)return this.#n&&clearInterval(this.#n),this.#n=void 0,this.emit("empty"),this.#s===0&&this.emit("idle"),!1;if(!this.#i){let e=!this.#S;if(this.#x&&this.#v){let t=this.#r.dequeue();return t?(this.emit("active"),t(),e&&this.#y(),!0):!1}}return!1}#y(){this.#t||this.#n!==void 0||(this.#n=setInterval(()=>{this.#w()},this.#c),this.#p=Date.now()+this.#c)}#w(){this.#o===0&&this.#s===0&&this.#n&&(clearInterval(this.#n),this.#n=void 0),this.#o=this.#e?this.#s:0,this.#d()}#d(){for(;this.#f(););}get concurrency(){return this.#u}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);this.#u=e,this.#d()}async#_(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(e.reason)},{once:!0})})}setPriority(e,t){this.#r.setPriority(e,t)}async add(e,t={}){return t.id??=(this.#b++).toString(),t={timeout:this.timeout,throwOnTimeout:this.#g,...t},new Promise((n,s)=>{this.#r.enqueue(async()=>{this.#s++,this.#o++;try{t.signal?.throwIfAborted();let o=e({signal:t.signal});t.timeout&&(o=xs(Promise.resolve(o),{milliseconds:t.timeout})),t.signal&&(o=Promise.race([o,this.#_(t.signal)]));let i=await o;n(i),this.emit("completed",i)}catch(o){if(o instanceof bs&&!t.throwOnTimeout){n();return}s(o),this.emit("error",o)}finally{this.#E()}},t),this.emit("add"),this.#f()})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return this.#i?(this.#i=!1,this.#d(),this):this}pause(){this.#i=!0}clear(){this.#r=new this.#m}async onEmpty(){this.#r.size!==0&&await this.#h("empty")}async onSizeLessThan(e){this.#r.size<e||await this.#h("next",()=>this.#r.size<e)}async onIdle(){this.#s===0&&this.#r.size===0||await this.#h("idle")}async#h(e,t){return new Promise(n=>{let s=()=>{t&&!t()||(this.off(e,s),n())};this.on(e,s)})}get size(){return this.#r.size}sizeBy(e){return this.#r.filter(e).length}get pending(){return this.#s}get isPaused(){return this.#i}};function wi(r){let e=[je.A];return r==null?e:Array.isArray(r)?r.length===0?e:r:[r]}var Ol=60;function bi(r){return{Status:r.Status??0,TC:r.TC??r.flag_tc??!1,RD:r.RD??r.flag_rd??!1,RA:r.RA??r.flag_ra??!1,AD:r.AD??r.flag_ad??!1,CD:r.CD??r.flag_cd??!1,Question:(r.Question??r.questions??[]).map(e=>({name:e.name,type:je[e.type]})),Answer:(r.Answer??r.answers??[]).map(e=>({name:e.name,type:je[e.type],TTL:e.TTL??e.ttl??Ol,data:e.data instanceof Uint8Array?z(e.data):e.data}))}}var Uy=4;function Ul(r,e={}){let t=new tr({concurrency:e.queryConcurrency??Uy});return async(n,s={})=>{let o=new URLSearchParams;o.set("name",n),wi(s.types).forEach(a=>{o.append("type",je[a])}),s.onProgress?.(new fe("dns:query",{detail:n}));let i=await t.add(async()=>{let a=await fetch(`${r}?${o}`,{headers:{accept:"application/dns-json"},signal:s?.signal});if(a.status!==200)throw new Error(`Unexpected HTTP status: ${a.status} - ${a.statusText}`);let c=bi(await a.json());return s.onProgress?.(new fe("dns:response",{detail:c})),c},{signal:s.signal});if(i==null)throw new Error("No DNS response received");return i}}function Fh(){return[Ul("https://cloudflare-dns.com/dns-query"),Ul("https://dns.google/resolve")]}var Kh=Hr(Hh(),1);var Fl=class{lru;constructor(e){this.lru=(0,Kh.default)(e)}get(e,t){let n=!0,s=[];for(let o of t){let i=this.getAnswers(e,o);if(i.length===0){n=!1;break}s.push(...i)}if(n)return bi({answers:s})}getAnswers(e,t){let n=`${e.toLowerCase()}-${t}`,s=this.lru.get(n);if(s!=null){let o=s.filter(i=>i.expires>Date.now()).map(({expires:i,value:a})=>({...a,TTL:Math.round((i-Date.now())/1e3),type:je[a.type]}));return o.length===0&&this.lru.remove(n),o}return[]}add(e,t){let n=`${e.toLowerCase()}-${t.type}`,s=this.lru.get(n)??[];s.push({expires:Date.now()+(t.TTL??Ol)*1e3,value:t}),this.lru.set(n,s)}remove(e,t){let n=`${e.toLowerCase()}-${t}`;this.lru.remove(n)}clear(){this.lru.clear()}};function $h(r){return new Fl(r)}var Fy=1e3,xi=class{resolvers;cache;constructor(e){this.resolvers={},this.cache=$h(e.cacheSize??Fy),Object.entries(e.resolvers??{}).forEach(([t,n])=>{Array.isArray(n)||(n=[n]),t.endsWith(".")||(t=`${t}.`),this.resolvers[t]=n}),this.resolvers["."]==null&&(this.resolvers["."]=Fh())}async query(e,t={}){let n=wi(t.types),s=t.cached!==!1?this.cache.get(e,n):void 0;if(s!=null)return t.onProgress?.(new fe("dns:cache",{detail:s})),s;let o=`${e.split(".").pop()}.`,i=(this.resolvers[o]??this.resolvers["."]).sort(()=>Math.random()>.5?-1:1),a=[];for(let c of i){if(t.signal?.aborted===!0)break;try{let l=await c(e,{...t,types:n});for(let u of l.Answer)this.cache.add(e,u);return l}catch(l){a.push(l),t.onProgress?.(new fe("dns:error",{detail:l}))}}throw a.length===1?a[0]:new AggregateError(a,`DNS lookup of ${e} ${n} failed`)}};var je;(function(r){r[r.A=1]="A",r[r.CNAME=5]="CNAME",r[r.TXT=16]="TXT",r[r.AAAA=28]="AAAA"})(je||(je={}));function qh(r={}){return new xi(r)}var vi=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,n=e();return n===void 0&&(this.index=t),n}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,n){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,t,n,s){return this.readAtomically(()=>{let o=0,i=0,a=this.peekChar();if(a===void 0)return;let c=a==="0",l=2**(8*s)-1;for(;;){let u=this.readAtomically(()=>{let f=this.readChar();if(f===void 0)return;let d=Number.parseInt(f,e);if(!Number.isNaN(d))return d});if(u===void 0)break;if(o*=e,o+=u,o>l||(i+=1,t!==void 0&&i>t))return}if(i!==0)return!n&&c&&i>1?void 0:o})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let n=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[t]=n}return e})}readIPv6Addr(){let e=t=>{for(let n=0;n<t.length/2;n++){let s=n*2;if(n<t.length-3){let i=this.readSeparator(":",n,()=>this.readIPv4Addr());if(i!==void 0)return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],[s+4,!0]}let o=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(o===void 0)return[s,!1];t[s]=o>>8,t[s+1]=o&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[n,s]=e(t);if(n===16)return t;if(s||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let o=new Uint8Array(14),i=16-(n+2),[a]=e(o.subarray(0,i));return t.set(o.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var zh=45,Vy=15,gn=new vi;function Ei(r){if(!(r.length>Vy))return gn.new(r).parseWith(()=>gn.readIPv4Addr())}function Ai(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>zh))return gn.new(r).parseWith(()=>gn.readIPv6Addr())}function br(r,e=!1){if(r.includes("%")&&(r=r.split("%")[0]),r.length>zh)return;let t=gn.new(r).parseWith(()=>gn.readIPAddr());if(t)return e&&t.length===4?Uint8Array.from([0,0,0,0,0,0,0,0,0,0,255,255,t[0],t[1],t[2],t[3]]):t}function Gh(r,e,t){let n=0;for(let s of r)if(!(n<e)){if(n>t)break;if(s!==255)return!1;n++}return!0}function Wh(r,e,t,n){let s=0;for(let o of r)if(!(s<t)){if(s>n)break;if(o!==e[s])return!1;s++}return!0}function Vl(r){switch(r.length){case xr:return r.join(".");case vr:{let e=[];for(let t=0;t<r.length;t++)t%2===0&&e.push(r[t].toString(16).padStart(2,"0")+r[t+1].toString(16).padStart(2,"0"));return e.join(":")}default:throw new Error("Invalid ip length")}}function jh(r){let e=0;for(let[t,n]of r.entries()){if(n===255){e+=8;continue}for(;n&128;)e++,n=n<<1;if(n&128)return-1;for(let s=t+1;s<r.length;s++)if(r[s]!=0)return-1;break}return e}function Zh(r){let e="0x";for(let t of r)e+=(t>>4).toString(16)+(t&15).toString(16);return e}var xr=4,vr=16,ZA=parseInt("0xFFFF",16),Hy=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);function Es(r,e){e.length===vr&&r.length===xr&&Gh(e,0,11)&&(e=e.slice(12)),e.length===xr&&r.length===vr&&Wh(r,Hy,0,11)&&(r=r.slice(12));let t=r.length;if(t!=e.length)throw new Error("Failed to mask ip");let n=new Uint8Array(t);for(let s=0;s<t;s++)n[s]=r[s]&e[s];return n}function Xh(r,e){if(typeof e=="string"&&(e=br(e)),e==null)throw new Error("Invalid ip");if(e.length!==r.network.length)return!1;for(let t=0;t<e.length;t++)if((r.network[t]&r.mask[t])!==(e[t]&r.mask[t]))return!1;return!0}function Hl(r){let[e,t]=r.split("/");if(!e||!t)throw new Error("Failed to parse given CIDR: "+r);let n=xr,s=Ei(e);if(s==null&&(n=vr,s=Ai(e),s==null))throw new Error("Failed to parse given CIDR: "+r);let o=parseInt(t,10);if(Number.isNaN(o)||String(o).length!==t.length||o<0||o>n*8)throw new Error("Failed to parse given CIDR: "+r);let i=Kl(o,8*n);return{network:Es(s,i),mask:i}}function Kl(r,e){if(e!==8*xr&&e!==8*vr)throw new Error("Invalid CIDR mask");if(r<0||r>e)throw new Error("Invalid CIDR mask");let t=e/8,n=new Uint8Array(t);for(let s=0;s<t;s++){if(r>=8){n[s]=255,r-=8;continue}n[s]=255-(255>>r),r=0}return n}var yn=class{constructor(e,t){if(t==null)({network:this.network,mask:this.mask}=Hl(e));else{let n=br(e);if(n==null)throw new Error("Failed to parse network");t=String(t);let s=parseInt(t,10);if(Number.isNaN(s)||String(s).length!==t.length||s<0||s>n.length*8){let o=br(t);if(o==null)throw new Error("Failed to parse mask");this.mask=o}else this.mask=Kl(s,8*n.length);this.network=Es(n,this.mask)}}contains(e){return Xh({network:this.network,mask:this.mask},e)}toString(){let e=jh(this.mask),t=e!==-1?String(e):Zh(this.mask);return Vl(this.network)+"/"+t}};function at(r){return!!Ei(r)}function wn(r){return!!Ai(r)}function Si(r){return!!br(r)}var Yh=at,Ky=wn,$l=function(r){let e=0;if(r=r.toString().trim(),Yh(r)){let t=new Uint8Array(e+4);return r.split(/\./g).forEach(n=>{t[e++]=parseInt(n,10)&255}),t}if(Ky(r)){let t=r.split(":",8),n;for(n=0;n<t.length;n++){let o=Yh(t[n]),i;o&&(i=$l(t[n]),t[n]=z(i.slice(0,2),"base16")),i!=null&&++n<8&&t.splice(n,0,z(i.slice(2,4),"base16"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(n=0;n<t.length&&t[n]!=="";n++);let o=[n,1];for(n=9-t.length;n>0;n--)o.push("0");t.splice.apply(t,o)}let s=new Uint8Array(e+16);for(n=0;n<t.length;n++){let o=parseInt(t[n],16);s[e++]=o>>8&255,s[e++]=o&255}return s}throw new Error("invalid ip address")},Jh=function(r,e=0,t){e=~~e,t=t??r.length-e;let n=new DataView(r.buffer);if(t===4){let s=[];for(let o=0;o<t;o++)s.push(r[e+o]);return s.join(".")}if(t===16){let s=[];for(let o=0;o<t;o+=2)s.push(n.getUint16(e+o).toString(16));return s.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var bn={},ql={},qy=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];qy.forEach(r=>{let e=zy(...r);ql[e.code]=e,bn[e.name]=e});function zy(r,e,t,n,s){return{code:r,size:e,name:t,resolvable:!!n,path:!!s}}function G(r){if(typeof r=="number"){if(ql[r]!=null)return ql[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(bn[r]!=null)return bn[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var Gy=G("ip4"),Wy=G("ip6"),jy=G("ipcidr");function jl(r,e){switch(G(r).code){case 4:case 41:return Xy(e);case 42:return Wl(e);case 43:return z(e,"base10");case 6:case 273:case 33:case 132:return tp(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Wl(e);case 421:return ew(e);case 444:return ep(e);case 445:return ep(e);case 466:return Qy(e);case 481:return globalThis.encodeURIComponent(Wl(e));default:return z(e,"base16")}}function Zl(r,e){switch(G(r).code){case 4:return Qh(e);case 41:return Qh(e);case 42:return Gl(e);case 43:return N(e,"base10");case 6:case 273:case 33:case 132:return Yl(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Gl(e);case 421:return Yy(e);case 444:return tw(e);case 445:return rw(e);case 466:return Jy(e);case 481:return Gl(globalThis.decodeURIComponent(e));default:return N(e,"base16")}}function Xl(r){let e,t;if(r.stringTuples().forEach(([n,s])=>{(n===Gy.code||n===Wy.code)&&(t=s),n===jy.code&&(e=s)}),e==null||t==null)throw new Error("Invalid multiaddr");return new yn(t,e)}var zl=Object.values(Xn).map(r=>r.decoder),Zy=function(){let r=zl[0].or(zl[1]);return zl.slice(2).forEach(e=>r=r.or(e)),r}();function Qh(r){if(!Si(r))throw new Error("invalid ip address");return $l(r)}function Xy(r){let e=Jh(r,0,r.length);if(e==null)throw new Error("ipBuff is required");if(!Si(e))throw new Error("invalid ip address");return e}function Yl(r){let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function tp(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function Gl(r){let e=N(r),t=Uint8Array.from(Be(e.length));return Fe([t,e],t.length+e.length)}function Wl(r){let e=st(r);if(r=r.slice(de(e)),r.length!==e)throw new Error("inconsistent lengths");return z(r)}function Yy(r){let e;r[0]==="Q"||r[0]==="1"?e=et(X.decode(`z${r}`)).bytes:e=pe.parse(r).multihash.bytes;let t=Uint8Array.from(Be(e.length));return Fe([t,e],t.length+e.length)}function Jy(r){let e=Zy.decode(r),t=Uint8Array.from(Be(e.length));return Fe([t,e],t.length+e.length)}function Qy(r){let e=st(r),t=r.slice(de(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+z(t,"base64url")}function ew(r){let e=st(r),t=r.slice(de(e));if(t.length!==e)throw new Error("inconsistent lengths");return z(t,"base58btc")}function tw(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);let t=Ge.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let s=Yl(n);return Fe([t,s],t.length+s.length)}function rw(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);let t=Ge.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let s=Yl(n);return Fe([t,s],t.length+s.length)}function ep(r){let e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=z(e,"base32"),s=tp(t);return`${n}:${s}`}function rp(r){r=Jl(r);let e=[],t=[],n=null,s=r.split("/").slice(1);if(s.length===1&&s[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let o=0;o<s.length;o++){let i=s[o],a=G(i);if(a.size===0){e.push([a.code]),t.push([a.code]);continue}if(o++,o>=s.length)throw new _i("invalid address: "+r);if(a.path===!0){n=Jl(s.slice(o).join("/")),e.push([a.code,Zl(a.code,n)]),t.push([a.code,n]);break}let c=Zl(a.code,s[o]);e.push([a.code,c]),t.push([a.code,jl(a.code,c)])}return{string:np(t),bytes:Ci(e),tuples:e,stringTuples:t,path:n}}function Ql(r){let e=[],t=[],n=null,s=0;for(;s<r.length;){let o=st(r,s),i=de(o),a=G(o),c=nw(a,r.slice(s+i));if(c===0){e.push([o]),t.push([o]),s+=i;continue}let l=r.slice(s+i,s+i+c);if(s+=c+i,s>r.length)throw new _i("Invalid address Uint8Array: "+z(r,"base16"));e.push([o,l]);let u=jl(o,l);if(t.push([o,u]),a.path===!0){n=u;break}}return{bytes:Uint8Array.from(r),string:np(t),tuples:e,stringTuples:t,path:n}}function np(r){let e=[];return r.map(t=>{let n=G(t[0]);return e.push(n.name),t.length>1&&t[1]!=null&&e.push(t[1]),null}),Jl(e.join("/"))}function Ci(r){return Fe(r.map(e=>{let t=G(e[0]),n=Uint8Array.from(Be(t.code));return e.length>1&&e[1]!=null&&(n=Fe([n,e[1]])),n}))}function nw(r,e){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let t=st(e instanceof Uint8Array?e:Uint8Array.from(e));return t+de(t)}}function Jl(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}var _i=class extends Error{static name="ParseError";name="ParseError";constructor(e){super(`Error parsing address: ${e}`)}};var sw=Symbol.for("nodejs.util.inspect.custom"),tu=Symbol.for("@multiformats/js-multiaddr/multiaddr"),ow=[G("dns").code,G("dns4").code,G("dns6").code,G("dnsaddr").code],eu=class extends Error{constructor(e="No available resolver"){super(e),this.name="NoAvailableResolverError"}},Ii=class r{bytes;#e;#t;#o;#a;[tu]=!0;constructor(e){e==null&&(e="");let t;if(e instanceof Uint8Array)t=Ql(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);t=rp(e)}else if(rr(e))t=Ql(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=t.bytes,this.#e=t.string,this.#t=t.tuples,this.#o=t.stringTuples,this.#a=t.path}toString(){return this.#e}toJSON(){return this.toString()}toOptions(){let e,t,n,s,o="",i=G("tcp"),a=G("udp"),c=G("ip4"),l=G("ip6"),u=G("dns6"),f=G("ip6zone");for(let[m,p]of this.stringTuples())m===f.code&&(o=`%${p??""}`),ow.includes(m)&&(t=i.name==="tcp"?"tcp":"udp",s=443,n=`${p??""}${o}`,e=m===u.code?6:4),(m===i.code||m===a.code)&&(t=G(m).name==="tcp"?"tcp":"udp",s=parseInt(p??"")),(m===c.code||m===l.code)&&(t=G(m).name==="tcp"?"tcp":"udp",n=`${p??""}${o}`,e=m===l.code?6:4);if(e==null||t==null||n==null||s==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:t,port:s}}protos(){return this.#t.map(([e])=>Object.assign({},G(e)))}protoCodes(){return this.#t.map(([e])=>e)}protoNames(){return this.#t.map(([e])=>G(e).name)}tuples(){return this.#t.map(([e,t])=>t==null?[e]:[e,t])}stringTuples(){return this.#o.map(([e,t])=>t==null?[e]:[e,t])}encapsulate(e){return e=new r(e),new r(this.toString()+e.toString())}decapsulate(e){let t=e.toString(),n=this.toString(),s=n.lastIndexOf(t);if(s<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new r(n.slice(0,s))}decapsulateCode(e){let t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new r(Ci(t.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,s])=>{n===bn.p2p.code&&e.push([n,s]),n===bn["p2p-circuit"].code&&(e=[])});let t=e.pop();if(t?.[1]!=null){let n=t[1];return n[0]==="Q"||n[0]==="1"?z(X.decode(`z${n}`),"base58btc"):z(pe.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#a}equals(e){return ce(this.bytes,e.bytes)}async resolve(e){let t=this.protos().find(o=>o.resolvable);if(t==null)return[this];let n=xn.get(t.name);if(n==null)throw new eu(`no available resolver for ${t.name}`);return(await n(this,e)).map(o=>j(o))}nodeAddress(){let e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){let t=(e??this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}[sw](){return`Multiaddr(${this.#e})`}};var xn=new Map;function rr(r){return!!r?.[tu]}function j(r){return new Ii(r)}var iw=32,{code:aw}=G("dnsaddr"),ru=class extends Error{constructor(e="Max recursive depth reached"){super(e),this.name="RecursionLimitError"}},Er=async function(e,t={}){let n=t.maxRecursiveDepth??iw;if(n===0)throw new ru("Max recursive depth reached");let[,s]=e.stringTuples().find(([l])=>l===aw)??[],i=await(t?.dns??qh()).query(`_dnsaddr.${s}`,{signal:t?.signal,types:[je.TXT]}),a=e.getPeerId(),c=[];for(let l of i.Answer){let u=l.data.replace(/["']/g,"").trim().split("=")[1];if(u==null||a!=null&&!u.includes(a))continue;let f=j(u);if(u.startsWith("/dnsaddr")){let d=await f.resolve({...t,maxRecursiveDepth:n-1});c.push(...d.map(m=>m.toString()))}else c.push(f.toString())}return c};var dp=Hr(fp(),1),Ti=dp.default;var hw={addresses:{listen:[],announce:[],noAnnounce:[],announceFilter:r=>r},connectionManager:{resolvers:{dnsaddr:Er}},transportManager:{faultTolerance:Ft.FATAL_ALL}};async function hp(r){let e=Ti(hw,r);if(e.connectionProtector===null&&globalThis.process?.env?.LIBP2P_FORCE_PNET!=null)throw new D("Private network is enforced, but no protector was provided");return e}function pw(r,e){try{if(typeof r=="string"&&r.length>0)return mw(r);if(typeof r=="number"&&isFinite(r))return e?.long?yw(r):gw(r);throw new Error("Value is not a string or number.")}catch(t){let n=ww(t)?`${t.message}. value=${JSON.stringify(r)}`:"An unknown error has occured.";throw new Error(n)}}function mw(r){if(r=String(r),r.length>100)throw new Error("Value exceeds the maximum length of 100 characters.");let e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(r);if(!e)return NaN;let t=parseFloat(e[1]),n=(e[2]||"ms").toLowerCase();switch(n){case"years":case"year":case"yrs":case"yr":case"y":return t*315576e5;case"weeks":case"week":case"w":return t*6048e5;case"days":case"day":case"d":return t*864e5;case"hours":case"hour":case"hrs":case"hr":case"h":return t*36e5;case"minutes":case"minute":case"mins":case"min":case"m":return t*6e4;case"seconds":case"second":case"secs":case"sec":case"s":return t*1e3;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t;default:throw new Error(`The unit ${n} was matched, but no matching case exists.`)}}var Pi=pw;function gw(r){let e=Math.abs(r);return e>=864e5?`${Math.round(r/864e5)}d`:e>=36e5?`${Math.round(r/36e5)}h`:e>=6e4?`${Math.round(r/6e4)}m`:e>=1e3?`${Math.round(r/1e3)}s`:`${r}ms`}function yw(r){let e=Math.abs(r);return e>=864e5?Li(r,e,864e5,"day"):e>=36e5?Li(r,e,36e5,"hour"):e>=6e4?Li(r,e,6e4,"minute"):e>=1e3?Li(r,e,1e3,"second"):`${r} ms`}function Li(r,e,t,n){let s=e>=t*1.5;return`${Math.round(r/t)} ${n}${s?"s":""}`}function ww(r){return typeof r=="object"&&r!==null&&"message"in r}function su(r){t.debug=t,t.default=t,t.coerce=c,t.disable=o,t.enable=s,t.enabled=i,t.humanize=Pi,t.destroy=l,Object.keys(r).forEach(u=>{t[u]=r[u]}),t.names=[],t.skips=[],t.formatters={};function e(u){let f=0;for(let d=0;d<u.length;d++)f=(f<<5)-f+u.charCodeAt(d),f|=0;return t.colors[Math.abs(f)%t.colors.length]}t.selectColor=e;function t(u){let f,d=null,m,p;function g(...h){if(!g.enabled)return;let w=g,x=Number(new Date),y=x-(f||x);w.diff=y,w.prev=f,w.curr=x,f=x,h[0]=t.coerce(h[0]),typeof h[0]!="string"&&h.unshift("%O");let E=0;h[0]=h[0].replace(/%([a-zA-Z%])/g,(L,I)=>{if(L==="%%")return"%";E++;let T=t.formatters[I];if(typeof T=="function"){let k=h[E];L=T.call(w,k),h.splice(E,1),E--}return L}),t.formatArgs.call(w,h),(w.log||t.log).apply(w,h)}return g.namespace=u,g.useColors=t.useColors(),g.color=t.selectColor(u),g.extend=n,g.destroy=t.destroy,Object.defineProperty(g,"enabled",{enumerable:!0,configurable:!1,get:()=>d!==null?d:(m!==t.namespaces&&(m=t.namespaces,p=t.enabled(u)),p),set:h=>{d=h}}),typeof t.init=="function"&&t.init(g),g}function n(u,f){let d=t(this.namespace+(typeof f>"u"?":":f)+u);return d.log=this.log,d}function s(u){t.save(u),t.namespaces=u,t.names=[],t.skips=[];let f,d=(typeof u=="string"?u:"").split(/[\s,]+/),m=d.length;for(f=0;f<m;f++)d[f]&&(u=d[f].replace(/\*/g,".*?"),u[0]==="-"?t.skips.push(new RegExp("^"+u.substr(1)+"$")):t.names.push(new RegExp("^"+u+"$")))}function o(){let u=[...t.names.map(a),...t.skips.map(a).map(f=>"-"+f)].join(",");return t.enable(""),u}function i(u){if(u[u.length-1]==="*")return!0;let f,d;for(f=0,d=t.skips.length;f<d;f++)if(t.skips[f].test(u))return!1;for(f=0,d=t.names.length;f<d;f++)if(t.names[f].test(u))return!0;return!1}function a(u){return u.toString().substring(2,u.toString().length-2).replace(/\.\*\?$/,"*")}function c(u){return u instanceof Error?u.stack??u.message:u}function l(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return t.setupFormatters(t.formatters),t.enable(t.load()),t}var Ni=_w(),bw=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function xw(){return typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/(edge|trident)\/(\d+)/)!=null?!1:typeof document<"u"&&document.documentElement?.style?.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/firefox\/(\d+)/)!=null&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/applewebkit\/(\d+)/)}function vw(r){if(r[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+r[0]+(this.useColors?"%c ":" ")+"+"+Pi(this.diff),!this.useColors)return;let e="color: "+this.color;r.splice(1,0,e,"color: inherit");let t=0,n=0;r[0].replace(/%[a-zA-Z%]/g,s=>{s!=="%%"&&(t++,s==="%c"&&(n=t))}),r.splice(n,0,e)}var Ew=console.debug??console.log??(()=>{});function Aw(r){try{r?Ni?.setItem("debug",r):Ni?.removeItem("debug")}catch{}}function Sw(){let r;try{r=Ni?.getItem("debug")}catch{}return!r&&typeof globalThis.process<"u"&&"env"in globalThis.process&&(r=globalThis.process.env.DEBUG),r}function _w(){try{return localStorage}catch{}}function Cw(r){r.j=function(e){try{return JSON.stringify(e)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}}var pp=su({formatArgs:vw,save:Aw,load:Sw,useColors:xw,setupFormatters:Cw,colors:bw,storage:Ni,log:Ew});var ze=pp;ze.formatters.b=r=>r==null?"undefined":X.baseEncode(r);ze.formatters.t=r=>r==null?"undefined":Ge.baseEncode(r);ze.formatters.m=r=>r==null?"undefined":Yc.baseEncode(r);ze.formatters.p=r=>r==null?"undefined":r.toString();ze.formatters.c=r=>r==null?"undefined":r.toString();ze.formatters.k=r=>r==null?"undefined":r.toString();ze.formatters.a=r=>r==null?"undefined":r.toString();ze.formatters.e=r=>r==null?"undefined":mp(r.stack)??mp(r.message)??r.toString();function Iw(r){let e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=r,e.destroy=()=>!0,e.extend=()=>e,e}function Di(){return{forComponent(r){return Bw(r)}}}function Bw(r){let e=Iw(`${r}:trace`);return ze.enabled(`${r}:trace`)&&ze.names.map(t=>t.toString()).find(t=>t.includes(":trace"))!=null&&(e=ze(`${r}:trace`)),Object.assign(ze(r),{error:ze(`${r}:error`),trace:e})}function mp(r){if(r!=null&&(r=r.trim(),r.length!==0))return r}function Ar(r,e){let t={[Symbol.iterator]:()=>t,next:()=>{let n=r.next(),s=n.value;return n.done===!0||s==null?{done:!0,value:void 0}:{done:!1,value:e(s)}}};return t}function Ri(r){let e=et(X.decode(`z${r}`));return mn(e)}var Mt=class{map;constructor(e){if(this.map=new Map,e!=null)for(let[t,n]of e.entries())this.map.set(t.toString(),{key:t,value:n})}[Symbol.iterator](){return this.entries()}clear(){this.map.clear()}delete(e){return this.map.delete(e.toString())}entries(){return Ar(this.map.entries(),e=>[e[1].key,e[1].value])}forEach(e){this.map.forEach((t,n)=>{e(t.value,t.key,this)})}get(e){return this.map.get(e.toString())?.value}has(e){return this.map.has(e.toString())}set(e,t){this.map.set(e.toString(),{key:e,value:t})}keys(){return Ar(this.map.values(),e=>e.key)}values(){return Ar(this.map.values(),e=>e.value)}get size(){return this.map.size}};var Sr=class r{set;constructor(e){if(this.set=new Set,e!=null)for(let t of e)this.set.add(t.toString())}get size(){return this.set.size}[Symbol.iterator](){return this.values()}add(e){this.set.add(e.toString())}clear(){this.set.clear()}delete(e){this.set.delete(e.toString())}entries(){return Ar(this.set.entries(),e=>{let t=Ri(e[0]);return[t,t]})}forEach(e){this.set.forEach(t=>{let n=Ri(t);e(n,n,this)})}has(e){return this.set.has(e.toString())}values(){return Ar(this.set.values(),e=>Ri(e))}intersection(e){let t=new r;for(let n of e)this.has(n)&&t.add(n);return t}difference(e){let t=new r;for(let n of this)e.has(n)||t.add(n);return t}union(e){let t=new r;for(let n of e)t.add(n);for(let n of this)t.add(n);return t}};var yp=Symbol.for("@achingbrain/uint8arraylist");function gp(r,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let t=0;for(let n of r){let s=t+n.byteLength;if(e<s)return{buf:n,index:e-t};t=s}throw new RangeError("index is out of bounds")}function Mi(r){return!!r?.[yp]}var ye=class r{bufs;length;[yp]=!0;constructor(...e){this.bufs=[],this.length=0,e.length>0&&this.appendAll(e)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...e){this.appendAll(e)}appendAll(e){let t=0;for(let n of e)if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.push(n);else if(Mi(n))t+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}prepend(...e){this.prependAll(e)}prependAll(e){let t=0;for(let n of e.reverse())if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.unshift(n);else if(Mi(n))t+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}get(e){let t=gp(this.bufs,e);return t.buf[t.index]}set(e,t){let n=gp(this.bufs,e);n.buf[n.index]=t}write(e,t=0){if(e instanceof Uint8Array)for(let n=0;n<e.length;n++)this.set(t+n,e[n]);else if(Mi(e))for(let n=0;n<e.length;n++)this.set(t+n,e.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(e){if(e=Math.trunc(e),!(Number.isNaN(e)||e<=0)){if(e===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(e>=this.bufs[0].byteLength)e-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(e),this.length-=e;break}}}slice(e,t){let{bufs:n,length:s}=this._subList(e,t);return Fe(n,s)}subarray(e,t){let{bufs:n,length:s}=this._subList(e,t);return n.length===1?n[0]:Fe(n,s)}sublist(e,t){let{bufs:n,length:s}=this._subList(e,t),o=new r;return o.length=s,o.bufs=[...n],o}_subList(e,t){if(e=e??0,t=t??this.length,e<0&&(e=this.length+e),t<0&&(t=this.length+t),e<0||t>this.length)throw new RangeError("index is out of bounds");if(e===t)return{bufs:[],length:0};if(e===0&&t===this.length)return{bufs:this.bufs,length:this.length};let n=[],s=0;for(let o=0;o<this.bufs.length;o++){let i=this.bufs[o],a=s,c=a+i.byteLength;if(s=c,e>=c)continue;let l=e>=a&&e<c,u=t>a&&t<=c;if(l&&u){if(e===a&&t===c){n.push(i);break}let f=e-a;n.push(i.subarray(f,f+(t-e)));break}if(l){if(e===0){n.push(i);continue}n.push(i.subarray(e-a));continue}if(u){if(t===c){n.push(i);break}n.push(i.subarray(0,t-a));break}n.push(i)}return{bufs:n,length:t-e}}indexOf(e,t=0){if(!Mi(e)&&!(e instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let n=e instanceof Uint8Array?e:e.subarray();if(t=Number(t??0),isNaN(t)&&(t=0),t<0&&(t=this.length+t),t<0&&(t=0),e.length===0)return t>this.length?this.length:t;let s=n.byteLength;if(s===0)throw new TypeError("search must be at least 1 byte long");let o=256,i=new Int32Array(o);for(let f=0;f<o;f++)i[f]=-1;for(let f=0;f<s;f++)i[n[f]]=f;let a=i,c=this.byteLength-n.byteLength,l=n.byteLength-1,u;for(let f=t;f<=c;f+=u){u=0;for(let d=l;d>=0;d--){let m=this.get(f+d);if(n[d]!==m){u=Math.max(1,d-a[m]);break}}if(u===0)return f}return-1}getInt8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getInt8(0)}setInt8(e,t){let n=Ce(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,t),this.write(n,e)}getInt16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,t)}setInt16(e,t,n){let s=le(2);new DataView(s.buffer,s.byteOffset,s.byteLength).setInt16(0,t,n),this.write(s,e)}getInt32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,t)}setInt32(e,t,n){let s=le(4);new DataView(s.buffer,s.byteOffset,s.byteLength).setInt32(0,t,n),this.write(s,e)}getBigInt64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,t)}setBigInt64(e,t,n){let s=le(8);new DataView(s.buffer,s.byteOffset,s.byteLength).setBigInt64(0,t,n),this.write(s,e)}getUint8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getUint8(0)}setUint8(e,t){let n=Ce(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,t),this.write(n,e)}getUint16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,t)}setUint16(e,t,n){let s=le(2);new DataView(s.buffer,s.byteOffset,s.byteLength).setUint16(0,t,n),this.write(s,e)}getUint32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,t)}setUint32(e,t,n){let s=le(4);new DataView(s.buffer,s.byteOffset,s.byteLength).setUint32(0,t,n),this.write(s,e)}getBigUint64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,t)}setBigUint64(e,t,n){let s=le(8);new DataView(s.buffer,s.byteOffset,s.byteLength).setBigUint64(0,t,n),this.write(s,e)}getFloat32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,t)}setFloat32(e,t,n){let s=le(4);new DataView(s.buffer,s.byteOffset,s.byteLength).setFloat32(0,t,n),this.write(s,e)}getFloat64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,t)}setFloat64(e,t,n){let s=le(8);new DataView(s.buffer,s.byteOffset,s.byteLength).setFloat64(0,t,n),this.write(s,e)}equals(e){if(e==null||!(e instanceof r)||e.bufs.length!==this.bufs.length)return!1;for(let t=0;t<this.bufs.length;t++)if(!ce(this.bufs[t],e.bufs[t]))return!1;return!0}static fromUint8Arrays(e,t){let n=new r;return n.bufs=e,t==null&&(t=e.reduce((s,o)=>s+o.byteLength,0)),n.length=t,n}};var ou={32:16777619n,64:1099511628211n,128:309485009821345068724781371n,256:374144419156711147060143317175368453031918731002211n,512:35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852759n,1024:5016456510113118655434598811035278955030765345404790744303017523831112055108147451509157692220295382716162651878526895249385292291816524375083746691371804094271873160484737966720260389217684476157468082573n},wp={32:2166136261n,64:14695981039346656037n,128:144066263297769815596495629667062367629n,256:100029257958052580907070968620625704837092796014241193945225284501741471925557n,512:9659303129496669498009435400716310466090418745672637896108374329434462657994582932197716438449813051892206539805784495328239340083876191928701583869517785n,1024:14197795064947621068722070641403218320880622795441933960878474914617582723252296732303717722150864096521202355549365628174669108571814760471015076148029755969804077320157692458563003215304957150157403644460363550505412711285966361610267868082893823963790439336411086884584107735010676915n},bp=new globalThis.TextEncoder;function kw(r,e){let t=ou[e],n=wp[e];for(let s=0;s<r.length;s++)n^=BigInt(r[s]),n=BigInt.asUintN(e,n*t);return n}function Tw(r,e,t){if(t.length===0)throw new Error("The `utf8Buffer` option must have a length greater than zero");let n=ou[e],s=wp[e],o=r;for(;o.length>0;){let i=bp.encodeInto(o,t);o=o.slice(i.read);for(let a=0;a<i.written;a++)s^=BigInt(t[a]),s=BigInt.asUintN(e,s*n)}return s}function iu(r,{size:e=32,utf8Buffer:t}={}){if(!ou[e])throw new Error("The `size` option must be one of 32, 64, 128, 256, 512, or 1024");if(typeof r=="string"){if(t)return Tw(r,e,t);r=bp.encode(r)}return kw(r,e)}var As={hash:r=>Number(iu(r,{size:32})),hashV:(r,e)=>Lw(As.hash(r,e))};function Lw(r){let e=r.toString(16);return e.length%2===1&&(e=`0${e}`),N(e,"base16")}var au=64,ct=class{fp;h;seed;constructor(e,t,n,s=2){if(s>au)throw new TypeError("Invalid Fingerprint Size");let o=t.hashV(e,n),i=le(s);for(let a=0;a<i.length;a++)i[a]=o[a];i.length===0&&(i[0]=7),this.fp=i,this.h=t,this.seed=n}hash(){return this.h.hash(this.fp,this.seed)}equals(e){return e?.fp instanceof Uint8Array?ce(this.fp,e.fp):!1}};function _r(r,e){return Math.floor(Math.random()*(e-r))+r}var Cr=class{contents;constructor(e){this.contents=new Array(e).fill(null)}has(e){if(!(e instanceof ct))throw new TypeError("Invalid Fingerprint");return this.contents.some(t=>e.equals(t))}add(e){if(!(e instanceof ct))throw new TypeError("Invalid Fingerprint");for(let t=0;t<this.contents.length;t++)if(this.contents[t]==null)return this.contents[t]=e,!0;return!0}swap(e){if(!(e instanceof ct))throw new TypeError("Invalid Fingerprint");let t=_r(0,this.contents.length-1),n=this.contents[t];return this.contents[t]=e,n}remove(e){if(!(e instanceof ct))throw new TypeError("Invalid Fingerprint");let t=this.contents.findIndex(n=>e.equals(n));return t>-1?(this.contents[t]=null,!0):!1}};var Pw=500,Ss=class{bucketSize;filterSize;fingerprintSize;buckets;count;hash;seed;constructor(e){this.filterSize=e.filterSize,this.bucketSize=e.bucketSize??4,this.fingerprintSize=e.fingerprintSize??2,this.count=0,this.buckets=[],this.hash=e.hash??As,this.seed=e.seed??_r(0,Math.pow(2,10))}add(e){typeof e=="string"&&(e=N(e));let t=new ct(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,s=(n^t.hash())%this.filterSize;if(this.buckets[n]==null&&(this.buckets[n]=new Cr(this.bucketSize)),this.buckets[s]==null&&(this.buckets[s]=new Cr(this.bucketSize)),this.buckets[n].add(t)||this.buckets[s].add(t))return this.count++,!0;let o=[n,s],i=o[_r(0,o.length-1)];this.buckets[i]==null&&(this.buckets[i]=new Cr(this.bucketSize));for(let a=0;a<Pw;a++){let c=this.buckets[i].swap(t);if(c!=null&&(i=(i^c.hash())%this.filterSize,this.buckets[i]==null&&(this.buckets[i]=new Cr(this.bucketSize)),this.buckets[i].add(c)))return this.count++,!0}return!1}has(e){typeof e=="string"&&(e=N(e));let t=new ct(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,s=this.buckets[n]?.has(t)??!1;if(s)return s;let o=(n^t.hash())%this.filterSize;return this.buckets[o]?.has(t)??!1}remove(e){typeof e=="string"&&(e=N(e));let t=new ct(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,s=this.buckets[n]?.remove(t)??!1;if(s)return this.count--,s;let o=(n^t.hash())%this.filterSize,i=this.buckets[o]?.remove(t)??!1;return i&&this.count--,i}get reliable(){return Math.floor(100*(this.count/this.filterSize))<=90}},Nw={1:.5,2:.84,4:.95,8:.98};function Dw(r=.001){return r>.002?2:r>1e-5?4:8}function xp(r,e=.001){let t=Dw(e),n=Nw[t],s=Math.round(r/n),o=Math.min(Math.ceil(Math.log2(1/e)+Math.log2(2*t)),au);return{filterSize:s,bucketSize:t,fingerprintSize:o}}var Oi=class{filterSize;bucketSize;fingerprintSize;scale;filterSeries;hash;seed;constructor(e){this.bucketSize=e.bucketSize??4,this.filterSize=e.filterSize??(1<<18)/this.bucketSize,this.fingerprintSize=e.fingerprintSize??2,this.scale=e.scale??2,this.hash=e.hash??As,this.seed=e.seed??_r(0,Math.pow(2,10)),this.filterSeries=[new Ss({filterSize:this.filterSize,bucketSize:this.bucketSize,fingerprintSize:this.fingerprintSize,hash:this.hash,seed:this.seed})]}add(e){if(typeof e=="string"&&(e=N(e)),this.has(e))return!0;let t=this.filterSeries.find(n=>n.reliable);if(t==null){let n=this.filterSize*Math.pow(this.scale,this.filterSeries.length);t=new Ss({filterSize:n,bucketSize:this.bucketSize,fingerprintSize:this.fingerprintSize,hash:this.hash,seed:this.seed}),this.filterSeries.push(t)}return t.add(e)}has(e){typeof e=="string"&&(e=N(e));for(let t=0;t<this.filterSeries.length;t++)if(this.filterSeries[t].has(e))return!0;return!1}remove(e){typeof e=="string"&&(e=N(e));for(let t=0;t<this.filterSeries.length;t++)if(this.filterSeries[t].remove(e))return!0;return!1}get count(){return this.filterSeries.reduce((e,t)=>e+t.count,0)}};function _s(r,e=.001,t){return new Oi({...xp(r,e),...t??{}})}var Cs;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.publicKey!=null&&t.publicKey.byteLength>0&&(n.uint32(10),n.bytes(t.publicKey)),t.payloadType!=null&&t.payloadType.byteLength>0&&(n.uint32(18),n.bytes(t.payloadType)),t.payload!=null&&t.payload.byteLength>0&&(n.uint32(26),n.bytes(t.payload)),t.signature!=null&&t.signature.byteLength>0&&(n.uint32(42),n.bytes(t.signature)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={publicKey:le(0),payloadType:le(0),payload:le(0),signature:le(0)},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.publicKey=t.bytes();break}case 2:{o.payloadType=t.bytes();break}case 3:{o.payload=t.bytes();break}case 5:{o.signature=t.bytes();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(Cs||(Cs={}));var Ui=class extends Error{constructor(e="Invalid signature"){super(e),this.name="InvalidSignatureError"}};var An=class r{static createFromProtobuf=async e=>{let t=Cs.decode(e),n=pn(t.publicKey);return new r({publicKey:n,payloadType:t.payloadType,payload:t.payload,signature:t.signature})};static seal=async(e,t)=>{if(t==null)throw new Error("Missing private key");let n=e.domain,s=e.codec,o=e.marshal(),i=vp(n,s,o),a=await t.sign(i.subarray());return new r({publicKey:t.publicKey,payloadType:s,payload:o,signature:a})};static openAndCertify=async(e,t)=>{let n=await r.createFromProtobuf(e);if(!await n.validate(t))throw new Ui("Envelope signature is not valid for the given domain");return n};publicKey;payloadType;payload;signature;marshaled;constructor(e){let{publicKey:t,payloadType:n,payload:s,signature:o}=e;this.publicKey=t,this.payloadType=n,this.payload=s,this.signature=o}marshal(){return this.marshaled==null&&(this.marshaled=Cs.encode({publicKey:ft(this.publicKey),payloadType:this.payloadType,payload:this.payload.subarray(),signature:this.signature})),this.marshaled}equals(e){return ce(this.marshal(),e.marshal())}async validate(e){let t=vp(e,this.payloadType,this.payload);return this.publicKey.verify(t.subarray(),this.signature)}},vp=(r,e,t)=>{let n=N(r),s=Be(n.byteLength),o=Be(e.length),i=Be(t.length);return new ye(s,n,o,e,i,t)};function Ep(r,e){let t=(n,s)=>n.toString().localeCompare(s.toString());return r.length!==e.length?!1:(e.sort(t),r.sort(t).every((n,s)=>e[s].equals(n)))}var Ap="libp2p-peer-record",Sp=Uint8Array.from([3,1]);var Is;(function(r){let e;(function(n){let s;n.codec=()=>(s==null&&(s=Oe((o,i,a={})=>{a.lengthDelimited!==!1&&i.fork(),o.multiaddr!=null&&o.multiaddr.byteLength>0&&(i.uint32(10),i.bytes(o.multiaddr)),a.lengthDelimited!==!1&&i.ldelim()},(o,i,a={})=>{let c={multiaddr:le(0)},l=i==null?o.len:o.pos+i;for(;o.pos<l;){let u=o.uint32();switch(u>>>3){case 1:{c.multiaddr=o.bytes();break}default:{o.skipType(u&7);break}}}return c})),s),n.encode=o=>Me(o,n.codec()),n.decode=(o,i)=>Re(o,n.codec(),i)})(e=r.AddressInfo||(r.AddressInfo={}));let t;r.codec=()=>(t==null&&(t=Oe((n,s,o={})=>{if(o.lengthDelimited!==!1&&s.fork(),n.peerId!=null&&n.peerId.byteLength>0&&(s.uint32(10),s.bytes(n.peerId)),n.seq!=null&&n.seq!==0n&&(s.uint32(16),s.uint64(n.seq)),n.addresses!=null)for(let i of n.addresses)s.uint32(26),r.AddressInfo.codec().encode(i,s);o.lengthDelimited!==!1&&s.ldelim()},(n,s,o={})=>{let i={peerId:le(0),seq:0n,addresses:[]},a=s==null?n.len:n.pos+s;for(;n.pos<a;){let c=n.uint32();switch(c>>>3){case 1:{i.peerId=n.bytes();break}case 2:{i.seq=n.uint64();break}case 3:{if(o.limits?.addresses!=null&&i.addresses.length===o.limits.addresses)throw new yr('Decode error - map field "addresses" had too many elements');i.addresses.push(r.AddressInfo.codec().decode(n,n.uint32(),{limits:o.limits?.addresses$}));break}default:{n.skipType(c&7);break}}}return i})),t),r.encode=n=>Me(n,r.codec()),r.decode=(n,s)=>Re(n,r.codec(),s)})(Is||(Is={}));var Ir=class r{static createFromProtobuf=e=>{let t=Is.decode(e),n=mn(et(t.peerId)),s=(t.addresses??[]).map(i=>j(i.multiaddr)),o=t.seq;return new r({peerId:n,multiaddrs:s,seqNumber:o})};static DOMAIN=Ap;static CODEC=Sp;peerId;multiaddrs;seqNumber;domain=r.DOMAIN;codec=r.CODEC;marshaled;constructor(e){let{peerId:t,multiaddrs:n,seqNumber:s}=e;this.peerId=t,this.multiaddrs=n??[],this.seqNumber=s??BigInt(Date.now())}marshal(){return this.marshaled==null&&(this.marshaled=Is.encode({peerId:this.peerId.toMultihash().bytes,seq:BigInt(this.seqNumber),addresses:this.multiaddrs.map(e=>({multiaddr:e.bytes}))})),this.marshaled}equals(e){return!(!(e instanceof r)||!this.peerId.equals(e.peerId)||this.seqNumber!==e.seqNumber||!Ep(this.multiaddrs,e.multiaddrs))}};function Rw(r){return r[Symbol.asyncIterator]!=null}function Mw(r){if(Rw(r))return(async()=>{let t=[];for await(let n of r)t.push(n);return t})();let e=[];for(let t of r)e.push(t);return e}var Bs=Mw;var nr={},Sn=r=>{r.addEventListener("message",e=>{Sn.dispatchEvent("message",r,e)}),r.port!=null&&r.port.addEventListener("message",e=>{Sn.dispatchEvent("message",r,e)})};Sn.addEventListener=(r,e)=>{nr[r]==null&&(nr[r]=[]),nr[r].push(e)};Sn.removeEventListener=(r,e)=>{nr[r]!=null&&(nr[r]=nr[r].filter(t=>t===e))};Sn.dispatchEvent=function(r,e,t){nr[r]!=null&&nr[r].forEach(n=>n(e,t))};var cu=Sn;var lu="lock:worker:request-read",uu="lock:worker:release-read",fu="lock:master:grant-read",du="lock:worker:request-write",hu="lock:worker:release-write",pu="lock:master:grant-write";var _p=(r=21)=>Math.random().toString().substring(2);var Cp=(r,e,t,n,s)=>(o,i)=>{if(i.data.type!==t)return;let a={type:i.data.type,name:i.data.name,identifier:i.data.identifier};r.dispatchEvent(new MessageEvent(e,{data:{name:a.name,handler:async()=>{o.postMessage({type:s,name:a.name,identifier:a.identifier}),await new Promise(c=>{let l=u=>{if(u?.data==null)return;let f={type:u.data.type,name:u.data.name,identifier:u.data.identifier};f.type===n&&f.identifier===a.identifier&&(o.removeEventListener("message",l),c())};o.addEventListener("message",l)})}}}))},Ip=(r,e,t,n)=>async()=>{let s=_p();return globalThis.postMessage({type:e,identifier:s,name:r}),new Promise(o=>{let i=a=>{if(a?.data==null)return;let c={type:a.data.type,identifier:a.data.identifier};c.type===t&&c.identifier===s&&(globalThis.removeEventListener("message",i),o(()=>{globalThis.postMessage({type:n,identifier:s,name:r})}))};globalThis.addEventListener("message",i)})},Ow={singleProcess:!1},Bp=r=>{if(r=Object.assign({},Ow,r),!!globalThis.document||r.singleProcess){let t=new EventTarget;return cu.addEventListener("message",Cp(t,"requestReadLock",lu,uu,fu)),cu.addEventListener("message",Cp(t,"requestWriteLock",du,hu,pu)),t}return{isWorker:!0,readLock:t=>Ip(t,lu,fu,uu),writeLock:t=>Ip(t,du,pu,hu)}};var Br={},sr;async function mu(r,e){let t,n=new Promise(s=>{t=s});return r.add(async()=>xs((async()=>{await new Promise(s=>{t(()=>{s()})})})(),{milliseconds:e.timeout})),n}var Uw=(r,e)=>{if(sr.isWorker===!0)return{readLock:sr.readLock(r,e),writeLock:sr.writeLock(r,e)};let t=new tr({concurrency:1}),n;return{async readLock(){if(n!=null)return mu(n,e);n=new tr({concurrency:e.concurrency,autoStart:!1});let s=n,o=mu(n,e);return t.add(async()=>{s.start(),await s.onIdle().then(()=>{n===s&&(n=null)})}),o},async writeLock(){return n=null,mu(t,e)}}},Fw={name:"lock",concurrency:1/0,timeout:846e5,singleProcess:!1};function gu(r){let e=Object.assign({},Fw,r);return sr==null&&(sr=Bp(e),sr.isWorker!==!0&&(sr.addEventListener("requestReadLock",t=>{Br[t.data.name]!=null&&Br[t.data.name].readLock().then(async n=>t.data.handler().finally(()=>{n()}))}),sr.addEventListener("requestWriteLock",async t=>{Br[t.data.name]!=null&&Br[t.data.name].writeLock().then(async n=>t.data.handler().finally(()=>{n()}))}))),Br[e.name]==null&&(Br[e.name]=Uw(e.name,e)),Br[e.name]}var _n;(function(r){let e;(function(s){let o;s.codec=()=>(o==null&&(o=Oe((i,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),i.key!=null&&i.key!==""&&(a.uint32(10),a.string(i.key)),i.value!=null&&i.value.byteLength>0&&(a.uint32(18),a.bytes(i.value)),c.lengthDelimited!==!1&&a.ldelim()},(i,a,c={})=>{let l={key:"",value:le(0)},u=a==null?i.len:i.pos+a;for(;i.pos<u;){let f=i.uint32();switch(f>>>3){case 1:{l.key=i.string();break}case 2:{l.value=i.bytes();break}default:{i.skipType(f&7);break}}}return l})),o),s.encode=i=>Me(i,s.codec()),s.decode=(i,a)=>Re(i,s.codec(),a)})(e=r.Peer$metadataEntry||(r.Peer$metadataEntry={}));let t;(function(s){let o;s.codec=()=>(o==null&&(o=Oe((i,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),i.key!=null&&i.key!==""&&(a.uint32(10),a.string(i.key)),i.value!=null&&(a.uint32(18),Vi.codec().encode(i.value,a)),c.lengthDelimited!==!1&&a.ldelim()},(i,a,c={})=>{let l={key:""},u=a==null?i.len:i.pos+a;for(;i.pos<u;){let f=i.uint32();switch(f>>>3){case 1:{l.key=i.string();break}case 2:{l.value=Vi.codec().decode(i,i.uint32(),{limits:c.limits?.value});break}default:{i.skipType(f&7);break}}}return l})),o),s.encode=i=>Me(i,s.codec()),s.decode=(i,a)=>Re(i,s.codec(),a)})(t=r.Peer$tagsEntry||(r.Peer$tagsEntry={}));let n;r.codec=()=>(n==null&&(n=Oe((s,o,i={})=>{if(i.lengthDelimited!==!1&&o.fork(),s.addresses!=null)for(let a of s.addresses)o.uint32(10),Fi.codec().encode(a,o);if(s.protocols!=null)for(let a of s.protocols)o.uint32(18),o.string(a);if(s.publicKey!=null&&(o.uint32(34),o.bytes(s.publicKey)),s.peerRecordEnvelope!=null&&(o.uint32(42),o.bytes(s.peerRecordEnvelope)),s.metadata!=null&&s.metadata.size!==0)for(let[a,c]of s.metadata.entries())o.uint32(50),r.Peer$metadataEntry.codec().encode({key:a,value:c},o);if(s.tags!=null&&s.tags.size!==0)for(let[a,c]of s.tags.entries())o.uint32(58),r.Peer$tagsEntry.codec().encode({key:a,value:c},o);i.lengthDelimited!==!1&&o.ldelim()},(s,o,i={})=>{let a={addresses:[],protocols:[],metadata:new Map,tags:new Map},c=o==null?s.len:s.pos+o;for(;s.pos<c;){let l=s.uint32();switch(l>>>3){case 1:{if(i.limits?.addresses!=null&&a.addresses.length===i.limits.addresses)throw new yr('Decode error - map field "addresses" had too many elements');a.addresses.push(Fi.codec().decode(s,s.uint32(),{limits:i.limits?.addresses$}));break}case 2:{if(i.limits?.protocols!=null&&a.protocols.length===i.limits.protocols)throw new yr('Decode error - map field "protocols" had too many elements');a.protocols.push(s.string());break}case 4:{a.publicKey=s.bytes();break}case 5:{a.peerRecordEnvelope=s.bytes();break}case 6:{if(i.limits?.metadata!=null&&a.metadata.size===i.limits.metadata)throw new Qn('Decode error - map field "metadata" had too many elements');let u=r.Peer$metadataEntry.codec().decode(s,s.uint32());a.metadata.set(u.key,u.value);break}case 7:{if(i.limits?.tags!=null&&a.tags.size===i.limits.tags)throw new Qn('Decode error - map field "tags" had too many elements');let u=r.Peer$tagsEntry.codec().decode(s,s.uint32(),{limits:{value:i.limits?.tags$value}});a.tags.set(u.key,u.value);break}default:{s.skipType(l&7);break}}}return a})),n),r.encode=s=>Me(s,r.codec()),r.decode=(s,o)=>Re(s,r.codec(),o)})(_n||(_n={}));var Fi;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.multiaddr!=null&&t.multiaddr.byteLength>0&&(n.uint32(10),n.bytes(t.multiaddr)),t.isCertified!=null&&(n.uint32(16),n.bool(t.isCertified)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={multiaddr:le(0)},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.multiaddr=t.bytes();break}case 2:{o.isCertified=t.bool();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(Fi||(Fi={}));var Vi;(function(r){let e;r.codec=()=>(e==null&&(e=Oe((t,n,s={})=>{s.lengthDelimited!==!1&&n.fork(),t.value!=null&&t.value!==0&&(n.uint32(8),n.uint32(t.value)),t.expiry!=null&&(n.uint32(16),n.uint64(t.expiry)),s.lengthDelimited!==!1&&n.ldelim()},(t,n,s={})=>{let o={value:0},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{o.value=t.uint32();break}case 2:{o.expiry=t.uint64();break}default:{t.skipType(a&7);break}}}return o})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>Re(t,r.codec(),n)})(Vi||(Vi={}));function Cn(r,e){let t=_n.decode(e);if(t.publicKey!=null&&r.publicKey==null){let o=pn(t.publicKey);r=Pl(o)}let n=new Map,s=BigInt(Date.now());for(let[o,i]of t.tags.entries())i.expiry!=null&&i.expiry<s||n.set(o,i);return{...t,id:r,addresses:t.addresses.map(({multiaddr:o,isCertified:i})=>({multiaddr:j(o),isCertified:i??!1})),metadata:t.metadata,peerRecordEnvelope:t.peerRecordEnvelope??void 0,tags:n}}var Ot="/",kp=new TextEncoder().encode(Ot),Hi=kp[0],kr=class r{_buf;constructor(e,t){if(typeof e=="string")this._buf=N(e);else if(e instanceof Uint8Array)this._buf=e;else throw new Error("Invalid key, should be String of Uint8Array");if(t==null&&(t=!0),t&&this.clean(),this._buf.byteLength===0||this._buf[0]!==Hi)throw new Error("Invalid key")}toString(e="utf8"){return z(this._buf,e)}uint8Array(){return this._buf}get[Symbol.toStringTag](){return`Key(${this.toString()})`}static withNamespaces(e){return new r(e.join(Ot))}static random(){return new r(Math.random().toString().substring(2))}static asKey(e){return e instanceof Uint8Array||typeof e=="string"?new r(e):typeof e.uint8Array=="function"?new r(e.uint8Array()):null}clean(){if((this._buf==null||this._buf.byteLength===0)&&(this._buf=kp),this._buf[0]!==Hi){let e=new Uint8Array(this._buf.byteLength+1);e.fill(Hi,0,1),e.set(this._buf,1),this._buf=e}for(;this._buf.byteLength>1&&this._buf[this._buf.byteLength-1]===Hi;)this._buf=this._buf.subarray(0,-1)}less(e){let t=this.list(),n=e.list();for(let s=0;s<t.length;s++){if(n.length<s+1)return!1;let o=t[s],i=n[s];if(o<i)return!0;if(o>i)return!1}return t.length<n.length}reverse(){return r.withNamespaces(this.list().slice().reverse())}namespaces(){return this.list()}baseNamespace(){let e=this.namespaces();return e[e.length-1]}list(){return this.toString().split(Ot).slice(1)}type(){return Vw(this.baseNamespace())}name(){return Hw(this.baseNamespace())}instance(e){return new r(this.toString()+":"+e)}path(){let e=this.parent().toString();return e.endsWith(Ot)||(e+=Ot),e+=this.type(),new r(e)}parent(){let e=this.list();return e.length===1?new r(Ot):new r(e.slice(0,-1).join(Ot))}child(e){return this.toString()===Ot?e:e.toString()===Ot?this:new r(this.toString()+e.toString(),!1)}isAncestorOf(e){return e.toString()===this.toString()?!1:e.toString().startsWith(this.toString())}isDecendantOf(e){return e.toString()===this.toString()?!1:this.toString().startsWith(e.toString())}isTopLevel(){return this.list().length===1}concat(...e){return r.withNamespaces([...this.namespaces(),...Kw(e.map(t=>t.namespaces()))])}};function Vw(r){let e=r.split(":");return e.length<2?"":e.slice(0,-1).join(":")}function Hw(r){let e=r.split(":");return e[e.length-1]}function Kw(r){return[].concat(...r)}var yu="/peers/";function In(r){if(!Gs(r)||r.type==null)throw new D("Invalid PeerId");let e=r.toCID().toString();return new kr(`${yu}${e}`)}async function Tp(r,e,t){let n=new Map;for(let s of t){if(s==null)continue;if(s.multiaddr instanceof Uint8Array&&(s.multiaddr=j(s.multiaddr)),!rr(s.multiaddr))throw new D("Multiaddr was invalid");if(!await e(r,s.multiaddr))continue;let o=s.isCertified??!1,i=s.multiaddr.toString(),a=n.get(i);a!=null?s.isCertified=a.isCertified||o:n.set(i,{multiaddr:s.multiaddr,isCertified:o})}return[...n.values()].sort((s,o)=>s.multiaddr.toString().localeCompare(o.multiaddr.toString())).map(({isCertified:s,multiaddr:o})=>({isCertified:s,multiaddr:o.bytes}))}async function $i(r,e,t,n){if(e==null)throw new D("Invalid PeerData");if(e.publicKey!=null&&r.publicKey!=null&&!e.publicKey.equals(r.publicKey))throw new D("publicKey bytes do not match peer id publicKey bytes");let s=n.existingPeer;if(s!=null&&!r.equals(s.id))throw new D("peer id did not match existing peer id");let o=s?.addresses??[],i=new Set(s?.protocols??[]),a=s?.metadata??new Map,c=s?.tags??new Map,l=s?.peerRecordEnvelope;if(t==="patch"){if((e.multiaddrs!=null||e.addresses!=null)&&(o=[],e.multiaddrs!=null&&o.push(...e.multiaddrs.map(d=>({isCertified:!1,multiaddr:d}))),e.addresses!=null&&o.push(...e.addresses)),e.protocols!=null&&(i=new Set(e.protocols)),e.metadata!=null){let d=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);a=Ki(d,{validate:Lp})}if(e.tags!=null){let d=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags);c=Ki(d,{validate:Pp,map:Np})}e.peerRecordEnvelope!=null&&(l=e.peerRecordEnvelope)}if(t==="merge"){if(e.multiaddrs!=null&&o.push(...e.multiaddrs.map(d=>({isCertified:!1,multiaddr:d}))),e.addresses!=null&&o.push(...e.addresses),e.protocols!=null&&(i=new Set([...i,...e.protocols])),e.metadata!=null){let d=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);for(let[m,p]of d)p==null?a.delete(m):a.set(m,p);a=Ki([...a.entries()],{validate:Lp})}if(e.tags!=null){let d=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags),m=new Map(c);for(let[p,g]of d)g==null?m.delete(p):m.set(p,g);c=Ki([...m.entries()],{validate:Pp,map:Np})}e.peerRecordEnvelope!=null&&(l=e.peerRecordEnvelope)}let u;s?.id.publicKey!=null?u=ft(s.id.publicKey):e.publicKey!=null?u=ft(e.publicKey):r.publicKey!=null&&(u=ft(r.publicKey));let f={addresses:await Tp(r,n.addressFilter??(async()=>!0),o),protocols:[...i.values()].sort((d,m)=>d.localeCompare(m)),metadata:a,tags:c,publicKey:u,peerRecordEnvelope:l};return r.type!=="RSA"&&delete f.publicKey,f}function Ki(r,e){let t=new Map;for(let[n,s]of r)s!=null&&e.validate(n,s);for(let[n,s]of r.sort(([o],[i])=>o.localeCompare(i)))s!=null&&t.set(n,e.map?.(n,s)??s);return t}function Lp(r,e){if(typeof r!="string")throw new D("Metadata key must be a string");if(!(e instanceof Uint8Array))throw new D("Metadata value must be a Uint8Array")}function Pp(r,e){if(typeof r!="string")throw new D("Tag name must be a string");if(e.value!=null){if(parseInt(`${e.value}`,10)!==e.value)throw new D("Tag value must be an integer");if(e.value<0||e.value>100)throw new D("Tag value must be between 0-100")}if(e.ttl!=null){if(parseInt(`${e.ttl}`,10)!==e.ttl)throw new D("Tag ttl must be an integer");if(e.ttl<0)throw new D("Tag ttl must be between greater than 0")}}function Np(r,e){let t;return e.expiry!=null&&(t=e.expiry),e.ttl!=null&&(t=BigInt(Date.now()+Number(e.ttl))),{value:e.value??0,expiry:t}}function qi(r,e){let t=r.toString().split("/")[2],n=pe.parse(t,Ge),s=gi(n);return Cn(s,e)}function $w(r){return r==null?{}:{prefix:yu,filters:(r.filters??[]).map(e=>({key:t,value:n})=>e(qi(t,n))),orders:(r.orders??[]).map(e=>(t,n)=>e(qi(t.key,t.value),qi(n.key,n.value)))}}var zi=class{peerId;datastore;lock;addressFilter;log;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-store"),this.peerId=e.peerId,this.datastore=e.datastore,this.addressFilter=t.addressFilter,this.lock=gu({name:"peer-store",singleProcess:!0})}async has(e){return this.datastore.has(In(e))}async delete(e){if(this.peerId.equals(e))throw new D("Cannot delete self peer");await this.datastore.delete(In(e))}async load(e){let t=await this.datastore.get(In(e));return Cn(e,t)}async save(e,t){let{existingBuf:n,existingPeer:s}=await this.#e(e),o=await $i(e,t,"patch",{addressFilter:this.addressFilter});return this.#t(e,o,n,s)}async patch(e,t){let{existingBuf:n,existingPeer:s}=await this.#e(e),o=await $i(e,t,"patch",{addressFilter:this.addressFilter,existingPeer:s});return this.#t(e,o,n,s)}async merge(e,t){let{existingBuf:n,existingPeer:s}=await this.#e(e),o=await $i(e,t,"merge",{addressFilter:this.addressFilter,existingPeer:s});return this.#t(e,o,n,s)}async*all(e){for await(let{key:t,value:n}of this.datastore.query($w(e??{}))){let s=qi(t,n);s.id.equals(this.peerId)||(yield s)}}async#e(e){try{let t=await this.datastore.get(In(e)),n=Cn(e,t);return{existingBuf:t,existingPeer:n}}catch(t){t.name!=="NotFoundError"&&this.log.error("invalid peer data found in peer store - %e",t)}return{}}async#t(e,t,n,s){let o=_n.encode(t);return n!=null&&ce(o,n)?{peer:Cn(e,o),previous:s,updated:!1}:(await this.datastore.put(In(e),o),{peer:Cn(e,o),previous:s,updated:!0})}};var wu=class{store;events;peerId;log;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-store"),this.events=e.events,this.peerId=e.peerId,this.store=new zi(e,t)}[Symbol.toStringTag]="@libp2p/peer-store";async forEach(e,t){this.log.trace("forEach await read lock");let n=await this.store.lock.readLock();this.log.trace("forEach got read lock");try{for await(let s of this.store.all(t))e(s)}finally{this.log.trace("forEach release read lock"),n()}}async all(e){this.log.trace("all await read lock");let t=await this.store.lock.readLock();this.log.trace("all got read lock");try{return await Bs(this.store.all(e))}finally{this.log.trace("all release read lock"),t()}}async delete(e){this.log.trace("delete await write lock");let t=await this.store.lock.writeLock();this.log.trace("delete got write lock");try{await this.store.delete(e)}finally{this.log.trace("delete release write lock"),t()}}async has(e){this.log.trace("has await read lock");let t=await this.store.lock.readLock();this.log.trace("has got read lock");try{return await this.store.has(e)}finally{this.log.trace("has release read lock"),t()}}async get(e){this.log.trace("get await read lock");let t=await this.store.lock.readLock();this.log.trace("get got read lock");try{return await this.store.load(e)}finally{this.log.trace("get release read lock"),t()}}async save(e,t){this.log.trace("save await write lock");let n=await this.store.lock.writeLock();this.log.trace("save got write lock");try{let s=await this.store.save(e,t);return this.#e(e,s),s.peer}finally{this.log.trace("save release write lock"),n()}}async patch(e,t){this.log.trace("patch await write lock");let n=await this.store.lock.writeLock();this.log.trace("patch got write lock");try{let s=await this.store.patch(e,t);return this.#e(e,s),s.peer}finally{this.log.trace("patch release write lock"),n()}}async merge(e,t){this.log.trace("merge await write lock");let n=await this.store.lock.writeLock();this.log.trace("merge got write lock");try{let s=await this.store.merge(e,t);return this.#e(e,s),s.peer}finally{this.log.trace("merge release write lock"),n()}}async consumePeerRecord(e,t){let n=await An.openAndCertify(e,Ir.DOMAIN),s=gi(n.publicKey.toCID());if(t?.equals(s)===!1)return this.log("envelope peer id was not the expected peer id - expected: %p received: %p",t,s),!1;let o=Ir.createFromProtobuf(n.payload),i;try{i=await this.get(s)}catch(a){if(a.name!=="NotFoundError")throw a}if(i?.peerRecordEnvelope!=null){let a=await An.createFromProtobuf(i.peerRecordEnvelope),c=Ir.createFromProtobuf(a.payload);if(c.seqNumber>=o.seqNumber)return this.log("sequence number was lower or equal to existing sequence number - stored: %d received: %d",c.seqNumber,o.seqNumber),!1}return await this.patch(o.peerId,{peerRecordEnvelope:e,addresses:o.multiaddrs.map(a=>({isCertified:!0,multiaddr:a}))}),!0}#e(e,t){t.updated&&(this.peerId.equals(e)?this.events.safeDispatchEvent("self:peer:update",{detail:t}):this.events.safeDispatchEvent("peer:update",{detail:t}))}};function Dp(r,e={}){return new wu(r,e)}var Gi=class r extends Error{static name="NotFoundError";static code="ERR_NOT_FOUND";name=r.name;code=r.code;constructor(e="Not Found"){super(e)}};function qw(r){return r[Symbol.asyncIterator]!=null}function zw(r){if(qw(r))return(async()=>{for await(let e of r);})();for(let e of r);}var bu=zw;function Gw(r){let[e,t]=r[Symbol.asyncIterator]!=null?[r[Symbol.asyncIterator](),Symbol.asyncIterator]:[r[Symbol.iterator](),Symbol.iterator],n=[];return{peek:()=>e.next(),push:s=>{n.push(s)},next:()=>n.length>0?{done:!1,value:n.shift()}:e.next(),[t](){return this}}}var Rp=Gw;function Ww(r){return r[Symbol.asyncIterator]!=null}function jw(r,e){let t=0;if(Ww(r))return async function*(){for await(let c of r)await e(c,t++)&&(yield c)}();let n=Rp(r),{value:s,done:o}=n.next();if(o===!0)return function*(){}();let i=e(s,t++);if(typeof i.then=="function")return async function*(){await i&&(yield s);for await(let c of n)await e(c,t++)&&(yield c)}();let a=e;return function*(){i===!0&&(yield s);for(let c of n)a(c,t++)&&(yield c)}()}var Tr=jw;function Zw(r){return r[Symbol.asyncIterator]!=null}function Xw(r,e){return Zw(r)?async function*(){yield*(await Bs(r)).sort(e)}():function*(){yield*Bs(r).sort(e)}()}var xu=Xw;function Yw(r){return r[Symbol.asyncIterator]!=null}function Jw(r,e){return Yw(r)?async function*(){let t=0;if(!(e<1)){for await(let n of r)if(yield n,t++,t===e)return}}():function*(){let t=0;if(!(e<1)){for(let n of r)if(yield n,t++,t===e)return}}()}var vu=Jw;var Wi=class{put(e,t,n){return Promise.reject(new Error(".put is not implemented"))}get(e,t){return Promise.reject(new Error(".get is not implemented"))}has(e,t){return Promise.reject(new Error(".has is not implemented"))}delete(e,t){return Promise.reject(new Error(".delete is not implemented"))}async*putMany(e,t={}){for await(let{key:n,value:s}of e)await this.put(n,s,t),yield n}async*getMany(e,t={}){for await(let n of e)yield{key:n,value:await this.get(n,t)}}async*deleteMany(e,t={}){for await(let n of e)await this.delete(n,t),yield n}batch(){let e=[],t=[];return{put(n,s){e.push({key:n,value:s})},delete(n){t.push(n)},commit:async n=>{await bu(this.putMany(e,n)),e=[],await bu(this.deleteMany(t,n)),t=[]}}}async*_all(e,t){throw new Error("._all is not implemented")}async*_allKeys(e,t){throw new Error("._allKeys is not implemented")}query(e,t){let n=this._all(e,t);if(e.prefix!=null){let s=e.prefix;n=Tr(n,o=>o.key.toString().startsWith(s))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((s,o)=>Tr(s,o),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((s,o)=>xu(s,o),n)),e.offset!=null){let s=0,o=e.offset;n=Tr(n,()=>s++>=o)}return e.limit!=null&&(n=vu(n,e.limit)),n}queryKeys(e,t){let n=this._allKeys(e,t);if(e.prefix!=null){let s=e.prefix;n=Tr(n,o=>o.toString().startsWith(s))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((s,o)=>Tr(s,o),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((s,o)=>xu(s,o),n)),e.offset!=null){let s=e.offset,o=0;n=Tr(n,()=>o++>=s)}return e.limit!=null&&(n=vu(n,e.limit)),n}};var ji=class extends Wi{data;constructor(){super(),this.data=new Map}put(e,t){return this.data.set(e.toString(),t),e}get(e){let t=this.data.get(e.toString());if(t==null)throw new Gi;return t}has(e){return this.data.has(e.toString())}delete(e){this.data.delete(e.toString())}*_all(){for(let[e,t]of this.data.entries())yield{key:new kr(e),value:t}}*_allKeys(){for(let e of this.data.keys())yield new kr(e)}};function Mp(r,e){let t,n=function(){let s=function(){t=void 0,r()};clearTimeout(t),t=setTimeout(s,e)};return n.start=()=>{},n.stop=()=>{clearTimeout(t)},n}var Up=Hr(Op(),1),Qw=["0.0.0.0/8","10.0.0.0/8","100.64.0.0/10","127.0.0.0/8","169.254.0.0/16","172.16.0.0/12","192.0.0.0/24","192.0.0.0/29","192.0.0.8/32","192.0.0.9/32","192.0.0.10/32","192.0.0.170/32","192.0.0.171/32","192.0.2.0/24","192.31.196.0/24","192.52.193.0/24","192.88.99.0/24","192.168.0.0/16","192.175.48.0/24","198.18.0.0/15","198.51.100.0/24","203.0.113.0/24","240.0.0.0/4","255.255.255.255/32"],eb=Qw.map(r=>new Up.Netmask(r));function Eu(r){for(let e of eb)if(e.contains(r))return!0;return!1}function tb(r){return/^::ffff:([0-9a-fA-F]{1,4}):([0-9a-fA-F]{1,4})$/.test(r)}function rb(r){let e=r.split(":");if(e.length<2)return!1;let t=e[e.length-1].padStart(4,"0"),n=e[e.length-2].padStart(4,"0"),s=`${parseInt(n.substring(0,2),16)}.${parseInt(n.substring(2),16)}.${parseInt(t.substring(0,2),16)}.${parseInt(t.substring(2),16)}`;return Eu(s)}function nb(r){return/^::ffff:([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)}function sb(r){let e=r.split(":"),t=e[e.length-1];return Eu(t)}function ob(r){return/^::$/.test(r)||/^::1$/.test(r)||/^64:ff9b::([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)||/^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^f[c-d]([0-9a-fA-F]{2,2}):/i.test(r)||/^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(r)||/^ff([0-9a-fA-F]{2,2}):/i.test(r)}function or(r){return at(r)?Eu(r):tb(r)?rb(r):nb(r)?sb(r):wn(r)?ob(r):void 0}var ib=r=>r.toString().split("/").slice(1),Bn=r=>({match:e=>e.length<1?!1:r(e[0])?e.slice(1):!1,pattern:"fn"}),$=r=>({match:e=>Bn(t=>t===r).match(e),pattern:r}),Lr=()=>({match:r=>Bn(e=>typeof e=="string").match(r),pattern:"{string}"}),Ts=()=>({match:r=>Bn(e=>!isNaN(parseInt(e))).match(r),pattern:"{number}"}),ee=()=>({match:r=>{if(r.length<2||r[0]!=="p2p"&&r[0]!=="ipfs")return!1;if(r[1].startsWith("Q")||r[1].startsWith("1"))try{X.decode(`z${r[1]}`)}catch{return!1}else return!1;return r.slice(2)},pattern:"/p2p/{peerid}"}),Ls=()=>({match:r=>{if(r.length<2||r[0]!=="certhash")return!1;try{Jc.decode(r[1])}catch{return!1}return r.slice(2)},pattern:"/certhash/{certhash}"}),Z=r=>({match:e=>{let t=r.match(e);return t===!1?e:t},pattern:`optional(${r.pattern})`}),Pe=(...r)=>({match:e=>{let t;for(let n of r){let s=n.match(e);s!==!1&&(t==null||s.length<t.length)&&(t=s)}return t??!1},pattern:`or(${r.map(e=>e.pattern).join(", ")})`}),q=(...r)=>({match:e=>{for(let t of r){let n=t.match(e);if(n===!1)return!1;e=n}return e},pattern:`and(${r.map(e=>e.pattern).join(", ")})`});function ie(...r){function e(s){let o=ib(s);for(let i of r){let a=i.match(o);if(a===!1)return!1;o=a}return o}function t(s){return e(s)!==!1}function n(s){let o=e(s);return o===!1?!1:o.length===0}return{matchers:r,matches:t,exactMatch:n}}var Xi=q($("dns4"),Lr()),Yi=q($("dns6"),Lr()),Ji=q($("dnsaddr"),Lr()),Su=q($("dns"),Lr()),cI=ie(Xi,Z(ee())),lI=ie(Yi,Z(ee())),uI=ie(Ji,Z(ee())),fI=ie(Pe(Su,Ji,Xi,Yi),Z(ee())),Fp=q($("ip4"),Bn(at)),Vp=q($("ip6"),Bn(wn)),_u=Pe(Fp,Vp),Ut=Pe(_u,Su,Xi,Yi,Ji),dI=ie(Pe(_u,q(Pe(Su,Ji,Xi,Yi),Z(ee())))),hI=ie(Fp),pI=ie(Vp),mI=ie(_u),Cu=q(Ut,$("tcp"),Ts()),Ps=q(Ut,$("udp"),Ts()),Ns=ie(q(Cu,Z(ee()))),gI=ie(Ps),Iu=q(Ps,$("quic"),Z(ee())),Qi=q(Ps,$("quic-v1"),Z(ee())),ab=Pe(Iu,Qi),yI=ie(Iu),Hp=ie(Qi),Au=Pe(Ut,Cu,Ps,Iu,Qi),Kp=Pe(q(Au,$("ws"),Z(ee()))),Pr=ie(Kp),$p=Pe(q(Au,$("wss"),Z(ee())),q(Au,$("tls"),Z(q($("sni"),Lr())),$("ws"),Z(ee()))),Ds=ie($p),qp=q(Ps,$("webrtc-direct"),Z(Ls()),Z(Ls()),Z(ee())),Bu=ie(qp),zp=q(Qi,$("webtransport"),Z(Ls()),Z(Ls()),Z(ee())),ku=ie(zp),Zi=Pe(Kp,$p,q(Cu,Z(ee())),q(ab,Z(ee())),q(Ut,Z(ee())),qp,zp,ee()),wI=ie(Zi),cb=q(Zi,$("p2p-circuit"),ee()),Rs=ie(cb),lb=Pe(q(Zi,$("p2p-circuit"),$("webrtc"),Z(ee())),q(Zi,$("webrtc"),Z(ee())),q($("webrtc"),Z(ee()))),Tu=ie(lb),ub=Pe(q(Ut,$("tcp"),Ts(),$("http"),Z(ee())),q(Ut,$("http"),Z(ee()))),bI=ie(ub),fb=Pe(q(Ut,$("tcp"),Pe(q($("443"),$("http")),q(Ts(),$("https"))),Z(ee())),q(Ut,$("tls"),$("http"),Z(ee())),q(Ut,$("https"),Z(ee()))),xI=ie(fb),db=Pe(q($("memory"),Lr(),Z(ee()))),vI=ie(db);var Gp=864e13;var hb=448,Lu=449,pb=53,mb=54,gb=55,yb=56,ea=class{log;mappings;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:address-manager:dns-mappings"),this.mappings=new Map}has(e){let t=this.findHost(e);for(let n of this.mappings.values())if(n.domain===t)return!0;return!1}add(e,t){t.forEach(n=>{this.log("add DNS mapping %s to %s",n,e);let s=or(n)===!0;this.mappings.set(n,{domain:e,verified:s,expires:s?Gp-Date.now():0,lastVerified:s?Gp-Date.now():void 0})})}remove(e){let t=this.findHost(e),n=!1;for(let[s,o]of this.mappings.entries())o.domain===t&&(this.log("removing %s to %s DNS mapping %e",s,o.domain,new Error("where")),this.mappings.delete(s),n=n||o.verified);return n}getAll(e){let t=[];for(let n=0;n<e.length;n++){let o=e[n].multiaddr.stringTuples(),i=o[0][1];if(i!=null)for(let[a,c]of this.mappings.entries()){if(i!==a)continue;this.maybeAddSNITuple(o,c.domain)&&(e.splice(n,1),n--,t.push({multiaddr:j(`/${o.map(u=>[G(u[0]).name,u[1]].join("/")).join("/")}`),verified:c.verified,type:"dns-mapping",expires:c.expires,lastVerified:c.lastVerified}))}}return t}maybeAddSNITuple(e,t){for(let n=0;n<e.length;n++)if(e[n][0]===hb&&e[n+1]?.[0]!==Lu)return e.splice(n+1,0,[Lu,t]),!0;return!1}confirm(e,t){let n=this.findHost(e),s=!1;for(let[o,i]of this.mappings.entries())i.domain===n&&(this.log("marking %s to %s DNS mapping as verified",o,i.domain),s=i.verified,i.verified=!0,i.expires=Date.now()+t,i.lastVerified=Date.now());return s}unconfirm(e,t){let n=this.findHost(e),s=!1;for(let[o,i]of this.mappings.entries())i.domain===n&&(this.log("removing verification of %s to %s DNS mapping",o,i.domain),s=s||i.verified,i.verified=!1,i.expires=Date.now()+t);return s}findHost(e){for(let t of e.stringTuples())if(t[0]===Lu||t[0]===pb||t[0]===mb||t[0]===gb||t[0]===yb)return t[1]}};var Pu=4,Nu=41,Du=6,wb=273,ta=class{log;mappings;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:address-manager:ip-mappings"),this.mappings=new Map}has(e){let t=e.stringTuples();for(let n of this.mappings.values())for(let s of n)if(s.externalIp===t[0][1])return!0;return!1}add(e,t,n,s=t,o="tcp"){let i=`${e}-${t}-${o}`,a=this.mappings.get(i)??[],c={internalIp:e,internalPort:t,externalIp:n,externalPort:s,externalFamily:at(n)?4:6,protocol:o,verified:!1,expires:0};a.push(c),this.mappings.set(i,a)}remove(e){let t=e.stringTuples(),n=t[0][1]??"",s=t[1][0]===Du?"tcp":"udp",o=parseInt(t[1][1]??"0"),i=!1;for(let[a,c]of this.mappings.entries()){for(let l=0;l<c.length;l++){let u=c[l];u.externalIp===n&&u.externalPort===o&&u.protocol===s&&(this.log("removing %s:%s to %s:%s %s IP mapping",u.externalIp,u.externalPort,n,o,s),i=i||u.verified,c.splice(l,1),l--)}c.length===0&&this.mappings.delete(a)}return i}getAll(e){let t=[];for(let{multiaddr:n}of e){let s=n.stringTuples(),o;if((s[0][0]===Pu||s[0][0]===Nu)&&s[1][0]===Du?o=`${s[0][1]}-${s[1][1]}-tcp`:(s[0][0]===Pu||s[0][0]===Nu)&&s[1][0]===wb&&(o=`${s[0][1]}-${s[1][1]}-udp`),o==null)continue;let i=this.mappings.get(o);if(i!=null)for(let a of i)s[0][0]=a.externalFamily===4?Pu:Nu,s[0][1]=a.externalIp,s[1][1]=`${a.externalPort}`,t.push({multiaddr:j(`/${s.map(c=>[G(c[0]).name,c[1]].join("/")).join("/")}`),verified:a.verified,type:"ip-mapping",expires:a.expires,lastVerified:a.lastVerified})}return t}confirm(e,t){let s=e.stringTuples()[0][1],o=!1;for(let i of this.mappings.values())for(let a of i)a.externalIp===s&&(this.log("marking %s to %s IP mapping as verified",a.internalIp,a.externalIp),o=a.verified,a.verified=!0,a.expires=Date.now()+t,a.lastVerified=Date.now());return o}unconfirm(e,t){let n=e.stringTuples(),s=n[0][1]??"",o=n[1][0]===Du?"tcp":"udp",i=parseInt(n[1][1]??"0"),a=!1;for(let c of this.mappings.values())for(let l=0;l<c.length;l++){let u=c[l];u.externalIp===s&&u.externalPort===i&&u.protocol===o&&(this.log("removing verification of %s:%s to %s:%s %s IP mapping",u.externalIp,u.externalPort,s,i,o),a=a||u.verified,u.verified=!1,u.expires=Date.now()+t)}return a}};function Wp(r){try{let[[e,t]]=r.stringTuples();if(t==null)return!1;if(e===4)return t.startsWith("169.254.");if(e===41)return t.toLowerCase().startsWith("fe80")}catch{}return!1}function ra(r){try{let[[e]]=r.stringTuples();return e===4||e===41}catch{}return!1}function Nr(r){try{if(!ra(r))return!1;let[[,e]]=r.stringTuples();return e==null?!1:or(e)??!1}catch{}return!0}var bb={maxObservedAddresses:10},na=class{log;addresses;maxObservedAddresses;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:address-manager:observed-addresses"),this.addresses=new Map,this.maxObservedAddresses=t.maxObservedAddresses??bb.maxObservedAddresses}has(e){return this.addresses.has(e.toString())}removePrefixed(e){for(let t of this.addresses.keys())t.toString().startsWith(e)&&this.addresses.delete(t)}add(e){this.addresses.size!==this.maxObservedAddresses&&(Nr(e)||Wp(e)||(this.log("adding observed address %a",e),this.addresses.set(e.toString(),{verified:!1,expires:0})))}getAll(){return Array.from(this.addresses).map(([e,t])=>({multiaddr:j(e),verified:t.verified,type:"observed",expires:t.expires,lastVerified:t.lastVerified}))}remove(e){let t=this.addresses.get(e.toString())?.verified??!1;return this.log("removing observed address %a",e),this.addresses.delete(e.toString()),t}confirm(e,t){let n=e.toString(),s=this.addresses.get(n)??{verified:!1,expires:Date.now()+t,lastVerified:Date.now()},o=s.verified;return s.verified=!0,s.expires=Date.now()+t,s.lastVerified=Date.now(),this.log("marking observed address %a as verified",n),this.addresses.set(n,s),o}};var xb=[4,41,53,54,55,56];function Ru(r){try{let[[e]]=r.stringTuples();return xb.includes(e)}catch{}return!1}var vb={maxObservedAddresses:10},sa=class{log;addresses;maxObservedAddresses;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:address-manager:observed-addresses"),this.addresses=new Map,this.maxObservedAddresses=t.maxObservedAddresses??vb.maxObservedAddresses}get(e,t){if(Nr(e))return{multiaddr:e,verified:!0,type:"transport",expires:Date.now()+t,lastVerified:Date.now()};let n=this.toKey(e),s=this.addresses.get(n);return s==null&&(s={verified:!Ru(e),expires:0},this.addresses.set(n,s)),{multiaddr:e,verified:s.verified,type:"transport",expires:s.expires,lastVerified:s.lastVerified}}has(e){let t=this.toKey(e);return this.addresses.has(t)}remove(e){let t=this.toKey(e),n=this.addresses.get(t)?.verified??!1;return this.log("removing observed address %a",e),this.addresses.delete(t),n}confirm(e,t){let n=this.toKey(e),s=this.addresses.get(n)??{verified:!1,expires:0,lastVerified:0},o=s.verified;return s.verified=!0,s.expires=Date.now()+t,s.lastVerified=Date.now(),this.addresses.set(n,s),o}unconfirm(e,t){let n=this.toKey(e),s=this.addresses.get(n)??{verified:!1,expires:0},o=s.verified;return s.verified=!1,s.expires=Date.now()+t,this.addresses.set(n,s),o}toKey(e){if(Ru(e)){let t=e.toOptions();return`${t.host}-${t.port}-${t.transport}`}return e.toString()}};var jp=6e4,Zp={maxObservedAddresses:10,addressVerificationTTL:jp*10,addressVerificationRetry:jp*5},Eb=r=>r;function Mu(r,e){let t=r.getPeerId();return t!=null&&gt(t).equals(e)&&(r=r.decapsulate(j(`/p2p/${e.toString()}`))),r}var oa=class{log;components;listen;announce;appendAnnounce;announceFilter;observed;dnsMappings;ipMappings;transportAddresses;observedAddressFilter;addressVerificationTTL;addressVerificationRetry;constructor(e,t={}){let{listen:n=[],announce:s=[],appendAnnounce:o=[]}=t;this.components=e,this.log=e.logger.forComponent("libp2p:address-manager"),this.listen=n.map(i=>i.toString()),this.announce=new Set(s.map(i=>i.toString())),this.appendAnnounce=new Set(o.map(i=>i.toString())),this.observed=new na(e,t),this.dnsMappings=new ea(e,t),this.ipMappings=new ta(e,t),this.transportAddresses=new sa(e,t),this.announceFilter=t.announceFilter??Eb,this.observedAddressFilter=_s(1024),this.addressVerificationTTL=t.addressVerificationTTL??Zp.addressVerificationTTL,this.addressVerificationRetry=t.addressVerificationRetry??Zp.addressVerificationRetry,this._updatePeerStoreAddresses=Mp(this._updatePeerStoreAddresses.bind(this),1e3),e.events.addEventListener("transport:listening",()=>{this._updatePeerStoreAddresses()}),e.events.addEventListener("transport:close",()=>{this._updatePeerStoreAddresses()})}[Symbol.toStringTag]="@libp2p/address-manager";_updatePeerStoreAddresses(){let e=this.getAddresses().map(t=>t.getPeerId()===this.components.peerId.toString()?t.decapsulate(`/p2p/${this.components.peerId.toString()}`):t);this.components.peerStore.patch(this.components.peerId,{multiaddrs:e}).catch(t=>{this.log.error("error updating addresses",t)})}getListenAddrs(){return Array.from(this.listen).map(e=>j(e))}getAnnounceAddrs(){return Array.from(this.announce).map(e=>j(e))}getAppendAnnounceAddrs(){return Array.from(this.appendAnnounce).map(e=>j(e))}getObservedAddrs(){return this.observed.getAll().map(e=>e.multiaddr)}addObservedAddr(e){let t=e.stringTuples(),n=`${t[0][1]}:${t[1][1]}`;this.observedAddressFilter.has(n)||(this.observedAddressFilter.add(n),e=Mu(e,this.components.peerId),!this.ipMappings.has(e)&&(this.dnsMappings.has(e)||this.observed.add(e)))}confirmObservedAddr(e,t){e=Mu(e,this.components.peerId);let n=!0;(t?.type==="transport"||this.transportAddresses.has(e))&&!this.transportAddresses.confirm(e,t?.ttl??this.addressVerificationTTL)&&n&&(n=!1),(t?.type==="dns-mapping"||this.dnsMappings.has(e))&&!this.dnsMappings.confirm(e,t?.ttl??this.addressVerificationTTL)&&n&&(n=!1),(t?.type==="ip-mapping"||this.ipMappings.has(e))&&!this.ipMappings.confirm(e,t?.ttl??this.addressVerificationTTL)&&n&&(n=!1),(t?.type==="observed"||this.observed.has(e))&&(this.maybeUpgradeToIPMapping(e)?(this.ipMappings.confirm(e,t?.ttl??this.addressVerificationTTL),n=!1):!this.observed.confirm(e,t?.ttl??this.addressVerificationTTL)&&n&&(n=!1)),n||this._updatePeerStoreAddresses()}removeObservedAddr(e,t){e=Mu(e,this.components.peerId);let n=!1;this.observed.has(e)&&!this.observed.remove(e)&&n&&(n=!1),this.transportAddresses.has(e)&&!this.transportAddresses.unconfirm(e,t?.ttl??this.addressVerificationRetry)&&n&&(n=!1),this.dnsMappings.has(e)&&!this.dnsMappings.unconfirm(e,t?.ttl??this.addressVerificationRetry)&&n&&(n=!1),this.ipMappings.has(e)&&!this.ipMappings.unconfirm(e,t?.ttl??this.addressVerificationRetry)&&n&&(n=!1),n&&this._updatePeerStoreAddresses()}getAddresses(){let e=new Set,t=this.getAddressesWithMetadata().filter(n=>{if(!n.verified)return!1;let s=n.multiaddr.toString();return e.has(s)?!1:(e.add(s),!0)}).map(n=>n.multiaddr);return this.announceFilter(t.map(n=>{let s=j(n);return s.protos().pop()?.path===!0||s.getPeerId()===this.components.peerId.toString()?s:s.encapsulate(`/p2p/${this.components.peerId.toString()}`)}))}getAddressesWithMetadata(){let e=this.getAnnounceAddrs();if(e.length>0)return this.components.transportManager.getListeners().forEach(n=>{n.updateAnnounceAddrs(e)}),e.map(n=>({multiaddr:n,verified:!0,type:"announce",expires:Date.now()+this.addressVerificationTTL,lastVerified:Date.now()}));let t=[];return t=t.concat(this.components.transportManager.getAddrs().map(n=>this.transportAddresses.get(n,this.addressVerificationTTL))),t=t.concat(this.getAppendAnnounceAddrs().map(n=>({multiaddr:n,verified:!0,type:"announce",expires:Date.now()+this.addressVerificationTTL,lastVerified:Date.now()}))),t=t.concat(this.observed.getAll()),t=t.concat(this.ipMappings.getAll(t)),t=t.concat(this.dnsMappings.getAll(t)),t}addDNSMapping(e,t){this.dnsMappings.add(e,t)}removeDNSMapping(e){this.dnsMappings.remove(j(`/dns/${e}`))&&this._updatePeerStoreAddresses()}addPublicAddressMapping(e,t,n,s=t,o="tcp"){this.ipMappings.add(e,t,n,s,o),this.observed.removePrefixed(`/ip${at(n)?4:6}/${n}/${o}/${s}`)}removePublicAddressMapping(e,t,n,s=t,o="tcp"){this.ipMappings.remove(j(`/ip${at(n)?4:6}/${n}/${o}/${s}`))&&this._updatePeerStoreAddresses()}maybeUpgradeToIPMapping(e){if(this.ipMappings.has(e))return!1;let t=e.toOptions();if(t.family===6||t.host==="127.0.0.1"||or(t.host)===!0)return!1;let n=this.components.transportManager.getListeners(),s=[o=>Pr.exactMatch(o)||Ds.exactMatch(o),o=>Ns.exactMatch(o),o=>Hp.exactMatch(o)];for(let o of s){if(!o(e))continue;let i=n.filter(l=>l.getAddrs().filter(u=>u.toOptions().family===4&&o(u)).length>0);if(i.length!==1)continue;let a=i[0].getAddrs().filter(l=>l.toOptions().host!=="127.0.0.1").pop();if(a==null)continue;let c=a.toOptions();return this.observed.remove(e),this.ipMappings.add(c.host,c.port,t.host,t.port,t.transport),!0}return!1}};var Xp;(function(r){r.NOT_STARTED_YET="The libp2p node is not started yet",r.NOT_FOUND="Not found"})(Xp||(Xp={}));var ia=class extends Error{constructor(e="Missing service"){super(e),this.name="MissingServiceError"}},aa=class extends Error{constructor(e="Unmet service dependencies"){super(e),this.name="UnmetServiceDependenciesError"}},kn=class extends Error{constructor(e="No content routers available"){super(e),this.name="NoContentRoutersError"}},Ms=class extends Error{constructor(e="No peer routers available"){super(e),this.name="NoPeerRoutersError"}},ca=class extends Error{constructor(e="Should not try to find self"){super(e),this.name="QueriedForSelfError"}},la=class extends Error{constructor(e="Unhandled protocol error"){super(e),this.name="UnhandledProtocolError"}},ua=class extends Error{constructor(e="Duplicate protocol handler error"){super(e),this.name="DuplicateProtocolHandlerError"}},Os=class extends Error{constructor(e="Dial denied error"){super(e),this.name="DialDeniedError"}},Dr=class extends Error{constructor(e="No valid addresses"){super(e),this.name="NoValidAddressesError"}},fa=class extends Error{constructor(e="Connection intercepted"){super(e),this.name="ConnectionInterceptedError"}},da=class extends Error{constructor(e="Connection denied"){super(e),this.name="ConnectionDeniedError"}},Rr=class extends Error{constructor(e="Stream is not multiplexed"){super(e),this.name="MuxerUnavailableError"}},Mr=class extends Error{constructor(e="Encryption failed"){super(e),this.name="EncryptionFailedError"}},ha=class extends Error{constructor(e="Transport unavailable"){super(e),this.name="TransportUnavailableError"}};var Ou=class{components={};_started=!1;constructor(e={}){this.components={};for(let[t,n]of Object.entries(e))this.components[t]=n;this.components.logger==null&&(this.components.logger=Di())}isStarted(){return this._started}async _invokeStartableMethod(e){await Promise.all(Object.values(this.components).filter(t=>to(t)).map(async t=>{await t[e]?.()}))}async beforeStart(){await this._invokeStartableMethod("beforeStart")}async start(){await this._invokeStartableMethod("start"),this._started=!0}async afterStart(){await this._invokeStartableMethod("afterStart")}async beforeStop(){await this._invokeStartableMethod("beforeStop")}async stop(){await this._invokeStartableMethod("stop"),this._started=!1}async afterStop(){await this._invokeStartableMethod("afterStop")}},Sb=["metrics","connectionProtector","dns"],_b=["components","isStarted","beforeStart","start","afterStart","beforeStop","stop","afterStop","then","_invokeStartableMethod"];function Yp(r={}){let e=new Ou(r);return new Proxy(e,{get(n,s,o){if(typeof s=="string"&&!_b.includes(s)){let i=e.components[s];if(i==null&&!Sb.includes(s))throw new ia(`${s} not set`);return i}return Reflect.get(n,s,o)},set(n,s,o){return typeof s=="string"?e.components[s]=o:Reflect.set(n,s,o),!0}})}function Jp(r){let e={};for(let t of Object.values(r.components))for(let n of Cb(t))e[n]=!0;for(let t of Object.values(r.components))for(let n of Ib(t))if(e[n]!==!0)throw new aa(`Service "${Bb(t)}" required capability "${n}" but it was not provided by any component, you may need to add additional configuration when creating your node.`)}function Cb(r){return Array.isArray(r?.[Fn])?r[Fn]:[]}function Ib(r){return Array.isArray(r?.[ic])?r[ic]:[]}function Bb(r){return r?.[Symbol.toStringTag]??r?.toString()??"unknown"}var kb=4,Tb=41;function Qp(r={}){return{denyDialPeer:async()=>!1,denyDialMultiaddr:async e=>{if(Pr.matches(e))return!1;let t=e.stringTuples();return t[0][0]===kb||t[0][0]===Tb?!!or(`${t[0][1]}`):!1},denyInboundConnection:async()=>!1,denyOutboundConnection:async()=>!1,denyInboundEncryptedConnection:async()=>!1,denyOutboundEncryptedConnection:async()=>!1,denyInboundUpgradedConnection:async()=>!1,denyOutboundUpgradedConnection:async()=>!1,filterMultiaddrForPeer:async()=>!0,...r}}var em=()=>{let r=new Error("Delay aborted");return r.name="AbortError",r},Lb=new WeakMap;function Pb({clearTimeout:r,setTimeout:e}={}){return(t,{value:n,signal:s}={})=>{if(s?.aborted)return Promise.reject(em());let o,i,a,c=r??clearTimeout,l=()=>{c(o),a(em())},u=()=>{s&&s.removeEventListener("abort",l)},f=new Promise((d,m)=>{i=()=>{u(),d(n)},a=m,o=(e??setTimeout)(i,t)});return s&&s.addEventListener("abort",l,{once:!0}),Lb.set(f,()=>{c(o),o=null,i()}),f}}var Nb=Pb(),tm=Nb;var pa=class extends Error{remainingPoints;msBeforeNext;consumedPoints;isFirstInDuration;constructor(e="Rate limit exceeded",t){super(e),this.name="RateLimitError",this.remainingPoints=t.remainingPoints,this.msBeforeNext=t.msBeforeNext,this.consumedPoints=t.consumedPoints,this.isFirstInDuration=t.isFirstInDuration}},ma=class extends Error{static name="QueueFullError";constructor(e="The queue was full"){super(e),this.name="QueueFullError"}};var ga=class{memoryStorage;points;duration;blockDuration;execEvenly;execEvenlyMinDelayMs;keyPrefix;constructor(e={}){this.points=e.points??4,this.duration=e.duration??1,this.blockDuration=e.blockDuration??0,this.execEvenly=e.execEvenly??!1,this.execEvenlyMinDelayMs=e.execEvenlyMinDelayMs??this.duration*1e3/this.points,this.keyPrefix=e.keyPrefix??"rlflx",this.memoryStorage=new Uu}async consume(e,t=1,n={}){let s=this.getKey(e),o=this._getKeySecDuration(n),i=this.memoryStorage.incrby(s,t,o);if(i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i.consumedPoints>this.points)throw this.blockDuration>0&&i.consumedPoints<=this.points+t&&(i=this.memoryStorage.set(s,i.consumedPoints,this.blockDuration)),new pa("Rate limit exceeded",i);if(this.execEvenly&&i.msBeforeNext>0&&!i.isFirstInDuration){let a=Math.ceil(i.msBeforeNext/(i.remainingPoints+2));a<this.execEvenlyMinDelayMs&&(a=i.consumedPoints*this.execEvenlyMinDelayMs),await tm(a)}return i}penalty(e,t=1,n={}){let s=this.getKey(e),o=this._getKeySecDuration(n),i=this.memoryStorage.incrby(s,t,o);return i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i}reward(e,t=1,n={}){let s=this.getKey(e),o=this._getKeySecDuration(n),i=this.memoryStorage.incrby(s,-t,o);return i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i}block(e,t){let n=t*1e3,s=this.points+1;return this.memoryStorage.set(this.getKey(e),s,t),{remainingPoints:0,msBeforeNext:n===0?-1:n,consumedPoints:s,isFirstInDuration:!1}}set(e,t,n=0){let s=(n>=0?n:this.duration)*1e3;return this.memoryStorage.set(this.getKey(e),t,n),{remainingPoints:0,msBeforeNext:s===0?-1:s,consumedPoints:t,isFirstInDuration:!1}}get(e){let t=this.memoryStorage.get(this.getKey(e));return t!=null&&(t.remainingPoints=Math.max(this.points-t.consumedPoints,0)),t}delete(e){this.memoryStorage.delete(this.getKey(e))}_getKeySecDuration(e){return e?.customDuration!=null&&e.customDuration>=0?e.customDuration:this.duration}getKey(e){return this.keyPrefix.length>0?`${this.keyPrefix}:${e}`:e}parseKey(e){return e.substring(this.keyPrefix.length)}},Uu=class{storage;constructor(){this.storage=new Map}incrby(e,t,n){let s=this.storage.get(e);if(s!=null){let o=s.expiresAt!=null?s.expiresAt.getTime()-new Date().getTime():-1;return s.expiresAt==null||o>0?(s.value+=t,{remainingPoints:0,msBeforeNext:o,consumedPoints:s.value,isFirstInDuration:!1}):this.set(e,t,n)}return this.set(e,t,n)}set(e,t,n){let s=n*1e3,o=this.storage.get(e);o!=null&&clearTimeout(o.timeoutId);let i={value:t,expiresAt:s>0?new Date(Date.now()+s):void 0};return this.storage.set(e,i),s>0&&(i.timeoutId=setTimeout(()=>{this.storage.delete(e)},s),i.timeoutId.unref!=null&&i.timeoutId.unref()),{remainingPoints:0,msBeforeNext:s===0?-1:s,consumedPoints:i.value,isFirstInDuration:!0}}get(e){let t=this.storage.get(e);if(t!=null)return{remainingPoints:0,msBeforeNext:t.expiresAt!=null?t.expiresAt.getTime()-new Date().getTime():-1,consumedPoints:t.value,isFirstInDuration:!1}}delete(e){let t=this.storage.get(e);return t!=null?(t.timeoutId!=null&&clearTimeout(t.timeoutId),this.storage.delete(e),!0):!1}};function ya(r){if(Gs(r))return{peerId:r,multiaddrs:[]};Array.isArray(r)||(r=[r]);let e;if(r.length>0){let t=r[0].getPeerId();e=t==null?void 0:gt(t),r.forEach(n=>{if(!rr(n))throw new Vt("Invalid multiaddr");let s=n.getPeerId();if(s==null){if(e!=null)throw new D("Multiaddrs must all have the same peer id or have no peer id")}else{let o=gt(s);if(e?.equals(o)!==!0)throw new D("Multiaddrs must all have the same peer id or have no peer id")}})}return{peerId:e,multiaddrs:r}}var Db=["/ipfs/id/1.0.0","/ipfs/id/push/1.0.0","/libp2p/autonat/1.0.0","/libp2p/dcutr"];async function rm(r,e){let t=r?.streams?.map(s=>s.protocol)??[],n=e?.closableProtocols??Db;if(!(t.filter(s=>s!=null&&!n.includes(s)).length>0))try{await r?.close(e)}catch(s){r?.abort(s)}}var nm="last-dial-failure",sm="last-dial-success";var wa=100,ba=50;async function om(r,e){let t=!1;for(let s of xn.keys())if(t=r.protoNames().includes(s),t)break;if(!t)return[r];let n=await r.resolve(e);return e.log("resolved %s to",r,n.map(s=>s.toString())),n}function Us(r){try{let e;if(typeof r=="string"?e=j(r):e=r,!e.protoNames().includes("ipcidr")){let n=e.protoNames().includes("ip6")?"/ipcidr/128":"/ipcidr/32";e=e.encapsulate(n)}return Xl(e)}catch{throw new Error(`Can't convert to IpNet, Invalid multiaddr format: ${r}`)}}var Rb={maxConnections:wa,allow:[]},xa=class{maxConnections;connectionManager;peerStore;allow;events;log;constructor(e,t={}){this.maxConnections=t.maxConnections??Rb.maxConnections,this.allow=(t.allow??[]).map(n=>Us(n)),this.connectionManager=e.connectionManager,this.peerStore=e.peerStore,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager:connection-pruner"),this.maybePruneConnections=this.maybePruneConnections.bind(this)}start(){this.events.addEventListener("connection:open",this.maybePruneConnections)}stop(){this.events.removeEventListener("connection:open",this.maybePruneConnections)}maybePruneConnections(){this._maybePruneConnections().catch(e=>{this.log.error("error while pruning connections %e",e)})}async _maybePruneConnections(){let e=this.connectionManager.getConnections(),t=e.length;if(this.log("checking max connections limit %d/%d",t,this.maxConnections),t<=this.maxConnections)return;let n=new Mt;for(let a of e){let c=a.remotePeer;if(!n.has(c)){n.set(c,0);try{let l=await this.peerStore.get(c);n.set(c,[...l.tags.values()].reduce((u,f)=>u+f.value,0))}catch(l){l.name!=="NotFoundError"&&this.log.error("error loading peer tags",l)}}}let s=this.sortConnections(e,n),o=Math.max(t-this.maxConnections,0),i=[];for(let a of s)if(this.log("too many connections open - closing a connection to %p",a.remotePeer),this.allow.some(l=>l.contains(a.remoteAddr.nodeAddress().address))||i.push(a),i.length===o)break;await Promise.all(i.map(async a=>{await rm(a,{signal:AbortSignal.timeout(1e3)})})),this.events.safeDispatchEvent("connection:prune",{detail:i})}sortConnections(e,t){return e.sort((n,s)=>{let o=n.timeline.open,i=s.timeline.open;return o<i?1:o>i?-1:0}).sort((n,s)=>n.direction==="outbound"&&s.direction==="inbound"?1:n.direction==="inbound"&&s.direction==="outbound"?-1:0).sort((n,s)=>n.streams.length>s.streams.length?1:n.streams.length<s.streams.length?-1:0).sort((n,s)=>{let o=t.get(n.remotePeer)??0,i=t.get(s.remotePeer)??0;return o>i?1:o<i?-1:0})}};function ue(){let r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t}),r}var va=class{buffer;mask;top;btm;next;constructor(e){if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}},Tn=class{size;hwm;head;tail;constructor(e={}){this.hwm=e.splitLimit??16,this.head=new va(this.hwm),this.tail=this.head,this.size=0}calculateSize(e){return e?.byteLength!=null?e.byteLength:1}push(e){if(e?.value!=null&&(this.size+=this.calculateSize(e.value)),!this.head.push(e)){let t=this.head;this.head=t.next=new va(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next!=null){let t=this.tail.next;this.tail.next=null,this.tail=t,e=this.tail.shift()}return e?.value!=null&&(this.size-=this.calculateSize(e.value)),e}isEmpty(){return this.head.isEmpty()}};var Fu=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.code=t??"ABORT_ERR"}};function Ea(r={}){return Mb(t=>{let n=t.shift();if(n==null)return{done:!0};if(n.error!=null)throw n.error;return{done:n.done===!0,value:n.value}},r)}function Mb(r,e){e=e??{};let t=e.onEnd,n=new Tn,s,o,i,a=ue(),c=async()=>{try{return n.isEmpty()?i?{done:!0}:await new Promise((h,w)=>{o=x=>{o=null,n.push(x);try{h(r(n))}catch(y){w(y)}return s}}):r(n)}finally{n.isEmpty()&&queueMicrotask(()=>{a.resolve(),a=ue()})}},l=h=>o!=null?o(h):(n.push(h),s),u=h=>(n=new Tn,o!=null?o({error:h}):(n.push({error:h}),s)),f=h=>{if(i)return s;if(e?.objectMode!==!0&&h?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return l({done:!1,value:h})},d=h=>i?s:(i=!0,h!=null?u(h):l({done:!0})),m=()=>(n=new Tn,d(),{done:!0}),p=h=>(d(h),{done:!0});if(s={[Symbol.asyncIterator](){return this},next:c,return:m,throw:p,push:f,end:d,get readableLength(){return n.size},onEmpty:async h=>{let w=h?.signal;if(w?.throwIfAborted(),n.isEmpty())return;let x,y;w!=null&&(x=new Promise((E,_)=>{y=()=>{_(new Fu)},w.addEventListener("abort",y)}));try{await Promise.race([a.promise,x])}finally{y!=null&&w!=null&&w?.removeEventListener("abort",y)}}},t==null)return s;let g=s;return s={[Symbol.asyncIterator](){return this},next(){return g.next()},throw(h){return g.throw(h),t!=null&&(t(h),t=void 0),{done:!0}},return(){return g.return(),t!=null&&(t(),t=void 0),{done:!0}},push:f,end(h){return g.end(h),t!=null&&(t(h),t=void 0),s},get readableLength(){return g.readableLength},onEmpty:h=>g.onEmpty(h)},s}var Vu=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=t??"ABORT_ERR"}};async function Ln(r,e,t,n){let s=new Vu(n?.errorMessage,n?.errorCode);return t?.aborted===!0?Promise.reject(s):new Promise((o,i)=>{function a(){t?.removeEventListener("abort",u),r.removeEventListener(e,c),n?.errorEvent!=null&&r.removeEventListener(n.errorEvent,l)}let c=f=>{try{if(n?.filter?.(f)===!1)return}catch(d){a(),i(d);return}a(),o(f)},l=f=>{a(),i(f.detail)},u=()=>{a(),i(s)};t?.addEventListener("abort",u),r.addEventListener(e,c),n?.errorEvent!=null&&r.addEventListener(n.errorEvent,l)})}var Aa=class extends Error{type;code;constructor(e,t,n){super(e??"The operation was aborted"),this.type="aborted",this.name=n??"AbortError",this.code=t??"ABORT_ERR"}};async function ir(r,e,t){if(e==null)return r;if(e.aborted)return Promise.reject(new Aa(t?.errorMessage,t?.errorCode,t?.errorName));let n,s=new Aa(t?.errorMessage,t?.errorCode,t?.errorName);try{return await Promise.race([r,new Promise((o,i)=>{n=()=>{i(s)},e.addEventListener("abort",n)})])}finally{n!=null&&e.removeEventListener("abort",n)}}var Sa=class{deferred;signal;constructor(e){this.signal=e,this.deferred=ue(),this.onAbort=this.onAbort.bind(this),this.signal?.addEventListener("abort",this.onAbort)}onAbort(){this.deferred.reject(this.signal?.reason??new Je)}cleanup(){this.signal?.removeEventListener("abort",this.onAbort)}};function Ob(){return`${parseInt(String(Math.random()*1e9),10).toString()}${Date.now()}`}var _a=class{id;fn;options;recipients;status;timeline;controller;constructor(e,t){this.id=Ob(),this.status="queued",this.fn=e,this.options=t,this.recipients=[],this.timeline={created:Date.now()},this.controller=new AbortController,this.controller.signal,this.onAbort=this.onAbort.bind(this)}abort(e){this.controller.abort(e)}onAbort(){this.recipients.reduce((t,n)=>t&&n.signal?.aborted===!0,!0)&&(this.controller.abort(new Je),this.cleanup())}async join(e={}){let t=new Sa(e.signal);return this.recipients.push(t),e.signal?.addEventListener("abort",this.onAbort),t.deferred.promise}async run(){this.status="running",this.timeline.started=Date.now();try{this.controller.signal.throwIfAborted();let e=await ir(this.fn({...this.options??{},signal:this.controller.signal}),this.controller.signal);this.recipients.forEach(t=>{t.deferred.resolve(e)}),this.status="complete"}catch(e){this.recipients.forEach(t=>{t.deferred.reject(e)}),this.status="errored"}finally{this.timeline.finished=Date.now(),this.cleanup()}}cleanup(){this.recipients.forEach(e=>{e.cleanup(),e.signal?.removeEventListener("abort",this.onAbort)})}};var Nn=class extends xt{concurrency;maxSize;queue;pending;sort;constructor(e={}){super(),this.concurrency=e.concurrency??Number.POSITIVE_INFINITY,this.maxSize=e.maxSize??Number.POSITIVE_INFINITY,this.pending=0,e.metricName!=null&&e.metrics?.registerMetricGroup(e.metricName,{calculate:()=>({size:this.queue.length,running:this.pending,queued:this.queue.length-this.pending})}),this.sort=e.sort,this.queue=[]}tryToStartAnother(){if(this.size===0)return queueMicrotask(()=>{this.safeDispatchEvent("empty")}),this.running===0&&queueMicrotask(()=>{this.safeDispatchEvent("idle")}),!1;if(this.pending<this.concurrency){let e;for(let t of this.queue)if(t.status==="queued"){e=t;break}return e==null?!1:(this.safeDispatchEvent("active"),this.pending++,e.run().finally(()=>{for(let t=0;t<this.queue.length;t++)if(this.queue[t]===e){this.queue.splice(t,1);break}this.pending--,this.tryToStartAnother(),this.safeDispatchEvent("next")}),!0)}return!1}enqueue(e){this.queue.push(e),this.sort!=null&&this.queue.sort(this.sort)}async add(e,t){if(t?.signal?.throwIfAborted(),this.size===this.maxSize)throw new ma;let n=new _a(e,t);return this.enqueue(n),this.safeDispatchEvent("add"),this.tryToStartAnother(),n.join(t).then(s=>(this.safeDispatchEvent("completed",{detail:s}),this.safeDispatchEvent("success",{detail:{job:n,result:s}}),s)).catch(s=>{if(n.status==="queued"){for(let o=0;o<this.queue.length;o++)if(this.queue[o]===n){this.queue.splice(o,1);break}}throw this.safeDispatchEvent("error",{detail:s}),this.safeDispatchEvent("failure",{detail:{job:n,error:s}}),s})}clear(){this.queue.splice(0,this.queue.length)}abort(){this.queue.forEach(e=>{e.abort(new Je)}),this.clear()}async onEmpty(e){this.size!==0&&await Ln(this,"empty",e?.signal)}async onSizeLessThan(e,t){this.size<e||await Ln(this,"next",t?.signal,{filter:()=>this.size<e})}async onIdle(e){this.pending===0&&this.size===0||await Ln(this,"idle",e?.signal)}get size(){return this.queue.length}get queued(){return this.queue.length-this.pending}get running(){return this.pending}async*toGenerator(e){e?.signal?.throwIfAborted();let t=Ea({objectMode:!0}),n=c=>{c!=null?this.abort():this.clear(),t.end(c)},s=c=>{c.detail!=null&&t.push(c.detail)},o=c=>{n(c.detail)},i=()=>{n()},a=()=>{n(new Je("Queue aborted"))};this.addEventListener("completed",s),this.addEventListener("error",o),this.addEventListener("idle",i),e?.signal?.addEventListener("abort",a);try{yield*t}finally{this.removeEventListener("completed",s),this.removeEventListener("error",o),this.removeEventListener("idle",i),e?.signal?.removeEventListener("abort",a),n()}}};var Ca=class extends Nn{constructor(e={}){super({...e,sort:(t,n)=>t.options.priority>n.options.priority?-1:t.options.priority<n.options.priority?1:0})}};function Or(r){let e=new globalThis.AbortController;function t(){e.abort();for(let o of r)o?.removeEventListener!=null&&o.removeEventListener("abort",t)}for(let o of r){if(o?.aborted===!0){t();break}o?.addEventListener!=null&&o.addEventListener("abort",t)}function n(){for(let o of r)o?.removeEventListener!=null&&o.removeEventListener("abort",t)}let s=e.signal;return s.clear=n,s}function im(r){return/^127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(r)||/^::1$/.test(r)}function Hu(r){if(!ra(r))return!1;let{address:e}=r.nodeAddress();return im(e)}function Ub(r,e){let t=Ns.exactMatch(r.multiaddr),n=Ns.exactMatch(e.multiaddr);if(t&&!n)return-1;if(!t&&n)return 1;let s=Ds.exactMatch(r.multiaddr),o=Ds.exactMatch(e.multiaddr);if(s&&!o)return-1;if(!s&&o)return 1;let i=Pr.exactMatch(r.multiaddr),a=Pr.exactMatch(e.multiaddr);if(i&&!a)return-1;if(!i&&a)return 1;let c=Tu.exactMatch(r.multiaddr),l=Tu.exactMatch(e.multiaddr);if(c&&!l)return-1;if(!c&&l)return 1;let u=Bu.exactMatch(r.multiaddr),f=Bu.exactMatch(e.multiaddr);if(u&&!f)return-1;if(!u&&f)return 1;let d=ku.exactMatch(r.multiaddr),m=ku.exactMatch(e.multiaddr);return d&&!m?-1:!d&&m?1:0}function Fb(r,e){let t=Hu(r.multiaddr),n=Hu(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function Vb(r,e){let t=Nr(r.multiaddr),n=Nr(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function Hb(r,e){return r.isCertified&&!e.isCertified?-1:!r.isCertified&&e.isCertified?1:0}function Kb(r,e){let t=Rs.exactMatch(r.multiaddr),n=Rs.exactMatch(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function am(r){return r.sort(Ub).sort(Hb).sort(Kb).sort(Vb).sort(Fb)}var Ia={maxParallelDials:ba,maxDialQueueLength:500,maxPeerAddrsToDial:25,dialTimeout:5e3,resolvers:{dnsaddr:Er}},Ba=class{queue;components;addressSorter;maxPeerAddrsToDial;maxDialQueueLength;dialTimeout;shutDownController;connections;log;constructor(e,t={}){this.addressSorter=t.addressSorter,this.maxPeerAddrsToDial=t.maxPeerAddrsToDial??Ia.maxPeerAddrsToDial,this.maxDialQueueLength=t.maxDialQueueLength??Ia.maxDialQueueLength,this.dialTimeout=t.dialTimeout??Ia.dialTimeout,this.connections=t.connections??new Mt,this.log=e.logger.forComponent("libp2p:connection-manager:dial-queue"),this.components=e,this.shutDownController=new AbortController,this.shutDownController.signal;for(let[n,s]of Object.entries(t.resolvers??{}))xn.set(n,s);this.queue=new Ca({concurrency:t.maxParallelDials??Ia.maxParallelDials,metricName:"libp2p_dial_queue",metrics:e.metrics}),this.queue.addEventListener("error",n=>{n.detail.name!==Je.name&&this.log.error("error in dial queue - %e",n.detail)})}start(){this.shutDownController=new AbortController,this.shutDownController.signal}stop(){this.shutDownController.abort(),this.queue.abort()}async dial(e,t={}){let{peerId:n,multiaddrs:s}=ya(e),o=Array.from(this.connections.values()).flat().find(a=>t.force===!0?!1:a.remotePeer.equals(n)?!0:s.find(c=>c.equals(a.remoteAddr)));if(o?.status==="open")return this.log("already connected to %a",o.remoteAddr),t.onProgress?.(new fe("dial-queue:already-connected")),o;let i=this.queue.queue.find(a=>{if(n?.equals(a.options.peerId)===!0)return!0;let c=a.options.multiaddrs;if(c==null)return!1;for(let l of s)if(c.has(l.toString()))return!0;return!1});if(i!=null){this.log("joining existing dial target for %p",n);for(let a of s)i.options.multiaddrs.add(a.toString());return t.onProgress?.(new fe("dial-queue:already-in-dial-queue")),i.join(t)}if(this.queue.size>=this.maxDialQueueLength)throw new zr("Dial queue is full");return this.log("creating dial target for %p",n,s.map(a=>a.toString())),t.onProgress?.(new fe("dial-queue:add-to-dial-queue")),this.queue.add(async a=>{a?.onProgress?.(new fe("dial-queue:start-dial"));let c=Or([this.shutDownController.signal,a.signal]);let l;try{l=await this.calculateMultiaddrs(n,a?.multiaddrs,{...a,signal:c}),a?.onProgress?.(new fe("dial-queue:calculated-addresses",l)),l.map(({multiaddr:u})=>u.toString()).forEach(u=>{a?.multiaddrs.add(u)})}catch(u){throw c.clear(),u}try{let u=0,f=[];for(let d of l){if(u===this.maxPeerAddrsToDial)throw this.log("dialed maxPeerAddrsToDial (%d) addresses for %p, not trying any others",u,n),new zr("Peer had more than maxPeerAddrsToDial");u++;try{let m=await this.components.transportManager.dial(d.multiaddr,{...a,signal:c});this.log("dial to %a succeeded",d.multiaddr);try{await this.components.peerStore.merge(m.remotePeer,{multiaddrs:[m.remoteAddr],metadata:{[sm]:N(Date.now().toString())}})}catch(p){this.log.error("could not update last dial failure key for %p",n,p)}return m}catch(m){if(this.log.error("dial failed to %a",d.multiaddr,m),n!=null)try{await this.components.peerStore.merge(n,{metadata:{[nm]:N(Date.now().toString())}})}catch(p){this.log.error("could not update last dial failure key for %p",n,p)}if(c.aborted)throw new Js(m.message);f.push(m)}}throw f.length===1?f[0]:new AggregateError(f,"All multiaddr dials failed")}finally{c.clear()}},{peerId:n,priority:t.priority??zu,multiaddrs:new Set(s.map(a=>a.toString())),signal:t.signal??AbortSignal.timeout(this.dialTimeout),onProgress:t.onProgress})}async calculateMultiaddrs(e,t=new Set,n={}){let s=[...t].map(f=>({multiaddr:j(f),isCertified:!1}));if(e!=null){if(this.components.peerId.equals(e))throw new zr("Tried to dial self");if(await this.components.connectionGater.denyDialPeer?.(e)===!0)throw new Os("The dial request is blocked by gater.allowDialPeer");if(s.length===0){this.log("loading multiaddrs for %p",e);try{let f=await this.components.peerStore.get(e);s.push(...f.addresses),this.log("loaded multiaddrs for %p",e,s.map(({multiaddr:d})=>d.toString()))}catch(f){if(f.name!=="NotFoundError")throw f}}if(s.length===0){this.log("looking up multiaddrs for %p in the peer routing",e);try{let f=await this.components.peerRouting.findPeer(e,n);this.log("found multiaddrs for %p in the peer routing",e,s.map(({multiaddr:d})=>d.toString())),s.push(...f.multiaddrs.map(d=>({multiaddr:d,isCertified:!1})))}catch(f){f.name!=="NoPeerRoutersError"&&this.log.error("looking up multiaddrs for %p in the peer routing failed",e,f)}}}let o=(await Promise.all(s.map(async f=>{let d=await om(f.multiaddr,{dns:this.components.dns,...n,log:this.log});return d.length===1&&d[0].equals(f.multiaddr)?f:d.map(m=>({multiaddr:m,isCertified:!1}))}))).flat();if(e!=null){let f=`/p2p/${e.toString()}`;o=o.map(d=>d.multiaddr.protos().pop()?.path===!0?d:d.multiaddr.getPeerId()==null?{multiaddr:d.multiaddr.encapsulate(f),isCertified:d.isCertified}:d)}let i=o.filter(f=>{if(this.components.transportManager.dialTransportForMultiaddr(f.multiaddr)==null)return!1;let d=f.multiaddr.getPeerId();return e!=null&&d!=null?e.equals(d):!0}),a=new Map;for(let f of i){let d=f.multiaddr.toString(),m=a.get(d);if(m!=null){m.isCertified=m.isCertified||f.isCertified||!1;continue}a.set(d,f)}let c=[...a.values()];if(c.length===0)throw new Dr("The dial request has no valid addresses");let l=[];for(let f of c)this.components.connectionGater.denyDialMultiaddr!=null&&await this.components.connectionGater.denyDialMultiaddr(f.multiaddr)||l.push(f);let u=this.addressSorter==null?am(l):l.sort(this.addressSorter);if(u.length===0)throw new Os("The connection gater denied all addresses in the dial request");return this.log.trace("addresses for %p before filtering",e??"unknown peer",o.map(({multiaddr:f})=>f.toString())),this.log.trace("addresses for %p after filtering",e??"unknown peer",u.map(({multiaddr:f})=>f.toString())),u}async isDialable(e,t={}){Array.isArray(e)||(e=[e]);try{let n=await this.calculateMultiaddrs(void 0,new Set(e.map(s=>s.toString())),t);return t.runOnLimitedConnection===!1?n.find(s=>!Rs.matches(s.multiaddr))!=null:!0}catch(n){this.log.trace("error calculating if multiaddr(s) were dialable",n)}return!1}};var ka=class extends Nn{has(e){return this.find(e)!=null}find(e){return this.queue.find(t=>e.equals(t.options.peerId))}};var pm=Hr(dm(),1);var qb=Object.prototype.toString,zb=r=>qb.call(r)==="[object Error]",Gb=new Set(["network error","Failed to fetch","NetworkError when attempting to fetch resource.","The Internet connection appears to be offline.","Load failed","Network request failed","fetch failed","terminated"]);function Gu(r){return r&&zb(r)&&r.name==="TypeError"&&typeof r.message=="string"?r.message==="Load failed"?r.stack===void 0:Gb.has(r.message):!1}var Wu=class extends Error{constructor(e){super(),e instanceof Error?(this.originalError=e,{message:e}=e):(this.originalError=new Error(e),this.originalError.stack=this.stack),this.name="AbortError",this.message=e}},hm=(r,e,t)=>{let n=t.retries-(e-1);return r.attemptNumber=e,r.retriesLeft=n,r};async function ju(r,e){return new Promise((t,n)=>{e={...e},e.onFailedAttempt??=()=>{},e.shouldRetry??=()=>!0,e.retries??=10;let s=pm.default.operation(e),o=()=>{s.stop(),n(e.signal?.reason)};e.signal&&!e.signal.aborted&&e.signal.addEventListener("abort",o,{once:!0});let i=()=>{e.signal?.removeEventListener("abort",o),s.stop()};s.attempt(async a=>{try{let c=await r(a);i(),t(c)}catch(c){try{if(!(c instanceof Error))throw new TypeError(`Non-error was thrown: "${c}". You should only throw errors.`);if(c instanceof Wu)throw c.originalError;if(c instanceof TypeError&&!Gu(c))throw c;if(hm(c,a,e),await e.shouldRetry(c)||(s.stop(),n(c)),await e.onFailedAttempt(c),!s.retry(c))throw s.mainError()}catch(l){hm(l,a,e),i(),n(l)}}})})}var Ta=class{log;queue;started;peerStore;retries;retryInterval;backoffFactor;connectionManager;events;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:reconnect-queue"),this.peerStore=e.peerStore,this.connectionManager=e.connectionManager,this.queue=new ka({concurrency:t.maxParallelReconnects??5,metricName:"libp2p_reconnect_queue",metrics:e.metrics}),this.started=!1,this.retries=t.retries??5,this.backoffFactor=t.backoffFactor,this.retryInterval=t.retryInterval,this.events=e.events,e.events.addEventListener("peer:disconnect",n=>{this.maybeReconnect(n.detail).catch(s=>{this.log.error("failed to maybe reconnect to %p - %e",n.detail,s)})})}async maybeReconnect(e){if(!this.started)return;let t=await this.peerStore.get(e);mm(t)&&(this.queue.has(e)||this.queue.add(async n=>{await ju(async s=>{if(this.started)try{await this.connectionManager.openConnection(e,{signal:n?.signal})}catch(o){throw this.log("reconnecting to %p attempt %d of %d failed - %e",e,s,this.retries,o),o}},{signal:n?.signal,retries:this.retries,factor:this.backoffFactor,minTimeout:this.retryInterval})},{peerId:e}).catch(async n=>{this.log.error("failed to reconnect to %p - %e",e,n);let s={};[...t.tags.keys()].forEach(o=>{o.startsWith(oc)&&(s[o]=void 0)}),await this.peerStore.merge(e,{tags:s}),this.events.safeDispatchEvent("peer:reconnect-failure",{detail:e})}).catch(async n=>{this.log.error("failed to remove keep-alive tag from %p - %e",e,n)}))}start(){this.started=!0}async afterStart(){Promise.resolve().then(async()=>{let e=await this.peerStore.all({filters:[t=>mm(t)]});await Promise.all(e.map(async t=>{await this.connectionManager.openConnection(t.id).catch(n=>{this.log.error(n)})}))}).catch(e=>{this.log.error(e)})}stop(){this.started=!1,this.queue.abort()}};function mm(r){for(let e of r.tags.keys())if(e.startsWith(oc))return!0;return!1}var zu=50,Zu={maxConnections:wa,inboundConnectionThreshold:5,maxIncomingPendingConnections:10},La=class{started;connections;allow;deny;maxIncomingPendingConnections;incomingPendingConnections;outboundPendingConnections;maxConnections;dialQueue;reconnectQueue;connectionPruner;inboundConnectionRateLimiter;peerStore;metrics;events;log;peerId;constructor(e,t={}){if(this.maxConnections=t.maxConnections??Zu.maxConnections,this.maxConnections<1)throw new D("Connection Manager maxConnections must be greater than 0");this.connections=new Mt,this.started=!1,this.peerId=e.peerId,this.peerStore=e.peerStore,this.metrics=e.metrics,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager"),this.onConnect=this.onConnect.bind(this),this.onDisconnect=this.onDisconnect.bind(this),this.allow=(t.allow??[]).map(n=>Us(n)),this.deny=(t.deny??[]).map(n=>Us(n)),this.incomingPendingConnections=0,this.maxIncomingPendingConnections=t.maxIncomingPendingConnections??Zu.maxIncomingPendingConnections,this.outboundPendingConnections=0,this.inboundConnectionRateLimiter=new ga({points:t.inboundConnectionThreshold??Zu.inboundConnectionThreshold,duration:1}),this.connectionPruner=new xa({connectionManager:this,peerStore:e.peerStore,events:e.events,logger:e.logger},{maxConnections:this.maxConnections,allow:t.allow?.map(n=>j(n))}),this.dialQueue=new Ba(e,{addressSorter:t.addressSorter,maxParallelDials:t.maxParallelDials??ba,maxDialQueueLength:t.maxDialQueueLength??500,maxPeerAddrsToDial:t.maxPeerAddrsToDial??25,dialTimeout:t.dialTimeout??5e3,resolvers:t.resolvers??{dnsaddr:Er},connections:this.connections}),this.reconnectQueue=new Ta({events:e.events,peerStore:e.peerStore,logger:e.logger,connectionManager:this},{retries:t.reconnectRetries,retryInterval:t.reconnectRetryInterval,backoffFactor:t.reconnectBackoffFactor,maxParallelReconnects:t.maxParallelReconnects})}[Symbol.toStringTag]="@libp2p/connection-manager";async start(){this.metrics?.registerMetricGroup("libp2p_connection_manager_connections",{calculate:()=>{let e={inbound:0,"inbound pending":this.incomingPendingConnections,outbound:0,"outbound pending":this.outboundPendingConnections};for(let t of this.connections.values())for(let n of t)e[n.direction]++;return e}}),this.metrics?.registerMetricGroup("libp2p_protocol_streams_total",{label:"protocol",calculate:()=>{let e={};for(let t of this.connections.values())for(let n of t)for(let s of n.streams){let o=`${s.direction} ${s.protocol??"unnegotiated"}`;e[o]=(e[o]??0)+1}return e}}),this.metrics?.registerMetricGroup("libp2p_connection_manager_protocol_streams_per_connection_90th_percentile",{label:"protocol",calculate:()=>{let e={};for(let n of this.connections.values())for(let s of n){let o={};for(let i of s.streams){let a=`${i.direction} ${i.protocol??"unnegotiated"}`;o[a]=(o[a]??0)+1}for(let[i,a]of Object.entries(o))e[i]=e[i]??[],e[i].push(a)}let t={};for(let[n,s]of Object.entries(e)){s=s.sort((i,a)=>i-a);let o=Math.floor(s.length*.9);t[n]=s[o]}return t}}),this.events.addEventListener("connection:open",this.onConnect),this.events.addEventListener("connection:close",this.onDisconnect),await yf(this.dialQueue,this.reconnectQueue,this.connectionPruner),this.started=!0,this.log("started")}async stop(){this.events.removeEventListener("connection:open",this.onConnect),this.events.removeEventListener("connection:close",this.onDisconnect),await wf(this.reconnectQueue,this.dialQueue,this.connectionPruner);let e=[];for(let t of this.connections.values())for(let n of t)e.push((async()=>{try{await n.close()}catch(s){this.log.error(s)}})());this.log("closing %d connections",e.length),await Promise.all(e),this.connections.clear(),this.log("stopped")}getMaxConnections(){return this.maxConnections}onConnect(e){this._onConnect(e).catch(t=>{this.log.error(t)})}async _onConnect(e){let{detail:t}=e;if(!this.started){await t.close();return}if(t.status!=="open")return;let n=t.remotePeer,s=!this.connections.has(n),o=this.connections.get(n)??[];o.push(t),this.connections.set(n,o),n.publicKey!=null&&n.type==="RSA"&&await this.peerStore.patch(n,{publicKey:n.publicKey}),s&&this.events.safeDispatchEvent("peer:connect",{detail:t.remotePeer})}onDisconnect(e){let{detail:t}=e,n=t.remotePeer,o=(this.connections.get(n)??[]).filter(i=>i.id!==t.id);this.connections.set(n,o),o.length===0&&(this.log("onDisconnect remove all connections for peer %p",n),this.connections.delete(n),this.events.safeDispatchEvent("peer:disconnect",{detail:t.remotePeer}))}getConnections(e){if(e!=null)return this.connections.get(e)??[];let t=[];for(let n of this.connections.values())t=t.concat(n);return t}getConnectionsMap(){return this.connections}async openConnection(e,t={}){if(!this.started)throw new bt("Not started");this.outboundPendingConnections++;try{t.signal?.throwIfAborted();let{peerId:n}=ya(e);if(this.peerId.equals(n))throw new qr("Can not dial self");if(n!=null&&t.force!==!0){this.log("dial %p",n);let a=this.getConnections(n).find(c=>c.limits==null);if(a!=null)return this.log("had an existing non-limited connection to %p",n),t.onProgress?.(new fe("dial-queue:already-connected")),a}let s=await this.dialQueue.dial(e,{...t,priority:t.priority??zu});if(s.status!=="open")throw new $r("Remote closed connection during opening");let o=this.connections.get(s.remotePeer);o==null&&(o=[],this.connections.set(s.remotePeer,o));let i=!1;for(let a of o)if(a.id===s.id&&(i=!0),t.force!==!0&&a.id!==s.id&&a.remoteAddr.equals(s.remoteAddr))return s.abort(new Vt("Duplicate multiaddr connection")),a;return i||o.push(s),s}finally{this.outboundPendingConnections--}}async closeConnections(e,t={}){let n=this.connections.get(e)??[];await Promise.all(n.map(async s=>{try{await s.close(t)}catch(o){s.abort(o)}}))}async acceptIncomingConnection(e){if(this.deny.some(s=>s.contains(e.remoteAddr.nodeAddress().address)))return this.log("connection from %a refused - connection remote address was in deny list",e.remoteAddr),!1;if(this.allow.some(s=>s.contains(e.remoteAddr.nodeAddress().address)))return this.incomingPendingConnections++,!0;if(this.incomingPendingConnections===this.maxIncomingPendingConnections)return this.log("connection from %a refused - incomingPendingConnections exceeded by host",e.remoteAddr),!1;if(e.remoteAddr.isThinWaistAddress()){let s=e.remoteAddr.nodeAddress().address;try{await this.inboundConnectionRateLimiter.consume(s,1)}catch{return this.log("connection from %a refused - inboundConnectionThreshold exceeded by host %s",e.remoteAddr,s),!1}}return this.getConnections().length<this.maxConnections?(this.incomingPendingConnections++,!0):(this.log("connection from %a refused - maxConnections exceeded",e.remoteAddr),!1)}afterUpgradeInbound(){this.incomingPendingConnections--}getDialQueue(){let e={queued:"queued",running:"active",errored:"error",complete:"success"};return this.dialQueue.queue.queue.map(t=>({id:t.id,status:e[t.status],peerId:t.options.peerId,multiaddrs:[...t.options.multiaddrs].map(n=>j(n))}))}async isDialable(e,t={}){return this.dialQueue.isDialable(e,t)}};var Dn=class{movingAverage;variance;deviation;forecast;timespan;previousTime;constructor(e){this.timespan=e,this.movingAverage=0,this.variance=0,this.deviation=0,this.forecast=0}alpha(e,t){return 1-Math.exp(-(e-t)/this.timespan)}push(e,t=Date.now()){if(this.previousTime!=null){let n=this.alpha(t,this.previousTime),s=e-this.movingAverage,o=n*s;this.movingAverage=n*e+(1-n)*this.movingAverage,this.variance=(1-n)*(this.variance+s*o),this.deviation=Math.sqrt(this.variance),this.forecast=this.movingAverage+n*s}else this.movingAverage=e;this.previousTime=t}};var Zb=1.2,Xb=2,Yb=2e3,Pa=class{success;failure;next;metric;timeoutMultiplier;failureMultiplier;minTimeout;constructor(e={}){this.success=new Dn(e.interval??5e3),this.failure=new Dn(e.interval??5e3),this.next=new Dn(e.interval??5e3),this.failureMultiplier=e.failureMultiplier??Xb,this.timeoutMultiplier=e.timeoutMultiplier??Zb,this.minTimeout=e.minTimeout??Yb,e.metricName!=null&&(this.metric=e.metrics?.registerMetricGroup(e.metricName))}getTimeoutSignal(e={}){let t=Math.max(Math.round(this.next.movingAverage*(e.timeoutFactor??this.timeoutMultiplier)),this.minTimeout),n=AbortSignal.timeout(t),s=Or([e.signal,n]);return s.start=Date.now(),s.timeout=t,s}cleanUp(e){let t=Date.now()-e.start;e.aborted?(this.failure.push(t),this.next.push(t*this.failureMultiplier),this.metric?.update({failureMovingAverage:this.failure.movingAverage,failureDeviation:this.failure.deviation,failureForecast:this.failure.forecast,failureVariance:this.failure.variance,failure:t})):(this.success.push(t),this.next.push(t),this.metric?.update({successMovingAverage:this.success.movingAverage,successDeviation:this.success.deviation,successForecast:this.success.forecast,successVariance:this.success.variance,success:t}))}};var Xu=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=ue(),this.haveNext=ue()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let e=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=ue(),e}async throw(e){return this.ended=!0,e!=null&&(this.haveNext.promise.catch(()=>{}),this.haveNext.reject(e)),{done:!0,value:void 0}}async return(){let e={done:!0,value:void 0};return await this._push(void 0),e}async push(e,t){await this._push(e,t)}async end(e,t){e!=null?await this.throw(e):await this._push(void 0,t)}async _push(e,t){if(e!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");for(;this.nextResult!=null;)await this.readNext.promise;e!=null?this.nextResult={done:!1,value:e}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=ue(),await ir(this.readNext.promise,t?.signal,t)}};function gm(){return new Xu}var Na=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var Yu=class extends Error{code;constructor(e,t){super(e),this.code=t}},Ju=class extends Yu{type;constructor(e){super(e,"ABORT_ERR"),this.type="aborted",this.name="AbortError"}};function Da(r,e){let t=gm();r.sink(t).catch(async i=>{await t.end(i)}),r.sink=async i=>{for await(let a of i)await t.push(a);await t.end()};let n=r.source;r.source[Symbol.iterator]!=null?n=r.source[Symbol.iterator]():r.source[Symbol.asyncIterator]!=null&&(n=r.source[Symbol.asyncIterator]());let s=new ye;return{read:async(i,a)=>{a?.signal?.throwIfAborted();let c,l=new Promise((u,f)=>{c=()=>{f(new Ju("Read aborted"))},a?.signal?.addEventListener("abort",c)});try{if(i==null){let{done:f,value:d}=await Promise.race([n.next(),l]);return f===!0?new ye:d}for(;s.byteLength<i;){let{value:f,done:d}=await Promise.race([n.next(),l]);if(d===!0)throw new Na("unexpected end of input");s.append(f)}let u=s.sublist(0,i);return s.consume(i),u}finally{c!=null&&a?.signal?.removeEventListener("abort",c)}},write:async(i,a)=>{a?.signal?.throwIfAborted(),i instanceof Uint8Array?await t.push(i,a):await t.push(i.subarray(),a)},unwrap:()=>{if(s.byteLength>0){let i=r.source;r.source=async function*(){e?.yieldBytes===!1?yield s:yield*s,yield*i}()}return r}}}var Jb=1e4,Qb="1.0.0",ex="ping",tx="ipfs",ym=32,rx=!0,Ra=class{protocol;components;log;heartbeatInterval;pingIntervalMs;abortController;timeout;abortConnectionOnPingFailure;constructor(e,t={}){this.components=e,this.protocol=`/${t.protocolPrefix??tx}/${ex}/${Qb}`,this.log=e.logger.forComponent("libp2p:connection-monitor"),this.pingIntervalMs=t.pingInterval??Jb,this.abortConnectionOnPingFailure=t.abortConnectionOnPingFailure??rx,this.timeout=new Pa({...t.pingTimeout??{},metrics:e.metrics,metricName:"libp2p_connection_monitor_ping_time_milliseconds"})}[Symbol.toStringTag]="@libp2p/connection-monitor";[Fn]=["@libp2p/connection-monitor"];start(){this.abortController=new AbortController,this.abortController.signal,this.heartbeatInterval=setInterval(()=>{this.components.connectionManager.getConnections().forEach(e=>{Promise.resolve().then(async()=>{let t=Date.now();try{let n=this.timeout.getTimeoutSignal({signal:this.abortController?.signal}),s=await e.newStream(this.protocol,{signal:n,runOnLimitedConnection:!0}),o=Da(s);t=Date.now(),await Promise.all([o.write(dn(ym),{signal:n}),o.read(ym,{signal:n})]),e.rtt=Date.now()-t,await o.unwrap().close({signal:n})}catch(n){if(n.name!=="UnsupportedProtocolError")throw n;e.rtt=(Date.now()-t)/2}}).catch(t=>{this.log.error("error during heartbeat",t),this.abortConnectionOnPingFailure?(this.log.error("aborting connection due to ping failure"),e.abort(t)):this.log("connection ping failed, but not aborting due to abortConnectionOnPingFailure flag")})})},this.pingIntervalMs)}stop(){this.abortController?.abort(),this.heartbeatInterval!=null&&clearInterval(this.heartbeatInterval)}};function nx(r){return r[Symbol.asyncIterator]!=null}function sx(...r){let e=[];for(let t of r)nx(t)||e.push(t);return e.length===r.length?function*(){for(let t of e)yield*t}():async function*(){let t=Ea({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(r.map(async n=>{for await(let s of n)t.push(s)})),t.end()}catch(n){t.end(n)}}),yield*t}()}var Fs=sx;var Ma=class{routers;started;components;constructor(e,t){this.routers=t.routers??[],this.started=!1,this.components=e,this.findProviders=e.metrics?.traceFunction("libp2p.contentRouting.findProviders",this.findProviders.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,cid:n.toString()}),getAttributesFromYieldedValue:(n,s)=>({...s,providers:[...Array.isArray(s.providers)?s.providers:[],n.id.toString()]})})??this.findProviders,this.provide=e.metrics?.traceFunction("libp2p.contentRouting.provide",this.provide.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,cid:n.toString()})})??this.provide,this.cancelReprovide=e.metrics?.traceFunction("libp2p.contentRouting.cancelReprovide",this.cancelReprovide.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,cid:n.toString()})})??this.cancelReprovide,this.put=e.metrics?.traceFunction("libp2p.contentRouting.put",this.put.bind(this),{optionsIndex:2,getAttributesFromArgs:([n])=>({key:z(n,"base36")})})??this.put,this.get=e.metrics?.traceFunction("libp2p.contentRouting.get",this.get.bind(this),{optionsIndex:1,getAttributesFromArgs:([n])=>({key:z(n,"base36")})})??this.get}[Symbol.toStringTag]="@libp2p/content-routing";isStarted(){return this.started}async start(){this.started=!0}async stop(){this.started=!1}async*findProviders(e,t={}){if(this.routers.length===0)throw new kn("No content routers available");let n=this,s=new Sr;for await(let o of Fs(...n.routers.map(i=>i.findProviders(e,t))))o!=null&&(o.multiaddrs.length>0&&await this.components.peerStore.merge(o.id,{multiaddrs:o.multiaddrs}),!s.has(o.id)&&(s.add(o.id),yield o))}async provide(e,t={}){if(this.routers.length===0)throw new kn("No content routers available");await Promise.all(this.routers.map(async n=>{await n.provide(e,t)}))}async cancelReprovide(e,t={}){if(this.routers.length===0)throw new kn("No content routers available");await Promise.all(this.routers.map(async n=>{await n.cancelReprovide(e,t)}))}async put(e,t,n){if(!this.isStarted())throw new bt;await Promise.all(this.routers.map(async s=>{await s.put(e,t,n)}))}async get(e,t){if(!this.isStarted())throw new bt;return Promise.any(this.routers.map(async n=>n.get(e,t)))}};var Oa=globalThis.CustomEvent??Event;async function*Qu(r,e={}){let t=e.concurrency??1/0;t<1&&(t=1/0);let n=e.ordered==null?!1:e.ordered,s=new EventTarget,o=[],i=ue(),a=ue(),c=!1,l,u=!1;s.addEventListener("task-complete",()=>{a.resolve()}),Promise.resolve().then(async()=>{try{for await(let p of r){if(o.length===t&&(i=ue(),await i.promise),u)break;let g={done:!1};o.push(g),p().then(h=>{g.done=!0,g.ok=!0,g.value=h,s.dispatchEvent(new Oa("task-complete"))},h=>{g.done=!0,g.err=h,s.dispatchEvent(new Oa("task-complete"))})}c=!0,s.dispatchEvent(new Oa("task-complete"))}catch(p){l=p,s.dispatchEvent(new Oa("task-complete"))}});function f(){return n?o[0]?.done:!!o.find(p=>p.done)}function*d(){for(;o.length>0&&o[0].done;){let p=o[0];if(o.shift(),p.ok)yield p.value;else throw u=!0,i.resolve(),p.err;i.resolve()}}function*m(){for(;f();)for(let p=0;p<o.length;p++)if(o[p].done){let g=o[p];if(o.splice(p,1),p--,g.ok)yield g.value;else throw u=!0,i.resolve(),g.err;i.resolve()}}for(;;){if(f()||(a=ue(),await a.promise),l!=null)throw l;if(n?yield*d():yield*m(),c&&o.length===0)break}}var Ua=class{log;peerId;peerStore;routers;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-routing"),this.peerId=e.peerId,this.peerStore=e.peerStore,this.routers=t.routers??[],this.findPeer=e.metrics?.traceFunction("libp2p.peerRouting.findPeer",this.findPeer.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,peer:n.toString()})})??this.findPeer,this.getClosestPeers=e.metrics?.traceFunction("libp2p.peerRouting.getClosestPeers",this.getClosestPeers.bind(this),{optionsIndex:1,getAttributesFromArgs:([n],s)=>({...s,key:z(n,"base36")}),getAttributesFromYieldedValue:(n,s)=>({...s,peers:[...Array.isArray(s.peers)?s.peers:[],n.id.toString()]})})??this.getClosestPeers}[Symbol.toStringTag]="@libp2p/peer-routing";async findPeer(e,t){if(this.routers.length===0)throw new Ms("No peer routers available");if(e.toString()===this.peerId.toString())throw new ca("Should not try to find self");let n=this,s=Fs(...this.routers.map(o=>async function*(){try{yield await o.findPeer(e,t)}catch(i){n.log.error(i)}}()));for await(let o of s)if(o!=null)return o.multiaddrs.length>0&&await this.peerStore.merge(o.id,{multiaddrs:o.multiaddrs}),o;throw new js}async*getClosestPeers(e,t={}){if(this.routers.length===0)throw new Ms("No peer routers available");let n=this,s=_s(1024);for await(let o of Qu(async function*(){let i=Fs(...n.routers.map(a=>a.getClosestPeers(e,t)));for await(let a of i)yield async()=>{if(a.multiaddrs.length===0)try{a=await n.findPeer(a.id,{...t,useCache:!1})}catch(c){n.log.error("could not find peer multiaddrs",c);return}return a}}()))o!=null&&(o.multiaddrs.length>0&&await this.peerStore.merge(o.id,{multiaddrs:o.multiaddrs}),!s.has(o.id.toMultihash().bytes)&&(s.add(o.id.toMultihash().bytes),yield o))}};var Fa=class extends xt{peerRouting;log;walking;walkers;shutdownController;walkController;needNext;constructor(e){super(),this.log=e.logger.forComponent("libp2p:random-walk"),this.peerRouting=e.peerRouting,this.walkers=0,this.walking=!1,this.shutdownController=new AbortController,this.shutdownController.signal}[Symbol.toStringTag]="@libp2p/random-walk";start(){this.shutdownController=new AbortController,this.shutdownController.signal}stop(){this.shutdownController.abort()}async*walk(e){this.walking||this.startWalk(),this.walkers++;let t=Or([this.shutdownController.signal,e?.signal]);try{for(;;)this.needNext?.resolve(),this.needNext=ue(),yield(await Ln(this,"walk:peer",t,{errorEvent:"walk:error"})).detail}finally{t.clear(),this.walkers--,this.walkers===0&&(this.walkController?.abort(),this.walkController=void 0)}}startWalk(){this.walking=!0,this.walkController=new AbortController,this.walkController.signal;let e=Or([this.walkController.signal,this.shutdownController.signal]);let t=Date.now(),n=0;Promise.resolve().then(async()=>{for(this.log("start walk");this.walkers>0;)try{let s=dn(32),o=Date.now();for await(let i of this.peerRouting.getClosestPeers(s,{signal:e}))e.aborted&&this.log("aborting walk"),e.throwIfAborted(),this.log("found peer %p after %dms for %d walkers",i.id,Date.now()-o,this.walkers),n++,this.safeDispatchEvent("walk:peer",{detail:i}),this.walkers===1&&this.needNext!=null&&(this.log("wait for need next"),await ir(this.needNext.promise,e)),o=Date.now();this.log("walk iteration for %b and %d walkers finished, found %d peers",s,this.walkers,n)}catch(s){this.log.error("randomwalk errored",s),this.safeDispatchEvent("walk:error",{detail:s})}this.log("no walkers left, ended walk")}).catch(s=>{this.log.error("randomwalk errored",s)}).finally(()=>{this.log("finished walk, found %d peers after %dms",n,Date.now()-t),this.walking=!1})}};var ef=32,tf=64,Va=class{log;topologies;handlers;components;constructor(e){this.log=e.logger.forComponent("libp2p:registrar"),this.topologies=new Map,this.handlers=new Map,this.components=e,this._onDisconnect=this._onDisconnect.bind(this),this._onPeerUpdate=this._onPeerUpdate.bind(this),this._onPeerIdentify=this._onPeerIdentify.bind(this),this.components.events.addEventListener("peer:disconnect",this._onDisconnect),this.components.events.addEventListener("peer:update",this._onPeerUpdate),this.components.events.addEventListener("peer:identify",this._onPeerIdentify)}[Symbol.toStringTag]="@libp2p/registrar";getProtocols(){return Array.from(new Set([...this.handlers.keys()])).sort()}getHandler(e){let t=this.handlers.get(e);if(t==null)throw new la(`No handler registered for protocol ${e}`);return t}getTopologies(e){let t=this.topologies.get(e);return t==null?[]:[...t.values()]}async handle(e,t,n){if(this.handlers.has(e)&&n?.force!==!0)throw new ua(`Handler already registered for protocol ${e}`);let s=Ti.bind({ignoreUndefined:!0})({maxInboundStreams:ef,maxOutboundStreams:tf},n);this.handlers.set(e,{handler:t,options:s}),await this.components.peerStore.merge(this.components.peerId,{protocols:[e]})}async unhandle(e){(Array.isArray(e)?e:[e]).forEach(n=>{this.handlers.delete(n)}),await this.components.peerStore.patch(this.components.peerId,{protocols:this.getProtocols()})}async register(e,t){if(t==null)throw new D("invalid topology");let n=`${(Math.random()*1e9).toString(36)}${Date.now()}`,s=this.topologies.get(e);return s==null&&(s=new Map,this.topologies.set(e,s)),s.set(n,t),n}unregister(e){for(let[t,n]of this.topologies.entries())n.has(e)&&(n.delete(e),n.size===0&&this.topologies.delete(t))}_onDisconnect(e){let t=e.detail;this.components.peerStore.get(t).then(n=>{for(let s of n.protocols){let o=this.topologies.get(s);if(o!=null)for(let i of o.values())i.filter?.has(t)!==!1&&(i.filter?.remove(t),i.onDisconnect?.(t))}}).catch(n=>{n.name!=="NotFoundError"&&this.log.error("could not inform topologies of disconnecting peer %p",t,n)})}_onPeerUpdate(e){let{peer:t,previous:n}=e.detail,s=(n?.protocols??[]).filter(o=>!t.protocols.includes(o));for(let o of s){let i=this.topologies.get(o);if(i!=null)for(let a of i.values())a.filter?.has(t.id)!==!1&&(a.filter?.remove(t.id),a.onDisconnect?.(t.id))}}_onPeerIdentify(e){let t=e.detail.protocols,n=e.detail.connection,s=e.detail.peerId;for(let o of t){let i=this.topologies.get(o);if(i!=null)for(let a of i.values())n.limits!=null&&a.notifyOnLimitedConnection!==!0||a.filter?.has(s)!==!0&&(a.filter?.add(s),a.onConnect?.(s,n))}}};var rf=class extends Map{metric;constructor(e){super();let{name:t,metrics:n}=e;this.metric=n.registerMetric(t),this.updateComponentMetric()}set(e,t){return super.set(e,t),this.updateComponentMetric(),this}delete(e){let t=super.delete(e);return this.updateComponentMetric(),t}clear(){super.clear(),this.updateComponentMetric()}updateComponentMetric(){this.metric.update(this.size)}};function wm(r){let{name:e,metrics:t}=r,n;return t!=null?n=new rf({name:e,metrics:t}):n=new Map,n}var Ha=class{log;components;transports;listeners;faultTolerance;started;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:transports"),this.components=e,this.started=!1,this.transports=new Map,this.listeners=wm({name:"libp2p_transport_manager_listeners",metrics:this.components.metrics}),this.faultTolerance=t.faultTolerance??Ft.FATAL_ALL}[Symbol.toStringTag]="@libp2p/transport-manager";add(e){let t=e[Symbol.toStringTag];if(t==null)throw new D("Transport must have a valid tag");if(this.transports.has(t))throw new D(`There is already a transport with the tag ${t}`);this.log("adding transport %s",t),this.transports.set(t,e),this.listeners.has(t)||this.listeners.set(t,[])}isStarted(){return this.started}start(){this.started=!0}async afterStart(){let e=this.components.addressManager.getListenAddrs();await this.listen(e)}async stop(){let e=[];for(let[t,n]of this.listeners)for(this.log("closing listeners for %s",t);n.length>0;){let s=n.pop();s!=null&&e.push(s.close())}await Promise.all(e),this.log("all listeners closed");for(let t of this.listeners.keys())this.listeners.set(t,[]);this.started=!1}async dial(e,t){let n=this.dialTransportForMultiaddr(e);if(n==null)throw new ha(`No transport available for address ${String(e)}`);return t?.onProgress?.(new fe("transport-manager:selected-transport",n[Symbol.toStringTag])),n.dial(e,{...t,upgrader:this.components.upgrader})}getAddrs(){let e=[];for(let t of this.listeners.values())for(let n of t)e=[...e,...n.getAddrs()];return e}getTransports(){return Array.of(...this.transports.values())}getListeners(){return Array.of(...this.listeners.values()).flat()}dialTransportForMultiaddr(e){for(let t of this.transports.values())if(t.dialFilter([e]).length>0)return t}listenTransportForMultiaddr(e){for(let t of this.transports.values())if(t.listenFilter([e]).length>0)return t}async listen(e){if(!this.isStarted())throw new bt("Not started");if(e==null||e.length===0){this.log("no addresses were provided for listening, this node is dial only");return}let t=[];for(let[n,s]of this.transports.entries()){let o=s.listenFilter(e),i=[];for(let l of o){this.log("creating listener for %s on %a",n,l);let u=s.createListener({upgrader:this.components.upgrader}),f=this.listeners.get(n)??[];f==null&&(f=[],this.listeners.set(n,f)),f.push(u),u.addEventListener("listening",()=>{this.components.events.safeDispatchEvent("transport:listening",{detail:u})}),u.addEventListener("close",()=>{let d=f.findIndex(m=>m===u);f.splice(d,1),this.components.events.safeDispatchEvent("transport:close",{detail:u})}),i.push(u.listen(l))}if(i.length===0){t.push(n);continue}if((await Promise.allSettled(i)).find(l=>l.status==="fulfilled")==null&&this.faultTolerance!==Ft.NO_FATAL)throw new Dr(`Transport (${n}) could not listen on any available address`)}if(t.length===this.transports.size){let n=`no valid addresses were provided for transports [${t.join(", ")}]`;if(this.faultTolerance===Ft.FATAL_ALL)throw new Dr(n);this.log(`libp2p in dial mode only: ${n}`)}}async remove(e){let t=this.listeners.get(e)??[];this.log.trace("removing transport %s",e);let n=[];for(this.log.trace("closing listeners for %s",e);t.length>0;){let s=t.pop();s!=null&&n.push(s.close())}await Promise.all(n),this.transports.delete(e),this.listeners.delete(e)}async removeAll(){let e=[];for(let t of this.transports.keys())e.push(this.remove(t));await Promise.all(e)}};var Se="/multistream/1.0.0";var Ka=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},$a=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},qa=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"};function Vs(r,e={}){let t=Da(r,e);e.maxDataLength!=null&&e.maxLengthLength==null&&(e.maxLengthLength=de(e.maxDataLength));let n=e?.lengthDecoder??st,s=e?.lengthEncoder??Be;return{read:async i=>{let a=-1,c=new ye;for(;;){c.append(await t.read(1,i));try{a=n(c)}catch(l){if(l instanceof RangeError)continue;throw l}if(a<0)throw new Ka("Invalid message length");if(e?.maxLengthLength!=null&&c.byteLength>e.maxLengthLength)throw new qa("message length length too long");if(a>-1)break}if(e?.maxDataLength!=null&&a>e.maxDataLength)throw new $a("message length too long");return t.read(a,i)},write:async(i,a)=>{await t.write(new ye(s(i.byteLength),i),a)},writeV:async(i,a)=>{let c=new ye(...i.flatMap(l=>[s(l.byteLength),l]));await t.write(c,a)},unwrap:()=>t.unwrap()}}var ox=N(`
 `);async function Fr(r,e,t){await r.write(e,t)}async function bm(r,e,t){await r.writeV(e,t)}async function ix(r,e){let t=await r.read(e);if(t.byteLength===0||t.get(t.byteLength-1)!==ox[0])throw e.log.error("Invalid mss message - missing newline",t),new Ys("Missing newline");return t.sublist(0,-1)}async function ar(r,e){let t=await ix(r,e);return z(t.subarray())}async function Hs(r,e,t){if(e=Array.isArray(e)?[...e]:[e],e.length===1&&t.negotiateFully===!1)return ax(r,e[0],t);let n=Vs(r,{...t,maxDataLength:1024}),s=e.shift();if(s==null)throw new Error("At least one protocol must be specified");t.log.trace('select: write ["%s", "%s"]',Se,s);let o=N(`${Se}
 `),i=N(`${s}
 `);await bm(n,[o,i],t),t.log.trace("select: reading multistream-select header");let a=await ar(n,t);if(t.log.trace('select: read "%s"',a),a===Se&&(t.log.trace("select: reading protocol response"),a=await ar(n,t),t.log.trace('select: read "%s"',a)),a===s)return{stream:n.unwrap(),protocol:s};for(let c of e){t.log.trace('select: write "%s"',c),await Fr(n,N(`${c}
@@ -16,7 +16,7 @@ ${e.join(`
 `),t),t.log.trace('handle: responded with "%s" for "%s"',s,s),{stream:n.unwrap(),protocol:s};if(s==="ls"){let o=new ye(...e.map(i=>Xa.single(N(`${i}
 `))),N(`
 `));t.log.trace('handle: respond with "%s" for %s',e,s),await Fr(n,o,t),t.log.trace('handle: responded with "%s" for %s',e,s);continue}t.log.trace('handle: respond with "na" for "%s"',s),await Fr(n,N(`na
-`),t),t.log('handle: responded with "na" for "%s"',s)}}var ux=500,af=class{id;remoteAddr;remotePeer;direction;timeline;multiplexer;encryption;status;limits;log;tags;_newStream;_close;_abort;_getStreams;constructor(e){let{remoteAddr:t,remotePeer:n,newStream:s,close:o,abort:i,getStreams:a}=e;this.id=`${parseInt(String(Math.random()*1e9)).toString(36)}${Date.now()}`,this.remoteAddr=t,this.remotePeer=n,this.direction=e.direction,this.status="open",this.timeline=e.timeline,this.multiplexer=e.multiplexer,this.encryption=e.encryption,this.limits=e.limits,this.log=e.logger.forComponent(`libp2p:connection:${this.direction}:${this.id}`),this.remoteAddr.getPeerId()==null&&(this.remoteAddr=this.remoteAddr.encapsulate(`/p2p/${this.remotePeer}`)),this._newStream=s,this._close=o,this._abort=i,this._getStreams=a,this.tags=[]}[Symbol.toStringTag]="Connection";[gf]=!0;get streams(){return this._getStreams()}async newStream(e,t){if(this.status==="closing")throw new Ws("the connection is being closed");if(this.status==="closed")throw new $r("the connection is closed");if(Array.isArray(e)||(e=[e]),this.limits!=null&&t?.runOnLimitedConnection!==!0)throw new Gr("Cannot open protocol stream on limited connection");let n=await this._newStream(e,t);return n.direction="outbound",n}async close(e={}){if(!(this.status==="closed"||this.status==="closing")){if(this.log("closing connection to %a",this.remoteAddr),this.status="closing",e.signal==null){let t=AbortSignal.timeout(ux);e={...e,signal:t}}try{this.log.trace("closing underlying transport"),await this._close(e),this.log.trace("updating timeline with close time"),this.status="closed",this.timeline.close=Date.now()}catch(t){this.log.error("error encountered during graceful close of connection to %a",this.remoteAddr,t),this.abort(t)}}}abort(e){this.status!=="closed"&&(this.log.error("aborting connection to %a due to error",this.remoteAddr,e),this.status="closing",this._abort(e),this.status="closed",this.timeline.close=Date.now())}};function Em(r){return new af(r)}function hx(r,e){try{let{options:t}=e.getHandler(r);return t.maxInboundStreams}catch(t){if(t.name!=="UnhandledProtocolError")throw t}return ef}function px(r,e,t={}){try{let{options:n}=e.getHandler(r);if(n.maxOutboundStreams!=null)return n.maxOutboundStreams}catch(n){if(n.name!=="UnhandledProtocolError")throw n}return t.maxOutboundStreams??tf}function Am(r,e,t){let n=0;return t.streams.forEach(s=>{s.direction===e&&s.protocol===r&&n++}),n}var Ya=class{components;connectionEncrypters;streamMuxers;inboundUpgradeTimeout;outboundUpgradeTimeout;inboundStreamProtocolNegotiationTimeout;outboundStreamProtocolNegotiationTimeout;events;metrics;constructor(e,t){this.components=e,this.connectionEncrypters=new Map,t.connectionEncrypters.forEach(n=>{this.connectionEncrypters.set(n.protocol,n)}),this.streamMuxers=new Map,t.streamMuxers.forEach(n=>{this.streamMuxers.set(n.protocol,n)}),this.inboundUpgradeTimeout=t.inboundUpgradeTimeout??3e3,this.outboundUpgradeTimeout=t.outboundUpgradeTimeout??3e3,this.inboundStreamProtocolNegotiationTimeout=t.inboundStreamProtocolNegotiationTimeout??2e3,this.outboundStreamProtocolNegotiationTimeout=t.outboundStreamProtocolNegotiationTimeout??2e3,this.events=e.events,this.metrics={dials:e.metrics?.registerCounterGroup("libp2p_connection_manager_dials_total"),errors:e.metrics?.registerCounterGroup("libp2p_connection_manager_dial_errors_total")}}[Symbol.toStringTag]="@libp2p/upgrader";async shouldBlockConnection(e,...t){let n=this.components.connectionGater[e];if(n==null)return;if(await n.apply(this.components.connectionGater,t)===!0)throw new fa(`The multiaddr connection is blocked by gater.${e}`)}async upgradeInbound(e,t={}){let n=!1;try{if(this.metrics.dials?.increment({inbound:!0}),n=await this.components.connectionManager.acceptIncomingConnection(e),!n)throw new da("Connection denied");await this.shouldBlockConnection("denyInboundConnection",e),await this._performUpgrade(e,"inbound",t)}catch(s){throw this.metrics.errors?.increment({inbound:!0}),s}finally{n&&this.components.connectionManager.afterUpgradeInbound()}}async upgradeOutbound(e,t={}){try{this.metrics.dials?.increment({outbound:!0});let n=e.remoteAddr.getPeerId(),s;n!=null&&(s=gt(n),await this.shouldBlockConnection("denyOutboundConnection",s,e));let o="outbound";return t.initiator===!1&&(o="inbound"),await this._performUpgrade(e,o,t)}catch(n){throw this.metrics.errors?.increment({outbound:!0}),n}}async _performUpgrade(e,t,n){let s,o,i,a,c;if(n.signal==null){e.log("no abort signal was passed while trying to upgrade connection, falling back to default timeout");let u=AbortSignal.timeout(t==="inbound"?this.inboundUpgradeTimeout:this.outboundUpgradeTimeout);n.signal=u}this.components.metrics?.trackMultiaddrConnection(e),e.log.trace("starting the %s connection upgrade",t);let l=e;if(n?.skipProtection!==!0){let u=this.components.connectionProtector;u!=null&&(e.log("protecting the %s connection",t),l=await u.protect(e,n))}try{if(s=l,n?.skipEncryption!==!0){n?.onProgress?.(new fe(`upgrader:encrypt-${t}-connection`)),{conn:s,remotePeer:o,protocol:c}=await(t==="inbound"?this._encryptInbound(l,n):this._encryptOutbound(l,n));let u={...l,...s};await this.shouldBlockConnection(t==="inbound"?"denyInboundEncryptedConnection":"denyOutboundEncryptedConnection",o,u)}else{let u=e.remoteAddr.getPeerId();if(u==null)throw new Vt(`${t} connection that skipped encryption must have a peer id`);let f=gt(u);c="native",o=f}if(o.equals(this.components.peerId)){let u=new qr("Can not dial self");throw e.abort(u),u}if(i=s,n?.muxerFactory!=null)a=n.muxerFactory;else if(this.streamMuxers.size>0){n?.onProgress?.(new fe(`upgrader:multiplex-${t}-connection`));let u=await(t==="inbound"?this._multiplexInbound({...l,...s},this.streamMuxers,n):this._multiplexOutbound({...l,...s},this.streamMuxers,n));a=u.muxerFactory,i=u.stream}}catch(u){throw e.log.error("failed to upgrade inbound connection %s %a - %e",t==="inbound"?"from":"to",e.remoteAddr,u),u}return await this.shouldBlockConnection(t==="inbound"?"denyInboundUpgradedConnection":"denyOutboundUpgradedConnection",o,e),e.log("successfully upgraded %s connection",t),this._createConnection({cryptoProtocol:c,direction:t,maConn:e,upgradedConn:i,muxerFactory:a,remotePeer:o,limits:n?.limits})}_createConnection(e){let{cryptoProtocol:t,direction:n,maConn:s,upgradedConn:o,remotePeer:i,muxerFactory:a,limits:c}=e,l,u,f;a!=null&&(l=a.createStreamMuxer({direction:n,onIncomingStream:p=>{f!=null&&Promise.resolve().then(async()=>{let g=this.components.registrar.getProtocols(),h=AbortSignal.timeout(this.inboundStreamProtocolNegotiationTimeout);let{stream:w,protocol:x}=await $s(p,g,{signal:h,log:p.log,yieldBytes:!1});if(f==null)return;f.log("incoming stream opened on %s",x);let y=hx(x,this.components.registrar);if(Am(x,"inbound",f)===y){let _=new Qs(`Too many inbound protocol streams for protocol "${x}" - limit ${y}`);throw p.abort(_),_}p.source=w.source,p.sink=w.sink,p.protocol=x,w.closeWrite!=null&&(p.closeWrite=w.closeWrite),w.closeRead!=null&&(p.closeRead=w.closeRead),w.close!=null&&(p.close=w.close),await this.components.peerStore.merge(i,{protocols:[x]}),this.components.metrics?.trackProtocolStream(p,f),this._onStream({connection:f,stream:p,protocol:x})}).catch(async g=>{f.log.error("error handling incoming stream id %s - %e",p.id,g),p.timeline.close==null&&await p.close()})}}),u=async(p,g={})=>{if(l==null)throw new Rr("Connection is not multiplexed");f.log.trace("starting new stream for protocols %s",p);let h=await l.newStream();f.log.trace("started new stream %s for protocols %s",h.id,p);try{if(g.signal==null){h.log("no abort signal was passed while trying to negotiate protocols %s falling back to default timeout",p);let _=AbortSignal.timeout(this.outboundStreamProtocolNegotiationTimeout);g={...g,signal:_}}h.log.trace("selecting protocol from protocols %s",p);let{stream:w,protocol:x}=await Hs(h,p,{...g,log:h.log,yieldBytes:!0});h.log.trace("selected protocol %s",x);let y=px(x,this.components.registrar,g),E=Am(x,"outbound",f);if(E>=y){let _=new eo(`Too many outbound protocol streams for protocol "${x}" - ${E}/${y}`);throw h.abort(_),_}return await this.components.peerStore.merge(i,{protocols:[x]}),h.source=w.source,h.sink=w.sink,h.protocol=x,w.closeWrite!=null&&(h.closeWrite=w.closeWrite),w.closeRead!=null&&(h.closeRead=w.closeRead),w.close!=null&&(h.close=w.close),this.components.metrics?.trackProtocolStream(h,f),h}catch(w){throw f.log.error("could not create new outbound stream on connection %s %a for protocols %s - %e",n==="inbound"?"from":"to",e.maConn.remoteAddr,p,w),h.timeline.close==null&&h.abort(w),w}},Promise.all([l.sink(o.source),o.sink(l.source)]).catch(p=>{f.log.error("error piping data through muxer - %e",p)}));let d=s.timeline;s.timeline=new Proxy(d,{set:(...p)=>(p[1]==="close"&&p[2]!=null&&d.close==null&&(async()=>{try{f.status==="open"&&await f.close()}catch(g){f.log.error("error closing connection after timeline close %e",g)}finally{this.events.safeDispatchEvent("connection:close",{detail:f})}})().catch(g=>{f.log.error("error thrown while dispatching connection:close event %e",g)}),Reflect.set(...p))}),s.timeline.upgraded=Date.now();let m=()=>{throw new Rr("Connection is not multiplexed")};return f=Em({remoteAddr:s.remoteAddr,remotePeer:i,status:"open",direction:n,timeline:s.timeline,multiplexer:l?.protocol,encryption:t,limits:c,logger:this.components.logger,newStream:u??m,getStreams:()=>l?.streams??[],close:async p=>{await l?.close(p),await s.close(p)},abort:p=>{s.abort(p),l?.abort(p)}}),this.events.safeDispatchEvent("connection:open",{detail:f}),f.__maConnTimeline=d,f}_onStream(e){let{connection:t,stream:n,protocol:s}=e,{handler:o,options:i}=this.components.registrar.getHandler(s);if(t.limits!=null&&i.runOnLimitedConnection!==!0)throw new Gr("Cannot open protocol stream on limited connection");o({connection:t,stream:n})}async _encryptInbound(e,t){let n=Array.from(this.connectionEncrypters.keys());try{let{stream:s,protocol:o}=await $s(e,n,{...t,log:e.log}),i=this.connectionEncrypters.get(o);if(i==null)throw new Mr(`no crypto module found for ${o}`);return e.log("encrypting inbound connection to %a using %s",e.remoteAddr,o),{...await i.secureInbound(s,t),protocol:o}}catch(s){throw e.log.error("encrypting inbound connection from %a failed",e.remoteAddr,s),new Mr(s.message)}}async _encryptOutbound(e,t){let n=Array.from(this.connectionEncrypters.keys());try{e.log.trace("selecting encrypter from %s",n);let{stream:s,protocol:o}=await Hs(e,n,{...t,log:e.log,yieldBytes:!0}),i=this.connectionEncrypters.get(o);if(i==null)throw new Mr(`no crypto module found for ${o}`);return e.log("encrypting outbound connection to %a using %s",e.remoteAddr,o),{...await i.secureOutbound(s,t),protocol:o}}catch(s){throw e.log.error("encrypting outbound connection to %a failed",e.remoteAddr,s),new Mr(s.message)}}async _multiplexOutbound(e,t,n){let s=Array.from(t.keys());e.log("outbound selecting muxer %s",s);try{e.log.trace("selecting stream muxer from %s",s);let{stream:o,protocol:i}=await Hs(e,s,{...n,log:e.log,yieldBytes:!0});e.log("selected %s as muxer protocol",i);let a=t.get(i);return{stream:o,muxerFactory:a}}catch(o){throw e.log.error("error multiplexing outbound connection",o),new Rr(String(o))}}async _multiplexInbound(e,t,n){let s=Array.from(t.keys());e.log("inbound handling muxers %s",s);try{let{stream:o,protocol:i}=await $s(e,s,{...n,log:e.log}),a=t.get(i);return{stream:o,muxerFactory:a}}catch(o){throw e.log.error("error multiplexing inbound connection",o),new Rr(String(o))}}};var Ja="2.7.2",Qa="js-libp2p";function _m(r,e){return`${r??Qa}/${e??Ja} browser/${globalThis.navigator.userAgent}`}var ec=class extends xt{peerId;peerStore;contentRouting;peerRouting;metrics;services;logger;status;components;log;constructor(e){super(),this.status="stopped";let t=new xt,n=t.dispatchEvent.bind(t);t.dispatchEvent=l=>{let u=n(l),f=this.dispatchEvent(new CustomEvent(l.type,{detail:l.detail}));return u||f},this.peerId=e.peerId,this.logger=e.logger??Di(),this.log=this.logger.forComponent("libp2p"),this.services={};let s=e.nodeInfo?.name??Qa,o=e.nodeInfo?.version??Ja,i=this.components=Yp({peerId:e.peerId,privateKey:e.privateKey,nodeInfo:{name:s,version:o,userAgent:e.nodeInfo?.userAgent??_m(s,o)},logger:this.logger,events:t,datastore:e.datastore??new ji,connectionGater:Qp(e.connectionGater),dns:e.dns});this.peerStore=this.configureComponent("peerStore",Dp(i,{addressFilter:this.components.connectionGater.filterMultiaddrForPeer,...e.peerStore})),e.metrics!=null&&(this.metrics=this.configureComponent("metrics",e.metrics(this.components))),i.events.addEventListener("peer:update",l=>{if(l.detail.previous==null){let u={id:l.detail.peer.id,multiaddrs:l.detail.peer.addresses.map(f=>f.multiaddr)};i.events.safeDispatchEvent("peer:discovery",{detail:u})}}),e.connectionProtector!=null&&this.configureComponent("connectionProtector",e.connectionProtector(i)),this.components.upgrader=new Ya(this.components,{connectionEncrypters:(e.connectionEncrypters??[]).map((l,u)=>this.configureComponent(`connection-encryption-${u}`,l(this.components))),streamMuxers:(e.streamMuxers??[]).map((l,u)=>this.configureComponent(`stream-muxers-${u}`,l(this.components))),inboundUpgradeTimeout:e.connectionManager?.inboundUpgradeTimeout,outboundUpgradeTimeout:e.connectionManager?.outboundUpgradeTimeout,inboundStreamProtocolNegotiationTimeout:e.connectionManager?.inboundStreamProtocolNegotiationTimeout??e.connectionManager?.protocolNegotiationTimeout,outboundStreamProtocolNegotiationTimeout:e.connectionManager?.outboundStreamProtocolNegotiationTimeout??e.connectionManager?.protocolNegotiationTimeout}),this.configureComponent("transportManager",new Ha(this.components,e.transportManager)),this.configureComponent("connectionManager",new La(this.components,e.connectionManager)),e.connectionMonitor?.enabled!==!1&&this.configureComponent("connectionMonitor",new Ra(this.components,e.connectionMonitor)),this.configureComponent("registrar",new Va(this.components)),this.configureComponent("addressManager",new oa(this.components,e.addresses));let a=(e.peerRouters??[]).map((l,u)=>this.configureComponent(`peer-router-${u}`,l(this.components)));this.peerRouting=this.components.peerRouting=this.configureComponent("peerRouting",new Ua(this.components,{routers:a}));let c=(e.contentRouters??[]).map((l,u)=>this.configureComponent(`content-router-${u}`,l(this.components)));if(this.contentRouting=this.components.contentRouting=this.configureComponent("contentRouting",new Ma(this.components,{routers:c})),this.configureComponent("randomWalk",new Fa(this.components)),(e.peerDiscovery??[]).forEach((l,u)=>{this.configureComponent(`peer-discovery-${u}`,l(this.components)).addEventListener("peer",d=>{this.#e(d)})}),e.transports?.forEach((l,u)=>{this.components.transportManager.add(this.configureComponent(`transport-${u}`,l(this.components)))}),e.services!=null)for(let l of Object.keys(e.services)){let u=e.services[l],f=u(this.components);if(f==null){this.log.error("service factory %s returned null or undefined instance",l);continue}this.services[l]=f,this.configureComponent(l,f),f[rc]!=null&&(this.log("registering service %s for content routing",l),c.push(f[rc])),f[sc]!=null&&(this.log("registering service %s for peer routing",l),a.push(f[sc])),f[nc]!=null&&(this.log("registering service %s for peer discovery",l),f[nc].addEventListener?.("peer",d=>{this.#e(d)}))}Jp(i)}configureComponent(e,t){return t==null&&this.log.error("component %s was null or undefined",e),this.components[e]=t,t}async start(){if(this.status==="stopped"){this.status="starting",this.log("libp2p is starting");try{await this.components.beforeStart?.(),await this.components.start(),await this.components.afterStart?.(),this.status="started",this.safeDispatchEvent("start",{detail:this}),this.log("libp2p has started")}catch(e){throw this.log.error("An error occurred starting libp2p",e),this.status="started",await this.stop(),e}}}async stop(){this.status==="started"&&(this.log("libp2p is stopping"),this.status="stopping",await this.components.beforeStop?.(),await this.components.stop(),await this.components.afterStop?.(),this.status="stopped",this.safeDispatchEvent("stop",{detail:this}),this.log("libp2p has stopped"))}getConnections(e){return this.components.connectionManager.getConnections(e)}getDialQueue(){return this.components.connectionManager.getDialQueue()}getPeers(){let e=new Sr;for(let t of this.components.connectionManager.getConnections())e.add(t.remotePeer);return Array.from(e)}async dial(e,t={}){return this.components.connectionManager.openConnection(e,{priority:75,...t})}async dialProtocol(e,t,n={}){if(t==null)throw new D("no protocols were provided to open a stream");if(t=Array.isArray(t)?t:[t],t.length===0)throw new D("no protocols were provided to open a stream");return(await this.dial(e,n)).newStream(t,n)}getMultiaddrs(){return this.components.addressManager.getAddresses()}getProtocols(){return this.components.registrar.getProtocols()}async hangUp(e,t={}){rr(e)&&(e=gt(e.getPeerId()??"")),await this.components.connectionManager.closeConnections(e,t)}async getPublicKey(e,t={}){if(this.log("getPublicKey %p",e),e.publicKey!=null)return e.publicKey;try{let i=await this.peerStore.get(e);if(i.id.publicKey!=null)return i.id.publicKey}catch(i){if(i.name!=="NotFoundError")throw i}let n=Fe([N("/pk/"),e.toMultihash().bytes]),s=await this.contentRouting.get(n,t),o=pn(s);return await this.peerStore.patch(e,{publicKey:o}),o}async handle(e,t,n){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async s=>{await this.components.registrar.handle(s,t,n)}))}async unhandle(e){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async t=>{await this.components.registrar.unhandle(t)}))}async register(e,t){return this.components.registrar.register(e,t)}unregister(e){this.components.registrar.unregister(e)}async isDialable(e,t={}){return this.components.connectionManager.isDialable(e,t)}#e(e){let{detail:t}=e;if(t.id.toString()===this.peerId.toString()){this.log.error("peer discovery mechanism discovered self");return}this.components.peerStore.merge(t.id,{multiaddrs:t.multiaddrs}).catch(n=>{this.log.error(n)})}};async function mx(r={}){r.privateKey??=await Th("Ed25519");let e=new ec({...await hp(r),peerId:Dh(r.privateKey)});return r.start!==!1&&await e.start(),e}return Fm(gx);})();
+`),t),t.log('handle: responded with "na" for "%s"',s)}}var ux=500,af=class{id;remoteAddr;remotePeer;direction;timeline;multiplexer;encryption;status;limits;log;tags;_newStream;_close;_abort;_getStreams;constructor(e){let{remoteAddr:t,remotePeer:n,newStream:s,close:o,abort:i,getStreams:a}=e;this.id=`${parseInt(String(Math.random()*1e9)).toString(36)}${Date.now()}`,this.remoteAddr=t,this.remotePeer=n,this.direction=e.direction,this.status="open",this.timeline=e.timeline,this.multiplexer=e.multiplexer,this.encryption=e.encryption,this.limits=e.limits,this.log=e.logger.forComponent(`libp2p:connection:${this.direction}:${this.id}`),this.remoteAddr.getPeerId()==null&&(this.remoteAddr=this.remoteAddr.encapsulate(`/p2p/${this.remotePeer}`)),this._newStream=s,this._close=o,this._abort=i,this._getStreams=a,this.tags=[]}[Symbol.toStringTag]="Connection";[gf]=!0;get streams(){return this._getStreams()}async newStream(e,t){if(this.status==="closing")throw new Ws("the connection is being closed");if(this.status==="closed")throw new $r("the connection is closed");if(Array.isArray(e)||(e=[e]),this.limits!=null&&t?.runOnLimitedConnection!==!0)throw new Gr("Cannot open protocol stream on limited connection");let n=await this._newStream(e,t);return n.direction="outbound",n}async close(e={}){if(!(this.status==="closed"||this.status==="closing")){if(this.log("closing connection to %a",this.remoteAddr),this.status="closing",e.signal==null){let t=AbortSignal.timeout(ux);e={...e,signal:t}}try{this.log.trace("closing underlying transport"),await this._close(e),this.log.trace("updating timeline with close time"),this.status="closed",this.timeline.close=Date.now()}catch(t){this.log.error("error encountered during graceful close of connection to %a",this.remoteAddr,t),this.abort(t)}}}abort(e){this.status!=="closed"&&(this.log.error("aborting connection to %a due to error",this.remoteAddr,e),this.status="closing",this._abort(e),this.status="closed",this.timeline.close=Date.now())}};function Em(r){return new af(r)}function hx(r,e){try{let{options:t}=e.getHandler(r);return t.maxInboundStreams}catch(t){if(t.name!=="UnhandledProtocolError")throw t}return ef}function px(r,e,t={}){try{let{options:n}=e.getHandler(r);if(n.maxOutboundStreams!=null)return n.maxOutboundStreams}catch(n){if(n.name!=="UnhandledProtocolError")throw n}return t.maxOutboundStreams??tf}function Am(r,e,t){let n=0;return t.streams.forEach(s=>{s.direction===e&&s.protocol===r&&n++}),n}var Ya=class{components;connectionEncrypters;streamMuxers;inboundUpgradeTimeout;outboundUpgradeTimeout;inboundStreamProtocolNegotiationTimeout;outboundStreamProtocolNegotiationTimeout;events;metrics;constructor(e,t){this.components=e,this.connectionEncrypters=new Map,t.connectionEncrypters.forEach(n=>{this.connectionEncrypters.set(n.protocol,n)}),this.streamMuxers=new Map,t.streamMuxers.forEach(n=>{this.streamMuxers.set(n.protocol,n)}),this.inboundUpgradeTimeout=t.inboundUpgradeTimeout??3e3,this.outboundUpgradeTimeout=t.outboundUpgradeTimeout??3e3,this.inboundStreamProtocolNegotiationTimeout=t.inboundStreamProtocolNegotiationTimeout??2e3,this.outboundStreamProtocolNegotiationTimeout=t.outboundStreamProtocolNegotiationTimeout??2e3,this.events=e.events,this.metrics={dials:e.metrics?.registerCounterGroup("libp2p_connection_manager_dials_total"),errors:e.metrics?.registerCounterGroup("libp2p_connection_manager_dial_errors_total")}}[Symbol.toStringTag]="@libp2p/upgrader";async shouldBlockConnection(e,...t){let n=this.components.connectionGater[e];if(n==null)return;if(await n.apply(this.components.connectionGater,t)===!0)throw new fa(`The multiaddr connection is blocked by gater.${e}`)}async upgradeInbound(e,t={}){let n=new Error("where"),s=!1,o=!1,i=!1,a=!1,c=!1,l=setTimeout(()=>{console.info("wat, did not finish upgrading",e,t),console.info("staus",s,o,i,a,c),console.info("called",n.stack),console.info("wat")},6e4*5);l.unref();try{if(this.metrics.dials?.increment({inbound:!0}),s=await this.components.connectionManager.acceptIncomingConnection(e),i=!0,!s)throw new da("Connection denied");await this.shouldBlockConnection("denyInboundConnection",e),a=!0,await this._performUpgrade(e,"inbound",t),c=!0}catch(u){throw this.metrics.errors?.increment({inbound:!0}),u}finally{clearTimeout(l),o=!0,s&&this.components.connectionManager.afterUpgradeInbound()}}async upgradeOutbound(e,t={}){try{this.metrics.dials?.increment({outbound:!0});let n=e.remoteAddr.getPeerId(),s;n!=null&&(s=gt(n),await this.shouldBlockConnection("denyOutboundConnection",s,e));let o="outbound";return t.initiator===!1&&(o="inbound"),await this._performUpgrade(e,o,t)}catch(n){throw this.metrics.errors?.increment({outbound:!0}),n}}async _performUpgrade(e,t,n){let s,o,i,a,c;if(n.signal==null){e.log("no abort signal was passed while trying to upgrade connection, falling back to default timeout");let u=AbortSignal.timeout(t==="inbound"?this.inboundUpgradeTimeout:this.outboundUpgradeTimeout);n.signal=u}this.components.metrics?.trackMultiaddrConnection(e),e.log.trace("starting the %s connection upgrade",t);let l=e;if(n?.skipProtection!==!0){let u=this.components.connectionProtector;u!=null&&(e.log("protecting the %s connection",t),l=await u.protect(e,n))}try{if(s=l,n?.skipEncryption!==!0){n?.onProgress?.(new fe(`upgrader:encrypt-${t}-connection`)),{conn:s,remotePeer:o,protocol:c}=await(t==="inbound"?this._encryptInbound(l,n):this._encryptOutbound(l,n));let u={...l,...s};await this.shouldBlockConnection(t==="inbound"?"denyInboundEncryptedConnection":"denyOutboundEncryptedConnection",o,u)}else{let u=e.remoteAddr.getPeerId();if(u==null)throw new Vt(`${t} connection that skipped encryption must have a peer id`);let f=gt(u);c="native",o=f}if(o.equals(this.components.peerId)){let u=new qr("Can not dial self");throw e.abort(u),u}if(i=s,n?.muxerFactory!=null)a=n.muxerFactory;else if(this.streamMuxers.size>0){n?.onProgress?.(new fe(`upgrader:multiplex-${t}-connection`));let u=await(t==="inbound"?this._multiplexInbound({...l,...s},this.streamMuxers,n):this._multiplexOutbound({...l,...s},this.streamMuxers,n));a=u.muxerFactory,i=u.stream}}catch(u){throw e.log.error("failed to upgrade inbound connection %s %a - %e",t==="inbound"?"from":"to",e.remoteAddr,u),u}return await this.shouldBlockConnection(t==="inbound"?"denyInboundUpgradedConnection":"denyOutboundUpgradedConnection",o,e),e.log("successfully upgraded %s connection",t),this._createConnection({cryptoProtocol:c,direction:t,maConn:e,upgradedConn:i,muxerFactory:a,remotePeer:o,limits:n?.limits})}_createConnection(e){let{cryptoProtocol:t,direction:n,maConn:s,upgradedConn:o,remotePeer:i,muxerFactory:a,limits:c}=e,l,u,f;a!=null&&(l=a.createStreamMuxer({direction:n,onIncomingStream:p=>{f!=null&&Promise.resolve().then(async()=>{let g=this.components.registrar.getProtocols(),h=AbortSignal.timeout(this.inboundStreamProtocolNegotiationTimeout);let{stream:w,protocol:x}=await $s(p,g,{signal:h,log:p.log,yieldBytes:!1});if(f==null)return;f.log("incoming stream opened on %s",x);let y=hx(x,this.components.registrar);if(Am(x,"inbound",f)===y){let _=new Qs(`Too many inbound protocol streams for protocol "${x}" - limit ${y}`);throw p.abort(_),_}p.source=w.source,p.sink=w.sink,p.protocol=x,w.closeWrite!=null&&(p.closeWrite=w.closeWrite),w.closeRead!=null&&(p.closeRead=w.closeRead),w.close!=null&&(p.close=w.close),await this.components.peerStore.merge(i,{protocols:[x]}),this.components.metrics?.trackProtocolStream(p,f),this._onStream({connection:f,stream:p,protocol:x})}).catch(async g=>{f.log.error("error handling incoming stream id %s - %e",p.id,g),p.timeline.close==null&&await p.close()})}}),u=async(p,g={})=>{if(l==null)throw new Rr("Connection is not multiplexed");f.log.trace("starting new stream for protocols %s",p);let h=await l.newStream();f.log.trace("started new stream %s for protocols %s",h.id,p);try{if(g.signal==null){h.log("no abort signal was passed while trying to negotiate protocols %s falling back to default timeout",p);let _=AbortSignal.timeout(this.outboundStreamProtocolNegotiationTimeout);g={...g,signal:_}}h.log.trace("selecting protocol from protocols %s",p);let{stream:w,protocol:x}=await Hs(h,p,{...g,log:h.log,yieldBytes:!0});h.log.trace("selected protocol %s",x);let y=px(x,this.components.registrar,g),E=Am(x,"outbound",f);if(E>=y){let _=new eo(`Too many outbound protocol streams for protocol "${x}" - ${E}/${y}`);throw h.abort(_),_}return await this.components.peerStore.merge(i,{protocols:[x]}),h.source=w.source,h.sink=w.sink,h.protocol=x,w.closeWrite!=null&&(h.closeWrite=w.closeWrite),w.closeRead!=null&&(h.closeRead=w.closeRead),w.close!=null&&(h.close=w.close),this.components.metrics?.trackProtocolStream(h,f),h}catch(w){throw f.log.error("could not create new outbound stream on connection %s %a for protocols %s - %e",n==="inbound"?"from":"to",e.maConn.remoteAddr,p,w),h.timeline.close==null&&h.abort(w),w}},Promise.all([l.sink(o.source),o.sink(l.source)]).catch(p=>{f.log.error("error piping data through muxer - %e",p)}));let d=s.timeline;s.timeline=new Proxy(d,{set:(...p)=>(p[1]==="close"&&p[2]!=null&&d.close==null&&(async()=>{try{f.status==="open"&&await f.close()}catch(g){f.log.error("error closing connection after timeline close %e",g)}finally{this.events.safeDispatchEvent("connection:close",{detail:f})}})().catch(g=>{f.log.error("error thrown while dispatching connection:close event %e",g)}),Reflect.set(...p))}),s.timeline.upgraded=Date.now();let m=()=>{throw new Rr("Connection is not multiplexed")};return f=Em({remoteAddr:s.remoteAddr,remotePeer:i,status:"open",direction:n,timeline:s.timeline,multiplexer:l?.protocol,encryption:t,limits:c,logger:this.components.logger,newStream:u??m,getStreams:()=>l?.streams??[],close:async p=>{await l?.close(p),await s.close(p)},abort:p=>{s.abort(p),l?.abort(p)}}),this.events.safeDispatchEvent("connection:open",{detail:f}),f.__maConnTimeline=d,f}_onStream(e){let{connection:t,stream:n,protocol:s}=e,{handler:o,options:i}=this.components.registrar.getHandler(s);if(t.limits!=null&&i.runOnLimitedConnection!==!0)throw new Gr("Cannot open protocol stream on limited connection");o({connection:t,stream:n})}async _encryptInbound(e,t){let n=Array.from(this.connectionEncrypters.keys());try{let{stream:s,protocol:o}=await $s(e,n,{...t,log:e.log}),i=this.connectionEncrypters.get(o);if(i==null)throw new Mr(`no crypto module found for ${o}`);return e.log("encrypting inbound connection to %a using %s",e.remoteAddr,o),{...await i.secureInbound(s,t),protocol:o}}catch(s){throw e.log.error("encrypting inbound connection from %a failed",e.remoteAddr,s),new Mr(s.message)}}async _encryptOutbound(e,t){let n=Array.from(this.connectionEncrypters.keys());try{e.log.trace("selecting encrypter from %s",n);let{stream:s,protocol:o}=await Hs(e,n,{...t,log:e.log,yieldBytes:!0}),i=this.connectionEncrypters.get(o);if(i==null)throw new Mr(`no crypto module found for ${o}`);return e.log("encrypting outbound connection to %a using %s",e.remoteAddr,o),{...await i.secureOutbound(s,t),protocol:o}}catch(s){throw e.log.error("encrypting outbound connection to %a failed",e.remoteAddr,s),new Mr(s.message)}}async _multiplexOutbound(e,t,n){let s=Array.from(t.keys());e.log("outbound selecting muxer %s",s);try{e.log.trace("selecting stream muxer from %s",s);let{stream:o,protocol:i}=await Hs(e,s,{...n,log:e.log,yieldBytes:!0});e.log("selected %s as muxer protocol",i);let a=t.get(i);return{stream:o,muxerFactory:a}}catch(o){throw e.log.error("error multiplexing outbound connection",o),new Rr(String(o))}}async _multiplexInbound(e,t,n){let s=Array.from(t.keys());e.log("inbound handling muxers %s",s);try{let{stream:o,protocol:i}=await $s(e,s,{...n,log:e.log}),a=t.get(i);return{stream:o,muxerFactory:a}}catch(o){throw e.log.error("error multiplexing inbound connection",o),new Rr(String(o))}}};var Ja="0.0.0",Qa="js-libp2p";function _m(r,e){return`${r??Qa}/${e??Ja} browser/${globalThis.navigator.userAgent}`}var ec=class extends xt{peerId;peerStore;contentRouting;peerRouting;metrics;services;logger;status;components;log;constructor(e){super(),this.status="stopped";let t=new xt,n=t.dispatchEvent.bind(t);t.dispatchEvent=l=>{let u=n(l),f=this.dispatchEvent(new CustomEvent(l.type,{detail:l.detail}));return u||f},this.peerId=e.peerId,this.logger=e.logger??Di(),this.log=this.logger.forComponent("libp2p"),this.services={};let s=e.nodeInfo?.name??Qa,o=e.nodeInfo?.version??Ja,i=this.components=Yp({peerId:e.peerId,privateKey:e.privateKey,nodeInfo:{name:s,version:o,userAgent:e.nodeInfo?.userAgent??_m(s,o)},logger:this.logger,events:t,datastore:e.datastore??new ji,connectionGater:Qp(e.connectionGater),dns:e.dns});this.peerStore=this.configureComponent("peerStore",Dp(i,{addressFilter:this.components.connectionGater.filterMultiaddrForPeer,...e.peerStore})),e.metrics!=null&&(this.metrics=this.configureComponent("metrics",e.metrics(this.components))),i.events.addEventListener("peer:update",l=>{if(l.detail.previous==null){let u={id:l.detail.peer.id,multiaddrs:l.detail.peer.addresses.map(f=>f.multiaddr)};i.events.safeDispatchEvent("peer:discovery",{detail:u})}}),e.connectionProtector!=null&&this.configureComponent("connectionProtector",e.connectionProtector(i)),this.components.upgrader=new Ya(this.components,{connectionEncrypters:(e.connectionEncrypters??[]).map((l,u)=>this.configureComponent(`connection-encryption-${u}`,l(this.components))),streamMuxers:(e.streamMuxers??[]).map((l,u)=>this.configureComponent(`stream-muxers-${u}`,l(this.components))),inboundUpgradeTimeout:e.connectionManager?.inboundUpgradeTimeout,outboundUpgradeTimeout:e.connectionManager?.outboundUpgradeTimeout,inboundStreamProtocolNegotiationTimeout:e.connectionManager?.inboundStreamProtocolNegotiationTimeout??e.connectionManager?.protocolNegotiationTimeout,outboundStreamProtocolNegotiationTimeout:e.connectionManager?.outboundStreamProtocolNegotiationTimeout??e.connectionManager?.protocolNegotiationTimeout}),this.configureComponent("transportManager",new Ha(this.components,e.transportManager)),this.configureComponent("connectionManager",new La(this.components,e.connectionManager)),e.connectionMonitor?.enabled!==!1&&this.configureComponent("connectionMonitor",new Ra(this.components,e.connectionMonitor)),this.configureComponent("registrar",new Va(this.components)),this.configureComponent("addressManager",new oa(this.components,e.addresses));let a=(e.peerRouters??[]).map((l,u)=>this.configureComponent(`peer-router-${u}`,l(this.components)));this.peerRouting=this.components.peerRouting=this.configureComponent("peerRouting",new Ua(this.components,{routers:a}));let c=(e.contentRouters??[]).map((l,u)=>this.configureComponent(`content-router-${u}`,l(this.components)));if(this.contentRouting=this.components.contentRouting=this.configureComponent("contentRouting",new Ma(this.components,{routers:c})),this.configureComponent("randomWalk",new Fa(this.components)),(e.peerDiscovery??[]).forEach((l,u)=>{this.configureComponent(`peer-discovery-${u}`,l(this.components)).addEventListener("peer",d=>{this.#e(d)})}),e.transports?.forEach((l,u)=>{this.components.transportManager.add(this.configureComponent(`transport-${u}`,l(this.components)))}),e.services!=null)for(let l of Object.keys(e.services)){let u=e.services[l],f=u(this.components);if(f==null){this.log.error("service factory %s returned null or undefined instance",l);continue}this.services[l]=f,this.configureComponent(l,f),f[rc]!=null&&(this.log("registering service %s for content routing",l),c.push(f[rc])),f[sc]!=null&&(this.log("registering service %s for peer routing",l),a.push(f[sc])),f[nc]!=null&&(this.log("registering service %s for peer discovery",l),f[nc].addEventListener?.("peer",d=>{this.#e(d)}))}Jp(i)}configureComponent(e,t){return t==null&&this.log.error("component %s was null or undefined",e),this.components[e]=t,t}async start(){if(this.status==="stopped"){this.status="starting",this.log("libp2p is starting");try{await this.components.beforeStart?.(),await this.components.start(),await this.components.afterStart?.(),this.status="started",this.safeDispatchEvent("start",{detail:this}),this.log("libp2p has started")}catch(e){throw this.log.error("An error occurred starting libp2p",e),this.status="started",await this.stop(),e}}}async stop(){this.status==="started"&&(this.log("libp2p is stopping"),this.status="stopping",await this.components.beforeStop?.(),await this.components.stop(),await this.components.afterStop?.(),this.status="stopped",this.safeDispatchEvent("stop",{detail:this}),this.log("libp2p has stopped"))}getConnections(e){return this.components.connectionManager.getConnections(e)}getDialQueue(){return this.components.connectionManager.getDialQueue()}getPeers(){let e=new Sr;for(let t of this.components.connectionManager.getConnections())e.add(t.remotePeer);return Array.from(e)}async dial(e,t={}){return this.components.connectionManager.openConnection(e,{priority:75,...t})}async dialProtocol(e,t,n={}){if(t==null)throw new D("no protocols were provided to open a stream");if(t=Array.isArray(t)?t:[t],t.length===0)throw new D("no protocols were provided to open a stream");return(await this.dial(e,n)).newStream(t,n)}getMultiaddrs(){return this.components.addressManager.getAddresses()}getProtocols(){return this.components.registrar.getProtocols()}async hangUp(e,t={}){rr(e)&&(e=gt(e.getPeerId()??"")),await this.components.connectionManager.closeConnections(e,t)}async getPublicKey(e,t={}){if(this.log("getPublicKey %p",e),e.publicKey!=null)return e.publicKey;try{let i=await this.peerStore.get(e);if(i.id.publicKey!=null)return i.id.publicKey}catch(i){if(i.name!=="NotFoundError")throw i}let n=Fe([N("/pk/"),e.toMultihash().bytes]),s=await this.contentRouting.get(n,t),o=pn(s);return await this.peerStore.patch(e,{publicKey:o}),o}async handle(e,t,n){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async s=>{await this.components.registrar.handle(s,t,n)}))}async unhandle(e){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async t=>{await this.components.registrar.unhandle(t)}))}async register(e,t){return this.components.registrar.register(e,t)}unregister(e){this.components.registrar.unregister(e)}async isDialable(e,t={}){return this.components.connectionManager.isDialable(e,t)}#e(e){let{detail:t}=e;if(t.id.toString()===this.peerId.toString()){this.log.error("peer discovery mechanism discovered self");return}this.components.peerStore.merge(t.id,{multiaddrs:t.multiaddrs}).catch(n=>{this.log.error(n)})}};async function mx(r={}){r.privateKey??=await Th("Ed25519");let e=new ec({...await hp(r),peerId:Dh(r.privateKey)});return r.start!==!1&&await e.start(),e}return Fm(gx);})();
 /*! Bundled license information:
 
 pvtsutils/build/index.js:
diff --git a/node_modules/libp2p/dist/src/upgrader.d.ts.map b/node_modules/libp2p/dist/src/upgrader.d.ts.map
index f39cfec..a8a72db 100644
--- a/node_modules/libp2p/dist/src/upgrader.d.ts.map
+++ b/node_modules/libp2p/dist/src/upgrader.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"upgrader.d.ts","sourceRoot":"","sources":["../../src/upgrader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"upgrader.d.ts","sourceRoot":"","sources":["../../src/upgrader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/upgrader.js b/node_modules/libp2p/dist/src/upgrader.js
index 7e62686..4563c38 100644
--- a/node_modules/libp2p/dist/src/upgrader.js
+++ b/node_modules/libp2p/dist/src/upgrader.js
@@ -86,17 +86,32 @@ export class DefaultUpgrader {
      * Upgrades an inbound connection
      */
     async upgradeInbound(maConn, opts = {}) {
+        const where = new Error('where');
         let accepted = false;
+        let finished = false;
+        let didAcceptIncoming = false;
+        let didShouldBlock = false;
+        let didUpgrade = false;
+        const timeout = setTimeout(() => {
+            console.info('wat, did not finish upgrading', maConn, opts);
+            console.info('staus', accepted, finished, didAcceptIncoming, didShouldBlock, didUpgrade);
+            console.info('called', where.stack);
+            console.info('wat');
+        }, 60_000 * 5);
+        timeout.unref();
         try {
             this.metrics.dials?.increment({
                 inbound: true
             });
             accepted = await this.components.connectionManager.acceptIncomingConnection(maConn);
+            didAcceptIncoming = true;
             if (!accepted) {
                 throw new ConnectionDeniedError('Connection denied');
             }
             await this.shouldBlockConnection('denyInboundConnection', maConn);
+            didShouldBlock = true;
             await this._performUpgrade(maConn, 'inbound', opts);
+            didUpgrade = true;
         }
         catch (err) {
             this.metrics.errors?.increment({
@@ -105,6 +120,8 @@ export class DefaultUpgrader {
             throw err;
         }
         finally {
+            clearTimeout(timeout);
+            finished = true;
             if (accepted) {
                 this.components.connectionManager.afterUpgradeInbound();
             }
diff --git a/node_modules/libp2p/dist/src/upgrader.js.map b/node_modules/libp2p/dist/src/upgrader.js.map
index a4b81fd..abdf2ca 100644
--- a/node_modules/libp2p/dist/src/upgrader.js.map
+++ b/node_modules/libp2p/dist/src/upgrader.js.map
@@ -1 +1 @@
-{"version":3,"file":"upgrader.js","sourceRoot":"","sources":["../../src/upgrader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"upgrader.js","sourceRoot":"","sources":["../../src/upgrader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,kCAAkC,EAAE,mCAAmC,EAAE,sBAAsB,EAAE,eAAe,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAA;AAC/L,OAAO,KAAK,GAAG,MAAM,4BAA4B,CAAA;AACjD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAA;AAClD,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAA;AACrD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAA;AACxD,OAAO,EAAE,4BAA4B,EAAE,eAAe,EAAE,MAAM,mCAAmC,CAAA;AACjG,OAAO,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,MAAM,aAAa,CAAA;AAC7H,OAAO,EAAE,2BAA2B,EAAE,4BAA4B,EAAE,MAAM,gBAAgB,CAAA;AA2D1F,SAAS,uBAAuB,CAAE,QAAgB,EAAE,SAAoB;IACtE,IAAI,CAAC;QACH,MAAM,EAAE,OAAO,EAAE,GAAG,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;QAElD,OAAO,OAAO,CAAC,iBAAiB,CAAA;IAClC,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAClB,IAAI,GAAG,CAAC,IAAI,KAAK,wBAAwB,EAAE,CAAC;YAC1C,MAAM,GAAG,CAAA;QACX,CAAC;IACH,CAAC;IAED,OAAO,2BAA2B,CAAA;AACpC,CAAC;AAED,SAAS,uBAAuB,CAAE,QAAgB,EAAE,SAAoB,EAAE,UAA4B,EAAE;IACtG,IAAI,CAAC;QACH,MAAM,EAAE,OAAO,EAAE,GAAG,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;QAElD,IAAI,OAAO,CAAC,kBAAkB,IAAI,IAAI,EAAE,CAAC;YACvC,OAAO,OAAO,CAAC,kBAAkB,CAAA;QACnC,CAAC;IACH,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAClB,IAAI,GAAG,CAAC,IAAI,KAAK,wBAAwB,EAAE,CAAC;YAC1C,MAAM,GAAG,CAAA;QACX,CAAC;IACH,CAAC;IAED,OAAO,OAAO,CAAC,kBAAkB,IAAI,4BAA4B,CAAA;AACnE,CAAC;AAED,SAAS,YAAY,CAAE,QAAgB,EAAE,SAAiC,EAAE,UAAsB;IAChG,IAAI,WAAW,GAAG,CAAC,CAAA;IAEnB,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QAClC,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,IAAI,MAAM,CAAC,QAAQ,KAAK,QAAQ,EAAE,CAAC;YACnE,WAAW,EAAE,CAAA;QACf,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,OAAO,WAAW,CAAA;AACpB,CAAC;AAgBD,MAAM,OAAO,eAAe;IACT,UAAU,CAA2B;IACrC,oBAAoB,CAAkC;IACtD,YAAY,CAAiC;IAC7C,qBAAqB,CAAQ;IAC7B,sBAAsB,CAAQ;IAC9B,uCAAuC,CAAQ;IAC/C,wCAAwC,CAAQ;IAChD,MAAM,CAAgC;IACtC,OAAO,CAGvB;IAED,YAAa,UAAqC,EAAE,IAAkB;QACpE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAC5B,IAAI,CAAC,oBAAoB,GAAG,IAAI,GAAG,EAAE,CAAA;QAErC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YAC5C,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;QAC9D,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAA;QAE7B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;QAC9C,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,IAAI,eAAe,CAAA;QAC1E,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,IAAI,eAAe,CAAA;QAC5E,IAAI,CAAC,uCAAuC,GAAG,IAAI,CAAC,uCAAuC,IAAI,4BAA4B,CAAA;QAC3H,IAAI,CAAC,wCAAwC,GAAG,IAAI,CAAC,wCAAwC,IAAI,4BAA4B,CAAA;QAC7H,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAA;QAC/B,IAAI,CAAC,OAAO,GAAG;YACb,KAAK,EAAE,UAAU,CAAC,OAAO,EAAE,oBAAoB,CAAC,uCAAuC,CAAC;YACxF,MAAM,EAAE,UAAU,CAAC,OAAO,EAAE,oBAAoB,CAAC,6CAA6C,CAAC;SAChG,CAAA;IACH,CAAC;IAEQ,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,kBAAkB,CAAA;IAIlD,KAAK,CAAC,qBAAqB,CAAE,MAAsD,EAAE,GAAG,IAAW;QACjG,MAAM,aAAa,GAAQ,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,CAAA;QAElE,IAAI,aAAa,IAAI,IAAI,EAAE,CAAC;YAC1B,OAAM;QACR,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,CAAA;QAE/E,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;YACpB,MAAM,IAAI,0BAA0B,CAAC,gDAAgD,MAAM,EAAE,CAAC,CAAA;QAChG,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,cAAc,CAAE,MAA2B,EAAE,OAAwB,EAAE;QAC3E,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAA;QACpB,IAAI,QAAQ,GAAG,KAAK,CAAA;QACpB,IAAI,iBAAiB,GAAG,KAAK,CAAA;QAC7B,IAAI,cAAc,GAAG,KAAK,CAAA;QAC1B,IAAI,UAAU,GAAG,KAAK,CAAA;QAEtB,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;YAC9B,OAAO,CAAC,IAAI,CAAC,+BAA+B,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;YAC3D,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,CAAC,CAAA;YACxF,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAA;YACnC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACrB,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAA;QACd,OAAO,CAAC,KAAK,EAAE,CAAA;QAEf,IAAI,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC;gBAC5B,OAAO,EAAE,IAAI;aACd,CAAC,CAAA;YAEF,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAA;YACnF,iBAAiB,GAAG,IAAI,CAAA;YAExB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,MAAM,IAAI,qBAAqB,CAAC,mBAAmB,CAAC,CAAA;YACtD,CAAC;YAED,MAAM,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAA;YACjE,cAAc,GAAG,IAAI,CAAA;YAErB,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;YACnD,UAAU,GAAG,IAAI,CAAA;QACnB,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC7B,OAAO,EAAE,IAAI;aACd,CAAC,CAAA;YAEF,MAAM,GAAG,CAAA;QACX,CAAC;gBAAS,CAAC;YACT,YAAY,CAAC,OAAO,CAAC,CAAA;YACrB,QAAQ,GAAG,IAAI,CAAA;YAEf,IAAI,QAAQ,EAAE,CAAC;gBACb,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,CAAA;YACzD,CAAC;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe,CAAE,MAA2B,EAAE,OAAwB,EAAE;QAC5E,IAAI,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC;gBAC5B,QAAQ,EAAE,IAAI;aACf,CAAC,CAAA;YAEF,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAA;YAC3C,IAAI,YAAgC,CAAA;YAEpC,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;gBAClB,YAAY,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAA;gBACtC,MAAM,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,EAAE,YAAY,EAAE,MAAM,CAAC,CAAA;YAClF,CAAC;YAED,IAAI,SAAS,GAA2B,UAAU,CAAA;YAElD,yEAAyE;YACzE,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE,CAAC;gBAC7B,SAAS,GAAG,SAAS,CAAA;YACvB,CAAC;YAED,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;QAC5D,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC7B,QAAQ,EAAE,IAAI;aACf,CAAC,CAAA;YAEF,MAAM,GAAG,CAAA;QACX,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,eAAe,CAAE,MAA2B,EAAE,SAAiC,EAAE,IAAqB;QAClH,IAAI,aAAkC,CAAA;QACtC,IAAI,UAAkB,CAAA;QACtB,IAAI,YAAiC,CAAA;QACrC,IAAI,YAA4C,CAAA;QAChD,IAAI,cAAc,CAAA;QAElB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE,CAAC;YACxB,MAAM,CAAC,GAAG,CAAC,gGAAgG,CAAC,CAAA;YAE5G,MAAM,oBAAoB,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAA;YACpI,eAAe,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAA;YAC/C,IAAI,CAAC,MAAM,GAAG,oBAAoB,CAAA;QACpC,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,wBAAwB,CAAC,MAAM,CAAC,CAAA;QAEzD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,oCAAoC,EAAE,SAAS,CAAC,CAAA;QAEjE,UAAU;QACV,IAAI,aAAa,GAAG,MAAM,CAAA;QAE1B,IAAI,IAAI,EAAE,cAAc,KAAK,IAAI,EAAE,CAAC;YAClC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAA;YAErD,IAAI,SAAS,IAAI,IAAI,EAAE,CAAC;gBACtB,MAAM,CAAC,GAAG,CAAC,8BAA8B,EAAE,SAAS,CAAC,CAAA;gBACrD,aAAa,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;YACvD,CAAC;QACH,CAAC;QAED,IAAI,CAAC;YACH,yBAAyB;YACzB,aAAa,GAAG,aAAa,CAAA;YAC7B,IAAI,IAAI,EAAE,cAAc,KAAK,IAAI,EAAE,CAAC;gBAClC,IAAI,EAAE,UAAU,EAAE,CAAC,IAAI,mBAAmB,CAAC,oBAAoB,SAAS,aAAa,CAAC,CAAC,CAAC;gBAExF,CAAC;oBACC,IAAI,EAAE,aAAa;oBACnB,UAAU;oBACV,QAAQ,EAAE,cAAc;iBACzB,GAAG,MAAM,CAAC,SAAS,KAAK,SAAS;oBAChC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC;oBAC3C,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,CAC7C,CAAC,CAAA;gBAEF,MAAM,MAAM,GAAwB;oBAClC,GAAG,aAAa;oBAChB,GAAG,aAAa;iBACjB,CAAA;gBAED,MAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC,iCAAiC,EAAE,UAAU,EAAE,MAAM,CAAC,CAAA;YACtJ,CAAC;iBAAM,CAAC;gBACN,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAA;gBAE3C,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;oBAClB,MAAM,IAAI,qBAAqB,CAAC,GAAG,SAAS,yDAAyD,CAAC,CAAA;gBACxG,CAAC;gBAED,MAAM,YAAY,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAA;gBAE5C,cAAc,GAAG,QAAQ,CAAA;gBACzB,UAAU,GAAG,YAAY,CAAA;YAC3B,CAAC;YAED,yEAAyE;YACzE,mEAAmE;YACnE,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;gBAC9C,MAAM,GAAG,GAAG,IAAI,kBAAkB,CAAC,mBAAmB,CAAC,CAAA;gBACvD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;gBACjB,MAAM,GAAG,CAAA;YACX,CAAC;YAED,YAAY,GAAG,aAAa,CAAA;YAC5B,IAAI,IAAI,EAAE,YAAY,IAAI,IAAI,EAAE,CAAC;gBAC/B,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;YAClC,CAAC;iBAAM,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC;gBACtC,IAAI,EAAE,UAAU,EAAE,CAAC,IAAI,mBAAmB,CAAC,sBAAsB,SAAS,aAAa,CAAC,CAAC,CAAA;gBAEzF,2BAA2B;gBAC3B,MAAM,WAAW,GAAG,MAAM,CAAC,SAAS,KAAK,SAAS;oBAChD,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;wBACvB,GAAG,aAAa;wBAChB,GAAG,aAAa;qBACjB,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC;oBAC3B,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;wBACxB,GAAG,aAAa;wBAChB,GAAG,aAAa;qBACjB,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAA;gBAC9B,YAAY,GAAG,WAAW,CAAC,YAAY,CAAA;gBACvC,YAAY,GAAG,WAAW,CAAC,MAAM,CAAA;YACnC,CAAC;QACH,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,iDAAiD,EAAE,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;YACpI,MAAM,GAAG,CAAA;QACX,CAAC;QAED,MAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC,gCAAgC,EAAE,UAAU,EAAE,MAAM,CAAC,CAAA;QAElJ,MAAM,CAAC,GAAG,CAAC,qCAAqC,EAAE,SAAS,CAAC,CAAA;QAE5D,OAAO,IAAI,CAAC,iBAAiB,CAAC;YAC5B,cAAc;YACd,SAAS;YACT,MAAM;YACN,YAAY;YACZ,YAAY;YACZ,UAAU;YACV,MAAM,EAAE,IAAI,EAAE,MAAM;SACrB,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,iBAAiB,CAAE,IAA6B;QAC9C,MAAM,EACJ,cAAc,EACd,SAAS,EACT,MAAM,EACN,YAAY,EACZ,UAAU,EACV,YAAY,EACZ,MAAM,EACP,GAAG,IAAI,CAAA;QAER,IAAI,KAA8B,CAAA;QAClC,IAAI,SAA2F,CAAA;QAC/F,IAAI,UAAsB,CAAA,CAAC,mCAAmC;QAE9D,IAAI,YAAY,IAAI,IAAI,EAAE,CAAC;YACzB,mBAAmB;YACnB,KAAK,GAAG,YAAY,CAAC,iBAAiB,CAAC;gBACrC,SAAS;gBACT,yCAAyC;gBACzC,gBAAgB,EAAE,WAAW,CAAC,EAAE;oBAC9B,IAAI,UAAU,IAAI,IAAI,EAAE,CAAC;wBACvB,OAAM;oBACR,CAAC;oBAED,KAAK,OAAO,CAAC,OAAO,EAAE;yBACnB,IAAI,CAAC,KAAK,IAAI,EAAE;wBACf,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,CAAA;wBAC1D,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAA;wBAChF,eAAe,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;wBAEjC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE;4BACpE,MAAM;4BACN,GAAG,EAAE,WAAW,CAAC,GAAG;4BACpB,UAAU,EAAE,KAAK;yBAClB,CAAC,CAAA;wBAEF,IAAI,UAAU,IAAI,IAAI,EAAE,CAAC;4BACvB,OAAM;wBACR,CAAC;wBAED,UAAU,CAAC,GAAG,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAA;wBAExD,MAAM,aAAa,GAAG,uBAAuB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;wBAClF,MAAM,WAAW,GAAG,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAAA;wBAEjE,IAAI,WAAW,KAAK,aAAa,EAAE,CAAC;4BAClC,MAAM,GAAG,GAAG,IAAI,kCAAkC,CAAC,mDAAmD,QAAQ,aAAa,aAAa,EAAE,CAAC,CAAA;4BAC3I,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;4BAEtB,MAAM,GAAG,CAAA;wBACX,CAAC;wBAED,0EAA0E;wBAC1E,iBAAiB;wBACjB,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;wBAClC,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAA;wBAC9B,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAA;wBAE/B,6DAA6D;wBAC7D,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,EAAE,CAAC;4BAC9B,WAAW,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;wBAC5C,CAAC;wBAED,4DAA4D;wBAC5D,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI,EAAE,CAAC;4BAC7B,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAA;wBAC1C,CAAC;wBAED,8DAA8D;wBAC9D,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;4BACzB,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA;wBAClC,CAAC;wBAED,gGAAgG;wBAChG,6EAA6E;wBAC7E,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE;4BAChD,SAAS,EAAE,CAAC,QAAQ,CAAC;yBACtB,CAAC,CAAA;wBAEF,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,mBAAmB,CAAC,WAAW,EAAE,UAAU,CAAC,CAAA;wBAErE,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAA;oBAC/D,CAAC,CAAC;yBACD,KAAK,CAAC,KAAK,EAAC,GAAG,EAAC,EAAE;wBACjB,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,2CAA2C,EAAE,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC,CAAA;wBAEtF,IAAI,WAAW,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;4BACvC,MAAM,WAAW,CAAC,KAAK,EAAE,CAAA;wBAC3B,CAAC;oBACH,CAAC,CAAC,CAAA;gBACN,CAAC;aACF,CAAC,CAAA;YAEF,SAAS,GAAG,KAAK,EAAE,SAAmB,EAAE,UAA4B,EAAE,EAAmB,EAAE;gBACzF,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;oBAClB,MAAM,IAAI,qBAAqB,CAAC,+BAA+B,CAAC,CAAA;gBAClE,CAAC;gBAED,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,sCAAsC,EAAE,SAAS,CAAC,CAAA;gBACvE,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,SAAS,EAAE,CAAA;gBAC3C,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,wCAAwC,EAAE,WAAW,CAAC,EAAE,EAAE,SAAS,CAAC,CAAA;gBAEzF,IAAI,CAAC;oBACH,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,EAAE,CAAC;wBAC3B,WAAW,CAAC,GAAG,CAAC,mGAAmG,EAAE,SAAS,CAAC,CAAA;wBAE/H,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAA;wBACjF,eAAe,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;wBAEjC,OAAO,GAAG;4BACR,GAAG,OAAO;4BACV,MAAM;yBACP,CAAA;oBACH,CAAC;oBAED,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,sCAAsC,EAAE,SAAS,CAAC,CAAA;oBAExE,MAAM,EACJ,MAAM,EACN,QAAQ,EACT,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE;wBAC3C,GAAG,OAAO;wBACV,GAAG,EAAE,WAAW,CAAC,GAAG;wBACpB,UAAU,EAAE,IAAI;qBACjB,CAAC,CAAA;oBAEF,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAA;oBAEvD,MAAM,aAAa,GAAG,uBAAuB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;oBAC3F,MAAM,WAAW,GAAG,YAAY,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,CAAC,CAAA;oBAElE,IAAI,WAAW,IAAI,aAAa,EAAE,CAAC;wBACjC,MAAM,GAAG,GAAG,IAAI,mCAAmC,CAAC,oDAAoD,QAAQ,OAAO,WAAW,IAAI,aAAa,EAAE,CAAC,CAAA;wBACtJ,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;wBAEtB,MAAM,GAAG,CAAA;oBACX,CAAC;oBAED,gGAAgG;oBAChG,6EAA6E;oBAC7E,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE;wBAChD,SAAS,EAAE,CAAC,QAAQ,CAAC;qBACtB,CAAC,CAAA;oBAEF,0EAA0E;oBAC1E,iBAAiB;oBACjB,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;oBAClC,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAA;oBAC9B,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAA;oBAE/B,6DAA6D;oBAC7D,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,EAAE,CAAC;wBAC9B,WAAW,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;oBAC5C,CAAC;oBAED,4DAA4D;oBAC5D,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI,EAAE,CAAC;wBAC7B,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAA;oBAC1C,CAAC;oBAED,8DAA8D;oBAC9D,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;wBACzB,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA;oBAClC,CAAC;oBAED,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,mBAAmB,CAAC,WAAW,EAAE,UAAU,CAAC,CAAA;oBAErE,OAAO,WAAW,CAAA;gBACpB,CAAC;gBAAC,OAAO,GAAQ,EAAE,CAAC;oBAClB,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,gFAAgF,EAAE,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE,GAAG,CAAC,CAAA;oBAEvL,IAAI,WAAW,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;wBACvC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;oBACxB,CAAC;oBAED,MAAM,GAAG,CAAA;gBACX,CAAC;YACH,CAAC,CAAA;YAED,kCAAkC;YAClC,KAAK,OAAO,CAAC,GAAG,CAAC;gBACf,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;gBAC/B,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aAChC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACb,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAA;YACnE,CAAC,CAAC,CAAA;QACJ,CAAC;QAED,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAA;QACjC,MAAM,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,SAAS,EAAE;YACrC,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE;gBACf,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,SAAS,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;oBACtE,2DAA2D;oBAC3D,CAAC,KAAK,IAAI,EAAE;wBACV,IAAI,CAAC;4BACH,IAAI,UAAU,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;gCACjC,MAAM,UAAU,CAAC,KAAK,EAAE,CAAA;4BAC1B,CAAC;wBACH,CAAC;wBAAC,OAAO,GAAQ,EAAE,CAAC;4BAClB,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,kDAAkD,EAAE,GAAG,CAAC,CAAA;wBAC/E,CAAC;gCAAS,CAAC;4BACT,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,EAAE;gCAChD,MAAM,EAAE,UAAU;6BACnB,CAAC,CAAA;wBACJ,CAAC;oBACH,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;wBACf,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,0DAA0D,EAAE,GAAG,CAAC,CAAA;oBACvF,CAAC,CAAC,CAAA;gBACJ,CAAC;gBAED,OAAO,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAA;YAC7B,CAAC;SACF,CAAC,CAAA;QACF,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QAErC,MAAM,2BAA2B,GAAG,GAAQ,EAAE;YAC5C,MAAM,IAAI,qBAAqB,CAAC,+BAA+B,CAAC,CAAA;QAClE,CAAC,CAAA;QAED,wBAAwB;QACxB,UAAU,GAAG,gBAAgB,CAAC;YAC5B,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,UAAU;YACV,MAAM,EAAE,MAAM;YACd,SAAS;YACT,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,KAAK,EAAE,QAAQ;YAC5B,UAAU,EAAE,cAAc;YAC1B,MAAM;YACN,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;YAC9B,SAAS,EAAE,SAAS,IAAI,2BAA2B;YACnD,UAAU,EAAE,GAAG,EAAE;gBACf,OAAO,KAAK,EAAE,OAAO,IAAI,EAAE,CAAA;YAC7B,CAAC;YACD,KAAK,EAAE,KAAK,EAAE,OAAsB,EAAE,EAAE;gBACtC,iDAAiD;gBACjD,MAAM,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;gBAE3B,iCAAiC;gBACjC,MAAM,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;YAC7B,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;gBAEjB,uCAAuC;gBACvC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAA;YACnB,CAAC;SACF,CAAC,CAAA;QAEF,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,EAAE;YAC/C,MAAM,EAAE,UAAU;SACnB,CAAC,CAAA;QAEF,uBAAuB;QACvB,UAAU,CAAC,gBAAgB,GAAG,SAAS,CAAA;QAEvC,OAAO,UAAU,CAAA;IACnB,CAAC;IAED;;OAEG;IACH,SAAS,CAAE,IAAqB;QAC9B,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAA;QAC7C,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;QAE3E,IAAI,UAAU,CAAC,MAAM,IAAI,IAAI,IAAI,OAAO,CAAC,sBAAsB,KAAK,IAAI,EAAE,CAAC;YACzE,MAAM,IAAI,sBAAsB,CAAC,mDAAmD,CAAC,CAAA;QACvF,CAAC;QAED,OAAO,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAA;IACjC,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe,CAAE,UAA+B,EAAE,OAAsB;QAC5E,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,CAAA;QAE9D,IAAI,CAAC;YACH,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE;gBACnE,GAAG,OAAO;gBACV,GAAG,EAAE,UAAU,CAAC,GAAG;aACpB,CAAC,CAAA;YACF,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAEzD,IAAI,SAAS,IAAI,IAAI,EAAE,CAAC;gBACtB,MAAM,IAAI,qBAAqB,CAAC,8BAA8B,QAAQ,EAAE,CAAC,CAAA;YAC3E,CAAC;YAED,UAAU,CAAC,GAAG,CAAC,8CAA8C,EAAE,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;YAE/F,OAAO;gBACL,GAAG,MAAM,SAAS,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC;gBACjD,QAAQ;aACT,CAAA;QACH,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,8CAA8C,EAAE,UAAU,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;YAChG,MAAM,IAAI,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QAC9C,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,gBAAgB,CAAE,UAA+B,EAAE,OAAgC;QACvF,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,CAAA;QAE9D,IAAI,CAAC;YACH,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,6BAA6B,EAAE,SAAS,CAAC,CAAA;YAE9D,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE;gBACnE,GAAG,OAAO;gBACV,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,UAAU,EAAE,IAAI;aACjB,CAAC,CAAA;YACF,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAEzD,IAAI,SAAS,IAAI,IAAI,EAAE,CAAC;gBACtB,MAAM,IAAI,qBAAqB,CAAC,8BAA8B,QAAQ,EAAE,CAAC,CAAA;YAC3E,CAAC;YAED,UAAU,CAAC,GAAG,CAAC,+CAA+C,EAAE,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;YAEhG,OAAO;gBACL,GAAG,MAAM,SAAS,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC;gBAClD,QAAQ;aACT,CAAA;QACH,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,6CAA6C,EAAE,UAAU,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;YAC/F,MAAM,IAAI,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QAC9C,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,kBAAkB,CAAE,UAA+B,EAAE,MAAuC,EAAE,OAAqB;QACvH,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAA;QAC3C,UAAU,CAAC,GAAG,CAAC,6BAA6B,EAAE,SAAS,CAAC,CAAA;QACxD,IAAI,CAAC;YACH,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,gCAAgC,EAAE,SAAS,CAAC,CAAA;YAEjE,MAAM,EACJ,MAAM,EACN,QAAQ,EACT,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE;gBAC1C,GAAG,OAAO;gBACV,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,UAAU,EAAE,IAAI;aACjB,CAAC,CAAA;YAEF,UAAU,CAAC,GAAG,CAAC,+BAA+B,EAAE,QAAQ,CAAC,CAAA;YACzD,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAEzC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,CAAA;QACjC,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,wCAAwC,EAAE,GAAG,CAAC,CAAA;YACnE,MAAM,IAAI,qBAAqB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;QAC9C,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,iBAAiB,CAAE,UAA+B,EAAE,MAAuC,EAAE,OAAqB;QACtH,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAA;QAC3C,UAAU,CAAC,GAAG,CAAC,4BAA4B,EAAE,SAAS,CAAC,CAAA;QACvD,IAAI,CAAC;YACH,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE;gBACnE,GAAG,OAAO;gBACV,GAAG,EAAE,UAAU,CAAC,GAAG;aACpB,CAAC,CAAA;YACF,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAEzC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,CAAA;QACjC,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,uCAAuC,EAAE,GAAG,CAAC,CAAA;YAClE,MAAM,IAAI,qBAAqB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;QAC9C,CAAC;IACH,CAAC;CACF"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/version.d.ts b/node_modules/libp2p/dist/src/version.d.ts
index d70565b..022bc1d 100644
--- a/node_modules/libp2p/dist/src/version.d.ts
+++ b/node_modules/libp2p/dist/src/version.d.ts
@@ -1,3 +1,3 @@
-export declare const version = "2.7.2";
+export declare const version = "0.0.0";
 export declare const name = "js-libp2p";
 //# sourceMappingURL=version.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/version.js b/node_modules/libp2p/dist/src/version.js
index 56a1c52..0050f1c 100644
--- a/node_modules/libp2p/dist/src/version.js
+++ b/node_modules/libp2p/dist/src/version.js
@@ -1,3 +1,3 @@
-export const version = '2.7.2';
+export const version = '0.0.0';
 export const name = 'js-libp2p';
 //# sourceMappingURL=version.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts b/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts
new file mode 100644
index 0000000..985b1d1
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=address-manager.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts.map b/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts.map
new file mode 100644
index 0000000..ac1f6fc
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"address-manager.spec.d.ts","sourceRoot":"","sources":["../../../test/addresses/address-manager.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/address-manager.spec.js b/node_modules/libp2p/dist/test/addresses/address-manager.spec.js
new file mode 100644
index 0000000..aaaa765
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/address-manager.spec.js
@@ -0,0 +1,682 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { AddressManager } from '../../src/address-manager/index.js';
+const listenAddresses = ['/ip4/127.0.0.1/tcp/15006/ws', '/ip4/127.0.0.1/tcp/15008/ws'];
+const announceAddreses = ['/dns4/peer.io'];
+describe('Address Manager', () => {
+    let peerId;
+    let peerStore;
+    let events;
+    beforeEach(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        peerStore = stubInterface({
+            patch: Sinon.stub().resolves(stubInterface())
+        });
+        events = new TypedEventEmitter();
+    });
+    it('should not need any addresses', () => {
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface()
+        });
+        expect(am.getListenAddrs()).to.be.empty();
+        expect(am.getAnnounceAddrs()).to.be.empty();
+    });
+    it('should return listen multiaddrs on get', () => {
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface(),
+            listen: listenAddresses
+        });
+        expect(am.getListenAddrs()).to.have.lengthOf(listenAddresses.length);
+        expect(am.getAnnounceAddrs()).to.be.empty();
+        const listenMultiaddrs = am.getListenAddrs();
+        expect(listenMultiaddrs.length).to.equal(2);
+        expect(listenMultiaddrs[0].equals(multiaddr(listenAddresses[0]))).to.equal(true);
+        expect(listenMultiaddrs[1].equals(multiaddr(listenAddresses[1]))).to.equal(true);
+    });
+    it('should return announce multiaddrs on get', () => {
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface(),
+            listen: listenAddresses,
+            announce: announceAddreses
+        });
+        expect(am.getListenAddrs()).to.have.lengthOf(listenAddresses.length);
+        expect(am.getAnnounceAddrs()).to.have.lengthOf(announceAddreses.length);
+        const announceMultiaddrs = am.getAnnounceAddrs();
+        expect(announceMultiaddrs.length).to.equal(1);
+        expect(announceMultiaddrs[0].equals(multiaddr(announceAddreses[0]))).to.equal(true);
+    });
+    it('should add appendAnnounce multiaddrs on get', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: (mas) => mas,
+            listen: listenAddresses,
+            appendAnnounce: announceAddreses
+        });
+        transportManager.getAddrs.returns(listenAddresses.map(ma => multiaddr(ma)));
+        expect(am.getListenAddrs()).to.have.lengthOf(listenAddresses.length);
+        expect(am.getAppendAnnounceAddrs()).to.have.lengthOf(announceAddreses.length);
+        const announceMultiaddrs = am.getAddresses();
+        expect(announceMultiaddrs.length).to.equal(3);
+        expect(announceMultiaddrs.map(ma => ma.toString())).to.deep.equal([
+            ...listenAddresses.map(ma => `${ma}/p2p/${peerId}`),
+            ...announceAddreses.map(ma => `${ma}/p2p/${peerId}`)
+        ]);
+    });
+    it('should add observed addresses', () => {
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        am.addObservedAddr(multiaddr('/ip4/123.123.123.123/tcp/39201'));
+        expect(am.getObservedAddrs()).to.have.lengthOf(1);
+    });
+    it('should limit observed addresses', () => {
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        for (let i = 0; i < 100; i++) {
+            am.addObservedAddr(multiaddr(`/ip4/123.123.123.123/tcp/392${i}`));
+        }
+        expect(am.getObservedAddrs()).to.have.lengthOf(10);
+    });
+    it('should allow duplicate listen addresses', () => {
+        const ma = multiaddr('/ip4/0.0.0.0/tcp/0');
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface(),
+            listen: [
+                ma.toString(),
+                ma.toString()
+            ]
+        });
+        expect(am.getListenAddrs()).to.deep.equal([
+            ma,
+            ma
+        ]);
+    });
+    it('should dedupe added observed addresses', () => {
+        const ma = multiaddr('/ip4/123.123.123.123/tcp/39201');
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        am.addObservedAddr(ma);
+        am.addObservedAddr(ma);
+        am.addObservedAddr(ma);
+        expect(am.getObservedAddrs()).to.have.lengthOf(1);
+        expect(am.getObservedAddrs().map(ma => ma.toString())).to.include(ma.toString());
+    });
+    it('should only set addresses once', async () => {
+        const ma = '/ip4/123.123.123.123/tcp/39201';
+        const ma2 = `${ma.toString()}/p2p/${peerId.toString()}`;
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface({
+                getAddrs: Sinon.stub().returns([]),
+                getListeners: Sinon.stub().returns([])
+            }),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        am.addObservedAddr(multiaddr(ma));
+        am.addObservedAddr(multiaddr(ma2));
+        am.confirmObservedAddr(multiaddr(ma));
+        am.confirmObservedAddr(multiaddr(ma));
+        am.confirmObservedAddr(multiaddr(ma));
+        am.confirmObservedAddr(multiaddr(ma2));
+        // wait for address manager _updatePeerStoreAddresses debounce
+        await delay(1500);
+        expect(peerStore.patch).to.have.property('callCount', 1);
+    });
+    it('should strip our peer address from added observed addresses', () => {
+        const ma = multiaddr('/ip4/123.123.123.123/tcp/39201');
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        am.addObservedAddr(ma);
+        am.addObservedAddr(multiaddr(`${ma.toString()}/p2p/${peerId.toString()}`));
+        expect(am.getObservedAddrs()).to.have.lengthOf(1);
+        expect(am.getObservedAddrs().map(ma => ma.toString())).to.include(ma.toString());
+    });
+    it('should strip our peer address from added observed addresses in difference formats', () => {
+        const ma = multiaddr('/ip4/123.123.123.123/tcp/39201');
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        am.addObservedAddr(ma);
+        am.addObservedAddr(multiaddr(`${ma.toString()}/p2p/${peerId.toString()}`));
+        expect(am.getObservedAddrs()).to.have.lengthOf(1);
+        expect(am.getObservedAddrs().map(ma => ma.toString())).to.include(ma.toString());
+    });
+    it('should not add our peer id to path multiaddrs', () => {
+        const ma = '/unix/foo/bar/baz';
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            listen: [ma],
+            announce: []
+        });
+        transportManager.getAddrs.returns([multiaddr(ma)]);
+        const addrs = am.getAddresses();
+        expect(addrs).to.have.lengthOf(1);
+        expect(addrs[0].toString()).to.not.include(`/p2p/${peerId.toString()}`);
+    });
+    it('should add an IPv4 DNS mapping', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = '192.168.1.123';
+        const internalPort = 1234;
+        const protocol = 'tcp';
+        // one loopback, one LAN, one TLS address
+        transportManager.getAddrs.returns([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws`)
+        ]);
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws/p2p/${peerId}`)
+        ]);
+        const domain = 'example.com';
+        const externalIp = '81.12.12.1';
+        const externalPort = 4566;
+        am.addDNSMapping(domain, [externalIp]);
+        am.addPublicAddressMapping(internalIp, internalPort, externalIp, externalPort, 'tcp');
+        // have not verified DNS mapping so it is not included
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws/p2p/${peerId}`)
+        ]);
+        // confirm public IP and DNS mapping
+        am.confirmObservedAddr(multiaddr(`/ip4/${externalIp}/tcp/${externalPort}`));
+        am.confirmObservedAddr(multiaddr(`/dns4/${domain}/tcp/${externalPort}`));
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws/p2p/${peerId}`),
+            multiaddr(`/ip4/${externalIp}/tcp/${externalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${externalIp}/tcp/${externalPort}/tls/sni/${domain}/ws/p2p/${peerId}`)
+        ]);
+    });
+    it('should add an IPv6 DNS mapping', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = '192.168.1.123';
+        const internalPort = 1234;
+        const protocol = 'tcp';
+        // one loopback, one LAN, one TLS address
+        transportManager.getAddrs.returns([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws`)
+        ]);
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws/p2p/${peerId}`)
+        ]);
+        const domain = 'example.com';
+        const externalIp = '2a00:23c6:14b1:7e00:c010:8ecf:2a25:dcd1';
+        const externalPort = 4566;
+        am.addDNSMapping(domain, [externalIp]);
+        am.addPublicAddressMapping(internalIp, internalPort, externalIp, externalPort, 'tcp');
+        // have not verified DNS mapping so it is not included
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws/p2p/${peerId}`)
+        ]);
+        // confirm public IP and DNS mapping
+        am.confirmObservedAddr(multiaddr(`/ip6/${externalIp}/tcp/${externalPort}`));
+        am.confirmObservedAddr(multiaddr(`/dns6/${domain}/tcp/${externalPort}`));
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws/p2p/${peerId}`),
+            multiaddr(`/ip6/${externalIp}/tcp/${externalPort}/p2p/${peerId}`),
+            multiaddr(`/ip6/${externalIp}/tcp/${externalPort}/tls/sni/${domain}/ws/p2p/${peerId}`)
+        ]);
+    });
+    it('should remove a DNS mapping', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = '192.168.1.123';
+        const internalPort = 1234;
+        const protocol = 'tcp';
+        // one loopback, one LAN, one TLS address
+        transportManager.getAddrs.returns([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws`)
+        ]);
+        const domain = 'example.com';
+        const externalIp = '81.12.12.1';
+        const externalPort = 4566;
+        am.addDNSMapping(domain, [externalIp]);
+        am.addPublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        // confirm public IP and DNS mapping
+        am.confirmObservedAddr(multiaddr(`/ip4/${externalIp}/tcp/${externalPort}`));
+        am.confirmObservedAddr(multiaddr(`/dns4/${domain}/tcp/${externalPort}`));
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws/p2p/${peerId}`),
+            multiaddr(`/ip4/${externalIp}/tcp/${externalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${externalIp}/tcp/${externalPort}/tls/sni/${domain}/ws/p2p/${peerId}`)
+        ]);
+        // remove DNS mapping
+        am.removeDNSMapping(domain);
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/tls/ws/p2p/${peerId}`),
+            multiaddr(`/ip4/${externalIp}/tcp/${externalPort}/p2p/${peerId}`),
+            multiaddr(`/ip4/${externalIp}/tcp/${externalPort}/tls/ws/p2p/${peerId}`)
+        ]);
+    });
+    it('should add a public IPv4 address mapping', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = '192.168.1.123';
+        const internalPort = 4567;
+        const externalIp = '81.12.12.1';
+        const externalPort = 8910;
+        const protocol = 'tcp';
+        am.addPublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        // one loopback, one LAN address
+        transportManager.getAddrs.returns([
+            multiaddr('/ip4/127.0.0.1/tcp/1234'),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}`)
+        ]);
+        // not confirmed the mapping yet
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/tcp/1234/p2p/${peerId.toString()}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`)
+        ]);
+        // confirm IP mapping
+        am.confirmObservedAddr(multiaddr(`/ip4/${externalIp}/${protocol}/${externalPort}`));
+        // should have mapped the LAN address to the external IP
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/tcp/1234/p2p/${peerId.toString()}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`),
+            multiaddr(`/ip4/${externalIp}/${protocol}/${externalPort}/p2p/${peerId.toString()}`)
+        ]);
+        am.removePublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/127.0.0.1/tcp/1234/p2p/${peerId.toString()}`),
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`)
+        ]);
+    });
+    it('should add a public IPv6 address mapping', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = 'fd9b:ec6c:a487:efd2:14bc:d40:b478:9555';
+        const internalPort = 4567;
+        const externalIp = '2a00:23c6:14b1:7e00:28b8:30d:944e:27f3';
+        const externalPort = 8910;
+        const protocol = 'tcp';
+        am.addPublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        // one loopback, one LAN address
+        transportManager.getAddrs.returns([
+            multiaddr('/ip6/::1/tcp/1234'),
+            multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}`)
+        ]);
+        // not confirmed the mapping yet
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip6/::1/tcp/1234/p2p/${peerId.toString()}`),
+            multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`)
+        ]);
+        // confirm IP mapping
+        am.confirmObservedAddr(multiaddr(`/ip6/${externalIp}/${protocol}/${externalPort}`));
+        // should have mapped the LAN address to the external IP
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip6/::1/tcp/1234/p2p/${peerId.toString()}`),
+            multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`),
+            multiaddr(`/ip6/${externalIp}/${protocol}/${externalPort}/p2p/${peerId.toString()}`)
+        ]);
+        am.removePublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip6/::1/tcp/1234/p2p/${peerId.toString()}`),
+            multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`)
+        ]);
+    });
+    it('should add a public IPv4 address mapping when only local IPv6 addresses are present', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = 'fdad:23c6:14b1:7e00:28b8:30d:944e:27f3';
+        const internalPort = 4567;
+        const externalIp = '81.12.12.1';
+        const externalPort = 8910;
+        const protocol = 'tcp';
+        am.addPublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        // one loopback, one LAN address
+        transportManager.getAddrs.returns([
+            multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}`)
+        ]);
+        // confirm IP mapping
+        am.confirmObservedAddr(multiaddr(`/ip4/${externalIp}/${protocol}/${externalPort}`));
+        // should have mapped the LAN address to the external IP
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`),
+            multiaddr(`/ip4/${externalIp}/${protocol}/${externalPort}/p2p/${peerId.toString()}`)
+        ]);
+        am.removePublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`)
+        ]);
+    });
+    it('should require confirmation of global unicast IPv6 addresses', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = '2a01:23c6:14b1:7e00:28b8:30d:944e:27f3';
+        const internalPort = 4567;
+        const externalIp = '81.12.12.1';
+        const externalPort = 8910;
+        const protocol = 'tcp';
+        am.addPublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        // one loopback, one LAN address
+        transportManager.getAddrs.returns([
+            multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}`)
+        ]);
+        expect(am.getAddresses()).to.be.empty();
+        // confirm global IP
+        am.confirmObservedAddr(multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}`));
+        // should include IP now
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip6/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`)
+        ]);
+    });
+    it('should add a public IPv6 address mapping when only local IPv4 addresses are present', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = '192.168.1.123';
+        const internalPort = 4567;
+        const externalIp = '2a00:23c6:14b1:7e00:28b8:30d:944e:27f3';
+        const externalPort = 8910;
+        const protocol = 'tcp';
+        am.addPublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        // one loopback, one LAN address
+        transportManager.getAddrs.returns([
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}`)
+        ]);
+        // confirm IP mapping
+        am.confirmObservedAddr(multiaddr(`/ip6/${externalIp}/${protocol}/${externalPort}`));
+        // should have mapped the LAN address to the external IP
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`),
+            multiaddr(`/ip6/${externalIp}/${protocol}/${externalPort}/p2p/${peerId.toString()}`)
+        ]);
+        am.removePublicAddressMapping(internalIp, internalPort, externalIp, externalPort, protocol);
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`)
+        ]);
+    });
+    it('should not confirm unknown observed addresses', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = '192.168.1.123';
+        const internalPort = 4567;
+        const externalIp = '2a00:23c6:14b1:7e00:28b8:30d:944e:27f3';
+        const externalPort = 8910;
+        const protocol = 'tcp';
+        // one loopback, one LAN address
+        transportManager.getAddrs.returns([
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}`)
+        ]);
+        // confirm address we have not observed
+        am.confirmObservedAddr(multiaddr(`/ip6/${externalIp}/${protocol}/${externalPort}`));
+        // should not have changed the address list
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`)
+        ]);
+    });
+    it('should confirm unknown observed addresses with hints', () => {
+        const transportManager = stubInterface();
+        const am = new AddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        const internalIp = '192.168.1.123';
+        const internalPort = 4567;
+        const externalIp = '2a00:23c6:14b1:7e00:28b8:30d:944e:27f3';
+        const externalPort = 8910;
+        const protocol = 'tcp';
+        // confirm address before fetching addresses
+        am.confirmObservedAddr(multiaddr(`/ip6/${externalIp}/${protocol}/${externalPort}`), {
+            type: 'transport'
+        });
+        // one loopback, one LAN address
+        transportManager.getAddrs.returns([
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}`),
+            multiaddr(`/ip6/${externalIp}/${protocol}/${externalPort}`)
+        ]);
+        // should have changed the address list
+        expect(am.getAddresses()).to.deep.equal([
+            multiaddr(`/ip4/${internalIp}/${protocol}/${internalPort}/p2p/${peerId.toString()}`),
+            multiaddr(`/ip6/${externalIp}/${protocol}/${externalPort}/p2p/${peerId.toString()}`)
+        ]);
+    });
+    it('should upgrade an observed address to an IP mapping when confirming an observed address and there is only a single eligible listener', () => {
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface({
+                getAddrs: Sinon.stub().returns([
+                    multiaddr('/ip4/127.0.0.1/tcp/1234'),
+                    multiaddr('/ip4/192.168.1.123/tcp/1234')
+                ]),
+                getListeners: Sinon.stub().returns([
+                    stubInterface({
+                        getAddrs: Sinon.stub().returns([
+                            multiaddr('/ip4/127.0.0.1/tcp/1234'),
+                            multiaddr('/ip4/192.168.1.123/tcp/1234')
+                        ])
+                    }),
+                    stubInterface({
+                        getAddrs: Sinon.stub().returns([
+                            multiaddr('/ip6/::1/tcp/1234'),
+                            multiaddr('/ip6/2b01:ab15:3c8:3300:10b8:170e:1087:3b0e/tcp/1234')
+                        ])
+                    })
+                ])
+            }),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        const ma = multiaddr('/ip4/123.123.123.123/tcp/39201');
+        am.addObservedAddr(ma);
+        am.confirmObservedAddr(ma);
+        expect(am.getAddressesWithMetadata().map(mapAddress)).to.include.deep.members([{
+                multiaddr: ma,
+                verified: true,
+                type: 'ip-mapping'
+            }]);
+        expect(am.getAddressesWithMetadata().map(mapAddress)).to.not.include.deep.members([{
+                multiaddr: ma,
+                verified: true,
+                type: 'observed'
+            }]);
+    });
+    it('should not upgrade an observed address to an IP mapping when confirming an observed address and there are multiple eligible listeners', () => {
+        const am = new AddressManager({
+            peerId,
+            transportManager: stubInterface({
+                getAddrs: Sinon.stub().returns([
+                    multiaddr('/ip4/127.0.0.1/tcp/1234'),
+                    multiaddr('/ip4/192.168.1.123/tcp/1234')
+                ]),
+                getListeners: Sinon.stub().returns([
+                    stubInterface({
+                        getAddrs: Sinon.stub().returns([
+                            multiaddr('/ip4/127.0.0.1/tcp/1234'),
+                            multiaddr('/ip4/192.168.1.123/tcp/1234')
+                        ])
+                    }),
+                    stubInterface({
+                        getAddrs: Sinon.stub().returns([
+                            multiaddr('/ip4/127.0.0.1/tcp/4567'),
+                            multiaddr('/ip4/192.168.1.123/tcp/4567')
+                        ])
+                    })
+                ])
+            }),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        const ma = multiaddr('/ip4/123.123.123.123/tcp/39201');
+        am.addObservedAddr(ma);
+        am.confirmObservedAddr(ma);
+        expect(am.getAddressesWithMetadata().map(mapAddress)).to.not.include.deep.members([{
+                multiaddr: ma,
+                verified: true,
+                type: 'ip-mapping'
+            }]);
+        expect(am.getAddressesWithMetadata().map(mapAddress)).to.include.deep.members([{
+                multiaddr: ma,
+                verified: true,
+                type: 'observed'
+            }]);
+    });
+});
+function mapAddress(addr) {
+    return {
+        multiaddr: addr.multiaddr,
+        verified: addr.verified,
+        type: addr.type
+    };
+}
+//# sourceMappingURL=address-manager.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/address-manager.spec.js.map b/node_modules/libp2p/dist/test/addresses/address-manager.spec.js.map
new file mode 100644
index 0000000..67e0c3b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/address-manager.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"address-manager.spec.js","sourceRoot":"","sources":["../../../test/addresses/address-manager.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.d.ts
new file mode 100644
index 0000000..55ca5e9
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=address-sorter.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.d.ts.map
new file mode 100644
index 0000000..f547aa0
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"address-sorter.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/address-sorter.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.js b/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.js
new file mode 100644
index 0000000..0f47261
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.js
@@ -0,0 +1,210 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { defaultAddressSorter } from '../../src/connection-manager/address-sorter.js';
+describe('address-sort', () => {
+    describe('public addresses first', () => {
+        it('should sort public addresses first', () => {
+            const publicAddress = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4000'),
+                isCertified: false
+            };
+            const privateAddress = {
+                multiaddr: multiaddr('/ip4/127.0.0.1/tcp/4000'),
+                isCertified: false
+            };
+            const addresses = [
+                privateAddress,
+                publicAddress
+            ];
+            const sortedAddresses = defaultAddressSorter(addresses);
+            expect(sortedAddresses).to.deep.equal([
+                publicAddress,
+                privateAddress
+            ]);
+        });
+    });
+    describe('certified addresses first', () => {
+        it('should sort certified addresses first', () => {
+            const certifiedPublicAddress = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4001'),
+                isCertified: true
+            };
+            const publicAddress = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4000'),
+                isCertified: false
+            };
+            const certifiedPrivateAddress = {
+                multiaddr: multiaddr('/ip4/127.0.0.1/tcp/4001'),
+                isCertified: true
+            };
+            const privateAddress = {
+                multiaddr: multiaddr('/ip4/127.0.0.1/tcp/4000'),
+                isCertified: false
+            };
+            const addresses = [
+                publicAddress,
+                certifiedPublicAddress,
+                certifiedPrivateAddress,
+                privateAddress
+            ];
+            const sortedAddresses = defaultAddressSorter(addresses);
+            expect(sortedAddresses).to.deep.equal([
+                certifiedPublicAddress,
+                publicAddress,
+                certifiedPrivateAddress,
+                privateAddress
+            ]);
+        });
+    });
+    describe('circuit relay addresses last', () => {
+        it('should sort circuit relay addresses last', () => {
+            const publicAddress = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4000'),
+                isCertified: false
+            };
+            const publicRelay = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4000/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm'),
+                isCertified: false
+            };
+            const addresses = [
+                publicRelay,
+                publicAddress
+            ];
+            const sortedAddresses = defaultAddressSorter(addresses);
+            expect(sortedAddresses).to.deep.equal([
+                publicAddress,
+                publicRelay
+            ]);
+        });
+    });
+    describe('default address sort', () => {
+        it('should sort public, then public relay, then private, then private relay with certified addresses taking priority', () => {
+            const certifiedPublicAddress = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4001'),
+                isCertified: true
+            };
+            const publicAddress = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4000'),
+                isCertified: false
+            };
+            const certifiedPublicRelay = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4001/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm'),
+                isCertified: true
+            };
+            const publicRelay = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4000/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm'),
+                isCertified: false
+            };
+            const certifiedPrivateAddress = {
+                multiaddr: multiaddr('/ip4/127.0.0.1/tcp/4001'),
+                isCertified: true
+            };
+            const privateAddress = {
+                multiaddr: multiaddr('/ip4/127.0.0.1/tcp/4000'),
+                isCertified: false
+            };
+            const certifiedPrivateRelay = {
+                multiaddr: multiaddr('/ip4/127.0.0.1/tcp/4001/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm'),
+                isCertified: true
+            };
+            const privateRelay = {
+                multiaddr: multiaddr('/ip4/127.0.0.1/tcp/4000/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm'),
+                isCertified: false
+            };
+            const addresses = [
+                privateAddress,
+                certifiedPrivateAddress,
+                publicRelay,
+                certifiedPublicRelay,
+                privateRelay,
+                publicAddress,
+                certifiedPublicAddress,
+                certifiedPrivateRelay
+            ].sort(() => {
+                return Math.random() > 0.5 ? -1 : 1;
+            });
+            const sortedAddresses = defaultAddressSorter(addresses);
+            expect(sortedAddresses).to.deep.equal([
+                certifiedPublicAddress,
+                publicAddress,
+                certifiedPublicRelay,
+                publicRelay,
+                certifiedPrivateAddress,
+                privateAddress,
+                certifiedPrivateRelay,
+                privateRelay
+            ]);
+        });
+        it('should sort WebRTC over relay addresses before relay addresses', () => {
+            const publicRelay = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4000/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm'),
+                isCertified: false
+            };
+            const webRTCOverRelay = {
+                multiaddr: multiaddr('/ip4/30.0.0.1/tcp/4000/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/webrtc/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm'),
+                isCertified: false
+            };
+            const addresses = [
+                publicRelay,
+                webRTCOverRelay
+            ].sort(() => {
+                return Math.random() > 0.5 ? -1 : 1;
+            });
+            const sortedAddresses = defaultAddressSorter(addresses);
+            expect(sortedAddresses).to.deep.equal([
+                webRTCOverRelay,
+                publicRelay
+            ]);
+        });
+        it('should sort reliable addresses first', () => {
+            const tcp = multiaddr('/ip4/123.123.123.123/tcp/123/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+            const ws = multiaddr('/ip4/123.123.123.123/tcp/123/ws/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+            const wss = multiaddr('/ip4/123.123.123.123/tcp/123/wss/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+            const webRTC = multiaddr('/ip4/123.123.123.123/tcp/123/wss/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/webrtc/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+            const webRTCDirect = multiaddr('/ip4/123.123.123.123/udp/123/webrtc-direct/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+            const circuitRelay = multiaddr('/ip4/123.123.123.123/tcp/123/wss/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+            const webTransport = multiaddr('/ip4/123.123.123.123/udp/123/quic-v1/webtransport/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN');
+            const addresses = [tcp, ws, wss, webRTC, webRTCDirect, circuitRelay, webTransport]
+                .sort(() => Math.random() < 0.5 ? -1 : 1)
+                .map(multiaddr => ({
+                multiaddr,
+                isCertified: true
+            }));
+            const sortedAddresses = defaultAddressSorter(addresses)
+                .map(({ multiaddr }) => multiaddr.toString());
+            expect(sortedAddresses).to.deep.equal([
+                tcp,
+                wss,
+                ws,
+                webRTC,
+                webRTCDirect,
+                webTransport,
+                circuitRelay
+            ].map(ma => ma.toString()));
+        });
+    });
+    it('should sort public, local then loopback addresses', () => {
+        const pub = multiaddr('/ip4/80.123.123.123/tcp/123/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+        const classB = multiaddr('/ip4/172.123.123.123/tcp/123/ws/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+        const tcpLoopback = multiaddr('/ip4/127.0.0.1/tcp/123/ws/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+        const webRTCDirectLoopback = multiaddr('/ip4/127.0.0.1/udp/43543/webrtc-direct/certhash/uEiCJOmJR6bCtNcRVjdcGXQGxr4L5oPjg4G02FP35aCwIog/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+        const webRTCDirectClassB = multiaddr('/ip4/172.20.0.4/udp/43543/webrtc-direct/certhash/uEiCJOmJR6bCtNcRVjdcGXQGxr4L5oPjg4G02FP35aCwIog/p2p/QmcrQZ6RJdpYuGvZqD5QEHAv6qX4BrQLJLQPQUrTrzdcgm');
+        const addresses = [pub, classB, tcpLoopback, webRTCDirectLoopback, webRTCDirectClassB]
+            .sort(() => Math.random() < 0.5 ? -1 : 1)
+            .map(multiaddr => ({
+            multiaddr,
+            isCertified: true
+        }));
+        const sortedAddresses = defaultAddressSorter(addresses)
+            .map(({ multiaddr }) => multiaddr.toString());
+        expect(sortedAddresses).to.deep.equal([
+            pub,
+            classB,
+            webRTCDirectClassB,
+            tcpLoopback,
+            webRTCDirectLoopback
+        ].map(ma => ma.toString()));
+    });
+});
+//# sourceMappingURL=address-sorter.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.js.map
new file mode 100644
index 0000000..6ccc6a7
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/address-sorter.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"address-sorter.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/address-sorter.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,oBAAoB,EAAE,MAAM,gDAAgD,CAAA;AAErF,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC5C,MAAM,aAAa,GAAG;gBACpB,SAAS,EAAE,SAAS,CAAC,wBAAwB,CAAC;gBAC9C,WAAW,EAAE,KAAK;aACnB,CAAA;YACD,MAAM,cAAc,GAAG;gBACrB,SAAS,EAAE,SAAS,CAAC,yBAAyB,CAAC;gBAC/C,WAAW,EAAE,KAAK;aACnB,CAAA;YAED,MAAM,SAAS,GAAG;gBAChB,cAAc;gBACd,aAAa;aACd,CAAA;YAED,MAAM,eAAe,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAA;YACvD,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;gBACpC,aAAa;gBACb,cAAc;aACf,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACzC,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;YAC/C,MAAM,sBAAsB,GAAG;gBAC7B,SAAS,EAAE,SAAS,CAAC,wBAAwB,CAAC;gBAC9C,WAAW,EAAE,IAAI;aAClB,CAAA;YACD,MAAM,aAAa,GAAG;gBACpB,SAAS,EAAE,SAAS,CAAC,wBAAwB,CAAC;gBAC9C,WAAW,EAAE,KAAK;aACnB,CAAA;YACD,MAAM,uBAAuB,GAAG;gBAC9B,SAAS,EAAE,SAAS,CAAC,yBAAyB,CAAC;gBAC/C,WAAW,EAAE,IAAI;aAClB,CAAA;YACD,MAAM,cAAc,GAAG;gBACrB,SAAS,EAAE,SAAS,CAAC,yBAAyB,CAAC;gBAC/C,WAAW,EAAE,KAAK;aACnB,CAAA;YAED,MAAM,SAAS,GAAG;gBAChB,aAAa;gBACb,sBAAsB;gBACtB,uBAAuB;gBACvB,cAAc;aACf,CAAA;YAED,MAAM,eAAe,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAA;YACvD,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;gBACpC,sBAAsB;gBACtB,aAAa;gBACb,uBAAuB;gBACvB,cAAc;aACf,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;QAC5C,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;YAClD,MAAM,aAAa,GAAG;gBACpB,SAAS,EAAE,SAAS,CAAC,wBAAwB,CAAC;gBAC9C,WAAW,EAAE,KAAK;aACnB,CAAA;YACD,MAAM,WAAW,GAAG;gBAClB,SAAS,EAAE,SAAS,CAAC,0IAA0I,CAAC;gBAChK,WAAW,EAAE,KAAK;aACnB,CAAA;YAED,MAAM,SAAS,GAAG;gBAChB,WAAW;gBACX,aAAa;aACd,CAAA;YAED,MAAM,eAAe,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAA;YACvD,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;gBACpC,aAAa;gBACb,WAAW;aACZ,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACpC,EAAE,CAAC,kHAAkH,EAAE,GAAG,EAAE;YAC1H,MAAM,sBAAsB,GAAG;gBAC7B,SAAS,EAAE,SAAS,CAAC,wBAAwB,CAAC;gBAC9C,WAAW,EAAE,IAAI;aAClB,CAAA;YACD,MAAM,aAAa,GAAG;gBACpB,SAAS,EAAE,SAAS,CAAC,wBAAwB,CAAC;gBAC9C,WAAW,EAAE,KAAK;aACnB,CAAA;YACD,MAAM,oBAAoB,GAAG;gBAC3B,SAAS,EAAE,SAAS,CAAC,0IAA0I,CAAC;gBAChK,WAAW,EAAE,IAAI;aAClB,CAAA;YACD,MAAM,WAAW,GAAG;gBAClB,SAAS,EAAE,SAAS,CAAC,0IAA0I,CAAC;gBAChK,WAAW,EAAE,KAAK;aACnB,CAAA;YACD,MAAM,uBAAuB,GAAG;gBAC9B,SAAS,EAAE,SAAS,CAAC,yBAAyB,CAAC;gBAC/C,WAAW,EAAE,IAAI;aAClB,CAAA;YACD,MAAM,cAAc,GAAG;gBACrB,SAAS,EAAE,SAAS,CAAC,yBAAyB,CAAC;gBAC/C,WAAW,EAAE,KAAK;aACnB,CAAA;YACD,MAAM,qBAAqB,GAAG;gBAC5B,SAAS,EAAE,SAAS,CAAC,2IAA2I,CAAC;gBACjK,WAAW,EAAE,IAAI;aAClB,CAAA;YACD,MAAM,YAAY,GAAG;gBACnB,SAAS,EAAE,SAAS,CAAC,2IAA2I,CAAC;gBACjK,WAAW,EAAE,KAAK;aACnB,CAAA;YAED,MAAM,SAAS,GAAG;gBAChB,cAAc;gBACd,uBAAuB;gBACvB,WAAW;gBACX,oBAAoB;gBACpB,YAAY;gBACZ,aAAa;gBACb,sBAAsB;gBACtB,qBAAqB;aACtB,CAAC,IAAI,CAAC,GAAG,EAAE;gBACV,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACrC,CAAC,CAAC,CAAA;YAEF,MAAM,eAAe,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAA;YAEvD,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;gBACpC,sBAAsB;gBACtB,aAAa;gBACb,oBAAoB;gBACpB,WAAW;gBACX,uBAAuB;gBACvB,cAAc;gBACd,qBAAqB;gBACrB,YAAY;aACb,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;YACxE,MAAM,WAAW,GAAG;gBAClB,SAAS,EAAE,SAAS,CAAC,0IAA0I,CAAC;gBAChK,WAAW,EAAE,KAAK;aACnB,CAAA;YACD,MAAM,eAAe,GAAG;gBACtB,SAAS,EAAE,SAAS,CAAC,iJAAiJ,CAAC;gBACvK,WAAW,EAAE,KAAK;aACnB,CAAA;YAED,MAAM,SAAS,GAAG;gBAChB,WAAW;gBACX,eAAe;aAChB,CAAC,IAAI,CAAC,GAAG,EAAE;gBACV,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACrC,CAAC,CAAC,CAAA;YAEF,MAAM,eAAe,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAA;YACvD,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;gBACpC,eAAe;gBACf,WAAW;aACZ,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAC9C,MAAM,GAAG,GAAG,SAAS,CAAC,iFAAiF,CAAC,CAAA;YACxG,MAAM,EAAE,GAAG,SAAS,CAAC,oFAAoF,CAAC,CAAA;YAC1G,MAAM,GAAG,GAAG,SAAS,CAAC,qFAAqF,CAAC,CAAA;YAC5G,MAAM,MAAM,GAAG,SAAS,CAAC,2JAA2J,CAAC,CAAA;YACrL,MAAM,YAAY,GAAG,SAAS,CAAC,+FAA+F,CAAC,CAAA;YAC/H,MAAM,YAAY,GAAG,SAAS,CAAC,oJAAoJ,CAAC,CAAA;YACpL,MAAM,YAAY,GAAG,SAAS,CAAC,sGAAsG,CAAC,CAAA;YAEtI,MAAM,SAAS,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;iBAC/E,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACjB,SAAS;gBACT,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC,CAAA;YAEL,MAAM,eAAe,GAAG,oBAAoB,CAAC,SAAS,CAAC;iBACpD,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAA;YAE/C,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;gBACpC,GAAG;gBACH,GAAG;gBACH,EAAE;gBACF,MAAM;gBACN,YAAY;gBACZ,YAAY;gBACZ,YAAY;aACb,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;QAC3D,MAAM,GAAG,GAAG,SAAS,CAAC,gFAAgF,CAAC,CAAA;QACvG,MAAM,MAAM,GAAG,SAAS,CAAC,oFAAoF,CAAC,CAAA;QAC9G,MAAM,WAAW,GAAG,SAAS,CAAC,8EAA8E,CAAC,CAAA;QAC7G,MAAM,oBAAoB,GAAG,SAAS,CAAC,oJAAoJ,CAAC,CAAA;QAC5L,MAAM,kBAAkB,GAAG,SAAS,CAAC,qJAAqJ,CAAC,CAAA;QAE3L,MAAM,SAAS,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,WAAW,EAAE,oBAAoB,EAAE,kBAAkB,CAAC;aACnF,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACxC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACjB,SAAS;YACT,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC,CAAA;QAEL,MAAM,eAAe,GAAG,oBAAoB,CAAC,SAAS,CAAC;aACpD,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAA;QAE/C,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;YACpC,GAAG;YACH,MAAM;YACN,kBAAkB;YAClB,WAAW;YACX,oBAAoB;SACrB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAC7B,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.d.ts
new file mode 100644
index 0000000..5f2dd10
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=connection-gater.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.d.ts.map
new file mode 100644
index 0000000..9b52f74
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection-gater.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/connection-gater.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.js b/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.js
new file mode 100644
index 0000000..a23ab50
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.js
@@ -0,0 +1,203 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { start, stop } from '@libp2p/interface';
+import { logger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { DefaultConnectionManager } from '../../src/connection-manager/index.js';
+import { DefaultUpgrader } from '../../src/upgrader.js';
+import { createDefaultUpgraderComponents } from '../upgrading/utils.js';
+import { createDefaultConnectionManagerComponents } from './utils.js';
+describe('connection-gater', () => {
+    let connectionManager;
+    afterEach(async () => {
+        await stop(connectionManager);
+    });
+    it('intercept peer dial', async () => {
+        const denyDialPeer = Sinon.stub().returns(true);
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const ma = multiaddr(`/ip4/123.123.123.123/tcp/1234/p2p/${remotePeer}`);
+        connectionManager = new DefaultConnectionManager(await createDefaultConnectionManagerComponents({
+            connectionGater: {
+                denyDialPeer
+            }
+        }));
+        await start(connectionManager);
+        await expect(connectionManager.openConnection(ma))
+            .to.eventually.be.rejected().with.property('name', 'DialDeniedError');
+        expect(denyDialPeer.called).to.be.true();
+    });
+    it('intercept addr dial', async () => {
+        const denyDialMultiaddr = Sinon.stub().returns(true);
+        const ma = multiaddr('/ip4/123.123.123.123/tcp/1234');
+        connectionManager = new DefaultConnectionManager(await createDefaultConnectionManagerComponents({
+            connectionGater: {
+                denyDialMultiaddr
+            },
+            transportManager: stubInterface({
+                dialTransportForMultiaddr: () => stubInterface()
+            })
+        }));
+        await start(connectionManager);
+        await expect(connectionManager.openConnection(ma))
+            .to.eventually.be.rejected().with.property('name', 'DialDeniedError');
+        expect(denyDialMultiaddr.called).to.be.true();
+    });
+    it('intercept accept inbound connection', async () => {
+        const denyInboundConnection = Sinon.stub().returns(true);
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionGater: {
+                denyInboundConnection
+            }
+        }), {
+            connectionEncrypters: [],
+            streamMuxers: []
+        });
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const remoteAddr = multiaddr(`/ip4/123.123.123.123/tcp/1234/p2p/${remotePeer}`);
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(upgrader.upgradeInbound(maConn, {
+            skipEncryption: true,
+            skipProtection: true,
+            muxerFactory: stubInterface()
+        }))
+            .to.eventually.be.rejected().with.property('name', 'ConnectionInterceptedError');
+        expect(denyInboundConnection.called).to.be.true();
+    });
+    it('intercept accept outbound connection', async () => {
+        const denyOutboundConnection = Sinon.stub().returns(true);
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionGater: {
+                denyOutboundConnection
+            }
+        }), {
+            connectionEncrypters: [],
+            streamMuxers: []
+        });
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const remoteAddr = multiaddr(`/ip4/123.123.123.123/tcp/1234/p2p/${remotePeer}`);
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(upgrader.upgradeOutbound(maConn, {
+            skipEncryption: true,
+            skipProtection: true,
+            muxerFactory: stubInterface()
+        }))
+            .to.eventually.be.rejected().with.property('name', 'ConnectionInterceptedError');
+    });
+    it('intercept inbound encrypted', async () => {
+        const denyInboundEncryptedConnection = Sinon.stub().returns(true);
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const remoteAddr = multiaddr(`/ip4/123.123.123.123/tcp/1234/p2p/${remotePeer}`);
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionGater: {
+                denyInboundEncryptedConnection
+            }
+        }), {
+            connectionEncrypters: [],
+            streamMuxers: []
+        });
+        upgrader._encryptInbound = async (maConn) => {
+            return {
+                conn: maConn,
+                remotePeer,
+                protocol: '/test-encrypter'
+            };
+        };
+        const maConn = stubInterface({
+            remoteAddr,
+            log: logger('test')
+        });
+        await expect(upgrader.upgradeInbound(maConn, {
+            skipProtection: true,
+            muxerFactory: stubInterface()
+        }))
+            .to.eventually.be.rejected().with.property('name', 'ConnectionInterceptedError');
+        expect(denyInboundEncryptedConnection.called).to.be.true();
+    });
+    it('intercept outbound encrypted', async () => {
+        const denyOutboundEncryptedConnection = Sinon.stub().returns(true);
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const remoteAddr = multiaddr(`/ip4/123.123.123.123/tcp/1234/p2p/${remotePeer}`);
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionGater: {
+                denyOutboundEncryptedConnection
+            }
+        }), {
+            connectionEncrypters: [],
+            streamMuxers: []
+        });
+        upgrader._encryptOutbound = async (maConn) => {
+            return {
+                conn: maConn,
+                remotePeer,
+                protocol: '/test-encrypter'
+            };
+        };
+        const maConn = stubInterface({
+            remoteAddr,
+            log: logger('test')
+        });
+        await expect(upgrader.upgradeOutbound(maConn, {
+            skipProtection: true,
+            muxerFactory: stubInterface()
+        }))
+            .to.eventually.be.rejected().with.property('name', 'ConnectionInterceptedError');
+        expect(denyOutboundEncryptedConnection.called).to.be.true();
+    });
+    it('intercept inbound upgraded', async () => {
+        const denyInboundUpgradedConnection = Sinon.stub().returns(true);
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const remoteAddr = multiaddr(`/ip4/123.123.123.123/tcp/1234/p2p/${remotePeer}`);
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionGater: {
+                denyInboundUpgradedConnection
+            }
+        }), {
+            connectionEncrypters: [],
+            streamMuxers: []
+        });
+        const maConn = stubInterface({
+            remoteAddr,
+            log: logger('test')
+        });
+        await expect(upgrader.upgradeInbound(maConn, {
+            skipEncryption: true,
+            skipProtection: true,
+            muxerFactory: stubInterface()
+        }))
+            .to.eventually.be.rejected().with.property('name', 'ConnectionInterceptedError');
+        expect(denyInboundUpgradedConnection.called).to.be.true();
+    });
+    it('intercept outbound upgraded', async () => {
+        const denyOutboundUpgradedConnection = Sinon.stub().returns(true);
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const remoteAddr = multiaddr(`/ip4/123.123.123.123/tcp/1234/p2p/${remotePeer}`);
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionGater: {
+                denyOutboundUpgradedConnection
+            }
+        }), {
+            connectionEncrypters: [],
+            streamMuxers: []
+        });
+        const maConn = stubInterface({
+            remoteAddr,
+            log: logger('test')
+        });
+        await expect(upgrader.upgradeOutbound(maConn, {
+            skipEncryption: true,
+            skipProtection: true,
+            muxerFactory: stubInterface()
+        }))
+            .to.eventually.be.rejected().with.property('name', 'ConnectionInterceptedError');
+        expect(denyOutboundUpgradedConnection.called).to.be.true();
+    });
+});
+//# sourceMappingURL=connection-gater.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.js.map
new file mode 100644
index 0000000..3fdf7f1
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-gater.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection-gater.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/connection-gater.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts
new file mode 100644
index 0000000..66141c1
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=connection-pruner.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts.map
new file mode 100644
index 0000000..a3c7ff3
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection-pruner.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/connection-pruner.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js
new file mode 100644
index 0000000..9cd702f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js
@@ -0,0 +1,304 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter, stop } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { PeerMap } from '@libp2p/peer-collections';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { pEvent } from 'p-event';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { ConnectionPruner } from '../../src/connection-manager/connection-pruner.js';
+describe('connection-pruner', () => {
+    let pruner;
+    let components;
+    beforeEach(() => {
+        components = {
+            connectionManager: stubInterface(),
+            peerStore: stubInterface(),
+            events: new TypedEventEmitter(),
+            logger: defaultLogger()
+        };
+        pruner = new ConnectionPruner(components);
+    });
+    afterEach(async () => {
+        await stop(pruner);
+    });
+    it('should sort connections for pruning, closing connections without streams first unless they are tagged', async () => {
+        const tagged = ['tagged', 'untagged'];
+        const streams = ['streams', 'no-streams'];
+        const direction = ['inbound', 'outbound'];
+        const age = ['old', 'new'];
+        const connections = [];
+        const peerValues = new PeerMap();
+        for (const t of tagged) {
+            for (const s of streams) {
+                for (const d of direction) {
+                    for (const a of age) {
+                        const connection = stubInterface({
+                            id: `${t}-${s}-${d}-${a}`,
+                            remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                            streams: s === 'streams'
+                                ? [stubInterface()]
+                                : [],
+                            direction: d === 'inbound' ? 'inbound' : 'outbound',
+                            timeline: {
+                                open: a === 'old' ? 0 : (Date.now() - 100)
+                            }
+                        });
+                        // eslint-disable-next-line max-depth
+                        if (t === 'tagged') {
+                            peerValues.set(connection.remotePeer, 100);
+                        }
+                        connections.push(connection);
+                    }
+                }
+            }
+        }
+        // priority is:
+        // 1. tagged peers
+        // 2. connections with streams
+        // 3. outbound connections
+        // 4. longer-lived connections
+        expect(pruner.sortConnections(connections.sort((a, b) => Math.random() > 0.5 ? -1 : 1), peerValues).map(conn => conn.id))
+            .to.deep.equal([
+            'untagged-no-streams-inbound-new',
+            'untagged-no-streams-inbound-old',
+            'untagged-no-streams-outbound-new',
+            'untagged-no-streams-outbound-old',
+            'untagged-streams-inbound-new',
+            'untagged-streams-inbound-old',
+            'untagged-streams-outbound-new',
+            'untagged-streams-outbound-old',
+            'tagged-no-streams-inbound-new',
+            'tagged-no-streams-inbound-old',
+            'tagged-no-streams-outbound-new',
+            'tagged-no-streams-outbound-old',
+            'tagged-streams-inbound-new',
+            'tagged-streams-inbound-old',
+            'tagged-streams-outbound-new',
+            'tagged-streams-outbound-old'
+        ]);
+    });
+    it('should close connections with low tag values first', async () => {
+        const max = 5;
+        pruner = new ConnectionPruner(components, {
+            maxConnections: max
+        });
+        pruner.start();
+        const connections = [];
+        components.connectionManager.getConnections.returns(connections);
+        const spies = new Map();
+        // wait for prune event
+        const eventPromise = pEvent(components.events, 'connection:prune');
+        // Add 1 connection too many
+        for (let i = 0; i < max + 1; i++) {
+            const connection = stubInterface({
+                remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                streams: []
+            });
+            const spy = connection.close;
+            const value = i * 10;
+            spies.set(value, spy);
+            components.peerStore.get.withArgs(connection.remotePeer).resolves(stubInterface({
+                tags: new Map([['test-tag', { value }]])
+            }));
+            connections.push(connection);
+            components.events.safeDispatchEvent('connection:open', {
+                detail: connection
+            });
+        }
+        await eventPromise;
+        // get the lowest value
+        const lowest = Array.from(spies.keys()).sort((a, b) => {
+            if (a > b) {
+                return 1;
+            }
+            if (a < b) {
+                return -1;
+            }
+            return 0;
+        })[0];
+        expect(spies.get(lowest)).to.have.property('callCount', 1);
+    });
+    it('should close shortest-lived connection if the tag values are equal', async () => {
+        const max = 5;
+        pruner = new ConnectionPruner(components, {
+            maxConnections: max
+        });
+        pruner.start();
+        const connections = [];
+        components.connectionManager.getConnections.returns(connections);
+        const spies = new Map();
+        const eventPromise = pEvent(components.events, 'connection:prune');
+        const createConnection = async (value, open = Date.now(), peerTag = 'test-tag') => {
+            // #TODO: Mock the connection timeline to simulate an older connection
+            const connection = stubInterface({
+                remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                streams: [],
+                timeline: {
+                    open
+                }
+            });
+            const spy = connection.close;
+            // The lowest tag value will have the longest connection
+            spies.set(peerTag, spy);
+            components.peerStore.get.withArgs(connection.remotePeer).resolves(stubInterface({
+                tags: new Map([['test-tag', { value }]])
+            }));
+            connections.push(connection);
+            components.events.safeDispatchEvent('connection:open', {
+                detail: connection
+            });
+        };
+        // Create one short of enough connections to initiate pruning
+        for (let i = 1; i < max; i++) {
+            const value = i * 10;
+            await createConnection(value);
+        }
+        const value = 0 * 10;
+        // Add a connection with the lowest tag value BUT the longest lived connection
+        await createConnection(value, 18000, 'longest');
+        // Add one more connection with the lowest tag value BUT the shortest-lived connection
+        await createConnection(value, Date.now(), 'shortest');
+        // wait for prune event
+        await eventPromise;
+        // get the lowest tagged value, but this would be also the longest lived connection
+        const longestLivedWithLowestTagSpy = spies.get('longest');
+        // Get lowest tagged connection but with a shorter-lived connection
+        const shortestLivedWithLowestTagSpy = spies.get('shortest');
+        expect(longestLivedWithLowestTagSpy).to.have.property('callCount', 0);
+        expect(shortestLivedWithLowestTagSpy).to.have.property('callCount', 1);
+    });
+    it('should correctly parse and store allow list as IpNet objects in ConnectionPruner', () => {
+        const mockInit = {
+            allow: [
+                multiaddr('/ip4/83.13.55.32/ipcidr/32'),
+                multiaddr('/ip4/83.13.55.32'),
+                multiaddr('/ip4/192.168.1.1/ipcidr/24'),
+                multiaddr('/ip6/2001::0/ipcidr/64')
+            ]
+        };
+        // Create a ConnectionPruner instance
+        const pruner = new ConnectionPruner(components, mockInit);
+        // Expected IpNet objects for comparison
+        const expectedAllowList = [
+            {
+                mask: new Uint8Array([255, 255, 255, 255]),
+                network: new Uint8Array([83, 13, 55, 32])
+            },
+            {
+                mask: new Uint8Array([255, 255, 255, 255]),
+                network: new Uint8Array([83, 13, 55, 32])
+            },
+            {
+                mask: new Uint8Array([255, 255, 255, 0]),
+                network: new Uint8Array([192, 168, 1, 0])
+            },
+            {
+                mask: new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0]),
+                network: new Uint8Array([32, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
+            }
+        ];
+        // Verify that the allow list in the pruner matches the expected IpNet objects
+        // eslint-disable-next-line @typescript-eslint/dot-notation
+        expect(pruner['allow']).to.deep.equal(expectedAllowList);
+    });
+    it('should not close connection that is on the allowlist when pruning', async () => {
+        const max = 2;
+        const remoteAddr = multiaddr('/ip4/83.13.55.32/tcp/59283');
+        pruner = new ConnectionPruner(components, {
+            maxConnections: max,
+            allow: [
+                multiaddr('/ip4/83.13.55.32')
+            ]
+        });
+        pruner.start();
+        const connections = [];
+        components.connectionManager.getConnections.returns(connections);
+        const spies = new Map();
+        const eventPromise = pEvent(components.events, 'connection:prune');
+        // Max out connections
+        for (let i = 0; i < max; i++) {
+            const connection = stubInterface({
+                remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                remoteAddr: multiaddr('/ip4/127.0.0.1/tcp/12345'),
+                streams: []
+            });
+            const spy = connection.close;
+            const value = (i + 1) * 10;
+            spies.set(value, spy);
+            components.peerStore.get.withArgs(connection.remotePeer).resolves(stubInterface({
+                tags: new Map([['test-tag', { value }]])
+            }));
+            connections.push(connection);
+            components.events.safeDispatchEvent('connection:open', {
+                detail: connection
+            });
+        }
+        // an outbound connection is opened from an address in the allow list
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const connection = stubInterface({
+            remotePeer,
+            remoteAddr,
+            streams: []
+        });
+        const value = 0;
+        const spy = connection.close;
+        spies.set(value, spy);
+        // Tag that allowed peer with lowest value
+        components.peerStore.get.withArgs(connection.remotePeer).resolves(stubInterface({
+            tags: new Map([['test-tag', { value }]])
+        }));
+        connections.push(connection);
+        components.events.safeDispatchEvent('connection:open', {
+            detail: connection
+        });
+        // wait for prune event
+        await eventPromise;
+        // get the lowest value
+        const lowest = Array.from(spies.keys()).sort((a, b) => {
+            if (a > b) {
+                return 1;
+            }
+            if (a < b) {
+                return -1;
+            }
+            return 0;
+        })[0];
+        const lowestSpy = spies.get(lowest);
+        // expect lowest value spy NOT to be called since the peer is in the allow list
+        expect(lowestSpy).to.have.property('callCount', 0);
+    });
+    it('should close connection when the maximum connections has been reached even without tags', async () => {
+        const max = 5;
+        pruner = new ConnectionPruner(components, {
+            maxConnections: max
+        });
+        pruner.start();
+        const connections = [];
+        components.connectionManager.getConnections.returns(connections);
+        const eventPromise = pEvent(components.events, 'connection:prune');
+        // Add 1 too many connections
+        const spy = Sinon.spy();
+        for (let i = 0; i < max + 1; i++) {
+            const connection = stubInterface({
+                remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                streams: [],
+                limits: undefined,
+                close: spy
+            });
+            components.peerStore.get.withArgs(connection.remotePeer).resolves(stubInterface({
+                tags: new Map()
+            }));
+            connections.push(connection);
+            components.events.safeDispatchEvent('connection:open', {
+                detail: connection
+            });
+        }
+        // wait for prune event
+        await eventPromise;
+        expect(spy).to.have.property('callCount', 1);
+    });
+});
+//# sourceMappingURL=connection-pruner.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js.map
new file mode 100644
index 0000000..dd30beb
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection-pruner.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/connection-pruner.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts
new file mode 100644
index 0000000..9a6ef47
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=dial-queue.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts.map
new file mode 100644
index 0000000..a7f5a26
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"dial-queue.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/dial-queue.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js
new file mode 100644
index 0000000..6b81ff2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js
@@ -0,0 +1,302 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { NotFoundError } from '@libp2p/interface';
+import { peerLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr, resolvers } from '@multiformats/multiaddr';
+import { WebRTC } from '@multiformats/multiaddr-matcher';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import pDefer from 'p-defer';
+import { raceSignal } from 'race-signal';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { DialQueue } from '../../src/connection-manager/dial-queue.js';
+describe('dial queue', () => {
+    let components;
+    let dialer;
+    beforeEach(async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components = {
+            peerId,
+            peerStore: stubInterface(),
+            peerRouting: stubInterface(),
+            transportManager: stubInterface(),
+            connectionGater: stubInterface(),
+            logger: peerLogger(peerId)
+        };
+    });
+    afterEach(() => {
+        if (dialer != null) {
+            dialer.stop();
+        }
+    });
+    it('should end when a single multiaddr dials succeeds', async () => {
+        const connection = stubInterface();
+        const deferredConn = pDefer();
+        const actions = {
+            '/ip4/127.0.0.1/tcp/1231': async () => Promise.reject(new Error('dial failure')),
+            '/ip4/127.0.0.1/tcp/1232': async () => Promise.resolve(connection),
+            '/ip4/127.0.0.1/tcp/1233': async () => deferredConn.promise
+        };
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma) => {
+            const maStr = ma.toString();
+            const action = actions[maStr];
+            if (action != null) {
+                return action();
+            }
+            throw new Error(`No action found for multiaddr ${maStr}`);
+        });
+        dialer = new DialQueue(components, {
+            maxParallelDials: 2
+        });
+        // Make sure that dial attempt comes back before terminating last dial action
+        await expect(dialer.dial(Object.keys(actions).map(str => multiaddr(str))))
+            .to.eventually.equal(connection);
+        // End third dial attempt
+        deferredConn.resolve();
+        // prevent playwright-core error Error: Cannot find parent object page@... to create handle@...
+        await expect(deferredConn.promise).to.eventually.be.undefined();
+    });
+    it('should load addresses from the peer routing when peer id is not in the peer store', async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const connection = stubInterface();
+        const ma = multiaddr('/ip4/127.0.0.1/tcp/4001');
+        components.peerStore.get.withArgs(peerId).rejects(new NotFoundError('Not found'));
+        components.peerRouting.findPeer.withArgs(peerId).resolves({
+            id: peerId,
+            multiaddrs: [
+                ma
+            ]
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.withArgs(ma.encapsulate(`/p2p/${peerId}`)).resolves(connection);
+        dialer = new DialQueue(components);
+        await expect(dialer.dial(peerId)).to.eventually.equal(connection);
+    });
+    it('should load addresses from the peer routing when none are present in the peer store', async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const connection = stubInterface();
+        const ma = multiaddr('/ip4/127.0.0.1/tcp/4001');
+        components.peerStore.get.withArgs(peerId).resolves({
+            id: peerId,
+            protocols: [],
+            metadata: new Map(),
+            tags: new Map(),
+            addresses: []
+        });
+        components.peerRouting.findPeer.withArgs(peerId).resolves({
+            id: peerId,
+            multiaddrs: [
+                ma
+            ]
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.withArgs(ma.encapsulate(`/p2p/${peerId}`)).resolves(connection);
+        dialer = new DialQueue(components);
+        await expect(dialer.dial(peerId)).to.eventually.equal(connection);
+    });
+    it('should end when a single multiaddr dials succeeds even when a final dial fails', async () => {
+        const connection = stubInterface();
+        const deferredConn = pDefer();
+        const actions = {
+            '/ip4/127.0.0.1/tcp/1231': async () => Promise.reject(new Error('dial failure')),
+            '/ip4/127.0.0.1/tcp/1232': async () => Promise.resolve(connection),
+            '/ip4/127.0.0.1/tcp/1233': async () => deferredConn.promise
+        };
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma) => {
+            const maStr = ma.toString();
+            const action = actions[maStr];
+            if (action != null) {
+                return action();
+            }
+            throw new Error(`No action found for multiaddr ${maStr}`);
+        });
+        dialer = new DialQueue(components, {
+            maxParallelDials: 2
+        });
+        // Make sure that dial attempt comes back before terminating last dial action
+        await expect(dialer.dial(Object.keys(actions).map(str => multiaddr(str))))
+            .to.eventually.equal(connection);
+        // End third dial attempt
+        deferredConn.reject(new Error('Oh noes!'));
+        // prevent playwright-core error Error: Cannot find parent object page@... to create handle@...
+        await expect(deferredConn.promise).to.eventually.be.rejected();
+    });
+    it('should throw an AggregateError if all dials fail', async () => {
+        const actions = {
+            '/ip4/127.0.0.1/tcp/1231': async () => Promise.reject(new Error('dial failure')),
+            '/ip4/127.0.0.1/tcp/1232': async () => Promise.reject(new Error('dial failure')),
+            '/ip4/127.0.0.1/tcp/1233': async () => Promise.reject(new Error('dial failure'))
+        };
+        dialer = new DialQueue(components, {
+            maxParallelDials: 2
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma) => {
+            const maStr = ma.toString();
+            const action = actions[maStr];
+            if (action != null) {
+                return action();
+            }
+            throw new Error(`No action found for multiaddr ${maStr}`);
+        });
+        sinon.spy(actions, '/ip4/127.0.0.1/tcp/1231');
+        sinon.spy(actions, '/ip4/127.0.0.1/tcp/1232');
+        sinon.spy(actions, '/ip4/127.0.0.1/tcp/1233');
+        try {
+            await dialer.dial(Object.keys(actions).map(str => multiaddr(str)));
+            expect.fail('Should have thrown');
+        }
+        catch (err) {
+            expect(err).to.have.property('name', 'AggregateError');
+        }
+        expect(actions['/ip4/127.0.0.1/tcp/1231']).to.have.property('callCount', 1);
+        expect(actions['/ip4/127.0.0.1/tcp/1232']).to.have.property('callCount', 1);
+        expect(actions['/ip4/127.0.0.1/tcp/1233']).to.have.property('callCount', 1);
+    });
+    it('should handle a large number of addrs', async () => {
+        const reject = sinon.stub().callsFake(async () => Promise.reject(new Error('dial failure')));
+        const actions = {};
+        const addrs = [...new Array(25)].map((_, index) => `/ip4/127.0.0.1/tcp/12${index + 1}`);
+        addrs.forEach(addr => {
+            actions[addr] = reject;
+        });
+        dialer = new DialQueue(components, {
+            maxParallelDials: 2
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma) => {
+            const maStr = ma.toString();
+            const action = actions[maStr];
+            if (action != null) {
+                return action();
+            }
+            throw new Error(`No action found for multiaddr ${maStr}`);
+        });
+        try {
+            await dialer.dial(Object.keys(actions).map(str => multiaddr(str)));
+            expect.fail('Should have thrown');
+        }
+        catch (err) {
+            expect(err).to.have.property('name', 'AggregateError');
+        }
+        expect(reject).to.have.property('callCount', addrs.length);
+    });
+    it('should ignore DNS addresses for other peers', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const otherRemotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const ma = multiaddr(`/dnsaddr/example.com/p2p/${remotePeer}`);
+        const maStr = `/ip4/123.123.123.123/tcp/2348/p2p/${remotePeer}`;
+        const resolvedAddresses = [
+            `/ip4/234.234.234.234/tcp/4213/p2p/${otherRemotePeer}`,
+            maStr
+        ];
+        let resolvedDNSAddrs = false;
+        let dialedBadAddress = false;
+        // simulate a DNSAddr that resolves to multiple different peers like
+        // bootstrap.libp2p.io
+        resolvers.set('dnsaddr', async (addr) => {
+            if (addr.equals(ma)) {
+                resolvedDNSAddrs = true;
+                return resolvedAddresses;
+            }
+            return [];
+        });
+        dialer = new DialQueue(components, {
+            maxParallelDials: 50
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        const connection = stubInterface({
+            remotePeer
+        });
+        components.transportManager.dial.callsFake(async (ma, opts = {}) => {
+            if (ma.toString() === maStr) {
+                await delay(100);
+                return connection;
+            }
+            dialedBadAddress = true;
+            throw new Error('Could not dial address');
+        });
+        await expect(dialer.dial(ma)).to.eventually.equal(connection);
+        expect(resolvedDNSAddrs).to.be.true('Did not resolve DNSAddrs');
+        expect(dialedBadAddress).to.be.false('Dialed address with wrong peer id');
+        resolvers.delete('dnsaddr');
+    });
+    it('should dial WebRTC address with peer id appended', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const relayPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const ma = multiaddr(`/ip4/123.123.123.123/tcp/123/ws/p2p/${relayPeer}/p2p-circuit/webrtc`);
+        const maWithPeer = `${ma}/p2p/${remotePeer}`;
+        components.transportManager.dialTransportForMultiaddr.callsFake(ma => {
+            if (WebRTC.exactMatch(ma)) {
+                return stubInterface();
+            }
+        });
+        components.peerStore.get.withArgs(remotePeer).resolves({
+            id: remotePeer,
+            protocols: [],
+            metadata: new Map(),
+            tags: new Map(),
+            addresses: [{
+                    multiaddr: ma,
+                    isCertified: true
+                }]
+        });
+        const connection = stubInterface({
+            remotePeer
+        });
+        components.transportManager.dial.callsFake(async (ma, opts = {}) => {
+            if (ma.toString() === maWithPeer) {
+                await delay(100);
+                return connection;
+            }
+            throw new Error('Could not dial address');
+        });
+        dialer = new DialQueue(components);
+        await expect(dialer.dial(remotePeer)).to.eventually.equal(connection);
+    });
+    it('should respect user dial signal over default timeout if it is passed', async () => {
+        const dialTimeout = 10;
+        const userTimeout = 500;
+        const connection = stubInterface();
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma, options) => {
+            await raceSignal(delay(userTimeout / 2), options?.signal);
+            return connection;
+        });
+        dialer = new DialQueue(components, {
+            dialTimeout
+        });
+        // dial slow peer with much longer timeout than the default
+        await expect(dialer.dial(multiaddr('/ip4/123.123.123.123/tcp/1234'), {
+            signal: AbortSignal.timeout(userTimeout)
+        }))
+            .to.eventually.equal(connection);
+    });
+    it('should respect user dial signal during parallel dial of the same peer', async () => {
+        const dialTimeout = 10;
+        const userTimeout = 500;
+        const connection = stubInterface();
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma, options) => {
+            await raceSignal(delay(userTimeout / 2), options?.signal);
+            return connection;
+        });
+        dialer = new DialQueue(components, {
+            dialTimeout
+        });
+        const all = await Promise.allSettled([
+            dialer.dial(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')),
+            dialer.dial(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb'), {
+                signal: AbortSignal.timeout(userTimeout)
+            })
+        ]);
+        expect(all[0].status).to.equal('rejected', 'did not respect default dial timeout');
+        expect(all[1].status).to.equal('fulfilled', 'did not respect user dial timeout');
+        expect(components.transportManager.dial.callCount).to.equal(1, 'should have coalesced multiple dials to same dial');
+    });
+});
+//# sourceMappingURL=dial-queue.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js.map
new file mode 100644
index 0000000..d718e7e
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"dial-queue.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/dial-queue.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts
new file mode 100644
index 0000000..b37c2d2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts.map
new file mode 100644
index 0000000..2ed10ac
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/index.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.spec.js b/node_modules/libp2p/dist/test/connection-manager/index.spec.js
new file mode 100644
index 0000000..96b4906
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.spec.js
@@ -0,0 +1,396 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { KEEP_ALIVE, start, stop } from '@libp2p/interface';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import pWaitFor from 'p-wait-for';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { DefaultConnectionManager } from '../../src/connection-manager/index.js';
+import { createLibp2p } from '../../src/index.js';
+import { getComponent } from '../fixtures/get-component.js';
+import { createDefaultConnectionManagerComponents } from './utils.js';
+const defaultOptions = {
+    maxConnections: 10,
+    inboundUpgradeTimeout: 10000
+};
+describe('Connection Manager', () => {
+    let libp2p;
+    let connectionManager;
+    let components;
+    beforeEach(async () => {
+        libp2p = await createLibp2p();
+        components = await createDefaultConnectionManagerComponents();
+    });
+    afterEach(async () => {
+        await stop(connectionManager, libp2p);
+    });
+    it('should correctly parse and store allow and deny lists as IpNet objects in ConnectionManager', () => {
+        // Define common IPs and CIDRs for reuse
+        const ipAllowDeny = [
+            '/ip4/83.13.55.32', // Single IP address
+            '/ip4/83.13.55.32/ipcidr/32', // CIDR notation for a single IP
+            '/ip4/192.168.1.1/ipcidr/24' // CIDR notation for a network
+        ];
+        // Initialize mock input for the allow and deny lists
+        const mockInit = {
+            allow: [...ipAllowDeny],
+            deny: [...ipAllowDeny]
+        };
+        // Create an instance of the DefaultConnectionManager with the mock initialization
+        const connectionManager = new DefaultConnectionManager(components, mockInit);
+        // Define the expected IpNet objects that should result from parsing the allow and deny lists
+        const expectedIpNets = [
+            {
+                mask: new Uint8Array([255, 255, 255, 255]), // Netmask for a single IP address
+                network: new Uint8Array([83, 13, 55, 32]) // Network address for '83.13.55.32'
+            },
+            {
+                mask: new Uint8Array([255, 255, 255, 255]), // Netmask for a single IP address
+                network: new Uint8Array([83, 13, 55, 32]) // Network address for '83.13.55.32'
+            },
+            {
+                mask: new Uint8Array([255, 255, 255, 0]), // Netmask for a /24 CIDR block
+                network: new Uint8Array([192, 168, 1, 0]) // Network address for '192.168.1.0'
+            }
+        ];
+        // Test that the 'allow' list is correctly parsed and stored as IpNet objects
+        // eslint-disable-next-line @typescript-eslint/dot-notation
+        expect(connectionManager['allow']).to.deep.equal(expectedIpNets);
+        // Test that the 'deny' list is correctly parsed and stored as IpNet objects
+        // eslint-disable-next-line @typescript-eslint/dot-notation
+        expect(connectionManager['deny']).to.deep.equal(expectedIpNets);
+    });
+    it('should fail if the connection manager has mismatched connection limit options', async () => {
+        await expect(createLibp2p({
+            connectionManager: {
+                maxConnections: -1
+            }
+        })).to.eventually.rejected('maxConnections must be greater');
+    });
+    it('should return the max allowed connections', async () => {
+        const maxConnections = 10;
+        connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            maxConnections
+        });
+        expect(connectionManager.getMaxConnections()).to.equal(maxConnections);
+    });
+    it('should reconnect to important peers on startup', async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        await libp2p.stop();
+        const connectionManager = getComponent(libp2p, 'connectionManager');
+        const connectionManagerOpenConnectionSpy = sinon.spy(connectionManager, 'openConnection');
+        await libp2p.start();
+        expect(connectionManagerOpenConnectionSpy.called).to.be.false('Attempted to connect to peers');
+        await libp2p.peerStore.merge(peerId, {
+            tags: {
+                [KEEP_ALIVE]: {}
+            }
+        });
+        await libp2p.stop();
+        await libp2p.start();
+        await pWaitFor(() => connectionManagerOpenConnectionSpy.called, {
+            interval: 100
+        });
+        expect(connectionManagerOpenConnectionSpy.called).to.be.true('Did not attempt to connect to important peer');
+        expect(connectionManagerOpenConnectionSpy.getCall(0).args[0].toString()).to.equal(peerId.toString(), 'Attempted to connect to the wrong peer');
+    });
+    it('should deny connections from denylist multiaddrs (IPv4)', async () => {
+        const remoteAddr = multiaddr('/ip4/83.13.55.32/tcp/59283');
+        connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            deny: [
+                '/ip4/83.13.55.32'
+            ]
+        });
+        await connectionManager.start();
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.false();
+    });
+    it('should allow connections from allowlist multiaddrs (IPv6)', async () => {
+        const remoteAddr = multiaddr('/ip6/2001:db8::1/tcp/59283');
+        const connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            maxConnections: 1,
+            allow: [
+                '/ip6/2001:db8::1'
+            ]
+        });
+        await connectionManager.start();
+        sinon.stub(connectionManager.dialQueue, 'dial').resolves(stubInterface({
+            remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            status: 'open'
+        }));
+        // max out the connection limit
+        await connectionManager.openConnection(peerIdFromPrivateKey(await generateKeyPair('Ed25519')));
+        expect(connectionManager.getConnections()).to.have.lengthOf(1);
+        // an inbound connection is opened from an address in the allow list
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.true();
+    });
+    it('should deny connections from denylist multiaddrs (IPv6)', async () => {
+        const remoteAddr = multiaddr('/ip6/2001:db8::1/tcp/59283');
+        const connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            deny: [
+                '/ip6/2001:db8::1'
+            ]
+        });
+        await connectionManager.start();
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.false();
+    });
+    it('should deny connections when maxConnections is exceeded', async () => {
+        connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            maxConnections: 1
+        });
+        await connectionManager.start();
+        sinon.stub(connectionManager.dialQueue, 'dial').resolves(stubInterface({
+            remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            status: 'open'
+        }));
+        // max out the connection limit
+        await connectionManager.openConnection(peerIdFromPrivateKey(await generateKeyPair('Ed25519')));
+        expect(connectionManager.getConnections()).to.have.lengthOf(1);
+        // an inbound connection is opened
+        const maConn = stubInterface({
+            remoteAddr: multiaddr('/ip4/83.13.55.32/tcp/59283')
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.false();
+    });
+    it('should deny connections from peers that connect too frequently', async () => {
+        connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            inboundConnectionThreshold: 1
+        });
+        await connectionManager.start();
+        sinon.stub(connectionManager.dialQueue, 'dial').resolves(stubInterface({
+            status: 'open'
+        }));
+        // an inbound connection is opened
+        const maConn = stubInterface({
+            // has to be thin waist, which it will be since we've not done the peer id handshake
+            // yet in the code being exercised by this test
+            remoteAddr: multiaddr('/ip4/34.4.63.125/tcp/4001')
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.true();
+        // connect again within a second
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.false();
+    });
+    it('should allow connections from allowlist multiaddrs (IPv4)', async () => {
+        const remoteAddr = multiaddr('/ip4/83.13.55.32/tcp/59283');
+        connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            maxConnections: 1,
+            allow: [
+                '/ip4/83.13.55.32'
+            ]
+        });
+        await connectionManager.start();
+        sinon.stub(connectionManager.dialQueue, 'dial').resolves(stubInterface({
+            remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            status: 'open'
+        }));
+        // max out the connection limit
+        await connectionManager.openConnection(peerIdFromPrivateKey(await generateKeyPair('Ed25519')));
+        expect(connectionManager.getConnections()).to.have.lengthOf(1);
+        // an inbound connection is opened from an address in the allow list
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.true();
+    });
+    it('should allow connections from allowlist subnet (IPv4)', async () => {
+        const remoteAddr = multiaddr('/ip4/83.13.55.32/tcp/59283');
+        const connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            maxConnections: 1,
+            allow: [
+                '/ip4/83.13.55.0/ipcidr/24' // Allow IPv4 subnet /24
+            ]
+        });
+        await connectionManager.start();
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.true();
+    });
+    it('should deny connections from denylist subnet (IPv4)', async () => {
+        const remoteAddr = multiaddr('/ip4/83.13.55.32/tcp/59283');
+        const connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            deny: [
+                '/ip4/83.13.55.0/ipcidr/24' // Deny IPv4 subnet /24
+            ]
+        });
+        await connectionManager.start();
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.false();
+    });
+    it('should allow connections from allowlist subnet (IPv6)', async () => {
+        const remoteAddr = multiaddr('/ip6/2001:db8::1/tcp/59283');
+        const connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            maxConnections: 1,
+            allow: [
+                '/ip6/2001:db8::/ipcidr/64' // Allow an IPv6 subnet
+            ]
+        });
+        await connectionManager.start();
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.true();
+    });
+    it('should deny connections from denylist subnet (IPv6)', async () => {
+        const remoteAddr = multiaddr('/ip6/2001:db8::1/tcp/59283');
+        const connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            deny: [
+                '/ip6/2001:db8::/ipcidr/64' // Deny an IPv6 subnet
+            ]
+        });
+        await connectionManager.start();
+        const maConn = stubInterface({
+            remoteAddr
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.false();
+    });
+    it('should limit the number of inbound pending connections', async () => {
+        connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            maxIncomingPendingConnections: 1
+        });
+        await connectionManager.start();
+        sinon.stub(connectionManager.dialQueue, 'dial').resolves(stubInterface({
+            remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            status: 'open'
+        }));
+        // start the upgrade
+        const maConn1 = stubInterface({
+            remoteAddr: multiaddr('/ip4/34.4.63.125/tcp/4001')
+        });
+        await expect(connectionManager.acceptIncomingConnection(maConn1))
+            .to.eventually.be.true();
+        // start the upgrade
+        const maConn2 = stubInterface({
+            remoteAddr: multiaddr('/ip4/34.4.63.126/tcp/4001')
+        });
+        // should be false because we have not completed the upgrade of maConn1
+        await expect(connectionManager.acceptIncomingConnection(maConn2))
+            .to.eventually.be.false();
+        // finish the maConn1 pending upgrade
+        connectionManager.afterUpgradeInbound();
+        // should be true because we have now completed the upgrade of maConn1
+        await expect(connectionManager.acceptIncomingConnection(maConn2))
+            .to.eventually.be.true();
+    });
+    it('should allow dialing peers when an existing limited connection exists', async () => {
+        connectionManager = new DefaultConnectionManager(components, {
+            ...defaultOptions,
+            maxIncomingPendingConnections: 1
+        });
+        await connectionManager.start();
+        const targetPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const addr = multiaddr(`/ip4/123.123.123.123/tcp/123/p2p/${targetPeer}`);
+        const existingConnection = stubInterface({
+            limits: {
+                bytes: 100n
+            },
+            remotePeer: targetPeer,
+            remoteAddr: multiaddr(`/ip4/123.123.123.123/tcp/123/p2p-circuit/p2p/${targetPeer}`),
+            status: 'open'
+        });
+        const newConnection = stubInterface({
+            remotePeer: targetPeer,
+            remoteAddr: addr,
+            status: 'open'
+        });
+        sinon.stub(connectionManager.dialQueue, 'dial')
+            .withArgs(addr)
+            .resolves(newConnection);
+        // we have an existing limited connection
+        const map = connectionManager.getConnectionsMap();
+        map.set(targetPeer, [
+            existingConnection
+        ]);
+        const conn = await connectionManager.openConnection(addr);
+        expect(conn).to.equal(newConnection);
+    });
+    it('should filter connections on disconnect, removing the closed one', async () => {
+        connectionManager = new DefaultConnectionManager(components, {
+            maxConnections: 1000,
+            inboundUpgradeTimeout: 1000
+        });
+        await start(connectionManager);
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn1 = stubInterface({
+            remoteAddr: multiaddr('/ip4/34.4.63.125/tcp/4001'),
+            remotePeer,
+            status: 'open'
+        });
+        const conn2 = stubInterface({
+            remoteAddr: multiaddr('/ip4/34.4.63.126/tcp/4001'),
+            remotePeer,
+            status: 'open'
+        });
+        expect(connectionManager.getConnections(remotePeer)).to.have.lengthOf(0);
+        // Add connection to the connectionManager
+        components.events.safeDispatchEvent('connection:open', { detail: conn1 });
+        components.events.safeDispatchEvent('connection:open', { detail: conn2 });
+        expect(connectionManager.getConnections(remotePeer)).to.have.lengthOf(2);
+        conn2.status = 'closed';
+        components.events.safeDispatchEvent('connection:close', { detail: conn2 });
+        expect(connectionManager.getConnections(remotePeer)).to.have.lengthOf(1);
+        expect(conn1.close.called).to.be.false();
+    });
+    it('should close connections on stop', async () => {
+        const connectionManager = new DefaultConnectionManager(components, {
+            maxConnections: 1000,
+            inboundUpgradeTimeout: 1000
+        });
+        await start(connectionManager);
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn1 = stubInterface({
+            remoteAddr: multiaddr('/ip4/34.4.63.125/tcp/4001'),
+            remotePeer,
+            status: 'open'
+        });
+        const conn2 = stubInterface({
+            remoteAddr: multiaddr('/ip4/34.4.63.126/tcp/4001'),
+            remotePeer,
+            status: 'open'
+        });
+        // Add connection to the connectionManager
+        components.events.safeDispatchEvent('connection:open', { detail: conn1 });
+        components.events.safeDispatchEvent('connection:open', { detail: conn2 });
+        expect(connectionManager.getConnections(remotePeer)).to.have.lengthOf(2);
+        await connectionManager.stop();
+        expect(conn1.close.called).to.be.true();
+        expect(conn2.close.called).to.be.true();
+        expect(connectionManager.getConnections(remotePeer)).to.have.lengthOf(0);
+    });
+});
+//# sourceMappingURL=index.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/index.spec.js.map
new file mode 100644
index 0000000..cbc2877
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/index.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AAC3D,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,QAAQ,MAAM,YAAY,CAAA;AACjC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAA;AAChF,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AACjD,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAA;AAC3D,OAAO,EAAE,wCAAwC,EAAkD,MAAM,YAAY,CAAA;AAGrH,MAAM,cAAc,GAAG;IACrB,cAAc,EAAE,EAAE;IAClB,qBAAqB,EAAE,KAAK;CAC7B,CAAA;AAED,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAI,MAAc,CAAA;IAClB,IAAI,iBAA2C,CAAA;IAC/C,IAAI,UAAqD,CAAA;IAEzD,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,GAAG,MAAM,YAAY,EAAE,CAAA;QAC7B,UAAU,GAAG,MAAM,wCAAwC,EAAE,CAAA;IAC/D,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,IAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAA;IACvC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6FAA6F,EAAE,GAAG,EAAE;QACrG,wCAAwC;QACxC,MAAM,WAAW,GAAG;YAClB,kBAAkB,EAAE,oBAAoB;YACxC,4BAA4B,EAAE,gCAAgC;YAC9D,4BAA4B,CAAC,8BAA8B;SAC5D,CAAA;QAED,qDAAqD;QACrD,MAAM,QAAQ,GAAG;YACf,KAAK,EAAE,CAAC,GAAG,WAAW,CAAC;YACvB,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC;SACvB,CAAA;QAED,kFAAkF;QAClF,MAAM,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;QAE5E,6FAA6F;QAC7F,MAAM,cAAc,GAAG;YACrB;gBACE,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,kCAAkC;gBAC9E,OAAO,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,oCAAoC;aAC/E;YACD;gBACE,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,kCAAkC;gBAC9E,OAAO,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,oCAAoC;aAC/E;YACD;gBACE,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,+BAA+B;gBACzE,OAAO,EAAE,IAAI,UAAU,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,oCAAoC;aAC/E;SACF,CAAA;QAED,6EAA6E;QAC7E,2DAA2D;QAC3D,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;QAEhE,4EAA4E;QAC5E,2DAA2D;QAC3D,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;IACjE,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+EAA+E,EAAE,KAAK,IAAI,EAAE;QAC7F,MAAM,MAAM,CACV,YAAY,CAAC;YACX,iBAAiB,EAAE;gBACjB,cAAc,EAAE,CAAC,CAAC;aACnB;SACF,CAAC,CACH,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,gCAAgC,CAAC,CAAA;IAC5D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,cAAc,GAAG,EAAE,CAAA;QAEzB,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YAC3D,GAAG,cAAc;YACjB,cAAc;SACf,CAAC,CAAA;QAEF,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;IACxE,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,MAAM,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAErE,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;QAEnB,MAAM,iBAAiB,GAAG,YAAY,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAA;QACnE,MAAM,kCAAkC,GAAG,KAAK,CAAC,GAAG,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAA;QAEzF,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;QAEpB,MAAM,CAAC,kCAAkC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAA;QAE9F,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;YACnC,IAAI,EAAE;gBACJ,CAAC,UAAU,CAAC,EAAE,EAAE;aACjB;SACF,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;QACnB,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;QAEpB,MAAM,QAAQ,CAAC,GAAG,EAAE,CAAC,kCAAkC,CAAC,MAAM,EAAE;YAC9D,QAAQ,EAAE,GAAG;SACd,CAAC,CAAA;QAEF,MAAM,CAAC,kCAAkC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAA;QAC5G,MAAM,CAAC,kCAAkC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,wCAAwC,CAAC,CAAA;IAChJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,UAAU,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAA;QAC1D,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YAC3D,GAAG,cAAc;YACjB,IAAI,EAAE;gBACJ,kBAAkB;aACnB;SACF,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,UAAU;SACX,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC7B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,UAAU,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAA;QAC1D,MAAM,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YACjE,GAAG,cAAc;YACjB,cAAc,EAAE,CAAC;YACjB,KAAK,EAAE;gBACL,kBAAkB;aACnB;SACF,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAa;YACjF,UAAU,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;YAClE,MAAM,EAAE,MAAM;SACf,CAAC,CAAC,CAAA;QAEH,+BAA+B;QAC/B,MAAM,iBAAiB,CAAC,cAAc,CAAC,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QAC9F,MAAM,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE9D,oEAAoE;QACpE,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,UAAU;SACX,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IAC5B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,UAAU,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAA;QAC1D,MAAM,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YACjE,GAAG,cAAc;YACjB,IAAI,EAAE;gBACJ,kBAAkB;aACnB;SACF,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,UAAU;SACX,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC7B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACvE,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YAC3D,GAAG,cAAc;YACjB,cAAc,EAAE,CAAC;SAClB,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAa;YACjF,UAAU,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;YAClE,MAAM,EAAE,MAAM;SACf,CAAC,CAAC,CAAA;QAEH,+BAA+B;QAC/B,MAAM,iBAAiB,CAAC,cAAc,CAAC,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QAC9F,MAAM,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE9D,kCAAkC;QAClC,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,UAAU,EAAE,SAAS,CAAC,4BAA4B,CAAC;SACpD,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC7B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;QAC9E,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YAC3D,GAAG,cAAc;YACjB,0BAA0B,EAAE,CAAC;SAC9B,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAa;YACjF,MAAM,EAAE,MAAM;SACf,CAAC,CAAC,CAAA;QAEH,kCAAkC;QAClC,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,oFAAoF;YACpF,+CAA+C;YAC/C,UAAU,EAAE,SAAS,CAAC,2BAA2B,CAAC;SACnD,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAE1B,gCAAgC;QAChC,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC7B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,UAAU,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAA;QAC1D,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YAC3D,GAAG,cAAc;YACjB,cAAc,EAAE,CAAC;YACjB,KAAK,EAAE;gBACL,kBAAkB;aACnB;SACF,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAa;YACjF,UAAU,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;YAClE,MAAM,EAAE,MAAM;SACf,CAAC,CAAC,CAAA;QAEH,+BAA+B;QAC/B,MAAM,iBAAiB,CAAC,cAAc,CAAC,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QAC9F,MAAM,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE9D,oEAAoE;QACpE,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,UAAU;SACX,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IAC5B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,UAAU,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAA;QAC1D,MAAM,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YACjE,GAAG,cAAc;YACjB,cAAc,EAAE,CAAC;YACjB,KAAK,EAAE;gBACL,2BAA2B,CAAC,wBAAwB;aACrD;SACF,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,UAAU;SACX,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IAC5B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,UAAU,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAA;QAC1D,MAAM,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YACjE,GAAG,cAAc;YACjB,IAAI,EAAE;gBACJ,2BAA2B,CAAC,uBAAuB;aACpD;SACF,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,UAAU;SACX,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC7B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,UAAU,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAA;QAC1D,MAAM,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YACjE,GAAG,cAAc;YACjB,cAAc,EAAE,CAAC;YACjB,KAAK,EAAE;gBACL,2BAA2B,CAAC,uBAAuB;aACpD;SACF,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,UAAU;SACX,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IAC5B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,UAAU,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAA;QAC1D,MAAM,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YACjE,GAAG,cAAc;YACjB,IAAI,EAAE;gBACJ,2BAA2B,CAAC,sBAAsB;aACnD;SACF,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,MAAM,MAAM,GAAG,aAAa,CAAsB;YAChD,UAAU;SACX,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC7B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QACtE,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YAC3D,GAAG,cAAc;YACjB,6BAA6B,EAAE,CAAC;SACjC,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAa;YACjF,UAAU,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;YAClE,MAAM,EAAE,MAAM;SACf,CAAC,CAAC,CAAA;QAEH,oBAAoB;QACpB,MAAM,OAAO,GAAG,aAAa,CAAsB;YACjD,UAAU,EAAE,SAAS,CAAC,2BAA2B,CAAC;SACnD,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;aAC9D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAE1B,oBAAoB;QACpB,MAAM,OAAO,GAAG,aAAa,CAAsB;YACjD,UAAU,EAAE,SAAS,CAAC,2BAA2B,CAAC;SACnD,CAAC,CAAA;QAEF,uEAAuE;QACvE,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;aAC9D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAE3B,qCAAqC;QACrC,iBAAiB,CAAC,mBAAmB,EAAE,CAAA;QAEvC,sEAAsE;QACtE,MAAM,MAAM,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;aAC9D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IAC5B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uEAAuE,EAAE,KAAK,IAAI,EAAE;QACrF,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YAC3D,GAAG,cAAc;YACjB,6BAA6B,EAAE,CAAC;SACjC,CAAC,CAAA;QACF,MAAM,iBAAiB,CAAC,KAAK,EAAE,CAAA;QAE/B,MAAM,UAAU,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QACzE,MAAM,IAAI,GAAG,SAAS,CAAC,oCAAoC,UAAU,EAAE,CAAC,CAAA;QAExE,MAAM,kBAAkB,GAAG,aAAa,CAAa;YACnD,MAAM,EAAE;gBACN,KAAK,EAAE,IAAI;aACZ;YACD,UAAU,EAAE,UAAU;YACtB,UAAU,EAAE,SAAS,CAAC,gDAAgD,UAAU,EAAE,CAAC;YACnF,MAAM,EAAE,MAAM;SACf,CAAC,CAAA;QACF,MAAM,aAAa,GAAG,aAAa,CAAa;YAC9C,UAAU,EAAE,UAAU;YACtB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,MAAM;SACf,CAAC,CAAA;QAEF,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAC;aAC5C,QAAQ,CAAC,IAAI,CAAC;aACd,QAAQ,CAAC,aAAa,CAAC,CAAA;QAE1B,yCAAyC;QACzC,MAAM,GAAG,GAAG,iBAAiB,CAAC,iBAAiB,EAAE,CAAA;QACjD,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE;YAClB,kBAAkB;SACnB,CAAC,CAAA;QAEF,MAAM,IAAI,GAAG,MAAM,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA;QAEzD,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;IACtC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kEAAkE,EAAE,KAAK,IAAI,EAAE;QAChF,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YAC3D,cAAc,EAAE,IAAI;YACpB,qBAAqB,EAAE,IAAI;SAC5B,CAAC,CAAA;QAEF,MAAM,KAAK,CAAC,iBAAiB,CAAC,CAAA;QAE9B,MAAM,UAAU,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAEzE,MAAM,KAAK,GAAG,aAAa,CAAa;YACtC,UAAU,EAAE,SAAS,CAAC,2BAA2B,CAAC;YAClD,UAAU;YACV,MAAM,EAAE,MAAM;SACf,CAAC,CAAA;QACF,MAAM,KAAK,GAAG,aAAa,CAAa;YACtC,UAAU,EAAE,SAAS,CAAC,2BAA2B,CAAC;YAClD,UAAU;YACV,MAAM,EAAE,MAAM;SACf,CAAC,CAAA;QAEF,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAExE,0CAA0C;QAC1C,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAA;QACzE,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAA;QAEzE,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAExE,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAA;QACvB,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAA;QAE1E,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAExE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YACjE,cAAc,EAAE,IAAI;YACpB,qBAAqB,EAAE,IAAI;SAC5B,CAAC,CAAA;QAEF,MAAM,KAAK,CAAC,iBAAiB,CAAC,CAAA;QAE9B,MAAM,UAAU,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAEzE,MAAM,KAAK,GAAG,aAAa,CAAa;YACtC,UAAU,EAAE,SAAS,CAAC,2BAA2B,CAAC;YAClD,UAAU;YACV,MAAM,EAAE,MAAM;SACf,CAAC,CAAA;QACF,MAAM,KAAK,GAAG,aAAa,CAAa;YACtC,UAAU,EAAE,SAAS,CAAC,2BAA2B,CAAC;YAClD,UAAU;YACV,MAAM,EAAE,MAAM;SACf,CAAC,CAAA;QAEF,0CAA0C;QAC1C,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAA;QACzE,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAA;QAEzE,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAExE,MAAM,iBAAiB,CAAC,IAAI,EAAE,CAAA;QAE9B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACvC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAEvC,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAC1E,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.d.ts
new file mode 100644
index 0000000..d2a19db
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=multiaddr-to-ipnet.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.d.ts.map
new file mode 100644
index 0000000..9a9911d
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"multiaddr-to-ipnet.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/multiaddr-to-ipnet.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.js b/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.js
new file mode 100644
index 0000000..7ad85b5
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.js
@@ -0,0 +1,52 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { multiaddrToIpNet } from '../../src/connection-manager/utils.js';
+describe('multiaddrToIpNet', () => {
+    it('should convert a simple IPv4 multiaddr to an IpNet', () => {
+        const ma = '/ip4/127.0.0.1';
+        const ipNet = multiaddrToIpNet(ma);
+        expect(ipNet.toString()).to.equal('127.0.0.1/32');
+    });
+    it('should convert a multiaddr with an IPv4 ipcidr to an IpNet', () => {
+        const ma = '/ip4/127.0.0.1/ipcidr/32';
+        const ipNet = multiaddrToIpNet(ma);
+        expect(ipNet.toString()).to.equal('127.0.0.1/32');
+    });
+    it('should convert a simple IPv6 multiaddr to an IpNet', () => {
+        const ma = '/ip6/::1/ipcidr/128';
+        const ipNet = multiaddrToIpNet(ma);
+        expect(ipNet.toString()).to.equal('0000:0000:0000:0000:0000:0000:0000:0001/128');
+    });
+    it('should convert a multiaddr with an IPv6 ipcidr to an IpNet', () => {
+        const ma = '/ip6/2001:db8::/ipcidr/64';
+        const ipNet = multiaddrToIpNet(ma);
+        expect(ipNet.toString()).to.equal('2001:0db8:0000:0000:0000:0000:0000:0000/64');
+    });
+    it('should throw an error for invalid multiaddr', () => {
+        const ma = '/ip6/invalid::address';
+        expect(() => multiaddrToIpNet(ma)).to.throw(Error, 'Invalid multiaddr');
+    });
+    it('should expand shorthand IPv6 addresses to full form', () => {
+        const ma = '/ip6/2001:db8::1/ipcidr/128';
+        const ipNet = multiaddrToIpNet(ma);
+        expect(ipNet.toString()).to.equal('2001:0db8:0000:0000:0000:0000:0000:0001/128');
+    });
+    it('should throw an error for invalid CIDR value in IPv4 and IPv6 multiaddr', () => {
+        const invalidIPv6 = '/ip6/2001:db8::1/ipcidr/256';
+        const invalidIPv4 = '/ip4/192.168.1.1/ipcidr/33';
+        expect(() => multiaddrToIpNet(invalidIPv6)).to.throw(Error, 'Invalid multiaddr format');
+        expect(() => multiaddrToIpNet(invalidIPv4)).to.throw(Error, 'Invalid multiaddr format');
+    });
+    it('should handle IPv6 address with different prefix lengths (e.g., /0, /48, /128)', () => {
+        const testCases = [
+            { ma: '/ip6/2001:db8::/ipcidr/0', expected: '0000:0000:0000:0000:0000:0000:0000:0000/0' },
+            { ma: '/ip6/2001:db8:abcd:0000::1/ipcidr/48', expected: '2001:0db8:abcd:0000:0000:0000:0000:0000/48' },
+            { ma: '/ip6/2001:db8:abcd:1234::1/ipcidr/128', expected: '2001:0db8:abcd:1234:0000:0000:0000:0001/128' }
+        ];
+        testCases.forEach(({ ma, expected }) => {
+            const ipNet = multiaddrToIpNet(ma);
+            expect(ipNet.toString()).to.equal(expected);
+        });
+    });
+});
+//# sourceMappingURL=multiaddr-to-ipnet.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.js.map
new file mode 100644
index 0000000..c0e1cda
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/multiaddr-to-ipnet.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"multiaddr-to-ipnet.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/multiaddr-to-ipnet.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts
new file mode 100644
index 0000000..b2f8a8f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=reconnect-queue.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts.map
new file mode 100644
index 0000000..a06989a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"reconnect-queue.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/reconnect-queue.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js
new file mode 100644
index 0000000..1040316
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js
@@ -0,0 +1,115 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { KEEP_ALIVE, TypedEventEmitter, start, stop } from '@libp2p/interface';
+import { peerLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import pRetry from 'p-retry';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { ReconnectQueue } from '../../src/connection-manager/reconnect-queue.js';
+describe('reconnect queue', () => {
+    let components;
+    let queue;
+    beforeEach(async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components = {
+            connectionManager: stubInterface(),
+            events: new TypedEventEmitter(),
+            peerStore: stubInterface({
+                all: Sinon.stub().resolves([])
+            }),
+            logger: peerLogger(peerId)
+        };
+    });
+    afterEach(async () => {
+        await stop(queue);
+    });
+    it('should reconnect to KEEP_ALIVE peers on startup', async () => {
+        queue = new ReconnectQueue(components);
+        const keepAlivePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components.peerStore.all.resolves([
+            stubInterface({
+                id: keepAlivePeer,
+                tags: new Map([[KEEP_ALIVE, {
+                            value: 1
+                        }]])
+            })
+        ]);
+        await start(queue);
+        await pRetry(() => {
+            expect(components.connectionManager.openConnection.calledWith(keepAlivePeer)).to.be.true();
+        }, {
+            retries: 5,
+            factor: 1
+        });
+    });
+    it('should reconnect to KEEP_ALIVE peers on disconnect', async () => {
+        queue = new ReconnectQueue(components);
+        const keepAlivePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components.peerStore.all.resolves([]);
+        components.peerStore.get.withArgs(keepAlivePeer).resolves(stubInterface({
+            id: keepAlivePeer,
+            tags: new Map([[KEEP_ALIVE, {
+                        value: 1
+                    }]])
+        }));
+        await start(queue);
+        components.events.safeDispatchEvent('peer:disconnect', new CustomEvent('peer:disconnect', {
+            detail: keepAlivePeer
+        }));
+        await pRetry(() => {
+            expect(components.connectionManager.openConnection.calledWith(keepAlivePeer)).to.be.true();
+        }, {
+            retries: 5,
+            factor: 1
+        });
+    });
+    it('should not reconnect to non-KEEP_ALIVE peers on disconnect', async () => {
+        queue = new ReconnectQueue(components);
+        const nonKeepAlivePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components.peerStore.all.resolves([]);
+        components.peerStore.get.withArgs(nonKeepAlivePeer).resolves(stubInterface({
+            id: nonKeepAlivePeer,
+            tags: new Map()
+        }));
+        await start(queue);
+        components.events.safeDispatchEvent('peer:disconnect', new CustomEvent('peer:disconnect', {
+            detail: nonKeepAlivePeer
+        }));
+        await delay(1000);
+        expect(components.connectionManager.openConnection.calledWith(nonKeepAlivePeer)).to.be.false();
+    });
+    it('should remove KEEP_ALIVE tags when reconnecting fails', async () => {
+        queue = new ReconnectQueue(components, {
+            retries: 1,
+            retryInterval: 10,
+            backoffFactor: 1
+        });
+        const keepAlivePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components.peerStore.all.resolves([]);
+        components.peerStore.get.withArgs(keepAlivePeer).resolves(stubInterface({
+            id: keepAlivePeer,
+            tags: new Map([[KEEP_ALIVE, {
+                        value: 1
+                    }]])
+        }));
+        await start(queue);
+        components.connectionManager.openConnection.withArgs(keepAlivePeer).rejects(new Error('Dial failed'));
+        components.events.safeDispatchEvent('peer:disconnect', new CustomEvent('peer:disconnect', {
+            detail: keepAlivePeer
+        }));
+        await pRetry(() => {
+            expect(components.peerStore.merge.calledWith(keepAlivePeer, {
+                tags: {
+                    [KEEP_ALIVE]: undefined
+                }
+            })).to.be.true();
+        }, {
+            retries: 5,
+            factor: 1
+        });
+    });
+});
+//# sourceMappingURL=reconnect-queue.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js.map
new file mode 100644
index 0000000..32beaf4
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"reconnect-queue.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/reconnect-queue.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/utils.d.ts b/node_modules/libp2p/dist/test/connection-manager/utils.d.ts
new file mode 100644
index 0000000..839dc89
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/utils.d.ts
@@ -0,0 +1,15 @@
+import { type StubbedInstance } from 'sinon-ts';
+import type { DefaultConnectionManagerComponents } from '../../src/connection-manager/index.js';
+import type { ConnectionGater, PeerId, PeerStore, PeerRouting, TypedEventTarget, Libp2pEvents, ComponentLogger } from '@libp2p/interface';
+import type { TransportManager } from '@libp2p/interface-internal';
+export interface StubbedDefaultConnectionManagerComponents {
+    peerId: PeerId;
+    peerStore: StubbedInstance<PeerStore>;
+    peerRouting: StubbedInstance<PeerRouting>;
+    transportManager: StubbedInstance<TransportManager>;
+    connectionGater: StubbedInstance<ConnectionGater>;
+    events: TypedEventTarget<Libp2pEvents>;
+    logger: ComponentLogger;
+}
+export declare function createDefaultConnectionManagerComponents(options?: Partial<DefaultConnectionManagerComponents>): Promise<StubbedDefaultConnectionManagerComponents>;
+//# sourceMappingURL=utils.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/utils.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/utils.d.ts.map
new file mode 100644
index 0000000..c00e202
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/utils.ts"],"names":[],"mappings":"AAMA,OAAO,EAAiB,KAAK,eAAe,EAAE,MAAM,UAAU,CAAA;AAC9D,OAAO,KAAK,EAAE,kCAAkC,EAAE,MAAM,uCAAuC,CAAA;AAC/F,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,gBAAgB,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AACzI,OAAO,KAAK,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAA;AAElE,MAAM,WAAW,yCAAyC;IACxD,MAAM,EAAE,MAAM,CAAA;IACd,SAAS,EAAE,eAAe,CAAC,SAAS,CAAC,CAAA;IACrC,WAAW,EAAE,eAAe,CAAC,WAAW,CAAC,CAAA;IACzC,gBAAgB,EAAE,eAAe,CAAC,gBAAgB,CAAC,CAAA;IACnD,eAAe,EAAE,eAAe,CAAC,eAAe,CAAC,CAAA;IACjD,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,CAAA;IACtC,MAAM,EAAE,eAAe,CAAA;CACxB;AAED,wBAAsB,wCAAwC,CAAE,OAAO,CAAC,EAAE,OAAO,CAAC,kCAAkC,CAAC,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAazK"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/utils.js b/node_modules/libp2p/dist/test/connection-manager/utils.js
new file mode 100644
index 0000000..9b7be0e
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/utils.js
@@ -0,0 +1,21 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { stubInterface } from 'sinon-ts';
+export async function createDefaultConnectionManagerComponents(options) {
+    return {
+        peerId: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+        peerStore: stubInterface({
+            all: async () => []
+        }),
+        peerRouting: stubInterface(),
+        transportManager: stubInterface(),
+        connectionGater: stubInterface(),
+        events: new TypedEventEmitter(),
+        logger: defaultLogger(),
+        ...options
+    };
+}
+//# sourceMappingURL=utils.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/utils.js.map b/node_modules/libp2p/dist/test/connection-manager/utils.js.map
new file mode 100644
index 0000000..adf9e35
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/utils.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../test/connection-manager/utils.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,aAAa,EAAwB,MAAM,UAAU,CAAA;AAe9D,MAAM,CAAC,KAAK,UAAU,wCAAwC,CAAE,OAAqD;IACnH,OAAO;QACL,MAAM,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;QAC9D,SAAS,EAAE,aAAa,CAAY;YAClC,GAAG,EAAE,KAAK,IAAI,EAAE,CAAC,EAAE;SACpB,CAAC;QACF,WAAW,EAAE,aAAa,EAAe;QACzC,gBAAgB,EAAE,aAAa,EAAoB;QACnD,eAAe,EAAE,aAAa,EAAmB;QACjD,MAAM,EAAE,IAAI,iBAAiB,EAAE;QAC/B,MAAM,EAAE,aAAa,EAAE;QACvB,GAAG,OAAO;KACO,CAAA;AACrB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts b/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts
new file mode 100644
index 0000000..b37c2d2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts.map
new file mode 100644
index 0000000..f4e7a1b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-monitor/index.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-monitor/index.spec.js b/node_modules/libp2p/dist/test/connection-monitor/index.spec.js
new file mode 100644
index 0000000..67caf27
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-monitor/index.spec.js
@@ -0,0 +1,124 @@
+/* eslint-env mocha */
+import { ConnectionClosedError, UnsupportedProtocolError, start, stop } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import { pair } from 'it-pair';
+import { stubInterface } from 'sinon-ts';
+import { ConnectionMonitor } from '../../src/connection-monitor.js';
+describe('connection monitor', () => {
+    let monitor;
+    let components;
+    beforeEach(() => {
+        components = {
+            logger: defaultLogger(),
+            connectionManager: stubInterface()
+        };
+    });
+    afterEach(async () => {
+        await stop(monitor);
+    });
+    it('should monitor the liveness of a connection', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        const stream = stubInterface({
+            ...pair()
+        });
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').resolves(stream);
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(100);
+        expect(connection.rtt).to.be.gte(0);
+    });
+    it('should monitor the liveness of a connection with a custom ping protocol prefix', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10,
+            protocolPrefix: 'foobar'
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        const stream = stubInterface({
+            ...pair()
+        });
+        connection.newStream.withArgs('/foobar/ping/1.0.0').resolves(stream);
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(100);
+        expect(connection.rtt).to.be.gte(0);
+    });
+    it('should monitor the liveness of a connection that does not support ping', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async () => {
+            await delay(10);
+            throw new UnsupportedProtocolError('Unsupported protocol');
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(100);
+        expect(connection.rtt).to.be.gte(0);
+    });
+    it('should abort a connection that times out', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 50,
+            pingTimeout: {
+                initialValue: 10
+            }
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async (protocols, opts) => {
+            await delay(200);
+            opts?.signal?.throwIfAborted();
+            return stubInterface();
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(500);
+        expect(connection.abort).to.have.property('called', true);
+    });
+    it('should abort a connection that fails', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async (protocols, opts) => {
+            throw new ConnectionClosedError('Connection closed');
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(500);
+        expect(connection.abort).to.have.property('called', true);
+    });
+    it('should not abort a connection that fails when abortConnectionOnPingFailure is false', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10,
+            abortConnectionOnPingFailure: false
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async (protocols, opts) => {
+            throw new ConnectionClosedError('Connection closed');
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(500);
+        expect(connection.abort).to.have.property('called', false);
+    });
+    it('should abort a connection that fails when abortConnectionOnPingFailure is true', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10,
+            abortConnectionOnPingFailure: true
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async (protocols, opts) => {
+            throw new ConnectionClosedError('Connection closed');
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(100);
+        expect(connection.abort).to.have.property('called', true);
+    });
+});
+//# sourceMappingURL=index.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-monitor/index.spec.js.map b/node_modules/libp2p/dist/test/connection-monitor/index.spec.js.map
new file mode 100644
index 0000000..f877153
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-monitor/index.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../test/connection-monitor/index.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts b/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts
new file mode 100644
index 0000000..1d866b3
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts
@@ -0,0 +1,7 @@
+import { Uint8ArrayList } from 'uint8arraylist';
+import type { Source, Duplex } from 'it-stream-types';
+/**
+ * A pair of streams where one drains from the other
+ */
+export declare function pair(): Duplex<AsyncGenerator<Uint8ArrayList>, Source<Uint8ArrayList | Uint8Array>, Promise<void>>;
+//# sourceMappingURL=pair.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts.map b/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts.map
new file mode 100644
index 0000000..b5f8d62
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"pair.d.ts","sourceRoot":"","sources":["../../../../test/connection/fixtures/pair.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAA;AAC/C,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAA;AAErD;;GAEG;AACH,wBAAgB,IAAI,IAAK,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,MAAM,CAAC,cAAc,GAAG,UAAU,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAmBlH"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/fixtures/pair.js b/node_modules/libp2p/dist/test/connection/fixtures/pair.js
new file mode 100644
index 0000000..e5b3f71
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/fixtures/pair.js
@@ -0,0 +1,24 @@
+import map from 'it-map';
+import defer from 'p-defer';
+import { Uint8ArrayList } from 'uint8arraylist';
+/**
+ * A pair of streams where one drains from the other
+ */
+export function pair() {
+    const deferred = defer();
+    let piped = false;
+    return {
+        sink: async (source) => {
+            if (piped) {
+                throw new Error('already piped');
+            }
+            piped = true;
+            deferred.resolve(source);
+        },
+        source: (async function* () {
+            const source = await deferred.promise;
+            yield* map(source, (buf) => buf instanceof Uint8Array ? new Uint8ArrayList(buf) : buf);
+        }())
+    };
+}
+//# sourceMappingURL=pair.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/fixtures/pair.js.map b/node_modules/libp2p/dist/test/connection/fixtures/pair.js.map
new file mode 100644
index 0000000..fe7ef1d
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/fixtures/pair.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"pair.js","sourceRoot":"","sources":["../../../../test/connection/fixtures/pair.ts"],"names":[],"mappings":"AAAA,OAAO,GAAG,MAAM,QAAQ,CAAA;AACxB,OAAO,KAAK,MAAM,SAAS,CAAA;AAC3B,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAA;AAG/C;;GAEG;AACH,MAAM,UAAU,IAAI;IAClB,MAAM,QAAQ,GAAG,KAAK,EAAuC,CAAA;IAC7D,IAAI,KAAK,GAAG,KAAK,CAAA;IAEjB,OAAO;QACL,IAAI,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;YACnB,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAA;YAClC,CAAC;YAED,KAAK,GAAG,IAAI,CAAA;YACZ,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QAC1B,CAAC;QACD,MAAM,EAAE,CAAC,KAAK,SAAU,CAAC;YACvB,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAA;YAErC,KAAM,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,YAAY,UAAU,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACzF,CAAC,EAAE,CAAC;KACL,CAAA;AACH,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/index.spec.d.ts b/node_modules/libp2p/dist/test/connection/index.spec.d.ts
new file mode 100644
index 0000000..b37c2d2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/index.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/index.spec.d.ts.map b/node_modules/libp2p/dist/test/connection/index.spec.d.ts.map
new file mode 100644
index 0000000..99cb1ba
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/index.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.d.ts","sourceRoot":"","sources":["../../../test/connection/index.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/index.spec.js b/node_modules/libp2p/dist/test/connection/index.spec.js
new file mode 100644
index 0000000..6d3058f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/index.spec.js
@@ -0,0 +1,218 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { defaultLogger, logger, peerLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import Sinon from 'sinon';
+import { createConnection } from '../../src/connection/index.js';
+import { pair } from './fixtures/pair.js';
+function defaultConnectionInit() {
+    return {
+        timeline: {
+            open: Date.now() - 10,
+            upgraded: Date.now()
+        },
+        direction: 'outbound',
+        encryption: '/secio/1.0.0',
+        multiplexer: '/mplex/6.7.0',
+        status: 'open',
+        newStream: Sinon.stub(),
+        close: Sinon.stub(),
+        abort: Sinon.stub(),
+        getStreams: Sinon.stub(),
+        logger: defaultLogger()
+    };
+}
+describe('connection', () => {
+    it('should not require local or remote addrs', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        return createConnection({
+            remotePeer,
+            remoteAddr: multiaddr('/ip4/127.0.0.1/tcp/4002'),
+            ...defaultConnectionInit()
+        });
+    });
+    it('should append remote peer id to address if not already present', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = createConnection({
+            remotePeer,
+            remoteAddr: multiaddr('/ip4/127.0.0.1/tcp/4002'),
+            ...defaultConnectionInit()
+        });
+        expect(conn.remoteAddr.getPeerId()).to.equal(remotePeer.toString());
+    });
+    it('should not append remote peer id to address if present', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const otherPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = createConnection({
+            remotePeer,
+            remoteAddr: multiaddr(`/ip4/127.0.0.1/tcp/4002/p2p/${otherPeer}`),
+            ...defaultConnectionInit()
+        });
+        expect(conn.remoteAddr.getPeerId()).to.equal(otherPeer.toString());
+    });
+});
+describe('compliance', () => {
+    let connection;
+    let timelineProxy;
+    const proxyHandler = {
+        set() {
+            // @ts-expect-error - TS fails to infer here
+            return Reflect.set(...arguments);
+        }
+    };
+    beforeEach(async () => {
+        const localPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const remoteAddr = multiaddr('/ip4/127.0.0.1/tcp/8081');
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        let openStreams = [];
+        let streamId = 0;
+        connection = createConnection({
+            remotePeer,
+            remoteAddr,
+            timeline: {
+                open: Date.now() - 10,
+                upgraded: Date.now()
+            },
+            direction: 'outbound',
+            encryption: '/secio/1.0.0',
+            multiplexer: '/mplex/6.7.0',
+            status: 'open',
+            logger: peerLogger(localPeer),
+            newStream: async (protocols) => {
+                const id = `${streamId++}`;
+                const stream = {
+                    ...pair(),
+                    close: async () => {
+                        void stream.sink(async function* () { }());
+                        openStreams = openStreams.filter(s => s.id !== id);
+                    },
+                    closeRead: async () => { },
+                    closeWrite: async () => {
+                        void stream.sink(async function* () { }());
+                    },
+                    id,
+                    abort: () => { },
+                    direction: 'outbound',
+                    protocol: protocols[0],
+                    timeline: {
+                        open: 0
+                    },
+                    metadata: {},
+                    status: 'open',
+                    writeStatus: 'ready',
+                    readStatus: 'ready',
+                    log: logger('test')
+                };
+                openStreams.push(stream);
+                return stream;
+            },
+            close: async () => { },
+            abort: () => { },
+            getStreams: () => openStreams
+        });
+        timelineProxy = new Proxy({
+            open: Date.now() - 10,
+            upgraded: Date.now()
+        }, proxyHandler);
+        connection.timeline = timelineProxy;
+    });
+    it('should have properties set', () => {
+        expect(connection.id).to.exist();
+        expect(connection.remotePeer).to.exist();
+        expect(connection.remoteAddr).to.exist();
+        expect(connection.status).to.equal('open');
+        expect(connection.timeline.open).to.exist();
+        expect(connection.timeline.close).to.not.exist();
+        expect(connection.direction).to.exist();
+        expect(connection.streams).to.eql([]);
+        expect(connection.tags).to.eql([]);
+    });
+    it('should get the metadata of an open connection', () => {
+        expect(connection.status).to.equal('open');
+        expect(connection.direction).to.exist();
+        expect(connection.timeline.open).to.exist();
+        expect(connection.timeline.close).to.not.exist();
+    });
+    it('should return an empty array of streams', () => {
+        const streams = connection.streams;
+        expect(streams).to.eql([]);
+    });
+    it('should be able to create a new stream', async () => {
+        expect(connection.streams).to.be.empty();
+        const protocolToUse = '/echo/0.0.1';
+        const stream = await connection.newStream([protocolToUse]);
+        expect(stream).to.have.property('protocol', protocolToUse);
+        const connStreams = connection.streams;
+        expect(stream).to.exist();
+        expect(connStreams).to.exist();
+        expect(connStreams).to.have.lengthOf(1);
+        expect(connStreams[0]).to.equal(stream);
+    });
+    it('should be able to close the connection after being created', async () => {
+        expect(connection.timeline.close).to.not.exist();
+        await connection.close();
+        expect(connection.timeline.close).to.exist();
+        expect(connection.status).to.equal('closed');
+    });
+    it('should be able to close the connection after opening a stream', async () => {
+        // Open stream
+        const protocol = '/echo/0.0.1';
+        await connection.newStream([protocol]);
+        // Close connection
+        expect(connection.timeline.close).to.not.exist();
+        await connection.close();
+        expect(connection.timeline.close).to.exist();
+        expect(connection.status).to.equal('closed');
+    });
+    it('should properly track streams', async () => {
+        // Open stream
+        const protocol = '/echo/0.0.1';
+        const stream = await connection.newStream([protocol]);
+        expect(stream).to.have.property('protocol', protocol);
+        // Close stream
+        await stream.close();
+        expect(connection.streams.filter(s => s.id === stream.id)).to.be.empty();
+    });
+    it('should track outbound streams', async () => {
+        // Open stream
+        const protocol = '/echo/0.0.1';
+        const stream = await connection.newStream(protocol);
+        expect(stream).to.have.property('direction', 'outbound');
+    });
+    it('should support a proxy on the timeline', async () => {
+        Sinon.spy(proxyHandler, 'set');
+        expect(connection.timeline.close).to.not.exist();
+        await connection.close();
+        // @ts-expect-error - fails to infer callCount
+        expect(proxyHandler.set.callCount).to.equal(1);
+        // @ts-expect-error - fails to infer getCall
+        const [obj, key, value] = proxyHandler.set.getCall(0).args;
+        expect(obj).to.eql(connection.timeline);
+        expect(key).to.equal('close');
+        expect(value).to.be.a('number').that.equals(connection.timeline.close);
+    });
+    it('should fail to create a new stream if the connection is closing', async () => {
+        expect(connection.timeline.close).to.not.exist();
+        const p = connection.close();
+        try {
+            const protocol = '/echo/0.0.1';
+            await connection.newStream([protocol]);
+        }
+        catch (err) {
+            expect(err).to.exist();
+            return;
+        }
+        finally {
+            await p;
+        }
+        throw new Error('should fail to create a new stream if the connection is closing');
+    });
+    it('should fail to create a new stream if the connection is closed', async () => {
+        expect(connection.timeline.close).to.not.exist();
+        await connection.close();
+        await expect(connection.newStream(['/echo/0.0.1'])).to.eventually.be.rejected
+            .with.property('name', 'ConnectionClosedError');
+    });
+});
+//# sourceMappingURL=index.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/index.spec.js.map b/node_modules/libp2p/dist/test/connection/index.spec.js.map
new file mode 100644
index 0000000..fb2c948
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/index.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../test/connection/index.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts
new file mode 100644
index 0000000..9a90f9c
--- /dev/null
+++ b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=content-routing.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts.map b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts.map
new file mode 100644
index 0000000..5b19f30
--- /dev/null
+++ b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"content-routing.spec.d.ts","sourceRoot":"","sources":["../../../test/content-routing/content-routing.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js
new file mode 100644
index 0000000..4a0e591
--- /dev/null
+++ b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js
@@ -0,0 +1,315 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { contentRoutingSymbol } from '@libp2p/interface';
+import { peerIdFromString, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import all from 'it-all';
+import drain from 'it-drain';
+import { CID } from 'multiformats/cid';
+import pDefer from 'p-defer';
+import { stubInterface } from 'sinon-ts';
+import { createLibp2p } from '../../src/index.js';
+describe('content-routing', () => {
+    describe('no routers', () => {
+        let node;
+        beforeEach(async () => {
+            node = await createLibp2p();
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('.findProviders should return an error', async () => {
+            try {
+                // @ts-expect-error invalid params
+                for await (const _ of node.contentRouting.findProviders('a cid')) { } // eslint-disable-line
+                throw new Error('.findProviders should return an error');
+            }
+            catch (err) {
+                expect(err).to.exist();
+                expect(err.name).to.equal('NoContentRoutersError');
+            }
+        });
+        it('.provide should return an error', async () => {
+            // @ts-expect-error invalid params
+            await expect(node.contentRouting.provide('a cid'))
+                .to.eventually.be.rejected
+                .with.property('name', 'NoContentRoutersError');
+        });
+    });
+    describe('via service that implements ContentRouting', () => {
+        let node;
+        let router;
+        beforeEach(async () => {
+            router = stubInterface();
+            node = await createLibp2p({
+                services: {
+                    router: () => ({
+                        [contentRoutingSymbol]: router
+                    })
+                }
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the configured service to provide', async () => {
+            const deferred = pDefer();
+            router.provide.callsFake(async function () {
+                deferred.resolve();
+            });
+            void node.contentRouting.provide(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'));
+            await deferred.promise;
+        });
+        it('should use the configured service to find providers', async () => {
+            const deferred = pDefer();
+            router.findProviders.callsFake(async function* () {
+                yield {
+                    id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/4001')
+                    ]
+                };
+                deferred.resolve();
+            });
+            await drain(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            return deferred.promise;
+        });
+    });
+    describe('via configured ContentRouter', () => {
+        let node;
+        let delegate;
+        beforeEach(async () => {
+            delegate = stubInterface();
+            delegate.provide.returns(Promise.resolve());
+            delegate.findProviders.returns(async function* () { }());
+            node = await createLibp2p({
+                contentRouters: [
+                    () => delegate
+                ]
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the delegate router to provide', async () => {
+            const deferred = pDefer();
+            delegate.provide.callsFake(async () => {
+                deferred.resolve();
+            });
+            void node.contentRouting.provide(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'));
+            return deferred.promise;
+        });
+        it('should use the delegate router to find providers', async () => {
+            const deferred = pDefer();
+            delegate.findProviders.returns(async function* () {
+                yield {
+                    id: node.peerId,
+                    multiaddrs: []
+                };
+                deferred.resolve();
+            }());
+            await drain(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            return deferred.promise;
+        });
+        it('should be able to register as a provider', async () => {
+            const cid = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+            await node.contentRouting.provide(cid);
+            expect(delegate.provide.calledWith(cid)).to.equal(true);
+        });
+        it('should handle errors when registering as a provider', async () => {
+            const cid = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+            delegate.provide.withArgs(cid).throws(new Error('Could not provide'));
+            await expect(node.contentRouting.provide(cid))
+                .to.eventually.be.rejected()
+                .with.property('message', 'Could not provide');
+        });
+        it('should be able to find providers', async () => {
+            const cid = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+            const provider = 'QmZNgCqZCvTsi3B4Vt7gsSqpkqDpE7M2Y9TDmEhbDb4ceF';
+            delegate.findProviders.withArgs(cid).returns(async function* () {
+                yield {
+                    id: peerIdFromString(provider),
+                    multiaddrs: [
+                        multiaddr('/ip4/0.0.0.0/tcp/0')
+                    ]
+                };
+            }());
+            const providers = await all(node.contentRouting.findProviders(cid));
+            expect(providers).to.have.length(1);
+            expect(providers[0].id.toString()).to.equal(provider);
+        });
+        it('should handle errors when finding providers', async () => {
+            const cid = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+            delegate.findProviders.withArgs(cid).throws(new Error('Could not find providers'));
+            await expect(drain(node.contentRouting.findProviders(cid)))
+                .to.eventually.be.rejected()
+                .with.property('message', 'Could not find providers');
+        });
+    });
+    describe('via services and configured content routers', () => {
+        let node;
+        let delegate;
+        let router;
+        beforeEach(async () => {
+            router = stubInterface();
+            delegate = stubInterface();
+            delegate.provide.returns(Promise.resolve());
+            delegate.findProviders.returns(async function* () { }());
+            node = await createLibp2p({
+                contentRouters: [
+                    () => delegate
+                ],
+                services: {
+                    router: () => ({
+                        [contentRoutingSymbol]: router
+                    })
+                }
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should store the multiaddrs of a peer', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            router.findProviders.callsFake(async function* () { });
+            delegate.findProviders.callsFake(async function* () {
+                yield result;
+            });
+            expect(await node.peerStore.has(providerPeerId)).to.not.be.ok();
+            await drain(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            await expect(node.peerStore.get(providerPeerId)).to.eventually.have.property('addresses').that.deep.include({
+                isCertified: false,
+                multiaddr: result.multiaddrs[0]
+            });
+        });
+        it('should not wait for routing findProviders to finish before returning results', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            const defer = pDefer();
+            router.findProviders.callsFake(async function* () {
+                await defer.promise;
+            });
+            delegate.findProviders.callsFake(async function* () {
+                yield result;
+                await defer.promise;
+            });
+            for await (const provider of node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'))) {
+                expect(provider.id).to.deep.equal(providerPeerId);
+                defer.resolve();
+            }
+        });
+        it('should dedupe results', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            router.findProviders.callsFake(async function* () {
+                yield result;
+            });
+            delegate.findProviders.callsFake(async function* () {
+                yield result;
+            });
+            const results = await all(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            expect(results).to.be.an('array').with.lengthOf(1).that.deep.equals([result]);
+        });
+        it('should combine multiaddrs when different addresses are returned by different content routers', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result1 = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            const result2 = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/213.213.213.213/tcp/2344')
+                ]
+            };
+            router.findProviders.callsFake(async function* () {
+                yield result1;
+            });
+            delegate.findProviders.callsFake(async function* () {
+                yield result2;
+            });
+            await drain(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            await expect(node.peerStore.get(providerPeerId)).to.eventually.have.property('addresses').that.deep.include({
+                isCertified: false,
+                multiaddr: result1.multiaddrs[0]
+            }).and.to.deep.include({
+                isCertified: false,
+                multiaddr: result2.multiaddrs[0]
+            });
+        });
+        it('should use both the service and delegate router to provide', async () => {
+            const serviceDeferred = pDefer();
+            const delegatedDeferred = pDefer();
+            router.provide.callsFake(async function () {
+                serviceDeferred.resolve();
+            });
+            delegate.provide.callsFake(async function () {
+                delegatedDeferred.resolve();
+            });
+            await node.contentRouting.provide(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'));
+            await Promise.all([
+                serviceDeferred.promise,
+                delegatedDeferred.promise
+            ]);
+        });
+        it('should use the service if the delegate fails to find providers', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = [{
+                    id: providerPeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/2341')
+                    ]
+                }];
+            router.findProviders.callsFake(async function* () {
+                yield results[0];
+            });
+            delegate.findProviders.callsFake(async function* () {
+            });
+            const providers = [];
+            for await (const prov of node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'))) {
+                providers.push(prov);
+            }
+            expect(providers).to.have.length.above(0);
+            expect(providers).to.eql(results);
+        });
+        it('should use the delegate if the service fails to find providers', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = [{
+                    id: providerPeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/2341')
+                    ]
+                }];
+            router.findProviders.callsFake(async function* () { });
+            delegate.findProviders.callsFake(async function* () {
+                yield results[0];
+            });
+            const providers = [];
+            for await (const prov of node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'))) {
+                providers.push(prov);
+            }
+            expect(providers).to.have.length.above(0);
+            expect(providers).to.eql(results);
+        });
+    });
+});
+//# sourceMappingURL=content-routing.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js.map b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js.map
new file mode 100644
index 0000000..3d88b6a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"content-routing.spec.js","sourceRoot":"","sources":["../../../test/content-routing/content-routing.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAA;AACxD,OAAO,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACxE,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,GAAG,MAAM,QAAQ,CAAA;AACxB,OAAO,KAAK,MAAM,UAAU,CAAA;AAC5B,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AACtC,OAAO,MAAM,MAAM,SAAS,CAAA;AAC5B,OAAO,EAAwB,aAAa,EAAE,MAAM,UAAU,CAAA;AAC9D,OAAO,EAAE,YAAY,EAAe,MAAM,oBAAoB,CAAA;AAG9D,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;QAC1B,IAAI,IAAY,CAAA;QAEhB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,IAAI,GAAG,MAAM,YAAY,EAAE,CAAA;QAC7B,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,EAAE,IAAI,EAAE,CAAA;QACpB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACrD,IAAI,CAAC;gBACH,kCAAkC;gBAClC,IAAI,KAAK,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA,CAAC,CAAC,sBAAsB;gBAC3F,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAA;YAC1D,CAAC;YAAC,OAAO,GAAQ,EAAE,CAAC;gBAClB,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;gBACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAA;YACpD,CAAC;QACH,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAC/C,kCAAkC;YAClC,MAAM,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;iBAC/C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ;iBACzB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAA;QACnD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;QAC1D,IAAI,IAAY,CAAA;QAChB,IAAI,MAAuC,CAAA;QAE3C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,GAAG,aAAa,EAAkB,CAAA;YAExC,IAAI,GAAG,MAAM,YAAY,CAAC;gBACxB,QAAQ,EAAE;oBACR,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;wBACb,CAAC,oBAAoB,CAAC,EAAE,MAAM;qBAC/B,CAAC;iBACH;aACF,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,EAAE,IAAI,EAAE,CAAA;QACpB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC5D,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAA;YAEzB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK;gBAC5B,QAAQ,CAAC,OAAO,EAAE,CAAA;YACpB,CAAC,CAAC,CAAA;YAEF,KAAK,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAA;YAE7F,MAAM,QAAQ,CAAC,OAAO,CAAA;QACxB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAA;YAEzB,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC7C,MAAM;oBACJ,EAAE,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;oBAC1D,UAAU,EAAE;wBACV,SAAS,CAAC,+BAA+B,CAAC;qBAC3C;iBACF,CAAA;gBACD,QAAQ,CAAC,OAAO,EAAE,CAAA;YACpB,CAAC,CAAC,CAAA;YAEF,MAAM,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC,CAAA;YAE3G,OAAO,QAAQ,CAAC,OAAO,CAAA;QACzB,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;QAC5C,IAAI,IAAY,CAAA;QAChB,IAAI,QAAyC,CAAA;QAE7C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,QAAQ,GAAG,aAAa,EAAkB,CAAA;YAC1C,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;YAC3C,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,SAAU,CAAC,MAAK,CAAC,EAAE,CAAC,CAAA;YAExD,IAAI,GAAG,MAAM,YAAY,CAAC;gBACxB,cAAc,EAAE;oBACd,GAAG,EAAE,CAAC,QAAQ;iBACf;aACF,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,EAAE,IAAI,EAAE,CAAA;QACpB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAA;YAEzB,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE;gBACpC,QAAQ,CAAC,OAAO,EAAE,CAAA;YACpB,CAAC,CAAC,CAAA;YAEF,KAAK,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAA;YAE7F,OAAO,QAAQ,CAAC,OAAO,CAAA;QACzB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;YAChE,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAA;YAEzB,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,SAAU,CAAC;gBAC7C,MAAM;oBACJ,EAAE,EAAE,IAAI,CAAC,MAAM;oBACf,UAAU,EAAE,EAAE;iBACf,CAAA;gBACD,QAAQ,CAAC,OAAO,EAAE,CAAA;YACpB,CAAC,EAAE,CAAC,CAAA;YAEJ,MAAM,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC,CAAA;YAE3G,OAAO,QAAQ,CAAC,OAAO,CAAA;QACzB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAA;YAEvE,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;YAEtC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QACzD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAA;YAEvE,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAA;YAErE,MAAM,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;iBAC3C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;iBAC3B,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAA;YACvE,MAAM,QAAQ,GAAG,gDAAgD,CAAA;YAEjE,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,SAAU,CAAC;gBAC3D,MAAM;oBACJ,EAAE,EAAE,gBAAgB,CAAC,QAAQ,CAAC;oBAC9B,UAAU,EAAE;wBACV,SAAS,CAAC,oBAAoB,CAAC;qBAChC;iBACF,CAAA;YACH,CAAC,EAAE,CAAC,CAAA;YAEJ,MAAM,SAAS,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAA;YAEnE,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YACnC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;QACvD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAA;YAEvE,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAA;YAElF,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;iBACxD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;iBAC3B,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,0BAA0B,CAAC,CAAA;QACzD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,6CAA6C,EAAE,GAAG,EAAE;QAC3D,IAAI,IAAY,CAAA;QAChB,IAAI,QAAyC,CAAA;QAC7C,IAAI,MAAuC,CAAA;QAE3C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,GAAG,aAAa,EAAkB,CAAA;YAExC,QAAQ,GAAG,aAAa,EAAkB,CAAA;YAC1C,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;YAC3C,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,SAAU,CAAC,MAAK,CAAC,EAAE,CAAC,CAAA;YAExD,IAAI,GAAG,MAAM,YAAY,CAAC;gBACxB,cAAc,EAAE;oBACd,GAAG,EAAE,CAAC,QAAQ;iBACf;gBACD,QAAQ,EAAE;oBACR,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;wBACb,CAAC,oBAAoB,CAAC,EAAE,MAAM;qBAC/B,CAAC;iBACH;aACF,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,EAAE,IAAI,EAAE,CAAA;QACpB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACrD,MAAM,cAAc,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC7E,MAAM,MAAM,GAAa;gBACvB,EAAE,EAAE,cAAc;gBAClB,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAA;YAED,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC,MAAK,CAAC,CAAC,CAAA;YACtD,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC/C,MAAM,MAAM,CAAA;YACd,CAAC,CAAC,CAAA;YAEF,MAAM,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;YAE/D,MAAM,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC,CAAA;YAE3G,MAAM,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC1G,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;aAChC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,8EAA8E,EAAE,KAAK,IAAI,EAAE;YAC5F,MAAM,cAAc,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC7E,MAAM,MAAM,GAAG;gBACb,EAAE,EAAE,cAAc;gBAClB,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAA;YAED,MAAM,KAAK,GAAG,MAAM,EAAE,CAAA;YAEtB,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC7C,MAAM,KAAK,CAAC,OAAO,CAAA;YACrB,CAAC,CAAC,CAAA;YACF,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC/C,MAAM,MAAM,CAAA;gBAEZ,MAAM,KAAK,CAAC,OAAO,CAAA;YACrB,CAAC,CAAC,CAAA;YAEF,IAAI,KAAK,EAAE,MAAM,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,EAAE,CAAC;gBAC5H,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;gBACjD,KAAK,CAAC,OAAO,EAAE,CAAA;YACjB,CAAC;QACH,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;YACrC,MAAM,cAAc,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC7E,MAAM,MAAM,GAAG;gBACb,EAAE,EAAE,cAAc;gBAClB,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAA;YAED,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC7C,MAAM,MAAM,CAAA;YACd,CAAC,CAAC,CAAA;YACF,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC/C,MAAM,MAAM,CAAA;YACd,CAAC,CAAC,CAAA;YAEF,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC,CAAA;YAEzH,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;QAC/E,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,8FAA8F,EAAE,KAAK,IAAI,EAAE;YAC5G,MAAM,cAAc,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC7E,MAAM,OAAO,GAAG;gBACd,EAAE,EAAE,cAAc;gBAClB,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAA;YACD,MAAM,OAAO,GAAG;gBACd,EAAE,EAAE,cAAc;gBAClB,UAAU,EAAE;oBACV,SAAS,CAAC,+BAA+B,CAAC;iBAC3C;aACF,CAAA;YAED,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC7C,MAAM,OAAO,CAAA;YACf,CAAC,CAAC,CAAA;YACF,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC/C,MAAM,OAAO,CAAA;YACf,CAAC,CAAC,CAAA;YAEF,MAAM,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC,CAAA;YAE3G,MAAM,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC1G,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;aACjC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;gBACrB,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;aACjC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;YAC1E,MAAM,eAAe,GAAG,MAAM,EAAE,CAAA;YAChC,MAAM,iBAAiB,GAAG,MAAM,EAAE,CAAA;YAElC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK;gBAC5B,eAAe,CAAC,OAAO,EAAE,CAAA;YAC3B,CAAC,CAAC,CAAA;YAEF,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK;gBAC9B,iBAAiB,CAAC,OAAO,EAAE,CAAA;YAC7B,CAAC,CAAC,CAAA;YAEF,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAA;YAE9F,MAAM,OAAO,CAAC,GAAG,CAAC;gBAChB,eAAe,CAAC,OAAO;gBACvB,iBAAiB,CAAC,OAAO;aAC1B,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;YAC9E,MAAM,cAAc,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC7E,MAAM,OAAO,GAAG,CAAC;oBACf,EAAE,EAAE,cAAc;oBAClB,UAAU,EAAE;wBACV,SAAS,CAAC,+BAA+B,CAAC;qBAC3C;iBACF,CAAC,CAAA;YAEF,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC7C,MAAM,OAAO,CAAC,CAAC,CAAC,CAAA;YAClB,CAAC,CAAC,CAAA;YAEF,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;YACjD,CAAC,CAAC,CAAA;YAEF,MAAM,SAAS,GAAG,EAAE,CAAA;YACpB,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,EAAE,CAAC;gBACxH,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACtB,CAAC;YAED,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YACzC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QACnC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;YAC9E,MAAM,cAAc,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC7E,MAAM,OAAO,GAAG,CAAC;oBACf,EAAE,EAAE,cAAc;oBAClB,UAAU,EAAE;wBACV,SAAS,CAAC,+BAA+B,CAAC;qBAC3C;iBACF,CAAC,CAAA;YAEF,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC,MAAK,CAAC,CAAC,CAAA;YAEtD,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC/C,MAAM,OAAO,CAAC,CAAC,CAAC,CAAA;YAClB,CAAC,CAAC,CAAA;YAEF,MAAM,SAAS,GAAG,EAAE,CAAA;YACpB,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC,EAAE,CAAC;gBACxH,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACtB,CAAC;YAED,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YACzC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QACnC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/core.spec.d.ts b/node_modules/libp2p/dist/test/core/core.spec.d.ts
new file mode 100644
index 0000000..79e42aa
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/core.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=core.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/core.spec.d.ts.map b/node_modules/libp2p/dist/test/core/core.spec.d.ts.map
new file mode 100644
index 0000000..b7dcb9b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/core.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"core.spec.d.ts","sourceRoot":"","sources":["../../../test/core/core.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/core.spec.js b/node_modules/libp2p/dist/test/core/core.spec.js
new file mode 100644
index 0000000..f80d563
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/core.spec.js
@@ -0,0 +1,42 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { stubInterface } from 'sinon-ts';
+import { createLibp2p } from '../../src/index.js';
+describe('core', () => {
+    let libp2p;
+    afterEach(async () => {
+        await libp2p.stop();
+    });
+    it('should start a minimal node', async () => {
+        libp2p = await createLibp2p();
+        expect(libp2p).to.have.property('status', 'started');
+    });
+    it('should say an address is not dialable if we have no transport for it', async () => {
+        libp2p = await createLibp2p();
+        const ma = multiaddr('/dns4/example.com/sctp/1234');
+        await expect(libp2p.isDialable(ma)).to.eventually.be.false();
+    });
+    it('should test if a protocol can run over a limited connection', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                () => {
+                    // stub a transport that can dial any address
+                    return stubInterface({
+                        dialFilter: (addrs) => addrs
+                    });
+                }
+            ]
+        });
+        await expect(libp2p.isDialable(multiaddr('/dns4/example.com/tls/ws'), {
+            runOnLimitedConnection: false
+        })).to.eventually.be.true('could not dial memory address');
+        await expect(libp2p.isDialable(multiaddr('/dns4/example.com/tls/ws/p2p/12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE1/p2p-circuit/p2p/12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE2'), {
+            runOnLimitedConnection: true
+        })).to.eventually.be.true('could not circuit relay address');
+        await expect(libp2p.isDialable(multiaddr('/dns4/example.com/tls/ws/p2p/12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE1/p2p-circuit/p2p/12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE2'), {
+            runOnLimitedConnection: false
+        })).to.eventually.be.false('could dial circuit address');
+    });
+});
+//# sourceMappingURL=core.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/core.spec.js.map b/node_modules/libp2p/dist/test/core/core.spec.js.map
new file mode 100644
index 0000000..72a54cc
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/core.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"core.spec.js","sourceRoot":"","sources":["../../../test/core/core.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;IACpB,IAAI,MAAc,CAAA;IAElB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;IACrB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,GAAG,MAAM,YAAY,EAAE,CAAA;QAE7B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;IACtD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sEAAsE,EAAE,KAAK,IAAI,EAAE;QACpF,MAAM,GAAG,MAAM,YAAY,EAAE,CAAA;QAE7B,MAAM,EAAE,GAAG,SAAS,CAAC,6BAA6B,CAAC,CAAA;QAEnD,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC9D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;QAC3E,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,UAAU,EAAE;gBACV,GAAG,EAAE;oBACH,6CAA6C;oBAC7C,OAAO,aAAa,CAAY;wBAC9B,UAAU,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK;qBAC7B,CAAC,CAAA;gBACJ,CAAC;aACF;SACF,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,0BAA0B,CAAC,EAAE;YACpE,sBAAsB,EAAE,KAAK;SAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAA;QAE1D,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,wJAAwJ,CAAC,EAAE;YAClM,sBAAsB,EAAE,IAAI;SAC7B,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAA;QAE5D,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,wJAAwJ,CAAC,EAAE;YAClM,sBAAsB,EAAE,KAAK;SAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAA;IAC1D,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/events.spec.d.ts b/node_modules/libp2p/dist/test/core/events.spec.d.ts
new file mode 100644
index 0000000..35b5a7f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/events.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=events.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/events.spec.d.ts.map b/node_modules/libp2p/dist/test/core/events.spec.d.ts.map
new file mode 100644
index 0000000..9671761
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/events.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"events.spec.d.ts","sourceRoot":"","sources":["../../../test/core/events.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/events.spec.js b/node_modules/libp2p/dist/test/core/events.spec.js
new file mode 100644
index 0000000..6aca309
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/events.spec.js
@@ -0,0 +1,27 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { pEvent } from 'p-event';
+import { createLibp2p } from '../../src/index.js';
+describe('events', () => {
+    let node;
+    afterEach(async () => {
+        if (node != null) {
+            await node.stop();
+        }
+    });
+    it('should emit a start event', async () => {
+        node = await createLibp2p({
+            start: false
+        });
+        const eventPromise = pEvent(node, 'start');
+        await node.start();
+        await expect(eventPromise).to.eventually.have.property('detail', node);
+    });
+    it('should emit a stop event', async () => {
+        node = await createLibp2p();
+        const eventPromise = pEvent(node, 'stop');
+        await node.stop();
+        await expect(eventPromise).to.eventually.have.property('detail', node);
+    });
+});
+//# sourceMappingURL=events.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/events.spec.js.map b/node_modules/libp2p/dist/test/core/events.spec.js.map
new file mode 100644
index 0000000..39c8c0f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/events.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"events.spec.js","sourceRoot":"","sources":["../../../test/core/events.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAA;AAChC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,IAAI,IAAY,CAAA;IAEhB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;YACjB,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACnB,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,IAAI,GAAG,MAAM,YAAY,CAAC;YACxB,KAAK,EAAE,KAAK;SACb,CAAC,CAAA;QAEF,MAAM,YAAY,GAAG,MAAM,CAA+B,IAAI,EAAE,OAAO,CAAC,CAAA;QAExE,MAAM,IAAI,CAAC,KAAK,EAAE,CAAA;QAClB,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;IACxE,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACxC,IAAI,GAAG,MAAM,YAAY,EAAE,CAAA;QAE3B,MAAM,YAAY,GAAG,MAAM,CAA8B,IAAI,EAAE,MAAM,CAAC,CAAA;QAEtE,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;IACxE,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts b/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts
new file mode 100644
index 0000000..6dbf4bc
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=get-public-key.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts.map b/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts.map
new file mode 100644
index 0000000..92e484a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-public-key.spec.d.ts","sourceRoot":"","sources":["../../../test/core/get-public-key.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/get-public-key.spec.js b/node_modules/libp2p/dist/test/core/get-public-key.spec.js
new file mode 100644
index 0000000..2bd61f6
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/get-public-key.spec.js
@@ -0,0 +1,57 @@
+/* eslint-env mocha */
+import { generateKeyPair, publicKeyToProtobuf } from '@libp2p/crypto/keys';
+import { contentRoutingSymbol } from '@libp2p/interface';
+import { peerIdFromMultihash, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import { stubInterface } from 'sinon-ts';
+import { createLibp2p } from '../../src/index.js';
+describe('getPublicKey', () => {
+    let node;
+    let router;
+    beforeEach(async () => {
+        router = stubInterface();
+        router[contentRoutingSymbol] = router;
+        node = await createLibp2p({
+            services: {
+                router: () => router
+            }
+        });
+    });
+    afterEach(async () => {
+        if (node != null) {
+            await node.stop();
+        }
+    });
+    it('should extract embedded public key', async () => {
+        const otherPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const key = await node.getPublicKey(otherPeer);
+        expect(otherPeer.publicKey.equals(key)).to.be.true();
+    });
+    it('should get key from the peerstore', async () => {
+        const otherPeer = peerIdFromPrivateKey(await generateKeyPair('RSA', 512));
+        if (otherPeer.publicKey == null) {
+            throw new Error('Public key was missing');
+        }
+        await node.peerStore.patch(otherPeer, {
+            publicKey: otherPeer.publicKey
+        });
+        const key = await node.getPublicKey(otherPeer);
+        expect(otherPeer.publicKey.equals(key)).to.be.true();
+    });
+    it('should query content routing when the key is not in the keystore', async () => {
+        const otherPeer = peerIdFromPrivateKey(await generateKeyPair('RSA', 512));
+        router.get.callsFake(async () => {
+            if (otherPeer.publicKey == null) {
+                throw new Error('Public key was missing');
+            }
+            return Promise.resolve(publicKeyToProtobuf(otherPeer.publicKey));
+        });
+        // create a copy of the RSA key, this will not have the public key
+        const otherPeerWithoutPublicKey = peerIdFromMultihash(otherPeer.toMultihash());
+        expect(otherPeerWithoutPublicKey).to.have.property('publicKey', undefined);
+        const key = await node.getPublicKey(otherPeerWithoutPublicKey);
+        expect(otherPeer.publicKey?.equals(key)).to.be.true();
+        expect(router.get.called).to.be.true('routing was not queried');
+    });
+});
+//# sourceMappingURL=get-public-key.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/get-public-key.spec.js.map b/node_modules/libp2p/dist/test/core/get-public-key.spec.js.map
new file mode 100644
index 0000000..f41e97c
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/get-public-key.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-public-key.spec.js","sourceRoot":"","sources":["../../../test/core/get-public-key.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,mBAAmB,EAAE,MAAM,qBAAqB,CAAA;AAC1E,OAAO,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAA;AACxD,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AAC3E,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAIjD,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,IAAI,IAAY,CAAA;IAChB,IAAI,MAAgE,CAAA;IAEpE,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,GAAG,aAAa,EAA2C,CAAA;QACjE,MAAM,CAAC,oBAAoB,CAAC,GAAG,MAAM,CAAA;QAErC,IAAI,GAAG,MAAM,YAAY,CAAC;YACxB,QAAQ,EAAE;gBACR,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM;aACrB;SACF,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;YACjB,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACnB,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,SAAS,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAExE,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAA;QAE9C,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IACtD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,SAAS,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAA;QAEzE,IAAI,SAAS,CAAC,SAAS,IAAI,IAAI,EAAE,CAAC;YAChC,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;QAC3C,CAAC;QAED,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE;YACpC,SAAS,EAAE,SAAS,CAAC,SAAS;SAC/B,CAAC,CAAA;QAEF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAA;QAE9C,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IACtD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kEAAkE,EAAE,KAAK,IAAI,EAAE;QAChF,MAAM,SAAS,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAA;QAEzE,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE;YAC9B,IAAI,SAAS,CAAC,SAAS,IAAI,IAAI,EAAE,CAAC;gBAChC,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;YAC3C,CAAC;YAED,OAAO,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAA;QAClE,CAAC,CAAC,CAAA;QAEF,kEAAkE;QAClE,MAAM,yBAAyB,GAAG,mBAAmB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAA;QAC9E,MAAM,CAAC,yBAAyB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,CAAC,CAAA;QAE1E,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,CAAA;QAE9D,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACrD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAA;IACjE,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts b/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts
new file mode 100644
index 0000000..6a1b640
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-id.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts.map b/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts.map
new file mode 100644
index 0000000..7d06eaa
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-id.spec.d.ts","sourceRoot":"","sources":["../../../test/core/peer-id.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/peer-id.spec.js b/node_modules/libp2p/dist/test/core/peer-id.spec.js
new file mode 100644
index 0000000..ac15e37
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/peer-id.spec.js
@@ -0,0 +1,16 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { createLibp2p } from '../../src/index.js';
+describe('peer-id', () => {
+    let libp2p;
+    afterEach(async () => {
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+    });
+    it('should create a PeerId if none is passed', async () => {
+        libp2p = await createLibp2p();
+        expect(libp2p.peerId).to.be.ok();
+    });
+});
+//# sourceMappingURL=peer-id.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/peer-id.spec.js.map b/node_modules/libp2p/dist/test/core/peer-id.spec.js.map
new file mode 100644
index 0000000..021cb7f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/peer-id.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-id.spec.js","sourceRoot":"","sources":["../../../test/core/peer-id.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAe,MAAM,oBAAoB,CAAA;AAE9D,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,IAAI,MAAc,CAAA;IAElB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC;YACnB,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;QACrB,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,GAAG,MAAM,YAAY,EAAE,CAAA;QAE7B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;IAClC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts b/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts
new file mode 100644
index 0000000..76f3841
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=random-walk.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts.map b/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts.map
new file mode 100644
index 0000000..fa2df07
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"random-walk.spec.d.ts","sourceRoot":"","sources":["../../../test/core/random-walk.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/random-walk.spec.js b/node_modules/libp2p/dist/test/core/random-walk.spec.js
new file mode 100644
index 0000000..f86e63d
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/random-walk.spec.js
@@ -0,0 +1,204 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { stop } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import all from 'it-all';
+import drain from 'it-drain';
+import map from 'it-map';
+import take from 'it-take';
+import pDefer from 'p-defer';
+import { stubInterface } from 'sinon-ts';
+import { RandomWalk as RandomWalkClass } from '../../src/random-walk.js';
+let port = 1234;
+async function createRandomPeerInfo() {
+    port++;
+    return {
+        id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+        multiaddrs: [
+            multiaddr(`/ip4/123.123.123.123/tcp/${port}`)
+        ]
+    };
+}
+// eslint-disable-next-line require-yield
+async function* slowIterator() {
+    await delay(1000);
+}
+describe('random-walk', () => {
+    let randomwalk;
+    let peerRouting;
+    beforeEach(async () => {
+        peerRouting = stubInterface();
+        randomwalk = new RandomWalkClass({
+            peerRouting,
+            logger: defaultLogger()
+        });
+    });
+    afterEach(async () => {
+        await stop(randomwalk);
+    });
+    it('should perform a random walk', async () => {
+        const randomPeer = await createRandomPeerInfo();
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* () {
+            yield randomPeer;
+        })
+            .onSecondCall().returns(slowIterator());
+        const peers = await all(take(randomwalk.walk(), 1));
+        expect(peers.map(peer => peer.id.toString())).to.include(randomPeer.id.toString());
+    });
+    it('should break out of a random walk', async () => {
+        let yielded = 0;
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yielded++;
+                yield await createRandomPeerInfo();
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        await drain(take(randomwalk.walk(), 1));
+        expect(yielded).to.equal(1);
+    });
+    it('should throw if walking fails', async () => {
+        const err = new Error('Oh no!');
+        const randomPeer1 = await createRandomPeerInfo();
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* () {
+            yield randomPeer1;
+            throw err;
+        })
+            .onThirdCall().returns(slowIterator());
+        await expect(all(randomwalk.walk())).to.eventually.be.rejectedWith(err);
+    });
+    it('should keep walking until the consumer stops pulling', async () => {
+        const randomPeer1 = await createRandomPeerInfo();
+        const randomPeer2 = await createRandomPeerInfo();
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* () {
+            yield randomPeer1;
+        })
+            .onSecondCall().callsFake(async function* () {
+            yield randomPeer2;
+        });
+        const peers = await all(take(randomwalk.walk(), 2));
+        expect(peers.map(peer => peer.id.toString())).to.deep.equal([
+            randomPeer1.id.toString(),
+            randomPeer2.id.toString()
+        ]);
+    });
+    it('should join an existing random walk', async () => {
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yield await createRandomPeerInfo();
+                await delay(100);
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        const [peers1, peers2] = await Promise.all([
+            all(take(randomwalk.walk(), 2)),
+            all(take(randomwalk.walk(), 2))
+        ]);
+        expect(peers1.map(peer => peer.id.toString())).to.deep.equal(peers2.map(peer => peer.id.toString()));
+    });
+    it('should continue random walk until all consumers satisfied', async () => {
+        let yielded = 0;
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yielded++;
+                yield await createRandomPeerInfo();
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        await Promise.all([
+            drain(take(randomwalk.walk(), 1)),
+            drain(take(randomwalk.walk(), 2))
+        ]);
+        expect(yielded).to.equal(3);
+    });
+    it('should not block walk on slow consumers', async () => {
+        let yielded = 0;
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yielded++;
+                yield await createRandomPeerInfo();
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        await Promise.all([
+            drain(take(randomwalk.walk(), 5)),
+            drain(map(take(randomwalk.walk(), 2), async (peer) => {
+                await delay(100);
+                return peer;
+            }))
+        ]);
+        expect(yielded).to.equal(10);
+    });
+    it('should unpause query if second consumer requires peers', async () => {
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yield await createRandomPeerInfo();
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        const deferred = pDefer();
+        // one slow consumer starts
+        const slowPeersPromise = all(map(take(randomwalk.walk(), 2), async (peer, index) => {
+            if (index === 1) {
+                deferred.resolve();
+                await delay(100);
+            }
+            return peer;
+        }));
+        // wait for slow consumer to have received the first peer
+        await deferred.promise;
+        // start fast consumer
+        const [slowPeers, fastPeers] = await Promise.all([
+            slowPeersPromise,
+            all(take(randomwalk.walk(), 5))
+        ]);
+        // both should hav got peers
+        expect(slowPeers).to.have.lengthOf(2);
+        expect(fastPeers).to.have.lengthOf(5);
+    });
+    it('should abort a slow query', async () => {
+        peerRouting.getClosestPeers.returns(slowIterator());
+        await expect(drain(randomwalk.walk({
+            signal: AbortSignal.timeout(10)
+        }))).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+    });
+    it('should allow an impatient consumer to abort a slow query but other consumers to receive values', async () => {
+        peerRouting.getClosestPeers.callsFake(async function* (key, options) {
+            await delay(100);
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yield await createRandomPeerInfo();
+            }
+        });
+        const results = await Promise.allSettled([
+            drain(randomwalk.walk({
+                signal: AbortSignal.timeout(10)
+            })),
+            all(take(randomwalk.walk({
+                signal: AbortSignal.timeout(5000)
+            }), 2))
+        ]);
+        expect(results).to.have.nested.property('[0].status', 'rejected');
+        expect(results).to.have.nested.property('[0].reason.name', 'AbortError');
+        expect(results).to.have.nested.property('[1].status', 'fulfilled');
+        expect(results).to.have.nested.property('[1].value').with.lengthOf(2);
+    });
+});
+//# sourceMappingURL=random-walk.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/random-walk.spec.js.map b/node_modules/libp2p/dist/test/core/random-walk.spec.js.map
new file mode 100644
index 0000000..40e5bb4
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/random-walk.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"random-walk.spec.js","sourceRoot":"","sources":["../../../test/core/random-walk.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts b/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts
new file mode 100644
index 0000000..277f0f0
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=service-dependencies.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts.map b/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts.map
new file mode 100644
index 0000000..2c47b5b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"service-dependencies.spec.d.ts","sourceRoot":"","sources":["../../../test/core/service-dependencies.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/service-dependencies.spec.js b/node_modules/libp2p/dist/test/core/service-dependencies.spec.js
new file mode 100644
index 0000000..0a73584
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/service-dependencies.spec.js
@@ -0,0 +1,60 @@
+import { serviceCapabilities, serviceDependencies, stop } from '@libp2p/interface';
+import { expect } from 'aegir/chai';
+import { createLibp2p } from '../../src/index.js';
+/**
+ * A service with no dependencies
+ */
+function serviceA() {
+    return () => {
+        return {
+            [serviceCapabilities]: [
+                '@libp2p/service-a'
+            ]
+        };
+    };
+}
+/**
+ * A service with a dependency on service A
+ */
+function serviceB() {
+    return () => {
+        return {
+            [Symbol.toStringTag]: 'service-b',
+            [serviceDependencies]: [
+                '@libp2p/service-a'
+            ]
+        };
+    };
+}
+describe('service dependencies', () => {
+    let node;
+    afterEach(async () => {
+        await stop(node);
+    });
+    it('should start when services have no dependencies', async () => {
+        node = await createLibp2p({
+            services: {
+                a: serviceA()
+            }
+        });
+        expect(node).to.be.ok();
+    });
+    it('should error when service dependencies are unmet', async () => {
+        await expect(createLibp2p({
+            services: {
+                b: serviceB()
+            }
+        })).to.eventually.be.rejected
+            .with.property('name', 'UnmetServiceDependenciesError');
+    });
+    it('should not error when service dependencies are met', async () => {
+        node = await createLibp2p({
+            services: {
+                a: serviceA(),
+                b: serviceB()
+            }
+        });
+        expect(node).to.be.ok();
+    });
+});
+//# sourceMappingURL=service-dependencies.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/service-dependencies.spec.js.map b/node_modules/libp2p/dist/test/core/service-dependencies.spec.js.map
new file mode 100644
index 0000000..f029078
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/service-dependencies.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"service-dependencies.spec.js","sourceRoot":"","sources":["../../../test/core/service-dependencies.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AAClF,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD;;GAEG;AACH,SAAS,QAAQ;IACf,OAAO,GAAG,EAAE;QACV,OAAO;YACL,CAAC,mBAAmB,CAAC,EAAE;gBACrB,mBAAmB;aACpB;SACF,CAAA;IACH,CAAC,CAAA;AACH,CAAC;AAED;;GAEG;AACH,SAAS,QAAQ;IACf,OAAO,GAAG,EAAE;QACV,OAAO;YACL,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,WAAW;YACjC,CAAC,mBAAmB,CAAC,EAAE;gBACrB,mBAAmB;aACpB;SACF,CAAA;IACH,CAAC,CAAA;AACH,CAAC;AAED,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,IAAI,IAAY,CAAA;IAEhB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,IAAI,CAAC,IAAI,CAAC,CAAA;IAClB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,IAAI,GAAG,MAAM,YAAY,CAAC;YACxB,QAAQ,EAAE;gBACR,CAAC,EAAE,QAAQ,EAAE;aACd;SACF,CAAC,CAAA;QAEF,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;IACzB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,MAAM,CAAC,YAAY,CAAC;YACxB,QAAQ,EAAE;gBACR,CAAC,EAAE,QAAQ,EAAE;aACd;SACF,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ;aAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,+BAA+B,CAAC,CAAA;IAC3D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;QAClE,IAAI,GAAG,MAAM,YAAY,CAAC;YACxB,QAAQ,EAAE;gBACR,CAAC,EAAE,QAAQ,EAAE;gBACb,CAAC,EAAE,QAAQ,EAAE;aACd;SACF,CAAC,CAAA;QAEF,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;IACzB,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/status.spec.d.ts b/node_modules/libp2p/dist/test/core/status.spec.d.ts
new file mode 100644
index 0000000..c2df9dc
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/status.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=status.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/status.spec.d.ts.map b/node_modules/libp2p/dist/test/core/status.spec.d.ts.map
new file mode 100644
index 0000000..2a52f6f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/status.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"status.spec.d.ts","sourceRoot":"","sources":["../../../test/core/status.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/status.spec.js b/node_modules/libp2p/dist/test/core/status.spec.js
new file mode 100644
index 0000000..0e2183c
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/status.spec.js
@@ -0,0 +1,25 @@
+/* eslint-env mocha */
+import { stop } from '@libp2p/interface';
+import { expect } from 'aegir/chai';
+import { createLibp2p } from '../../src/index.js';
+describe('status', () => {
+    let libp2p;
+    after(async () => {
+        await stop(libp2p);
+    });
+    it('should have status', async () => {
+        libp2p = await createLibp2p({
+            start: false
+        });
+        expect(libp2p).to.have.property('status', 'stopped');
+        const startP = libp2p.start();
+        expect(libp2p).to.have.property('status', 'starting');
+        await startP;
+        expect(libp2p).to.have.property('status', 'started');
+        const stopP = libp2p.stop();
+        expect(libp2p).to.have.property('status', 'stopping');
+        await stopP;
+        expect(libp2p).to.have.property('status', 'stopped');
+    });
+});
+//# sourceMappingURL=status.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/status.spec.js.map b/node_modules/libp2p/dist/test/core/status.spec.js.map
new file mode 100644
index 0000000..a8c45f9
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/status.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"status.spec.js","sourceRoot":"","sources":["../../../test/core/status.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AACxC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,IAAI,MAAc,CAAA;IAElB,KAAK,CAAC,KAAK,IAAI,EAAE;QACf,MAAM,IAAI,CAAC,MAAM,CAAC,CAAA;IACpB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,KAAK,EAAE,KAAK;SACb,CAAC,CAAA;QAEF,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;QAEpD,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAA;QAE7B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;QAErD,MAAM,MAAM,CAAA;QAEZ,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;QAEpD,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAA;QAE3B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;QAErD,MAAM,KAAK,CAAA;QAEX,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;IACtD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/user-agent.spec.d.ts b/node_modules/libp2p/dist/test/core/user-agent.spec.d.ts
new file mode 100644
index 0000000..7da3708
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/user-agent.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=user-agent.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/user-agent.spec.d.ts.map b/node_modules/libp2p/dist/test/core/user-agent.spec.d.ts.map
new file mode 100644
index 0000000..6f299c5
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/user-agent.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"user-agent.spec.d.ts","sourceRoot":"","sources":["../../../test/core/user-agent.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/user-agent.spec.js b/node_modules/libp2p/dist/test/core/user-agent.spec.js
new file mode 100644
index 0000000..1c911d4
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/user-agent.spec.js
@@ -0,0 +1,17 @@
+import { expect } from 'aegir/chai';
+import { isNode, isElectronMain, isBrowser, isWebWorker } from 'wherearewe';
+import { userAgent } from '../../src/user-agent.js';
+describe('user-agent', () => {
+    it('should include runtime in user agent', () => {
+        if (isNode) {
+            expect(userAgent()).to.include('node/');
+        }
+        else if (isElectronMain) {
+            expect(userAgent()).to.include('electron/');
+        }
+        else if (isBrowser || isWebWorker) {
+            expect(userAgent()).to.include('browser/');
+        }
+    });
+});
+//# sourceMappingURL=user-agent.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/user-agent.spec.js.map b/node_modules/libp2p/dist/test/core/user-agent.spec.js.map
new file mode 100644
index 0000000..1a8c483
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/user-agent.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"user-agent.spec.js","sourceRoot":"","sources":["../../../test/core/user-agent.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,YAAY,CAAA;AAC3E,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAEnD,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,IAAI,MAAM,EAAE,CAAC;YACX,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;QACzC,CAAC;aAAM,IAAI,cAAc,EAAE,CAAC;YAC1B,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;QAC7C,CAAC;aAAM,IAAI,SAAS,IAAI,WAAW,EAAE,CAAC;YACpC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;QAC5C,CAAC;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/get-component.d.ts b/node_modules/libp2p/dist/test/fixtures/get-component.d.ts
new file mode 100644
index 0000000..957fefd
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/get-component.d.ts
@@ -0,0 +1,2 @@
+export declare function getComponent<T = any>(libp2p: any, name: string): T;
+//# sourceMappingURL=get-component.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/get-component.d.ts.map b/node_modules/libp2p/dist/test/fixtures/get-component.d.ts.map
new file mode 100644
index 0000000..7b81941
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/get-component.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-component.d.ts","sourceRoot":"","sources":["../../../test/fixtures/get-component.ts"],"names":[],"mappings":"AAAA,wBAAgB,YAAY,CAAE,CAAC,GAAG,GAAG,EAAG,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,GAAG,CAAC,CAEpE"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/get-component.js b/node_modules/libp2p/dist/test/fixtures/get-component.js
new file mode 100644
index 0000000..081d3ce
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/get-component.js
@@ -0,0 +1,4 @@
+export function getComponent(libp2p, name) {
+    return libp2p.components[name];
+}
+//# sourceMappingURL=get-component.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/get-component.js.map b/node_modules/libp2p/dist/test/fixtures/get-component.js.map
new file mode 100644
index 0000000..f782277
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/get-component.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-component.js","sourceRoot":"","sources":["../../../test/fixtures/get-component.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,YAAY,CAAY,MAAW,EAAE,IAAY;IAC/D,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;AAChC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts
new file mode 100644
index 0000000..f6aed99
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-discovery.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts.map b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts.map
new file mode 100644
index 0000000..45c2948
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-discovery.spec.d.ts","sourceRoot":"","sources":["../../../test/peer-discovery/peer-discovery.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js
new file mode 100644
index 0000000..8f33c36
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js
@@ -0,0 +1,50 @@
+/* eslint-env mocha */
+import { TypedEventEmitter } from '@libp2p/interface';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { createLibp2p } from '../../src/index.js';
+describe('peer discovery', () => {
+    let libp2p;
+    afterEach(async () => {
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+    });
+    it('should start/stop startable discovery on libp2p start/stop', async () => {
+        const discovery = stubInterface();
+        libp2p = await createLibp2p({
+            peerDiscovery: [
+                () => discovery
+            ]
+        });
+        await libp2p.start();
+        expect(discovery.start.calledOnce).to.be.true();
+        expect(discovery.stop.called).to.be.false();
+        await libp2p.stop();
+        expect(discovery.start.calledOnce).to.be.true();
+        expect(discovery.stop.calledOnce).to.be.true();
+    });
+    it('should ignore self on discovery', async () => {
+        const discovery = new TypedEventEmitter();
+        libp2p = await createLibp2p({
+            peerDiscovery: [
+                () => discovery
+            ]
+        });
+        await libp2p.start();
+        const discoverySpy = sinon.spy();
+        libp2p.addEventListener('peer:discovery', discoverySpy);
+        discovery.safeDispatchEvent('peer', {
+            detail: {
+                id: libp2p.peerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/2341')
+                ]
+            }
+        });
+        expect(discoverySpy.called).to.eql(false);
+    });
+});
+//# sourceMappingURL=peer-discovery.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js.map b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js.map
new file mode 100644
index 0000000..64ca0ea
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-discovery.spec.js","sourceRoot":"","sources":["../../../test/peer-discovery/peer-discovery.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,IAAI,MAAc,CAAA;IAElB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC;YACnB,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;QACrB,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,SAAS,GAAG,aAAa,EAA6B,CAAA;QAE5D,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,aAAa,EAAE;gBACb,GAAG,EAAE,CAAC,SAAS;aAChB;SACF,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;QACpB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAC/C,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAE3C,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;QACnB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAC/C,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IAChD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,SAAS,GAAG,IAAI,iBAAiB,EAAuB,CAAA;QAE9D,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,aAAa,EAAE;gBACb,GAAG,EAAE,CAAC,SAAS;aAChB;SACF,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;QACpB,MAAM,YAAY,GAAG,KAAK,CAAC,GAAG,EAAE,CAAA;QAChC,MAAM,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAA;QACvD,SAAS,CAAC,iBAAiB,CAAC,MAAM,EAAE;YAClC,MAAM,EAAE;gBACN,EAAE,EAAE,MAAM,CAAC,MAAM;gBACjB,UAAU,EAAE;oBACV,SAAS,CAAC,+BAA+B,CAAC;iBAC3C;aACF;SACF,CAAC,CAAA;QAEF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IAC3C,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts
new file mode 100644
index 0000000..5a9e16b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-routing.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts.map b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts.map
new file mode 100644
index 0000000..76a499c
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-routing.spec.d.ts","sourceRoot":"","sources":["../../../test/peer-routing/peer-routing.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js
new file mode 100644
index 0000000..04b2bd8
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js
@@ -0,0 +1,373 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { peerRoutingSymbol, NotFoundError } from '@libp2p/interface';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import all from 'it-all';
+import drain from 'it-drain';
+import pDefer from 'p-defer';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { createLibp2p } from '../../src/index.js';
+describe('peer-routing', () => {
+    let peerId;
+    beforeEach(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+    });
+    describe('no routers', () => {
+        let node;
+        beforeEach(async () => {
+            node = await createLibp2p();
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('.findPeer should return an error', async () => {
+            await expect(node.peerRouting.findPeer(peerId))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'NoPeerRoutersError');
+        });
+        it('.getClosestPeers should return an error', async () => {
+            try {
+                for await (const _ of node.peerRouting.getClosestPeers(peerId.toMultihash().bytes)) { } // eslint-disable-line
+                throw new Error('.getClosestPeers should return an error');
+            }
+            catch (err) {
+                expect(err).to.exist();
+                expect(err.name).to.equal('NoPeerRoutersError');
+            }
+        });
+    });
+    describe('via configured service', () => {
+        let node;
+        let router;
+        beforeEach(async () => {
+            router = stubInterface();
+            node = await createLibp2p({
+                services: {
+                    router: () => ({
+                        [peerRoutingSymbol]: router
+                    })
+                }
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the configured service', async () => {
+            const peerInfo = {
+                id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/4001')
+                ]
+            };
+            router.findPeer.callsFake(async function () {
+                return peerInfo;
+            });
+            await expect(node.peerRouting.findPeer(peerInfo.id)).to.eventually.deep.equal(peerInfo);
+        });
+        it('should use the service to get the closest peers', async () => {
+            const deferred = pDefer();
+            router.getClosestPeers.callsFake(async function* () {
+                yield {
+                    id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+                deferred.resolve();
+            });
+            await drain(node.peerRouting.getClosestPeers(Uint8Array.from([0, 1, 2, 3, 4])));
+            await deferred.promise;
+        });
+        it('should error when peer tries to find itself', async () => {
+            await expect(node.peerRouting.findPeer(node.peerId))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'QueriedForSelfError');
+        });
+        it('should handle error thrown synchronously during find peer', async () => {
+            const unknownPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(function () {
+                throw new Error('Thrown sync');
+            });
+            await expect(node.peerRouting.findPeer(unknownPeer))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'NotFoundError');
+        });
+        it('should handle error thrown asynchronously during find peer', async () => {
+            const unknownPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(async function () {
+                throw new Error('Thrown async');
+            });
+            await expect(node.peerRouting.findPeer(unknownPeer))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'NotFoundError');
+        });
+        it('should handle error thrown asynchronously after delay during find peer', async () => {
+            const unknownPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(async function () {
+                await delay(100);
+                throw new Error('Thrown async');
+            });
+            await expect(node.peerRouting.findPeer(unknownPeer))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'NotFoundError');
+        });
+    });
+    describe('via configured peer router', () => {
+        let node;
+        let delegate;
+        beforeEach(async () => {
+            delegate = stubInterface();
+            node = await createLibp2p({
+                peerRouters: [
+                    () => delegate
+                ]
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the delegate router to find peers', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            delegate.findPeer.callsFake(async function () {
+                return {
+                    id: remotePeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+            });
+            expect(delegate.findPeer.called).to.be.false();
+            await node.peerRouting.findPeer(remotePeerId);
+            expect(delegate.findPeer.called).to.be.true();
+        });
+        it('should use the delegate router to get the closest peers', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            delegate.getClosestPeers.callsFake(async function* () {
+                yield {
+                    id: remotePeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+            });
+            expect(delegate.getClosestPeers.called).to.be.false();
+            await drain(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes));
+            expect(delegate.getClosestPeers.called).to.be.true();
+        });
+        it('should error when peer tries to find itself', async () => {
+            await expect(node.peerRouting.findPeer(node.peerId))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'QueriedForSelfError');
+        });
+        it('should handle errors from the delegate when finding closest peers', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            delegate.getClosestPeers.callsFake(async function* () {
+                throw new Error('Could not find closer peers');
+            });
+            expect(delegate.getClosestPeers.called).to.be.false();
+            await expect(drain(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes)))
+                .to.eventually.be.rejectedWith('Could not find closer peers');
+        });
+    });
+    describe('via service and delegate routers', () => {
+        let node;
+        let delegate;
+        let router;
+        beforeEach(async () => {
+            router = stubInterface();
+            delegate = stubInterface();
+            node = await createLibp2p({
+                peerRouters: [
+                    () => delegate
+                ],
+                services: {
+                    router: () => ({
+                        [peerRoutingSymbol]: router
+                    })
+                }
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the delegate if the service fails to find the peer', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            router.findPeer.callsFake(async function () {
+                await delay(100);
+                throw new NotFoundError('Not found');
+            });
+            delegate.findPeer.callsFake(async () => {
+                return results;
+            });
+            const peer = await node.peerRouting.findPeer(remotePeerId);
+            expect(peer).to.eql(results);
+        });
+        it('should not wait for the service to return if the delegate does first', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            const defer = pDefer();
+            router.findPeer.callsFake(async function () {
+                await defer.promise;
+                throw new NotFoundError('Not found');
+            });
+            delegate.findPeer.callsFake(async () => {
+                return results;
+            });
+            const peer = await node.peerRouting.findPeer(remotePeerId);
+            expect(peer).to.eql(results);
+            defer.resolve();
+        });
+        it('should not wait for the delegate to return if the service does first', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            const defer = pDefer();
+            router.findPeer.callsFake(async function () {
+                return result;
+            });
+            delegate.findPeer.callsFake(async () => {
+                await defer.promise;
+                throw new NotFoundError('Not found');
+            });
+            const peer = await node.peerRouting.findPeer(remotePeerId);
+            expect(peer).to.eql(result);
+            defer.resolve(result);
+        });
+        it('should return value when one router errors synchronously and another returns a value', async () => {
+            const peer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(function () {
+                throw new Error('Thrown sync');
+            });
+            delegate.findPeer.callsFake(async function () {
+                return {
+                    id: peer,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+            });
+            await expect(node.peerRouting.findPeer(peer))
+                .to.eventually.deep.equal({
+                id: peer,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            });
+        });
+        it('should return value when one router errors asynchronously and another returns a value', async () => {
+            const peer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(async function () {
+                throw new Error('Thrown async');
+            });
+            delegate.findPeer.callsFake(async function () {
+                return {
+                    id: peer,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+            });
+            await expect(node.peerRouting.findPeer(peer))
+                .to.eventually.deep.equal({
+                id: peer,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            });
+        });
+        it('should store the addresses of the found peer', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/38982')
+                ]
+            };
+            const spy = sinon.spy(node.peerStore, 'merge');
+            router.findPeer.callsFake(async function () {
+                return result;
+            });
+            delegate.findPeer.callsFake(async () => {
+                const deferred = pDefer();
+                return deferred.promise;
+            });
+            await node.peerRouting.findPeer(remotePeerId);
+            expect(spy.calledWith(result.id, {
+                multiaddrs: result.multiaddrs
+            })).to.be.true();
+        });
+        it('should use the delegate if the service fails to get the closest peer', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = [{
+                    id: remotePeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                }];
+            router.getClosestPeers.callsFake(async function* () { });
+            delegate.getClosestPeers.callsFake(async function* () {
+                yield results[0];
+            });
+            const closest = await all(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes));
+            expect(closest).to.have.length.above(0);
+            expect(closest).to.eql(results);
+        });
+        it('should store the addresses of the closest peer', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/38982')
+                ]
+            };
+            const spy = sinon.spy(node.peerStore, 'merge');
+            router.getClosestPeers.callsFake(async function* () { });
+            delegate.getClosestPeers.callsFake(async function* () {
+                yield result;
+            });
+            await drain(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes));
+            expect(spy.calledWith(result.id, {
+                multiaddrs: result.multiaddrs
+            })).to.be.true();
+        });
+        it('should dedupe closest peers', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = [{
+                    id: remotePeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/38982')
+                    ]
+                }];
+            router.getClosestPeers.callsFake(async function* () {
+                for (const peer of results) {
+                    yield peer;
+                }
+            });
+            delegate.getClosestPeers.callsFake(async function* () {
+                yield* results;
+            });
+            const peers = await all(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes));
+            expect(peers).to.be.an('array').with.a.lengthOf(1).that.deep.equals(results);
+        });
+    });
+});
+//# sourceMappingURL=peer-routing.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js.map b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js.map
new file mode 100644
index 0000000..44f03e6
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-routing.spec.js","sourceRoot":"","sources":["../../../test/peer-routing/peer-routing.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAA;AACpE,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,GAAG,MAAM,QAAQ,CAAA;AACxB,OAAO,KAAK,MAAM,UAAU,CAAA;AAC5B,OAAO,MAAM,MAAM,SAAS,CAAA;AAC5B,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAwB,aAAa,EAAE,MAAM,UAAU,CAAA;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,IAAI,MAAc,CAAA;IAElB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;IACjE,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;QAC1B,IAAI,IAAY,CAAA;QAEhB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,IAAI,GAAG,MAAM,YAAY,EAAE,CAAA;QAC7B,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,EAAE,IAAI,EAAE,CAAA;QACpB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC5C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;iBAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAA;QACvD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACvD,IAAI,CAAC;gBACH,IAAI,KAAK,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,sBAAsB;gBAC9G,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAA;YAC5D,CAAC;YAAC,OAAO,GAAQ,EAAE,CAAC;gBAClB,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;gBACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAA;YACjD,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,IAAI,IAAY,CAAA;QAChB,IAAI,MAAoC,CAAA;QAExC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,GAAG,aAAa,EAAe,CAAA;YAErC,IAAI,GAAG,MAAM,YAAY,CAAC;gBACxB,QAAQ,EAAE;oBACR,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;wBACb,CAAC,iBAAiB,CAAC,EAAE,MAAM;qBAC5B,CAAC;iBACH;aACF,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,EAAE,IAAI,EAAE,CAAA;QACpB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACjD,MAAM,QAAQ,GAAG;gBACf,EAAE,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;gBAC1D,UAAU,EAAE;oBACV,SAAS,CAAC,+BAA+B,CAAC;iBAC3C;aACF,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC7B,OAAO,QAAQ,CAAA;YACjB,CAAC,CAAC,CAAA;YAEF,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;QACzF,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAA;YACzB,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC/C,MAAM;oBACJ,EAAE,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;oBAC1D,UAAU,EAAE;wBACV,SAAS,CAAC,gCAAgC,CAAC;qBAC5C;iBACF,CAAA;gBAED,QAAQ,CAAC,OAAO,EAAE,CAAA;YACpB,CAAC,CAAC,CAAA;YAEF,MAAM,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAE/E,MAAM,QAAQ,CAAC,OAAO,CAAA;QACxB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;iBAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAA;QACxD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;YACzE,MAAM,WAAW,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAE1E,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;gBACxB,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;YAChC,CAAC,CAAC,CAAA;YAEF,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;iBACjD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;iBAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,eAAe,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;YAC1E,MAAM,WAAW,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAE1E,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC7B,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;YACjC,CAAC,CAAC,CAAA;YAEF,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;iBACjD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;iBAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,eAAe,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,wEAAwE,EAAE,KAAK,IAAI,EAAE;YACtF,MAAM,WAAW,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAE1E,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC7B,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA;gBAChB,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;YACjC,CAAC,CAAC,CAAA;YAEF,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;iBACjD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;iBAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,eAAe,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAC1C,IAAI,IAAY,CAAA;QAChB,IAAI,QAAsC,CAAA;QAE1C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,QAAQ,GAAG,aAAa,EAAe,CAAA;YAEvC,IAAI,GAAG,MAAM,YAAY,CAAC;gBACxB,WAAW,EAAE;oBACX,GAAG,EAAE,CAAC,QAAQ;iBACf;aACF,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,EAAE,IAAI,EAAE,CAAA;QACpB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC5D,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAE3E,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC/B,OAAO;oBACL,EAAE,EAAE,YAAY;oBAChB,UAAU,EAAE;wBACV,SAAS,CAAC,gCAAgC,CAAC;qBAC5C;iBACF,CAAA;YACH,CAAC,CAAC,CAAA;YAEF,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;YAC9C,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;YAC7C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAC/C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;YACvE,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAE3E,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBACjD,MAAM;oBACJ,EAAE,EAAE,YAAY;oBAChB,UAAU,EAAE;wBACV,SAAS,CAAC,gCAAgC,CAAC;qBAC5C;iBACF,CAAA;YACH,CAAC,CAAC,CAAA;YAEF,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;YACrD,MAAM,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;YAC/E,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACtD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;iBAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAA;QACxD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,mEAAmE,EAAE,KAAK,IAAI,EAAE;YACjF,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAE3E,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBACjD,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAA;YAChD,CAAC,CAAC,CAAA;YAEF,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;YACrD,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;iBACpF,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,CAAC,6BAA6B,CAAC,CAAA;QACjE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAChD,IAAI,IAAY,CAAA;QAChB,IAAI,QAAsC,CAAA;QAC1C,IAAI,MAAoC,CAAA;QAExC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,GAAG,aAAa,EAAe,CAAA;YACrC,QAAQ,GAAG,aAAa,EAAe,CAAA;YAEvC,IAAI,GAAG,MAAM,YAAY,CAAC;gBACxB,WAAW,EAAE;oBACX,GAAG,EAAE,CAAC,QAAQ;iBACf;gBACD,QAAQ,EAAE;oBACR,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;wBACb,CAAC,iBAAiB,CAAC,EAAE,MAAM;qBAC5B,CAAC;iBACH;aACF,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,EAAE,IAAI,EAAE,CAAA;QACpB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;YAC7E,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC3E,MAAM,OAAO,GAAG;gBACd,EAAE,EAAE,YAAY;gBAChB,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC7B,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA;gBAChB,MAAM,IAAI,aAAa,CAAC,WAAW,CAAC,CAAA;YACtC,CAAC,CAAC,CAAA;YACF,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE;gBACrC,OAAO,OAAO,CAAA;YAChB,CAAC,CAAC,CAAA;YAEF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;YAC1D,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QAC9B,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,sEAAsE,EAAE,KAAK,IAAI,EAAE;YACpF,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC3E,MAAM,OAAO,GAAG;gBACd,EAAE,EAAE,YAAY;gBAChB,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAA;YAED,MAAM,KAAK,GAAG,MAAM,EAAE,CAAA;YAEtB,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC7B,MAAM,KAAK,CAAC,OAAO,CAAA;gBACnB,MAAM,IAAI,aAAa,CAAC,WAAW,CAAC,CAAA;YACtC,CAAC,CAAC,CAAA;YACF,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE;gBACrC,OAAO,OAAO,CAAA;YAChB,CAAC,CAAC,CAAA;YAEF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;YAC1D,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YAE5B,KAAK,CAAC,OAAO,EAAE,CAAA;QACjB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,sEAAsE,EAAE,KAAK,IAAI,EAAE;YACpF,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC3E,MAAM,MAAM,GAAG;gBACb,EAAE,EAAE,YAAY;gBAChB,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAA;YAED,MAAM,KAAK,GAAG,MAAM,EAAY,CAAA;YAEhC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC7B,OAAO,MAAM,CAAA;YACf,CAAC,CAAC,CAAA;YACF,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE;gBACrC,MAAM,KAAK,CAAC,OAAO,CAAA;gBACnB,MAAM,IAAI,aAAa,CAAC,WAAW,CAAC,CAAA;YACtC,CAAC,CAAC,CAAA;YAEF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;YAC1D,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YAE3B,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QACvB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,sFAAsF,EAAE,KAAK,IAAI,EAAE;YACpG,MAAM,IAAI,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAEnE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;gBACxB,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;YAChC,CAAC,CAAC,CAAA;YAEF,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC/B,OAAO;oBACL,EAAE,EAAE,IAAI;oBACR,UAAU,EAAE;wBACV,SAAS,CAAC,gCAAgC,CAAC;qBAC5C;iBACF,CAAA;YACH,CAAC,CAAC,CAAA;YAEF,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC1C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;gBACxB,EAAE,EAAE,IAAI;gBACR,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uFAAuF,EAAE,KAAK,IAAI,EAAE;YACrG,MAAM,IAAI,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAEnE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC7B,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;YACjC,CAAC,CAAC,CAAA;YAEF,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC/B,OAAO;oBACL,EAAE,EAAE,IAAI;oBACR,UAAU,EAAE;wBACV,SAAS,CAAC,gCAAgC,CAAC;qBAC5C;iBACF,CAAA;YACH,CAAC,CAAC,CAAA;YAEF,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC1C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;gBACxB,EAAE,EAAE,IAAI;gBACR,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC5D,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC3E,MAAM,MAAM,GAAG;gBACb,EAAE,EAAE,YAAY;gBAChB,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAA;YAED,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;YAE9C,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;gBAC7B,OAAO,MAAM,CAAA;YACf,CAAC,CAAC,CAAA;YACF,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE;gBACrC,MAAM,QAAQ,GAAG,MAAM,EAAY,CAAA;gBAEnC,OAAO,QAAQ,CAAC,OAAO,CAAA;YACzB,CAAC,CAAC,CAAA;YAEF,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;YAE7C,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE;gBAC/B,UAAU,EAAE,MAAM,CAAC,UAAU;aAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAClB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,sEAAsE,EAAE,KAAK,IAAI,EAAE;YACpF,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC3E,MAAM,OAAO,GAAG,CAAC;oBACf,EAAE,EAAE,YAAY;oBAChB,UAAU,EAAE;wBACV,SAAS,CAAC,gCAAgC,CAAC;qBAC5C;iBACF,CAAC,CAAA;YAEF,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC,MAAM,CAAC,CAAC,CAAA;YAEzD,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBACjD,MAAM,OAAO,CAAC,CAAC,CAAC,CAAA;YAClB,CAAC,CAAC,CAAA;YAEF,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;YAE7F,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YACvC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QACjC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAC9D,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC3E,MAAM,MAAM,GAAG;gBACb,EAAE,EAAE,YAAY;gBAChB,UAAU,EAAE;oBACV,SAAS,CAAC,gCAAgC,CAAC;iBAC5C;aACF,CAAA;YAED,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;YAE9C,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC,MAAM,CAAC,CAAC,CAAA;YAEzD,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBACjD,MAAM,MAAM,CAAA;YACd,CAAC,CAAC,CAAA;YAEF,MAAM,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;YAE/E,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE;gBAC/B,UAAU,EAAE,MAAM,CAAC,UAAU;aAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAClB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YAC3C,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;YAC3E,MAAM,OAAO,GAAG,CAAC;oBACf,EAAE,EAAE,YAAY;oBAChB,UAAU,EAAE;wBACV,SAAS,CAAC,gCAAgC,CAAC;qBAC5C;iBACF,CAAC,CAAA;YAEF,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBAC/C,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE,CAAC;oBAC3B,MAAM,IAAI,CAAA;gBACZ,CAAC;YACH,CAAC,CAAC,CAAA;YAEF,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,SAAU,CAAC;gBACjD,KAAM,CAAC,CAAC,OAAO,CAAA;YACjB,CAAC,CAAC,CAAA;YAEF,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;YAE3F,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;QAC9E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts b/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts
new file mode 100644
index 0000000..cba029f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=errors.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts.map b/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts.map
new file mode 100644
index 0000000..4d60319
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"errors.spec.d.ts","sourceRoot":"","sources":["../../../test/registrar/errors.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/errors.spec.js b/node_modules/libp2p/dist/test/registrar/errors.spec.js
new file mode 100644
index 0000000..f273691
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/errors.spec.js
@@ -0,0 +1,46 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core/memory';
+import { stubInterface } from 'sinon-ts';
+import { defaultComponents } from '../../src/components.js';
+import { DefaultConnectionManager } from '../../src/connection-manager/index.js';
+import { Registrar } from '../../src/registrar.js';
+describe('registrar errors', () => {
+    let components;
+    let registrar;
+    let peerId;
+    before(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const events = new TypedEventEmitter();
+        components = defaultComponents({
+            peerId,
+            events,
+            datastore: new MemoryDatastore(),
+            upgrader: stubInterface(),
+            transportManager: stubInterface(),
+            connectionGater: stubInterface()
+        });
+        components.peerStore = persistentPeerStore(components);
+        components.connectionManager = new DefaultConnectionManager(components, {
+            maxConnections: 1000,
+            inboundUpgradeTimeout: 1000
+        });
+        registrar = new Registrar(components);
+    });
+    it('should fail to register a protocol if no multicodec is provided', () => {
+        // @ts-expect-error invalid parameters
+        return expect(registrar.register()).to.eventually.be.rejected();
+    });
+    it('should fail to register a protocol if an invalid topology is provided', () => {
+        const fakeTopology = {
+            random: 1
+        };
+        // @ts-expect-error invalid parameters
+        return expect(registrar.register(fakeTopology)).to.eventually.be.rejected();
+    });
+});
+//# sourceMappingURL=errors.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/errors.spec.js.map b/node_modules/libp2p/dist/test/registrar/errors.spec.js.map
new file mode 100644
index 0000000..3aca3e3
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/errors.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"errors.spec.js","sourceRoot":"","sources":["../../../test/registrar/errors.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAA;AACxD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAA;AACvD,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,iBAAiB,EAAE,MAAM,yBAAyB,CAAA;AAC3D,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAA;AAChF,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAA;AAKlD,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,IAAI,UAAsB,CAAA;IAC1B,IAAI,SAAoB,CAAA;IACxB,IAAI,MAAc,CAAA;IAElB,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,MAAM,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAC/D,MAAM,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAA;QACtC,UAAU,GAAG,iBAAiB,CAAC;YAC7B,MAAM;YACN,MAAM;YACN,SAAS,EAAE,IAAI,eAAe,EAAE;YAChC,QAAQ,EAAE,aAAa,EAAY;YACnC,gBAAgB,EAAE,aAAa,EAAoB;YACnD,eAAe,EAAE,aAAa,EAAmB;SAClD,CAAC,CAAA;QACF,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAA;QACtD,UAAU,CAAC,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YACtE,cAAc,EAAE,IAAI;YACpB,qBAAqB,EAAE,IAAI;SAC5B,CAAC,CAAA;QACF,SAAS,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,CAAA;IACvC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iEAAiE,EAAE,GAAG,EAAE;QACzE,sCAAsC;QACtC,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAA;IACjE,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;QAC/E,MAAM,YAAY,GAAG;YACnB,MAAM,EAAE,CAAC;SACV,CAAA;QAED,sCAAsC;QACtC,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAA;IAC7E,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts b/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts
new file mode 100644
index 0000000..ec9f636
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=protocols.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts.map b/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts.map
new file mode 100644
index 0000000..e4e211a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"protocols.spec.d.ts","sourceRoot":"","sources":["../../../test/registrar/protocols.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/protocols.spec.js b/node_modules/libp2p/dist/test/registrar/protocols.spec.js
new file mode 100644
index 0000000..a2fbebd
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/protocols.spec.js
@@ -0,0 +1,63 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import pDefer from 'p-defer';
+import { createLibp2p } from '../../src/index.js';
+describe('registrar protocols', () => {
+    let libp2p;
+    let registrar;
+    beforeEach(async () => {
+        const deferred = pDefer();
+        libp2p = await createLibp2p({
+            services: {
+                test: (components) => {
+                    deferred.resolve(components);
+                }
+            }
+        });
+        const components = await deferred.promise;
+        registrar = components.registrar;
+    });
+    afterEach(async () => {
+        await libp2p?.stop();
+    });
+    it('should be able to register and unregister a handler', async () => {
+        expect(registrar.getProtocols()).to.not.have.any.keys(['/echo/1.0.0', '/echo/1.0.1']);
+        const echoHandler = () => { };
+        await libp2p.handle(['/echo/1.0.0', '/echo/1.0.1'], echoHandler);
+        expect(registrar.getHandler('/echo/1.0.0')).to.have.property('handler', echoHandler);
+        expect(registrar.getHandler('/echo/1.0.1')).to.have.property('handler', echoHandler);
+        await libp2p.unhandle(['/echo/1.0.0']);
+        expect(registrar.getProtocols()).to.not.have.any.keys(['/echo/1.0.0']);
+        expect(registrar.getHandler('/echo/1.0.1')).to.have.property('handler', echoHandler);
+        await expect(libp2p.peerStore.get(libp2p.peerId)).to.eventually.have.deep.property('protocols', [
+            '/echo/1.0.1'
+        ]);
+    });
+    it('should error if registering two handlers for the same protocol', async () => {
+        const echoHandler = () => { };
+        await libp2p.handle('/echo/1.0.0', echoHandler);
+        await expect(libp2p.handle('/echo/1.0.0', echoHandler)).to.eventually.be.rejected
+            .with.property('name', 'DuplicateProtocolHandlerError');
+    });
+    it('should error if registering two handlers for the same protocols', async () => {
+        const echoHandler = () => { };
+        await libp2p.handle('/echo/1.0.0', echoHandler);
+        await expect(libp2p.handle(['/echo/2.0.0', '/echo/1.0.0'], echoHandler)).to.eventually.be.rejected
+            .with.property('name', 'DuplicateProtocolHandlerError');
+    });
+    it('should not error if force-registering two handlers for the same protocol', async () => {
+        const echoHandler = () => { };
+        await libp2p.handle('/echo/1.0.0', echoHandler);
+        await expect(libp2p.handle('/echo/1.0.0', echoHandler, {
+            force: true
+        })).to.eventually.be.ok;
+    });
+    it('should not error if force-registering two handlers for the same protocols', async () => {
+        const echoHandler = () => { };
+        await libp2p.handle('/echo/1.0.0', echoHandler);
+        await expect(libp2p.handle(['/echo/2.0.0', '/echo/1.0.0'], echoHandler, {
+            force: true
+        })).to.eventually.be.ok;
+    });
+});
+//# sourceMappingURL=protocols.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/protocols.spec.js.map b/node_modules/libp2p/dist/test/registrar/protocols.spec.js.map
new file mode 100644
index 0000000..7f7c497
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/protocols.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"protocols.spec.js","sourceRoot":"","sources":["../../../test/registrar/protocols.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts b/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts
new file mode 100644
index 0000000..49a8668
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=registrar.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts.map b/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts.map
new file mode 100644
index 0000000..222915a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"registrar.spec.d.ts","sourceRoot":"","sources":["../../../test/registrar/registrar.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/registrar.spec.js b/node_modules/libp2p/dist/test/registrar/registrar.spec.js
new file mode 100644
index 0000000..23be6e7
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/registrar.spec.js
@@ -0,0 +1,340 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerFilter } from '@libp2p/peer-collections';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import pDefer from 'p-defer';
+import { stubInterface } from 'sinon-ts';
+import { Registrar } from '../../src/registrar.js';
+const protocol = '/test/1.0.0';
+describe('registrar topologies', () => {
+    let registrar;
+    let peerId;
+    before(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+    });
+    let peerStore;
+    let events;
+    beforeEach(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        peerStore = stubInterface();
+        events = new TypedEventEmitter();
+        registrar = new Registrar({
+            peerId,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+    });
+    it('should be able to register a protocol', async () => {
+        const topology = {
+            onConnect: () => { },
+            onDisconnect: () => { }
+        };
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(0);
+        const identifier = await registrar.register(protocol, topology);
+        expect(identifier).to.exist();
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(1);
+    });
+    it('should be able to unregister a protocol', async () => {
+        const topology = {
+            onConnect: () => { },
+            onDisconnect: () => { }
+        };
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(0);
+        const identifier = await registrar.register(protocol, topology);
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(1);
+        registrar.unregister(identifier);
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(0);
+    });
+    it('should not error if unregistering unregistered topology handler', () => {
+        registrar.unregister('bad-identifier');
+    });
+    it('should call onConnect handler for connected peers after register', async () => {
+        const onConnectDefer = pDefer();
+        const onDisconnectDefer = pDefer();
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = stubInterface({
+            remotePeer: remotePeerId,
+            limits: undefined
+        });
+        const topology = {
+            onConnect: (peerId, connection) => {
+                expect(peerId.equals(remotePeerId)).to.be.true();
+                expect(connection).to.equal(conn);
+                onConnectDefer.resolve();
+            },
+            onDisconnect: (peerId) => {
+                expect(peerId.equals(remotePeerId)).to.be.true();
+                onDisconnectDefer.resolve();
+            }
+        };
+        // Register protocol
+        await registrar.register(protocol, topology);
+        // Peer data is in the peer store
+        peerStore.get.withArgs(remotePeerId).resolves({
+            id: remotePeerId,
+            addresses: [],
+            protocols: [protocol],
+            metadata: new Map(),
+            tags: new Map()
+        });
+        // remote peer connects
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: conn
+            }
+        });
+        await onConnectDefer.promise;
+        // remote peer disconnects
+        await conn.close();
+        events.safeDispatchEvent('peer:disconnect', {
+            detail: remotePeerId
+        });
+        await onDisconnectDefer.promise;
+    });
+    it('should call onConnect handler after register, once a peer is connected and protocols are updated', async () => {
+        const onConnectDefer = pDefer();
+        const onDisconnectDefer = pDefer();
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = stubInterface({
+            remotePeer: remotePeerId,
+            limits: undefined
+        });
+        const topology = {
+            onConnect: () => {
+                onConnectDefer.resolve();
+            },
+            onDisconnect: () => {
+                onDisconnectDefer.resolve();
+            }
+        };
+        // Register protocol
+        await registrar.register(protocol, topology);
+        // remote peer connects
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: conn
+            }
+        });
+        // Can get details after identify
+        peerStore.get.withArgs(conn.remotePeer).resolves({
+            id: conn.remotePeer,
+            addresses: [],
+            protocols: [protocol],
+            metadata: new Map(),
+            tags: new Map()
+        });
+        // identify completes
+        events.safeDispatchEvent('peer:update', {
+            detail: {
+                peer: {
+                    id: conn.remotePeer,
+                    protocols: [protocol],
+                    addresses: [],
+                    metadata: new Map()
+                }
+            }
+        });
+        await onConnectDefer.promise;
+        // Peer no longer supports the protocol our topology is registered for
+        events.safeDispatchEvent('peer:update', {
+            detail: {
+                peer: {
+                    id: conn.remotePeer,
+                    protocols: [],
+                    addresses: [],
+                    metadata: new Map()
+                },
+                previous: {
+                    id: conn.remotePeer,
+                    protocols: [protocol],
+                    addresses: [],
+                    metadata: new Map()
+                }
+            }
+        });
+        await onDisconnectDefer.promise;
+    });
+    it('should not call topology handlers for limited connection', async () => {
+        const onConnectDefer = pDefer();
+        const onDisconnectDefer = pDefer();
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        // connection is limited
+        const conn = stubInterface({
+            remotePeer: remotePeerId,
+            limits: {
+                bytes: 100n
+            }
+        });
+        const topology = {
+            onConnect: () => {
+                onConnectDefer.reject(new Error('Topolgy onConnect called for limited connection'));
+            },
+            onDisconnect: () => {
+                onDisconnectDefer.reject(new Error('Topolgy onDisconnect called for limited connection'));
+            }
+        };
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // remote peer connects
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: conn
+            }
+        });
+        await expect(Promise.any([
+            onConnectDefer.promise,
+            onDisconnectDefer.promise,
+            new Promise((resolve) => {
+                setTimeout(() => {
+                    resolve();
+                }, 1000);
+            })
+        ])).to.eventually.not.be.rejected();
+    });
+    it('should call topology onConnect handler for limited connection when explicitly requested', async () => {
+        const onConnectDefer = pDefer();
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        // connection is limited
+        const conn = stubInterface({
+            remotePeer: remotePeerId,
+            limits: {
+                bytes: 100n
+            }
+        });
+        const topology = {
+            notifyOnLimitedConnection: true,
+            onConnect: () => {
+                onConnectDefer.resolve();
+            }
+        };
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // remote peer connects
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: conn
+            }
+        });
+        await expect(onConnectDefer.promise).to.eventually.be.undefined();
+    });
+    it('should call topology handlers for non-limited connection opened after limited connection', async () => {
+        const onConnectDefer = pDefer();
+        let callCount = 0;
+        const topology = {
+            notifyOnLimitedConnection: true,
+            onConnect: () => {
+                callCount++;
+                if (callCount === 2) {
+                    onConnectDefer.resolve();
+                }
+            }
+        };
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const limitedConnection = stubInterface({
+            remotePeer: remotePeerId,
+            limits: {
+                bytes: 100n
+            }
+        });
+        const nonLimitedConnection = stubInterface({
+            remotePeer: remotePeerId,
+            limits: undefined
+        });
+        // remote peer connects over limited connection
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: limitedConnection
+            }
+        });
+        // remote peer opens non-limited connection
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: nonLimitedConnection
+            }
+        });
+        await expect(onConnectDefer.promise).to.eventually.be.undefined();
+    });
+    it('should use a filter to prevent duplicate onConnect notifications', async () => {
+        const topology = stubInterface({
+            filter: peerFilter(1024)
+        });
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const connection = stubInterface({
+            remotePeer: remotePeerId,
+            limits: undefined
+        });
+        // remote peer runs identify a few times
+        for (let i = 0; i < 5; i++) {
+            events.safeDispatchEvent('peer:identify', {
+                detail: {
+                    peerId: remotePeerId,
+                    protocols: [protocol],
+                    connection
+                }
+            });
+        }
+        // remote peer updates details a few times
+        for (let i = 0; i < 5; i++) {
+            events.safeDispatchEvent('peer:update', {
+                detail: {
+                    peer: {
+                        id: remotePeerId,
+                        protocols: [protocol]
+                    },
+                    previous: {
+                        protocols: []
+                    }
+                }
+            });
+        }
+        // should only have notified once
+        expect(topology.onConnect).to.have.property('callCount', 1);
+    });
+    it('should use a filter to prevent onDisconnect notifications that had no previous onConnect notification', async () => {
+        const topology = stubInterface({
+            filter: peerFilter(1024)
+        });
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        // peer exists in peer store with the regsitered protocol
+        peerStore.get.withArgs(remotePeerId).resolves(stubInterface({
+            protocols: [protocol]
+        }));
+        // the peer disconnects
+        events.safeDispatchEvent('peer:disconnect', {
+            detail: remotePeerId
+        });
+        // should not have notified
+        expect(topology.onConnect).to.have.property('called', false);
+        expect(topology.onDisconnect).to.have.property('called', false);
+    });
+});
+//# sourceMappingURL=registrar.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/registrar.spec.js.map b/node_modules/libp2p/dist/test/registrar/registrar.spec.js.map
new file mode 100644
index 0000000..42c4369
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/registrar.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"registrar.spec.js","sourceRoot":"","sources":["../../../test/registrar/registrar.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts b/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts
new file mode 100644
index 0000000..9f7b811
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=transport-manager.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts.map b/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts.map
new file mode 100644
index 0000000..edad9da
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"transport-manager.spec.d.ts","sourceRoot":"","sources":["../../../test/transports/transport-manager.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.spec.js b/node_modules/libp2p/dist/test/transports/transport-manager.spec.js
new file mode 100644
index 0000000..19b1794
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.spec.js
@@ -0,0 +1,159 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter, start, stop, FaultTolerance } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core';
+import { pEvent } from 'p-event';
+import pWaitFor from 'p-wait-for';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { AddressManager } from '../../src/address-manager/index.js';
+import { DefaultTransportManager } from '../../src/transport-manager.js';
+const listenAddr = multiaddr('/ip4/127.0.0.1/tcp/0');
+const addrs = [
+    multiaddr('/memory/address-1'),
+    multiaddr('/memory/address-2')
+];
+const testTransportTag = 'test-transport';
+describe('Transport Manager', () => {
+    let tm;
+    let components;
+    let transport;
+    beforeEach(async () => {
+        const events = new TypedEventEmitter();
+        components = {
+            peerId: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            events,
+            upgrader: stubInterface({
+                upgradeInbound: Sinon.stub().resolves(),
+                upgradeOutbound: async (ma) => stubInterface(ma)
+            }),
+            logger: defaultLogger(),
+            datastore: new MemoryDatastore()
+        };
+        components.addressManager = new AddressManager(components, { listen: [listenAddr.toString()] });
+        components.peerStore = persistentPeerStore(components);
+        components.transportManager = tm = new DefaultTransportManager(components, {
+            faultTolerance: FaultTolerance.NO_FATAL
+        });
+        await start(tm);
+        transport = stubInterface({
+            dial: async () => stubInterface(),
+            dialFilter: (addrs) => {
+                return addrs.filter(ma => ma.toString().startsWith('/memory'));
+            },
+            listenFilter: (addrs) => {
+                return addrs.filter(ma => ma.toString().startsWith('/memory'));
+            },
+            createListener: () => {
+                let addr;
+                const closeListeners = [];
+                return stubInterface({
+                    listen: async (a) => {
+                        addr = a;
+                    },
+                    getAddrs: () => addr != null ? [addr] : [],
+                    close: async () => {
+                        addr = undefined;
+                        closeListeners.forEach(fn => {
+                            fn();
+                        });
+                    },
+                    addEventListener: (event, handler) => {
+                        if (event === 'close') {
+                            closeListeners.push(handler);
+                        }
+                    }
+                });
+            }
+        });
+        transport[Symbol.toStringTag] = testTransportTag;
+    });
+    afterEach(async () => {
+        await tm.removeAll();
+        await stop(tm);
+        expect(tm.getTransports()).to.be.empty();
+    });
+    it('should be able to add and remove a transport', async () => {
+        expect(tm.getTransports()).to.have.lengthOf(0);
+        tm.add(transport);
+        expect(tm.getTransports()).to.have.lengthOf(1);
+        await tm.remove(testTransportTag);
+        expect(tm.getTransports()).to.have.lengthOf(0);
+    });
+    it('should not be able to add a transport twice', async () => {
+        tm.add(transport);
+        expect(() => {
+            tm.add(transport);
+        })
+            .to.throw()
+            .and.to.have.property('name', 'InvalidParametersError');
+    });
+    it('should fail to dial an unsupported address', async () => {
+        tm.add(transport);
+        const addr = multiaddr('/ip4/127.0.0.1/tcp/0');
+        await expect(tm.dial(addr))
+            .to.eventually.be.rejected()
+            .and.to.have.property('name', 'TransportUnavailableError');
+    });
+    it('should fail to listen with no valid address', async () => {
+        tm = new DefaultTransportManager(components);
+        tm.add(transport);
+        await expect(start(tm))
+            .to.eventually.be.rejected()
+            .and.to.have.property('name', 'NoValidAddressesError');
+        await stop(tm);
+    });
+    it('should be able to add and remove a transport', async () => {
+        expect(tm.getTransports()).to.have.lengthOf(0);
+        tm.add(transport);
+        expect(tm.getTransports()).to.have.lengthOf(1);
+        await tm.remove(testTransportTag);
+        expect(tm.getTransports()).to.have.lengthOf(0);
+    });
+    it('should be able to listen', async () => {
+        expect(tm.getTransports()).to.be.empty();
+        tm.add(transport);
+        expect(tm.getTransports()).to.have.lengthOf(1);
+        const spyListener = Sinon.spy(transport, 'createListener');
+        await tm.listen(addrs);
+        expect(tm.getAddrs().length).to.equal(addrs.length);
+        await tm.stop();
+        expect(spyListener.called).to.be.true();
+    });
+    it('should be able to dial', async () => {
+        tm.add(transport);
+        await tm.listen(addrs);
+        const addr = tm.getAddrs().shift();
+        if (addr == null) {
+            throw new Error('Could not find addr');
+        }
+        const connection = await tm.dial(addr);
+        expect(connection).to.exist();
+        await connection.close();
+    });
+    it('should remove listeners when they stop listening', async () => {
+        tm.add(transport);
+        expect(tm.getListeners()).to.have.lengthOf(0);
+        const spyListener = Sinon.spy(transport, 'createListener');
+        await tm.listen(addrs);
+        expect(spyListener.callCount).to.equal(addrs.length);
+        // wait for listeners to start listening
+        await pWaitFor(async () => {
+            return tm.getListeners().length === addrs.length;
+        });
+        // wait for listeners to stop listening
+        const closePromise = Promise.all(spyListener.getCalls().map(async (call) => {
+            return pEvent(call.returnValue, 'close');
+        }));
+        await Promise.all(tm.getListeners().map(async (l) => { await l.close(); }));
+        await closePromise;
+        expect(tm.getListeners()).to.have.lengthOf(0);
+        await tm.stop();
+    });
+});
+//# sourceMappingURL=transport-manager.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.spec.js.map b/node_modules/libp2p/dist/test/transports/transport-manager.spec.js.map
new file mode 100644
index 0000000..32bdb90
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"transport-manager.spec.js","sourceRoot":"","sources":["../../../test/transports/transport-manager.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAClF,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAA;AACxD,OAAO,EAAE,SAAS,EAAkB,MAAM,yBAAyB,CAAA;AACnE,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAA;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAA;AAChC,OAAO,QAAQ,MAAM,YAAY,CAAA;AACjC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAA;AACnE,OAAO,EAAE,uBAAuB,EAAE,MAAM,gCAAgC,CAAA;AAIxE,MAAM,UAAU,GAAG,SAAS,CAAC,sBAAsB,CAAC,CAAA;AACpD,MAAM,KAAK,GAAG;IACZ,SAAS,CAAC,mBAAmB,CAAC;IAC9B,SAAS,CAAC,mBAAmB,CAAC;CAC/B,CAAA;AACD,MAAM,gBAAgB,GAAG,gBAAgB,CAAA;AAEzC,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,IAAI,EAA2B,CAAA;IAC/B,IAAI,UAAsB,CAAA;IAC1B,IAAI,SAAoB,CAAA;IAExB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAA;QACtC,UAAU,GAAG;YACX,MAAM,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;YAC9D,MAAM;YACN,QAAQ,EAAE,aAAa,CAAW;gBAChC,cAAc,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;gBACvC,eAAe,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,aAAa,CAAa,EAAE,CAAC;aAC7D,CAAC;YACF,MAAM,EAAE,aAAa,EAAE;YACvB,SAAS,EAAE,IAAI,eAAe,EAAE;SAC1B,CAAA;QACR,UAAU,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAA;QAC/F,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAA;QAEtD,UAAU,CAAC,gBAAgB,GAAG,EAAE,GAAG,IAAI,uBAAuB,CAAC,UAAU,EAAE;YACzE,cAAc,EAAE,cAAc,CAAC,QAAQ;SACxC,CAAC,CAAA;QACF,MAAM,KAAK,CAAC,EAAE,CAAC,CAAA;QAEf,SAAS,GAAG,aAAa,CAAY;YACnC,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,aAAa,EAAc;YAC7C,UAAU,EAAE,CAAC,KAAK,EAAE,EAAE;gBACpB,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAA;YAChE,CAAC;YACD,YAAY,EAAE,CAAC,KAAK,EAAE,EAAE;gBACtB,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAA;YAChE,CAAC;YACD,cAAc,EAAE,GAAG,EAAE;gBACnB,IAAI,IAA2B,CAAA;gBAC/B,MAAM,cAAc,GAAsB,EAAE,CAAA;gBAE5C,OAAO,aAAa,CAAW;oBAC7B,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;wBAClB,IAAI,GAAG,CAAC,CAAA;oBACV,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC1C,KAAK,EAAE,KAAK,IAAI,EAAE;wBAChB,IAAI,GAAG,SAAS,CAAA;wBAChB,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;4BAC1B,EAAE,EAAE,CAAA;wBACN,CAAC,CAAC,CAAA;oBACJ,CAAC;oBACD,gBAAgB,EAAE,CAAC,KAAK,EAAE,OAAY,EAAE,EAAE;wBACxC,IAAI,KAAK,KAAK,OAAO,EAAE,CAAC;4BACtB,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;wBAC9B,CAAC;oBACH,CAAC;iBACF,CAAC,CAAA;YACJ,CAAC;SACF,CAAC,CAAA;QACF,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,gBAAgB,CAAA;IAClD,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,EAAE,CAAC,SAAS,EAAE,CAAA;QACpB,MAAM,IAAI,CAAC,EAAE,CAAC,CAAA;QACd,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAC9C,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QAEjB,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAC9C,MAAM,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAA;QACjC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAChD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QAEjB,MAAM,CAAC,GAAG,EAAE;YACV,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QACnB,CAAC,CAAC;aACC,EAAE,CAAC,KAAK,EAAE;aACV,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAA;IAC3D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QACjB,MAAM,IAAI,GAAG,SAAS,CAAC,sBAAsB,CAAC,CAAA;QAC9C,MAAM,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACxB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;aAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAA;IAC9D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,EAAE,GAAG,IAAI,uBAAuB,CAAC,UAAU,CAAC,CAAA;QAC5C,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QAEjB,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aACpB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;aAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAA;QAExD,MAAM,IAAI,CAAC,EAAE,CAAC,CAAA;IAChB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAC9C,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QACjB,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAC9C,MAAM,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAA;QACjC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAChD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACxC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAExC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QAEjB,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE9C,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAA;QAC1D,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QAEtB,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QACnD,MAAM,EAAE,CAAC,IAAI,EAAE,CAAA;QACf,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IACzC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QACjB,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QACtB,MAAM,IAAI,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAA;QAElC,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;QACxC,CAAC;QAED,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACtC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC7B,MAAM,UAAU,CAAC,KAAK,EAAE,CAAA;IAC1B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QAEjB,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE7C,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAA;QAE1D,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QAEtB,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QAEpD,wCAAwC;QACxC,MAAM,QAAQ,CAAC,KAAK,IAAI,EAAE;YACxB,OAAO,EAAE,CAAC,YAAY,EAAE,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAAA;QAClD,CAAC,CAAC,CAAA;QAEF,uCAAuC;QACvC,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAC9B,WAAW,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,EAAC,EAAE;YACtC,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA;QAC1C,CAAC,CAAC,CACH,CAAA;QAED,MAAM,OAAO,CAAC,GAAG,CACf,EAAE,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,KAAK,EAAC,CAAC,EAAC,EAAE,GAAG,MAAM,CAAC,CAAC,KAAK,EAAE,CAAA,CAAC,CAAC,CAAC,CACtD,CAAA;QAED,MAAM,YAAY,CAAA;QAElB,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE7C,MAAM,EAAE,CAAC,IAAI,EAAE,CAAA;IACjB,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts
new file mode 100644
index 0000000..9763583
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=upgrader.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts.map b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts.map
new file mode 100644
index 0000000..aa71154
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"upgrader.spec.d.ts","sourceRoot":"","sources":["../../../test/upgrading/upgrader.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js
new file mode 100644
index 0000000..890023d
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js
@@ -0,0 +1,527 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { logger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import drain from 'it-drain';
+import { encode } from 'it-length-prefixed';
+import map from 'it-map';
+import { pEvent } from 'p-event';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { DefaultUpgrader } from '../../src/upgrader.js';
+import { createDefaultUpgraderComponents } from './utils.js';
+describe('upgrader', () => {
+    let init;
+    const encrypterProtocol = '/test-encrypter';
+    const muxerProtocol = '/test-muxer';
+    let remotePeer;
+    let remoteAddr;
+    let maConn;
+    class BoomCrypto {
+        static protocol = encrypterProtocol;
+        protocol = encrypterProtocol;
+        async secureInbound() { throw new Error('Boom'); }
+        async secureOutbound() { throw new Error('Boom'); }
+    }
+    beforeEach(async () => {
+        remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        remoteAddr = multiaddr(`/ip4/123.123.123.123/tcp/1234/p2p/${remotePeer}`);
+        init = {
+            connectionEncrypters: [
+                stubInterface({
+                    protocol: encrypterProtocol,
+                    secureOutbound: async (connection) => ({
+                        conn: connection,
+                        remotePeer
+                    }),
+                    secureInbound: async (connection) => ({
+                        conn: connection,
+                        remotePeer
+                    })
+                })
+            ],
+            streamMuxers: [
+                stubInterface({
+                    protocol: muxerProtocol,
+                    createStreamMuxer: () => stubInterface({
+                        protocol: muxerProtocol,
+                        sink: async (source) => drain(source),
+                        source: (async function* () { })()
+                    })
+                })
+            ]
+        };
+        maConn = stubInterface({
+            remoteAddr,
+            log: logger('test'),
+            sink: async (source) => drain(source),
+            source: map((async function* () {
+                yield '/multistream/1.0.0\n';
+                yield `${encrypterProtocol}\n`;
+                yield `${muxerProtocol}\n`;
+            })(), str => encode.single(uint8ArrayFromString(str)))
+        });
+    });
+    it('should upgrade outbound with valid muxers and crypto', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), init);
+        const conn = await upgrader.upgradeOutbound(maConn);
+        expect(conn.encryption).to.equal(encrypterProtocol);
+        expect(conn.multiplexer).to.equal(muxerProtocol);
+    });
+    it('should upgrade outbound with only crypto', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            streamMuxers: []
+        });
+        const connection = await upgrader.upgradeOutbound(maConn);
+        await expect(connection.newStream('/echo/1.0.0')).to.eventually.be.rejected
+            .with.property('name', 'MuxerUnavailableError');
+    });
+    it('should use a private connection protector when provided for inbound connections', async () => {
+        const connectionProtector = stubInterface();
+        connectionProtector.protect.callsFake(async (conn) => conn);
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionProtector
+        }), init);
+        await upgrader.upgradeInbound(maConn);
+        expect(connectionProtector.protect.callCount).to.equal(1);
+    });
+    it('should use a private connection protector when provided for outbound connections', async () => {
+        const connectionProtector = stubInterface();
+        connectionProtector.protect.callsFake(async (conn) => conn);
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionProtector
+        }), init);
+        await upgrader.upgradeOutbound(maConn);
+        expect(connectionProtector.protect.callCount).to.equal(1);
+    });
+    it('should fail inbound if crypto fails', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            connectionEncrypters: [
+                new BoomCrypto()
+            ]
+        });
+        await expect(upgrader.upgradeInbound(maConn)).to.eventually.be.rejected
+            .with.property('name', 'EncryptionFailedError');
+    });
+    it('should fail outbound if crypto fails', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            connectionEncrypters: [
+                new BoomCrypto()
+            ]
+        });
+        await expect(upgrader.upgradeOutbound(maConn)).to.eventually.be.rejected
+            .with.property('name', 'EncryptionFailedError');
+    });
+    it('should abort if inbound upgrade is slow', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            inboundUpgradeTimeout: 100
+        });
+        maConn.source = map(maConn.source, async (buf) => {
+            await delay(2000);
+            return buf;
+        });
+        await expect(upgrader.upgradeOutbound(maConn)).to.eventually.be.rejected
+            .with.property('message').that.include('aborted');
+    });
+    it('should abort if outbound upgrade is slow', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            outboundUpgradeTimeout: 100
+        });
+        maConn.source = map(maConn.source, async (buf) => {
+            await delay(2000);
+            return buf;
+        });
+        await expect(upgrader.upgradeOutbound(maConn)).to.eventually.be.rejected
+            .with.property('message').that.include('aborted');
+    });
+    it('should abort by signal if inbound upgrade is slow', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            inboundUpgradeTimeout: 10000
+        });
+        maConn.source = map(maConn.source, async (buf) => {
+            await delay(2000);
+            return buf;
+        });
+        await expect(upgrader.upgradeOutbound(maConn, {
+            signal: AbortSignal.timeout(100)
+        })).to.eventually.be.rejected
+            .with.property('message').that.include('aborted');
+    });
+    it('should abort by signal if outbound upgrade is slow', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            outboundUpgradeTimeout: 10000
+        });
+        maConn.source = map(maConn.source, async (buf) => {
+            await delay(2000);
+            return buf;
+        });
+        await expect(upgrader.upgradeOutbound(maConn, {
+            signal: AbortSignal.timeout(100)
+        })).to.eventually.be.rejected
+            .with.property('message').that.include('aborted');
+    });
+    it('should not abort if inbound upgrade is successful', async () => {
+        const components = await createDefaultUpgraderComponents();
+        const upgrader = new DefaultUpgrader(components, {
+            ...init,
+            inboundUpgradeTimeout: 100
+        });
+        const connectionPromise = pEvent(components.events, 'connection:open');
+        await upgrader.upgradeInbound(maConn);
+        const event = await connectionPromise;
+        await delay(1000);
+        // connections should still be open after timeout
+        expect(event.detail.status).to.equal('open');
+    });
+    it('should not abort if outbound upgrade is successful', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            inboundUpgradeTimeout: 100
+        });
+        const conn = await upgrader.upgradeOutbound(maConn);
+        await delay(1000);
+        // connections should still be open after timeout
+        expect(conn.status).to.equal('open');
+    });
+    it('should not abort by signal if inbound upgrade is successful', async () => {
+        const components = await createDefaultUpgraderComponents();
+        const upgrader = new DefaultUpgrader(components, {
+            ...init,
+            inboundUpgradeTimeout: 10000
+        });
+        const connectionPromise = pEvent(components.events, 'connection:open');
+        await upgrader.upgradeInbound(maConn, {
+            signal: AbortSignal.timeout(100)
+        });
+        const event = await connectionPromise;
+        await delay(1000);
+        // connections should still be open after timeout
+        expect(event.detail.status).to.equal('open');
+    });
+    it('should not abort by signal if outbound upgrade is successful', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            inboundUpgradeTimeout: 10000
+        });
+        const conn = await upgrader.upgradeOutbound(maConn, {
+            signal: AbortSignal.timeout(100)
+        });
+        await delay(1000);
+        // connections should still be open after timeout
+        expect(conn.status).to.equal('open');
+    });
+    it('should abort protocol selection for slow outbound stream creation', async () => {
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            streamMuxers: [
+                stubInterface({
+                    protocol: muxerProtocol,
+                    createStreamMuxer: () => stubInterface({
+                        protocol: muxerProtocol,
+                        sink: async (source) => drain(source),
+                        source: (async function* () { })(),
+                        newStream: () => stubInterface({
+                            id: 'stream-id',
+                            log: logger('test-stream'),
+                            sink: async (source) => drain(source),
+                            source: (async function* () {
+                                await delay(2000);
+                                yield Uint8Array.from([0, 1, 2, 3, 4]);
+                            })()
+                        })
+                    })
+                })
+            ]
+        });
+        const conn = await upgrader.upgradeOutbound(maConn);
+        await expect(conn.newStream('/echo/1.0.0', {
+            signal: AbortSignal.timeout(100)
+        })).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+    });
+    it('should abort stream when protocol negotiation fails on outbound stream', async () => {
+        let stream;
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents(), {
+            ...init,
+            streamMuxers: [
+                stubInterface({
+                    protocol: muxerProtocol,
+                    createStreamMuxer: () => stubInterface({
+                        protocol: muxerProtocol,
+                        sink: async (source) => drain(source),
+                        source: (async function* () {
+                            await delay(2000);
+                            yield Uint8Array.from([0, 1, 2, 3, 4]);
+                        })(),
+                        newStream: () => {
+                            stream = stubInterface({
+                                id: 'stream-id',
+                                log: logger('test-stream'),
+                                sink: async (source) => drain(source),
+                                source: map((async function* () {
+                                    yield '/multistream/1.0.0\n';
+                                    yield '/different/protocol\n';
+                                })(), str => encode.single(uint8ArrayFromString(str)))
+                            });
+                            return stream;
+                        }
+                    })
+                })
+            ]
+        });
+        const conn = await upgrader.upgradeOutbound(maConn);
+        await expect(conn.newStream('/foo/1.0.0'))
+            .to.eventually.be.rejected.with.property('name', 'UnsupportedProtocolError');
+        // wait for remote to close
+        await delay(100);
+        expect(stream?.abort).to.have.property('called', true);
+    });
+    it('should allow skipping outbound encryption and protection', async () => {
+        const connectionProtector = stubInterface();
+        const connectionEncrypter = stubInterface({
+            protocol: encrypterProtocol
+        });
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionProtector
+        }), {
+            ...init,
+            connectionEncrypters: [
+                connectionEncrypter
+            ]
+        });
+        await upgrader.upgradeOutbound(maConn, {
+            skipEncryption: true,
+            skipProtection: true,
+            muxerFactory: stubInterface({
+                createStreamMuxer: () => stubInterface({
+                    protocol: muxerProtocol,
+                    sink: async (source) => drain(source),
+                    source: (async function* () { })()
+                })
+            })
+        });
+        expect(connectionProtector.protect).to.have.property('called', false);
+        expect(connectionEncrypter.secureOutbound).to.have.property('called', false);
+    });
+    it('should allow skipping inbound encryption and protection', async () => {
+        const connectionProtector = stubInterface();
+        const connectionEncrypter = stubInterface({
+            protocol: encrypterProtocol
+        });
+        const upgrader = new DefaultUpgrader(await createDefaultUpgraderComponents({
+            connectionProtector
+        }), {
+            ...init,
+            connectionEncrypters: [
+                connectionEncrypter
+            ]
+        });
+        await upgrader.upgradeInbound(maConn, {
+            skipEncryption: true,
+            skipProtection: true,
+            muxerFactory: stubInterface({
+                createStreamMuxer: () => stubInterface({
+                    protocol: muxerProtocol,
+                    sink: async (source) => drain(source),
+                    source: (async function* () { })()
+                })
+            })
+        });
+        expect(connectionProtector.protect).to.have.property('called', false);
+        expect(connectionEncrypter.secureOutbound).to.have.property('called', false);
+    });
+    it('should not decrement inbound pending connection count if the connection is denied', async () => {
+        const components = await createDefaultUpgraderComponents({
+            connectionManager: stubInterface({
+                acceptIncomingConnection: async () => false
+            })
+        });
+        const upgrader = new DefaultUpgrader(components, init);
+        await expect(upgrader.upgradeInbound(maConn)).to.eventually.be.rejected
+            .with.property('name', 'ConnectionDeniedError');
+        expect(components.connectionManager.afterUpgradeInbound).to.have.property('called', false);
+    });
+    it('should limit the number of incoming streams that can be opened using a protocol', async () => {
+        const protocol = '/test/protocol';
+        const maxInboundStreams = 2;
+        let streamMuxerInit;
+        let streamMuxer;
+        const components = await createDefaultUpgraderComponents({
+            registrar: stubInterface({
+                getHandler: () => ({
+                    options: {
+                        maxInboundStreams
+                    },
+                    handler: Sinon.stub()
+                }),
+                getProtocols: () => [protocol]
+            })
+        });
+        const upgrader = new DefaultUpgrader(components, {
+            ...init,
+            streamMuxers: [
+                stubInterface({
+                    protocol: muxerProtocol,
+                    createStreamMuxer: (init) => {
+                        streamMuxerInit = init;
+                        streamMuxer = stubInterface({
+                            protocol: muxerProtocol,
+                            sink: async (source) => drain(source),
+                            source: (async function* () { })(),
+                            streams: []
+                        });
+                        return streamMuxer;
+                    }
+                })
+            ]
+        });
+        const connectionPromise = pEvent(components.events, 'connection:open');
+        await upgrader.upgradeInbound(maConn);
+        const event = await connectionPromise;
+        expect(event.detail.streams).to.have.lengthOf(0);
+        for (let i = 0; i < (maxInboundStreams + 1); i++) {
+            const incomingStream = stubInterface({
+                id: `stream-id-${i}`,
+                log: logger('test-stream'),
+                direction: 'inbound',
+                sink: async (source) => drain(source),
+                source: map((async function* () {
+                    yield '/multistream/1.0.0\n';
+                    yield `${protocol}\n`;
+                })(), str => encode.single(uint8ArrayFromString(str)))
+            });
+            streamMuxer?.streams.push(incomingStream);
+            streamMuxerInit?.onIncomingStream?.(incomingStream);
+        }
+        await delay(100);
+        expect(streamMuxer?.streams).to.have.lengthOf(3);
+        expect(streamMuxer?.streams[0]).to.have.nested.property('abort.called', false);
+        expect(streamMuxer?.streams[1]).to.have.nested.property('abort.called', false);
+        expect(streamMuxer?.streams[2]).to.have.nested.property('abort.called', true);
+    });
+    it('should limit the number of outgoing streams that can be opened using a protocol', async () => {
+        const protocol = '/test/protocol';
+        const maxOutboundStreams = 2;
+        let streamMuxer;
+        const components = await createDefaultUpgraderComponents({
+            registrar: stubInterface({
+                getHandler: () => ({
+                    options: {
+                        maxOutboundStreams
+                    },
+                    handler: Sinon.stub()
+                }),
+                getProtocols: () => [protocol]
+            })
+        });
+        const upgrader = new DefaultUpgrader(components, {
+            ...init,
+            streamMuxers: [
+                stubInterface({
+                    protocol: muxerProtocol,
+                    createStreamMuxer: () => {
+                        streamMuxer = stubInterface({
+                            protocol: muxerProtocol,
+                            sink: async (source) => drain(source),
+                            source: (async function* () { })(),
+                            streams: [],
+                            newStream: () => {
+                                const outgoingStream = stubInterface({
+                                    id: 'stream-id',
+                                    log: logger('test-stream'),
+                                    direction: 'outbound',
+                                    sink: async (source) => drain(source),
+                                    source: map((async function* () {
+                                        yield '/multistream/1.0.0\n';
+                                        yield `${protocol}\n`;
+                                    })(), str => encode.single(uint8ArrayFromString(str)))
+                                });
+                                streamMuxer?.streams.push(outgoingStream);
+                                return outgoingStream;
+                            }
+                        });
+                        return streamMuxer;
+                    }
+                })
+            ]
+        });
+        const connectionPromise = pEvent(components.events, 'connection:open');
+        await upgrader.upgradeInbound(maConn);
+        const event = await connectionPromise;
+        const conn = event.detail;
+        expect(conn.streams).to.have.lengthOf(0);
+        await conn.newStream(protocol);
+        await conn.newStream(protocol);
+        await expect(conn.newStream(protocol)).to.eventually.be.rejected
+            .with.property('name', 'TooManyOutboundProtocolStreamsError');
+    });
+    it('should allow overriding the number of outgoing streams that can be opened using a protocol without a handler', async () => {
+        const protocol = '/test/protocol';
+        let streamMuxer;
+        const components = await createDefaultUpgraderComponents({
+            registrar: stubInterface({
+                getHandler: () => ({
+                    options: {},
+                    handler: Sinon.stub()
+                }),
+                getProtocols: () => [protocol]
+            })
+        });
+        const upgrader = new DefaultUpgrader(components, {
+            ...init,
+            streamMuxers: [
+                stubInterface({
+                    protocol: muxerProtocol,
+                    createStreamMuxer: () => {
+                        streamMuxer = stubInterface({
+                            protocol: muxerProtocol,
+                            sink: async (source) => drain(source),
+                            source: (async function* () { })(),
+                            streams: [],
+                            newStream: () => {
+                                const outgoingStream = stubInterface({
+                                    id: 'stream-id',
+                                    log: logger('test-stream'),
+                                    direction: 'outbound',
+                                    sink: async (source) => drain(source),
+                                    source: map((async function* () {
+                                        yield '/multistream/1.0.0\n';
+                                        yield `${protocol}\n`;
+                                    })(), str => encode.single(uint8ArrayFromString(str)))
+                                });
+                                streamMuxer?.streams.push(outgoingStream);
+                                return outgoingStream;
+                            }
+                        });
+                        return streamMuxer;
+                    }
+                })
+            ]
+        });
+        const connectionPromise = pEvent(components.events, 'connection:open');
+        await upgrader.upgradeInbound(maConn);
+        const event = await connectionPromise;
+        const conn = event.detail;
+        expect(conn.streams).to.have.lengthOf(0);
+        const opts = {
+            maxOutboundStreams: 3
+        };
+        await conn.newStream(protocol, opts);
+        await conn.newStream(protocol, opts);
+        await conn.newStream(protocol, opts);
+        await expect(conn.newStream(protocol, opts)).to.eventually.be.rejected
+            .with.property('name', 'TooManyOutboundProtocolStreamsError');
+    });
+});
+//# sourceMappingURL=upgrader.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js.map b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js.map
new file mode 100644
index 0000000..84bdf1b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"upgrader.spec.js","sourceRoot":"","sources":["../../../test/upgrading/upgrader.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/utils.d.ts b/node_modules/libp2p/dist/test/upgrading/utils.d.ts
new file mode 100644
index 0000000..d8bd956
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/utils.d.ts
@@ -0,0 +1,17 @@
+import { type StubbedInstance } from 'sinon-ts';
+import type { DefaultUpgraderComponents } from '../../src/upgrader.js';
+import type { ConnectionGater, PeerId, PeerStore, TypedEventTarget, Libp2pEvents, ComponentLogger, Metrics, ConnectionProtector } from '@libp2p/interface';
+import type { ConnectionManager, Registrar } from '@libp2p/interface-internal';
+export interface StubbedDefaultUpgraderComponents {
+    peerId: PeerId;
+    metrics?: StubbedInstance<Metrics>;
+    connectionManager: StubbedInstance<ConnectionManager>;
+    connectionGater: StubbedInstance<ConnectionGater>;
+    connectionProtector?: StubbedInstance<ConnectionProtector>;
+    registrar: StubbedInstance<Registrar>;
+    peerStore: StubbedInstance<PeerStore>;
+    events: TypedEventTarget<Libp2pEvents>;
+    logger: ComponentLogger;
+}
+export declare function createDefaultUpgraderComponents(options?: Partial<DefaultUpgraderComponents>): Promise<StubbedDefaultUpgraderComponents>;
+//# sourceMappingURL=utils.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/utils.d.ts.map b/node_modules/libp2p/dist/test/upgrading/utils.d.ts.map
new file mode 100644
index 0000000..f999435
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../test/upgrading/utils.ts"],"names":[],"mappings":"AAMA,OAAO,EAAiB,KAAK,eAAe,EAAE,MAAM,UAAU,CAAA;AAC9D,OAAO,KAAK,EAAE,yBAAyB,EAAE,MAAM,uBAAuB,CAAA;AACtE,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,SAAS,EAAE,gBAAgB,EAAE,YAAY,EAAE,eAAe,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAA;AAC1J,OAAO,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAA;AAE9E,MAAM,WAAW,gCAAgC;IAC/C,MAAM,EAAE,MAAM,CAAA;IACd,OAAO,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC,CAAA;IAClC,iBAAiB,EAAE,eAAe,CAAC,iBAAiB,CAAC,CAAA;IACrD,eAAe,EAAE,eAAe,CAAC,eAAe,CAAC,CAAA;IACjD,mBAAmB,CAAC,EAAE,eAAe,CAAC,mBAAmB,CAAC,CAAA;IAC1D,SAAS,EAAE,eAAe,CAAC,SAAS,CAAC,CAAA;IACrC,SAAS,EAAE,eAAe,CAAC,SAAS,CAAC,CAAA;IACrC,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,CAAA;IACtC,MAAM,EAAE,eAAe,CAAA;CACxB;AAED,wBAAsB,+BAA+B,CAAE,OAAO,CAAC,EAAE,OAAO,CAAC,yBAAyB,CAAC,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAe9I"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/utils.js b/node_modules/libp2p/dist/test/upgrading/utils.js
new file mode 100644
index 0000000..4d46cae
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/utils.js
@@ -0,0 +1,23 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { stubInterface } from 'sinon-ts';
+export async function createDefaultUpgraderComponents(options) {
+    return {
+        peerId: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+        connectionManager: stubInterface({
+            acceptIncomingConnection: async () => true
+        }),
+        connectionGater: stubInterface(),
+        registrar: stubInterface(),
+        peerStore: stubInterface({
+            all: async () => []
+        }),
+        events: new TypedEventEmitter(),
+        logger: defaultLogger(),
+        ...options
+    };
+}
+//# sourceMappingURL=utils.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/utils.js.map b/node_modules/libp2p/dist/test/upgrading/utils.js.map
new file mode 100644
index 0000000..9bfebb2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/utils.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../test/upgrading/utils.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,aAAa,EAAwB,MAAM,UAAU,CAAA;AAiB9D,MAAM,CAAC,KAAK,UAAU,+BAA+B,CAAE,OAA4C;IACjG,OAAO;QACL,MAAM,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;QAC9D,iBAAiB,EAAE,aAAa,CAAoB;YAClD,wBAAwB,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;SAC3C,CAAC;QACF,eAAe,EAAE,aAAa,EAAmB;QACjD,SAAS,EAAE,aAAa,EAAa;QACrC,SAAS,EAAE,aAAa,CAAY;YAClC,GAAG,EAAE,KAAK,IAAI,EAAE,CAAC,EAAE;SACpB,CAAC;QACF,MAAM,EAAE,IAAI,iBAAiB,EAAE;QAC/B,MAAM,EAAE,aAAa,EAAE;QACvB,GAAG,OAAO;KACO,CAAA;AACrB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/tsconfig.tsbuildinfo b/node_modules/libp2p/dist/tsconfig.tsbuildinfo
new file mode 100644
index 0000000..e23a18e
--- /dev/null
+++ b/node_modules/libp2p/dist/tsconfig.tsbuildinfo
@@ -0,0 +1 @@
+{"program":{"fileNames":["../../../node_modules/typescript/lib/lib.es5.d.ts","../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../node_modules/typescript/lib/lib.es2021.d.ts","../../../node_modules/typescript/lib/lib.es2022.d.ts","../../../node_modules/typescript/lib/lib.es2023.d.ts","../../../node_modules/typescript/lib/lib.dom.d.ts","../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../node_modules/typescript/lib/lib.webworker.d.ts","../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../node_modules/typescript/lib/lib.es2021.promise.d.ts","../../../node_modules/typescript/lib/lib.es2021.string.d.ts","../../../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../../node_modules/typescript/lib/lib.es2021.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.array.d.ts","../../../node_modules/typescript/lib/lib.es2022.error.d.ts","../../../node_modules/typescript/lib/lib.es2022.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.object.d.ts","../../../node_modules/typescript/lib/lib.es2022.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2022.string.d.ts","../../../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2023.array.d.ts","../../../node_modules/typescript/lib/lib.es2023.collection.d.ts","../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../node_modules/multiformats/dist/src/bases/interface.d.ts","../../../node_modules/multiformats/dist/src/block/interface.d.ts","../../../node_modules/multiformats/dist/src/hashes/interface.d.ts","../../../node_modules/multiformats/dist/src/link/interface.d.ts","../../../node_modules/multiformats/dist/src/cid.d.ts","../../../node_modules/uint8arraylist/dist/src/index.d.ts","../../interface/dist/src/keys.d.ts","../../interface/dist/src/peer-id.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/protocols-table.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/index.d.ts","../../../node_modules/progress-events/dist/src/index.d.ts","../../../node_modules/@multiformats/dns/dist/src/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/dnsaddr.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/index.d.ts","../../../node_modules/it-stream-types/dist/src/index.d.ts","../../interface/dist/src/connection.d.ts","../../interface/dist/src/peer-info.d.ts","../../interface/dist/src/content-routing.d.ts","../../interface/dist/src/event-target.d.ts","../../interface/dist/src/metrics.d.ts","../../interface/dist/src/peer-routing.d.ts","../../interface/dist/src/peer-store.d.ts","../../interface/dist/src/startable.d.ts","../../interface/dist/src/stream-handler.d.ts","../../interface/dist/src/topology.d.ts","../../interface/dist/src/stream-muxer.d.ts","../../interface/dist/src/transport.d.ts","../../interface/dist/src/connection-encrypter.d.ts","../../interface/dist/src/connection-gater.d.ts","../../interface/dist/src/peer-discovery.d.ts","../../../node_modules/it-pushable/dist/src/index.d.ts","../../interface/dist/src/pubsub.d.ts","../../interface/dist/src/record.d.ts","../../interface/dist/src/errors.d.ts","../../../node_modules/@types/node/compatibility/disposable.d.ts","../../../node_modules/@types/node/compatibility/indexable.d.ts","../../../node_modules/@types/node/compatibility/iterators.d.ts","../../../node_modules/@types/node/compatibility/index.d.ts","../../../node_modules/@types/node/ts5.6/globals.typedarray.d.ts","../../../node_modules/@types/node/ts5.6/buffer.buffer.d.ts","../../../node_modules/buffer/index.d.ts","../../../node_modules/undici-types/header.d.ts","../../../node_modules/undici-types/readable.d.ts","../../../node_modules/undici-types/file.d.ts","../../../node_modules/undici-types/fetch.d.ts","../../../node_modules/undici-types/formdata.d.ts","../../../node_modules/undici-types/connector.d.ts","../../../node_modules/undici-types/client.d.ts","../../../node_modules/undici-types/errors.d.ts","../../../node_modules/undici-types/dispatcher.d.ts","../../../node_modules/undici-types/global-dispatcher.d.ts","../../../node_modules/undici-types/global-origin.d.ts","../../../node_modules/undici-types/pool-stats.d.ts","../../../node_modules/undici-types/pool.d.ts","../../../node_modules/undici-types/handlers.d.ts","../../../node_modules/undici-types/balanced-pool.d.ts","../../../node_modules/undici-types/agent.d.ts","../../../node_modules/undici-types/mock-interceptor.d.ts","../../../node_modules/undici-types/mock-agent.d.ts","../../../node_modules/undici-types/mock-client.d.ts","../../../node_modules/undici-types/mock-pool.d.ts","../../../node_modules/undici-types/mock-errors.d.ts","../../../node_modules/undici-types/proxy-agent.d.ts","../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../node_modules/undici-types/retry-handler.d.ts","../../../node_modules/undici-types/retry-agent.d.ts","../../../node_modules/undici-types/api.d.ts","../../../node_modules/undici-types/interceptors.d.ts","../../../node_modules/undici-types/util.d.ts","../../../node_modules/undici-types/cookies.d.ts","../../../node_modules/undici-types/patch.d.ts","../../../node_modules/undici-types/websocket.d.ts","../../../node_modules/undici-types/eventsource.d.ts","../../../node_modules/undici-types/filereader.d.ts","../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../node_modules/undici-types/content-type.d.ts","../../../node_modules/undici-types/cache.d.ts","../../../node_modules/undici-types/index.d.ts","../../../node_modules/@types/node/globals.d.ts","../../../node_modules/@types/node/assert.d.ts","../../../node_modules/@types/node/assert/strict.d.ts","../../../node_modules/@types/node/async_hooks.d.ts","../../../node_modules/@types/node/buffer.d.ts","../../../node_modules/@types/node/child_process.d.ts","../../../node_modules/@types/node/cluster.d.ts","../../../node_modules/@types/node/console.d.ts","../../../node_modules/@types/node/constants.d.ts","../../../node_modules/@types/node/crypto.d.ts","../../../node_modules/@types/node/dgram.d.ts","../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../node_modules/@types/node/dns.d.ts","../../../node_modules/@types/node/dns/promises.d.ts","../../../node_modules/@types/node/domain.d.ts","../../../node_modules/@types/node/dom-events.d.ts","../../../node_modules/@types/node/events.d.ts","../../../node_modules/@types/node/fs.d.ts","../../../node_modules/@types/node/fs/promises.d.ts","../../../node_modules/@types/node/http.d.ts","../../../node_modules/@types/node/http2.d.ts","../../../node_modules/@types/node/https.d.ts","../../../node_modules/@types/node/inspector.d.ts","../../../node_modules/@types/node/module.d.ts","../../../node_modules/@types/node/net.d.ts","../../../node_modules/@types/node/os.d.ts","../../../node_modules/@types/node/path.d.ts","../../../node_modules/@types/node/perf_hooks.d.ts","../../../node_modules/@types/node/process.d.ts","../../../node_modules/@types/node/punycode.d.ts","../../../node_modules/@types/node/querystring.d.ts","../../../node_modules/@types/node/readline.d.ts","../../../node_modules/@types/node/readline/promises.d.ts","../../../node_modules/@types/node/repl.d.ts","../../../node_modules/@types/node/sea.d.ts","../../../node_modules/@types/node/sqlite.d.ts","../../../node_modules/@types/node/stream.d.ts","../../../node_modules/@types/node/stream/promises.d.ts","../../../node_modules/@types/node/stream/consumers.d.ts","../../../node_modules/@types/node/stream/web.d.ts","../../../node_modules/@types/node/string_decoder.d.ts","../../../node_modules/@types/node/test.d.ts","../../../node_modules/@types/node/timers.d.ts","../../../node_modules/@types/node/timers/promises.d.ts","../../../node_modules/@types/node/tls.d.ts","../../../node_modules/@types/node/trace_events.d.ts","../../../node_modules/@types/node/tty.d.ts","../../../node_modules/@types/node/url.d.ts","../../../node_modules/@types/node/util.d.ts","../../../node_modules/@types/node/v8.d.ts","../../../node_modules/@types/node/vm.d.ts","../../../node_modules/@types/node/wasi.d.ts","../../../node_modules/@types/node/worker_threads.d.ts","../../../node_modules/@types/node/zlib.d.ts","../../../node_modules/@types/node/ts5.6/index.d.ts","../../interface/dist/src/events.d.ts","../../interface/dist/src/index.d.ts","../../logger/dist/src/index.d.ts","../src/errors.ts","../../interface-internal/dist/src/address-manager.d.ts","../../peer-collections/dist/src/map.d.ts","../../peer-collections/dist/src/set.d.ts","../../peer-collections/dist/src/list.d.ts","../../peer-collections/dist/src/filter.d.ts","../../peer-collections/dist/src/tracked-map.d.ts","../../peer-collections/dist/src/tracked-set.d.ts","../../peer-collections/dist/src/tracked-list.d.ts","../../peer-collections/dist/src/index.d.ts","../../interface-internal/dist/src/connection-manager.d.ts","../../interface-internal/dist/src/random-walk.d.ts","../../interface-internal/dist/src/registrar.d.ts","../../interface-internal/dist/src/transport-manager.d.ts","../../interface-internal/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/codecs/interface.d.ts","../../../node_modules/multiformats/dist/src/codecs/json.d.ts","../../../node_modules/multiformats/dist/src/codecs/raw.d.ts","../../../node_modules/multiformats/dist/src/bytes.d.ts","../../../node_modules/multiformats/dist/src/hashes/digest.d.ts","../../../node_modules/multiformats/dist/src/hashes/hasher.d.ts","../../../node_modules/multiformats/dist/src/varint.d.ts","../../../node_modules/multiformats/dist/src/interface.d.ts","../../../node_modules/multiformats/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/bases/base.d.ts","../../../node_modules/multiformats/dist/src/basics.d.ts","../../../node_modules/uint8arrays/dist/src/util/bases.d.ts","../../../node_modules/uint8arrays/dist/src/to-string.d.ts","../../../node_modules/interface-datastore/dist/src/key.d.ts","../../../node_modules/interface-store/dist/src/errors.d.ts","../../../node_modules/interface-store/dist/src/index.d.ts","../../../node_modules/interface-datastore/dist/src/index.d.ts","../src/components.ts","../../../node_modules/merge-options/index.d.ts","../../crypto/dist/src/keys/interface.d.ts","../../crypto/dist/src/keys/ecdh/index.d.ts","../../crypto/dist/src/keys/key-stretcher.d.ts","../../crypto/dist/src/keys/index.d.ts","../../peer-id/dist/src/index.d.ts","../../peer-store/dist/src/index.d.ts","../../../node_modules/datastore-core/dist/src/base.d.ts","../../../node_modules/datastore-core/dist/src/memory.d.ts","../../../node_modules/uint8arrays/dist/src/concat.d.ts","../../../node_modules/uint8arrays/dist/src/from-string.d.ts","../../../node_modules/@chainsafe/is-ip/lib/is-ip.d.ts","../../utils/dist/src/debounce.d.ts","../../utils/dist/src/filters/bloom-filter.d.ts","../../utils/dist/src/filters/hashes.d.ts","../../utils/dist/src/filters/cuckoo-filter.d.ts","../../utils/dist/src/filters/scalable-cuckoo-filter.d.ts","../../utils/dist/src/filters/fingerprint.d.ts","../../utils/dist/src/filters/bucket.d.ts","../../utils/dist/src/filters/index.d.ts","../../utils/dist/src/private-ip.d.ts","../../../node_modules/@multiformats/multiaddr-matcher/dist/src/index.d.ts","../src/address-manager/dns-mappings.ts","../src/address-manager/ip-mappings.ts","../../utils/dist/src/multiaddr/is-link-local.d.ts","../../utils/dist/src/multiaddr/is-private.d.ts","../src/address-manager/observed-addresses.ts","../../utils/dist/src/multiaddr/is-network-address.d.ts","../src/address-manager/transport-addresses.ts","../src/address-manager/index.ts","../src/config/connection-gater.ts","../../utils/dist/src/rate-limiter.d.ts","../src/get-peer.ts","../../utils/dist/src/close.d.ts","../src/connection-manager/constants.defaults.ts","../src/connection-manager/constants.ts","../../../node_modules/@chainsafe/netmask/dist/src/util.d.ts","../../../node_modules/@chainsafe/netmask/dist/src/ip.d.ts","../../../node_modules/@chainsafe/netmask/dist/src/ipnet.d.ts","../../../node_modules/@chainsafe/netmask/dist/src/cidr.d.ts","../../../node_modules/@chainsafe/netmask/dist/src/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/convert.d.ts","../src/connection-manager/utils.ts","../src/connection-manager/connection-pruner.ts","../../../node_modules/p-defer/index.d.ts","../../utils/dist/src/queue/recipient.d.ts","../../utils/dist/src/queue/job.d.ts","../../utils/dist/src/queue/index.d.ts","../../utils/dist/src/priority-queue.d.ts","../../../node_modules/any-signal/dist/src/index.d.ts","../../utils/dist/src/multiaddr/is-loopback.d.ts","../src/connection-manager/address-sorter.ts","../src/connection-manager/dial-queue.ts","../../utils/dist/src/peer-queue.d.ts","../../../node_modules/@types/retry/index.d.ts","../../../node_modules/p-retry/index.d.ts","../src/connection-manager/reconnect-queue.ts","../src/connection-manager/index.ts","../../crypto/dist/src/hmac/index.d.ts","../../crypto/dist/src/pbkdf2.d.ts","../../crypto/dist/src/random-bytes.d.ts","../../crypto/dist/src/index.d.ts","../../utils/dist/src/adaptive-timeout.d.ts","../../../node_modules/it-byte-stream/dist/src/index.d.ts","../src/connection-monitor.ts","../../../node_modules/it-merge/dist/src/index.d.ts","../src/content-routing.ts","../../../node_modules/it-parallel/dist/src/index.d.ts","../src/peer-routing.ts","../../../node_modules/race-event/dist/src/index.d.ts","../../../node_modules/race-signal/dist/src/index.d.ts","../src/random-walk.ts","../src/registrar.ts","../../utils/dist/src/tracked-map.d.ts","../src/transport-manager.ts","../../multistream-select/dist/src/constants.d.ts","../../../node_modules/it-length-prefixed-stream/dist/src/index.d.ts","../../multistream-select/dist/src/select.d.ts","../../multistream-select/dist/src/handle.d.ts","../../multistream-select/dist/src/index.d.ts","../src/connection/index.ts","../src/upgrader.ts","../src/version.ts","../src/user-agent.ts","../src/libp2p.ts","../src/index.ts","../src/config.ts","../src/user-agent.browser.ts","../../../node_modules/react-native/types/modules/batchedbridge.d.ts","../../../node_modules/react-native/libraries/vendor/emitter/eventemitter.d.ts","../../../node_modules/react-native/types/modules/codegen.d.ts","../../../node_modules/react-native/types/modules/devtools.d.ts","../../../node_modules/react-native/types/modules/globals.d.ts","../../../node_modules/react-native/types/modules/launchscreen.d.ts","../../../node_modules/react-native/types/private/utilities.d.ts","../../../node_modules/react-native/types/public/insets.d.ts","../../../node_modules/react-native/types/public/reactnativetypes.d.ts","../../../node_modules/react-native/libraries/types/coreeventtypes.d.ts","../../../node_modules/react-native/types/public/reactnativerenderer.d.ts","../../../node_modules/react-native/libraries/components/touchable/touchable.d.ts","../../../node_modules/react-native/libraries/components/view/viewaccessibility.d.ts","../../../node_modules/react-native/libraries/components/view/viewproptypes.d.ts","../../../node_modules/react-native/libraries/components/refreshcontrol/refreshcontrol.d.ts","../../../node_modules/react-native/libraries/components/scrollview/scrollview.d.ts","../../../node_modules/react-native/libraries/components/view/view.d.ts","../../../node_modules/react-native/libraries/image/imageresizemode.d.ts","../../../node_modules/react-native/libraries/image/imagesource.d.ts","../../../node_modules/react-native/libraries/image/image.d.ts","../../../node_modules/@react-native/virtualized-lists/lists/virtualizedlist.d.ts","../../../node_modules/@react-native/virtualized-lists/index.d.ts","../../../node_modules/react-native/libraries/lists/flatlist.d.ts","../../../node_modules/react-native/libraries/reactnative/rendererproxy.d.ts","../../../node_modules/react-native/libraries/lists/sectionlist.d.ts","../../../node_modules/react-native/libraries/text/text.d.ts","../../../node_modules/react-native/libraries/animated/animated.d.ts","../../../node_modules/react-native/libraries/stylesheet/stylesheettypes.d.ts","../../../node_modules/react-native/libraries/stylesheet/stylesheet.d.ts","../../../node_modules/react-native/libraries/stylesheet/processcolor.d.ts","../../../node_modules/react-native/libraries/actionsheetios/actionsheetios.d.ts","../../../node_modules/react-native/libraries/alert/alert.d.ts","../../../node_modules/react-native/libraries/animated/easing.d.ts","../../../node_modules/react-native/libraries/animated/useanimatedvalue.d.ts","../../../node_modules/react-native/libraries/eventemitter/rctdeviceeventemitter.d.ts","../../../node_modules/react-native/libraries/eventemitter/rctnativeappeventemitter.d.ts","../../../node_modules/react-native/libraries/appstate/appstate.d.ts","../../../node_modules/react-native/libraries/batchedbridge/nativemodules.d.ts","../../../node_modules/react-native/libraries/components/accessibilityinfo/accessibilityinfo.d.ts","../../../node_modules/react-native/libraries/components/activityindicator/activityindicator.d.ts","../../../node_modules/react-native/libraries/components/clipboard/clipboard.d.ts","../../../node_modules/react-native/libraries/components/drawerandroid/drawerlayoutandroid.d.ts","../../../node_modules/react-native/libraries/eventemitter/nativeeventemitter.d.ts","../../../node_modules/react-native/libraries/components/keyboard/keyboard.d.ts","../../../node_modules/react-native/types/private/timermixin.d.ts","../../../node_modules/react-native/libraries/components/keyboard/keyboardavoidingview.d.ts","../../../node_modules/react-native/libraries/components/pressable/pressable.d.ts","../../../node_modules/react-native/libraries/components/progressbarandroid/progressbarandroid.d.ts","../../../node_modules/react-native/libraries/components/safeareaview/safeareaview.d.ts","../../../node_modules/react-native/libraries/components/statusbar/statusbar.d.ts","../../../node_modules/react-native/libraries/components/switch/switch.d.ts","../../../node_modules/react-native/libraries/components/textinput/inputaccessoryview.d.ts","../../../node_modules/react-native/libraries/components/textinput/textinput.d.ts","../../../node_modules/react-native/libraries/components/toastandroid/toastandroid.d.ts","../../../node_modules/react-native/libraries/components/touchable/touchablewithoutfeedback.d.ts","../../../node_modules/react-native/libraries/components/touchable/touchablehighlight.d.ts","../../../node_modules/react-native/libraries/components/touchable/touchableopacity.d.ts","../../../node_modules/react-native/libraries/components/touchable/touchablenativefeedback.d.ts","../../../node_modules/react-native/libraries/components/button.d.ts","../../../node_modules/react-native/libraries/core/registercallablemodule.d.ts","../../../node_modules/react-native/libraries/interaction/interactionmanager.d.ts","../../../node_modules/react-native/libraries/interaction/panresponder.d.ts","../../../node_modules/react-native/libraries/layoutanimation/layoutanimation.d.ts","../../../node_modules/react-native/libraries/linking/linking.d.ts","../../../node_modules/react-native/libraries/logbox/logbox.d.ts","../../../node_modules/react-native/libraries/modal/modal.d.ts","../../../node_modules/react-native/libraries/performance/systrace.d.ts","../../../node_modules/react-native/libraries/permissionsandroid/permissionsandroid.d.ts","../../../node_modules/react-native/libraries/pushnotificationios/pushnotificationios.d.ts","../../../node_modules/react-native/libraries/utilities/iperformancelogger.d.ts","../../../node_modules/react-native/libraries/reactnative/appregistry.d.ts","../../../node_modules/react-native/libraries/reactnative/i18nmanager.d.ts","../../../node_modules/react-native/libraries/reactnative/roottag.d.ts","../../../node_modules/react-native/libraries/reactnative/uimanager.d.ts","../../../node_modules/react-native/libraries/reactnative/requirenativecomponent.d.ts","../../../node_modules/react-native/libraries/settings/settings.d.ts","../../../node_modules/react-native/libraries/share/share.d.ts","../../../node_modules/react-native/libraries/stylesheet/platformcolorvaluetypesios.d.ts","../../../node_modules/react-native/libraries/stylesheet/platformcolorvaluetypes.d.ts","../../../node_modules/react-native/libraries/turbomodule/rctexport.d.ts","../../../node_modules/react-native/libraries/turbomodule/turbomoduleregistry.d.ts","../../../node_modules/react-native/libraries/utilities/appearance.d.ts","../../../node_modules/react-native/libraries/utilities/backhandler.d.ts","../../../node_modules/react-native/src/private/devmenu/devmenu.d.ts","../../../node_modules/react-native/libraries/utilities/devsettings.d.ts","../../../node_modules/react-native/libraries/utilities/dimensions.d.ts","../../../node_modules/react-native/libraries/utilities/pixelratio.d.ts","../../../node_modules/react-native/libraries/utilities/platform.d.ts","../../../node_modules/react-native/libraries/vibration/vibration.d.ts","../../../node_modules/react-native/libraries/yellowbox/yellowboxdeprecated.d.ts","../../../node_modules/react-native/libraries/vendor/core/errorutils.d.ts","../../../node_modules/react-native/types/public/deprecatedpropertiesalias.d.ts","../../../node_modules/react-native/types/index.d.ts","../src/user-agent.react-native.ts","../src/config/connection-gater.browser.ts","../src/connection-manager/constants.browser.ts","../../../node_modules/@types/chai/index.d.ts","../../../node_modules/@types/chai-as-promised/index.d.ts","../../../node_modules/chai-parentheses/index.d.ts","../../../node_modules/@types/chai-subset/index.d.ts","../../../node_modules/chai-bites/index.d.ts","../../../node_modules/@types/chai-string/index.d.ts","../../../node_modules/aegir/dist/utils/chai.d.ts","../../../node_modules/delay/index.d.ts","../../../node_modules/@types/sinonjs__fake-timers/index.d.ts","../../../node_modules/@types/sinon/index.d.ts","../../../node_modules/sinon-ts/dist/src/index.d.ts","../test/addresses/address-manager.spec.ts","../../../node_modules/it-map/dist/src/index.d.ts","../test/connection/fixtures/pair.ts","../test/connection/index.spec.ts","../test/connection-manager/address-sorter.spec.ts","../test/upgrading/utils.ts","../test/connection-manager/utils.ts","../test/connection-manager/connection-gater.spec.ts","../../../node_modules/p-timeout/index.d.ts","../../../node_modules/p-event/index.d.ts","../test/connection-manager/connection-pruner.spec.ts","../test/connection-manager/dial-queue.spec.ts","../../../node_modules/p-wait-for/index.d.ts","../test/fixtures/get-component.ts","../test/connection-manager/index.spec.ts","../test/connection-manager/multiaddr-to-ipnet.spec.ts","../test/connection-manager/reconnect-queue.spec.ts","../../../node_modules/it-pair/dist/src/index.d.ts","../test/connection-monitor/index.spec.ts","../../../node_modules/it-all/dist/src/index.d.ts","../../../node_modules/it-drain/dist/src/index.d.ts","../test/content-routing/content-routing.spec.ts","../test/core/core.spec.ts","../test/core/events.spec.ts","../test/core/get-public-key.spec.ts","../test/core/peer-id.spec.ts","../../../node_modules/it-take/dist/src/index.d.ts","../test/core/random-walk.spec.ts","../test/core/service-dependencies.spec.ts","../test/core/status.spec.ts","../../../node_modules/wherearewe/dist/src/index.d.ts","../test/core/user-agent.spec.ts","../test/peer-discovery/peer-discovery.spec.ts","../test/peer-routing/peer-routing.spec.ts","../test/registrar/errors.spec.ts","../test/registrar/protocols.spec.ts","../test/registrar/registrar.spec.ts","../../../node_modules/datastore-core/dist/src/shard.d.ts","../../../node_modules/datastore-core/dist/src/keytransform.d.ts","../../../node_modules/datastore-core/dist/src/sharding.d.ts","../../../node_modules/datastore-core/dist/src/mount.d.ts","../../../node_modules/datastore-core/dist/src/tiered.d.ts","../../../node_modules/datastore-core/dist/src/namespace.d.ts","../../../node_modules/datastore-core/dist/src/index.d.ts","../test/transports/transport-manager.spec.ts","../../../node_modules/it-length-prefixed/dist/src/encode.d.ts","../../../node_modules/it-reader/dist/src/index.d.ts","../../../node_modules/it-length-prefixed/dist/src/decode.d.ts","../../../node_modules/it-length-prefixed/dist/src/index.d.ts","../test/upgrading/upgrader.spec.ts","../../../node_modules/@babel/types/lib/index.d.ts","../../../node_modules/@types/babel__generator/index.d.ts","../../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../../node_modules/@types/babel__template/index.d.ts","../../../node_modules/@types/babel__traverse/index.d.ts","../../../node_modules/@types/babel__core/index.d.ts","../../../node_modules/keyv/src/index.d.ts","../../../node_modules/@types/http-cache-semantics/index.d.ts","../../../node_modules/@types/responselike/index.d.ts","../../../node_modules/@types/cacheable-request/index.d.ts","../../../node_modules/@types/ms/index.d.ts","../../../node_modules/@types/debug/index.d.ts","../../../node_modules/@types/dns-packet/index.d.ts","../../../node_modules/@types/graceful-fs/index.d.ts","../../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../../node_modules/@types/istanbul-lib-report/index.d.ts","../../../node_modules/@types/istanbul-reports/index.d.ts","../../../node_modules/@types/json-schema/index.d.ts","../../../node_modules/@types/json5/index.d.ts","../../../node_modules/@types/keyv/index.d.ts","../../../node_modules/@types/linkify-it/build/index.cjs.d.ts","../../../node_modules/@types/linkify-it/index.d.ts","../../../node_modules/@types/lodash/common/common.d.ts","../../../node_modules/@types/lodash/common/array.d.ts","../../../node_modules/@types/lodash/common/collection.d.ts","../../../node_modules/@types/lodash/common/date.d.ts","../../../node_modules/@types/lodash/common/function.d.ts","../../../node_modules/@types/lodash/common/lang.d.ts","../../../node_modules/@types/lodash/common/math.d.ts","../../../node_modules/@types/lodash/common/number.d.ts","../../../node_modules/@types/lodash/common/object.d.ts","../../../node_modules/@types/lodash/common/seq.d.ts","../../../node_modules/@types/lodash/common/string.d.ts","../../../node_modules/@types/lodash/common/util.d.ts","../../../node_modules/@types/lodash/index.d.ts","../../../node_modules/@types/lodash.random/index.d.ts","../../../node_modules/@types/lodash.range/index.d.ts","../../../node_modules/@types/mdurl/build/index.cjs.d.ts","../../../node_modules/@types/mdurl/index.d.ts","../../../node_modules/@types/markdown-it/dist/index.cjs.d.ts","../../../node_modules/@types/markdown-it/index.d.ts","../../../node_modules/@types/unist/index.d.ts","../../../node_modules/@types/mdast/index.d.ts","../../../node_modules/@types/minimatch/index.d.ts","../../../node_modules/@types/minimist/index.d.ts","../../../node_modules/@types/mocha/index.d.ts","../../../node_modules/@types/multicast-dns/index.d.ts","../../../node_modules/@types/netmask/index.d.ts","../../../node_modules/@types/node-forge/index.d.ts","../../../node_modules/@types/normalize-package-data/index.d.ts","../../../node_modules/@types/parse-json/index.d.ts","../../../node_modules/@types/semver/classes/semver.d.ts","../../../node_modules/@types/semver/functions/parse.d.ts","../../../node_modules/@types/semver/functions/valid.d.ts","../../../node_modules/@types/semver/functions/clean.d.ts","../../../node_modules/@types/semver/functions/inc.d.ts","../../../node_modules/@types/semver/functions/diff.d.ts","../../../node_modules/@types/semver/functions/major.d.ts","../../../node_modules/@types/semver/functions/minor.d.ts","../../../node_modules/@types/semver/functions/patch.d.ts","../../../node_modules/@types/semver/functions/prerelease.d.ts","../../../node_modules/@types/semver/functions/compare.d.ts","../../../node_modules/@types/semver/functions/rcompare.d.ts","../../../node_modules/@types/semver/functions/compare-loose.d.ts","../../../node_modules/@types/semver/functions/compare-build.d.ts","../../../node_modules/@types/semver/functions/sort.d.ts","../../../node_modules/@types/semver/functions/rsort.d.ts","../../../node_modules/@types/semver/functions/gt.d.ts","../../../node_modules/@types/semver/functions/lt.d.ts","../../../node_modules/@types/semver/functions/eq.d.ts","../../../node_modules/@types/semver/functions/neq.d.ts","../../../node_modules/@types/semver/functions/gte.d.ts","../../../node_modules/@types/semver/functions/lte.d.ts","../../../node_modules/@types/semver/functions/cmp.d.ts","../../../node_modules/@types/semver/functions/coerce.d.ts","../../../node_modules/@types/semver/classes/comparator.d.ts","../../../node_modules/@types/semver/classes/range.d.ts","../../../node_modules/@types/semver/functions/satisfies.d.ts","../../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../../node_modules/@types/semver/ranges/min-version.d.ts","../../../node_modules/@types/semver/ranges/valid.d.ts","../../../node_modules/@types/semver/ranges/outside.d.ts","../../../node_modules/@types/semver/ranges/gtr.d.ts","../../../node_modules/@types/semver/ranges/ltr.d.ts","../../../node_modules/@types/semver/ranges/intersects.d.ts","../../../node_modules/@types/semver/ranges/simplify.d.ts","../../../node_modules/@types/semver/ranges/subset.d.ts","../../../node_modules/@types/semver/internals/identifiers.d.ts","../../../node_modules/@types/semver/index.d.ts","../../../node_modules/@types/stack-utils/index.d.ts","../../../node_modules/@types/strip-bom/index.d.ts","../../../node_modules/@types/strip-json-comments/index.d.ts","../../../node_modules/@types/tdigest/index.d.ts","../../../node_modules/@types/which/index.d.ts","../../../node_modules/@types/ws/index.d.ts","../../../node_modules/@types/xsalsa20/index.d.ts","../../../node_modules/@types/yargs-parser/index.d.ts","../../../node_modules/@types/yargs/index.d.ts","../../../node_modules/@types/yauzl/index.d.ts"],"fileInfos":[{"version":"824cb491a40f7e8fdeb56f1df5edf91b23f3e3ee6b4cde84d4a99be32338faee","affectsGlobalScope":true},"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","5514e54f17d6d74ecefedc73c504eadffdeda79c7ea205cf9febead32d45c4bc","1c0cdb8dc619bc549c3e5020643e7cf7ae7940058e8c7e5aefa5871b6d86f44b",{"version":"87d693a4920d794a73384b3c779cadcb8548ac6945aa7a925832fe2418c9527a","affectsGlobalScope":true},{"version":"76f838d5d49b65de83bc345c04aa54c62a3cfdb72a477dc0c0fce89a30596c30","affectsGlobalScope":true},{"version":"db88e2781075c7bca86634724f38a132de718ddf3a470a3a2cdb182f4364af9e","affectsGlobalScope":true},{"version":"138fb588d26538783b78d1e3b2c2cc12d55840b97bf5e08bca7f7a174fbe2f17","affectsGlobalScope":true},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true},{"version":"bc47685641087c015972a3f072480889f0d6c65515f12bd85222f49a98952ed7","affectsGlobalScope":true},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true},{"version":"6fc23bb8c3965964be8c597310a2878b53a0306edb71d4b5a4dfe760186bcc01","affectsGlobalScope":true},{"version":"ea011c76963fb15ef1cdd7ce6a6808b46322c527de2077b6cfdf23ae6f5f9ec7","affectsGlobalScope":true},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true},{"version":"bb42a7797d996412ecdc5b2787720de477103a0b2e53058569069a0e2bae6c7e","affectsGlobalScope":true},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true},{"version":"b541a838a13f9234aba650a825393ffc2292dc0fc87681a5d81ef0c96d281e7a","affectsGlobalScope":true},{"version":"b20fe0eca9a4e405f1a5ae24a2b3290b37cf7f21eba6cbe4fc3fab979237d4f3","affectsGlobalScope":true},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true},{"version":"49ed889be54031e1044af0ad2c603d627b8bda8b50c1a68435fe85583901d072","affectsGlobalScope":true},{"version":"e93d098658ce4f0c8a0779e6cab91d0259efb88a318137f686ad76f8410ca270","affectsGlobalScope":true},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true},{"version":"5e07ed3809d48205d5b985642a59f2eba47c402374a7cf8006b686f79efadcbd","affectsGlobalScope":true},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true},{"version":"8073890e29d2f46fdbc19b8d6d2eb9ea58db9a2052f8640af20baff9afbc8640","affectsGlobalScope":true},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true},{"version":"51e547984877a62227042850456de71a5c45e7fe86b7c975c6e68896c86fa23b","affectsGlobalScope":true},{"version":"956d27abdea9652e8368ce029bb1e0b9174e9678a273529f426df4b3d90abd60","affectsGlobalScope":true},{"version":"4fa6ed14e98aa80b91f61b9805c653ee82af3502dc21c9da5268d3857772ca05","affectsGlobalScope":true},{"version":"e6633e05da3ff36e6da2ec170d0d03ccf33de50ca4dc6f5aeecb572cedd162fb","affectsGlobalScope":true},{"version":"d8670852241d4c6e03f2b89d67497a4bbefe29ecaa5a444e2c11a9b05e6fccc6","affectsGlobalScope":true},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true},{"version":"caccc56c72713969e1cfe5c3d44e5bab151544d9d2b373d7dbe5a1e4166652be","affectsGlobalScope":true},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true},{"version":"50d53ccd31f6667aff66e3d62adf948879a3a16f05d89882d1188084ee415bbc","affectsGlobalScope":true},{"version":"08a58483392df5fcc1db57d782e87734f77ae9eab42516028acbfe46f29a3ef7","affectsGlobalScope":true},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true},{"version":"33358442698bb565130f52ba79bfd3d4d484ac85fe33f3cb1759c54d18201393","affectsGlobalScope":true},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true},"4a3605bef1a5ef29fd5a1696dd95b0b4e2259e2d07a4d88fac79f3a9765c44a2","370079895f1acdd4bb5194a403c85bf60cfbb2654bced9430a6c7210e7246be8","90240231e730deed31569f6c686766a538e4a024bbc33ea1738fe924f477ba61","552223520e823223ee13c5764e9b69b1819c985818a8bcda435d8d1dbd909bee","49b7c3ddd683c09aa437dd92681699387441f522524b14d2331ce494a9bf2f27","d35b5db21a04a45ae6323c4d4b25acc983dfe2870fc670fd05249eb19d839a5e","ae34b0761f88cf20e922e338970944f0e3abf193cfd4c5589bb03dddd3ca6fc0","72b129e625a479942a4f9e8a1bc12c45c09bbbf6ebae147418584441eb9fba18","5212dd78d1d63ab33332c8846a0ea5ce248159e74033cde16de48373036b4704","954b3c04ee9f94ca1e262f3e5a6e833b0da0066514b3d4b97b92b7f0c85f8700","a2fc9ce1ae5bed7068d701d8aeebf13321de0f42c217dc2e10f1622dcaa53a7f","8e81f220cb935d551e88cff11541d5e89d3a3494a52fe6247e98016a9dbd4c2d","6b2576a04253626ba41b7dc7ec5977bec07f3b6952b16249d9fa8a3a0d79901c","9de17491f2bfbccea92500e174079d53bdedae34dbebe5d4a12a06ab09814710","e88481085a8576fa52efc913e631c1a833d16179486469b8538d8c4fab2f7381","cc8c0bbe9fa2399c83e9f5492f82c55fe184380a371dd6fa462586c6563b054b","d71577e78c7a4257074aaf82f595724175210c89e8b467ef82f949a6cbd891bc","52e78315d331eeec07e0fabb68af969e7cdb28eafeeda17fca75897764a53f0b","c84146dbc9d2e5f43d2cbf15485a4eabf90219dbb66c0d481f20f12d3851bffc","718ade45e05c419f2d8e91edc65eadecfa3566059acc5439e460b2eacfd2357a","c7bdf13966d47b3b3cf9de4ce1647184717579990cc7143602f02ab224e9bfc6","1caea122dbc7febedf852183deb445487389b9e5a45f7d882514d0b265a96b5d","4105fa0ecfaffb578c8051c3de22e8c984191aac8de14641ee99beed9c5e5bd9","2c19a03df944b85c8c7a77d1f2b1e77d5b26b50bde7e57debb6c1ed785e92f18","1bbbb729d5e059dd824378618907b92dab35947f0a76ecb538891b4d9f5cc0a7","b04614c3b8ee002251cd53eab5360ad5f4826b647ff7471880622862d5edc6d1","230eb449f719119cab1728252f20ecdd36d7a20cef659e4a51ada1a232a8aaad","76b9fa1e321d1a3df90391e97234009ab3a36e55965a53a74038949994b8fb23","203ec8a834b94ec13b9ef098b53024571e1870435d766b9d3614de00591d97a4","44fa41130045a0256c73b8f94d0885d1a170063b543ddf7324293b21af4b18b6","ed0887ec6108caa9f873afb6706f61b5bbf936c4578c40679214a93a96e916ca","01a6506b8da0bc64906550a37f4a64acd1e75b0098c4abedcab122bdf5a71787","89346453b46aeb38468711a4880156f29b1eea4eab823bd53802965b3d3fc27d","b3817c7c3c5bb0e9b7eda3c5db73195f953b2369da71e2807218a86075ca31e5","fac83d4c6898d5bf90c508cc84409ded40fdc14611cf42d7fb750fb2c7847979","f33455fa22b3d6fd7427c0f3bfc46ff8fdf782c7333a8beaddebc52fb97cd70a","87294fac7de723d78ac6572f168446d0df2698259e7d88526493046df05cc103","75848e9f0cfb046e64bc8610b0b07e97288d340196a2d5bc6bcbf01e595a81d9",{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a",{"version":"613b21ccdf3be6329d56e6caa13b258c842edf8377be7bc9f014ed14cdcfc308","affectsGlobalScope":true},{"version":"2d1319e6b5d0efd8c5eae07eb864a00102151e8b9afddd2d45db52e9aae002c4","affectsGlobalScope":true},"4967529644e391115ca5592184d4b63980569adf60ee685f968fd59ab1557188","5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107",{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true},"4f0539c58717cbc8b73acb29f9e992ab5ff20adba5f9b57130691c7f9b186a4d","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0",{"version":"53eac70430b30089a3a1959d8306b0f9cfaf0de75224b68ef25243e0b5ad1ca3","affectsGlobalScope":true},"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7",{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true},"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb",{"version":"86956cc2eb9dd371d6fab493d326a574afedebf76eef3fa7833b8e0d9b52d6f1","affectsGlobalScope":true},"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393",{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true},"1ff5a53a58e756d2661b73ba60ffe274231a4432d21f7a2d0d9e4f6aa99f4283","1e289f30a48126935a5d408a91129a13a59c9b0f8c007a816f9f16ef821e144e","2ea254f944dfe131df1264d1fb96e4b1f7d110195b21f1f5dbb68fdd394e5518","5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6",{"version":"b11cb909327c874a4e81bfb390bf0d231e5bf9439052689ab80ba8afa50da17b","affectsGlobalScope":true},"23459c1915878a7c1e86e8bdb9c187cddd3aea105b8b1dfce512f093c969bc7e","b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0",{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true},{"version":"5f6f1d54779d0b9ed152b0516b0958cd34889764c1190434bbf18e7a8bb884cd","affectsGlobalScope":true},"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","1cbae62b67f180291d211f0e1045fb923a8ec800cfbf9caa13223d769013dae2","b52d379b4939681f3781d1cfd5b2c3cbb35e7e76f2425172e165782f8a08228c","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633",{"version":"745c4240220559bd340c8aeb6e3c5270a709d3565e934dc22a69c304703956bc","affectsGlobalScope":true},"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada",{"version":"993985beef40c7d113f6dd8f0ba26eed63028b691fbfeb6a5b63f26408dd2c6d","affectsGlobalScope":true},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true},"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4",{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true},{"version":"cb094bb347d7df3380299eb69836c2c8758626ecf45917577707c03cf816b6f4","affectsGlobalScope":true},"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","b02784111b3fc9c38590cd4339ff8718f9329a6f4d3fd66e9744a1dcd1d7e191","ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a",{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true},"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","171fd8807643c46a9d17e843959abdf10480d57d60d38d061fb44a4c8d4a8cc4","05f95704d66f66f9368dc98d2da27016ed24ed11d521be55e32d167b88bc56fa","158555fef38609ba5fce1810a9ca37ef9af0d58164065fed3287fb418cfe8b75","3d53e5e411caeb49b5238ee5675b305745157bff28c26afd81c6a3ee8694fa83",{"version":"11a0f507dc51643badef4ffaa191d9315d553d404585a33895e7520bd5589096","signature":"04db8428d1dffa17736d78edbccbd7205cd1e758ba2a88e7d06097b3843638f1"},"42706c0f917fd8ca375a0433c57fd3f12bb8d96b26297c129ff60eb5cb68b70d","63007f1618ada5041fb3b47630b64a9987d268bf740dd72334c38b5d23f5239b","3395f90467d2bb9db039a5c22ed6659ca2ff6f0b4f7ee5f223b0f77288f54ea7","20df2907d398e369d49e8906d6e0f096c465501e9ceff9d61293bf0f4e9020f1","302aa8248dab7c689c103162e542224aa7f3b0db46e29d0fb468fac721cf1c41","2dda4c8b032feaef160074bdc73cffe28516b420ec6cb697732c02ad75cd65f7","5fde0e81ce573a8774e3017c80147470dbb453cdffc861c81f466bc6ce0cb3a6","9686a908777c5aa687eb342e2764237ba8fbf6e878d51a1f258b4cf437862bfe","d8dd09519d9bea7a7c4b658cb20c459bfdf19656b250275b1bf22fa6c3f70679","4b5bc5c83868ed7536cc9602bc1202f00bfc3b2146a984f7e31babfb5fd7d392","da4d6fd5f1a9a694a9e8f8fb9429d77b8a29101587c17841030c57f8ec1823ce","472daf0eb1fa01d3dfa396c9316e79d80990bb579b23086fcf14c9e3b48e760e","7e6b89bbe8962f1d87a6b7560462d0f33cc3f3618be202dd3c143a0e9328b677","7d6b07cb3ce6373b9dd0388d21a960829afb41df9d5ce323d8760392bfc22690","1447d46bff9e7c5c77da14515a7456ea5e919ce6e28f5e6746edf99818e4be47","ba3f6f0ee47f46cdce55620aec5726de80e92a930982634afe9918c114c38f0b","6f38045547cdfd54ec19abcd943cace72c775fde739c5e0e1d917cf3030c16b5","929fc31f7523aaa1d19735b77e637af06e58d76007648ec088ecfbec1521cbfe","3d0e04c8ca3f41da5f3d689500d9c4aeb54a1c59764d66d58f0e579b9af720e5","a6eb23f2a83113ce0ab7203bfda2be0888720f8d694a20abaef83b9f62832061","363dca5004ac5a3d9c2bba12812b97a64461911762f0b8f9320a8856ec53bcad","557b8c7481296f4b7ed362320f3bbb40bb87404edf880c81224f365a8d1e17f3","283ed3d075bf7d3e8793f63b2a52f475ed84d95b7b6351c5d5bcc6c49d4b845b","6544dab49004fecb69a4ef775e9ad2773a6148b1f9bfd9b75508e3afa11f5d35","b499490bd2f0d602501eb24d4e91ccb2d7fdfd24acb86889d74d5f16ac15c4ca","e2dd36a524ea5b13de1ed104ede9cea79696588175c1df1940d6a29113a4aee0","a878d4c7237a7af50e96534295fcf723134d70cbb1e9bfd8365266b912aee6ec","a1f708ddf34053065f8f53682123421af299cee37ae110a86ba07851adf940da","406ad29837d74e2ec97cdd8bba6295b6c984c1793d287c77fd1bb9ac9ff105cc","749effab6d7e72df8d126868c82b8166cdde84d48453e44f65cbad42ad900b06","11705a4aad6e2e724b82ffee6c4fa271d798f0fb68806ace4b1c425c266f8d98",{"version":"e2f657a1b70e04d1eda14b2274000fbabc9a033b5866bc9c04b4b8b2cf73d39f","signature":"3630ed70bc81eb54659965fcac105c0d420e667b1d0eaf96ab243de4e81ecd68"},"d9619bdf47b220d356c646b3693eb6fd5cd0cfd1016da5b2f1d37ad0763da88d","7a6f74294b8fb90f5e3832be21e25898dd81b2a1adc36dda6929813ba4135311","3f1370424c252aed11747282fc619f04497e426f63917bf2182fd46d51adc58a","5d40e6a7071d0d1e6e558e17214ff786ecb3ea73e31b25a88c2cbe2435fa1252","1e75b52eae196e444c69710711ea2cb64838b178db183f7b1281c1b7f6f8ef78","bba09f0aea6126a8437dd7ee4ae0e54da0ebe6ef5b48c336689b9041b3161f67","5e2fec9c89491e38ba2c78e6b4383540bc60dc24def61aa325cb726b497ebd85","8b1b666fe96fd9e713f1279a3e446f16ee824f46ca0c2c075e4e89f0b1258e6c","6aecbb60c2216da24acb86490f7c6270a820fd85424c8a509e3d284aa47f7a56","2e34b7e7c07624978db18b34c8a528928a7c24bc4b047add3e9d90bdc49e267f","ac63a01fcac70315fc9b416e9a57e568b18032c7cfcaa314e1751f03ef71286f","017319c1e1df8aa24f5e7a13e071f7d038f080d8c0498e5edafb3468ff8f0e51","b097a85ed31331f61ebf1ab9fa9bc8377a97e2f374d67367f3db4051f8abdba2","a0f75924004f4b28455fce9eb769a74018ed9b87e1748303ca2a92eff2bb9545","c50e3e8bee711fe5da105dfb759f9d5c7a884d5c9a9cca1f76520734c88a1911","20882ebc70455849b63fc73338936be40b06d02a4c0f33b48b92fd755eb40d5f","bda768ad5b551bab838df002f5df2190bac23345ae53c97053bfee3c8c6d290c","f0eb1ae06e702b50a11e3131e570e5cbd729552d18a7171b867f911ae7e19fce","41e9b0d9e91fdb53011917fb076c3f1a50657e75dbb844952831d69cdf34eccd","107a5a2d55c18a2c8bf1e01118b1895a4c10edd16ce32ee495c6b76294f275ca","4c5adbe8fbc482c38f2eca46983bbd573c052d321f17ee937868699aed7e08a8","804989e8db23673bb548a664cfb6694dae80d96517ac115767dcf85963de4873",{"version":"8633fc601d58c745997fdd45f9b9c4af86e515c360165d56f6c919cdbea4b7be","signature":"126ec4ba18d58bafd43950ae68be02be3506811ac33ad227af7c9617fff39e13"},{"version":"2d2d219bb27ad3616f719835c5ab00cf6ff021d4139d991f8f4a7e3cef58eaf3","signature":"58b07442710100d2c20d61407a7056f6f9a0b6f0c26ba171cb2642bf831a39b2"},"8b364a8902355cb5574c77da41da40d7e5882b4db93d76d642293ccdd5047fa9","37f7303bcdd88a85004146fc3a99d45caabf0cd90bb3cadbff8d9eed3858859c",{"version":"7a4388913d21694f7812e1254f6f2486aec1488a890a109907cc2b20da04be18","signature":"1a0028d4bebca0367b2ba0bfd73b5decd5ea6ce1550ee78659befe97b3995e25"},"6d7e44db00e655f5e32c36a33742559c40d30e6496bee2935d2973825bb1f2f8",{"version":"59329dd19be4ae01709f7c8b08fa59aac414e8e67f26f4e8888c4f8433abb5f0","signature":"d20007f5b8aefbd6a2ccd3a92a03f67d300d407abc43f18482819b0a2a921053"},{"version":"81cee9dde7ac79cc6574ebdd26e4c733061cb2be522600b2a56f793b4d0a0074","signature":"356ad5ff589023e0c0854f39cdf0adb65b1e6982c879abc1058064bcfda52b5a"},{"version":"32c4a92588bfa0298fe11cb5c83cc46dc77ca7276fda9da2f475bbcf7462a5db","signature":"4998a268b7398a7a210df39dee751e568593d04180abfefef6a124b9128ea516"},"c61ec50aa5316dc1d88360ec2fb8deac5afbcd8d9ffe3d9817b6bff5d2499c71",{"version":"956f5d6f96ac62bd9442506cdd58cf2a2c8dd9e908af89947b54585afe139372","signature":"092dbd8c46fa05726bd318af94e9a053b12a129c7bcd221975da367b6772842b"},"2ee4d493a67dabb327879be7c04f3bc6d1b1ab6954aec1592481d931e3d36d0d",{"version":"046981b7bd976860e876a80dd68556eeedae026653da8c361797834374314012","signature":"83d9bfaf1595792d0b6c16a93bd2778b44a633e1be3d377875600923ccb05eb7"},{"version":"adb987f4b6d53c2b6e68bd46becd9d8e101e3d1857919ba1af8f03aede8b2f0b","signature":"c0e84661644d7ba5b7eb3bca15314792c0f5722697ea79ce328dc1d25bff176f"},"603177107b8f7d1e5b993470f4cdec86b61d48a052c5c12e51e340b93531334e","3fff2e6159326d7dbb59c163736a0c522f1cbba6730dc01823a973452666fccd","6a445cf1acf23219aac91c5909f5c338b9408fb7ae6467a434f0e15eff913814","6aa9a466f775ad6d8d48a4d69eac063e4ed47365dfa7aec82a8b554b70938bb4","c1dba063181dfe84123cc9e8afdb0e5a20a0ec72300def7786447499b67a61ff","d81752ea7ca7b8be8e4629cbe81319dd3265195cf89468923ddcc5180ed6d733",{"version":"8d349c41896c49ac60ba56243f4a6a1e495c71db082a2396cd671975df0ca5d7","signature":"57d6015d666c2a1fd4921022a053968b65027b07b6a92eec0fb4d8cd1d5fff1b"},{"version":"e2f03a402050b6d8d321dc695e931566ee5201e1cce42a8a4c6fea7a08480e72","signature":"7581ff7793084fd7c83a3cb4a0e3dc86a2441959c9a336091a2157d346f6c18b"},"68f02ba57c531227ef5804dd57f2e940b10c544c96dadd3c0ef958ba4b6fdbc1","d84174912accc090e9b061b36101f8401add7f486ee532f45d298fb8e550dcb8","f0e9c96fe0af329a25c943d4a19fc3f6d2430914f49a83d1666cbaace3e41a7a","9b501947b0f8f2fe3e42d3686798e17ab274a9871e1821775794dc32efee6ed0","3780b990e935be00e1d77afaaf9e80ec9b7d79ea4d1f230206c054eb6717c9d5","ca027df9fd496a200d99ca0db4b0077463ce4926a6c8e05cfae522c5971ccbc0","4f590c560ee71a07def1a8e0d663d9d7ddb0d806deab94d8ceaac1f6408ac314",{"version":"fbc70ffac79c9010b7cd94a7a530f2d05c798c325e142f1c0a6212733726a11d","signature":"29e30fceb0cd5af93de1d4ace778860c9e168a13daa08643379a100f8d9b20dd"},{"version":"1234eaf625ba95c09508ba330da7d3c09521be3cc4f6e72afe4608d615e887be","signature":"cdb6e88f02d48574b0ebcaa73f6c94135a00ebe5b06a15bfd4319d7dd5953b0f"},"28a9532c090eea9406b31cb032f44a069f4e396a4b5ca3cf5905b0ff81692073","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","3725da27619321470183eb7dd61190b139e5bcc4cf9366d6d828906a76e31742",{"version":"f5f80c5944b5495ef2352cb7df497251a7f938d4b31fffb468751a3cf23c4e60","signature":"78a3221d0e04ea04623fdb6a34fc52a81b742df1aef41639d19cc8e33484b053"},{"version":"6dbab813019475ddae949f8c0a06a23d2a7401d1630209afbe327bb2e9e0f8f3","signature":"49b4fb0c70603cc8e20ff73157c3c9e0829ba4735d39467713dea6b1512d1517"},"18e2ed308bb90cde2d3d2b4ed6de12abe41b6f73e321616176b7f258de3c2774","60cbc38a9b402c14c388a7254781752b279017b3adeb94b840dcbf4872a6a410","3d2ec84143e6462a786b5d9ecf06f4f6f67a59a1f16c5a3a5e41721ba8478b7f","96b8f393e636547f0477e387138cd7ca9a7c556343b89f446cfc5672dee5e643","e043a9288022e8d802117e5e9e718443296f9c69a5eab7ed89b2fb76128a0140","4729c40012c9b4ae235cdeb76bc9cf5c127e09eb08ecf5b1b51b8d03d58e5555",{"version":"f2c84d7b62df70ad1ed5489aed397980063a333a43d277879255b9b03d1a982b","signature":"4d0407c72e75d3f506fe60dba4828cf65be4d086344eec72590784177d4412bc"},"ebc51770c27d90812d97af081e035c941e7ce706a909c838e759b6d605967f83",{"version":"9cc15d5d16047096f4f07bc7d0c89bf4327cb51200c52fefe7f38f15a7e75d55","signature":"b35e7393dd3a525a50cfab8c4607ee08a7746342aca648c742ce8d5401955090"},"16d2f9cb00807e9b65a3d22a3ed27bad7499679fd0308b086f15c04ad8ecaa89",{"version":"5c2e8d6491e5799d1078345f1145efd7b0e1fdf8c0d8c6be5c5583c57b2ede35","signature":"270369e683c7d765b42e7d71005dc7d3c0bc92d1c0048a5f1c81e9bd82ce1d31"},"7d958de24d9de7d848f9c7259dfc8116868d5b6b130759fe46310089c24bc90f","4f995212d227171f1d5c1e57a749b8a8383867f4c01b6492cceb0da9fc784c98",{"version":"9b38dd26fabde1d36ca0bd5fbdfb36e9cc82fe820580499ca31b6ae7109a53d7","signature":"e8356763213683bfd44db0146b2ee420a07695b2a1afdb22a0d32390e7b921be"},{"version":"60201911998e5fcef7ef7e6507e24a2af3336a45996fee9264483becddd18eaa","signature":"577163b14db57b737a12f2693631193b492c3ce2e10c00ac57c5e57c209f571f"},"66f4f8aadf702451ce0603300cbf565f2d1d5aed12215474ad6a22dcfa34d209",{"version":"22b5dfe722ce2aae0c580b1d75d10bb3a6905f93f8f8ce3190955148b449d857","signature":"357f2ba403c4f78a11b64df1e9ffb56e241924d6cc768a38c05c7dc7cfe70ff0"},"18ea46e4d0790901645c0c35dba475cd9cc807bff21069d0712dc6cdd8e5a948","38aaec0cd25bec1bec8511430fcfc6a7ce53ec44fa7e4e68717c551d0c786ef0","c777a68c2938e67dab6f2625e7c0f9996ff1bb6e3205c602a4c3e6d0bb0da198","0d9b14b7e6e52b3fe52b70ec992a55f8dd5c63a56f403dd504a12e7df3a6aaab","13464a8c6e30893261acf4c91b6a2478952a354abc9d12bb0a7aa54fc789971a",{"version":"751ef6b3e0986c26fc64283124b1f7a0fbd56c5aabfe349e8622acdcfc2483fd","signature":"bed36f8d416b14fbc1c9527d36e51337856c34112d80e46efa74ef0b13a65e59"},{"version":"5129d702282d2529d16e7bf527463eeedb7c0d0b1591d907c819be3f0c66665e","signature":"75806b39570f1e2cb0e8451a39f6101d2cf6ab6897edd819074ae67826366d19"},{"version":"8ec7d56175c1b729e1c6fcf34d912a05d0ff57280e6c53dd931bb08b2c458874","signature":"d31db26c540e061280b5dc2670fcfd35a7466b6c15837c185b19139eb3e0b0f7"},{"version":"29d62d4945224be347215c4cab646236075d782f825e7182c8d6d59b0a917ab7","signature":"878587492a54c023943eeb695e245c2c887e505415d20273979ed6c00bf9f249"},{"version":"190fd210e913b50d3272b470c65ba613c170ee9a1333a2d719ad2eff5d65264d","signature":"5e349d5ae8f5d4c1a7cc8e17dfb8841b8e36954132e314964a160a6744339ed1"},{"version":"8fd51adbbcab2d6b95485f985cbed2bbfeb90c30b42c9bee11e3230c22992c28","signature":"8a527b69d12c02fdc4b8be022074396685a7cb3d24295eb9a3743eabf9223434"},{"version":"64bf224d538c1d64755a7f58b6e8e2a869e6ac26c2ac404cbf1bf2e878148464","signature":"4b5d8d06fc1446cd4abd86ff03a18d873fde94cd4be7bad889f9dd01e1cd9643"},{"version":"367146591dd3d8d81045e23753e0b77de80982c91d9ad98d4d50ac068f07f4ee","signature":"878587492a54c023943eeb695e245c2c887e505415d20273979ed6c00bf9f249"},{"version":"3a909e8789a4f8b5377ef3fb8dc10d0c0a090c03f2e40aab599534727457475a","affectsGlobalScope":true},"fd412dd6372493eb8e3e95cae8687d35e4d34dde905a33e0ee47b74224cdd6ab","9d3b119c15e8eeb9a8fbeca47e0165ca7120704d90bf123b16ee5b612e2ecc9d","b8dd45aa6e099a5f564edcabfe8114096b096eb1ffaa343dd6f3fe73f1a6e85e",{"version":"38e8ac2d182bd3f85d28de9bdf1386c19a319f9c0280aa43960204c353b07878","affectsGlobalScope":true},"bc4db28f3510994e45bbabba1ee33e9a0d27dab33d4c8a5844cee8c85438a058","232f660363b3b189f7be7822ed71e907195d1a85bc8d55d2b7ce3f09b2136938","e745388cfad9efb4e5a9a15a2c6b66d54094dd82f8d0c2551064e216f7b51526","c154b73e4fb432f6bc34d1237e98a463615ae1c721e4b0ae5b3bcb5047d113a3","6a408ed36eee4e21dd4c2096cc6bc72d29283ee1a3e985e9f42ecd4d1a30613b","8ebf448e9837fda1a368acbb575b0e28843d5b2a3fda04bce76248b64326ea49","91b9f6241fca7843985aa31157cfa08cc724c77d91145a4d834d27cdde099c05","8b94ac8c460c9a2578ca3308fecfcf034e21af89e9c287c97710e9717ffae133","237b7e3abf7031f573d2303cd28e71369de5c41d9b268555f4545bc908ed76cb","3dfa3a6f2a62259b56fa7bcebfbacf886848dfa037298be5bed07c7a0381ee4f","a1e3cda52746919d2a95784ce0b1b9ffa22052209aab5f54e079e7b920f5339e","1882680f8c88c5648d603408dd1943857ca831a815e33d3126be8368f7a69252","e7d56fa3c64c44b29fa11d840b1fe04f6d782fc2e341a1f01b987f5e59f34266","6f7da03b2573c9f6f47c45fa7ae877b9493e59afdc5e5bc0948f7008c1eb5601","cbfbec26cc73a7e9359defb962c35b64922ca1549b6aa7c022a1d70b585c1184","488242948cc48ee6413a159c60bcaf70de15db01364741737a962662f1a127a5","42bacb33cddecbcfe3e043ee1117ba848801749e44f947626765b3e0aec74b1c","03cee9ed40eb490d50ebe7b999f1177d320f3ff30dadd0b3b138d18682335a7a","cd2156bc8e4d54d52a2817d1b6f4629a5dd3173b1d8bb0fc893ee678d6a78ecd","60526d9010e8ccb2a76a59821061463464c3acd5bc7a50320df6d2e4e0d6e4f7","562cce1c8e14e8d5a55d1931cb1848b1df49cc7b1024356d56f3550ed57ad67f","623fa4efc706bb9956d0ae94b13321c6617655bf8ebdb270c9792bb398f82e44","c4f6cc26bf998cec21820844d187217aadc875a879760828d9111180e122320d","79d6871ce0da76f4c865a58daa509d5c8a10545d510b804501daa5d0626e7028","9054417b5760061bc5fe31f9eee5dc9bf018339b0617d3c65dd1673c8e3c0f25","c6b68cd2e7838e91e05ede0a686815f521024281768f338644f6c0e0ad8e63cd","443702ca8101ef0adc827c2cc530ca93cf98d41e36ce4399efb9bc833ad9cb62","c94f70562ae60797cce564c3bebbaaf1752c327d5063d6ac152aa5ca1616c267","2aeb5fcdfc884b16015617d263fd8d1a8513f7efe23880be4e5f0bdb3794b37c","b561170fbe8d4292425e1dfa52406c8d97575681f7a5e420d11d9f72f7c29e38","5fe94f3f6411a0f6293f16fdc8e02ee61138941847ce91d6f6800c97fac22fcd","7f7c0ecc3eeeef905a3678e540947f4fbbc1a9c76075419dcc5fbfc3df59cb0b","df3303018d45c92be73fb4a282d5a242579f96235f5e0f8981983102caf5feca","92c10b9a2fcc6e4e4a781c22a97a0dac735e29b9059ecb6a7fa18d5b6916983b","8205e62a7310ac0513747f6d84175400680cff372559bc5fbe2df707194a295d","084d0df6805570b6dc6c8b49c3a71d5bdfe59606901e0026c63945b68d4b080a","8387fa3287992c71702756fe6ecea68e2f8f2c5aa434493e3afe4817dd4a4787","0f066f9654e700a9cf79c75553c934eb14296aa80583bd2b5d07e2d582a3f4ee","269c5d54104033b70331343bd931c9933852a882391ed6bd98c3d8b7d6465d22","a56b8577aaf471d9e60582065a8193269310e8cae48c1ce4111ed03216f5f715","486ae83cd51b813095f6716f06cc9b2cf480ad1d6c7f8ec59674d6c858cd2407","fff527e2567a24dd634a30268f1aa8a220315fed9c513d70ee872e54f67f27f3","5dd0ff735b3f2e642c3f16bcfb3dc4ecebb679a70e43cfb19ab5fd84d8faaeed","d1d78d1ef0f21ac77cdc436d2a4d56592453a8a2e51af2040ec9a69a5d35e4de","bc55b91274e43f88030c9cfe2c4217fae57894c3c302173ab6e9743c29484e3d","8bb22f70bfd7bf186631fa565c9202ee6a1009ffb961197b7d092b5a1e1d56b1","77282216c61bcef9a700db98e142301d5a7d988d3076286029da63e415e98a42","a7b50919e6ed57da56811b8c757b2eb10e3116433b64fa5ccb6cf0bdfd3a5bdd","64ce8e260a1362d4cadd6c753581a912a9869d4a53ec6e733dc61018f9250f5d","85a915dbb768b89cb92f5e6c165d776bfebd065883c34fee4e0219c3ed321b47","83df2f39cb14971adea51d1c84e7d146a34e9b7f84ad118450a51bdc3138412c","b96364fcb0c9d521e7618346b00acf3fe16ccf9368404ceac1658edee7b6332c","bdb2b70c74908c92ec41d8dd8375a195cb3bb07523e4de642b2b2dfbde249ca6","7b329f4137a552073f504022acbf8cd90d49cc5e5529791bef508f76ff774854","f63bbbffcfc897d22f34cf19ae13405cd267b1783cd21ec47d8a2d02947c98c1","d9725ef7f60a791668f7fb808eb90b1789feaaef989a686fefc0f7546a51dcdc","df55b9be6ba19a6f77487e09dc7a94d7c9bf66094d35ea168dbd4bac42c46b8f","595125f3e088b883d104622ef10e6b7d5875ff6976bbe4d7dca090a3e2dca513","8ebb6f0603bf481e893311c49e4d2e2061413c51b9ba5898cd9b0a01f5ef19c8","e0d7eed4ba363df3faadb8e617f95f9fc8adfbb00b87db7ade4a1098d6cf1e90","9670f806bd81af88e5f884098f8173e93c1704158c998fe268fd35d5c8f39113","de115595321ce012c456f512a799679bfc874f0ac0a4928a8429557bb25086aa","896e4b676a6f55ca66d40856b63ec2ff7f4f594d6350f8ae04eaee8876da0bc5","0524cab11ba9048d151d93cc666d3908fda329eec6b1642e9a936093e6d79f28","869073d7523e75f45bd65b2072865c60002d5e0cbd3d17831e999cf011312778","bc7b5906a6ce6c5744a640c314e020856be6c50a693e77dc12aff2d77b12ca76","56503e377bc1344f155e4e3115a772cb4e59350c0b8131e3e1fb2750ac491608","6b579287217ee1320ee1c6cfec5f6730f3a1f91daab000f7131558ee531b2bf8","e2ddb2877f5a841866f4fc772a601b58e90ac8399b35f9a06535be81b8e08b47","a793636667598e739a52684033037a67dc2d9db37fab727623626ef19aa5abb9","b15d6238a86bc0fc2368da429249b96c260debc0cec3eb7b5f838ad32587c129","9a9fba3a20769b0a74923e7032997451b61c1bd371c519429b29019399040d74","4b10e2fe52cb61035e58df3f1fdd926dd0fe9cf1a2302f92916da324332fb4e0","d1092ae8d6017f359f4758115f588e089848cc8fb359f7ba045b1a1cf3668a49","ddae9195b0da7b25a585ef43365f4dc5204a746b155fbee71e6ee1a9193fb69f","32dbced998ce74c5e76ce87044d0b4071857576dde36b0c6ed1d5957ce9cf5b5","5bc29a9918feba88816b71e32960cf11243b77b76630e9e87cad961e5e1d31d0","0aba767f26742d337f50e46f702a95f83ce694101fa9b8455786928a5672bb9b","8db57d8da0ab49e839fb2d0874cfe456553077d387f423a7730c54ef5f494318","ecc1b8878c8033bde0204b85e26fe1af6847805427759e5723882c848a11e134","cfc9c32553ad3b5be38342bc8731397438a93531118e1a226a8c79ad255b4f0c","16e5b5b023c2a1119c1878a51714861c56255778de0a7fe378391876a15f7433","52e8612d284467b4417143ca8fe54d30145fdfc3815f5b5ea9b14b677f422be5","a090a8a3b0ef2cceeb089acf4df95df72e7d934215896afe264ff6f734d66d15","a0259c6054e3ed2c5fb705b6638e384446cbcdf7fd2072c659b43bd56e214b9a","005319c82222e57934c7b211013eb6931829e46b2a61c5d9a1c3c25f8dc3ea90","151f422f08c8ca67b77c5c39d49278b4df452ef409237c8219be109ae3cdae9d",{"version":"0548256c356797018b04ce897284211763b058cd55c7e709c895ad1ff9dafe33","affectsGlobalScope":true},{"version":"2e55f3861ff266bc07a33e0f5b524665fa9da7b2ff3ab7a2a014e1e64dfa39b8","signature":"878587492a54c023943eeb695e245c2c887e505415d20273979ed6c00bf9f249"},{"version":"df0fdce5c9d5717792ec563de5b22f4a02a523c3f0d32de2b65f68f486f6ec77","signature":"bf218414d5eb11cb9906bde56665bc10923c5e9eedff68a935b0fa1e1bcdf5c6"},{"version":"793b59048bbafb008a4455bdf6ac0eadf6a8e85b3858d734581f00896f12e96b","signature":"6ede01de2be0bfa013eaaffc50f3f9c1f17f29df153825d3e3a7f92ead8fad40"},{"version":"eef204f061321360559bd19235ea32a9d55b3ec22a362cc78d14ef50d4db4490","affectsGlobalScope":true},{"version":"86e56d97b13ef0a58bc9c59aee782ae7d47d63802b5b32129ec5e5d62c20dbfa","affectsGlobalScope":true},{"version":"c1f79c6d85cd84518fd7349588b3c61bdc189f58e3866f925cbf4631c81e31f9","affectsGlobalScope":true},{"version":"54db406753da16e177f094aa66da79840f447de6d87ddd1543a80c9418c52545","affectsGlobalScope":true},{"version":"42f28f4cfca4a70bd89c1d55d76c7978275030b894f6793f36890265c11a83a4","affectsGlobalScope":true},{"version":"7cf1027da9599f056355b46bbea31dbf7f715f797dffb9cbb3402d4490c503e5","affectsGlobalScope":true},"96dbd0787b57ae02981d26d5f2441f0f8444fb46d7578c56527eab89cff13a7d","27573b15894c6311146838fa3b45786bacc013a4bca6c84adc1b11a4e7c8a4c0","7d2a0ba1297be385a89b5515b88cd31b4a1eeef5236f710166dc1b36b1741e1b","8e87660f5170c195ade218937e360484775be6a4e75a098665d9ba5a2e4cdc15","8d16e3ff29dd0650435766702b01c2f7e9d1f289a48fcbf8e93687d6ecf33f26",{"version":"b1576c5ea937e7dab8799bc29d8bed7e61f96e569b9fcf99b7973ffb9fd57c68","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"bcc66913f07d898149b4bb118d1b04c4925f0d61dceeecc65ef5bb58b5004d4c",{"version":"f18c42254c093ff60ee9d0fd4e7ee14cd6d1a15bacc4cd987eefc2e2557a8dc6","signature":"518a3cef0d51ba223da57c7e8be03696fc4aa41a9f55e1630d548dac970eb6ac"},{"version":"be1fa8d1024ec26ef5ffc5cea22cc207b2092c6610bed91d4c268e62ec9bf5bf","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"d8d8704a13d9a92ec0be74be48b2c9c36cc79ea6f6185d7745f563da625e86cb","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"a9d6b4072a0ca8de571d1ddfa16b4956c1f69dae946c0264c3b66cefd0e11ca9","signature":"a6ae9fda583252e127febe75880f5456d51dd87b4fb06a1c674b45b46db5ed71"},{"version":"7d4f3227add7a407c53eac3dc05aa6c3aa4e08e7a3b696cc49bba7eb3cabf3e0","signature":"3384e338b12724e06d5283a365d109b4987eade57daf82fef1e41cf29df193e2"},{"version":"174ff5bbc5b2d7fa3ee2a3c0db1e407f45f057e1d7fac8fa32951219ea66e824","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"91764b36fe5e1c5d688f5f90eeea47703a059ab9a81bf80f7bbc9b04507b7bd3","115327b8e1f68c03004d841b83e332ed16b8f48af59ac00f38313887d7ec2920",{"version":"08a1da266747f79808c359119bce82fdf34038392e714e482c1adc0533e1b138","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"6f2ae5753ccd111960c4e6174893c57cbfda2b1a906801da4a147cf4eba9729e","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"adb5ad16c19ff8dbfa9daa3a7dc8e1b039c381a2b94383144a53368681ad8ca0",{"version":"916b65950bbe8258dfdd7b26891b8bc0b246fe8673f1da934d813459618d19d7","signature":"1aa53e7a52a19defcd4ed96bc83ec88b35195a9a2df22e6840b4ca2ea5bbcf59"},{"version":"42590ef999ed7e582cfaa22be00ca13daadb73685f634638276612ebceb8c598","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"fd47ea2edfb06390734de3a5f80d086c5ffe53138627555467e7aec557177077","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"9b923c528f96bcd5fd6518180c24e7c7a1c3a946354f8cfa193b42cec3cc3f39","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"e1ea54d2635ea7e40d668c71bd74fb4aa8671672a3421cb5a7dc06711d87aa23",{"version":"7ee9d5eb92bb6cf5fe1870ceda0ca1531bce65b31533fb808a552ff98275042b","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"5ccc3c7f73ef48c223635cd4506f21133560de7abc4c09c623327bb1b54386dc","687ec53a7422d8cf80477fffa82a2db211f724039267931642befcd4907aec26",{"version":"d89c541d6fcbb9a1d466f5a66c1d4cf45fc6a5a2e8f4054585c750343ad4caff","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"ce2f4fae912e6bf4674cccb38b3cae3d0037e5069664861deefed328f58b03ba","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"b29c77cf15a5e8d061687c57faf3451020a57d1ce0ddb7a5b040115b9f5f45e0","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"df4435080db6f62965ef279dfcc5edc91e9c3442729be2b31b0e472bf28e280e","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"43dce202553e035c0e56ac4fc7ffa50820aff095cd1a0cc696d63dcf70e4519e","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"72322a0b1586d3de59d3c5edc9eacf34480d1bb20d6de633fb63044de9682401",{"version":"43641b19a23908007337743c5bce76a3670428ba5d1ac5e5a1d5537ddcb1e6f4","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"055b1094fe84c7bfe84b0de10ef6d325088c7014c051430435f84bfaf9cb05c7","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"22317091e1b5ba0979c84c6e4f0646862337c6adc1f4b4f982b232b37043bd91","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"00cd454fa42dca69cdea08d4cb9698e679ba9a31762c23d905e45ba92269ac3a",{"version":"8e5d444cb03e0fa17932adfccf0ead4a8b84b750a3e17966a1ebd7b93e5beff9","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"34f66a31181b528594195a3dcdbc1ed2a9f54aa9ec7e8b6d3a4aad1cbe1b4303","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e2cee66c19e06ab44e896d747e5bc8708e3a8cff723a73370445837cac3252ae","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"0cb747c534d47270700cfcf7fbd9f7becaf418f66d9c7d924724b8ec2ee28fad","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"a0de9606e302d6c840e54ed8167c90b0c595c3ce8b0999ad7484d487498b72fa","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"a11c994c05f722683ce349554be34cc3520cd4e2922e7b259317f14b03f292eb","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"7c59943d77166c1aecd731af8683a7b5a0984e1bc0427fa35be504d77c41fdcd","d357e56d630bcd0f63cfc678e306702555b4f791c2d8e07f037de39171be4cd3","c7ab5bd8603f3d24c94a95b780fb3bac66e45212fb304495f205b53dc2a9808b","a93ae01c9ed49ba423599144ffa3cd520db83e53b32471865905a65113bb3e59","6088973936033e869d3616b63d25c15363862b491f46af77d40a5215ee8cc1a8","9a4b7c467be504c4500cf6e54b0a3b8afdfbe0ed2c1da640202f44a7cef721b2","5cf9f5e95313f8ad7c507e9f109ab749f8033cbf0be469d19975b501489ee4f5",{"version":"c909783b55eed96d9896f61abddd3917d1bb1f018e15021947efb43491584f8e","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"832c31765df053a1694e5fe7e195537ef24bbc42467938b1e90e1b3350bfe3ca","0edb8a97ead1fefd337458449050857e80740e31a3f76cffa656262f4e651a50","7f787afa31f8150e496bae8591c750dc7b82135612190fafba782e3434e09568","9feb0ecefe7acac6c20b18c6c7049b5778dfc564ac91d47447c9a373ff9b8ea8",{"version":"652c058f0be101eb1a971718da6decf7f84957ab795de838c6bc13b3422cb2b9","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"8d27e5f73b75340198b2df36f39326f693743e64006bd7b88a925a5f285df628","2c8e55457aaf4902941dfdba4061935922e8ee6e120539c9801cd7b400fae050","1c2cd862994b1fbed3cde0d1e8de47835ff112d197a3debfddf7b2ee3b2c52bc","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","9e0cf651e8e2c5b9bebbabdff2f7c6f8cedd91b1d9afcc0a854cdff053a88f1b","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","42baf4ca38c38deaf411ea73f37bc39ff56c6e5c761a968b64ac1b25c92b5cd8","d7dbe0ad36bdca8a6ecf143422a48e72cc8927bab7b23a1a2485c2f78a7022c6","8718fa41d7cf4aa91de4e8f164c90f88e0bf343aa92a1b9b725a9c675c64e16b","f992cd6cc0bcbaa4e6c810468c90f2d8595f8c6c3cf050c806397d3de8585562","fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","3eb11dbf3489064a47a2e1cf9d261b1f100ef0b3b50ffca6c44dd99d6dd81ac1","bc222163edcb8df6ba9b506d053d6c5afcae50e85695151cf4636a3107deaba9","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","fec943fdb3275eb6e006b35e04a8e2e99e9adf3f4b969ddf15315ac7575a93e4","742f21debb3937c3839a63245648238555bdab1ea095d43fd10c88a64029bf76","7cfdf3b9a5ba934a058bfc9390c074104dc7223b7e3c16fd5335206d789bc3d3","7220461ab7f6d600b313ce621346c315c3a0ebc65b5c6f268488c5c55b68d319","f90d4c1ae3af9afb35920b984ba3e41bdd43f0dc7bae890b89fbd52b978f0cac","fcf79300e5257a23ed3bacaa6861d7c645139c6f7ece134d15e6669447e5e6db","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","aa2c18a1b5a086bbcaae10a4efba409cc95ba7287d8cf8f2591b53704fea3dea","b88749bdb18fc1398370e33aa72bc4f88274118f4960e61ce26605f9b33c5ba2","0aaef8cded245bf5036a7a40b65622dd6c4da71f7a35343112edbe112b348a1e","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","a873c50d3e47c21aa09fbe1e2023d9a44efb07cc0cb8c72f418bf301b0771fd3","7c14ccd2eaa82619fffc1bfa877eb68a012e9fb723d07ee98db451fadb618906","288d992cd0d35fd4bb5a0f23df62114b8bfbc53e55b96a4ad00dde7e6fb72e31","df996e25faa505f85aeb294d15ebe61b399cf1d1e49959cdfaf2cc0815c203f9","4f6a12044ee6f458db11964153830abbc499e73d065c51c329ec97407f4b13dd","13e834b958fe7e9010d2161497f98916974a0618be7a773281a253a948da8b0d","dae5c8e0ca15779492744cb4071c5b3c94c2121940fbaefb43ca9a045557a0c9","0944f27ebff4b20646b71e7e3faaaae50a6debd40bc63e225de1320dd15c5795","5d30565583300c9256072a013ac0318cc603ff769b4c5cafc222394ea93963e1","8a7219b41d3c1c93f3f3b779146f313efade2404eeece88dcd366df7e2364977","a109c4289d59d9019cfe1eeab506fe57817ee549499b02a83a7e9d3bdf662d63","89121c1bf2990f5219bfd802a3e7fc557de447c62058d6af68d6b6348d64499a","d4a22007b481fe2a2e6bfd3a42c00cd62d41edb36d30fc4697df2692e9891fc8","8841e2aa774b89bd23302dede20663306dc1b9902431ac64b24be8b8d0e3f649","fbca5ffaebf282ec3cdac47b0d1d4a138a8b0bb32105251a38acb235087d3318",{"version":"29f72ec1289ae3aeda78bf14b38086d3d803262ac13904b400422941a26a3636","affectsGlobalScope":true},"62a8effc4dd17bbc2c05927b4ca5f67e73fdb458e203b128c041d0d70ffa6b55","d3213ac97e906cb1a935cf80061aacdb05a943a4d0316b469ab44565c34147f2","8b5402ae709d042c3530ed3506c135a967159f42aed3221267e70c5b7240b577","22293bd6fa12747929f8dfca3ec1684a3fe08638aa18023dd286ab337e88a592","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","7d8ddf0f021c53099e34ee831a06c394d50371816caa98684812f089b4c6b3d4","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","4006c872e38a2c4e09c593bc0cdd32b7b4f5c4843910bea0def631c483fff6c5","ab6aa3a65d473871ee093e3b7b71ed0f9c69e07d1d4295f45c9efd91a771241d","41392155643024553ab15aa2074c7ed144958cbfe941aefcdfad119492985885","d9a256f69f3956993e65efd88336644be8f8dd36d149e859c14704ef6c6c0eec","eb15edfcef078300657e1d5d678e1944b3518c2dd8f26792fdba2fe29f73d32b","5aac5efd20619b522faeeb0badf250834850c605ad8c5fb91c6502a54057f413","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","74d5a87c3616cd5d8691059d531504403aa857e09cbaecb1c64dfb9ace0db185"],"root":[204,236,259,260,263,[265,267],269,271,272,279,280,288,289,293,294,301,303,305,308,309,311,[317,324],[418,420],432,[434,439],442,443,[445,448],450,[453,457],[459,461],[463,468],476,481],"options":{"allowJs":true,"checkJs":true,"composite":true,"declaration":true,"declarationMap":true,"emitDeclarationOnly":false,"esModuleInterop":true,"module":7,"noEmitOnError":true,"outDir":"./","removeComments":false,"skipLibCheck":true,"sourceMap":true,"strict":true,"stripInternal":true,"target":9},"fileIdsList":[[107,150,482],[107,150],[107,150,273,274,275,276],[75,76,107,150],[75,107,150],[73,74,77,107,150],[81,107,150],[81,107,150,277],[72,77,79,80,107,150],[77,79,81,107,150],[78,81,107,150],[107,150,345],[107,150,417],[107,150,482,483,484,485,486],[107,150,482,484],[107,150,162,165,193,200,488,489,490],[107,150,421],[107,150,492],[107,150,200],[107,150,163,200],[107,150,496],[107,150,497],[107,150,162,200],[107,150,502],[107,150,516],[107,150,504,506,507,508,509,510,511,512,513,514,515,516],[107,150,504,505,507,508,509,510,511,512,513,514,515,516],[107,150,505,506,507,508,509,510,511,512,513,514,515,516],[107,150,504,505,506,508,509,510,511,512,513,514,515,516],[107,150,504,505,506,507,509,510,511,512,513,514,515,516],[107,150,504,505,506,507,508,510,511,512,513,514,515,516],[107,150,504,505,506,507,508,509,511,512,513,514,515,516],[107,150,504,505,506,507,508,509,510,512,513,514,515,516],[107,150,504,505,506,507,508,509,510,511,513,514,515,516],[107,150,504,505,506,507,508,509,510,511,512,514,515,516],[107,150,504,505,506,507,508,509,510,511,512,513,515,516],[107,150,504,505,506,507,508,509,510,511,512,513,514,516],[107,150,504,505,506,507,508,509,510,511,512,513,514,515],[107,150,503,520],[107,150,521],[107,150,523],[107,150,519],[107,150,156,162,200,494],[107,147,150],[107,149,150],[107,150,155,185],[107,150,151,156,162,163,170,182,193],[107,150,151,152,162,170],[102,103,104,107,150],[107,150,153,194],[107,150,154,155,163,171],[107,150,155,182,190],[107,150,156,158,162,170],[107,149,150,157],[107,150,158,159],[107,150,162],[107,150,160,162],[107,149,150,162],[107,150,162,163,164,182,193],[107,150,162,163,164,177,182,185],[107,145,150,198],[107,145,150,158,162,165,170,182,193],[107,150,162,163,165,166,170,182,190,193],[107,150,165,167,182,190,193],[107,150,162,168],[107,150,169,193],[107,150,158,162,170,182],[107,150,171],[107,150,172],[107,149,150,173],[107,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],[107,150,175],[107,150,176],[107,150,162,177,178],[107,150,177,179,194,196],[107,150,162,182,183,184,185],[107,150,182,184],[107,150,182,183],[107,150,185],[107,150,186],[107,147,150,182],[107,150,162,188,189],[107,150,188,189],[107,150,155,170,182,190],[107,150,191],[150],[105,106,107,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],[107,150,170,192],[107,150,165,176,193],[107,150,155,194],[107,150,182,195],[107,150,169,196],[107,150,197],[107,150,155,162,164,173,182,193,196,198],[107,150,182,199],[107,150,165,182,200],[107,150,533,572],[107,150,533,557,572],[107,150,572],[107,150,533],[107,150,533,558,572],[107,150,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571],[107,150,558,572],[107,150,429],[107,150,162,165,167,182,190,193,199,200],[107,150,580],[107,150,162,182,200],[107,150,421,422,423,424,425,426],[107,150,421,422],[107,150,234,235],[107,150,235,244,245,469,470,471,472,473,474],[107,150,234,235,244,475],[107,150,232,234,235,244],[107,150,234,235,244],[107,150,234,235,470],[107,150,235,475],[107,150,232,234],[107,150,231],[107,150,233],[69,82,107,150],[69,82,107,150,300],[69,82,107,150,478,480],[69,82,107,150,480],[69,107,150,477,479],[82,107,150],[64,107,150],[107,150,220,221,227,228],[67,68,107,150],[67,107,150],[65,107,150],[107,150,219],[66,107,150],[66,107,150,223],[68,107,150,222,223,224,225,226],[64,65,66,67,107,150,219],[64,65,66,107,150],[107,150,440],[107,150,291],[107,150,353,354],[107,150,334,340,341,344,347,349,350,353],[107,150,351],[107,150,360],[107,150,326,333],[107,150,331,333,334,338,352,353],[107,150,353,381,382],[107,150,331,333,334,338,353],[107,150,326,367],[107,150,331,338,352,353,369],[107,150,332,334,337,338,341,352,353],[107,150,331,333,338,353],[107,150,331,333,338],[107,150,331,332,334,336,338,339,352,353],[107,150,353],[107,150,352,353],[107,150,326,331,333,334,337,338,352,353,369],[107,150,332,334],[107,150,341,352,353,379],[107,150,331,336,353,379,381],[107,150,341,379],[107,150,331,332,334,336,337,352,353,369],[107,150,334],[107,150,332,334,335,336,337,352,353],[107,150,326],[107,150,359],[107,150,331,332,333,334,337,342,343,352,353],[107,150,334,335],[107,150,340,341,346,352,353],[107,150,340,346,348,352,353],[107,150,334,338,353],[107,150,352,394],[107,150,333],[107,150,352],[107,150,342,351,353],[107,150,331,333,334,337,352,353],[107,150,404],[107,150,367],[107,150,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416],[107,150,326,417],[107,150,328],[107,150,430],[107,150,230],[107,150,227,229],[107,117,121,150,193],[107,117,150,182,193],[107,112,150],[107,114,117,150,190,193],[107,150,170,190],[107,112,150,200],[107,114,117,150,170,193],[107,109,110,113,116,150,162,182,193],[107,117,124,150],[107,109,115,150],[107,117,138,139,150],[107,113,117,150,185,193,200],[107,138,150,200],[107,111,112,150,200],[107,117,150],[107,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,150],[107,117,132,150],[107,117,124,125,150],[107,115,117,125,126,150],[107,116,150],[107,109,112,117,150],[107,117,121,125,126,150],[107,121,150],[107,115,117,120,150,193],[107,109,114,117,124,150],[107,150,182],[107,112,117,138,150,198,200],[107,150,241,295,296,297],[107,150,238],[107,150,202,227,238,239,240],[76,81,107,150,202,213],[107,150,205,214,215,216,217],[107,150,202],[76,81,107,150,202],[69,71,82,83,107,150,202],[71,81,83,107,150],[69,71,81,82,107,150,202],[68,84,107,150,202],[70,71,76,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,107,150,201],[66,68,69,107,150],[83,107,150],[84,86,107,150],[66,68,70,107,150],[71,81,107,150],[71,84,107,150,202],[70,71,81,107,150],[69,70,71,83,86,98,107,150],[69,70,107,150],[69,82,83,107,150,202],[71,83,107,150],[76,81,83,86,93,107,150,202],[81,107,150,202,218,257,266],[81,107,150,202,218,242,248,249,256,257,258,259,260,263,265],[81,107,150,202,218,248,266],[81,107,150,202,218,261,262,266],[81,107,150,202,218,262,264,266],[77,107,150,202,203,204,218,235],[79,81,107,150,202,237,322],[81,107,150,202,257,258],[107,150,202,258,262,287],[81,107,150,202,213,218,270,272,277,279],[107,150,271],[76,77,79,81,107,150,202,204,213,218,247,258,269,272,279,285,286,288,294],[76,79,81,107,150,202,213,218,268,269,272,277,279,280,284,289,293],[107,150,202,218,272,290,292],[81,107,150,202,277,278],[107,150,202,218,298,299,300],[81,107,150,202],[68,107,150,202,204,213,231,302],[81,107,150,202,242],[77,107,150,202,235,236,241,242,243,266,294,301,311,321,323],[81,107,150,202,203,213,236,241,242,243,245,246,247,266,267,294,301,303,305,308,309,311,318,319,320,322],[107,150,202,203,204,231,256,302,304],[107,150,202,218,281,286,298,306,307],[107,150,202,203,204,218,237],[76,81,107,150,202,204,218,310],[76,107,150,202,204,218,242,272,309,316,317],[107,150,319],[107,150,319,417],[107,150,174,319],[81,107,150,202,203,218,241,242,266,427,428,430,431],[81,107,150,288,427],[81,107,150,202,203,218,241,242,294,318,427,430,431,437,438],[81,107,150,202,203,213,218,241,242,280,427,430,431,441],[81,107,150,202,203,218,241,242,258,281,289,307,427,428,430,431],[81,107,150,202,241,242,294,322,427,430,431,438,444,445],[107,150,279,427],[107,150,202,203,218,241,242,292,293,427,428,430,431],[107,150,202,203,218,241,242,294,431],[107,150,202,203,218,301,427,428,431,449],[69,82,107,150,281,433],[81,107,150,202,203,241,242,317,427,430,434],[68,81,107,150,202,241,242,281,322,427,431,451,452],[81,107,150,202,322,427,431],[107,150,202,322,427,441],[107,150,202,241,242,322,427,431],[107,150,322,427],[81,107,150,202,203,218,241,242,281,308,427,428,431,433,451,452,458],[107,150,202,322,427],[107,150,320,427,462],[81,107,150,202,322,427,430,431],[81,107,150,202,241,242,281,322,427,428,430,431,451,452],[107,150,202,218,236,241,242,243,245,294,309,427,431],[107,150,202,218,236,281,322,427],[107,150,202,203,213,241,242,281,309,427,431],[81,107,150,202,203,236,241,242,243,266,311,427,430,431,441,444,475],[81,107,150,202,203,218,241,242,247,318,427,428,430,431,433,437,441,452,480],[107,150,202,203,218,241,242,318,431],[82,107,150,316],[107,150,202,312,313,314,315],[82,107,150,202,316],[107,150,206,207,208,209,210,211,212],[107,150,202,208],[107,150,202,206],[107,150,202,207],[66,68,107,150,202],[81,107,150,202,235],[107,150,202,286],[107,150,256],[107,150,254],[107,150,251,256],[107,150,251],[107,150,250,251,252,253,254,255],[107,150,252,256],[107,150,202,283,284],[107,150,202,284],[107,150,202,282,283],[107,150,202,282,284],[107,150,281],[81,218,266],[81,202,218],[77,202,218,235],[202,322],[202],[81,202,213,218],[271],[76,77,81,202,213,218,285],[81,202,213,218,280,289,293],[202,218],[81,202,277],[202,218,299],[81,202],[68,202],[77,202,235,236,243,266,294,301,311],[81,202,236,322],[202,203],[202,203,218],[202,218,294,431],[69,82],[202,218,318,431]],"referencedMap":[[484,1],[482,2],[248,2],[276,2],[277,3],[274,2],[275,2],[273,2],[77,4],[74,5],[73,5],[75,6],[258,7],[278,8],[80,7],[81,9],[72,7],[78,10],[79,11],[346,12],[345,13],[487,14],[483,1],[485,15],[486,1],[491,16],[422,17],[426,17],[424,17],[421,2],[493,18],[494,19],[495,20],[489,2],[496,2],[497,21],[498,22],[499,2],[500,2],[501,23],[502,2],[503,24],[517,25],[518,25],[505,26],[506,27],[504,28],[507,29],[508,30],[509,31],[510,32],[511,33],[512,34],[513,35],[514,36],[515,37],[516,38],[521,39],[522,40],[524,41],[519,2],[520,42],[525,2],[526,2],[527,2],[492,2],[528,43],[529,2],[530,19],[147,44],[148,44],[149,45],[150,46],[151,47],[152,48],[102,2],[105,49],[103,2],[104,2],[153,50],[154,51],[155,52],[156,53],[157,54],[158,55],[159,55],[161,56],[160,57],[162,58],[163,59],[164,60],[146,61],[165,62],[166,63],[167,64],[168,65],[169,66],[170,67],[171,68],[172,69],[173,70],[174,71],[175,72],[176,73],[177,74],[178,74],[179,75],[180,2],[181,2],[182,76],[184,77],[183,78],[185,79],[186,80],[187,81],[188,82],[189,83],[190,84],[191,85],[107,86],[106,2],[200,87],[192,88],[193,89],[194,90],[195,91],[196,92],[197,93],[198,94],[199,95],[531,2],[532,2],[490,96],[291,2],[557,97],[558,98],[533,99],[536,99],[555,97],[556,97],[546,97],[545,100],[543,97],[538,97],[551,97],[549,97],[553,97],[537,97],[550,97],[554,97],[539,97],[540,97],[552,97],[534,97],[541,97],[542,97],[544,97],[548,97],[559,101],[547,97],[535,97],[572,102],[571,2],[566,101],[568,103],[567,101],[560,101],[561,101],[563,101],[565,101],[569,103],[570,103],[562,103],[564,103],[430,104],[429,2],[573,2],[574,2],[575,2],[576,2],[523,2],[577,2],[578,105],[579,19],[580,2],[581,106],[582,107],[427,108],[286,2],[108,2],[425,17],[423,109],[244,110],[475,111],[470,112],[245,113],[472,114],[474,115],[469,116],[471,112],[473,114],[428,2],[235,117],[232,118],[233,2],[234,119],[451,2],[300,120],[452,2],[313,121],[479,122],[477,123],[480,124],[433,2],[302,2],[449,125],[304,2],[98,2],[478,120],[82,2],[458,2],[488,56],[237,2],[228,126],[64,2],[229,127],[65,128],[222,2],[68,129],[219,130],[220,131],[221,131],[223,132],[224,133],[66,2],[227,134],[226,135],[67,136],[225,2],[281,2],[441,137],[292,138],[440,2],[444,137],[76,2],[306,2],[307,2],[355,139],[356,2],[351,140],[357,2],[358,141],[361,142],[362,2],[363,143],[364,144],[383,145],[365,2],[366,146],[368,147],[370,148],[371,149],[372,150],[339,150],[373,151],[340,152],[374,153],[375,144],[376,154],[377,155],[378,2],[336,156],[380,157],[382,158],[381,159],[379,160],[341,151],[337,161],[338,162],[384,2],[367,163],[359,163],[360,164],[344,165],[342,2],[343,2],[385,163],[386,166],[387,2],[388,147],[347,167],[349,168],[389,2],[390,169],[391,2],[392,2],[393,2],[395,170],[396,2],[348,2],[399,171],[397,2],[398,171],[400,2],[401,153],[403,153],[402,153],[354,153],[353,172],[352,173],[350,174],[404,2],[405,175],[334,171],[406,142],[407,142],[409,176],[410,163],[394,2],[411,2],[412,2],[415,2],[326,2],[413,2],[414,2],[408,2],[417,177],[325,2],[327,178],[328,179],[329,2],[330,2],[369,2],[331,2],[416,13],[332,2],[335,161],[333,2],[431,180],[62,2],[63,2],[11,2],[12,2],[15,2],[14,2],[2,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[23,2],[3,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[8,2],[52,2],[49,2],[50,2],[51,2],[53,2],[9,2],[54,2],[55,2],[56,2],[59,2],[57,2],[58,2],[60,2],[61,2],[10,2],[1,2],[13,2],[69,2],[246,2],[247,181],[231,181],[230,182],[124,183],[134,184],[123,183],[144,185],[115,186],[114,187],[143,19],[137,188],[142,189],[117,190],[131,191],[116,192],[140,193],[112,194],[111,19],[141,195],[113,196],[118,197],[119,2],[122,197],[109,2],[145,198],[135,199],[126,200],[127,201],[129,202],[125,203],[128,204],[138,19],[120,205],[121,206],[130,207],[110,208],[133,199],[132,197],[136,2],[139,209],[462,2],[295,2],[298,210],[239,211],[241,212],[238,2],[240,211],[296,2],[297,2],[205,7],[214,213],[218,214],[215,215],[216,215],[217,216],[95,217],[96,218],[83,219],[85,220],[101,2],[86,2],[201,23],[202,221],[70,222],[87,223],[97,224],[71,225],[84,226],[88,227],[89,228],[99,229],[100,230],[90,2],[91,223],[93,231],[92,232],[94,233],[259,234],[266,235],[260,236],[263,237],[265,238],[236,239],[323,240],[419,241],[267,215],[288,242],[280,243],[420,244],[271,2],[272,244],[289,245],[294,246],[293,247],[279,248],[301,249],[317,250],[303,251],[204,2],[269,252],[322,253],[321,254],[305,255],[308,256],[309,257],[311,258],[318,259],[324,260],[418,261],[320,262],[319,2],[432,263],[436,264],[439,265],[442,266],[443,267],[446,268],[447,269],[448,270],[438,271],[450,272],[434,273],[435,274],[453,275],[454,276],[455,277],[456,278],[457,279],[459,280],[460,281],[461,281],[463,282],[445,2],[464,283],[465,284],[466,285],[467,286],[468,287],[476,288],[481,289],[437,290],[203,215],[312,2],[315,291],[316,292],[314,293],[209,215],[213,294],[208,215],[206,215],[207,215],[212,295],[210,296],[211,297],[242,298],[243,299],[299,300],[270,215],[249,215],[250,301],[255,302],[252,303],[254,304],[251,2],[256,305],[253,306],[261,7],[287,7],[264,7],[262,7],[290,307],[285,308],[257,2],[284,309],[283,310],[282,311],[268,2],[310,215]],"exportedModulesMap":[[484,1],[482,2],[248,2],[276,2],[277,3],[274,2],[275,2],[273,2],[77,4],[74,5],[73,5],[75,6],[258,7],[278,8],[80,7],[81,9],[72,7],[78,10],[79,11],[346,12],[345,13],[487,14],[483,1],[485,15],[486,1],[491,16],[422,17],[426,17],[424,17],[421,2],[493,18],[494,19],[495,20],[489,2],[496,2],[497,21],[498,22],[499,2],[500,2],[501,23],[502,2],[503,24],[517,25],[518,25],[505,26],[506,27],[504,28],[507,29],[508,30],[509,31],[510,32],[511,33],[512,34],[513,35],[514,36],[515,37],[516,38],[521,39],[522,40],[524,41],[519,2],[520,42],[525,2],[526,2],[527,2],[492,2],[528,43],[529,2],[530,19],[147,44],[148,44],[149,45],[150,46],[151,47],[152,48],[102,2],[105,49],[103,2],[104,2],[153,50],[154,51],[155,52],[156,53],[157,54],[158,55],[159,55],[161,56],[160,57],[162,58],[163,59],[164,60],[146,61],[165,62],[166,63],[167,64],[168,65],[169,66],[170,67],[171,68],[172,69],[173,70],[174,71],[175,72],[176,73],[177,74],[178,74],[179,75],[180,2],[181,2],[182,76],[184,77],[183,78],[185,79],[186,80],[187,81],[188,82],[189,83],[190,84],[191,85],[107,86],[106,2],[200,87],[192,88],[193,89],[194,90],[195,91],[196,92],[197,93],[198,94],[199,95],[531,2],[532,2],[490,96],[291,2],[557,97],[558,98],[533,99],[536,99],[555,97],[556,97],[546,97],[545,100],[543,97],[538,97],[551,97],[549,97],[553,97],[537,97],[550,97],[554,97],[539,97],[540,97],[552,97],[534,97],[541,97],[542,97],[544,97],[548,97],[559,101],[547,97],[535,97],[572,102],[571,2],[566,101],[568,103],[567,101],[560,101],[561,101],[563,101],[565,101],[569,103],[570,103],[562,103],[564,103],[430,104],[429,2],[573,2],[574,2],[575,2],[576,2],[523,2],[577,2],[578,105],[579,19],[580,2],[581,106],[582,107],[427,108],[286,2],[108,2],[425,17],[423,109],[244,110],[475,111],[470,112],[245,113],[472,114],[474,115],[469,116],[471,112],[473,114],[428,2],[235,117],[232,118],[233,2],[234,119],[451,2],[300,120],[452,2],[313,121],[479,122],[477,123],[480,124],[433,2],[302,2],[449,125],[304,2],[98,2],[478,120],[82,2],[458,2],[488,56],[237,2],[228,126],[64,2],[229,127],[65,128],[222,2],[68,129],[219,130],[220,131],[221,131],[223,132],[224,133],[66,2],[227,134],[226,135],[67,136],[225,2],[281,2],[441,137],[292,138],[440,2],[444,137],[76,2],[306,2],[307,2],[355,139],[356,2],[351,140],[357,2],[358,141],[361,142],[362,2],[363,143],[364,144],[383,145],[365,2],[366,146],[368,147],[370,148],[371,149],[372,150],[339,150],[373,151],[340,152],[374,153],[375,144],[376,154],[377,155],[378,2],[336,156],[380,157],[382,158],[381,159],[379,160],[341,151],[337,161],[338,162],[384,2],[367,163],[359,163],[360,164],[344,165],[342,2],[343,2],[385,163],[386,166],[387,2],[388,147],[347,167],[349,168],[389,2],[390,169],[391,2],[392,2],[393,2],[395,170],[396,2],[348,2],[399,171],[397,2],[398,171],[400,2],[401,153],[403,153],[402,153],[354,153],[353,172],[352,173],[350,174],[404,2],[405,175],[334,171],[406,142],[407,142],[409,176],[410,163],[394,2],[411,2],[412,2],[415,2],[326,2],[413,2],[414,2],[408,2],[417,177],[325,2],[327,178],[328,179],[329,2],[330,2],[369,2],[331,2],[416,13],[332,2],[335,161],[333,2],[431,180],[62,2],[63,2],[11,2],[12,2],[15,2],[14,2],[2,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[23,2],[3,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[8,2],[52,2],[49,2],[50,2],[51,2],[53,2],[9,2],[54,2],[55,2],[56,2],[59,2],[57,2],[58,2],[60,2],[61,2],[10,2],[1,2],[13,2],[69,2],[246,2],[247,181],[231,181],[230,182],[124,183],[134,184],[123,183],[144,185],[115,186],[114,187],[143,19],[137,188],[142,189],[117,190],[131,191],[116,192],[140,193],[112,194],[111,19],[141,195],[113,196],[118,197],[119,2],[122,197],[109,2],[145,198],[135,199],[126,200],[127,201],[129,202],[125,203],[128,204],[138,19],[120,205],[121,206],[130,207],[110,208],[133,199],[132,197],[136,2],[139,209],[462,2],[295,2],[298,210],[239,211],[241,212],[238,2],[240,211],[296,2],[297,2],[205,7],[214,213],[218,214],[215,215],[216,215],[217,216],[95,217],[96,218],[83,219],[85,220],[101,2],[86,2],[201,23],[202,221],[70,222],[87,223],[97,224],[71,225],[84,226],[88,227],[89,228],[99,229],[100,230],[90,2],[91,223],[93,231],[92,232],[94,233],[259,312],[266,313],[260,312],[263,312],[265,312],[236,314],[323,315],[419,316],[267,316],[288,316],[280,317],[420,318],[272,318],[289,319],[294,320],[293,321],[279,322],[301,323],[317,324],[303,325],[269,324],[322,326],[321,327],[305,328],[308,321],[309,329],[311,313],[318,321],[438,330],[434,331],[437,332],[203,215],[312,2],[315,291],[316,292],[314,293],[209,215],[213,294],[208,215],[206,215],[207,215],[212,295],[210,296],[211,297],[242,298],[243,299],[299,300],[270,215],[249,215],[250,301],[255,302],[252,303],[254,304],[251,2],[256,305],[253,306],[261,7],[287,7],[264,7],[262,7],[290,307],[285,308],[257,2],[284,309],[283,310],[282,311],[268,2],[310,215]],"semanticDiagnosticsPerFile":[484,482,248,276,277,274,275,273,77,74,73,75,258,278,80,81,72,78,79,346,345,487,483,485,486,491,422,426,424,421,493,494,495,489,496,497,498,499,500,501,502,503,517,518,505,506,504,507,508,509,510,511,512,513,514,515,516,521,522,524,519,520,525,526,527,492,528,529,530,147,148,149,150,151,152,102,105,103,104,153,154,155,156,157,158,159,161,160,162,163,164,146,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,183,185,186,187,188,189,190,191,107,106,200,192,193,194,195,196,197,198,199,531,532,490,291,557,558,533,536,555,556,546,545,543,538,551,549,553,537,550,554,539,540,552,534,541,542,544,548,559,547,535,572,571,566,568,567,560,561,563,565,569,570,562,564,430,429,573,574,575,576,523,577,578,579,580,581,582,427,286,108,425,423,244,475,470,245,472,474,469,471,473,428,235,232,233,234,451,300,452,313,479,477,480,433,302,449,304,98,478,82,458,488,237,228,64,229,65,222,68,219,220,221,223,224,66,227,226,67,225,281,441,292,440,444,76,306,307,355,356,351,357,358,361,362,363,364,383,365,366,368,370,371,372,339,373,340,374,375,376,377,378,336,380,382,381,379,341,337,338,384,367,359,360,344,342,343,385,386,387,388,347,349,389,390,391,392,393,395,396,348,399,397,398,400,401,403,402,354,353,352,350,404,405,334,406,407,409,410,394,411,412,415,326,413,414,408,417,325,327,328,329,330,369,331,416,332,335,333,431,62,63,11,12,15,14,2,16,17,18,19,20,21,22,23,3,24,4,25,29,26,27,28,30,31,32,5,33,34,35,36,6,40,37,38,39,41,7,42,47,48,43,44,45,46,8,52,49,50,51,53,9,54,55,56,59,57,58,60,61,10,1,13,69,246,247,231,230,124,134,123,144,115,114,143,137,142,117,131,116,140,112,111,141,113,118,119,122,109,145,135,126,127,129,125,128,138,120,121,130,110,133,132,136,139,462,295,298,239,241,238,240,296,297,205,214,218,215,216,217,95,96,83,85,101,86,201,202,70,87,97,71,84,88,89,99,100,90,91,93,92,94,259,266,260,263,265,236,323,419,267,288,280,420,271,272,289,294,293,279,301,317,303,204,269,322,321,305,308,309,311,318,324,418,320,319,432,436,439,442,443,446,447,448,438,450,434,435,453,454,455,456,457,459,460,461,463,445,464,465,466,467,468,476,481,437,203,312,315,316,314,209,213,208,206,207,212,210,211,242,243,299,270,249,250,255,252,254,251,256,253,261,287,264,262,290,285,257,284,283,282,268,310],"latestChangedDtsFile":"./test/upgrading/upgrader.spec.d.ts"},"version":"5.4.5"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/typedoc-urls.json b/node_modules/libp2p/dist/typedoc-urls.json
deleted file mode 100644
index 4831d2e..0000000
--- a/node_modules/libp2p/dist/typedoc-urls.json
+++ /dev/null
@@ -1,21 +0,0 @@
-{
-  "AddressFilter": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.AddressFilter.html",
-  "AddressManagerInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.AddressManagerInit.html",
-  "ConnectionManagerInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.ConnectionManagerInit.html",
-  "ConnectionMonitorInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.ConnectionMonitorInit.html",
-  "Libp2pInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.Libp2pInit.html",
-  ".:Libp2pInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.Libp2pInit.html",
-  "TransportManagerInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.TransportManagerInit.html",
-  "Libp2pOptions": "https://libp2p.github.io/js-libp2p/types/libp2p.index.Libp2pOptions.html",
-  ".:Libp2pOptions": "https://libp2p.github.io/js-libp2p/types/libp2p.index.Libp2pOptions.html",
-  "ServiceFactoryMap": "https://libp2p.github.io/js-libp2p/types/libp2p.index.ServiceFactoryMap.html",
-  ".:ServiceFactoryMap": "https://libp2p.github.io/js-libp2p/types/libp2p.index.ServiceFactoryMap.html",
-  "createLibp2p": "https://libp2p.github.io/js-libp2p/functions/libp2p.index.createLibp2p.html",
-  ".:createLibp2p": "https://libp2p.github.io/js-libp2p/functions/libp2p.index.createLibp2p.html",
-  "userAgent": "https://libp2p.github.io/js-libp2p/functions/libp2p.user_agent.userAgent.html",
-  "./user-agent:userAgent": "https://libp2p.github.io/js-libp2p/functions/libp2p.user_agent.userAgent.html",
-  "name": "https://libp2p.github.io/js-libp2p/variables/libp2p.version.name.html",
-  "./version:name": "https://libp2p.github.io/js-libp2p/variables/libp2p.version.name.html",
-  "version": "https://libp2p.github.io/js-libp2p/variables/libp2p.version.version.html",
-  "./version:version": "https://libp2p.github.io/js-libp2p/variables/libp2p.version.version.html"
-}
\ No newline at end of file
diff --git a/node_modules/libp2p/src/.DS_Store b/node_modules/libp2p/src/.DS_Store
new file mode 100644
index 0000000..77cb7f1
Binary files /dev/null and b/node_modules/libp2p/src/.DS_Store differ
diff --git a/node_modules/libp2p/src/upgrader.ts b/node_modules/libp2p/src/upgrader.ts
index 39996a3..e33f0ea 100644
--- a/node_modules/libp2p/src/upgrader.ts
+++ b/node_modules/libp2p/src/upgrader.ts
@@ -181,7 +181,20 @@ export class DefaultUpgrader implements Upgrader {
    * Upgrades an inbound connection
    */
   async upgradeInbound (maConn: MultiaddrConnection, opts: UpgraderOptions = {}): Promise<void> {
+    const where = new Error('where')
     let accepted = false
+    let finished = false
+    let didAcceptIncoming = false
+    let didShouldBlock = false
+    let didUpgrade = false
+
+    const timeout = setTimeout(() => {
+      console.info('wat, did not finish upgrading', maConn, opts)
+      console.info('staus', accepted, finished, didAcceptIncoming, didShouldBlock, didUpgrade)
+      console.info('called', where.stack)
+      console.info('wat')
+    }, 60_000 * 5)
+    timeout.unref()
 
     try {
       this.metrics.dials?.increment({
@@ -189,14 +202,17 @@ export class DefaultUpgrader implements Upgrader {
       })
 
       accepted = await this.components.connectionManager.acceptIncomingConnection(maConn)
+      didAcceptIncoming = true
 
       if (!accepted) {
         throw new ConnectionDeniedError('Connection denied')
       }
 
       await this.shouldBlockConnection('denyInboundConnection', maConn)
+      didShouldBlock = true
 
       await this._performUpgrade(maConn, 'inbound', opts)
+      didUpgrade = true
     } catch (err) {
       this.metrics.errors?.increment({
         inbound: true
@@ -204,6 +220,9 @@ export class DefaultUpgrader implements Upgrader {
 
       throw err
     } finally {
+      clearTimeout(timeout)
+      finished = true
+
       if (accepted) {
         this.components.connectionManager.afterUpgradeInbound()
       }
diff --git a/node_modules/libp2p/src/version.ts b/node_modules/libp2p/src/version.ts
index 862364b..238af77 100644
--- a/node_modules/libp2p/src/version.ts
+++ b/node_modules/libp2p/src/version.ts
@@ -1,2 +1,2 @@
-export const version = '2.7.2'
+export const version = '0.0.0'
 export const name = 'js-libp2p'
