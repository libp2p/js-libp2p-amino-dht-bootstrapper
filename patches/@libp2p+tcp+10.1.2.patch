diff --git a/node_modules/@libp2p/tcp/dist/index.min.js b/node_modules/@libp2p/tcp/dist/index.min.js
index 6579ccb..c1365fe 100644
--- a/node_modules/@libp2p/tcp/dist/index.min.js
+++ b/node_modules/@libp2p/tcp/dist/index.min.js
@@ -1,3 +1,3 @@
 (function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2PTcp = factory()}(typeof self !== 'undefined' ? self : this, function () {
-"use strict";var Libp2PTcp=(()=>{var Rr=Object.create;var xe=Object.defineProperty;var jr=Object.getOwnPropertyDescriptor;var qr=Object.getOwnPropertyNames;var Wr=Object.getPrototypeOf,Gr=Object.prototype.hasOwnProperty;var F=(r=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):r)(function(r){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+r+'" is not supported')});var D=(r,e)=>{for(var t in e)xe(r,t,{get:e[t],enumerable:!0})},Vt=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of qr(e))!Gr.call(r,o)&&o!==t&&xe(r,o,{get:()=>e[o],enumerable:!(n=jr(e,o))||n.enumerable});return r};var le=(r,e,t)=>(t=r!=null?Rr(Wr(r)):{},Vt(e||!r||!r.__esModule?xe(t,"default",{value:r,enumerable:!0}):t,r)),Hr=r=>Vt(xe({},"__esModule",{value:!0}),r);var Qo={};D(Qo,{tcp:()=>Jo});var _r=le(F("net"),1);var Bt=Symbol.for("@libp2p/transport");var zt;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(zt||(zt={}));var ge=class extends Error{static name="AbortError";constructor(e="The operation was aborted"){super(e),this.name="AbortError"}};var V=class extends Error{static name="InvalidParametersError";constructor(e="Invalid parameters"){super(e),this.name="InvalidParametersError"}};var Z=class extends Error{static name="TimeoutError";constructor(e="Timed out"){super(e),this.name="TimeoutError"}},we=class extends Error{static name="NotStartedError";constructor(e="Not started"){super(e),this.name="NotStartedError"}},be=class extends Error{static name="AlreadyStartedError";constructor(e="Already started"){super(e),this.name="AlreadyStartedError"}};var _t=F("node:events"),ve=(r,...e)=>{try{(0,_t.setMaxListeners)(r,...e)}catch{}};var ye=class extends EventTarget{#e=new Map;constructor(){super(),ve(1/0,this)}listenerCount(e){let t=this.#e.get(e);return t==null?0:t.length}addEventListener(e,t,n){super.addEventListener(e,t,n);let o=this.#e.get(e);o==null&&(o=[],this.#e.set(e,o)),o.push({callback:t,once:(n!==!0&&n!==!1&&n?.once)??!1})}removeEventListener(e,t,n){super.removeEventListener(e.toString(),t??null,n);let o=this.#e.get(e);o!=null&&(o=o.filter(({callback:s})=>s!==t),this.#e.set(e,o))}dispatchEvent(e){let t=super.dispatchEvent(e),n=this.#e.get(e.type);return n==null||(n=n.filter(({once:o})=>!o),this.#e.set(e.type,n)),t}safeDispatchEvent(e,t={}){return this.dispatchEvent(new CustomEvent(e,t))}};var Rt=Symbol.for("@libp2p/service-capabilities"),rs=Symbol.for("@libp2p/service-dependencies");var jt=F("node:buffer");function ee(r){return new Uint8Array(r.buffer,r.byteOffset,r.byteLength)}function Ee(r=0){return ee(jt.Buffer.allocUnsafe(r))}var Jr=Math.pow(2,7),Qr=Math.pow(2,14),Xr=Math.pow(2,21),Be=Math.pow(2,28),_e=Math.pow(2,35),Re=Math.pow(2,42),je=Math.pow(2,49),g=128,C=127;function z(r){if(r<Jr)return 1;if(r<Qr)return 2;if(r<Xr)return 3;if(r<Be)return 4;if(r<_e)return 5;if(r<Re)return 6;if(r<je)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function Kr(r,e,t=0){switch(z(r)){case 8:e[t++]=r&255|g,r/=128;case 7:e[t++]=r&255|g,r/=128;case 6:e[t++]=r&255|g,r/=128;case 5:e[t++]=r&255|g,r/=128;case 4:e[t++]=r&255|g,r>>>=7;case 3:e[t++]=r&255|g,r>>>=7;case 2:e[t++]=r&255|g,r>>>=7;case 1:{e[t++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return e}function Yr(r,e,t=0){switch(z(r)){case 8:e.set(t++,r&255|g),r/=128;case 7:e.set(t++,r&255|g),r/=128;case 6:e.set(t++,r&255|g),r/=128;case 5:e.set(t++,r&255|g),r/=128;case 4:e.set(t++,r&255|g),r>>>=7;case 3:e.set(t++,r&255|g),r>>>=7;case 2:e.set(t++,r&255|g),r>>>=7;case 1:{e.set(t++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return e}function Zr(r,e){let t=r[e],n=0;if(n+=t&C,t<g||(t=r[e+1],n+=(t&C)<<7,t<g)||(t=r[e+2],n+=(t&C)<<14,t<g)||(t=r[e+3],n+=(t&C)<<21,t<g)||(t=r[e+4],n+=(t&C)*Be,t<g)||(t=r[e+5],n+=(t&C)*_e,t<g)||(t=r[e+6],n+=(t&C)*Re,t<g)||(t=r[e+7],n+=(t&C)*je,t<g))return n;throw new RangeError("Could not decode varint")}function en(r,e){let t=r.get(e),n=0;if(n+=t&C,t<g||(t=r.get(e+1),n+=(t&C)<<7,t<g)||(t=r.get(e+2),n+=(t&C)<<14,t<g)||(t=r.get(e+3),n+=(t&C)<<21,t<g)||(t=r.get(e+4),n+=(t&C)*Be,t<g)||(t=r.get(e+5),n+=(t&C)*_e,t<g)||(t=r.get(e+6),n+=(t&C)*Re,t<g)||(t=r.get(e+7),n+=(t&C)*je,t<g))return n;throw new RangeError("Could not decode varint")}function te(r,e,t=0){return e==null&&(e=Ee(z(r))),e instanceof Uint8Array?Kr(r,e,t):Yr(r,e,t)}function J(r,e=0){return r instanceof Uint8Array?Zr(r,e):en(r,e)}var Wt=F("node:buffer");function _(r,e){return ee(Wt.Buffer.concat(r,e))}var dr=F("node:buffer");var Je={};D(Je,{base10:()=>cn});var Ms=new Uint8Array(0);function Gt(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function k(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function Ht(r){return new TextEncoder().encode(r)}function Jt(r){return new TextDecoder().decode(r)}function tn(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var o=0;o<r.length;o++){var s=r.charAt(o),i=s.charCodeAt(0);if(t[i]!==255)throw new TypeError(s+" is ambiguous");t[i]=o}var a=r.length,d=r.charAt(0),m=Math.log(a)/Math.log(256),p=Math.log(256)/Math.log(a);function h(f){if(f instanceof Uint8Array||(ArrayBuffer.isView(f)?f=new Uint8Array(f.buffer,f.byteOffset,f.byteLength):Array.isArray(f)&&(f=Uint8Array.from(f))),!(f instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(f.length===0)return"";for(var I=0,T=0,x=0,w=f.length;x!==w&&f[x]===0;)x++,I++;for(var L=(w-x)*p+1>>>0,M=new Uint8Array(L);x!==w;){for(var O=f[x],j=0,N=L-1;(O!==0||j<T)&&N!==-1;N--,j++)O+=256*M[N]>>>0,M[N]=O%a>>>0,O=O/a>>>0;if(O!==0)throw new Error("Non-zero carry");T=j,x++}for(var B=L-T;B!==L&&M[B]===0;)B++;for(var me=d.repeat(I);B<L;++B)me+=r.charAt(M[B]);return me}function b(f){if(typeof f!="string")throw new TypeError("Expected String");if(f.length===0)return new Uint8Array;var I=0;if(f[I]!==" "){for(var T=0,x=0;f[I]===d;)T++,I++;for(var w=(f.length-I)*m+1>>>0,L=new Uint8Array(w);f[I];){var M=t[f.charCodeAt(I)];if(M===255)return;for(var O=0,j=w-1;(M!==0||O<x)&&j!==-1;j--,O++)M+=a*L[j]>>>0,L[j]=M%256>>>0,M=M/256>>>0;if(M!==0)throw new Error("Non-zero carry");x=O,I++}if(f[I]!==" "){for(var N=w-x;N!==w&&L[N]===0;)N++;for(var B=new Uint8Array(T+(w-N)),me=T;N!==w;)B[me++]=L[N++];return B}}}function l(f){var I=b(f);if(I)return I;throw new Error(`Non-${e} character`)}return{encode:h,decodeUnsafe:b,decode:l}}var rn=tn,nn=rn,Xt=nn;var qe=class{name;prefix;baseEncode;constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},We=class{name;prefix;baseDecode;prefixCodePoint;constructor(e,t,n){this.name=e,this.prefix=t;let o=t.codePointAt(0);if(o===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=o,this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return Kt(this,e)}},Ge=class{decoders;constructor(e){this.decoders=e}or(e){return Kt(this,e)}decode(e){let t=e[0],n=this.decoders[t];if(n!=null)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Kt(r,e){return new Ge({...r.decoders??{[r.prefix]:r},...e.decoders??{[e.prefix]:e}})}var He=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(e,t,n,o){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=o,this.encoder=new qe(e,t,n),this.decoder=new We(e,t,o)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};function re({name:r,prefix:e,encode:t,decode:n}){return new He(r,e,t,n)}function q({name:r,prefix:e,alphabet:t}){let{encode:n,decode:o}=Xt(t,r);return re({prefix:e,name:r,encode:n,decode:s=>k(o(s))})}function on(r,e,t,n){let o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let s=r.length;for(;r[s-1]==="=";)--s;let i=new Uint8Array(s*t/8|0),a=0,d=0,m=0;for(let p=0;p<s;++p){let h=o[r[p]];if(h===void 0)throw new SyntaxError(`Non-${n} character`);d=d<<t|h,a+=t,a>=8&&(a-=8,i[m++]=255&d>>a)}if(a>=t||255&d<<8-a)throw new SyntaxError("Unexpected end of data");return i}function sn(r,e,t){let n=e[e.length-1]==="=",o=(1<<t)-1,s="",i=0,a=0;for(let d=0;d<r.length;++d)for(a=a<<8|r[d],i+=8;i>t;)i-=t,s+=e[o&a>>i];if(i!==0&&(s+=e[o&a<<t-i]),n)for(;s.length*t&7;)s+="=";return s}function y({name:r,prefix:e,bitsPerChar:t,alphabet:n}){return re({prefix:e,name:r,encode(o){return sn(o,n,t)},decode(o){return on(o,n,t,r)}})}var cn=q({prefix:"9",name:"base10",alphabet:"0123456789"});var Qe={};D(Qe,{base16:()=>an,base16upper:()=>ln});var an=y({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),ln=y({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Xe={};D(Xe,{base2:()=>un});var un=y({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Ke={};D(Ke,{base256emoji:()=>mn});var Yt=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),dn=Yt.reduce((r,e,t)=>(r[t]=e,r),[]),pn=Yt.reduce((r,e,t)=>{let n=e.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${e}`);return r[n]=t,r},[]);function fn(r){return r.reduce((e,t)=>(e+=dn[t],e),"")}function hn(r){let e=[];for(let t of r){let n=t.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${t}`);let o=pn[n];if(o==null)throw new Error(`Non-base256emoji character: ${t}`);e.push(o)}return new Uint8Array(e)}var mn=re({prefix:"\u{1F680}",name:"base256emoji",encode:fn,decode:hn});var Ye={};D(Ye,{base32:()=>R,base32hex:()=>bn,base32hexpad:()=>yn,base32hexpadupper:()=>En,base32hexupper:()=>vn,base32pad:()=>gn,base32padupper:()=>wn,base32upper:()=>xn,base32z:()=>In});var R=y({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),xn=y({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),gn=y({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),wn=y({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),bn=y({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),vn=y({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),yn=y({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),En=y({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),In=y({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var Ze={};D(Ze,{base36:()=>ue,base36upper:()=>An});var ue=q({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),An=q({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var et={};D(et,{base58btc:()=>P,base58flickr:()=>Cn});var P=q({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),Cn=q({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var tt={};D(tt,{base64:()=>Tn,base64pad:()=>Sn,base64url:()=>Pn,base64urlpad:()=>Ln});var Tn=y({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Sn=y({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Pn=y({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),Ln=y({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var rt={};D(rt,{base8:()=>Dn});var Dn=y({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var nt={};D(nt,{identity:()=>Mn});var Mn=re({prefix:"\0",name:"identity",encode:r=>Jt(r),decode:r=>Ht(r)});var Hs=new TextEncoder,Js=new TextDecoder;var st={};D(st,{identity:()=>eo});var Nn=tr,Zt=128,Fn=127,$n=~Fn,On=Math.pow(2,31);function tr(r,e,t){e=e||[],t=t||0;for(var n=t;r>=On;)e[t++]=r&255|Zt,r/=128;for(;r&$n;)e[t++]=r&255|Zt,r>>>=7;return e[t]=r|0,tr.bytes=t-n+1,e}var Vn=ot,zn=128,er=127;function ot(r,n){var t=0,n=n||0,o=0,s=n,i,a=r.length;do{if(s>=a)throw ot.bytes=0,new RangeError("Could not decode varint");i=r[s++],t+=o<28?(i&er)<<o:(i&er)*Math.pow(2,o),o+=7}while(i>=zn);return ot.bytes=s-n,t}var Bn=Math.pow(2,7),_n=Math.pow(2,14),Rn=Math.pow(2,21),jn=Math.pow(2,28),qn=Math.pow(2,35),Wn=Math.pow(2,42),Gn=Math.pow(2,49),Hn=Math.pow(2,56),Jn=Math.pow(2,63),Qn=function(r){return r<Bn?1:r<_n?2:r<Rn?3:r<jn?4:r<qn?5:r<Wn?6:r<Gn?7:r<Hn?8:r<Jn?9:10},Xn={encode:Nn,decode:Vn,encodingLength:Qn},Kn=Xn,de=Kn;function pe(r,e=0){return[de.decode(r,e),de.decode.bytes]}function ne(r,e,t=0){return de.encode(r,e,t),e}function oe(r){return de.encodingLength(r)}function Q(r,e){let t=e.byteLength,n=oe(r),o=n+oe(t),s=new Uint8Array(o+t);return ne(r,s,0),ne(t,s,n),s.set(e,o),new se(r,t,e,s)}function Ae(r){let e=k(r),[t,n]=pe(e),[o,s]=pe(e.subarray(n)),i=e.subarray(n+s);if(i.byteLength!==o)throw new Error("Incorrect length");return new se(t,o,i,e)}function rr(r,e){if(r===e)return!0;{let t=e;return r.code===t.code&&r.size===t.size&&t.bytes instanceof Uint8Array&&Gt(r.bytes,t.bytes)}}var se=class{code;size;digest;bytes;constructor(e,t,n,o){this.code=e,this.size=t,this.digest=n,this.bytes=o}};var nr=0,Yn="identity",or=k;function Zn(r){return Q(nr,or(r))}var eo={code:nr,name:Yn,encode:or,digest:Zn};var lt={};D(lt,{sha256:()=>to,sha512:()=>ro});var at=le(F("crypto"),1);function ct({name:r,code:e,encode:t}){return new it(r,e,t)}var it=class{name;code;encode;constructor(e,t,n){this.name=e,this.code=t,this.encode=n}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?Q(this.code,t):t.then(n=>Q(this.code,n))}else throw Error("Unknown type, must be binary type")}};var to=ct({name:"sha2-256",code:18,encode:r=>k(at.default.createHash("sha256").update(r).digest())}),ro=ct({name:"sha2-512",code:19,encode:r=>k(at.default.createHash("sha512").update(r).digest())});function ir(r,e){let{bytes:t,version:n}=r;switch(n){case 0:return oo(t,ut(r),e??P.encoder);default:return so(t,ut(r),e??R.encoder)}}var cr=new WeakMap;function ut(r){let e=cr.get(r);if(e==null){let t=new Map;return cr.set(r,t),t}return e}var W=class r{code;version;multihash;bytes;"/";constructor(e,t,n,o){this.code=t,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:e,multihash:t}=this;if(e!==fe)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==io)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,n=Q(e,t);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return r.equals(this,e)}static equals(e,t){let n=t;return n!=null&&e.code===n.code&&e.version===n.version&&rr(e.multihash,n.multihash)}toString(e){return ir(this,e)}toJSON(){return{"/":ir(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;let t=e;if(t instanceof r)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){let{version:n,code:o,multihash:s,bytes:i}=t;return new r(n,o,s,i??ar(n,o,s.bytes))}else if(t[co]===!0){let{version:n,multihash:o,code:s}=t,i=Ae(o);return r.create(n,s,i)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==fe)throw new Error(`Version 0 CID must use dag-pb (code: ${fe}) block encoding`);return new r(e,t,n,n.bytes)}case 1:{let o=ar(e,t,n.bytes);return new r(e,t,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return r.create(0,fe,e)}static createV1(e,t){return r.create(1,e,t)}static decode(e){let[t,n]=r.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=r.inspectBytes(e),n=t.size-t.multihashSize,o=k(e.subarray(n,n+t.multihashSize));if(o.byteLength!==t.multihashSize)throw new Error("Incorrect length");let s=o.subarray(t.multihashSize-t.digestSize),i=new se(t.multihashCode,t.digestSize,s,o);return[t.version===0?r.createV0(i):r.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){let t=0,n=()=>{let[h,b]=pe(e.subarray(t));return t+=b,h},o=n(),s=fe;if(o===18?(o=0,t=0):s=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);let i=t,a=n(),d=n(),m=t+d,p=m-i;return{version:o,codec:s,multihashCode:a,digestSize:d,multihashSize:p,size:m}}static parse(e,t){let[n,o]=no(e,t),s=r.decode(o);if(s.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return ut(s).set(n,e),s}};function no(r,e){switch(r[0]){case"Q":{let t=e??P;return[P.prefix,t.decode(`${P.prefix}${r}`)]}case P.prefix:{let t=e??P;return[P.prefix,t.decode(r)]}case R.prefix:{let t=e??R;return[R.prefix,t.decode(r)]}case ue.prefix:{let t=e??ue;return[ue.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}}function oo(r,e,t){let{prefix:n}=t;if(n!==P.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let o=e.get(n);if(o==null){let s=t.encode(r).slice(1);return e.set(n,s),s}else return o}function so(r,e,t){let{prefix:n}=t,o=e.get(n);if(o==null){let s=t.encode(r);return e.set(n,s),s}else return o}var fe=112,io=18;function ar(r,e,t){let n=oe(r),o=n+oe(e),s=new Uint8Array(o+t.byteLength);return ne(r,s,0),ne(e,s,n),s.set(t,o),s}var co=Symbol.for("@ipld/js-cid/CID");var he={...nt,...Xe,...rt,...Je,...Qe,...Ye,...Ze,...et,...tt,...Ke},gi={...lt,...st};function ur(r,e,t,n){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:n}}}var lr=ur("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),dt=ur("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);let e=Ee(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),ao={utf8:lr,"utf-8":lr,hex:he.base16,latin1:dt,ascii:dt,binary:dt,...he},Ce=ao;function S(r,e="utf8"){let t=Ce[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return e==="utf8"||e==="utf-8"?dr.Buffer.from(r.buffer,r.byteOffset,r.byteLength).toString("utf8"):t.encoder.encode(r).substring(1)}var Te=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,n=e();return n===void 0&&(this.index=t),n}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,n){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,t,n,o){return this.readAtomically(()=>{let s=0,i=0,a=this.peekChar();if(a===void 0)return;let d=a==="0",m=2**(8*o)-1;for(;;){let p=this.readAtomically(()=>{let h=this.readChar();if(h===void 0)return;let b=Number.parseInt(h,e);if(!Number.isNaN(b))return b});if(p===void 0)break;if(s*=e,s+=p,s>m||(i+=1,t!==void 0&&i>t))return}if(i!==0)return!n&&d&&i>1?void 0:s})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let n=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[t]=n}return e})}readIPv6Addr(){let e=t=>{for(let n=0;n<t.length/2;n++){let o=n*2;if(n<t.length-3){let i=this.readSeparator(":",n,()=>this.readIPv4Addr());if(i!==void 0)return t[o]=i[0],t[o+1]=i[1],t[o+2]=i[2],t[o+3]=i[3],[o+4,!0]}let s=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(s===void 0)return[o,!1];t[o]=s>>8,t[o+1]=s&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[n,o]=e(t);if(n===16)return t;if(o||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let s=new Uint8Array(14),i=16-(n+2),[a]=e(s.subarray(0,i));return t.set(s.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var Ti=new Te;var Ni=parseInt("0xFFFF",16),Fi=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);var hr=F("node:buffer");function Se(r,e="utf8"){let t=Ce[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return e==="utf8"||e==="utf-8"?ee(hr.Buffer.from(r,"utf-8")):t.decoder.decode(`${t.prefix}${r}`)}var U=F("node:net");function Pe(r){return!!(0,U.isIP)(r)}var mr=U.isIPv4,mo=U.isIPv6,pt=function(r){let e=0;if(r=r.toString().trim(),mr(r)){let t=new Uint8Array(e+4);return r.split(/\./g).forEach(n=>{t[e++]=parseInt(n,10)&255}),t}if(mo(r)){let t=r.split(":",8),n;for(n=0;n<t.length;n++){let s=mr(t[n]),i;s&&(i=pt(t[n]),t[n]=S(i.slice(0,2),"base16")),i!=null&&++n<8&&t.splice(n,0,S(i.slice(2,4),"base16"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(n=0;n<t.length&&t[n]!=="";n++);let s=[n,1];for(n=9-t.length;n>0;n--)s.push("0");t.splice.apply(t,s)}let o=new Uint8Array(e+16);for(n=0;n<t.length;n++){let s=parseInt(t[n],16);o[e++]=s>>8&255,o[e++]=s&255}return o}throw new Error("invalid ip address")},xr=function(r,e=0,t){e=~~e,t=t??r.length-e;let n=new DataView(r.buffer);if(t===4){let o=[];for(let s=0;s<t;s++)o.push(r[e+s]);return o.join(".")}if(t===16){let o=[];for(let s=0;s<t;s+=2)o.push(n.getUint16(e+s).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var ce={},ft={},go=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];go.forEach(r=>{let e=wo(...r);ft[e.code]=e,ce[e.name]=e});function wo(r,e,t,n,o){return{code:r,size:e,name:t,resolvable:!!n,path:!!o}}function v(r){if(typeof r=="number"){if(ft[r]!=null)return ft[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(ce[r]!=null)return ce[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var Ec=v("ip4"),Ic=v("ip6"),Ac=v("ipcidr");function gt(r,e){switch(v(r).code){case 4:case 41:return vo(e);case 42:return xt(e);case 43:return S(e,"base10");case 6:case 273:case 33:case 132:return br(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return xt(e);case 421:return Ao(e);case 444:return wr(e);case 445:return wr(e);case 466:return Io(e);case 481:return globalThis.encodeURIComponent(xt(e));default:return S(e,"base16")}}function wt(r,e){switch(v(r).code){case 4:return gr(e);case 41:return gr(e);case 42:return mt(e);case 43:return Se(e,"base10");case 6:case 273:case 33:case 132:return bt(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return mt(e);case 421:return yo(e);case 444:return Co(e);case 445:return To(e);case 466:return Eo(e);case 481:return mt(globalThis.decodeURIComponent(e));default:return Se(e,"base16")}}var ht=Object.values(he).map(r=>r.decoder),bo=function(){let r=ht[0].or(ht[1]);return ht.slice(2).forEach(e=>r=r.or(e)),r}();function gr(r){if(!Pe(r))throw new Error("invalid ip address");return pt(r)}function vo(r){let e=xr(r,0,r.length);if(e==null)throw new Error("ipBuff is required");if(!Pe(e))throw new Error("invalid ip address");return e}function bt(r){let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function br(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function mt(r){let e=Se(r),t=Uint8Array.from(te(e.length));return _([t,e],t.length+e.length)}function xt(r){let e=J(r);if(r=r.slice(z(e)),r.length!==e)throw new Error("inconsistent lengths");return S(r)}function yo(r){let e;r[0]==="Q"||r[0]==="1"?e=Ae(P.decode(`z${r}`)).bytes:e=W.parse(r).multihash.bytes;let t=Uint8Array.from(te(e.length));return _([t,e],t.length+e.length)}function Eo(r){let e=bo.decode(r),t=Uint8Array.from(te(e.length));return _([t,e],t.length+e.length)}function Io(r){let e=J(r),t=r.slice(z(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+S(t,"base64url")}function Ao(r){let e=J(r),t=r.slice(z(e));if(t.length!==e)throw new Error("inconsistent lengths");return S(t,"base58btc")}function Co(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);let t=R.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=bt(n);return _([t,o],t.length+o.length)}function To(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);let t=R.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=bt(n);return _([t,o],t.length+o.length)}function wr(r){let e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=S(e,"base32"),o=br(t);return`${n}:${o}`}function vr(r){r=vt(r);let e=[],t=[],n=null,o=r.split("/").slice(1);if(o.length===1&&o[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let s=0;s<o.length;s++){let i=o[s],a=v(i);if(a.size===0){e.push([a.code]),t.push([a.code]);continue}if(s++,s>=o.length)throw new Le("invalid address: "+r);if(a.path===!0){n=vt(o.slice(s).join("/")),e.push([a.code,wt(a.code,n)]),t.push([a.code,n]);break}let d=wt(a.code,o[s]);e.push([a.code,d]),t.push([a.code,gt(a.code,d)])}return{string:yr(t),bytes:De(e),tuples:e,stringTuples:t,path:n}}function yt(r){let e=[],t=[],n=null,o=0;for(;o<r.length;){let s=J(r,o),i=z(s),a=v(s),d=So(a,r.slice(o+i));if(d===0){e.push([s]),t.push([s]),o+=i;continue}let m=r.slice(o+i,o+i+d);if(o+=d+i,o>r.length)throw new Le("Invalid address Uint8Array: "+S(r,"base16"));e.push([s,m]);let p=gt(s,m);if(t.push([s,p]),a.path===!0){n=p;break}}return{bytes:Uint8Array.from(r),string:yr(t),tuples:e,stringTuples:t,path:n}}function yr(r){let e=[];return r.map(t=>{let n=v(t[0]);return e.push(n.name),t.length>1&&t[1]!=null&&e.push(t[1]),null}),vt(e.join("/"))}function De(r){return _(r.map(e=>{let t=v(e[0]),n=Uint8Array.from(te(t.code));return e.length>1&&e[1]!=null&&(n=_([n,e[1]])),n}))}function So(r,e){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let t=J(e instanceof Uint8Array?e:Uint8Array.from(e));return t+z(t)}}function vt(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}var Le=class extends Error{static name="ParseError";name="ParseError";constructor(e){super(`Error parsing address: ${e}`)}};function Er(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}var Po=Symbol.for("nodejs.util.inspect.custom"),It=Symbol.for("@multiformats/js-multiaddr/multiaddr"),Lo=[v("dns").code,v("dns4").code,v("dns6").code,v("dnsaddr").code],Et=class extends Error{constructor(e="No available resolver"){super(e),this.name="NoAvailableResolverError"}},Me=class r{bytes;#e;#t;#r;#n;[It]=!0;constructor(e){e==null&&(e="");let t;if(e instanceof Uint8Array)t=yt(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);t=vr(e)}else if(Ar(e))t=yt(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=t.bytes,this.#e=t.string,this.#t=t.tuples,this.#r=t.stringTuples,this.#n=t.path}toString(){return this.#e}toJSON(){return this.toString()}toOptions(){let e,t,n,o,s="",i=v("tcp"),a=v("udp"),d=v("ip4"),m=v("ip6"),p=v("dns6"),h=v("ip6zone");for(let[l,f]of this.stringTuples())l===h.code&&(s=`%${f??""}`),Lo.includes(l)&&(t=i.name==="tcp"?"tcp":"udp",o=443,n=`${f??""}${s}`,e=l===p.code?6:4),(l===i.code||l===a.code)&&(t=v(l).name==="tcp"?"tcp":"udp",o=parseInt(f??"")),(l===d.code||l===m.code)&&(t=v(l).name==="tcp"?"tcp":"udp",n=`${f??""}${s}`,e=l===m.code?6:4);if(e==null||t==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:t,port:o}}protos(){return this.#t.map(([e])=>Object.assign({},v(e)))}protoCodes(){return this.#t.map(([e])=>e)}protoNames(){return this.#t.map(([e])=>v(e).name)}tuples(){return this.#t.map(([e,t])=>t==null?[e]:[e,t])}stringTuples(){return this.#r.map(([e,t])=>t==null?[e]:[e,t])}encapsulate(e){return e=new r(e),new r(this.toString()+e.toString())}decapsulate(e){let t=e.toString(),n=this.toString(),o=n.lastIndexOf(t);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new r(n.slice(0,o))}decapsulateCode(e){let t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new r(De(t.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,o])=>{n===ce.p2p.code&&e.push([n,o]),n===ce["p2p-circuit"].code&&(e=[])});let t=e.pop();if(t?.[1]!=null){let n=t[1];return n[0]==="Q"||n[0]==="1"?S(P.decode(`z${n}`),"base58btc"):S(W.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#n}equals(e){return Er(this.bytes,e.bytes)}async resolve(e){let t=this.protos().find(s=>s.resolvable);if(t==null)return[this];let n=Ir.get(t.name);if(n==null)throw new Et(`no available resolver for ${t.name}`);return(await n(this,e)).map(s=>$(s))}nodeAddress(){let e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){let t=(e??this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}[Po](){return`Multiaddr(${this.#e})`}};var Ir=new Map;function Ar(r){return!!r?.[It]}function $(r){return new Me(r)}var Do=c("dns4"),Mo=c("dns6"),ko=c("dnsaddr"),K=E(c("dns"),ko,Do,Mo),Ne=E(c("ip4"),c("ip6")),H=E(u(Ne,c("tcp")),u(K,c("tcp"))),Fe=u(Ne,c("udp")),Uo=u(Fe,c("utp")),No=u(Fe,c("quic")),Fo=u(Fe,c("quic-v1")),At=E(u(H,c("ws")),u(K,c("ws"))),ke=E(u(At,c("p2p")),At),Ct=E(u(H,c("wss")),u(K,c("wss")),u(H,c("tls"),c("ws")),u(K,c("tls"),c("ws"))),Ue=E(u(Ct,c("p2p")),Ct),Tt=E(u(H,c("http")),u(Ne,c("http")),u(K,c("http"))),St=E(u(H,c("https")),u(Ne,c("https")),u(K,c("https"))),Cr=u(Fe,c("webrtc-direct"),c("certhash")),Pr=E(u(Cr,c("p2p")),Cr),Tr=u(Fo,c("webtransport"),c("certhash"),c("certhash")),Lr=E(u(Tr,c("p2p")),Tr),Dr=E(u(ke,c("p2p-webrtc-star"),c("p2p")),u(Ue,c("p2p-webrtc-star"),c("p2p")),u(ke,c("p2p-webrtc-star")),u(Ue,c("p2p-webrtc-star"))),Yc=E(u(ke,c("p2p-websocket-star"),c("p2p")),u(Ue,c("p2p-websocket-star"),c("p2p")),u(ke,c("p2p-websocket-star")),u(Ue,c("p2p-websocket-star"))),Mr=E(u(Tt,c("p2p-webrtc-direct"),c("p2p")),u(St,c("p2p-webrtc-direct"),c("p2p")),u(Tt,c("p2p-webrtc-direct")),u(St,c("p2p-webrtc-direct"))),Y=E(At,Ct,Tt,St,Dr,Mr,H,Uo,No,K,Pr,Lr),Zc=E(u(Y,c("p2p-stardust"),c("p2p")),u(Y,c("p2p-stardust"))),G=E(u(Y,c("p2p")),Dr,Mr,Pr,Lr,c("p2p")),Sr=E(u(G,c("p2p-circuit"),G),u(G,c("p2p-circuit")),u(c("p2p-circuit"),G),u(Y,c("p2p-circuit")),u(c("p2p-circuit"),Y),c("p2p-circuit")),kr=()=>E(u(Sr,kr),Sr),X=kr(),ea=E(u(X,G,X),u(G,X),u(X,G),X,G);var ta=E(u(X,c("webrtc"),c("p2p")),u(X,c("webrtc")),u(Y,c("webrtc"),c("p2p")),u(Y,c("webrtc")),c("webrtc"));function Ur(r){function e(t){let n;try{n=$(t)}catch{return!1}let o=r(n.protoNames());return o===null?!1:o===!0||o===!1?o:o.length===0}return e}function u(...r){function e(t){if(t.length<r.length)return null;let n=t;return r.some(o=>(n=typeof o=="function"?o().partialMatch(t):o.partialMatch(t),Array.isArray(n)&&(t=n),n===null)),n}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:Ur(e),partialMatch:e}}function E(...r){function e(n){let o=null;return r.some(s=>{let i=typeof s=="function"?s().partialMatch(n):s.partialMatch(n);return i!=null?(o=i,!0):!1}),o}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:Ur(e),partialMatch:e}}function c(r){let e=r;function t(o){let s;try{s=$(o)}catch{return!1}let i=s.protoNames();return i.length===1&&i[0]===e}function n(o){return o.length===0?null:o[0]===e?o.slice(1):null}return{toString:function(){return e},matches:t,partialMatch:n}}var $e=class extends Event{type;detail;constructor(e,t){super(e),this.type=e,this.detail=t}};var Br=le(F("net"),1);var Pt=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},Lt=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}},Nr=r=>globalThis.DOMException===void 0?new Lt(r):new DOMException(r),Fr=r=>{let e=r.reason===void 0?Nr("This operation was aborted."):r.reason;return e instanceof Error?e:Nr(e)};function Dt(r,e){let{milliseconds:t,fallback:n,message:o,customTimers:s={setTimeout,clearTimeout}}=e,i,a,m=new Promise((p,h)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){let{signal:l}=e;l.aborted&&h(Fr(l)),a=()=>{h(Fr(l))},l.addEventListener("abort",a,{once:!0})}if(t===Number.POSITIVE_INFINITY){r.then(p,h);return}let b=new Pt;i=s.setTimeout.call(void 0,()=>{if(n){try{p(n())}catch(l){h(l)}return}typeof r.cancel=="function"&&r.cancel(),o===!1?p():o instanceof Error?h(o):(b.message=o??`Promise timed out after ${t} milliseconds`,h(b))},t),(async()=>{try{p(await r)}catch(l){h(l)}})()}).finally(()=>{m.clear(),a&&e.signal&&e.signal.removeEventListener("abort",a)});return m.clear=()=>{s.clearTimeout.call(void 0,i),i=void 0},m}var Oo=r=>{let e=r.addEventListener||r.on||r.addListener,t=r.removeEventListener||r.off||r.removeListener;if(!e||!t)throw new TypeError("Emitter is not compatible");return{addListener:e.bind(r),removeListener:t.bind(r)}};function Vo(r,e,t){let n,o=new Promise((s,i)=>{if(t={rejectionEvents:["error"],multiArgs:!1,resolveImmediately:!1,...t},!(t.count>=0&&(t.count===Number.POSITIVE_INFINITY||Number.isInteger(t.count))))throw new TypeError("The `count` option should be at least 0 or more");t.signal?.throwIfAborted();let a=[e].flat(),d=[],{addListener:m,removeListener:p}=Oo(r),h=(...l)=>{let f=t.multiArgs?l:l[0];t.filter&&!t.filter(f)||(d.push(f),t.count===d.length&&(n(),s(d)))},b=l=>{n(),i(l)};n=()=>{for(let l of a)p(l,h);for(let l of t.rejectionEvents)p(l,b)};for(let l of a)m(l,h);for(let l of t.rejectionEvents)m(l,b);t.signal&&t.signal.addEventListener("abort",()=>{b(t.signal.reason)},{once:!0}),t.resolveImmediately&&s(d)});if(o.cancel=n,typeof t.timeout=="number"){let s=Dt(o,{milliseconds:t.timeout});return s.cancel=n,s}return o}function Mt(r,e,t){typeof t=="function"&&(t={filter:t}),t={...t,count:1,resolveImmediately:!1};let n=Vo(r,e,t),o=n.then(s=>s[0]);return o.cancel=n.cancel,o}function $r(r,e){if(typeof r!="string")throw new V(`invalid ip provided: ${r}`);if(typeof e=="string"&&(e=parseInt(e)),isNaN(e))throw new V(`invalid port provided: ${e}`);if((0,U.isIPv4)(r))return $(`/ip4/${r}/tcp/${e}`);if((0,U.isIPv6)(r))return $(`/ip6/${r}/tcp/${e}`);throw new V(`invalid ip:port for creating a multiaddr: ${r}:${e}`)}function kt(){let r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t}),r}var Ut=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=t??"ABORT_ERR"}};async function Nt(r,e,t,n){let o=new Ut(n?.errorMessage,n?.errorCode);return t?.aborted===!0?Promise.reject(o):new Promise((s,i)=>{function a(){t?.removeEventListener("abort",p),r.removeEventListener(e,d),n?.errorEvent!=null&&r.removeEventListener(n.errorEvent,m)}let d=h=>{try{if(n?.filter?.(h)===!1)return}catch(b){a(),i(b);return}a(),s(h)},m=h=>{a(),i(h.detail)},p=()=>{a(),i(o)};t?.addEventListener("abort",p),r.addEventListener(e,d),n?.errorEvent!=null&&r.addEventListener(n.errorEvent,m)})}function Or(r){if(Bo(r))return async function*(){let e=r.getReader();try{for(;;){let{done:t,value:n}=await e.read();if(t)return;yield n}}finally{e.releaseLock()}}();if(zo(r))return r;throw new Error("unknown stream")}function zo(r){return r[Symbol.asyncIterator]!=null}function Bo(r){return typeof r?.getReader=="function"}function Vr(r){return async e=>{let t=async()=>{_o(e)&&await e.return(void 0)},n,o,s=x=>{n=x,t().catch(w=>{w=new AggregateError([n,w],"The Writable emitted an error, additionally an error occurred while ending the Source")}).finally(()=>{o?.(x)})},i,a=!1,d=()=>{a=!0,i?.()},m,p=!1,h=()=>{p=!0,m?.()},b,l=()=>{b?.()},f=async()=>new Promise((x,w)=>{i=b=x,o=w,r.once("drain",l)}),I=async()=>(await t(),new Promise((x,w)=>{if(a||p||n!=null){x();return}m=i=x,o=w})),T=()=>{r.removeListener("error",s),r.removeListener("close",d),r.removeListener("finish",h),r.removeListener("drain",l)};r.once("error",s),r.once("close",d),r.once("finish",h);try{for await(let x of e){if(!r.writable||r.destroyed||n!=null)break;r.write(x)||await f()}}catch(x){n==null&&r.destroy(x),n=x}try{if(r.writable&&r.end(),await I(),n!=null)throw n}finally{T()}}}function _o(r){return r.return!=null}function Ft(r){return{sink:Vr(r),source:Or(r)}}var $t=le(F("os"),1),zr=le(F("path"),1);var Ro={ip4:"IPv4",ip6:"IPv6"};function ae(r,e={}){let t=r.getPath();return t!=null?$t.default.platform()==="win32"?{path:zr.default.join("\\\\.\\pipe\\",t)}:{path:t}:{...e,...r.toOptions()}}function Ot(r,e,t){let n=o=>$(`/${r}/${o}/tcp/${t}`);return(jo(e)?Wo(Ro[r]):[e]).map(n)}function jo(r){return["0.0.0.0","::"].includes(r)}var qo=$t.default.networkInterfaces();function Wo(r){let e=[];for(let[,t]of Object.entries(qo))if(t!=null)for(let n of t)n.family===r&&e.push(n.address);return e}var Oe=(r,e)=>{let t,n=e.logger.forComponent("libp2p:tcp:socket"),o=e.direction,s=e.metrics,i=e.metricPrefix??"",a=e.socketInactivityTimeout??12e4,d=e.socketCloseTimeout??500,m=!1,p=!1;e.listeningAddr?.getPath()!=null&&(e.remoteAddr=e.listeningAddr),e.remoteAddr?.getPath()!=null&&(e.localAddr=e.remoteAddr),r.on("error",x=>{p=!0,m||(n.error("%s socket error - %e",o,x),s?.increment({[`${i}error`]:!0})),r.destroy(),T.timeline.close=Date.now()});let h;if(e.remoteAddr!=null)h=e.remoteAddr;else{if(r.remoteAddress==null||r.remotePort==null)throw new V("Could not determine remote address or port");h=$r(r.remoteAddress,r.remotePort)}let b=ae(h),l=b.path??`${b.host??""}:${b.port??""}`,{sink:f,source:I}=Ft(r);r.setTimeout(a),r.once("timeout",()=>{m=!0,n("%s %s socket read timeout",o,l),s?.increment({[`${i}timeout`]:!0}),r.destroy(new Z),T.timeline.close=Date.now()}),r.once("close",()=>{!m&&!p&&(n("%s %s socket close",o,l),s?.increment({[`${i}close`]:!0})),r.destroy(),T.timeline.close=Date.now()}),r.once("end",()=>{n("%s %s socket end",o,l),s?.increment({[`${i}end`]:!0})});let T={async sink(x){try{await f(async function*(){for await(let w of x)w instanceof Uint8Array?yield w:yield w.subarray()}())}catch(w){w.type!=="aborted"&&n.error("%s %s error in sink - %e",o,l,w)}r.end()},source:I,remoteAddr:h,timeline:{open:Date.now()},async close(x={}){if(r.closed){n("the %s %s socket is already closed",o,l);return}if(r.destroyed){n("the %s %s socket is already destroyed",o,l);return}if(t!=null)return t.promise;try{t=kt(),r.end();let w=Go(r),L=x.signal??AbortSignal.timeout(d);r.writableLength>0&&(n("%s %s draining socket",o,l),await Nt(w,"drain",L,{errorEvent:"error"}),n("%s %s socket drained",o,l)),await Promise.all([Nt(w,"close",L,{errorEvent:"error"}),r.destroy()])}catch(w){this.abort(w)}finally{t.resolve()}},abort:x=>{n("%s %s socket abort due to error - %e",o,l,x),r.destroy(),T.timeline.close=Date.now()},log:n};return T};function Go(r){return{addEventListener:(t,n)=>{r.addListener(t,n)},removeEventListener:(t,n)=>{r.removeListener(t,n)}}}var A;(function(r){r[r.INACTIVE=0]="INACTIVE",r[r.ACTIVE=1]="ACTIVE",r[r.PAUSED=2]="PAUSED"})(A||(A={}));var Ve=class extends ye{context;server;sockets=new Set;status={code:A.INACTIVE};metrics;addr;log;shutdownController;constructor(e){if(super(),this.context=e,e.keepAlive=e.keepAlive??!0,e.noDelay=e.noDelay??!0,this.shutdownController=new AbortController,ve(1/0,this.shutdownController.signal),this.log=e.logger.forComponent("libp2p:tcp:listener"),this.addr="unknown",this.server=Br.default.createServer(e,this.onSocket.bind(this)),e.maxConnections!==void 0&&(this.server.maxConnections=e.maxConnections),e.closeServerOnMaxConnections!=null&&e.closeServerOnMaxConnections.closeAbove<e.closeServerOnMaxConnections.listenBelow)throw new V("closeAbove must be >= listenBelow");this.server.on("listening",()=>{if(e.metrics!=null){let t=this.server.address();t==null?this.addr="unknown":typeof t=="string"?this.addr=t:this.addr=`${t.address}:${t.port}`,e.metrics?.registerMetricGroup("libp2p_tcp_inbound_connections_total",{label:"address",help:"Current active connections in TCP listener",calculate:()=>({[this.addr]:this.sockets.size})}),this.metrics={status:e.metrics.registerMetricGroup("libp2p_tcp_listener_status_info",{label:"address",help:"Current status of the TCP listener socket"}),errors:e.metrics.registerMetricGroup("libp2p_tcp_listener_errors_total",{label:"address",help:"Total count of TCP listener errors by type"}),events:e.metrics.registerMetricGroup("libp2p_tcp_listener_events_total",{label:"address",help:"Total count of TCP listener events by type"})},this.metrics?.status.update({[this.addr]:A.ACTIVE})}this.safeDispatchEvent("listening")}).on("error",t=>{this.metrics?.errors.increment({[`${this.addr} listen_error`]:!0}),this.safeDispatchEvent("error",{detail:t})}).on("close",()=>{this.metrics?.status.update({[this.addr]:this.status.code}),this.status.code!==A.PAUSED&&this.safeDispatchEvent("close")}).on("drop",()=>{this.metrics?.events.increment({[`${this.addr} drop`]:!0})})}onSocket(e){if(this.metrics?.events.increment({[`${this.addr} connection`]:!0}),this.status.code!==A.ACTIVE)throw e.destroy(),new we("Server is not listening yet");let t;try{t=Oe(e,{listeningAddr:this.status.listeningAddr,socketInactivityTimeout:this.context.socketInactivityTimeout,socketCloseTimeout:this.context.socketCloseTimeout,metrics:this.metrics?.events,metricPrefix:`${this.addr} `,logger:this.context.logger,direction:"inbound"})}catch(n){this.log.error("inbound connection failed",n),this.metrics?.errors.increment({[`${this.addr} inbound_to_connection`]:!0}),e.destroy();return}this.log("new inbound connection %s",t.remoteAddr),this.sockets.add(e),this.context.upgrader.upgradeInbound(t,{signal:this.shutdownController.signal}).then(()=>{this.log("inbound connection upgraded %s",t.remoteAddr),e.once("close",()=>{this.sockets.delete(e),this.context.closeServerOnMaxConnections!=null&&this.sockets.size<this.context.closeServerOnMaxConnections.listenBelow&&this.resume().catch(n=>{this.log.error("error attempting to listen server once connection count under limit",n),this.context.closeServerOnMaxConnections?.onListenError?.(n)})}),this.context.closeServerOnMaxConnections!=null&&this.sockets.size>=this.context.closeServerOnMaxConnections.closeAbove&&this.pause()}).catch(async n=>{this.log.error("inbound connection upgrade failed",n),this.metrics?.errors.increment({[`${this.addr} inbound_upgrade`]:!0}),this.sockets.delete(e),t.abort(n)})}getAddrs(){if(this.status.code===A.INACTIVE)return[];let e=[],t=this.server.address(),{listeningAddr:n,peerId:o}=this.status;if(t==null)return[];if(typeof t=="string")e=[n];else try{n.toString().startsWith("/ip4")?e=e.concat(Ot("ip4",t.address,t.port)):t.family==="IPv6"&&(e=e.concat(Ot("ip6",t.address,t.port)))}catch(s){this.log.error("could not turn %s:%s into multiaddr",t.address,t.port,s)}return e.map(s=>o!=null?s.encapsulate(`/p2p/${o}`):s)}updateAnnounceAddrs(){}async listen(e){if(this.status.code===A.ACTIVE||this.status.code===A.PAUSED)throw new be("server is already listening");let t=e.getPeerId(),n=t==null?e.decapsulateCode(421):e,{backlog:o}=this.context;try{this.status={code:A.ACTIVE,listeningAddr:n,peerId:t,netConfig:ae(n,{backlog:o})},await this.resume()}catch(s){throw this.status={code:A.INACTIVE},s}}async close(){let e=[];this.server.listening&&e.push(Mt(this.server,"close")),this.pause(!0),this.shutdownController.abort(),this.sockets.forEach(t=>{t.readable&&(e.push(Mt(t,"close")),t.destroy())}),await Promise.all(e)}async resume(){if(this.server.listening||this.status.code===A.INACTIVE)return;let e=this.status.netConfig;await new Promise((t,n)=>{this.server.once("error",n),this.server.listen(e,t)}),this.status={...this.status,code:A.ACTIVE},this.log("listening on %s",this.server.address())}pause(e=!1){if(!this.server.listening&&this.status.code===A.PAUSED&&e){this.status={code:A.INACTIVE};return}!this.server.listening||this.status.code!==A.ACTIVE||(this.log("closing server on %s",this.server.address()),this.status=e?{code:A.INACTIVE}:{...this.status,code:A.PAUSED},this.server.close())}};var ze=class{opts;metrics;components;log;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:tcp"),this.opts=t,this.components=e,e.metrics!=null&&(this.metrics={events:e.metrics.registerCounterGroup("libp2p_tcp_dialer_events_total",{label:"event",help:"Total count of TCP dialer events by type"}),errors:e.metrics.registerCounterGroup("libp2p_tcp_dialer_errors_total",{label:"event",help:"Total count of TCP dialer events by type"})})}[Bt]=!0;[Symbol.toStringTag]="@libp2p/tcp";[Rt]=["@libp2p/transport"];async dial(e,t){t.keepAlive=t.keepAlive??!0,t.noDelay=t.noDelay??!0;let n=await this._connect(e,t),o;try{o=Oe(n,{remoteAddr:e,socketInactivityTimeout:this.opts.outboundSocketInactivityTimeout,socketCloseTimeout:this.opts.socketCloseTimeout,metrics:this.metrics?.events,logger:this.components.logger,direction:"outbound"})}catch(s){throw this.metrics?.errors.increment({outbound_to_connection:!0}),n.destroy(s),s}try{return this.log("new outbound connection %s",o.remoteAddr),await t.upgrader.upgradeOutbound(o,t)}catch(s){throw this.metrics?.errors.increment({outbound_upgrade:!0}),this.log.error("error upgrading outbound connection",s),o.abort(s),s}}async _connect(e,t){t.signal?.throwIfAborted(),t.onProgress?.(new $e("tcp:open-connection"));let n;return new Promise((o,s)=>{let i=Date.now(),a=ae(e,{...this.opts.dialOpts??{},...t});this.log("dialing %a",e),n=_r.default.connect(a);let d=l=>{this.log.error("dial to %a errored - %e",e,l);let f=a.path??`${a.host??""}:${a.port}`;l.message=`connection error ${f}: ${l.message}`,this.metrics?.events.increment({error:!0}),b(l)},m=()=>{this.log("connection timeout %a",e),this.metrics?.events.increment({timeout:!0});let l=new Z(`Connection timeout after ${Date.now()-i}ms`);n.emit("error",l)},p=()=>{this.log("connection opened %a",e),this.metrics?.events.increment({connect:!0}),b()},h=()=>{this.log("connection aborted %a",e),this.metrics?.events.increment({abort:!0}),b(new ge)},b=l=>{if(n.removeListener("error",d),n.removeListener("timeout",m),n.removeListener("connect",p),t.signal!=null&&t.signal.removeEventListener("abort",h),l!=null){s(l);return}o(n)};n.on("error",d),n.on("timeout",m),n.on("connect",p),t.signal!=null&&t.signal.addEventListener("abort",h)}).catch(o=>{throw n?.destroy(),o})}createListener(e){return new Ve({...this.opts.listenOpts??{},...e,maxConnections:this.opts.maxConnections,backlog:this.opts.backlog,closeServerOnMaxConnections:this.opts.closeServerOnMaxConnections,socketInactivityTimeout:this.opts.inboundSocketInactivityTimeout,socketCloseTimeout:this.opts.socketCloseTimeout,metrics:this.components.metrics,logger:this.components.logger})}listenFilter(e){return e=Array.isArray(e)?e:[e],e.filter(t=>t.protoCodes().includes(290)?!1:t.protoCodes().includes(400)?!0:H.matches(t.decapsulateCode(421)))}dialFilter(e){return this.listenFilter(e)}};function Jo(r={}){return e=>new ze(e,r)}return Hr(Qo);})();
+"use strict";var Libp2PTcp=(()=>{var jr=Object.create;var xe=Object.defineProperty;var qr=Object.getOwnPropertyDescriptor;var Wr=Object.getOwnPropertyNames;var Gr=Object.getPrototypeOf,Hr=Object.prototype.hasOwnProperty;var F=(r=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):r)(function(r){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+r+'" is not supported')});var U=(r,e)=>{for(var t in e)xe(r,t,{get:e[t],enumerable:!0})},Vt=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Wr(e))!Hr.call(r,o)&&o!==t&&xe(r,o,{get:()=>e[o],enumerable:!(n=qr(e,o))||n.enumerable});return r};var le=(r,e,t)=>(t=r!=null?jr(Gr(r)):{},Vt(e||!r||!r.__esModule?xe(t,"default",{value:r,enumerable:!0}):t,r)),Jr=r=>Vt(xe({},"__esModule",{value:!0}),r);var Xo={};U(Xo,{tcp:()=>Qo});var Rr=le(F("net"),1);var Bt=Symbol.for("@libp2p/transport");var zt;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(zt||(zt={}));var we=class extends Error{static name="AbortError";constructor(e="The operation was aborted"){super(e),this.name="AbortError"}};var V=class extends Error{static name="InvalidParametersError";constructor(e="Invalid parameters"){super(e),this.name="InvalidParametersError"}};var Z=class extends Error{static name="TimeoutError";constructor(e="Timed out"){super(e),this.name="TimeoutError"}},be=class extends Error{static name="NotStartedError";constructor(e="Not started"){super(e),this.name="NotStartedError"}},ve=class extends Error{static name="AlreadyStartedError";constructor(e="Already started"){super(e),this.name="AlreadyStartedError"}};var _t=F("node:events"),ue=(r,...e)=>{try{(0,_t.setMaxListeners)(r,...e)}catch{}};var ye=class extends EventTarget{#e=new Map;constructor(){super(),ue(1/0,this)}listenerCount(e){let t=this.#e.get(e);return t==null?0:t.length}addEventListener(e,t,n){super.addEventListener(e,t,n);let o=this.#e.get(e);o==null&&(o=[],this.#e.set(e,o)),o.push({callback:t,once:(n!==!0&&n!==!1&&n?.once)??!1})}removeEventListener(e,t,n){super.removeEventListener(e.toString(),t??null,n);let o=this.#e.get(e);o!=null&&(o=o.filter(({callback:s})=>s!==t),this.#e.set(e,o))}dispatchEvent(e){let t=super.dispatchEvent(e),n=this.#e.get(e.type);return n==null||(n=n.filter(({once:o})=>!o),this.#e.set(e.type,n)),t}safeDispatchEvent(e,t={}){return this.dispatchEvent(new CustomEvent(e,t))}};var Rt=Symbol.for("@libp2p/service-capabilities"),ns=Symbol.for("@libp2p/service-dependencies");var jt=F("node:buffer");function ee(r){return new Uint8Array(r.buffer,r.byteOffset,r.byteLength)}function Ee(r=0){return ee(jt.Buffer.allocUnsafe(r))}var Qr=Math.pow(2,7),Xr=Math.pow(2,14),Kr=Math.pow(2,21),Be=Math.pow(2,28),_e=Math.pow(2,35),Re=Math.pow(2,42),je=Math.pow(2,49),x=128,T=127;function z(r){if(r<Qr)return 1;if(r<Xr)return 2;if(r<Kr)return 3;if(r<Be)return 4;if(r<_e)return 5;if(r<Re)return 6;if(r<je)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function Yr(r,e,t=0){switch(z(r)){case 8:e[t++]=r&255|x,r/=128;case 7:e[t++]=r&255|x,r/=128;case 6:e[t++]=r&255|x,r/=128;case 5:e[t++]=r&255|x,r/=128;case 4:e[t++]=r&255|x,r>>>=7;case 3:e[t++]=r&255|x,r>>>=7;case 2:e[t++]=r&255|x,r>>>=7;case 1:{e[t++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return e}function Zr(r,e,t=0){switch(z(r)){case 8:e.set(t++,r&255|x),r/=128;case 7:e.set(t++,r&255|x),r/=128;case 6:e.set(t++,r&255|x),r/=128;case 5:e.set(t++,r&255|x),r/=128;case 4:e.set(t++,r&255|x),r>>>=7;case 3:e.set(t++,r&255|x),r>>>=7;case 2:e.set(t++,r&255|x),r>>>=7;case 1:{e.set(t++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return e}function en(r,e){let t=r[e],n=0;if(n+=t&T,t<x||(t=r[e+1],n+=(t&T)<<7,t<x)||(t=r[e+2],n+=(t&T)<<14,t<x)||(t=r[e+3],n+=(t&T)<<21,t<x)||(t=r[e+4],n+=(t&T)*Be,t<x)||(t=r[e+5],n+=(t&T)*_e,t<x)||(t=r[e+6],n+=(t&T)*Re,t<x)||(t=r[e+7],n+=(t&T)*je,t<x))return n;throw new RangeError("Could not decode varint")}function tn(r,e){let t=r.get(e),n=0;if(n+=t&T,t<x||(t=r.get(e+1),n+=(t&T)<<7,t<x)||(t=r.get(e+2),n+=(t&T)<<14,t<x)||(t=r.get(e+3),n+=(t&T)<<21,t<x)||(t=r.get(e+4),n+=(t&T)*Be,t<x)||(t=r.get(e+5),n+=(t&T)*_e,t<x)||(t=r.get(e+6),n+=(t&T)*Re,t<x)||(t=r.get(e+7),n+=(t&T)*je,t<x))return n;throw new RangeError("Could not decode varint")}function te(r,e,t=0){return e==null&&(e=Ee(z(r))),e instanceof Uint8Array?Yr(r,e,t):Zr(r,e,t)}function J(r,e=0){return r instanceof Uint8Array?en(r,e):tn(r,e)}var Wt=F("node:buffer");function _(r,e){return ee(Wt.Buffer.concat(r,e))}var dr=F("node:buffer");var Je={};U(Je,{base10:()=>an});var Ms=new Uint8Array(0);function Gt(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function M(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function Ht(r){return new TextEncoder().encode(r)}function Jt(r){return new TextDecoder().decode(r)}function rn(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var o=0;o<r.length;o++){var s=r.charAt(o),i=s.charCodeAt(0);if(t[i]!==255)throw new TypeError(s+" is ambiguous");t[i]=o}var a=r.length,d=r.charAt(0),m=Math.log(a)/Math.log(256),p=Math.log(256)/Math.log(a);function h(f){if(f instanceof Uint8Array||(ArrayBuffer.isView(f)?f=new Uint8Array(f.buffer,f.byteOffset,f.byteLength):Array.isArray(f)&&(f=Uint8Array.from(f))),!(f instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(f.length===0)return"";for(var I=0,C=0,g=0,w=f.length;g!==w&&f[g]===0;)g++,I++;for(var L=(w-g)*p+1>>>0,D=new Uint8Array(L);g!==w;){for(var O=f[g],j=0,N=L-1;(O!==0||j<C)&&N!==-1;N--,j++)O+=256*D[N]>>>0,D[N]=O%a>>>0,O=O/a>>>0;if(O!==0)throw new Error("Non-zero carry");C=j,g++}for(var B=L-C;B!==L&&D[B]===0;)B++;for(var ge=d.repeat(I);B<L;++B)ge+=r.charAt(D[B]);return ge}function b(f){if(typeof f!="string")throw new TypeError("Expected String");if(f.length===0)return new Uint8Array;var I=0;if(f[I]!==" "){for(var C=0,g=0;f[I]===d;)C++,I++;for(var w=(f.length-I)*m+1>>>0,L=new Uint8Array(w);f[I];){var D=t[f.charCodeAt(I)];if(D===255)return;for(var O=0,j=w-1;(D!==0||O<g)&&j!==-1;j--,O++)D+=a*L[j]>>>0,L[j]=D%256>>>0,D=D/256>>>0;if(D!==0)throw new Error("Non-zero carry");g=O,I++}if(f[I]!==" "){for(var N=w-g;N!==w&&L[N]===0;)N++;for(var B=new Uint8Array(C+(w-N)),ge=C;N!==w;)B[ge++]=L[N++];return B}}}function l(f){var I=b(f);if(I)return I;throw new Error(`Non-${e} character`)}return{encode:h,decodeUnsafe:b,decode:l}}var nn=rn,on=nn,Xt=on;var qe=class{name;prefix;baseEncode;constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},We=class{name;prefix;baseDecode;prefixCodePoint;constructor(e,t,n){this.name=e,this.prefix=t;let o=t.codePointAt(0);if(o===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=o,this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return Kt(this,e)}},Ge=class{decoders;constructor(e){this.decoders=e}or(e){return Kt(this,e)}decode(e){let t=e[0],n=this.decoders[t];if(n!=null)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Kt(r,e){return new Ge({...r.decoders??{[r.prefix]:r},...e.decoders??{[e.prefix]:e}})}var He=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(e,t,n,o){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=o,this.encoder=new qe(e,t,n),this.decoder=new We(e,t,o)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};function re({name:r,prefix:e,encode:t,decode:n}){return new He(r,e,t,n)}function q({name:r,prefix:e,alphabet:t}){let{encode:n,decode:o}=Xt(t,r);return re({prefix:e,name:r,encode:n,decode:s=>M(o(s))})}function sn(r,e,t,n){let o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let s=r.length;for(;r[s-1]==="=";)--s;let i=new Uint8Array(s*t/8|0),a=0,d=0,m=0;for(let p=0;p<s;++p){let h=o[r[p]];if(h===void 0)throw new SyntaxError(`Non-${n} character`);d=d<<t|h,a+=t,a>=8&&(a-=8,i[m++]=255&d>>a)}if(a>=t||255&d<<8-a)throw new SyntaxError("Unexpected end of data");return i}function cn(r,e,t){let n=e[e.length-1]==="=",o=(1<<t)-1,s="",i=0,a=0;for(let d=0;d<r.length;++d)for(a=a<<8|r[d],i+=8;i>t;)i-=t,s+=e[o&a>>i];if(i!==0&&(s+=e[o&a<<t-i]),n)for(;s.length*t&7;)s+="=";return s}function y({name:r,prefix:e,bitsPerChar:t,alphabet:n}){return re({prefix:e,name:r,encode(o){return cn(o,n,t)},decode(o){return sn(o,n,t,r)}})}var an=q({prefix:"9",name:"base10",alphabet:"0123456789"});var Qe={};U(Qe,{base16:()=>ln,base16upper:()=>un});var ln=y({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),un=y({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Xe={};U(Xe,{base2:()=>dn});var dn=y({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Ke={};U(Ke,{base256emoji:()=>gn});var Yt=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),pn=Yt.reduce((r,e,t)=>(r[t]=e,r),[]),fn=Yt.reduce((r,e,t)=>{let n=e.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${e}`);return r[n]=t,r},[]);function hn(r){return r.reduce((e,t)=>(e+=pn[t],e),"")}function mn(r){let e=[];for(let t of r){let n=t.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${t}`);let o=fn[n];if(o==null)throw new Error(`Non-base256emoji character: ${t}`);e.push(o)}return new Uint8Array(e)}var gn=re({prefix:"\u{1F680}",name:"base256emoji",encode:hn,decode:mn});var Ye={};U(Ye,{base32:()=>R,base32hex:()=>vn,base32hexpad:()=>En,base32hexpadupper:()=>In,base32hexupper:()=>yn,base32pad:()=>wn,base32padupper:()=>bn,base32upper:()=>xn,base32z:()=>An});var R=y({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),xn=y({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),wn=y({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),bn=y({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),vn=y({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),yn=y({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),En=y({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),In=y({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),An=y({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var Ze={};U(Ze,{base36:()=>de,base36upper:()=>Tn});var de=q({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),Tn=q({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var et={};U(et,{base58btc:()=>P,base58flickr:()=>Cn});var P=q({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),Cn=q({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var tt={};U(tt,{base64:()=>Sn,base64pad:()=>Pn,base64url:()=>Ln,base64urlpad:()=>Un});var Sn=y({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Pn=y({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Ln=y({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),Un=y({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var rt={};U(rt,{base8:()=>Dn});var Dn=y({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var nt={};U(nt,{identity:()=>Mn});var Mn=re({prefix:"\0",name:"identity",encode:r=>Jt(r),decode:r=>Ht(r)});var Js=new TextEncoder,Qs=new TextDecoder;var st={};U(st,{identity:()=>to});var Fn=tr,Zt=128,$n=127,On=~$n,Vn=Math.pow(2,31);function tr(r,e,t){e=e||[],t=t||0;for(var n=t;r>=Vn;)e[t++]=r&255|Zt,r/=128;for(;r&On;)e[t++]=r&255|Zt,r>>>=7;return e[t]=r|0,tr.bytes=t-n+1,e}var zn=ot,Bn=128,er=127;function ot(r,n){var t=0,n=n||0,o=0,s=n,i,a=r.length;do{if(s>=a)throw ot.bytes=0,new RangeError("Could not decode varint");i=r[s++],t+=o<28?(i&er)<<o:(i&er)*Math.pow(2,o),o+=7}while(i>=Bn);return ot.bytes=s-n,t}var _n=Math.pow(2,7),Rn=Math.pow(2,14),jn=Math.pow(2,21),qn=Math.pow(2,28),Wn=Math.pow(2,35),Gn=Math.pow(2,42),Hn=Math.pow(2,49),Jn=Math.pow(2,56),Qn=Math.pow(2,63),Xn=function(r){return r<_n?1:r<Rn?2:r<jn?3:r<qn?4:r<Wn?5:r<Gn?6:r<Hn?7:r<Jn?8:r<Qn?9:10},Kn={encode:Fn,decode:zn,encodingLength:Xn},Yn=Kn,pe=Yn;function fe(r,e=0){return[pe.decode(r,e),pe.decode.bytes]}function ne(r,e,t=0){return pe.encode(r,e,t),e}function oe(r){return pe.encodingLength(r)}function Q(r,e){let t=e.byteLength,n=oe(r),o=n+oe(t),s=new Uint8Array(o+t);return ne(r,s,0),ne(t,s,n),s.set(e,o),new se(r,t,e,s)}function Ae(r){let e=M(r),[t,n]=fe(e),[o,s]=fe(e.subarray(n)),i=e.subarray(n+s);if(i.byteLength!==o)throw new Error("Incorrect length");return new se(t,o,i,e)}function rr(r,e){if(r===e)return!0;{let t=e;return r.code===t.code&&r.size===t.size&&t.bytes instanceof Uint8Array&&Gt(r.bytes,t.bytes)}}var se=class{code;size;digest;bytes;constructor(e,t,n,o){this.code=e,this.size=t,this.digest=n,this.bytes=o}};var nr=0,Zn="identity",or=M;function eo(r){return Q(nr,or(r))}var to={code:nr,name:Zn,encode:or,digest:eo};var lt={};U(lt,{sha256:()=>ro,sha512:()=>no});var at=le(F("crypto"),1);function ct({name:r,code:e,encode:t}){return new it(r,e,t)}var it=class{name;code;encode;constructor(e,t,n){this.name=e,this.code=t,this.encode=n}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?Q(this.code,t):t.then(n=>Q(this.code,n))}else throw Error("Unknown type, must be binary type")}};var ro=ct({name:"sha2-256",code:18,encode:r=>M(at.default.createHash("sha256").update(r).digest())}),no=ct({name:"sha2-512",code:19,encode:r=>M(at.default.createHash("sha512").update(r).digest())});function ir(r,e){let{bytes:t,version:n}=r;switch(n){case 0:return so(t,ut(r),e??P.encoder);default:return io(t,ut(r),e??R.encoder)}}var cr=new WeakMap;function ut(r){let e=cr.get(r);if(e==null){let t=new Map;return cr.set(r,t),t}return e}var W=class r{code;version;multihash;bytes;"/";constructor(e,t,n,o){this.code=t,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:e,multihash:t}=this;if(e!==he)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==co)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,n=Q(e,t);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return r.equals(this,e)}static equals(e,t){let n=t;return n!=null&&e.code===n.code&&e.version===n.version&&rr(e.multihash,n.multihash)}toString(e){return ir(this,e)}toJSON(){return{"/":ir(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;let t=e;if(t instanceof r)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){let{version:n,code:o,multihash:s,bytes:i}=t;return new r(n,o,s,i??ar(n,o,s.bytes))}else if(t[ao]===!0){let{version:n,multihash:o,code:s}=t,i=Ae(o);return r.create(n,s,i)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==he)throw new Error(`Version 0 CID must use dag-pb (code: ${he}) block encoding`);return new r(e,t,n,n.bytes)}case 1:{let o=ar(e,t,n.bytes);return new r(e,t,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return r.create(0,he,e)}static createV1(e,t){return r.create(1,e,t)}static decode(e){let[t,n]=r.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=r.inspectBytes(e),n=t.size-t.multihashSize,o=M(e.subarray(n,n+t.multihashSize));if(o.byteLength!==t.multihashSize)throw new Error("Incorrect length");let s=o.subarray(t.multihashSize-t.digestSize),i=new se(t.multihashCode,t.digestSize,s,o);return[t.version===0?r.createV0(i):r.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){let t=0,n=()=>{let[h,b]=fe(e.subarray(t));return t+=b,h},o=n(),s=he;if(o===18?(o=0,t=0):s=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);let i=t,a=n(),d=n(),m=t+d,p=m-i;return{version:o,codec:s,multihashCode:a,digestSize:d,multihashSize:p,size:m}}static parse(e,t){let[n,o]=oo(e,t),s=r.decode(o);if(s.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return ut(s).set(n,e),s}};function oo(r,e){switch(r[0]){case"Q":{let t=e??P;return[P.prefix,t.decode(`${P.prefix}${r}`)]}case P.prefix:{let t=e??P;return[P.prefix,t.decode(r)]}case R.prefix:{let t=e??R;return[R.prefix,t.decode(r)]}case de.prefix:{let t=e??de;return[de.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}}function so(r,e,t){let{prefix:n}=t;if(n!==P.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let o=e.get(n);if(o==null){let s=t.encode(r).slice(1);return e.set(n,s),s}else return o}function io(r,e,t){let{prefix:n}=t,o=e.get(n);if(o==null){let s=t.encode(r);return e.set(n,s),s}else return o}var he=112,co=18;function ar(r,e,t){let n=oe(r),o=n+oe(e),s=new Uint8Array(o+t.byteLength);return ne(r,s,0),ne(e,s,n),s.set(t,o),s}var ao=Symbol.for("@ipld/js-cid/CID");var me={...nt,...Xe,...rt,...Je,...Qe,...Ye,...Ze,...et,...tt,...Ke},wi={...lt,...st};function ur(r,e,t,n){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:n}}}var lr=ur("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),dt=ur("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);let e=Ee(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),lo={utf8:lr,"utf-8":lr,hex:me.base16,latin1:dt,ascii:dt,binary:dt,...me},Te=lo;function Ce(r,e="utf8"){let t=Te[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return e==="utf8"||e==="utf-8"?ee(dr.Buffer.from(r,"utf-8")):t.decoder.decode(`${t.prefix}${r}`)}var pr=F("node:buffer");function S(r,e="utf8"){let t=Te[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return e==="utf8"||e==="utf-8"?pr.Buffer.from(r.buffer,r.byteOffset,r.byteLength).toString("utf8"):t.encoder.encode(r).substring(1)}var Se=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,n=e();return n===void 0&&(this.index=t),n}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,n){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,t,n,o){return this.readAtomically(()=>{let s=0,i=0,a=this.peekChar();if(a===void 0)return;let d=a==="0",m=2**(8*o)-1;for(;;){let p=this.readAtomically(()=>{let h=this.readChar();if(h===void 0)return;let b=Number.parseInt(h,e);if(!Number.isNaN(b))return b});if(p===void 0)break;if(s*=e,s+=p,s>m||(i+=1,t!==void 0&&i>t))return}if(i!==0)return!n&&d&&i>1?void 0:s})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let n=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[t]=n}return e})}readIPv6Addr(){let e=t=>{for(let n=0;n<t.length/2;n++){let o=n*2;if(n<t.length-3){let i=this.readSeparator(":",n,()=>this.readIPv4Addr());if(i!==void 0)return t[o]=i[0],t[o+1]=i[1],t[o+2]=i[2],t[o+3]=i[3],[o+4,!0]}let s=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(s===void 0)return[o,!1];t[o]=s>>8,t[o+1]=s&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[n,o]=e(t);if(n===16)return t;if(o||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let s=new Uint8Array(14),i=16-(n+2),[a]=e(s.subarray(0,i));return t.set(s.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var Ui=new Se;var Vi=parseInt("0xFFFF",16),zi=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);var k=F("node:net");function Pe(r){return!!(0,k.isIP)(r)}var mr=k.isIPv4,go=k.isIPv6,pt=function(r){let e=0;if(r=r.toString().trim(),mr(r)){let t=new Uint8Array(e+4);return r.split(/\./g).forEach(n=>{t[e++]=parseInt(n,10)&255}),t}if(go(r)){let t=r.split(":",8),n;for(n=0;n<t.length;n++){let s=mr(t[n]),i;s&&(i=pt(t[n]),t[n]=S(i.slice(0,2),"base16")),i!=null&&++n<8&&t.splice(n,0,S(i.slice(2,4),"base16"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(n=0;n<t.length&&t[n]!=="";n++);let s=[n,1];for(n=9-t.length;n>0;n--)s.push("0");t.splice.apply(t,s)}let o=new Uint8Array(e+16);for(n=0;n<t.length;n++){let s=parseInt(t[n],16);o[e++]=s>>8&255,o[e++]=s&255}return o}throw new Error("invalid ip address")},gr=function(r,e=0,t){e=~~e,t=t??r.length-e;let n=new DataView(r.buffer);if(t===4){let o=[];for(let s=0;s<t;s++)o.push(r[e+s]);return o.join(".")}if(t===16){let o=[];for(let s=0;s<t;s+=2)o.push(n.getUint16(e+s).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var ce={},ft={},wo=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];wo.forEach(r=>{let e=bo(...r);ft[e.code]=e,ce[e.name]=e});function bo(r,e,t,n,o){return{code:r,size:e,name:t,resolvable:!!n,path:!!o}}function v(r){if(typeof r=="number"){if(ft[r]!=null)return ft[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(ce[r]!=null)return ce[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var Ic=v("ip4"),Ac=v("ip6"),Tc=v("ipcidr");function xt(r,e){switch(v(r).code){case 4:case 41:return yo(e);case 42:return gt(e);case 43:return S(e,"base10");case 6:case 273:case 33:case 132:return br(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return gt(e);case 421:return To(e);case 444:return wr(e);case 445:return wr(e);case 466:return Ao(e);case 481:return globalThis.encodeURIComponent(gt(e));default:return S(e,"base16")}}function wt(r,e){switch(v(r).code){case 4:return xr(e);case 41:return xr(e);case 42:return mt(e);case 43:return Ce(e,"base10");case 6:case 273:case 33:case 132:return bt(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return mt(e);case 421:return Eo(e);case 444:return Co(e);case 445:return So(e);case 466:return Io(e);case 481:return mt(globalThis.decodeURIComponent(e));default:return Ce(e,"base16")}}var ht=Object.values(me).map(r=>r.decoder),vo=function(){let r=ht[0].or(ht[1]);return ht.slice(2).forEach(e=>r=r.or(e)),r}();function xr(r){if(!Pe(r))throw new Error("invalid ip address");return pt(r)}function yo(r){let e=gr(r,0,r.length);if(e==null)throw new Error("ipBuff is required");if(!Pe(e))throw new Error("invalid ip address");return e}function bt(r){let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function br(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function mt(r){let e=Ce(r),t=Uint8Array.from(te(e.length));return _([t,e],t.length+e.length)}function gt(r){let e=J(r);if(r=r.slice(z(e)),r.length!==e)throw new Error("inconsistent lengths");return S(r)}function Eo(r){let e;r[0]==="Q"||r[0]==="1"?e=Ae(P.decode(`z${r}`)).bytes:e=W.parse(r).multihash.bytes;let t=Uint8Array.from(te(e.length));return _([t,e],t.length+e.length)}function Io(r){let e=vo.decode(r),t=Uint8Array.from(te(e.length));return _([t,e],t.length+e.length)}function Ao(r){let e=J(r),t=r.slice(z(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+S(t,"base64url")}function To(r){let e=J(r),t=r.slice(z(e));if(t.length!==e)throw new Error("inconsistent lengths");return S(t,"base58btc")}function Co(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);let t=R.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=bt(n);return _([t,o],t.length+o.length)}function So(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);let t=R.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=bt(n);return _([t,o],t.length+o.length)}function wr(r){let e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=S(e,"base32"),o=br(t);return`${n}:${o}`}function vr(r){r=vt(r);let e=[],t=[],n=null,o=r.split("/").slice(1);if(o.length===1&&o[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let s=0;s<o.length;s++){let i=o[s],a=v(i);if(a.size===0){e.push([a.code]),t.push([a.code]);continue}if(s++,s>=o.length)throw new Le("invalid address: "+r);if(a.path===!0){n=vt(o.slice(s).join("/")),e.push([a.code,wt(a.code,n)]),t.push([a.code,n]);break}let d=wt(a.code,o[s]);e.push([a.code,d]),t.push([a.code,xt(a.code,d)])}return{string:yr(t),bytes:Ue(e),tuples:e,stringTuples:t,path:n}}function yt(r){let e=[],t=[],n=null,o=0;for(;o<r.length;){let s=J(r,o),i=z(s),a=v(s),d=Po(a,r.slice(o+i));if(d===0){e.push([s]),t.push([s]),o+=i;continue}let m=r.slice(o+i,o+i+d);if(o+=d+i,o>r.length)throw new Le("Invalid address Uint8Array: "+S(r,"base16"));e.push([s,m]);let p=xt(s,m);if(t.push([s,p]),a.path===!0){n=p;break}}return{bytes:Uint8Array.from(r),string:yr(t),tuples:e,stringTuples:t,path:n}}function yr(r){let e=[];return r.map(t=>{let n=v(t[0]);return e.push(n.name),t.length>1&&t[1]!=null&&e.push(t[1]),null}),vt(e.join("/"))}function Ue(r){return _(r.map(e=>{let t=v(e[0]),n=Uint8Array.from(te(t.code));return e.length>1&&e[1]!=null&&(n=_([n,e[1]])),n}))}function Po(r,e){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let t=J(e instanceof Uint8Array?e:Uint8Array.from(e));return t+z(t)}}function vt(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}var Le=class extends Error{static name="ParseError";name="ParseError";constructor(e){super(`Error parsing address: ${e}`)}};function Er(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}var Lo=Symbol.for("nodejs.util.inspect.custom"),It=Symbol.for("@multiformats/js-multiaddr/multiaddr"),Uo=[v("dns").code,v("dns4").code,v("dns6").code,v("dnsaddr").code],Et=class extends Error{constructor(e="No available resolver"){super(e),this.name="NoAvailableResolverError"}},De=class r{bytes;#e;#t;#r;#n;[It]=!0;constructor(e){e==null&&(e="");let t;if(e instanceof Uint8Array)t=yt(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);t=vr(e)}else if(Ar(e))t=yt(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=t.bytes,this.#e=t.string,this.#t=t.tuples,this.#r=t.stringTuples,this.#n=t.path}toString(){return this.#e}toJSON(){return this.toString()}toOptions(){let e,t,n,o,s="",i=v("tcp"),a=v("udp"),d=v("ip4"),m=v("ip6"),p=v("dns6"),h=v("ip6zone");for(let[l,f]of this.stringTuples())l===h.code&&(s=`%${f??""}`),Uo.includes(l)&&(t=i.name==="tcp"?"tcp":"udp",o=443,n=`${f??""}${s}`,e=l===p.code?6:4),(l===i.code||l===a.code)&&(t=v(l).name==="tcp"?"tcp":"udp",o=parseInt(f??"")),(l===d.code||l===m.code)&&(t=v(l).name==="tcp"?"tcp":"udp",n=`${f??""}${s}`,e=l===m.code?6:4);if(e==null||t==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:t,port:o}}protos(){return this.#t.map(([e])=>Object.assign({},v(e)))}protoCodes(){return this.#t.map(([e])=>e)}protoNames(){return this.#t.map(([e])=>v(e).name)}tuples(){return this.#t.map(([e,t])=>t==null?[e]:[e,t])}stringTuples(){return this.#r.map(([e,t])=>t==null?[e]:[e,t])}encapsulate(e){return e=new r(e),new r(this.toString()+e.toString())}decapsulate(e){let t=e.toString(),n=this.toString(),o=n.lastIndexOf(t);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new r(n.slice(0,o))}decapsulateCode(e){let t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new r(Ue(t.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,o])=>{n===ce.p2p.code&&e.push([n,o]),n===ce["p2p-circuit"].code&&(e=[])});let t=e.pop();if(t?.[1]!=null){let n=t[1];return n[0]==="Q"||n[0]==="1"?S(P.decode(`z${n}`),"base58btc"):S(W.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#n}equals(e){return Er(this.bytes,e.bytes)}async resolve(e){let t=this.protos().find(s=>s.resolvable);if(t==null)return[this];let n=Ir.get(t.name);if(n==null)throw new Et(`no available resolver for ${t.name}`);return(await n(this,e)).map(s=>$(s))}nodeAddress(){let e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){let t=(e??this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}[Lo](){return`Multiaddr(${this.#e})`}};var Ir=new Map;function Ar(r){return!!r?.[It]}function $(r){return new De(r)}var Do=c("dns4"),Mo=c("dns6"),ko=c("dnsaddr"),K=E(c("dns"),ko,Do,Mo),Ne=E(c("ip4"),c("ip6")),H=E(u(Ne,c("tcp")),u(K,c("tcp"))),Fe=u(Ne,c("udp")),No=u(Fe,c("utp")),Fo=u(Fe,c("quic")),$o=u(Fe,c("quic-v1")),At=E(u(H,c("ws")),u(K,c("ws"))),Me=E(u(At,c("p2p")),At),Tt=E(u(H,c("wss")),u(K,c("wss")),u(H,c("tls"),c("ws")),u(K,c("tls"),c("ws"))),ke=E(u(Tt,c("p2p")),Tt),Ct=E(u(H,c("http")),u(Ne,c("http")),u(K,c("http"))),St=E(u(H,c("https")),u(Ne,c("https")),u(K,c("https"))),Tr=u(Fe,c("webrtc-direct"),c("certhash")),Pr=E(u(Tr,c("p2p")),Tr),Cr=u($o,c("webtransport"),c("certhash"),c("certhash")),Lr=E(u(Cr,c("p2p")),Cr),Ur=E(u(Me,c("p2p-webrtc-star"),c("p2p")),u(ke,c("p2p-webrtc-star"),c("p2p")),u(Me,c("p2p-webrtc-star")),u(ke,c("p2p-webrtc-star"))),ta=E(u(Me,c("p2p-websocket-star"),c("p2p")),u(ke,c("p2p-websocket-star"),c("p2p")),u(Me,c("p2p-websocket-star")),u(ke,c("p2p-websocket-star"))),Dr=E(u(Ct,c("p2p-webrtc-direct"),c("p2p")),u(St,c("p2p-webrtc-direct"),c("p2p")),u(Ct,c("p2p-webrtc-direct")),u(St,c("p2p-webrtc-direct"))),Y=E(At,Tt,Ct,St,Ur,Dr,H,No,Fo,K,Pr,Lr),ra=E(u(Y,c("p2p-stardust"),c("p2p")),u(Y,c("p2p-stardust"))),G=E(u(Y,c("p2p")),Ur,Dr,Pr,Lr,c("p2p")),Sr=E(u(G,c("p2p-circuit"),G),u(G,c("p2p-circuit")),u(c("p2p-circuit"),G),u(Y,c("p2p-circuit")),u(c("p2p-circuit"),Y),c("p2p-circuit")),Mr=()=>E(u(Sr,Mr),Sr),X=Mr(),na=E(u(X,G,X),u(G,X),u(X,G),X,G);var oa=E(u(X,c("webrtc"),c("p2p")),u(X,c("webrtc")),u(Y,c("webrtc"),c("p2p")),u(Y,c("webrtc")),c("webrtc"));function kr(r){function e(t){let n;try{n=$(t)}catch{return!1}let o=r(n.protoNames());return o===null?!1:o===!0||o===!1?o:o.length===0}return e}function u(...r){function e(t){if(t.length<r.length)return null;let n=t;return r.some(o=>(n=typeof o=="function"?o().partialMatch(t):o.partialMatch(t),Array.isArray(n)&&(t=n),n===null)),n}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:kr(e),partialMatch:e}}function E(...r){function e(n){let o=null;return r.some(s=>{let i=typeof s=="function"?s().partialMatch(n):s.partialMatch(n);return i!=null?(o=i,!0):!1}),o}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:kr(e),partialMatch:e}}function c(r){let e=r;function t(o){let s;try{s=$(o)}catch{return!1}let i=s.protoNames();return i.length===1&&i[0]===e}function n(o){return o.length===0?null:o[0]===e?o.slice(1):null}return{toString:function(){return e},matches:t,partialMatch:n}}var $e=class extends Event{type;detail;constructor(e,t){super(e),this.type=e,this.detail=t}};var _r=le(F("net"),1);function Nr(r){let e=new globalThis.AbortController;function t(){e.abort();for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}for(let s of r){if(s?.aborted===!0){t();break}s?.addEventListener!=null&&s.addEventListener("abort",t)}function n(){for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}let o=e.signal;return o.clear=n,o}var Pt=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},Lt=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}},Fr=r=>globalThis.DOMException===void 0?new Lt(r):new DOMException(r),$r=r=>{let e=r.reason===void 0?Fr("This operation was aborted."):r.reason;return e instanceof Error?e:Fr(e)};function Ut(r,e){let{milliseconds:t,fallback:n,message:o,customTimers:s={setTimeout,clearTimeout}}=e,i,a,m=new Promise((p,h)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){let{signal:l}=e;l.aborted&&h($r(l)),a=()=>{h($r(l))},l.addEventListener("abort",a,{once:!0})}if(t===Number.POSITIVE_INFINITY){r.then(p,h);return}let b=new Pt;i=s.setTimeout.call(void 0,()=>{if(n){try{p(n())}catch(l){h(l)}return}typeof r.cancel=="function"&&r.cancel(),o===!1?p():o instanceof Error?h(o):(b.message=o??`Promise timed out after ${t} milliseconds`,h(b))},t),(async()=>{try{p(await r)}catch(l){h(l)}})()}).finally(()=>{m.clear(),a&&e.signal&&e.signal.removeEventListener("abort",a)});return m.clear=()=>{s.clearTimeout.call(void 0,i),i=void 0},m}var Vo=r=>{let e=r.addEventListener||r.on||r.addListener,t=r.removeEventListener||r.off||r.removeListener;if(!e||!t)throw new TypeError("Emitter is not compatible");return{addListener:e.bind(r),removeListener:t.bind(r)}};function zo(r,e,t){let n,o=new Promise((s,i)=>{if(t={rejectionEvents:["error"],multiArgs:!1,resolveImmediately:!1,...t},!(t.count>=0&&(t.count===Number.POSITIVE_INFINITY||Number.isInteger(t.count))))throw new TypeError("The `count` option should be at least 0 or more");t.signal?.throwIfAborted();let a=[e].flat(),d=[],{addListener:m,removeListener:p}=Vo(r),h=(...l)=>{let f=t.multiArgs?l:l[0];t.filter&&!t.filter(f)||(d.push(f),t.count===d.length&&(n(),s(d)))},b=l=>{n(),i(l)};n=()=>{for(let l of a)p(l,h);for(let l of t.rejectionEvents)p(l,b)};for(let l of a)m(l,h);for(let l of t.rejectionEvents)m(l,b);t.signal&&t.signal.addEventListener("abort",()=>{b(t.signal.reason)},{once:!0}),t.resolveImmediately&&s(d)});if(o.cancel=n,typeof t.timeout=="number"){let s=Ut(o,{milliseconds:t.timeout});return s.cancel=n,s}return o}function Dt(r,e,t){typeof t=="function"&&(t={filter:t}),t={...t,count:1,resolveImmediately:!1};let n=zo(r,e,t),o=n.then(s=>s[0]);return o.cancel=n.cancel,o}function Or(r,e){if(typeof r!="string")throw new V(`invalid ip provided: ${r}`);if(typeof e=="string"&&(e=parseInt(e)),isNaN(e))throw new V(`invalid port provided: ${e}`);if((0,k.isIPv4)(r))return $(`/ip4/${r}/tcp/${e}`);if((0,k.isIPv6)(r))return $(`/ip6/${r}/tcp/${e}`);throw new V(`invalid ip:port for creating a multiaddr: ${r}:${e}`)}function Mt(){let r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t}),r}var kt=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=t??"ABORT_ERR"}};async function Nt(r,e,t,n){let o=new kt(n?.errorMessage,n?.errorCode);return t?.aborted===!0?Promise.reject(o):new Promise((s,i)=>{function a(){t?.removeEventListener("abort",p),r.removeEventListener(e,d),n?.errorEvent!=null&&r.removeEventListener(n.errorEvent,m)}let d=h=>{try{if(n?.filter?.(h)===!1)return}catch(b){a(),i(b);return}a(),s(h)},m=h=>{a(),i(h.detail)},p=()=>{a(),i(o)};t?.addEventListener("abort",p),r.addEventListener(e,d),n?.errorEvent!=null&&r.addEventListener(n.errorEvent,m)})}function Vr(r){if(_o(r))return async function*(){let e=r.getReader();try{for(;;){let{done:t,value:n}=await e.read();if(t)return;yield n}}finally{e.releaseLock()}}();if(Bo(r))return r;throw new Error("unknown stream")}function Bo(r){return r[Symbol.asyncIterator]!=null}function _o(r){return typeof r?.getReader=="function"}function zr(r){return async e=>{let t=async()=>{Ro(e)&&await e.return(void 0)},n,o,s=g=>{n=g,t().catch(w=>{w=new AggregateError([n,w],"The Writable emitted an error, additionally an error occurred while ending the Source")}).finally(()=>{o?.(g)})},i,a=!1,d=()=>{a=!0,i?.()},m,p=!1,h=()=>{p=!0,m?.()},b,l=()=>{b?.()},f=async()=>new Promise((g,w)=>{i=b=g,o=w,r.once("drain",l)}),I=async()=>(await t(),new Promise((g,w)=>{if(a||p||n!=null){g();return}m=i=g,o=w})),C=()=>{r.removeListener("error",s),r.removeListener("close",d),r.removeListener("finish",h),r.removeListener("drain",l)};r.once("error",s),r.once("close",d),r.once("finish",h);try{for await(let g of e){if(!r.writable||r.destroyed||n!=null)break;r.write(g)||await f()}}catch(g){n==null&&r.destroy(g),n=g}try{if(r.writable&&r.end(),await I(),n!=null)throw n}finally{C()}}}function Ro(r){return r.return!=null}function Ft(r){return{sink:zr(r),source:Vr(r)}}var $t=le(F("os"),1),Br=le(F("path"),1);var jo={ip4:"IPv4",ip6:"IPv6"};function ae(r,e={}){let t=r.getPath();return t!=null?$t.default.platform()==="win32"?{path:Br.default.join("\\\\.\\pipe\\",t)}:{path:t}:{...e,...r.toOptions()}}function Ot(r,e,t){let n=o=>$(`/${r}/${o}/tcp/${t}`);return(qo(e)?Go(jo[r]):[e]).map(n)}function qo(r){return["0.0.0.0","::"].includes(r)}var Wo=$t.default.networkInterfaces();function Go(r){let e=[];for(let[,t]of Object.entries(Wo))if(t!=null)for(let n of t)n.family===r&&e.push(n.address);return e}var Oe=(r,e)=>{let t,n=e.logger.forComponent("libp2p:tcp:socket"),o=e.direction,s=e.metrics,i=e.metricPrefix??"",a=e.socketInactivityTimeout??12e4,d=e.socketCloseTimeout??500,m=!1,p=!1;e.listeningAddr?.getPath()!=null&&(e.remoteAddr=e.listeningAddr),e.remoteAddr?.getPath()!=null&&(e.localAddr=e.remoteAddr),r.on("error",g=>{p=!0,m||(n.error("%s socket error - %e",o,g),s?.increment({[`${i}error`]:!0})),r.destroy(),C.timeline.close=Date.now()});let h;if(e.remoteAddr!=null)h=e.remoteAddr;else{if(r.remoteAddress==null||r.remotePort==null)throw new V("Could not determine remote address or port");h=Or(r.remoteAddress,r.remotePort)}let b=ae(h),l=b.path??`${b.host??""}:${b.port??""}`,{sink:f,source:I}=Ft(r);r.setTimeout(a),r.once("timeout",()=>{m=!0,n("%s %s socket read timeout",o,l),s?.increment({[`${i}timeout`]:!0}),r.destroy(new Z),C.timeline.close=Date.now()}),r.once("close",()=>{!m&&!p&&(n("%s %s socket close",o,l),s?.increment({[`${i}close`]:!0})),r.destroy(),C.timeline.close=Date.now()}),r.once("end",()=>{n("%s %s socket end",o,l),s?.increment({[`${i}end`]:!0})});let C={async sink(g){try{await f(async function*(){for await(let w of g)w instanceof Uint8Array?yield w:yield w.subarray()}())}catch(w){w.type!=="aborted"&&n.error("%s %s error in sink - %e",o,l,w)}r.end()},source:I,remoteAddr:h,timeline:{open:Date.now()},async close(g={}){if(r.closed){n("the %s %s socket is already closed",o,l);return}if(r.destroyed){n("the %s %s socket is already destroyed",o,l);return}if(t!=null)return t.promise;try{t=Mt(),r.end();let w=Ho(r),L=g.signal??AbortSignal.timeout(d);r.writableLength>0&&(n("%s %s draining socket",o,l),await Nt(w,"drain",L,{errorEvent:"error"}),n("%s %s socket drained",o,l)),await Promise.all([Nt(w,"close",L,{errorEvent:"error"}),r.destroy()])}catch(w){this.abort(w)}finally{t.resolve()}},abort:g=>{n("%s %s socket abort due to error - %e",o,l,g),r.destroy(),C.timeline.close=Date.now()},log:n};return C};function Ho(r){return{addEventListener:(t,n)=>{r.addListener(t,n)},removeEventListener:(t,n)=>{r.removeListener(t,n)}}}var A;(function(r){r[r.INACTIVE=0]="INACTIVE",r[r.ACTIVE=1]="ACTIVE",r[r.PAUSED=2]="PAUSED"})(A||(A={}));var Ve=class extends ye{context;server;sockets=new Set;status={code:A.INACTIVE};metrics;addr;log;shutdownController;inboundUpgradeTimeout;constructor(e){if(super(),this.context=e,e.keepAlive=e.keepAlive??!0,e.noDelay=e.noDelay??!0,this.shutdownController=new AbortController,ue(1/0,this.shutdownController.signal),this.log=e.logger.forComponent("libp2p:tcp:listener"),this.inboundUpgradeTimeout=e.inboundUpgradeTimeout??1e4,this.addr="unknown",this.server=_r.default.createServer(e,this.onSocket.bind(this)),e.maxConnections!==void 0&&(this.server.maxConnections=e.maxConnections),e.closeServerOnMaxConnections!=null&&e.closeServerOnMaxConnections.closeAbove<e.closeServerOnMaxConnections.listenBelow)throw new V("closeAbove must be >= listenBelow");this.server.on("listening",()=>{if(e.metrics!=null){let t=this.server.address();t==null?this.addr="unknown":typeof t=="string"?this.addr=t:this.addr=`${t.address}:${t.port}`,e.metrics?.registerMetricGroup("libp2p_tcp_inbound_connections_total",{label:"address",help:"Current active connections in TCP listener",calculate:()=>({[this.addr]:this.sockets.size})}),this.metrics={status:e.metrics.registerMetricGroup("libp2p_tcp_listener_status_info",{label:"address",help:"Current status of the TCP listener socket"}),errors:e.metrics.registerMetricGroup("libp2p_tcp_listener_errors_total",{label:"address",help:"Total count of TCP listener errors by type"}),events:e.metrics.registerMetricGroup("libp2p_tcp_listener_events_total",{label:"address",help:"Total count of TCP listener events by type"})},this.metrics?.status.update({[this.addr]:A.ACTIVE})}this.safeDispatchEvent("listening")}).on("error",t=>{this.metrics?.errors.increment({[`${this.addr} listen_error`]:!0}),this.safeDispatchEvent("error",{detail:t})}).on("close",()=>{this.metrics?.status.update({[this.addr]:this.status.code}),this.status.code!==A.PAUSED&&this.safeDispatchEvent("close")}).on("drop",()=>{this.metrics?.events.increment({[`${this.addr} drop`]:!0})})}onSocket(e){if(this.metrics?.events.increment({[`${this.addr} connection`]:!0}),this.status.code!==A.ACTIVE)throw e.destroy(),new be("Server is not listening yet");let t;try{t=Oe(e,{listeningAddr:this.status.listeningAddr,socketInactivityTimeout:this.context.socketInactivityTimeout,socketCloseTimeout:this.context.socketCloseTimeout,metrics:this.metrics?.events,metricPrefix:`${this.addr} `,logger:this.context.logger,direction:"inbound"})}catch(o){this.log.error("inbound connection failed",o),this.metrics?.errors.increment({[`${this.addr} inbound_to_connection`]:!0}),e.destroy();return}this.log("new inbound connection %s",t.remoteAddr),this.sockets.add(e);let n=Nr([this.shutdownController.signal,AbortSignal.timeout(this.inboundUpgradeTimeout)]);ue(1/0,n),this.context.upgrader.upgradeInbound(t,{signal:n}).then(()=>{this.log("inbound connection upgraded %s",t.remoteAddr),e.once("close",()=>{this.sockets.delete(e),this.context.closeServerOnMaxConnections!=null&&this.sockets.size<this.context.closeServerOnMaxConnections.listenBelow&&this.resume().catch(o=>{this.log.error("error attempting to listen server once connection count under limit",o),this.context.closeServerOnMaxConnections?.onListenError?.(o)})}),this.context.closeServerOnMaxConnections!=null&&this.sockets.size>=this.context.closeServerOnMaxConnections.closeAbove&&this.pause()}).catch(async o=>{this.log.error("inbound connection upgrade failed",o),this.metrics?.errors.increment({[`${this.addr} inbound_upgrade`]:!0}),this.sockets.delete(e),t.abort(o)}).finally(()=>{n.clear()})}getAddrs(){if(this.status.code===A.INACTIVE)return[];let e=[],t=this.server.address(),{listeningAddr:n,peerId:o}=this.status;if(t==null)return[];if(typeof t=="string")e=[n];else try{n.toString().startsWith("/ip4")?e=e.concat(Ot("ip4",t.address,t.port)):t.family==="IPv6"&&(e=e.concat(Ot("ip6",t.address,t.port)))}catch(s){this.log.error("could not turn %s:%s into multiaddr",t.address,t.port,s)}return e.map(s=>o!=null?s.encapsulate(`/p2p/${o}`):s)}updateAnnounceAddrs(){}async listen(e){if(this.status.code===A.ACTIVE||this.status.code===A.PAUSED)throw new ve("server is already listening");let t=e.getPeerId(),n=t==null?e.decapsulateCode(421):e,{backlog:o}=this.context;try{this.status={code:A.ACTIVE,listeningAddr:n,peerId:t,netConfig:ae(n,{backlog:o})},await this.resume()}catch(s){throw this.status={code:A.INACTIVE},s}}async close(){let e=[];this.server.listening&&e.push(Dt(this.server,"close")),this.pause(!0),this.shutdownController.abort(),this.sockets.forEach(t=>{t.readable&&(e.push(Dt(t,"close")),t.destroy())}),await Promise.all(e)}async resume(){if(this.server.listening||this.status.code===A.INACTIVE)return;let e=this.status.netConfig;await new Promise((t,n)=>{this.server.once("error",n),this.server.listen(e,t)}),this.status={...this.status,code:A.ACTIVE},this.log("listening on %s",this.server.address())}pause(e=!1){if(!this.server.listening&&this.status.code===A.PAUSED&&e){this.status={code:A.INACTIVE};return}!this.server.listening||this.status.code!==A.ACTIVE||(this.log("closing server on %s",this.server.address()),this.status=e?{code:A.INACTIVE}:{...this.status,code:A.PAUSED},this.server.close())}};var ze=class{opts;metrics;components;log;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:tcp"),this.opts=t,this.components=e,e.metrics!=null&&(this.metrics={events:e.metrics.registerCounterGroup("libp2p_tcp_dialer_events_total",{label:"event",help:"Total count of TCP dialer events by type"}),errors:e.metrics.registerCounterGroup("libp2p_tcp_dialer_errors_total",{label:"event",help:"Total count of TCP dialer events by type"})})}[Bt]=!0;[Symbol.toStringTag]="@libp2p/tcp";[Rt]=["@libp2p/transport"];async dial(e,t){t.keepAlive=t.keepAlive??!0,t.noDelay=t.noDelay??!0;let n=await this._connect(e,t),o;try{o=Oe(n,{remoteAddr:e,socketInactivityTimeout:this.opts.outboundSocketInactivityTimeout,socketCloseTimeout:this.opts.socketCloseTimeout,metrics:this.metrics?.events,logger:this.components.logger,direction:"outbound"})}catch(s){throw this.metrics?.errors.increment({outbound_to_connection:!0}),n.destroy(s),s}try{return this.log("new outbound connection %s",o.remoteAddr),await t.upgrader.upgradeOutbound(o,t)}catch(s){throw this.metrics?.errors.increment({outbound_upgrade:!0}),this.log.error("error upgrading outbound connection",s),o.abort(s),s}}async _connect(e,t){t.signal?.throwIfAborted(),t.onProgress?.(new $e("tcp:open-connection"));let n;return new Promise((o,s)=>{let i=Date.now(),a=ae(e,{...this.opts.dialOpts??{},...t});this.log("dialing %a",e),n=Rr.default.connect(a);let d=l=>{this.log.error("dial to %a errored - %e",e,l);let f=a.path??`${a.host??""}:${a.port}`;l.message=`connection error ${f}: ${l.message}`,this.metrics?.events.increment({error:!0}),b(l)},m=()=>{this.log("connection timeout %a",e),this.metrics?.events.increment({timeout:!0});let l=new Z(`Connection timeout after ${Date.now()-i}ms`);n.emit("error",l)},p=()=>{this.log("connection opened %a",e),this.metrics?.events.increment({connect:!0}),b()},h=()=>{this.log("connection aborted %a",e),this.metrics?.events.increment({abort:!0}),b(new we)},b=l=>{if(n.removeListener("error",d),n.removeListener("timeout",m),n.removeListener("connect",p),t.signal!=null&&t.signal.removeEventListener("abort",h),l!=null){s(l);return}o(n)};n.on("error",d),n.on("timeout",m),n.on("connect",p),t.signal!=null&&t.signal.addEventListener("abort",h)}).catch(o=>{throw n?.destroy(),o})}createListener(e){return new Ve({...this.opts.listenOpts??{},...e,inboundUpgradeTimeout:this.opts.inboundUpgradeTimeout,maxConnections:this.opts.maxConnections,backlog:this.opts.backlog,closeServerOnMaxConnections:this.opts.closeServerOnMaxConnections,socketInactivityTimeout:this.opts.inboundSocketInactivityTimeout,socketCloseTimeout:this.opts.socketCloseTimeout,metrics:this.components.metrics,logger:this.components.logger})}listenFilter(e){return e=Array.isArray(e)?e:[e],e.filter(t=>t.protoCodes().includes(290)?!1:t.protoCodes().includes(400)?!0:H.matches(t.decapsulateCode(421)))}dialFilter(e){return this.listenFilter(e)}};function Qo(r={}){return e=>new ze(e,r)}return Jr(Xo);})();
 return Libp2PTcp}));
diff --git a/node_modules/@libp2p/tcp/dist/src/constants.d.ts b/node_modules/@libp2p/tcp/dist/src/constants.d.ts
index f30b4f2..1026e6b 100644
--- a/node_modules/@libp2p/tcp/dist/src/constants.d.ts
+++ b/node_modules/@libp2p/tcp/dist/src/constants.d.ts
@@ -3,4 +3,5 @@ export declare const CODE_CIRCUIT = 290;
 export declare const CODE_UNIX = 400;
 export declare const CLOSE_TIMEOUT = 500;
 export declare const SOCKET_TIMEOUT: number;
+export declare const INBOUND_UPGRADE_TIMEOUT = 10000;
 //# sourceMappingURL=constants.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/src/constants.d.ts.map b/node_modules/@libp2p/tcp/dist/src/constants.d.ts.map
index c31c9fd..2dfb83b 100644
--- a/node_modules/@libp2p/tcp/dist/src/constants.d.ts.map
+++ b/node_modules/@libp2p/tcp/dist/src/constants.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"constants.d.ts","sourceRoot":"","sources":["../../src/constants.ts"],"names":[],"mappings":"AACA,eAAO,MAAM,QAAQ,MAAM,CAAA;AAC3B,eAAO,MAAM,YAAY,MAAM,CAAA;AAC/B,eAAO,MAAM,SAAS,MAAM,CAAA;AAG5B,eAAO,MAAM,aAAa,MAAM,CAAA;AAGhC,eAAO,MAAM,cAAc,QAAY,CAAA"}
\ No newline at end of file
+{"version":3,"file":"constants.d.ts","sourceRoot":"","sources":["../../src/constants.ts"],"names":[],"mappings":"AACA,eAAO,MAAM,QAAQ,MAAM,CAAA;AAC3B,eAAO,MAAM,YAAY,MAAM,CAAA;AAC/B,eAAO,MAAM,SAAS,MAAM,CAAA;AAG5B,eAAO,MAAM,aAAa,MAAM,CAAA;AAGhC,eAAO,MAAM,cAAc,QAAY,CAAA;AAGvC,eAAO,MAAM,uBAAuB,QAAS,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/src/constants.js b/node_modules/@libp2p/tcp/dist/src/constants.js
index 6b5bfd9..9db9f97 100644
--- a/node_modules/@libp2p/tcp/dist/src/constants.js
+++ b/node_modules/@libp2p/tcp/dist/src/constants.js
@@ -6,4 +6,6 @@ export const CODE_UNIX = 400;
 export const CLOSE_TIMEOUT = 500;
 // Close the socket if there is no activity after this long in ms
 export const SOCKET_TIMEOUT = 2 * 60000; // 2 mins
+// Inbound connection upgrades must complete within this many ms
+export const INBOUND_UPGRADE_TIMEOUT = 10_000;
 //# sourceMappingURL=constants.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/src/constants.js.map b/node_modules/@libp2p/tcp/dist/src/constants.js.map
index f2a3aba..888c4bc 100644
--- a/node_modules/@libp2p/tcp/dist/src/constants.js.map
+++ b/node_modules/@libp2p/tcp/dist/src/constants.js.map
@@ -1 +1 @@
-{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../src/constants.ts"],"names":[],"mappings":"AAAA,yBAAyB;AACzB,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,CAAA;AAC3B,MAAM,CAAC,MAAM,YAAY,GAAG,GAAG,CAAA;AAC/B,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,CAAA;AAE5B,kFAAkF;AAClF,MAAM,CAAC,MAAM,aAAa,GAAG,GAAG,CAAA;AAEhC,iEAAiE;AACjE,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,GAAG,KAAK,CAAA,CAAC,SAAS"}
\ No newline at end of file
+{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../src/constants.ts"],"names":[],"mappings":"AAAA,yBAAyB;AACzB,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,CAAA;AAC3B,MAAM,CAAC,MAAM,YAAY,GAAG,GAAG,CAAA;AAC/B,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,CAAA;AAE5B,kFAAkF;AAClF,MAAM,CAAC,MAAM,aAAa,GAAG,GAAG,CAAA;AAEhC,iEAAiE;AACjE,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,GAAG,KAAK,CAAA,CAAC,SAAS;AAEjD,gEAAgE;AAChE,MAAM,CAAC,MAAM,uBAAuB,GAAG,MAAM,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/src/index.d.ts b/node_modules/@libp2p/tcp/dist/src/index.d.ts
index ad3662b..ceea6e1 100644
--- a/node_modules/@libp2p/tcp/dist/src/index.d.ts
+++ b/node_modules/@libp2p/tcp/dist/src/index.d.ts
@@ -67,6 +67,13 @@ export interface TCPOptions {
      * Options passed to every `net.createServer` for every TCP server
      */
     listenOpts?: TCPSocketOptions;
+    /**
+     * Upgrading an inbound connection must happen within this many ms otherwise
+     * the connection will be closed.
+     *
+     * @default 10_000
+     */
+    inboundUpgradeTimeout?: number;
 }
 /**
  * Expose a subset of net.connect options
diff --git a/node_modules/@libp2p/tcp/dist/src/index.d.ts.map b/node_modules/@libp2p/tcp/dist/src/index.d.ts.map
index 3623a69..18ded82 100644
--- a/node_modules/@libp2p/tcp/dist/src/index.d.ts.map
+++ b/node_modules/@libp2p/tcp/dist/src/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AAGH,OAAO,KAAK,EAAE,+BAA+B,EAAE,MAAM,eAAe,CAAA;AACpE,OAAO,KAAK,EAAE,eAAe,EAAE,YAAY,EAAE,OAAO,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,SAAS,EAAE,+BAA+B,EAAE,MAAM,mBAAmB,CAAA;AACxK,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAA;AAC3D,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAA;AAEpD,YAAY,EAAE,+BAA+B,EAAE,CAAA;AAE/C,MAAM,WAAW,UAAU;IACzB;;OAEG;IACH,8BAA8B,CAAC,EAAE,MAAM,CAAA;IAEvC;;OAEG;IACH,+BAA+B,CAAC,EAAE,MAAM,CAAA;IAExC;;OAEG;IACH,kBAAkB,CAAC,EAAE,MAAM,CAAA;IAE3B;;;OAGG;IACH,cAAc,CAAC,EAAE,MAAM,CAAA;IAEvB;;;OAGG;IACH,OAAO,CAAC,EAAE,MAAM,CAAA;IAEhB;;;OAGG;IACH,2BAA2B,CAAC,EAAE,+BAA+B,CAAA;IAE7D;;OAEG;IACH,QAAQ,CAAC,EAAE,gBAAgB,CAAA;IAE3B;;OAEG;IACH,UAAU,CAAC,EAAE,gBAAgB,CAAA;CAC9B;AAED;;GAEG;AACH,MAAM,WAAW,gBAAiB,SAAQ,YAAY;IACpD;;OAEG;IACH,OAAO,CAAC,EAAE,OAAO,CAAA;IAEjB;;OAEG;IACH,SAAS,CAAC,EAAE,OAAO,CAAA;IAEnB;;OAEG;IACH,qBAAqB,CAAC,EAAE,MAAM,CAAA;IAE9B;;OAEG;IACH,aAAa,CAAC,EAAE,OAAO,CAAA;CACxB;AAED,MAAM,MAAM,aAAa,GACvB,+BAA+B,GAC/B,aAAa,CAAC,qBAAqB,CAAC,CAAA;AAEtC,MAAM,WAAW,cAAe,SAAQ,oBAAoB,CAAC,aAAa,CAAC,EAAE,gBAAgB;CAE5F;AAED,MAAM,WAAW,wBAAyB,SAAQ,qBAAqB,EAAE,gBAAgB;CAExF;AAED,MAAM,WAAW,aAAa;IAC5B,OAAO,CAAC,EAAE,OAAO,CAAA;IACjB,MAAM,EAAE,eAAe,CAAA;CACxB;AAED,MAAM,WAAW,UAAU;IACzB,MAAM,EAAE,YAAY,CAAC,OAAO,GAAG,SAAS,GAAG,SAAS,GAAG,OAAO,CAAC,CAAA;IAC/D,MAAM,EAAE,YAAY,CAAC,wBAAwB,GAAG,kBAAkB,CAAC,CAAA;CACpE;AAED,wBAAgB,GAAG,CAAE,IAAI,GAAE,UAAe,GAAG,CAAC,UAAU,EAAE,aAAa,KAAK,SAAS,CAIpF"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AAGH,OAAO,KAAK,EAAE,+BAA+B,EAAE,MAAM,eAAe,CAAA;AACpE,OAAO,KAAK,EAAE,eAAe,EAAE,YAAY,EAAE,OAAO,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,SAAS,EAAE,+BAA+B,EAAE,MAAM,mBAAmB,CAAA;AACxK,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAA;AAC3D,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAA;AAEpD,YAAY,EAAE,+BAA+B,EAAE,CAAA;AAE/C,MAAM,WAAW,UAAU;IACzB;;OAEG;IACH,8BAA8B,CAAC,EAAE,MAAM,CAAA;IAEvC;;OAEG;IACH,+BAA+B,CAAC,EAAE,MAAM,CAAA;IAExC;;OAEG;IACH,kBAAkB,CAAC,EAAE,MAAM,CAAA;IAE3B;;;OAGG;IACH,cAAc,CAAC,EAAE,MAAM,CAAA;IAEvB;;;OAGG;IACH,OAAO,CAAC,EAAE,MAAM,CAAA;IAEhB;;;OAGG;IACH,2BAA2B,CAAC,EAAE,+BAA+B,CAAA;IAE7D;;OAEG;IACH,QAAQ,CAAC,EAAE,gBAAgB,CAAA;IAE3B;;OAEG;IACH,UAAU,CAAC,EAAE,gBAAgB,CAAA;IAE7B;;;;;OAKG;IACH,qBAAqB,CAAC,EAAE,MAAM,CAAA;CAC/B;AAED;;GAEG;AACH,MAAM,WAAW,gBAAiB,SAAQ,YAAY;IACpD;;OAEG;IACH,OAAO,CAAC,EAAE,OAAO,CAAA;IAEjB;;OAEG;IACH,SAAS,CAAC,EAAE,OAAO,CAAA;IAEnB;;OAEG;IACH,qBAAqB,CAAC,EAAE,MAAM,CAAA;IAE9B;;OAEG;IACH,aAAa,CAAC,EAAE,OAAO,CAAA;CACxB;AAED,MAAM,MAAM,aAAa,GACvB,+BAA+B,GAC/B,aAAa,CAAC,qBAAqB,CAAC,CAAA;AAEtC,MAAM,WAAW,cAAe,SAAQ,oBAAoB,CAAC,aAAa,CAAC,EAAE,gBAAgB;CAE5F;AAED,MAAM,WAAW,wBAAyB,SAAQ,qBAAqB,EAAE,gBAAgB;CAExF;AAED,MAAM,WAAW,aAAa;IAC5B,OAAO,CAAC,EAAE,OAAO,CAAA;IACjB,MAAM,EAAE,eAAe,CAAA;CACxB;AAED,MAAM,WAAW,UAAU;IACzB,MAAM,EAAE,YAAY,CAAC,OAAO,GAAG,SAAS,GAAG,SAAS,GAAG,OAAO,CAAC,CAAA;IAC/D,MAAM,EAAE,YAAY,CAAC,wBAAwB,GAAG,kBAAkB,CAAC,CAAA;CACpE;AAED,wBAAgB,GAAG,CAAE,IAAI,GAAE,UAAe,GAAG,CAAC,UAAU,EAAE,aAAa,KAAK,SAAS,CAIpF"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/src/index.js.map b/node_modules/@libp2p/tcp/dist/src/index.js.map
index df1c7bd..e422ecd 100644
--- a/node_modules/@libp2p/tcp/dist/src/index.js.map
+++ b/node_modules/@libp2p/tcp/dist/src/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AAEH,OAAO,EAAE,GAAG,EAAE,MAAM,UAAU,CAAA;AAoG9B,MAAM,UAAU,GAAG,CAAE,OAAmB,EAAE;IACxC,OAAO,CAAC,UAAyB,EAAE,EAAE;QACnC,OAAO,IAAI,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;IAClC,CAAC,CAAA;AACH,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AAEH,OAAO,EAAE,GAAG,EAAE,MAAM,UAAU,CAAA;AA4G9B,MAAM,UAAU,GAAG,CAAE,OAAmB,EAAE;IACxC,OAAO,CAAC,UAAyB,EAAE,EAAE;QACnC,OAAO,IAAI,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;IAClC,CAAC,CAAA;AACH,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/src/listener.d.ts b/node_modules/@libp2p/tcp/dist/src/listener.d.ts
index 1a22bc0..4d8b2ab 100644
--- a/node_modules/@libp2p/tcp/dist/src/listener.d.ts
+++ b/node_modules/@libp2p/tcp/dist/src/listener.d.ts
@@ -18,6 +18,7 @@ export interface CloseServerOnMaxConnectionsOpts {
 }
 interface Context extends TCPCreateListenerOptions {
     upgrader: Upgrader;
+    inboundUpgradeTimeout?: number;
     socketInactivityTimeout?: number;
     socketCloseTimeout?: number;
     maxConnections?: number;
@@ -41,6 +42,7 @@ export declare class TCPListener extends TypedEventEmitter<ListenerEvents> imple
     private addr;
     private readonly log;
     private readonly shutdownController;
+    private readonly inboundUpgradeTimeout;
     constructor(context: Context);
     private onSocket;
     getAddrs(): Multiaddr[];
diff --git a/node_modules/@libp2p/tcp/dist/src/listener.d.ts.map b/node_modules/@libp2p/tcp/dist/src/listener.d.ts.map
index 7b0a74e..75f4cce 100644
--- a/node_modules/@libp2p/tcp/dist/src/listener.d.ts.map
+++ b/node_modules/@libp2p/tcp/dist/src/listener.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"listener.d.ts","sourceRoot":"","sources":["../../src/listener.ts"],"names":[],"mappings":"AACA,OAAO,EAAgE,iBAAiB,EAAmB,MAAM,mBAAmB,CAAA;AASpI,OAAO,KAAK,EAAE,wBAAwB,EAAE,MAAM,YAAY,CAAA;AAC1D,OAAO,KAAK,EAAE,eAAe,EAA+B,YAAY,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAC7J,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAExD,MAAM,WAAW,+BAA+B;IAC9C;;OAEG;IACH,WAAW,EAAE,MAAM,CAAA;IAEnB;;OAEG;IACH,UAAU,EAAE,MAAM,CAAA;IAElB;;OAEG;IACH,aAAa,CAAC,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,CAAA;CACjC;AAED,UAAU,OAAQ,SAAQ,wBAAwB;IAChD,QAAQ,EAAE,QAAQ,CAAA;IAClB,uBAAuB,CAAC,EAAE,MAAM,CAAA;IAChC,kBAAkB,CAAC,EAAE,MAAM,CAAA;IAC3B,cAAc,CAAC,EAAE,MAAM,CAAA;IACvB,OAAO,CAAC,EAAE,MAAM,CAAA;IAChB,OAAO,CAAC,EAAE,OAAO,CAAA;IACjB,2BAA2B,CAAC,EAAE,+BAA+B,CAAA;IAC7D,MAAM,EAAE,eAAe,CAAA;CACxB;AAED,MAAM,WAAW,kBAAkB;IACjC,MAAM,EAAE,WAAW,CAAA;IACnB,MAAM,EAAE,YAAY,CAAA;IACpB,MAAM,EAAE,YAAY,CAAA;CACrB;AAqBD,qBAAa,WAAY,SAAQ,iBAAiB,CAAC,cAAc,CAAE,YAAW,QAAQ;IAUvE,OAAO,CAAC,QAAQ,CAAC,OAAO;IATrC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAY;IACnC,+DAA+D;IAC/D,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAwB;IAChD,OAAO,CAAC,MAAM,CAAmD;IACjE,OAAO,CAAC,OAAO,CAAC,CAAoB;IACpC,OAAO,CAAC,IAAI,CAAQ;IACpB,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;IAC5B,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAiB;gBAEtB,OAAO,EAAE,OAAO;IAiG9C,OAAO,CAAC,QAAQ;IAsEhB,QAAQ,IAAK,SAAS,EAAE;IAgCxB,mBAAmB,IAAK,IAAI;IAItB,MAAM,CAAE,EAAE,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IAwBrC,KAAK,IAAK,OAAO,CAAC,IAAI,CAAC;IAyB7B;;OAEG;YACW,MAAM;IAkBpB,OAAO,CAAC,KAAK;CAmCd"}
\ No newline at end of file
+{"version":3,"file":"listener.d.ts","sourceRoot":"","sources":["../../src/listener.ts"],"names":[],"mappings":"AACA,OAAO,EAAgE,iBAAiB,EAAmB,MAAM,mBAAmB,CAAA;AAUpI,OAAO,KAAK,EAAE,wBAAwB,EAAE,MAAM,YAAY,CAAA;AAC1D,OAAO,KAAK,EAAE,eAAe,EAA+B,YAAY,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAC7J,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAExD,MAAM,WAAW,+BAA+B;IAC9C;;OAEG;IACH,WAAW,EAAE,MAAM,CAAA;IAEnB;;OAEG;IACH,UAAU,EAAE,MAAM,CAAA;IAElB;;OAEG;IACH,aAAa,CAAC,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,CAAA;CACjC;AAED,UAAU,OAAQ,SAAQ,wBAAwB;IAChD,QAAQ,EAAE,QAAQ,CAAA;IAClB,qBAAqB,CAAC,EAAE,MAAM,CAAA;IAC9B,uBAAuB,CAAC,EAAE,MAAM,CAAA;IAChC,kBAAkB,CAAC,EAAE,MAAM,CAAA;IAC3B,cAAc,CAAC,EAAE,MAAM,CAAA;IACvB,OAAO,CAAC,EAAE,MAAM,CAAA;IAChB,OAAO,CAAC,EAAE,OAAO,CAAA;IACjB,2BAA2B,CAAC,EAAE,+BAA+B,CAAA;IAC7D,MAAM,EAAE,eAAe,CAAA;CACxB;AAED,MAAM,WAAW,kBAAkB;IACjC,MAAM,EAAE,WAAW,CAAA;IACnB,MAAM,EAAE,YAAY,CAAA;IACpB,MAAM,EAAE,YAAY,CAAA;CACrB;AAqBD,qBAAa,WAAY,SAAQ,iBAAiB,CAAC,cAAc,CAAE,YAAW,QAAQ;IAWvE,OAAO,CAAC,QAAQ,CAAC,OAAO;IAVrC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAY;IACnC,+DAA+D;IAC/D,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAwB;IAChD,OAAO,CAAC,MAAM,CAAmD;IACjE,OAAO,CAAC,OAAO,CAAC,CAAoB;IACpC,OAAO,CAAC,IAAI,CAAQ;IACpB,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;IAC5B,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAiB;IACpD,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAQ;gBAEhB,OAAO,EAAE,OAAO;IAkG9C,OAAO,CAAC,QAAQ;IA+EhB,QAAQ,IAAK,SAAS,EAAE;IAgCxB,mBAAmB,IAAK,IAAI;IAItB,MAAM,CAAE,EAAE,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IAwBrC,KAAK,IAAK,OAAO,CAAC,IAAI,CAAC;IAyB7B;;OAEG;YACW,MAAM;IAkBpB,OAAO,CAAC,KAAK;CAmCd"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/src/listener.js b/node_modules/@libp2p/tcp/dist/src/listener.js
index 5e8f436..6d43fa0 100644
--- a/node_modules/@libp2p/tcp/dist/src/listener.js
+++ b/node_modules/@libp2p/tcp/dist/src/listener.js
@@ -1,7 +1,8 @@
 import net from 'net';
 import { AlreadyStartedError, InvalidParametersError, NotStartedError, TypedEventEmitter, setMaxListeners } from '@libp2p/interface';
+import { anySignal } from 'any-signal';
 import { pEvent } from 'p-event';
-import { CODE_P2P } from './constants.js';
+import { CODE_P2P, INBOUND_UPGRADE_TIMEOUT } from './constants.js';
 import { toMultiaddrConnection } from './socket-to-conn.js';
 import { getMultiaddrs, multiaddrToNetConfig } from './utils.js';
 var TCPListenerStatusCode;
@@ -26,6 +27,7 @@ export class TCPListener extends TypedEventEmitter {
     addr;
     log;
     shutdownController;
+    inboundUpgradeTimeout;
     constructor(context) {
         super();
         this.context = context;
@@ -34,6 +36,7 @@ export class TCPListener extends TypedEventEmitter {
         this.shutdownController = new AbortController();
         setMaxListeners(Infinity, this.shutdownController.signal);
         this.log = context.logger.forComponent('libp2p:tcp:listener');
+        this.inboundUpgradeTimeout = context.inboundUpgradeTimeout ?? INBOUND_UPGRADE_TIMEOUT;
         this.addr = 'unknown';
         this.server = net.createServer(context, this.onSocket.bind(this));
         // https://nodejs.org/api/net.html#servermaxconnections
@@ -139,8 +142,13 @@ export class TCPListener extends TypedEventEmitter {
         }
         this.log('new inbound connection %s', maConn.remoteAddr);
         this.sockets.add(socket);
+        const signal = anySignal([
+            this.shutdownController.signal,
+            AbortSignal.timeout(this.inboundUpgradeTimeout)
+        ]);
+        setMaxListeners(Infinity, signal);
         this.context.upgrader.upgradeInbound(maConn, {
-            signal: this.shutdownController.signal
+            signal
         })
             .then(() => {
             this.log('inbound connection upgraded %s', maConn.remoteAddr);
@@ -170,6 +178,9 @@ export class TCPListener extends TypedEventEmitter {
             this.metrics?.errors.increment({ [`${this.addr} inbound_upgrade`]: true });
             this.sockets.delete(socket);
             maConn.abort(err);
+        })
+            .finally(() => {
+            signal.clear();
         });
     }
     getAddrs() {
diff --git a/node_modules/@libp2p/tcp/dist/src/listener.js.map b/node_modules/@libp2p/tcp/dist/src/listener.js.map
index bd1f1b2..52247ed 100644
--- a/node_modules/@libp2p/tcp/dist/src/listener.js.map
+++ b/node_modules/@libp2p/tcp/dist/src/listener.js.map
@@ -1 +1 @@
-{"version":3,"file":"listener.js","sourceRoot":"","sources":["../../src/listener.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"listener.js","sourceRoot":"","sources":["../../src/listener.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/src/tcp.d.ts.map b/node_modules/@libp2p/tcp/dist/src/tcp.d.ts.map
index ce0abec..7318147 100644
--- a/node_modules/@libp2p/tcp/dist/src/tcp.d.ts.map
+++ b/node_modules/@libp2p/tcp/dist/src/tcp.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"tcp.d.ts","sourceRoot":"","sources":["../../src/tcp.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;;AAGH,OAAO,EAA4B,mBAAmB,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AAOlG,OAAO,KAAK,EAAE,aAAa,EAAE,wBAAwB,EAAE,aAAa,EAAE,cAAc,EAAc,UAAU,EAAE,MAAM,YAAY,CAAA;AAChI,OAAO,KAAK,EAAU,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAuB,MAAM,mBAAmB,CAAA;AACrG,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACxD,OAAO,KAAK,EAAE,MAAM,EAA8C,MAAM,KAAK,CAAA;AAE7E,qBAAa,GAAI,YAAW,SAAS,CAAC,aAAa,CAAC;IAClD,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAY;IACjC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAY;IACrC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAe;IAC1C,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;gBAEf,UAAU,EAAE,aAAa,EAAE,OAAO,GAAE,UAAe;IAmBhE,QAAQ,CAAC,CAAC,eAAe,CAAC,QAAO;IAEjC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,iBAAgB;IAE7C,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAE,MAAM,EAAE,CAEvC;IAEK,IAAI,CAAE,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,GAAG,OAAO,CAAC,UAAU,CAAC;IAmClE,QAAQ,CAAE,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC;IA2ExE;;;;OAIG;IACH,cAAc,CAAE,OAAO,EAAE,wBAAwB,GAAG,QAAQ;IAc5D;;OAEG;IACH,YAAY,CAAE,UAAU,EAAE,SAAS,EAAE,GAAG,SAAS,EAAE;IAgBnD;;OAEG;IACH,UAAU,CAAE,UAAU,EAAE,SAAS,EAAE,GAAG,SAAS,EAAE;CAGlD"}
\ No newline at end of file
+{"version":3,"file":"tcp.d.ts","sourceRoot":"","sources":["../../src/tcp.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;;AAGH,OAAO,EAA4B,mBAAmB,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AAOlG,OAAO,KAAK,EAAE,aAAa,EAAE,wBAAwB,EAAE,aAAa,EAAE,cAAc,EAAc,UAAU,EAAE,MAAM,YAAY,CAAA;AAChI,OAAO,KAAK,EAAU,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAuB,MAAM,mBAAmB,CAAA;AACrG,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACxD,OAAO,KAAK,EAAE,MAAM,EAA8C,MAAM,KAAK,CAAA;AAE7E,qBAAa,GAAI,YAAW,SAAS,CAAC,aAAa,CAAC;IAClD,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAY;IACjC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAY;IACrC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAe;IAC1C,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;gBAEf,UAAU,EAAE,aAAa,EAAE,OAAO,GAAE,UAAe;IAmBhE,QAAQ,CAAC,CAAC,eAAe,CAAC,QAAO;IAEjC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,iBAAgB;IAE7C,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAE,MAAM,EAAE,CAEvC;IAEK,IAAI,CAAE,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,GAAG,OAAO,CAAC,UAAU,CAAC;IAmClE,QAAQ,CAAE,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC;IA2ExE;;;;OAIG;IACH,cAAc,CAAE,OAAO,EAAE,wBAAwB,GAAG,QAAQ;IAe5D;;OAEG;IACH,YAAY,CAAE,UAAU,EAAE,SAAS,EAAE,GAAG,SAAS,EAAE;IAgBnD;;OAEG;IACH,UAAU,CAAE,UAAU,EAAE,SAAS,EAAE,GAAG,SAAS,EAAE;CAGlD"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/src/tcp.js b/node_modules/@libp2p/tcp/dist/src/tcp.js
index c2cd22e..cfd0c13 100644
--- a/node_modules/@libp2p/tcp/dist/src/tcp.js
+++ b/node_modules/@libp2p/tcp/dist/src/tcp.js
@@ -163,6 +163,7 @@ export class TCP {
         return new TCPListener({
             ...(this.opts.listenOpts ?? {}),
             ...options,
+            inboundUpgradeTimeout: this.opts.inboundUpgradeTimeout,
             maxConnections: this.opts.maxConnections,
             backlog: this.opts.backlog,
             closeServerOnMaxConnections: this.opts.closeServerOnMaxConnections,
diff --git a/node_modules/@libp2p/tcp/dist/src/tcp.js.map b/node_modules/@libp2p/tcp/dist/src/tcp.js.map
index fe9513f..fe85670 100644
--- a/node_modules/@libp2p/tcp/dist/src/tcp.js.map
+++ b/node_modules/@libp2p/tcp/dist/src/tcp.js.map
@@ -1 +1 @@
-{"version":3,"file":"tcp.js","sourceRoot":"","sources":["../../src/tcp.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"tcp.js","sourceRoot":"","sources":["../../src/tcp.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/browser.d.ts b/node_modules/@libp2p/tcp/dist/test/browser.d.ts
new file mode 100644
index 0000000..3154168
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/browser.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=browser.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/browser.d.ts.map b/node_modules/@libp2p/tcp/dist/test/browser.d.ts.map
new file mode 100644
index 0000000..cd65d33
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/browser.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"browser.d.ts","sourceRoot":"","sources":["../../test/browser.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/browser.js b/node_modules/@libp2p/tcp/dist/test/browser.js
new file mode 100644
index 0000000..0db8f0a
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/browser.js
@@ -0,0 +1,17 @@
+import { defaultLogger } from '@libp2p/logger';
+import { expect } from 'aegir/chai';
+import { isBrowser, isWebWorker } from 'wherearewe';
+import { tcp } from '../src/index.js';
+describe('browser non-support', () => {
+    it('should throw in browsers', function () {
+        if (!isBrowser && !isWebWorker) {
+            return this.skip();
+        }
+        expect(() => {
+            tcp()({
+                logger: defaultLogger()
+            });
+        }).to.throw();
+    });
+});
+//# sourceMappingURL=browser.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/browser.js.map b/node_modules/@libp2p/tcp/dist/test/browser.js.map
new file mode 100644
index 0000000..68b1763
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/browser.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../test/browser.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,YAAY,CAAA;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAA;AAErC,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,EAAE,CAAC,0BAA0B,EAAE;QAC7B,IAAI,CAAC,SAAS,IAAI,CAAC,WAAW,EAAE,CAAC;YAC/B,OAAO,IAAI,CAAC,IAAI,EAAE,CAAA;QACpB,CAAC;QAED,MAAM,CAAC,GAAG,EAAE;YACV,GAAG,EAAE,CAAC;gBACJ,MAAM,EAAE,aAAa,EAAE;aACxB,CAAC,CAAA;QACJ,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IACf,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.d.ts b/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.d.ts
new file mode 100644
index 0000000..502dc4a
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=connection-limits.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.d.ts.map b/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.d.ts.map
new file mode 100644
index 0000000..4512df9
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection-limits.spec.d.ts","sourceRoot":"","sources":["../../test/connection-limits.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.js b/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.js
new file mode 100644
index 0000000..188d4de
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.js
@@ -0,0 +1,181 @@
+import net from 'node:net';
+import { promisify } from 'util';
+import { defaultLogger } from '@libp2p/logger';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { tcp } from '../src/index.js';
+const buildSocketAssertions = (port, closeCallbacks) => {
+    function createSocket(i) {
+        const socket = net.connect({ host: '127.0.0.1', port });
+        closeCallbacks.unshift(async function closeHandler() {
+            if (!socket.destroyed) {
+                socket.destroy();
+                await new Promise((resolve) => socket.on('close', resolve));
+            }
+        });
+        return socket;
+    }
+    async function assertConnectedSocket(i) {
+        const socket = createSocket(i);
+        await new Promise((resolve, reject) => {
+            socket.once('connect', () => {
+                resolve();
+            });
+            socket.once('error', (err) => {
+                err.message = `Socket[${i}] ${err.message}`;
+                reject(err);
+            });
+        });
+        return socket;
+    }
+    async function assertRefusedSocket(i) {
+        const socket = createSocket(i);
+        await new Promise((resolve, reject) => {
+            socket.once('connect', () => {
+                reject(Error(`Socket[${i}] connected but was expected to reject`));
+            });
+            socket.once('error', (err) => {
+                if (err.message.includes('ECONNREFUSED')) {
+                    resolve();
+                }
+                else {
+                    err.message = `Socket[${i}] unexpected error ${err.message}`;
+                    reject(err);
+                }
+            });
+        });
+        return socket;
+    }
+    return { assertConnectedSocket, assertRefusedSocket };
+};
+async function assertServerConnections(listener, connections) {
+    // Expect server connections but allow time for sockets to connect or disconnect
+    for (let i = 0; i < 100; i++) {
+        // eslint-disable-next-line @typescript-eslint/dot-notation
+        if (listener['sockets'].size === connections) {
+            return;
+        }
+        else {
+            await promisify(setTimeout)(10);
+        }
+    }
+    // eslint-disable-next-line @typescript-eslint/dot-notation
+    expect(listener['sockets'].size).equals(connections, 'invalid amount of server connections');
+}
+describe('closeAbove/listenBelow', () => {
+    let afterEachCallbacks = [];
+    let upgrader;
+    beforeEach(() => {
+        afterEachCallbacks = [];
+        upgrader = stubInterface({
+            upgradeInbound: Sinon.stub().resolves(),
+            upgradeOutbound: async () => {
+                return stubInterface();
+            }
+        });
+    });
+    afterEach(async () => {
+        await Promise.all(afterEachCallbacks.map(fn => fn()));
+    });
+    it('reject dial of connection above closeAbove', async () => {
+        const listenBelow = 2;
+        const closeAbove = 3;
+        const port = 9900;
+        const transport = tcp({ closeServerOnMaxConnections: { listenBelow, closeAbove } })({
+            logger: defaultLogger()
+        });
+        const listener = transport.createListener({ upgrader });
+        afterEachCallbacks.push(async () => listener.close());
+        await listener.listen(multiaddr(`/ip4/127.0.0.1/tcp/${port}`));
+        const { assertConnectedSocket, assertRefusedSocket } = buildSocketAssertions(port, afterEachCallbacks);
+        await assertConnectedSocket(1);
+        await assertConnectedSocket(2);
+        await assertConnectedSocket(3);
+        await assertServerConnections(listener, 3);
+        // Limit reached, server should be closed here
+        await assertRefusedSocket(4);
+        await assertRefusedSocket(5);
+        await assertServerConnections(listener, 3);
+    });
+    it('accepts dial of connection when connection drop listenBelow limit', async () => {
+        const listenBelow = 2;
+        const closeAbove = 3;
+        const port = 9900;
+        const transport = tcp({ closeServerOnMaxConnections: { listenBelow, closeAbove } })({
+            logger: defaultLogger()
+        });
+        const listener = transport.createListener({ upgrader });
+        afterEachCallbacks.push(async () => listener.close());
+        await listener.listen(multiaddr(`/ip4/127.0.0.1/tcp/${port}`));
+        const { assertConnectedSocket } = buildSocketAssertions(port, afterEachCallbacks);
+        const socket1 = await assertConnectedSocket(1);
+        const socket2 = await assertConnectedSocket(2);
+        await assertConnectedSocket(3);
+        await assertServerConnections(listener, 3);
+        // Destroy sockets to be have connections < listenBelow
+        socket1.destroy();
+        socket2.destroy();
+        // After destroying 2 sockets connections will be below "listenBelow" limit
+        await assertServerConnections(listener, 1);
+        // Now it should be able to accept new connections
+        await assertConnectedSocket(4);
+        await assertConnectedSocket(5);
+        // 2 connections dropped and 2 new connections accepted
+        await assertServerConnections(listener, 3);
+    });
+    it('should not emit "close" event when server is stopped due to "closeAbove" limit', async () => {
+        const listenBelow = 2;
+        const closeAbove = 3;
+        const port = 9900;
+        const transport = tcp({ closeServerOnMaxConnections: { listenBelow, closeAbove } })({
+            logger: defaultLogger()
+        });
+        const listener = transport.createListener({ upgrader });
+        afterEachCallbacks.push(async () => listener.close());
+        let closeEventCallCount = 0;
+        listener.addEventListener('close', () => {
+            closeEventCallCount += 1;
+        });
+        await listener.listen(multiaddr(`/ip4/127.0.0.1/tcp/${port}`));
+        const { assertConnectedSocket } = buildSocketAssertions(port, afterEachCallbacks);
+        await assertConnectedSocket(1);
+        await assertConnectedSocket(2);
+        await assertConnectedSocket(3);
+        await assertServerConnections(listener, 3);
+        // Limit reached, server should be closed but should not emit "close" event
+        expect(closeEventCallCount).equals(0);
+    });
+    it('should emit "listening" event when server is resumed due to "listenBelow" limit', async () => {
+        const listenBelow = 2;
+        const closeAbove = 3;
+        const port = 9900;
+        const transport = tcp({ closeServerOnMaxConnections: { listenBelow, closeAbove } })({
+            logger: defaultLogger()
+        });
+        const listener = transport.createListener({ upgrader });
+        afterEachCallbacks.push(async () => listener.close());
+        let listeningEventCallCount = 0;
+        listener.addEventListener('listening', () => {
+            listeningEventCallCount += 1;
+        });
+        await listener.listen(multiaddr(`/ip4/127.0.0.1/tcp/${port}`));
+        const { assertConnectedSocket } = buildSocketAssertions(port, afterEachCallbacks);
+        // Server should be listening now
+        expect(listeningEventCallCount).equals(1);
+        const socket1 = await assertConnectedSocket(1);
+        const socket2 = await assertConnectedSocket(2);
+        await assertConnectedSocket(3);
+        // Limit reached, server should be closed now
+        await assertServerConnections(listener, 3);
+        // Close some sockets to resume listening
+        socket1.destroy();
+        socket2.destroy();
+        // Wait for listener to emit event
+        await promisify(setTimeout)(50);
+        // Server should emit the "listening" event again
+        expect(listeningEventCallCount).equals(2);
+    });
+});
+//# sourceMappingURL=connection-limits.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.js.map b/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.js.map
new file mode 100644
index 0000000..9a09308
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/connection-limits.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection-limits.spec.js","sourceRoot":"","sources":["../../test/connection-limits.spec.ts"],"names":[],"mappings":"AAAA,OAAO,GAAG,MAAM,UAAU,CAAA;AAC1B,OAAO,EAAE,SAAS,EAAE,MAAM,MAAM,CAAA;AAChC,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAA;AAIrC,MAAM,qBAAqB,GAAG,CAAC,IAAY,EAAE,cAA+C,EAAkH,EAAE;IAC9M,SAAS,YAAY,CAAE,CAAS;QAC9B,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAA;QAEvD,cAAc,CAAC,OAAO,CAAC,KAAK,UAAU,YAAY;YAChD,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;gBACtB,MAAM,CAAC,OAAO,EAAE,CAAA;gBAChB,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAA;YAC7D,CAAC;QACH,CAAC,CAAC,CAAA;QACF,OAAO,MAAM,CAAA;IACf,CAAC;IAED,KAAK,UAAU,qBAAqB,CAAE,CAAS;QAC7C,MAAM,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAA;QAE9B,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC1C,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE;gBAC1B,OAAO,EAAE,CAAA;YACX,CAAC,CAAC,CAAA;YACF,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;gBAC3B,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,OAAO,EAAE,CAAA;gBAC3C,MAAM,CAAC,GAAG,CAAC,CAAA;YACb,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,OAAO,MAAM,CAAA;IACf,CAAC;IAED,KAAK,UAAU,mBAAmB,CAAE,CAAS;QAC3C,MAAM,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAA;QAE9B,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC1C,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE;gBAC1B,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,wCAAwC,CAAC,CAAC,CAAA;YACpE,CAAC,CAAC,CAAA;YACF,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;gBAC3B,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;oBACzC,OAAO,EAAE,CAAA;gBACX,CAAC;qBAAM,CAAC;oBACN,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,sBAAsB,GAAG,CAAC,OAAO,EAAE,CAAA;oBAC5D,MAAM,CAAC,GAAG,CAAC,CAAA;gBACb,CAAC;YACH,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,OAAO,MAAM,CAAA;IACf,CAAC;IAED,OAAO,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,CAAA;AACvD,CAAC,CAAA;AAED,KAAK,UAAU,uBAAuB,CAAE,QAAqB,EAAE,WAAmB;IAChF,gFAAgF;IAChF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAC7B,2DAA2D;QAC3D,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;YAC7C,OAAM;QACR,CAAC;aAAM,CAAC;YACN,MAAM,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAA;QACjC,CAAC;IACH,CAAC;IACD,2DAA2D;IAC3D,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,sCAAsC,CAAC,CAAA;AAC9F,CAAC;AAED,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,IAAI,kBAAkB,GAAoC,EAAE,CAAA;IAC5D,IAAI,QAAkB,CAAA;IAEtB,UAAU,CAAC,GAAG,EAAE;QACd,kBAAkB,GAAG,EAAE,CAAA;QAEvB,QAAQ,GAAG,aAAa,CAAW;YACjC,cAAc,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;YACvC,eAAe,EAAE,KAAK,IAAI,EAAE;gBAC1B,OAAO,aAAa,EAAc,CAAA;YACpC,CAAC;SACF,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;IACvD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,WAAW,GAAG,CAAC,CAAA;QACrB,MAAM,UAAU,GAAG,CAAC,CAAA;QACpB,MAAM,IAAI,GAAG,IAAI,CAAA;QAEjB,MAAM,SAAS,GAAG,GAAG,CAAC,EAAE,2BAA2B,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;YAClF,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,SAAS,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,CAAgB,CAAA;QACtE,kBAAkB,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;QAErD,MAAM,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAC,CAAA;QAC9D,MAAM,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,GAAG,qBAAqB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAA;QAEtG,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,uBAAuB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;QAE1C,8CAA8C;QAC9C,MAAM,mBAAmB,CAAC,CAAC,CAAC,CAAA;QAC5B,MAAM,mBAAmB,CAAC,CAAC,CAAC,CAAA;QAC5B,MAAM,uBAAuB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAC5C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,mEAAmE,EAAE,KAAK,IAAI,EAAE;QACjF,MAAM,WAAW,GAAG,CAAC,CAAA;QACrB,MAAM,UAAU,GAAG,CAAC,CAAA;QACpB,MAAM,IAAI,GAAG,IAAI,CAAA;QAEjB,MAAM,SAAS,GAAG,GAAG,CAAC,EAAE,2BAA2B,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;YAClF,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,SAAS,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,CAAgB,CAAA;QACtE,kBAAkB,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;QAErD,MAAM,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAC,CAAA;QAC9D,MAAM,EAAE,qBAAqB,EAAE,GAAG,qBAAqB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAA;QAEjF,MAAM,OAAO,GAAG,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9C,MAAM,OAAO,GAAG,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9C,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,uBAAuB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;QAE1C,uDAAuD;QACvD,OAAO,CAAC,OAAO,EAAE,CAAA;QACjB,OAAO,CAAC,OAAO,EAAE,CAAA;QACjB,2EAA2E;QAC3E,MAAM,uBAAuB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;QAE1C,kDAAkD;QAClD,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAE9B,uDAAuD;QACvD,MAAM,uBAAuB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAC5C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gFAAgF,EAAE,KAAK,IAAI,EAAE;QAC9F,MAAM,WAAW,GAAG,CAAC,CAAA;QACrB,MAAM,UAAU,GAAG,CAAC,CAAA;QACpB,MAAM,IAAI,GAAG,IAAI,CAAA;QAEjB,MAAM,SAAS,GAAG,GAAG,CAAC,EAAE,2BAA2B,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;YAClF,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,SAAS,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,CAAgB,CAAA;QACtE,kBAAkB,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;QAErD,IAAI,mBAAmB,GAAG,CAAC,CAAA;QAC3B,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACtC,mBAAmB,IAAI,CAAC,CAAA;QAC1B,CAAC,CAAC,CAAA;QAEF,MAAM,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAC,CAAA;QAC9D,MAAM,EAAE,qBAAqB,EAAE,GAAG,qBAAqB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAA;QAEjF,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,uBAAuB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;QAE1C,2EAA2E;QAC3E,MAAM,CAAC,mBAAmB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;IACvC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iFAAiF,EAAE,KAAK,IAAI,EAAE;QAC/F,MAAM,WAAW,GAAG,CAAC,CAAA;QACrB,MAAM,UAAU,GAAG,CAAC,CAAA;QACpB,MAAM,IAAI,GAAG,IAAI,CAAA;QAEjB,MAAM,SAAS,GAAG,GAAG,CAAC,EAAE,2BAA2B,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;YAClF,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,SAAS,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,CAAgB,CAAA;QACtE,kBAAkB,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;QAErD,IAAI,uBAAuB,GAAG,CAAC,CAAA;QAC/B,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAG,EAAE;YAC1C,uBAAuB,IAAI,CAAC,CAAA;QAC9B,CAAC,CAAC,CAAA;QAEF,MAAM,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAC,CAAA;QAC9D,MAAM,EAAE,qBAAqB,EAAE,GAAG,qBAAqB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAA;QAEjF,iCAAiC;QACjC,MAAM,CAAC,uBAAuB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QAEzC,MAAM,OAAO,GAAG,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9C,MAAM,OAAO,GAAG,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9C,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAC9B,6CAA6C;QAC7C,MAAM,uBAAuB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;QAE1C,yCAAyC;QACzC,OAAO,CAAC,OAAO,EAAE,CAAA;QACjB,OAAO,CAAC,OAAO,EAAE,CAAA;QAEjB,kCAAkC;QAClC,MAAM,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAA;QAE/B,iDAAiD;QACjD,MAAM,CAAC,uBAAuB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;IAC3C,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/connection.spec.d.ts b/node_modules/@libp2p/tcp/dist/test/connection.spec.d.ts
new file mode 100644
index 0000000..91628ea
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/connection.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=connection.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/connection.spec.d.ts.map b/node_modules/@libp2p/tcp/dist/test/connection.spec.d.ts.map
new file mode 100644
index 0000000..a6153fa
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/connection.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection.spec.d.ts","sourceRoot":"","sources":["../../test/connection.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/connection.spec.js b/node_modules/@libp2p/tcp/dist/test/connection.spec.js
new file mode 100644
index 0000000..32d3ebb
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/connection.spec.js
@@ -0,0 +1,73 @@
+import { defaultLogger } from '@libp2p/logger';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import pWaitFor from 'p-wait-for';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { tcp } from '../src/index.js';
+describe('valid localAddr and remoteAddr', () => {
+    let transport;
+    let upgrader;
+    beforeEach(() => {
+        transport = tcp()({
+            logger: defaultLogger()
+        });
+        upgrader = stubInterface({
+            upgradeInbound: Sinon.stub().resolves(),
+            upgradeOutbound: async (maConn) => {
+                return stubInterface({
+                    remoteAddr: maConn.remoteAddr
+                });
+            }
+        });
+    });
+    const ma = multiaddr('/ip4/127.0.0.1/tcp/0');
+    it('should resolve port 0', async () => {
+        // Create a listener
+        const listener = transport.createListener({
+            upgrader
+        });
+        // Listen on the multi-address
+        await listener.listen(ma);
+        const localAddrs = listener.getAddrs();
+        expect(localAddrs.length).to.equal(1);
+        // Dial to that address
+        await transport.dial(localAddrs[0], {
+            upgrader
+        });
+        // Wait for the incoming dial to be handled
+        await pWaitFor(() => {
+            return upgrader.upgradeInbound.callCount === 1;
+        });
+        // Close the listener
+        await listener.close();
+    });
+    it('should handle multiple simultaneous closes', async () => {
+        // Create a listener
+        const listener = transport.createListener({
+            upgrader
+        });
+        // Listen on the multi-address
+        await listener.listen(ma);
+        const localAddrs = listener.getAddrs();
+        expect(localAddrs.length).to.equal(1);
+        // Dial to that address
+        const dialerConn = await transport.dial(localAddrs[0], {
+            upgrader
+        });
+        // Wait for the incoming dial to be handled
+        await pWaitFor(() => {
+            return upgrader.upgradeInbound.callCount === 1;
+        });
+        // Close the dialer with two simultaneous calls to `close`
+        await Promise.race([
+            new Promise((resolve, reject) => setTimeout(() => { reject(new Error('Timed out waiting for connection close')); }, 500)),
+            await Promise.all([
+                dialerConn.close(),
+                dialerConn.close()
+            ])
+        ]);
+        await listener.close();
+    });
+});
+//# sourceMappingURL=connection.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/connection.spec.js.map b/node_modules/@libp2p/tcp/dist/test/connection.spec.js.map
new file mode 100644
index 0000000..69fa21d
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/connection.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection.spec.js","sourceRoot":"","sources":["../../test/connection.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/filter.spec.d.ts b/node_modules/@libp2p/tcp/dist/test/filter.spec.d.ts
new file mode 100644
index 0000000..ab80542
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/filter.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=filter.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/filter.spec.d.ts.map b/node_modules/@libp2p/tcp/dist/test/filter.spec.d.ts.map
new file mode 100644
index 0000000..cdd7b3f
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/filter.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"filter.spec.d.ts","sourceRoot":"","sources":["../../test/filter.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/filter.spec.js b/node_modules/@libp2p/tcp/dist/test/filter.spec.js
new file mode 100644
index 0000000..76134a0
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/filter.spec.js
@@ -0,0 +1,38 @@
+import { defaultLogger } from '@libp2p/logger';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { tcp } from '../src/index.js';
+describe('filter addrs', () => {
+    const base = '/ip4/127.0.0.1';
+    const ipfs = '/ipfs/Qmb6owHp6eaWArVbcJJbQSyifyJBttMMjYV76N2hMbf5Vw';
+    const unix = '/tmp/some/file.sock';
+    let transport;
+    before(() => {
+        transport = tcp()({
+            logger: defaultLogger()
+        });
+    });
+    it('filter valid addrs for this transport', () => {
+        const ma1 = multiaddr(base + '/tcp/9090');
+        const ma2 = multiaddr(base + '/udp/9090');
+        const ma3 = multiaddr(base + '/tcp/9090/http');
+        const ma4 = multiaddr(base + '/tcp/9090/ipfs/Qmb6owHp6eaWArVbcJJbQSyifyJBttMMjYV76N2hMbf5Vw');
+        const ma5 = multiaddr(base + '/tcp/9090/http' + ipfs);
+        const ma6 = multiaddr('/ip4/127.0.0.1/tcp/9090/p2p-circuit' + ipfs);
+        const ma7 = multiaddr('/dns4/libp2p.io/tcp/9090');
+        const ma8 = multiaddr('/dnsaddr/libp2p.io/tcp/9090');
+        const ma9 = multiaddr('/unix' + unix);
+        const valid = transport.dialFilter([ma1, ma2, ma3, ma4, ma5, ma6, ma7, ma8, ma9]);
+        expect(valid.length).to.equal(5);
+        expect(valid[0]).to.deep.equal(ma1);
+        expect(valid[1]).to.deep.equal(ma4);
+        expect(valid[4]).to.deep.equal(ma9);
+    });
+    it('filter a single addr for this transport', () => {
+        const ma1 = multiaddr(base + '/tcp/9090');
+        const valid = transport.dialFilter([ma1]);
+        expect(valid.length).to.equal(1);
+        expect(valid[0]).to.eql(ma1);
+    });
+});
+//# sourceMappingURL=filter.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/filter.spec.js.map b/node_modules/@libp2p/tcp/dist/test/filter.spec.js.map
new file mode 100644
index 0000000..17e3688
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/filter.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"filter.spec.js","sourceRoot":"","sources":["../../test/filter.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAA;AAGrC,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,MAAM,IAAI,GAAG,gBAAgB,CAAA;IAC7B,MAAM,IAAI,GAAG,sDAAsD,CAAA;IACnE,MAAM,IAAI,GAAG,qBAAqB,CAAA;IAElC,IAAI,SAAoB,CAAA;IAExB,MAAM,CAAC,GAAG,EAAE;QACV,SAAS,GAAG,GAAG,EAAE,CAAC;YAChB,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,CAAA;QACzC,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,CAAA;QACzC,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,gBAAgB,CAAC,CAAA;QAC9C,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,+DAA+D,CAAC,CAAA;QAC7F,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,gBAAgB,GAAG,IAAI,CAAC,CAAA;QACrD,MAAM,GAAG,GAAG,SAAS,CAAC,qCAAqC,GAAG,IAAI,CAAC,CAAA;QACnE,MAAM,GAAG,GAAG,SAAS,CAAC,0BAA0B,CAAC,CAAA;QACjD,MAAM,GAAG,GAAG,SAAS,CAAC,6BAA6B,CAAC,CAAA;QACpD,MAAM,GAAG,GAAG,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,CAAA;QAErC,MAAM,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;QACjF,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QAChC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACnC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACnC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACrC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,CAAA;QAEzC,MAAM,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;QACzC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QAChC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC9B,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.d.ts b/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.d.ts
new file mode 100644
index 0000000..a90db00
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=listen-dial.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.d.ts.map b/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.d.ts.map
new file mode 100644
index 0000000..e2e65e4
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"listen-dial.spec.d.ts","sourceRoot":"","sources":["../../test/listen-dial.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.js b/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.js
new file mode 100644
index 0000000..c2fdb77
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.js
@@ -0,0 +1,270 @@
+import os from 'os';
+import path from 'path';
+import { defaultLogger } from '@libp2p/logger';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import pDefer from 'p-defer';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { tcp } from '../src/index.js';
+const isCI = process.env.CI;
+describe('listen', () => {
+    let transport;
+    let listener;
+    let upgrader;
+    beforeEach(() => {
+        transport = tcp()({
+            logger: defaultLogger()
+        });
+        upgrader = stubInterface({
+            upgradeInbound: Sinon.stub().resolves(),
+            upgradeOutbound: async (maConn) => {
+                return stubInterface({
+                    remoteAddr: maConn.remoteAddr
+                });
+            }
+        });
+    });
+    afterEach(async () => {
+        try {
+            if (listener != null) {
+                await listener.close();
+            }
+        }
+        catch {
+            // some tests close the listener so ignore errors
+        }
+    });
+    it('listen on unix domain socket', async () => {
+        const mh = multiaddr(`/unix/${path.resolve(os.tmpdir(), `/tmp/p2pd-${Date.now()}.sock`)}`);
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+    });
+    it('listen on port 0', async () => {
+        const mh = multiaddr('/ip4/127.0.0.1/tcp/0');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+    });
+    it('errors when listening on busy port', async () => {
+        const mh = multiaddr('/ip4/127.0.0.1/tcp/0');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+        const listener2 = transport.createListener({
+            upgrader
+        });
+        const mh2 = listener.getAddrs()[0];
+        await expect(listener2.listen(mh2)).to.eventually.be.rejected()
+            .with.property('code', 'EADDRINUSE');
+    });
+    it('listen on IPv6 addr', async () => {
+        if (isCI != null) {
+            return;
+        }
+        const mh = multiaddr('/ip6/::/tcp/9090');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+    });
+    it('listen on any Interface', async () => {
+        const mh = multiaddr('/ip4/0.0.0.0/tcp/9090');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+    });
+    it('getAddrs', async () => {
+        const mh = multiaddr('/ip4/127.0.0.1/tcp/9090');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+        const multiaddrs = listener.getAddrs();
+        expect(multiaddrs.length).to.equal(1);
+        expect(multiaddrs[0]).to.deep.equal(mh);
+    });
+    it('getAddrs on port 0 listen', async () => {
+        const mh = multiaddr('/ip4/127.0.0.1/tcp/0');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+        const multiaddrs = listener.getAddrs();
+        expect(multiaddrs.length).to.equal(1);
+    });
+    it('getAddrs from listening on 0.0.0.0', async () => {
+        const mh = multiaddr('/ip4/0.0.0.0/tcp/9090');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+        const multiaddrs = listener.getAddrs();
+        expect(multiaddrs.length > 0).to.equal(true);
+        expect(multiaddrs[0].toString().indexOf('0.0.0.0')).to.equal(-1);
+    });
+    it('getAddrs from listening on 0.0.0.0 and port 0', async () => {
+        const mh = multiaddr('/ip4/0.0.0.0/tcp/0');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+        const multiaddrs = listener.getAddrs();
+        expect(multiaddrs.length > 0).to.equal(true);
+        expect(multiaddrs[0].toString().indexOf('0.0.0.0')).to.equal(-1);
+    });
+    it('getAddrs from listening on ip6 \'::\'', async () => {
+        const mh = multiaddr('/ip6/::/tcp/9090');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+        const multiaddrs = listener.getAddrs();
+        expect(multiaddrs.length > 0).to.equal(true);
+        expect(multiaddrs[0].toOptions().host).to.not.equal('::');
+    });
+    it('getAddrs preserves IPFS Id', async () => {
+        const mh = multiaddr('/ip4/127.0.0.1/tcp/9090/ipfs/Qmb6owHp6eaWArVbcJJbQSyifyJBttMMjYV76N2hMbf5Vw');
+        listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(mh);
+        const multiaddrs = listener.getAddrs();
+        expect(multiaddrs.length).to.equal(1);
+        expect(multiaddrs[0]).to.deep.equal(mh);
+    });
+});
+describe('dial', () => {
+    let transport;
+    let upgrader;
+    beforeEach(async () => {
+        upgrader = stubInterface({
+            upgradeInbound: Sinon.stub().resolves(),
+            upgradeOutbound: async (maConn) => {
+                return stubInterface({
+                    remoteAddr: maConn.remoteAddr
+                });
+            }
+        });
+        transport = tcp()({
+            logger: defaultLogger()
+        });
+    });
+    it('dial IPv4', async () => {
+        const ma = multiaddr('/ip4/127.0.0.1/tcp/9090');
+        const listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(ma);
+        await expect(transport.dial(ma, {
+            upgrader
+        })).to.eventually.be.ok();
+        await listener.close();
+    });
+    it('dial IPv6', async () => {
+        if (isCI != null) {
+            return;
+        }
+        const ma = multiaddr('/ip6/::/tcp/9090');
+        const listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(ma);
+        await expect(transport.dial(ma, {
+            upgrader
+        })).to.eventually.be.ok();
+        await listener.close();
+    });
+    it('dial unix domain socket', async () => {
+        const ma = multiaddr(`/unix/${path.resolve(os.tmpdir(), `/tmp/p2pd-${Date.now()}.sock`)}`);
+        const listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(ma);
+        await expect(transport.dial(ma, {
+            upgrader
+        })).to.eventually.be.ok();
+        await listener.close();
+    });
+    it('dials IPv4 with IPFS Id', async () => {
+        const ma = multiaddr('/ip4/127.0.0.1/tcp/9090/ipfs/Qmb6owHp6eaWArVbcJJbQSyifyJBttMMjYV76N2hMbf5Vw');
+        const listener = transport.createListener({
+            upgrader
+        });
+        await listener.listen(ma);
+        await expect(transport.dial(ma, {
+            upgrader
+        })).to.eventually.be.ok();
+        await listener.close();
+    });
+    it('should close before connection upgrade is completed', async () => {
+        // create a Promise that resolves when the upgrade starts
+        const upgradeStarted = pDefer();
+        // create a listener with the handler
+        const listener = transport.createListener({
+            upgrader: {
+                async upgradeInbound() {
+                    upgradeStarted.resolve();
+                    return new Promise(() => { });
+                },
+                async upgradeOutbound() {
+                    return new Promise(() => { });
+                }
+            }
+        });
+        // listen on a multiaddr
+        await listener.listen(multiaddr('/ip4/127.0.0.1/tcp/0'));
+        const localAddrs = listener.getAddrs();
+        expect(localAddrs.length).to.equal(1);
+        // dial the listener address
+        transport.dial(localAddrs[0], {
+            upgrader
+        }).catch(() => { });
+        // wait for the upgrade to start
+        await upgradeStarted.promise;
+        // close the listener, process should exit normally
+        await listener.close();
+    });
+    it('should abort inbound upgrade on close', async () => {
+        // create a Promise that resolves when the upgrade starts
+        const upgradeStarted = pDefer();
+        const abortedUpgrade = pDefer();
+        // create a listener with the handler
+        const listener = transport.createListener({
+            upgrader: {
+                async upgradeInbound(maConn, opts) {
+                    upgradeStarted.resolve();
+                    opts?.signal?.addEventListener('abort', () => {
+                        abortedUpgrade.resolve();
+                    }, {
+                        once: true
+                    });
+                    return new Promise(() => { });
+                },
+                async upgradeOutbound() {
+                    return new Promise(() => { });
+                }
+            }
+        });
+        // listen on a multiaddr
+        await listener.listen(multiaddr('/ip4/127.0.0.1/tcp/0'));
+        const localAddrs = listener.getAddrs();
+        expect(localAddrs.length).to.equal(1);
+        // dial the listener address
+        transport.dial(localAddrs[0], {
+            upgrader
+        }).catch(() => { });
+        // wait for the upgrade to start
+        await upgradeStarted.promise;
+        // close the listener
+        await listener.close();
+        // should abort the upgrade
+        await abortedUpgrade.promise;
+    });
+});
+//# sourceMappingURL=listen-dial.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.js.map b/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.js.map
new file mode 100644
index 0000000..c451722
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/listen-dial.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"listen-dial.spec.js","sourceRoot":"","sources":["../../test/listen-dial.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/max-connections.spec.d.ts b/node_modules/@libp2p/tcp/dist/test/max-connections.spec.d.ts
new file mode 100644
index 0000000..72a08e9
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/max-connections.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=max-connections.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/max-connections.spec.d.ts.map b/node_modules/@libp2p/tcp/dist/test/max-connections.spec.d.ts.map
new file mode 100644
index 0000000..ab2ee9d
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/max-connections.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"max-connections.spec.d.ts","sourceRoot":"","sources":["../../test/max-connections.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/max-connections.spec.js b/node_modules/@libp2p/tcp/dist/test/max-connections.spec.js
new file mode 100644
index 0000000..c008b5f
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/max-connections.spec.js
@@ -0,0 +1,75 @@
+import net from 'node:net';
+import { promisify } from 'node:util';
+import { defaultLogger } from '@libp2p/logger';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { tcp } from '../src/index.js';
+describe('maxConnections', () => {
+    const afterEachCallbacks = [];
+    let upgrader;
+    beforeEach(() => {
+        upgrader = stubInterface({
+            upgradeInbound: Sinon.stub().resolves(),
+            upgradeOutbound: async (maConn) => {
+                return stubInterface({
+                    remoteAddr: maConn.remoteAddr
+                });
+            }
+        });
+    });
+    afterEach(async () => {
+        await Promise.all(afterEachCallbacks.map(fn => fn()));
+        afterEachCallbacks.length = 0;
+    });
+    it('reject dial of connection above maxConnections', async () => {
+        const maxConnections = 2;
+        const socketCount = 4;
+        const port = 9900;
+        const transport = tcp({ maxConnections })({
+            logger: defaultLogger()
+        });
+        const listener = transport.createListener({ upgrader });
+        afterEachCallbacks.push(async () => listener.close());
+        await listener.listen(multiaddr(`/ip4/127.0.0.1/tcp/${port}`));
+        const sockets = [];
+        for (let i = 0; i < socketCount; i++) {
+            const socket = net.connect({ host: '127.0.0.1', port });
+            sockets.push(socket);
+            afterEachCallbacks.unshift(async () => {
+                if (!socket.destroyed) {
+                    socket.destroy();
+                    await new Promise((resolve) => socket.on('close', resolve));
+                }
+            });
+            // Wait for connection so the order of sockets is stable, sockets expected to be alive are always [0,1]
+            await new Promise((resolve, reject) => {
+                socket.on('connect', () => {
+                    resolve();
+                });
+                socket.on('error', (err) => {
+                    reject(err);
+                });
+            });
+        }
+        // With server.maxConnections the TCP socket is created and the initial handshake is completed
+        // Then in the server handler NodeJS javascript code will call socket.emit('drop') if over the limit
+        // https://github.com/nodejs/node/blob/fddc701d3c0eb4520f2af570876cc987ae6b4ba2/lib/net.js#L1706
+        // Wait for some time for server to drop all sockets above limit
+        await promisify(setTimeout)(250);
+        expect(upgrader.upgradeInbound.callCount).equals(maxConnections, 'wrong serverConnections');
+        for (let i = 0; i < socketCount; i++) {
+            const socket = sockets[i];
+            if (i < maxConnections) {
+                // Assert socket connected
+                expect(socket.destroyed).equals(false, `socket ${i} under limit must not be destroyed`);
+            }
+            else {
+                // Assert socket ended
+                expect(socket.destroyed).equals(true, `socket ${i} above limit must be destroyed`);
+            }
+        }
+    });
+});
+//# sourceMappingURL=max-connections.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/max-connections.spec.js.map b/node_modules/@libp2p/tcp/dist/test/max-connections.spec.js.map
new file mode 100644
index 0000000..5c7e634
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/max-connections.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"max-connections.spec.js","sourceRoot":"","sources":["../../test/max-connections.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.d.ts b/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.d.ts
new file mode 100644
index 0000000..ca78349
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=socket-to-conn.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.d.ts.map b/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.d.ts.map
new file mode 100644
index 0000000..a1baee8
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"socket-to-conn.spec.d.ts","sourceRoot":"","sources":["../../test/socket-to-conn.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.js b/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.js
new file mode 100644
index 0000000..6dedc44
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.js
@@ -0,0 +1,380 @@
+import { createServer, Socket } from 'net';
+import { defaultLogger } from '@libp2p/logger';
+import { expect } from 'aegir/chai';
+import defer from 'p-defer';
+import Sinon from 'sinon';
+import { toMultiaddrConnection } from '../src/socket-to-conn.js';
+async function setup(opts) {
+    const serverListening = defer();
+    const server = createServer(opts?.server);
+    server.listen(0, () => {
+        serverListening.resolve();
+    });
+    await serverListening.promise;
+    const serverSocket = defer();
+    const clientSocket = defer();
+    server.once('connection', (socket) => {
+        serverSocket.resolve(socket);
+    });
+    const address = server.address();
+    if (address == null || typeof address === 'string') {
+        throw new Error('Wrong socket type');
+    }
+    const client = new Socket(opts?.client);
+    client.once('connect', () => {
+        clientSocket.resolve(client);
+    });
+    client.connect(address.port, address.address);
+    return {
+        server,
+        serverSocket: await serverSocket.promise,
+        clientSocket: await clientSocket.promise
+    };
+}
+describe('socket-to-conn', () => {
+    let server;
+    let clientSocket;
+    let serverSocket;
+    afterEach(async () => {
+        if (serverSocket != null) {
+            serverSocket.destroy();
+        }
+        if (clientSocket != null) {
+            clientSocket.destroy();
+        }
+        if (server != null) {
+            server.close();
+        }
+    });
+    it('should destroy a socket that is closed by the client', async () => {
+        ({ server, clientSocket, serverSocket } = await setup());
+        // promise that is resolved when client socket is closed
+        const clientClosed = defer();
+        // promise that is resolved when client socket errors
+        const clientErrored = defer();
+        // promise that is resolved when our outgoing socket is closed
+        const serverClosed = defer();
+        // promise that is resolved when our outgoing socket errors
+        const serverErrored = defer();
+        const inboundMaConn = toMultiaddrConnection(serverSocket, {
+            socketInactivityTimeout: 100,
+            logger: defaultLogger(),
+            direction: 'inbound'
+        });
+        expect(inboundMaConn.timeline.open).to.be.ok();
+        expect(inboundMaConn.timeline.close).to.not.be.ok();
+        clientSocket.once('close', () => {
+            clientClosed.resolve(true);
+        });
+        clientSocket.once('error', err => {
+            clientErrored.resolve(err);
+        });
+        serverSocket.once('close', () => {
+            serverClosed.resolve(true);
+        });
+        serverSocket.once('error', err => {
+            serverErrored.resolve(err);
+        });
+        // send some data between the client and server
+        clientSocket.write('hello');
+        serverSocket.write('goodbye');
+        // close the client for writing
+        clientSocket.end();
+        // server socket was closed for reading and writing
+        await expect(serverClosed.promise).to.eventually.be.true();
+        // the connection closing was recorded
+        expect(inboundMaConn.timeline.close).to.be.a('number');
+        // server socket is destroyed
+        expect(serverSocket.destroyed).to.be.true();
+    });
+    it('should destroy a socket that is forcibly closed by the client', async () => {
+        ({ server, clientSocket, serverSocket } = await setup());
+        // promise that is resolved when our outgoing socket is closed
+        const serverClosed = defer();
+        // promise that is resolved when our outgoing socket errors
+        const serverErrored = defer();
+        const inboundMaConn = toMultiaddrConnection(serverSocket, {
+            socketInactivityTimeout: 100,
+            logger: defaultLogger(),
+            direction: 'inbound'
+        });
+        expect(inboundMaConn.timeline.open).to.be.ok();
+        expect(inboundMaConn.timeline.close).to.not.be.ok();
+        serverSocket.once('close', () => {
+            serverClosed.resolve(true);
+        });
+        serverSocket.once('error', err => {
+            serverErrored.resolve(err);
+        });
+        // send some data between the client and server
+        clientSocket.write('hello');
+        serverSocket.write('goodbye');
+        // close the client for reading and writing immediately
+        clientSocket.destroy();
+        const error = await serverErrored.promise;
+        // the error can be of either type
+        if (error.name !== 'TimeoutError' && error.code !== 'ECONNRESET') {
+            expect.fail('promise rejected with unknown error type');
+        }
+        // server socket was closed for reading and writing
+        await expect(serverClosed.promise).to.eventually.be.true();
+        // the connection closing was recorded
+        expect(inboundMaConn.timeline.close).to.be.a('number');
+        // server socket is destroyed
+        expect(serverSocket.destroyed).to.be.true();
+    });
+    it('should destroy a socket that is half-closed by the client', async () => {
+        ({ server, clientSocket, serverSocket } = await setup({
+            client: {
+                allowHalfOpen: true
+            }
+        }));
+        clientSocket.setTimeout(100);
+        // promise that is resolved when our outgoing socket is closed
+        const serverClosed = defer();
+        // promise that is resolved when the incoming socket is closed
+        const clientClosed = defer();
+        const inboundMaConn = toMultiaddrConnection(serverSocket, {
+            socketInactivityTimeout: 100,
+            logger: defaultLogger(),
+            direction: 'inbound'
+        });
+        expect(inboundMaConn.timeline.open).to.be.ok();
+        expect(inboundMaConn.timeline.close).to.not.be.ok();
+        serverSocket.once('close', () => {
+            serverClosed.resolve(true);
+        });
+        clientSocket.once('close', () => {
+            clientClosed.resolve(true);
+        });
+        clientSocket.once('timeout', () => {
+            clientSocket.destroy();
+        });
+        // send some data between the client and server
+        clientSocket.write('hello');
+        serverSocket.write('goodbye');
+        // close the client for writing
+        clientSocket.end();
+        await Promise.all([
+            // server socket was closed for reading and writing
+            expect(serverClosed.promise).to.eventually.be.true(),
+            // remote socket was closed by server
+            expect(clientClosed.promise).to.eventually.be.true()
+        ]);
+        // the connection closing was recorded
+        expect(inboundMaConn.timeline.close).to.be.a('number');
+        // server socket is destroyed
+        expect(serverSocket.destroyed).to.be.true();
+    });
+    it('should destroy a socket after sinking', async () => {
+        ({ server, clientSocket, serverSocket } = await setup());
+        // promise that is resolved when our outgoing socket is closed
+        const serverClosed = defer();
+        const inboundMaConn = toMultiaddrConnection(serverSocket, {
+            socketInactivityTimeout: 100,
+            logger: defaultLogger(),
+            direction: 'inbound'
+        });
+        expect(inboundMaConn.timeline.open).to.be.ok();
+        expect(inboundMaConn.timeline.close).to.not.be.ok();
+        serverSocket.once('close', () => {
+            serverClosed.resolve(true);
+        });
+        // send some data between the client and server
+        await inboundMaConn.sink(async function* () {
+            yield Uint8Array.from([0, 1, 2, 3]);
+        }());
+        // server socket should no longer be writable
+        expect(serverSocket.writable).to.be.false();
+        // server socket was closed for reading and writing
+        await expect(serverClosed.promise).to.eventually.be.true();
+        // the connection closing was recorded
+        expect(inboundMaConn.timeline.close).to.be.a('number');
+        // server socket is destroyed
+        expect(serverSocket.destroyed).to.be.true();
+    });
+    it('should destroy a socket when containing MultiaddrConnection is closed', async () => {
+        ({ server, clientSocket, serverSocket } = await setup());
+        // promise that is resolved when our outgoing socket is closed
+        const serverClosed = defer();
+        const inboundMaConn = toMultiaddrConnection(serverSocket, {
+            socketInactivityTimeout: 100,
+            socketCloseTimeout: 10,
+            logger: defaultLogger(),
+            direction: 'inbound'
+        });
+        expect(inboundMaConn.timeline.open).to.be.ok();
+        expect(inboundMaConn.timeline.close).to.not.be.ok();
+        clientSocket.once('error', () => { });
+        serverSocket.once('close', () => {
+            serverClosed.resolve(true);
+        });
+        // send some data between the client and server
+        clientSocket.write('hello');
+        serverSocket.write('goodbye');
+        await inboundMaConn.close();
+        // server socket was closed for reading and writing
+        await expect(serverClosed.promise).to.eventually.be.true();
+        // the connection closing was recorded
+        expect(inboundMaConn.timeline.close).to.be.a('number');
+        // server socket is destroyed
+        expect(serverSocket.destroyed).to.be.true();
+    });
+    it('should not close MultiaddrConnection twice', async () => {
+        ({ server, clientSocket, serverSocket } = await setup());
+        // proxyServerSocket.writableLength returns 100 which cause socket cannot be destroyed immediately
+        const proxyServerSocket = new Proxy(serverSocket, {
+            get(target, prop, receiver) {
+                if (prop === 'writableLength') {
+                    return 100;
+                }
+                return Reflect.get(target, prop, receiver);
+            }
+        });
+        // promise that is resolved when our outgoing socket is closed
+        const serverClosed = defer();
+        const socketCloseTimeout = 10;
+        const inboundMaConn = toMultiaddrConnection(proxyServerSocket, {
+            socketInactivityTimeout: 100,
+            socketCloseTimeout,
+            logger: defaultLogger(),
+            direction: 'inbound'
+        });
+        expect(inboundMaConn.timeline.open).to.be.ok();
+        expect(inboundMaConn.timeline.close).to.not.be.ok();
+        clientSocket.once('error', () => { });
+        serverSocket.once('close', () => {
+            serverClosed.resolve(true);
+        });
+        // send some data between the client and server
+        clientSocket.write('hello');
+        serverSocket.write('goodbye');
+        const signal = AbortSignal.timeout(socketCloseTimeout);
+        const addEventListenerSpy = Sinon.spy(signal, 'addEventListener');
+        // the 2nd and 3rd call should return immediately
+        await Promise.all([
+            inboundMaConn.close({ signal }),
+            inboundMaConn.close({ signal }),
+            inboundMaConn.close({ signal })
+        ]);
+        // server socket was closed for reading and writing
+        await expect(serverClosed.promise).to.eventually.be.true();
+        // the connection closing was recorded
+        expect(inboundMaConn.timeline.close).to.be.a('number');
+        // server socket is destroyed
+        expect(serverSocket.destroyed).to.be.true();
+        // the server socket was only closed once
+        expect(addEventListenerSpy.callCount).to.equal(1);
+    });
+    it('should destroy a socket when incoming MultiaddrConnection is closed', async () => {
+        ({ server, clientSocket, serverSocket } = await setup({
+            server: {
+                allowHalfOpen: true
+            }
+        }));
+        // promise that is resolved when our outgoing socket is closed
+        const serverClosed = defer();
+        const inboundMaConn = toMultiaddrConnection(serverSocket, {
+            socketInactivityTimeout: 100,
+            socketCloseTimeout: 10,
+            logger: defaultLogger(),
+            direction: 'inbound'
+        });
+        expect(inboundMaConn.timeline.open).to.be.ok();
+        expect(inboundMaConn.timeline.close).to.not.be.ok();
+        clientSocket.once('error', () => { });
+        serverSocket.once('close', () => {
+            serverClosed.resolve(true);
+        });
+        // send some data between the client and server
+        clientSocket.write('hello');
+        serverSocket.write('goodbye');
+        await inboundMaConn.close();
+        // server socket was closed for reading and writing
+        await expect(serverClosed.promise).to.eventually.be.true();
+        // the connection closing was recorded
+        expect(inboundMaConn.timeline.close).to.be.a('number');
+        // server socket is destroyed
+        expect(serverSocket.destroyed).to.be.true();
+    });
+    it('should destroy a socket when incoming MultiaddrConnection is closed but remote keeps sending data', async () => {
+        ({ server, clientSocket, serverSocket } = await setup({
+            server: {
+                allowHalfOpen: true
+            }
+        }));
+        // promise that is resolved when our outgoing socket is closed
+        const serverClosed = defer();
+        const inboundMaConn = toMultiaddrConnection(serverSocket, {
+            socketInactivityTimeout: 500,
+            socketCloseTimeout: 100,
+            logger: defaultLogger(),
+            direction: 'inbound'
+        });
+        expect(inboundMaConn.timeline.open).to.be.ok();
+        expect(inboundMaConn.timeline.close).to.not.be.ok();
+        clientSocket.once('error', () => { });
+        serverSocket.once('close', () => {
+            serverClosed.resolve(true);
+        });
+        // send some data between the client and server
+        clientSocket.write('hello');
+        serverSocket.write('goodbye');
+        setInterval(() => {
+            clientSocket.write(`some data ${Date.now()}`);
+        }, 10).unref();
+        await inboundMaConn.close();
+        // server socket was closed for reading and writing
+        await expect(serverClosed.promise).to.eventually.be.true();
+        // the connection closing was recorded
+        expect(inboundMaConn.timeline.close).to.be.a('number');
+        // server socket is destroyed
+        expect(serverSocket.destroyed).to.be.true();
+    });
+    it('should destroy a socket by inactivity timeout', async () => {
+        ({ server, clientSocket, serverSocket } = await setup());
+        // promise that is resolved when our outgoing socket is closed
+        const serverClosed = defer();
+        // promise that resolves when reading from the outgoing socket times out
+        const serverTimedOut = defer();
+        const clientError = defer();
+        const inboundMaConn = toMultiaddrConnection(serverSocket, {
+            socketInactivityTimeout: 100,
+            socketCloseTimeout: 100,
+            logger: defaultLogger(),
+            direction: 'inbound'
+        });
+        expect(inboundMaConn.timeline.open).to.be.ok();
+        expect(inboundMaConn.timeline.close).to.not.be.ok();
+        clientSocket.once('error', (err) => {
+            clientError.resolve(err);
+        });
+        serverSocket.once('close', () => {
+            serverClosed.resolve(true);
+        });
+        serverSocket.once('timeout', () => {
+            serverTimedOut.resolve(true);
+        });
+        // send some data between the client and server
+        clientSocket.write('hello');
+        serverSocket.write('goodbye');
+        // ...send no more data
+        // wait for server to time out socket
+        await Promise.all([
+            // server socket timed out reading from the client
+            expect(serverTimedOut.promise).to.eventually.be.true(),
+            // server socket was closed for reading and writing
+            expect(serverClosed.promise).to.eventually.be.true()
+        ]);
+        const err = await clientError.promise;
+        // can be either error depending on platform and timing
+        if (err.code !== 'ECONNRESET' && err.code !== 'EPIPE') {
+            expect.fail('client connection did not close abruptly');
+        }
+        // server socket should no longer be writable
+        expect(serverSocket.writable).to.be.false();
+        // server socket is destroyed
+        expect(serverSocket.destroyed).to.be.true();
+    });
+});
+//# sourceMappingURL=socket-to-conn.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.js.map b/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.js.map
new file mode 100644
index 0000000..ddd7ae3
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/test/socket-to-conn.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"socket-to-conn.spec.js","sourceRoot":"","sources":["../../test/socket-to-conn.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/tsconfig.tsbuildinfo b/node_modules/@libp2p/tcp/dist/tsconfig.tsbuildinfo
new file mode 100644
index 0000000..16d3e99
--- /dev/null
+++ b/node_modules/@libp2p/tcp/dist/tsconfig.tsbuildinfo
@@ -0,0 +1 @@
+{"program":{"fileNames":["../../../node_modules/typescript/lib/lib.es5.d.ts","../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../node_modules/typescript/lib/lib.es2021.d.ts","../../../node_modules/typescript/lib/lib.es2022.d.ts","../../../node_modules/typescript/lib/lib.es2023.d.ts","../../../node_modules/typescript/lib/lib.dom.d.ts","../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../node_modules/typescript/lib/lib.webworker.d.ts","../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../node_modules/typescript/lib/lib.es2021.promise.d.ts","../../../node_modules/typescript/lib/lib.es2021.string.d.ts","../../../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../../node_modules/typescript/lib/lib.es2021.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.array.d.ts","../../../node_modules/typescript/lib/lib.es2022.error.d.ts","../../../node_modules/typescript/lib/lib.es2022.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.object.d.ts","../../../node_modules/typescript/lib/lib.es2022.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2022.string.d.ts","../../../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2023.array.d.ts","../../../node_modules/typescript/lib/lib.es2023.collection.d.ts","../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../src/constants.ts","../../../node_modules/multiformats/dist/src/bases/interface.d.ts","../../../node_modules/multiformats/dist/src/block/interface.d.ts","../../../node_modules/multiformats/dist/src/hashes/interface.d.ts","../../../node_modules/multiformats/dist/src/link/interface.d.ts","../../../node_modules/multiformats/dist/src/cid.d.ts","../../../node_modules/uint8arraylist/dist/src/index.d.ts","../../interface/dist/src/keys.d.ts","../../interface/dist/src/peer-id.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/protocols-table.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/index.d.ts","../../../node_modules/progress-events/dist/src/index.d.ts","../../../node_modules/@multiformats/dns/dist/src/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/dnsaddr.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/index.d.ts","../../../node_modules/it-stream-types/dist/src/index.d.ts","../../interface/dist/src/connection.d.ts","../../interface/dist/src/peer-info.d.ts","../../interface/dist/src/content-routing.d.ts","../../interface/dist/src/event-target.d.ts","../../interface/dist/src/metrics.d.ts","../../interface/dist/src/peer-routing.d.ts","../../interface/dist/src/peer-store.d.ts","../../interface/dist/src/startable.d.ts","../../interface/dist/src/stream-handler.d.ts","../../interface/dist/src/topology.d.ts","../../interface/dist/src/stream-muxer.d.ts","../../interface/dist/src/transport.d.ts","../../interface/dist/src/connection-encrypter.d.ts","../../interface/dist/src/connection-gater.d.ts","../../interface/dist/src/peer-discovery.d.ts","../../../node_modules/it-pushable/dist/src/index.d.ts","../../interface/dist/src/pubsub.d.ts","../../interface/dist/src/record.d.ts","../../interface/dist/src/errors.d.ts","../../../node_modules/@types/node/compatibility/disposable.d.ts","../../../node_modules/@types/node/compatibility/indexable.d.ts","../../../node_modules/@types/node/compatibility/iterators.d.ts","../../../node_modules/@types/node/compatibility/index.d.ts","../../../node_modules/@types/node/ts5.6/globals.typedarray.d.ts","../../../node_modules/@types/node/ts5.6/buffer.buffer.d.ts","../../../node_modules/buffer/index.d.ts","../../../node_modules/undici-types/header.d.ts","../../../node_modules/undici-types/readable.d.ts","../../../node_modules/undici-types/file.d.ts","../../../node_modules/undici-types/fetch.d.ts","../../../node_modules/undici-types/formdata.d.ts","../../../node_modules/undici-types/connector.d.ts","../../../node_modules/undici-types/client.d.ts","../../../node_modules/undici-types/errors.d.ts","../../../node_modules/undici-types/dispatcher.d.ts","../../../node_modules/undici-types/global-dispatcher.d.ts","../../../node_modules/undici-types/global-origin.d.ts","../../../node_modules/undici-types/pool-stats.d.ts","../../../node_modules/undici-types/pool.d.ts","../../../node_modules/undici-types/handlers.d.ts","../../../node_modules/undici-types/balanced-pool.d.ts","../../../node_modules/undici-types/agent.d.ts","../../../node_modules/undici-types/mock-interceptor.d.ts","../../../node_modules/undici-types/mock-agent.d.ts","../../../node_modules/undici-types/mock-client.d.ts","../../../node_modules/undici-types/mock-pool.d.ts","../../../node_modules/undici-types/mock-errors.d.ts","../../../node_modules/undici-types/proxy-agent.d.ts","../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../node_modules/undici-types/retry-handler.d.ts","../../../node_modules/undici-types/retry-agent.d.ts","../../../node_modules/undici-types/api.d.ts","../../../node_modules/undici-types/interceptors.d.ts","../../../node_modules/undici-types/util.d.ts","../../../node_modules/undici-types/cookies.d.ts","../../../node_modules/undici-types/patch.d.ts","../../../node_modules/undici-types/websocket.d.ts","../../../node_modules/undici-types/eventsource.d.ts","../../../node_modules/undici-types/filereader.d.ts","../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../node_modules/undici-types/content-type.d.ts","../../../node_modules/undici-types/cache.d.ts","../../../node_modules/undici-types/index.d.ts","../../../node_modules/@types/node/globals.d.ts","../../../node_modules/@types/node/assert.d.ts","../../../node_modules/@types/node/assert/strict.d.ts","../../../node_modules/@types/node/async_hooks.d.ts","../../../node_modules/@types/node/buffer.d.ts","../../../node_modules/@types/node/child_process.d.ts","../../../node_modules/@types/node/cluster.d.ts","../../../node_modules/@types/node/console.d.ts","../../../node_modules/@types/node/constants.d.ts","../../../node_modules/@types/node/crypto.d.ts","../../../node_modules/@types/node/dgram.d.ts","../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../node_modules/@types/node/dns.d.ts","../../../node_modules/@types/node/dns/promises.d.ts","../../../node_modules/@types/node/domain.d.ts","../../../node_modules/@types/node/dom-events.d.ts","../../../node_modules/@types/node/events.d.ts","../../../node_modules/@types/node/fs.d.ts","../../../node_modules/@types/node/fs/promises.d.ts","../../../node_modules/@types/node/http.d.ts","../../../node_modules/@types/node/http2.d.ts","../../../node_modules/@types/node/https.d.ts","../../../node_modules/@types/node/inspector.d.ts","../../../node_modules/@types/node/module.d.ts","../../../node_modules/@types/node/net.d.ts","../../../node_modules/@types/node/os.d.ts","../../../node_modules/@types/node/path.d.ts","../../../node_modules/@types/node/perf_hooks.d.ts","../../../node_modules/@types/node/process.d.ts","../../../node_modules/@types/node/punycode.d.ts","../../../node_modules/@types/node/querystring.d.ts","../../../node_modules/@types/node/readline.d.ts","../../../node_modules/@types/node/readline/promises.d.ts","../../../node_modules/@types/node/repl.d.ts","../../../node_modules/@types/node/sea.d.ts","../../../node_modules/@types/node/sqlite.d.ts","../../../node_modules/@types/node/stream.d.ts","../../../node_modules/@types/node/stream/promises.d.ts","../../../node_modules/@types/node/stream/consumers.d.ts","../../../node_modules/@types/node/stream/web.d.ts","../../../node_modules/@types/node/string_decoder.d.ts","../../../node_modules/@types/node/test.d.ts","../../../node_modules/@types/node/timers.d.ts","../../../node_modules/@types/node/timers/promises.d.ts","../../../node_modules/@types/node/tls.d.ts","../../../node_modules/@types/node/trace_events.d.ts","../../../node_modules/@types/node/tty.d.ts","../../../node_modules/@types/node/url.d.ts","../../../node_modules/@types/node/util.d.ts","../../../node_modules/@types/node/v8.d.ts","../../../node_modules/@types/node/vm.d.ts","../../../node_modules/@types/node/wasi.d.ts","../../../node_modules/@types/node/worker_threads.d.ts","../../../node_modules/@types/node/zlib.d.ts","../../../node_modules/@types/node/ts5.6/index.d.ts","../../interface/dist/src/events.d.ts","../../interface/dist/src/index.d.ts","../../../node_modules/@multiformats/mafmt/dist/src/index.d.ts","../../../node_modules/any-signal/dist/src/index.d.ts","../../../node_modules/p-timeout/index.d.ts","../../../node_modules/p-event/index.d.ts","../../utils/dist/src/ip-port-to-multiaddr.d.ts","../../../node_modules/p-defer/index.d.ts","../../../node_modules/race-event/dist/src/index.d.ts","../../../node_modules/stream-to-it/dist/src/source.d.ts","../../../node_modules/stream-to-it/dist/src/sink.d.ts","../../../node_modules/stream-to-it/dist/src/transform.d.ts","../../../node_modules/stream-to-it/dist/src/duplex.d.ts","../../../node_modules/stream-to-it/dist/src/index.d.ts","../src/utils.ts","../src/socket-to-conn.ts","../src/listener.ts","../src/tcp.ts","../src/index.ts","../src/tcp.browser.ts","../../logger/dist/src/index.d.ts","../../../node_modules/@types/chai/index.d.ts","../../../node_modules/@types/chai-as-promised/index.d.ts","../../../node_modules/chai-parentheses/index.d.ts","../../../node_modules/@types/chai-subset/index.d.ts","../../../node_modules/chai-bites/index.d.ts","../../../node_modules/@types/chai-string/index.d.ts","../../../node_modules/aegir/dist/utils/chai.d.ts","../../../node_modules/wherearewe/dist/src/index.d.ts","../test/browser.ts","../../../node_modules/@types/sinonjs__fake-timers/index.d.ts","../../../node_modules/@types/sinon/index.d.ts","../../../node_modules/sinon-ts/dist/src/index.d.ts","../test/connection-limits.spec.ts","../../../node_modules/p-wait-for/index.d.ts","../test/connection.spec.ts","../test/filter.spec.ts","../test/listen-dial.spec.ts","../test/max-connections.spec.ts","../test/socket-to-conn.spec.ts","../../../node_modules/@babel/types/lib/index.d.ts","../../../node_modules/@types/babel__generator/index.d.ts","../../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../../node_modules/@types/babel__template/index.d.ts","../../../node_modules/@types/babel__traverse/index.d.ts","../../../node_modules/@types/babel__core/index.d.ts","../../../node_modules/keyv/src/index.d.ts","../../../node_modules/@types/http-cache-semantics/index.d.ts","../../../node_modules/@types/responselike/index.d.ts","../../../node_modules/@types/cacheable-request/index.d.ts","../../../node_modules/@types/ms/index.d.ts","../../../node_modules/@types/debug/index.d.ts","../../../node_modules/@types/dns-packet/index.d.ts","../../../node_modules/@types/graceful-fs/index.d.ts","../../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../../node_modules/@types/istanbul-lib-report/index.d.ts","../../../node_modules/@types/istanbul-reports/index.d.ts","../../../node_modules/@types/json-schema/index.d.ts","../../../node_modules/@types/json5/index.d.ts","../../../node_modules/@types/keyv/index.d.ts","../../../node_modules/@types/linkify-it/build/index.cjs.d.ts","../../../node_modules/@types/linkify-it/index.d.ts","../../../node_modules/@types/lodash/common/common.d.ts","../../../node_modules/@types/lodash/common/array.d.ts","../../../node_modules/@types/lodash/common/collection.d.ts","../../../node_modules/@types/lodash/common/date.d.ts","../../../node_modules/@types/lodash/common/function.d.ts","../../../node_modules/@types/lodash/common/lang.d.ts","../../../node_modules/@types/lodash/common/math.d.ts","../../../node_modules/@types/lodash/common/number.d.ts","../../../node_modules/@types/lodash/common/object.d.ts","../../../node_modules/@types/lodash/common/seq.d.ts","../../../node_modules/@types/lodash/common/string.d.ts","../../../node_modules/@types/lodash/common/util.d.ts","../../../node_modules/@types/lodash/index.d.ts","../../../node_modules/@types/lodash.random/index.d.ts","../../../node_modules/@types/lodash.range/index.d.ts","../../../node_modules/@types/mdurl/build/index.cjs.d.ts","../../../node_modules/@types/mdurl/index.d.ts","../../../node_modules/@types/markdown-it/dist/index.cjs.d.ts","../../../node_modules/@types/markdown-it/index.d.ts","../../../node_modules/@types/unist/index.d.ts","../../../node_modules/@types/mdast/index.d.ts","../../../node_modules/@types/minimatch/index.d.ts","../../../node_modules/@types/minimist/index.d.ts","../../../node_modules/@types/mocha/index.d.ts","../../../node_modules/@types/multicast-dns/index.d.ts","../../../node_modules/@types/netmask/index.d.ts","../../../node_modules/@types/node-forge/index.d.ts","../../../node_modules/@types/normalize-package-data/index.d.ts","../../../node_modules/@types/parse-json/index.d.ts","../../../node_modules/@types/retry/index.d.ts","../../../node_modules/@types/semver/classes/semver.d.ts","../../../node_modules/@types/semver/functions/parse.d.ts","../../../node_modules/@types/semver/functions/valid.d.ts","../../../node_modules/@types/semver/functions/clean.d.ts","../../../node_modules/@types/semver/functions/inc.d.ts","../../../node_modules/@types/semver/functions/diff.d.ts","../../../node_modules/@types/semver/functions/major.d.ts","../../../node_modules/@types/semver/functions/minor.d.ts","../../../node_modules/@types/semver/functions/patch.d.ts","../../../node_modules/@types/semver/functions/prerelease.d.ts","../../../node_modules/@types/semver/functions/compare.d.ts","../../../node_modules/@types/semver/functions/rcompare.d.ts","../../../node_modules/@types/semver/functions/compare-loose.d.ts","../../../node_modules/@types/semver/functions/compare-build.d.ts","../../../node_modules/@types/semver/functions/sort.d.ts","../../../node_modules/@types/semver/functions/rsort.d.ts","../../../node_modules/@types/semver/functions/gt.d.ts","../../../node_modules/@types/semver/functions/lt.d.ts","../../../node_modules/@types/semver/functions/eq.d.ts","../../../node_modules/@types/semver/functions/neq.d.ts","../../../node_modules/@types/semver/functions/gte.d.ts","../../../node_modules/@types/semver/functions/lte.d.ts","../../../node_modules/@types/semver/functions/cmp.d.ts","../../../node_modules/@types/semver/functions/coerce.d.ts","../../../node_modules/@types/semver/classes/comparator.d.ts","../../../node_modules/@types/semver/classes/range.d.ts","../../../node_modules/@types/semver/functions/satisfies.d.ts","../../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../../node_modules/@types/semver/ranges/min-version.d.ts","../../../node_modules/@types/semver/ranges/valid.d.ts","../../../node_modules/@types/semver/ranges/outside.d.ts","../../../node_modules/@types/semver/ranges/gtr.d.ts","../../../node_modules/@types/semver/ranges/ltr.d.ts","../../../node_modules/@types/semver/ranges/intersects.d.ts","../../../node_modules/@types/semver/ranges/simplify.d.ts","../../../node_modules/@types/semver/ranges/subset.d.ts","../../../node_modules/@types/semver/internals/identifiers.d.ts","../../../node_modules/@types/semver/index.d.ts","../../../node_modules/@types/stack-utils/index.d.ts","../../../node_modules/@types/strip-bom/index.d.ts","../../../node_modules/@types/strip-json-comments/index.d.ts","../../../node_modules/@types/tdigest/index.d.ts","../../../node_modules/@types/which/index.d.ts","../../../node_modules/@types/ws/index.d.ts","../../../node_modules/@types/xsalsa20/index.d.ts","../../../node_modules/@types/yargs-parser/index.d.ts","../../../node_modules/@types/yargs/index.d.ts","../../../node_modules/@types/yauzl/index.d.ts"],"fileInfos":[{"version":"824cb491a40f7e8fdeb56f1df5edf91b23f3e3ee6b4cde84d4a99be32338faee","affectsGlobalScope":true},"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","5514e54f17d6d74ecefedc73c504eadffdeda79c7ea205cf9febead32d45c4bc","1c0cdb8dc619bc549c3e5020643e7cf7ae7940058e8c7e5aefa5871b6d86f44b",{"version":"87d693a4920d794a73384b3c779cadcb8548ac6945aa7a925832fe2418c9527a","affectsGlobalScope":true},{"version":"76f838d5d49b65de83bc345c04aa54c62a3cfdb72a477dc0c0fce89a30596c30","affectsGlobalScope":true},{"version":"db88e2781075c7bca86634724f38a132de718ddf3a470a3a2cdb182f4364af9e","affectsGlobalScope":true},{"version":"138fb588d26538783b78d1e3b2c2cc12d55840b97bf5e08bca7f7a174fbe2f17","affectsGlobalScope":true},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true},{"version":"bc47685641087c015972a3f072480889f0d6c65515f12bd85222f49a98952ed7","affectsGlobalScope":true},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true},{"version":"6fc23bb8c3965964be8c597310a2878b53a0306edb71d4b5a4dfe760186bcc01","affectsGlobalScope":true},{"version":"ea011c76963fb15ef1cdd7ce6a6808b46322c527de2077b6cfdf23ae6f5f9ec7","affectsGlobalScope":true},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true},{"version":"bb42a7797d996412ecdc5b2787720de477103a0b2e53058569069a0e2bae6c7e","affectsGlobalScope":true},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true},{"version":"b541a838a13f9234aba650a825393ffc2292dc0fc87681a5d81ef0c96d281e7a","affectsGlobalScope":true},{"version":"b20fe0eca9a4e405f1a5ae24a2b3290b37cf7f21eba6cbe4fc3fab979237d4f3","affectsGlobalScope":true},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true},{"version":"49ed889be54031e1044af0ad2c603d627b8bda8b50c1a68435fe85583901d072","affectsGlobalScope":true},{"version":"e93d098658ce4f0c8a0779e6cab91d0259efb88a318137f686ad76f8410ca270","affectsGlobalScope":true},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true},{"version":"5e07ed3809d48205d5b985642a59f2eba47c402374a7cf8006b686f79efadcbd","affectsGlobalScope":true},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true},{"version":"8073890e29d2f46fdbc19b8d6d2eb9ea58db9a2052f8640af20baff9afbc8640","affectsGlobalScope":true},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true},{"version":"51e547984877a62227042850456de71a5c45e7fe86b7c975c6e68896c86fa23b","affectsGlobalScope":true},{"version":"956d27abdea9652e8368ce029bb1e0b9174e9678a273529f426df4b3d90abd60","affectsGlobalScope":true},{"version":"4fa6ed14e98aa80b91f61b9805c653ee82af3502dc21c9da5268d3857772ca05","affectsGlobalScope":true},{"version":"e6633e05da3ff36e6da2ec170d0d03ccf33de50ca4dc6f5aeecb572cedd162fb","affectsGlobalScope":true},{"version":"d8670852241d4c6e03f2b89d67497a4bbefe29ecaa5a444e2c11a9b05e6fccc6","affectsGlobalScope":true},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true},{"version":"caccc56c72713969e1cfe5c3d44e5bab151544d9d2b373d7dbe5a1e4166652be","affectsGlobalScope":true},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true},{"version":"50d53ccd31f6667aff66e3d62adf948879a3a16f05d89882d1188084ee415bbc","affectsGlobalScope":true},{"version":"08a58483392df5fcc1db57d782e87734f77ae9eab42516028acbfe46f29a3ef7","affectsGlobalScope":true},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true},{"version":"33358442698bb565130f52ba79bfd3d4d484ac85fe33f3cb1759c54d18201393","affectsGlobalScope":true},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true},{"version":"0cc70daa2e4b584eacdaeb29bdd321e9369dd5a86f846a4d263c5d767f746cf3","signature":"d6e101825251f3b12ff4883f8ff8e232d2a44e4543c955c9734be2696394ec42"},"4a3605bef1a5ef29fd5a1696dd95b0b4e2259e2d07a4d88fac79f3a9765c44a2","370079895f1acdd4bb5194a403c85bf60cfbb2654bced9430a6c7210e7246be8","90240231e730deed31569f6c686766a538e4a024bbc33ea1738fe924f477ba61","552223520e823223ee13c5764e9b69b1819c985818a8bcda435d8d1dbd909bee","49b7c3ddd683c09aa437dd92681699387441f522524b14d2331ce494a9bf2f27","d35b5db21a04a45ae6323c4d4b25acc983dfe2870fc670fd05249eb19d839a5e","ae34b0761f88cf20e922e338970944f0e3abf193cfd4c5589bb03dddd3ca6fc0","72b129e625a479942a4f9e8a1bc12c45c09bbbf6ebae147418584441eb9fba18","5212dd78d1d63ab33332c8846a0ea5ce248159e74033cde16de48373036b4704","954b3c04ee9f94ca1e262f3e5a6e833b0da0066514b3d4b97b92b7f0c85f8700","a2fc9ce1ae5bed7068d701d8aeebf13321de0f42c217dc2e10f1622dcaa53a7f","8e81f220cb935d551e88cff11541d5e89d3a3494a52fe6247e98016a9dbd4c2d","6b2576a04253626ba41b7dc7ec5977bec07f3b6952b16249d9fa8a3a0d79901c","9de17491f2bfbccea92500e174079d53bdedae34dbebe5d4a12a06ab09814710","e88481085a8576fa52efc913e631c1a833d16179486469b8538d8c4fab2f7381","cc8c0bbe9fa2399c83e9f5492f82c55fe184380a371dd6fa462586c6563b054b","d71577e78c7a4257074aaf82f595724175210c89e8b467ef82f949a6cbd891bc","52e78315d331eeec07e0fabb68af969e7cdb28eafeeda17fca75897764a53f0b","c84146dbc9d2e5f43d2cbf15485a4eabf90219dbb66c0d481f20f12d3851bffc","718ade45e05c419f2d8e91edc65eadecfa3566059acc5439e460b2eacfd2357a","c7bdf13966d47b3b3cf9de4ce1647184717579990cc7143602f02ab224e9bfc6","1caea122dbc7febedf852183deb445487389b9e5a45f7d882514d0b265a96b5d","4105fa0ecfaffb578c8051c3de22e8c984191aac8de14641ee99beed9c5e5bd9","2c19a03df944b85c8c7a77d1f2b1e77d5b26b50bde7e57debb6c1ed785e92f18","1bbbb729d5e059dd824378618907b92dab35947f0a76ecb538891b4d9f5cc0a7","b04614c3b8ee002251cd53eab5360ad5f4826b647ff7471880622862d5edc6d1","230eb449f719119cab1728252f20ecdd36d7a20cef659e4a51ada1a232a8aaad","76b9fa1e321d1a3df90391e97234009ab3a36e55965a53a74038949994b8fb23","203ec8a834b94ec13b9ef098b53024571e1870435d766b9d3614de00591d97a4","44fa41130045a0256c73b8f94d0885d1a170063b543ddf7324293b21af4b18b6","ed0887ec6108caa9f873afb6706f61b5bbf936c4578c40679214a93a96e916ca","01a6506b8da0bc64906550a37f4a64acd1e75b0098c4abedcab122bdf5a71787","89346453b46aeb38468711a4880156f29b1eea4eab823bd53802965b3d3fc27d","b3817c7c3c5bb0e9b7eda3c5db73195f953b2369da71e2807218a86075ca31e5","fac83d4c6898d5bf90c508cc84409ded40fdc14611cf42d7fb750fb2c7847979","f33455fa22b3d6fd7427c0f3bfc46ff8fdf782c7333a8beaddebc52fb97cd70a","87294fac7de723d78ac6572f168446d0df2698259e7d88526493046df05cc103","75848e9f0cfb046e64bc8610b0b07e97288d340196a2d5bc6bcbf01e595a81d9",{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a",{"version":"613b21ccdf3be6329d56e6caa13b258c842edf8377be7bc9f014ed14cdcfc308","affectsGlobalScope":true},{"version":"2d1319e6b5d0efd8c5eae07eb864a00102151e8b9afddd2d45db52e9aae002c4","affectsGlobalScope":true},"4967529644e391115ca5592184d4b63980569adf60ee685f968fd59ab1557188","5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107",{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true},"4f0539c58717cbc8b73acb29f9e992ab5ff20adba5f9b57130691c7f9b186a4d","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0",{"version":"53eac70430b30089a3a1959d8306b0f9cfaf0de75224b68ef25243e0b5ad1ca3","affectsGlobalScope":true},"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7",{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true},"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb",{"version":"86956cc2eb9dd371d6fab493d326a574afedebf76eef3fa7833b8e0d9b52d6f1","affectsGlobalScope":true},"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393",{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true},"1ff5a53a58e756d2661b73ba60ffe274231a4432d21f7a2d0d9e4f6aa99f4283","1e289f30a48126935a5d408a91129a13a59c9b0f8c007a816f9f16ef821e144e","2ea254f944dfe131df1264d1fb96e4b1f7d110195b21f1f5dbb68fdd394e5518","5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6",{"version":"b11cb909327c874a4e81bfb390bf0d231e5bf9439052689ab80ba8afa50da17b","affectsGlobalScope":true},"23459c1915878a7c1e86e8bdb9c187cddd3aea105b8b1dfce512f093c969bc7e","b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0",{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true},{"version":"5f6f1d54779d0b9ed152b0516b0958cd34889764c1190434bbf18e7a8bb884cd","affectsGlobalScope":true},"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","1cbae62b67f180291d211f0e1045fb923a8ec800cfbf9caa13223d769013dae2","b52d379b4939681f3781d1cfd5b2c3cbb35e7e76f2425172e165782f8a08228c","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633",{"version":"745c4240220559bd340c8aeb6e3c5270a709d3565e934dc22a69c304703956bc","affectsGlobalScope":true},"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada",{"version":"993985beef40c7d113f6dd8f0ba26eed63028b691fbfeb6a5b63f26408dd2c6d","affectsGlobalScope":true},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true},"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4",{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true},{"version":"cb094bb347d7df3380299eb69836c2c8758626ecf45917577707c03cf816b6f4","affectsGlobalScope":true},"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","b02784111b3fc9c38590cd4339ff8718f9329a6f4d3fd66e9744a1dcd1d7e191","ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a",{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true},"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","171fd8807643c46a9d17e843959abdf10480d57d60d38d061fb44a4c8d4a8cc4","05f95704d66f66f9368dc98d2da27016ed24ed11d521be55e32d167b88bc56fa","158555fef38609ba5fce1810a9ca37ef9af0d58164065fed3287fb418cfe8b75","5a16be1c0b59a91ed8de2c5699b7dad5e026d0315995eb75dcdd238be68b4be5","ca027df9fd496a200d99ca0db4b0077463ce4926a6c8e05cfae522c5971ccbc0","91764b36fe5e1c5d688f5f90eeea47703a059ab9a81bf80f7bbc9b04507b7bd3","115327b8e1f68c03004d841b83e332ed16b8f48af59ac00f38313887d7ec2920","7a3c51d00cfbc7b0994e0fa2bb4b84101932023fdbd11cf92665d8bdaa652ac2","68f02ba57c531227ef5804dd57f2e940b10c544c96dadd3c0ef958ba4b6fdbc1","7d958de24d9de7d848f9c7259dfc8116868d5b6b130759fe46310089c24bc90f","e429e4899236f0888836f40c87651a41862a72a761c7ce3a8d169c490e4ba4c8","9fda0d42b62cf699463bff867a5acbcfedb8452e7f4e278a413fe14372f792a1","9e901a38a9bd2da68c2d3303fdaaa30d619ecb98404f8bb2001e210dda83db04","8206bb038a7dce567f00e690c8c3308ba06dc1e6f70dd8c2a9f3fe996dade372","bdc1d26cd34409c69ebf780941e674dc905a1e6836dcb3334d215d6db2b3aeb3",{"version":"110cfb9b1e9ee74e80ba30f09f11c2ac736d8d22f7c218bcf499d1f22cb9665f","signature":"5cf5473735a956c4a6139812db63553581775fe34d14ab097c5fcd7ca03e84f0"},{"version":"698ce1e7df373934cc6539948e36bf6f92913c967bf03f23e647f444caf6ba2d","signature":"ee53dce77c061ec7407909201ea66389a218beca4c9cc9a108d855b6b738b0b8"},{"version":"243a2527b411fbdb7d79482959845a0dd3cc7fe15efd9f25b2e2ea25e8f6aec1","signature":"7be74e710be7d732bae1c484dca37898058aa62b6820bc2def7077d7d0380192"},{"version":"ae85c95b125da1e601b20732b2607f46802d837ab04d4f6ef67bc1204afcc47a","signature":"6cd69406064ca0aacde77bc9496956f8d815921adb1007f7d1b8db82ce8a79f7"},{"version":"82cf6a4741ceac2207593871d920f4258609786fcde550265c3ca0e6c3aed475","signature":"00a642a44a4fb4ef120bcc79675bd9dae16f853205842007b1782b4e485c98e3"},{"version":"87972c20c2b32529e12f74ddfc5d44aff837973b124a2f198fb3bc2a7d52cc1a","signature":"b9bb40881d3b24b8754f96765a3339153036d05e78ca5b5873140efe3771b258"},"3d53e5e411caeb49b5238ee5675b305745157bff28c26afd81c6a3ee8694fa83",{"version":"eef204f061321360559bd19235ea32a9d55b3ec22a362cc78d14ef50d4db4490","affectsGlobalScope":true},{"version":"86e56d97b13ef0a58bc9c59aee782ae7d47d63802b5b32129ec5e5d62c20dbfa","affectsGlobalScope":true},{"version":"c1f79c6d85cd84518fd7349588b3c61bdc189f58e3866f925cbf4631c81e31f9","affectsGlobalScope":true},{"version":"54db406753da16e177f094aa66da79840f447de6d87ddd1543a80c9418c52545","affectsGlobalScope":true},{"version":"42f28f4cfca4a70bd89c1d55d76c7978275030b894f6793f36890265c11a83a4","affectsGlobalScope":true},{"version":"7cf1027da9599f056355b46bbea31dbf7f715f797dffb9cbb3402d4490c503e5","affectsGlobalScope":true},"96dbd0787b57ae02981d26d5f2441f0f8444fb46d7578c56527eab89cff13a7d","00cd454fa42dca69cdea08d4cb9698e679ba9a31762c23d905e45ba92269ac3a",{"version":"a377f1548293d1b051b2abfda0e5facf31861ced0237dd8da38502d9c45a4c27","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"7d2a0ba1297be385a89b5515b88cd31b4a1eeef5236f710166dc1b36b1741e1b","8e87660f5170c195ade218937e360484775be6a4e75a098665d9ba5a2e4cdc15","8d16e3ff29dd0650435766702b01c2f7e9d1f289a48fcbf8e93687d6ecf33f26",{"version":"f6a3315ec81a5c4f6dd036d30cc181ef262499049491288ad3f5591ecbb5cf66","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"adb5ad16c19ff8dbfa9daa3a7dc8e1b039c381a2b94383144a53368681ad8ca0",{"version":"e2847bdcc7d84f1286e5c64ac78b19e5b4bdd211a9ce5c2448568a964e67e34e","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"72b683738424772424f4a1c93cef81efb08b9d1ed9e09c4defbe8951b507fd8b","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"970f192519ad821b0ee087c4ed9ed3e1d33b270a3021b50192526a30999de4b1","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e19679bbd4e880d52b3ac30bd08af1efef08416220d24f12a0198cbb85aea893","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"1123ec5c7f29e26f7b5f7d9d499db2469301f5d9c05eaa989cdf0cbd9aab90c8","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"8d27e5f73b75340198b2df36f39326f693743e64006bd7b88a925a5f285df628","2c8e55457aaf4902941dfdba4061935922e8ee6e120539c9801cd7b400fae050","1c2cd862994b1fbed3cde0d1e8de47835ff112d197a3debfddf7b2ee3b2c52bc","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","9e0cf651e8e2c5b9bebbabdff2f7c6f8cedd91b1d9afcc0a854cdff053a88f1b","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","42baf4ca38c38deaf411ea73f37bc39ff56c6e5c761a968b64ac1b25c92b5cd8","d7dbe0ad36bdca8a6ecf143422a48e72cc8927bab7b23a1a2485c2f78a7022c6","8718fa41d7cf4aa91de4e8f164c90f88e0bf343aa92a1b9b725a9c675c64e16b","f992cd6cc0bcbaa4e6c810468c90f2d8595f8c6c3cf050c806397d3de8585562","fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","3eb11dbf3489064a47a2e1cf9d261b1f100ef0b3b50ffca6c44dd99d6dd81ac1","bc222163edcb8df6ba9b506d053d6c5afcae50e85695151cf4636a3107deaba9","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","fec943fdb3275eb6e006b35e04a8e2e99e9adf3f4b969ddf15315ac7575a93e4","742f21debb3937c3839a63245648238555bdab1ea095d43fd10c88a64029bf76","7cfdf3b9a5ba934a058bfc9390c074104dc7223b7e3c16fd5335206d789bc3d3","7220461ab7f6d600b313ce621346c315c3a0ebc65b5c6f268488c5c55b68d319","f90d4c1ae3af9afb35920b984ba3e41bdd43f0dc7bae890b89fbd52b978f0cac","fcf79300e5257a23ed3bacaa6861d7c645139c6f7ece134d15e6669447e5e6db","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","aa2c18a1b5a086bbcaae10a4efba409cc95ba7287d8cf8f2591b53704fea3dea","b88749bdb18fc1398370e33aa72bc4f88274118f4960e61ce26605f9b33c5ba2","0aaef8cded245bf5036a7a40b65622dd6c4da71f7a35343112edbe112b348a1e","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","a873c50d3e47c21aa09fbe1e2023d9a44efb07cc0cb8c72f418bf301b0771fd3","7c14ccd2eaa82619fffc1bfa877eb68a012e9fb723d07ee98db451fadb618906","288d992cd0d35fd4bb5a0f23df62114b8bfbc53e55b96a4ad00dde7e6fb72e31","df996e25faa505f85aeb294d15ebe61b399cf1d1e49959cdfaf2cc0815c203f9","4f6a12044ee6f458db11964153830abbc499e73d065c51c329ec97407f4b13dd","13e834b958fe7e9010d2161497f98916974a0618be7a773281a253a948da8b0d","dae5c8e0ca15779492744cb4071c5b3c94c2121940fbaefb43ca9a045557a0c9","0944f27ebff4b20646b71e7e3faaaae50a6debd40bc63e225de1320dd15c5795","5d30565583300c9256072a013ac0318cc603ff769b4c5cafc222394ea93963e1","8a7219b41d3c1c93f3f3b779146f313efade2404eeece88dcd366df7e2364977","a109c4289d59d9019cfe1eeab506fe57817ee549499b02a83a7e9d3bdf662d63","89121c1bf2990f5219bfd802a3e7fc557de447c62058d6af68d6b6348d64499a","d4a22007b481fe2a2e6bfd3a42c00cd62d41edb36d30fc4697df2692e9891fc8","8841e2aa774b89bd23302dede20663306dc1b9902431ac64b24be8b8d0e3f649","fbca5ffaebf282ec3cdac47b0d1d4a138a8b0bb32105251a38acb235087d3318",{"version":"29f72ec1289ae3aeda78bf14b38086d3d803262ac13904b400422941a26a3636","affectsGlobalScope":true},"62a8effc4dd17bbc2c05927b4ca5f67e73fdb458e203b128c041d0d70ffa6b55","d3213ac97e906cb1a935cf80061aacdb05a943a4d0316b469ab44565c34147f2","8b5402ae709d042c3530ed3506c135a967159f42aed3221267e70c5b7240b577","22293bd6fa12747929f8dfca3ec1684a3fe08638aa18023dd286ab337e88a592","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","7d8ddf0f021c53099e34ee831a06c394d50371816caa98684812f089b4c6b3d4","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","4006c872e38a2c4e09c593bc0cdd32b7b4f5c4843910bea0def631c483fff6c5","ab6aa3a65d473871ee093e3b7b71ed0f9c69e07d1d4295f45c9efd91a771241d","41392155643024553ab15aa2074c7ed144958cbfe941aefcdfad119492985885","d9a256f69f3956993e65efd88336644be8f8dd36d149e859c14704ef6c6c0eec","eb15edfcef078300657e1d5d678e1944b3518c2dd8f26792fdba2fe29f73d32b","5aac5efd20619b522faeeb0badf250834850c605ad8c5fb91c6502a54057f413","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","74d5a87c3616cd5d8691059d531504403aa857e09cbaecb1c64dfb9ace0db185"],"root":[64,[216,221],231,235,[237,241]],"options":{"allowJs":true,"checkJs":true,"composite":true,"declaration":true,"declarationMap":true,"emitDeclarationOnly":false,"esModuleInterop":true,"module":7,"noEmitOnError":true,"outDir":"./","removeComments":false,"skipLibCheck":true,"sourceMap":true,"strict":true,"stripInternal":true,"target":9},"fileIdsList":[[108,151,242],[108,151],[76,77,108,151],[76,108,151],[74,75,78,108,151],[82,108,151],[73,78,80,81,108,151],[78,80,82,108,151],[79,82,108,151],[108,151,242,243,244,245,246],[108,151,242,244],[108,151,163,166,194,201,248,249,250],[108,151,223],[108,151,252],[108,151,201],[108,151,164,201],[108,151,256],[108,151,257],[108,151,163,201],[108,151,262],[108,151,276],[108,151,264,266,267,268,269,270,271,272,273,274,275,276],[108,151,264,265,267,268,269,270,271,272,273,274,275,276],[108,151,265,266,267,268,269,270,271,272,273,274,275,276],[108,151,264,265,266,268,269,270,271,272,273,274,275,276],[108,151,264,265,266,267,269,270,271,272,273,274,275,276],[108,151,264,265,266,267,268,270,271,272,273,274,275,276],[108,151,264,265,266,267,268,269,271,272,273,274,275,276],[108,151,264,265,266,267,268,269,270,272,273,274,275,276],[108,151,264,265,266,267,268,269,270,271,273,274,275,276],[108,151,264,265,266,267,268,269,270,271,272,274,275,276],[108,151,264,265,266,267,268,269,270,271,272,273,275,276],[108,151,264,265,266,267,268,269,270,271,272,273,274,276],[108,151,264,265,266,267,268,269,270,271,272,273,274,275],[108,151,263,280],[108,151,281],[108,151,283],[108,151,279],[108,151,157,163,201,254],[108,148,151],[108,150,151],[108,151,156,186],[108,151,152,157,163,164,171,183,194],[108,151,152,153,163,171],[103,104,105,108,151],[108,151,154,195],[108,151,155,156,164,172],[108,151,156,183,191],[108,151,157,159,163,171],[108,150,151,158],[108,151,159,160],[108,151,163],[108,151,161,163],[108,150,151,163],[108,151,163,164,165,183,194],[108,151,163,164,165,178,183,186],[108,146,151,199],[108,146,151,159,163,166,171,183,194],[108,151,163,164,166,167,171,183,191,194],[108,151,166,168,183,191,194],[108,151,163,169],[108,151,170,194],[108,151,159,163,171,183],[108,151,172],[108,151,173],[108,150,151,174],[108,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],[108,151,176],[108,151,177],[108,151,163,178,179],[108,151,178,180,195,197],[108,151,163,183,184,185,186],[108,151,183,185],[108,151,183,184],[108,151,186],[108,151,187],[108,148,151,183],[108,151,163,189,190],[108,151,189,190],[108,151,156,171,183,191],[108,151,192],[151],[106,107,108,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],[108,151,171,193],[108,151,166,177,194],[108,151,156,195],[108,151,183,196],[108,151,170,197],[108,151,198],[108,151,156,163,165,174,183,194,197,199],[108,151,183,200],[108,151,166,183,201],[108,151,294,333],[108,151,294,318,333],[108,151,333],[108,151,294],[108,151,294,319,333],[108,151,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],[108,151,319,333],[108,151,232],[108,151,163,166,168,183,191,194,200,201],[108,151,341],[108,151,163,183,201],[108,151,223,224,225,226,227,228],[108,151,223,224],[68,69,108,151],[68,108,151],[65,66,67,108,151],[108,151,206],[108,151,233],[83,108,151,183,201],[108,151,211,212,213,214],[108,151,183,201],[108,118,122,151,194],[108,118,151,183,194],[108,113,151],[108,115,118,151,191,194],[108,151,171,191],[108,113,151,201],[108,115,118,151,171,194],[108,110,111,114,117,151,163,183,194],[108,118,125,151],[108,110,116,151],[108,118,139,140,151],[108,114,118,151,186,194,201],[108,139,151,201],[108,112,113,151,201],[108,118,151],[108,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,151],[108,118,133,151],[108,118,125,126,151],[108,116,118,126,127,151],[108,117,151],[108,110,113,118,151],[108,118,122,126,127,151],[108,122,151],[108,116,118,121,151,194],[108,110,115,118,125,151],[108,151,183],[108,113,118,139,151,199,201],[70,72,83,84,108,151,203],[72,82,84,108,151],[70,72,82,83,108,151,203],[69,85,108,151,203],[71,72,77,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,108,151,202],[67,69,70,108,151],[84,108,151],[85,87,108,151],[67,69,71,108,151],[72,82,108,151],[72,85,108,151,203],[71,72,82,108,151],[70,71,72,84,87,99,108,151],[70,71,108,151],[70,83,84,108,151,203],[72,84,108,151],[77,82,84,87,94,108,151,203],[108,151,203],[77,82,108,151,203,218,219],[64,82,108,151,171,203,205,207,216,217,220],[64,82,108,151,171,203,208,209,210,215,216],[82,108,151,203,220],[64,77,82,108,151,171,203,204,216,217,218,220],[82,108,151,171,172,173],[108,151,220,222,229,230],[82,108,151,171,195,203,218,220,222,229,233,234],[82,108,151,203,220,222,229,233,234,236],[82,108,151,203,220,222,229],[82,108,151,172,173,203,209,220,222,229,233,234],[82,108,151,171,195,203,220,222,229,233,234],[108,151,171,209,217,222,229,233],[77,82,203,218],[82,203,220],[82,171,203],[82,171,203,220],[82,171]],"referencedMap":[[244,1],[242,2],[78,3],[75,4],[74,4],[76,5],[204,6],[81,6],[82,7],[73,6],[79,8],[80,9],[247,10],[243,1],[245,11],[246,1],[251,12],[224,13],[228,13],[226,13],[223,2],[253,14],[254,15],[255,16],[249,2],[256,2],[257,17],[258,18],[259,2],[260,2],[261,19],[262,2],[263,20],[277,21],[278,21],[265,22],[266,23],[264,24],[267,25],[268,26],[269,27],[270,28],[271,29],[272,30],[273,31],[274,32],[275,33],[276,34],[281,35],[282,36],[284,37],[279,2],[280,38],[285,2],[286,2],[287,2],[252,2],[288,39],[289,2],[290,15],[148,40],[149,40],[150,41],[151,42],[152,43],[153,44],[103,2],[106,45],[104,2],[105,2],[154,46],[155,47],[156,48],[157,49],[158,50],[159,51],[160,51],[162,52],[161,53],[163,54],[164,55],[165,56],[147,57],[166,58],[167,59],[168,60],[169,61],[170,62],[171,63],[172,64],[173,65],[174,66],[175,67],[176,68],[177,69],[178,70],[179,70],[180,71],[181,2],[182,2],[183,72],[185,73],[184,74],[186,75],[187,76],[188,77],[189,78],[190,79],[191,80],[192,81],[108,82],[107,2],[201,83],[193,84],[194,85],[195,86],[196,87],[197,88],[198,89],[199,90],[200,91],[291,2],[292,2],[250,92],[293,2],[318,93],[319,94],[294,95],[297,95],[316,93],[317,93],[307,93],[306,96],[304,93],[299,93],[312,93],[310,93],[314,93],[298,93],[311,93],[315,93],[300,93],[301,93],[313,93],[295,93],[302,93],[303,93],[305,93],[309,93],[320,97],[308,93],[296,93],[333,98],[332,2],[327,97],[329,99],[328,97],[321,97],[322,97],[324,97],[326,97],[330,99],[331,99],[323,99],[325,99],[233,100],[232,2],[334,2],[335,2],[336,2],[337,2],[283,2],[338,2],[339,101],[340,15],[341,2],[342,102],[343,103],[229,104],[205,2],[109,2],[227,13],[225,105],[99,2],[83,2],[248,52],[65,2],[66,106],[69,107],[67,2],[68,108],[209,2],[207,109],[206,2],[236,109],[77,2],[210,2],[234,110],[214,111],[215,112],[212,111],[211,113],[213,111],[62,2],[63,2],[11,2],[12,2],[15,2],[14,2],[2,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[23,2],[3,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[8,2],[52,2],[49,2],[50,2],[51,2],[53,2],[9,2],[54,2],[55,2],[56,2],[59,2],[57,2],[58,2],[60,2],[61,2],[10,2],[1,2],[13,2],[70,2],[125,114],[135,115],[124,114],[145,116],[116,117],[115,118],[144,15],[138,119],[143,120],[118,121],[132,122],[117,123],[141,124],[113,125],[112,15],[142,126],[114,127],[119,128],[120,2],[123,128],[110,2],[146,129],[136,130],[127,131],[128,132],[130,133],[126,134],[129,135],[139,15],[121,136],[122,137],[131,138],[111,139],[134,130],[133,128],[137,2],[140,140],[230,2],[96,141],[97,142],[84,143],[86,144],[102,2],[87,2],[202,19],[203,145],[71,146],[88,147],[98,148],[72,149],[85,150],[89,151],[90,152],[100,153],[101,154],[91,2],[92,147],[94,155],[93,156],[95,157],[222,158],[64,2],[220,159],[218,160],[217,161],[221,162],[219,163],[216,164],[231,165],[235,166],[237,167],[238,168],[239,169],[240,170],[241,171],[208,6]],"exportedModulesMap":[[244,1],[242,2],[78,3],[75,4],[74,4],[76,5],[204,6],[81,6],[82,7],[73,6],[79,8],[80,9],[247,10],[243,1],[245,11],[246,1],[251,12],[224,13],[228,13],[226,13],[223,2],[253,14],[254,15],[255,16],[249,2],[256,2],[257,17],[258,18],[259,2],[260,2],[261,19],[262,2],[263,20],[277,21],[278,21],[265,22],[266,23],[264,24],[267,25],[268,26],[269,27],[270,28],[271,29],[272,30],[273,31],[274,32],[275,33],[276,34],[281,35],[282,36],[284,37],[279,2],[280,38],[285,2],[286,2],[287,2],[252,2],[288,39],[289,2],[290,15],[148,40],[149,40],[150,41],[151,42],[152,43],[153,44],[103,2],[106,45],[104,2],[105,2],[154,46],[155,47],[156,48],[157,49],[158,50],[159,51],[160,51],[162,52],[161,53],[163,54],[164,55],[165,56],[147,57],[166,58],[167,59],[168,60],[169,61],[170,62],[171,63],[172,64],[173,65],[174,66],[175,67],[176,68],[177,69],[178,70],[179,70],[180,71],[181,2],[182,2],[183,72],[185,73],[184,74],[186,75],[187,76],[188,77],[189,78],[190,79],[191,80],[192,81],[108,82],[107,2],[201,83],[193,84],[194,85],[195,86],[196,87],[197,88],[198,89],[199,90],[200,91],[291,2],[292,2],[250,92],[293,2],[318,93],[319,94],[294,95],[297,95],[316,93],[317,93],[307,93],[306,96],[304,93],[299,93],[312,93],[310,93],[314,93],[298,93],[311,93],[315,93],[300,93],[301,93],[313,93],[295,93],[302,93],[303,93],[305,93],[309,93],[320,97],[308,93],[296,93],[333,98],[332,2],[327,97],[329,99],[328,97],[321,97],[322,97],[324,97],[326,97],[330,99],[331,99],[323,99],[325,99],[233,100],[232,2],[334,2],[335,2],[336,2],[337,2],[283,2],[338,2],[339,101],[340,15],[341,2],[342,102],[343,103],[229,104],[205,2],[109,2],[227,13],[225,105],[99,2],[83,2],[248,52],[65,2],[66,106],[69,107],[67,2],[68,108],[209,2],[207,109],[206,2],[236,109],[77,2],[210,2],[234,110],[214,111],[215,112],[212,111],[211,113],[213,111],[62,2],[63,2],[11,2],[12,2],[15,2],[14,2],[2,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[23,2],[3,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[8,2],[52,2],[49,2],[50,2],[51,2],[53,2],[9,2],[54,2],[55,2],[56,2],[59,2],[57,2],[58,2],[60,2],[61,2],[10,2],[1,2],[13,2],[70,2],[125,114],[135,115],[124,114],[145,116],[116,117],[115,118],[144,15],[138,119],[143,120],[118,121],[132,122],[117,123],[141,124],[113,125],[112,15],[142,126],[114,127],[119,128],[120,2],[123,128],[110,2],[146,129],[136,130],[127,131],[128,132],[130,133],[126,134],[129,135],[139,15],[121,136],[122,137],[131,138],[111,139],[134,130],[133,128],[137,2],[140,140],[230,2],[96,141],[97,142],[84,143],[86,144],[102,2],[87,2],[202,19],[203,145],[71,146],[88,147],[98,148],[72,149],[85,150],[89,151],[90,152],[100,153],[101,154],[91,2],[92,147],[94,155],[93,156],[95,157],[222,158],[220,172],[218,173],[217,174],[221,173],[219,175],[216,176],[208,6]],"semanticDiagnosticsPerFile":[244,242,78,75,74,76,204,81,82,73,79,80,247,243,245,246,251,224,228,226,223,253,254,255,249,256,257,258,259,260,261,262,263,277,278,265,266,264,267,268,269,270,271,272,273,274,275,276,281,282,284,279,280,285,286,287,252,288,289,290,148,149,150,151,152,153,103,106,104,105,154,155,156,157,158,159,160,162,161,163,164,165,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,184,186,187,188,189,190,191,192,108,107,201,193,194,195,196,197,198,199,200,291,292,250,293,318,319,294,297,316,317,307,306,304,299,312,310,314,298,311,315,300,301,313,295,302,303,305,309,320,308,296,333,332,327,329,328,321,322,324,326,330,331,323,325,233,232,334,335,336,337,283,338,339,340,341,342,343,229,205,109,227,225,99,83,248,65,66,69,67,68,209,207,206,236,77,210,234,214,215,212,211,213,62,63,11,12,15,14,2,16,17,18,19,20,21,22,23,3,24,4,25,29,26,27,28,30,31,32,5,33,34,35,36,6,40,37,38,39,41,7,42,47,48,43,44,45,46,8,52,49,50,51,53,9,54,55,56,59,57,58,60,61,10,1,13,70,125,135,124,145,116,115,144,138,143,118,132,117,141,113,112,142,114,119,120,123,110,146,136,127,128,130,126,129,139,121,122,131,111,134,133,137,140,230,96,97,84,86,102,87,202,203,71,88,98,72,85,89,90,100,101,91,92,94,93,95,222,64,220,218,217,221,219,216,231,235,237,238,239,240,241,208],"latestChangedDtsFile":"./test/socket-to-conn.spec.d.ts"},"version":"5.4.5"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/dist/typedoc-urls.json b/node_modules/@libp2p/tcp/dist/typedoc-urls.json
deleted file mode 100644
index 9b03af7..0000000
--- a/node_modules/@libp2p/tcp/dist/typedoc-urls.json
+++ /dev/null
@@ -1,19 +0,0 @@
-{
-  "CloseServerOnMaxConnectionsOpts": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.CloseServerOnMaxConnectionsOpts.html",
-  "TCPComponents": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPComponents.html",
-  ".:TCPComponents": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPComponents.html",
-  "TCPCreateListenerOptions": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPCreateListenerOptions.html",
-  ".:TCPCreateListenerOptions": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPCreateListenerOptions.html",
-  "TCPDialOptions": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPDialOptions.html",
-  ".:TCPDialOptions": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPDialOptions.html",
-  "TCPMetrics": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPMetrics.html",
-  ".:TCPMetrics": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPMetrics.html",
-  "TCPOptions": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPOptions.html",
-  ".:TCPOptions": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPOptions.html",
-  "TCPSocketOptions": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPSocketOptions.html",
-  ".:TCPSocketOptions": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tcp.TCPSocketOptions.html",
-  "TCPDialEvents": "https://libp2p.github.io/js-libp2p/types/_libp2p_tcp.TCPDialEvents.html",
-  ".:TCPDialEvents": "https://libp2p.github.io/js-libp2p/types/_libp2p_tcp.TCPDialEvents.html",
-  "tcp": "https://libp2p.github.io/js-libp2p/functions/_libp2p_tcp.tcp.html",
-  ".:tcp": "https://libp2p.github.io/js-libp2p/functions/_libp2p_tcp.tcp.html"
-}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tcp/src/constants.ts b/node_modules/@libp2p/tcp/src/constants.ts
index 9147785..0acd267 100644
--- a/node_modules/@libp2p/tcp/src/constants.ts
+++ b/node_modules/@libp2p/tcp/src/constants.ts
@@ -8,3 +8,6 @@ export const CLOSE_TIMEOUT = 500
 
 // Close the socket if there is no activity after this long in ms
 export const SOCKET_TIMEOUT = 2 * 60000 // 2 mins
+
+// Inbound connection upgrades must complete within this many ms
+export const INBOUND_UPGRADE_TIMEOUT = 10_000
diff --git a/node_modules/@libp2p/tcp/src/index.ts b/node_modules/@libp2p/tcp/src/index.ts
index c416d40..ebdf07f 100644
--- a/node_modules/@libp2p/tcp/src/index.ts
+++ b/node_modules/@libp2p/tcp/src/index.ts
@@ -78,6 +78,14 @@ export interface TCPOptions {
    * Options passed to every `net.createServer` for every TCP server
    */
   listenOpts?: TCPSocketOptions
+
+  /**
+   * Upgrading an inbound connection must happen within this many ms otherwise
+   * the connection will be closed.
+   *
+   * @default 10_000
+   */
+  inboundUpgradeTimeout?: number
 }
 
 /**
diff --git a/node_modules/@libp2p/tcp/src/listener.ts b/node_modules/@libp2p/tcp/src/listener.ts
index e4e1d23..cdf95de 100644
--- a/node_modules/@libp2p/tcp/src/listener.ts
+++ b/node_modules/@libp2p/tcp/src/listener.ts
@@ -1,7 +1,8 @@
 import net from 'net'
 import { AlreadyStartedError, InvalidParametersError, NotStartedError, TypedEventEmitter, setMaxListeners } from '@libp2p/interface'
+import { anySignal } from 'any-signal'
 import { pEvent } from 'p-event'
-import { CODE_P2P } from './constants.js'
+import { CODE_P2P, INBOUND_UPGRADE_TIMEOUT } from './constants.js'
 import { toMultiaddrConnection } from './socket-to-conn.js'
 import {
   getMultiaddrs,
@@ -31,6 +32,7 @@ export interface CloseServerOnMaxConnectionsOpts {
 
 interface Context extends TCPCreateListenerOptions {
   upgrader: Upgrader
+  inboundUpgradeTimeout?: number
   socketInactivityTimeout?: number
   socketCloseTimeout?: number
   maxConnections?: number
@@ -74,6 +76,7 @@ export class TCPListener extends TypedEventEmitter<ListenerEvents> implements Li
   private addr: string
   private readonly log: Logger
   private readonly shutdownController: AbortController
+  private readonly inboundUpgradeTimeout: number
 
   constructor (private readonly context: Context) {
     super()
@@ -85,6 +88,7 @@ export class TCPListener extends TypedEventEmitter<ListenerEvents> implements Li
     setMaxListeners(Infinity, this.shutdownController.signal)
 
     this.log = context.logger.forComponent('libp2p:tcp:listener')
+    this.inboundUpgradeTimeout = context.inboundUpgradeTimeout ?? INBOUND_UPGRADE_TIMEOUT
     this.addr = 'unknown'
     this.server = net.createServer(context, this.onSocket.bind(this))
 
@@ -201,8 +205,14 @@ export class TCPListener extends TypedEventEmitter<ListenerEvents> implements Li
     this.log('new inbound connection %s', maConn.remoteAddr)
     this.sockets.add(socket)
 
+    const signal = anySignal([
+      this.shutdownController.signal,
+      AbortSignal.timeout(this.inboundUpgradeTimeout)
+    ])
+    setMaxListeners(Infinity, signal)
+
     this.context.upgrader.upgradeInbound(maConn, {
-      signal: this.shutdownController.signal
+      signal
     })
       .then(() => {
         this.log('inbound connection upgraded %s', maConn.remoteAddr)
@@ -240,6 +250,9 @@ export class TCPListener extends TypedEventEmitter<ListenerEvents> implements Li
         this.sockets.delete(socket)
         maConn.abort(err)
       })
+      .finally(() => {
+        signal.clear()
+      })
   }
 
   getAddrs (): Multiaddr[] {
diff --git a/node_modules/@libp2p/tcp/src/tcp.ts b/node_modules/@libp2p/tcp/src/tcp.ts
index ecf7b52..403969b 100644
--- a/node_modules/@libp2p/tcp/src/tcp.ts
+++ b/node_modules/@libp2p/tcp/src/tcp.ts
@@ -192,6 +192,7 @@ export class TCP implements Transport<TCPDialEvents> {
     return new TCPListener({
       ...(this.opts.listenOpts ?? {}),
       ...options,
+      inboundUpgradeTimeout: this.opts.inboundUpgradeTimeout,
       maxConnections: this.opts.maxConnections,
       backlog: this.opts.backlog,
       closeServerOnMaxConnections: this.opts.closeServerOnMaxConnections,
