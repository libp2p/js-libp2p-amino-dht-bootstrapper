diff --git a/node_modules/@libp2p/kad-dht/dist/index.min.js b/node_modules/@libp2p/kad-dht/dist/index.min.js
index f5f666a..4f5b0e7 100644
--- a/node_modules/@libp2p/kad-dht/dist/index.min.js
+++ b/node_modules/@libp2p/kad-dht/dist/index.min.js
@@ -3,7 +3,7 @@
 `).map(i=>`  ${i}`).join(`
 `));let t=this.idBlock.tagClass===3?`[${this.idBlock.tagNumber}]`:this.constructor.NAME;return e.length?`${t} :
 ${e.join(`
-`)}`:`${t} :`}};O0=Kt;S.Constructed=O0;Kt.NAME="CONSTRUCTED";var b1=class extends Be{fromBER(e,t,n){return t}toBER(e){return Xe}};b1.override="EndOfContentValueBlock";var V0,w1=class extends we{constructor(e={}){super(e,b1),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}};V0=w1;S.EndOfContent=V0;w1.NAME=un;var F0,Rr=class extends we{constructor(e={}){super(e,Be),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}fromBER(e,t,n){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=n,t+n>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+n}toBER(e,t){let n=new ArrayBuffer(2);if(!e){let i=new Uint8Array(n);i[0]=5,i[1]=0}return t&&t.write(n),n}onAsciiEncoding(){return`${this.constructor.NAME}`}};F0=Rr;S.Null=F0;Rr.NAME="NULL";var x1=class extends It(Be){constructor({value:e,...t}={}){super(t),t.valueHex?this.valueHexView=H.BufferSourceConverter.toUint8Array(t.valueHex):this.valueHexView=new Uint8Array(1),e&&(this.value=e)}get value(){for(let e of this.valueHexView)if(e>0)return!0;return!1}set value(e){this.valueHexView[0]=e?255:0}fromBER(e,t,n){let i=H.BufferSourceConverter.toUint8Array(e);return St(this,i,t,n)?(this.valueHexView=i.subarray(t,t+n),n>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,yo.call(this),this.blockLength=n,t+n):-1}toBER(){return this.valueHexView.slice()}toJSON(){return{...super.toJSON(),value:this.value}}};x1.NAME="BooleanValueBlock";var H0,v1=class extends we{constructor(e={}){super(e,x1),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.getValue}`}};H0=v1;S.Boolean=H0;v1.NAME="BOOLEAN";var E1=class extends It(ot){constructor({isConstructed:e=!1,...t}={}){super(t),this.isConstructed=e}fromBER(e,t,n){let i=0;if(this.isConstructed){if(this.isHexOnly=!1,i=ot.prototype.fromBER.call(this,e,t,n),i===-1)return i;for(let s=0;s<this.value.length;s++){let o=this.value[s].constructor.NAME;if(o===un){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(o!==_0)return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,i=super.fromBER(e,t,n),this.blockLength=n;return i}toBER(e,t){return this.isConstructed?ot.prototype.toBER.call(this,e,t):e?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),isConstructed:this.isConstructed}}};E1.NAME="OctetStringValueBlock";var q0,A1=class r extends we{constructor({idBlock:e={},lenBlock:t={},...n}={}){var i,s;(i=n.isConstructed)!==null&&i!==void 0||(n.isConstructed=!!(!((s=n.value)===null||s===void 0)&&s.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},E1),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,n){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,n===0)return this.idBlock.error.length===0&&(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length===0&&(this.blockLength+=this.lenBlock.blockLength),t;if(!this.valueBlock.isConstructed){let s=(e instanceof ArrayBuffer?new Uint8Array(e):e).subarray(t,t+n);try{if(s.byteLength){let o=Y1(s,0,s.byteLength);o.offset!==-1&&o.offset===n&&(this.valueBlock.value=[o.result])}}catch{}}return super.fromBER(e,t,n)}onAsciiEncoding(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?Kt.prototype.onAsciiEncoding.call(this):`${this.constructor.NAME} : ${H.Convert.ToHex(this.valueBlock.valueHexView)}`}getValue(){if(!this.idBlock.isConstructed)return this.valueBlock.valueHexView.slice().buffer;let e=[];for(let t of this.valueBlock.value)t instanceof r&&e.push(t.valueBlock.valueHexView);return H.BufferSourceConverter.concat(e)}};q0=A1;S.OctetString=q0;A1.NAME=_0;var B1=class extends It(ot){constructor({unusedBits:e=0,isConstructed:t=!1,...n}={}){super(n),this.unusedBits=e,this.isConstructed=t,this.blockLength=this.valueHexView.byteLength}fromBER(e,t,n){if(!n)return t;let i=-1;if(this.isConstructed){if(i=ot.prototype.fromBER.call(this,e,t,n),i===-1)return i;for(let a of this.value){let c=a.constructor.NAME;if(c===un){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(c!==U0)return this.error="BIT STRING may consists of BIT STRINGs only",-1;let l=a.valueBlock;if(this.unusedBits>0&&l.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;this.unusedBits=l.unusedBits}return i}let s=H.BufferSourceConverter.toUint8Array(e);if(!St(this,s,t,n))return-1;let o=s.subarray(t,t+n);if(this.unusedBits=o[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){let a=o.subarray(1);try{if(a.byteLength){let c=Y1(a,0,a.byteLength);c.offset!==-1&&c.offset===n-1&&(this.value=[c.result])}}catch{}}return this.valueHexView=o.subarray(1),this.blockLength=o.length,t+n}toBER(e,t){if(this.isConstructed)return ot.prototype.toBER.call(this,e,t);if(e)return new ArrayBuffer(this.valueHexView.byteLength+1);if(!this.valueHexView.byteLength)return Xe;let n=new Uint8Array(this.valueHexView.length+1);return n[0]=this.unusedBits,n.set(this.valueHexView,1),n.buffer}toJSON(){return{...super.toJSON(),unusedBits:this.unusedBits,isConstructed:this.isConstructed}}};B1.NAME="BitStringValueBlock";var K0,Nr=class extends we{constructor({idBlock:e={},lenBlock:t={},...n}={}){var i,s;(i=n.isConstructed)!==null&&i!==void 0||(n.isConstructed=!!(!((s=n.value)===null||s===void 0)&&s.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},B1),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}fromBER(e,t,n){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,n)}onAsciiEncoding(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return Kt.prototype.onAsciiEncoding.call(this);{let e=[],t=this.valueBlock.valueHexView;for(let i of t)e.push(i.toString(2).padStart(8,"0"));let n=e.join("");return`${this.constructor.NAME} : ${n.substring(0,n.length-this.valueBlock.unusedBits)}`}}};K0=Nr;S.BitString=K0;Nr.NAME=U0;var $0;function Oa(r,e){let t=new Uint8Array([0]),n=new Uint8Array(r),i=new Uint8Array(e),s=n.slice(0),o=s.length-1,a=i.slice(0),c=a.length-1,l=0,u=c<o?o:c,f=0;for(let h=u;h>=0;h--,f++){switch(!0){case f<a.length:l=s[o-f]+a[c-f]+t[0];break;default:l=s[o-f]+t[0]}switch(t[0]=l/10,!0){case f>=s.length:s=f1(new Uint8Array([l%10]),s);break;default:s[o-f]=l%10}}return t[0]>0&&(s=f1(t,s)),s}function C0(r){if(r>=cn.length)for(let e=cn.length;e<=r;e++){let t=new Uint8Array([0]),n=cn[e-1].slice(0);for(let i=n.length-1;i>=0;i--){let s=new Uint8Array([(n[i]<<1)+t[0]]);t[0]=s[0]/10,n[i]=s[0]%10}t[0]>0&&(n=f1(t,n)),cn.push(n)}return cn[r]}function Va(r,e){let t=0,n=new Uint8Array(r),i=new Uint8Array(e),s=n.slice(0),o=s.length-1,a=i.slice(0),c=a.length-1,l,u=0;for(let f=c;f>=0;f--,u++)switch(l=s[o-u]-a[c-u]-t,!0){case l<0:t=1,s[o-u]=l+10;break;default:t=0,s[o-u]=l}if(t>0)for(let f=o-c+1;f>=0;f--,u++)if(l=s[o-u]-t,l<0)t=1,s[o-u]=l+10;else{t=0,s[o-u]=l;break}return s.slice()}var fn=class extends It(Be){constructor({value:e,...t}={}){super(t),this._valueDec=0,t.valueHex&&this.setValueHex(),e!==void 0&&(this.valueDec=e)}setValueHex(){this.valueHexView.length>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,this.valueHexView.length>0&&(this._valueDec=yo.call(this)))}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this.valueHexView=new Uint8Array(N0(e))}get valueDec(){return this._valueDec}fromDER(e,t,n,i=0){let s=this.fromBER(e,t,n);if(s===-1)return s;let o=this.valueHexView;return o[0]===0&&o[1]&128?this.valueHexView=o.subarray(1):i!==0&&o.length<i&&(i-o.length>1&&(i=o.length+1),this.valueHexView=o.subarray(i-o.length)),s}toDER(e=!1){let t=this.valueHexView;switch(!0){case(t[0]&128)!==0:{let n=new Uint8Array(this.valueHexView.length+1);n[0]=0,n.set(t,1),this.valueHexView=n}break;case(t[0]===0&&(t[1]&128)===0):this.valueHexView=this.valueHexView.subarray(1);break}return this.toBER(e)}fromBER(e,t,n){let i=super.fromBER(e,t,n);return i===-1||this.setValueHex(),i}toBER(e){return e?new ArrayBuffer(this.valueHexView.length):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}toString(){let e=this.valueHexView.length*8-1,t=new Uint8Array(this.valueHexView.length*8/3),n=0,i,s=this.valueHexView,o="",a=!1;for(let c=s.byteLength-1;c>=0;c--){i=s[c];for(let l=0;l<8;l++){if((i&1)===1)switch(n){case e:t=Va(C0(n),t),o="-";break;default:t=Oa(t,C0(n))}n++,i>>=1}}for(let c=0;c<t.length;c++)t[c]&&(a=!0),a&&(o+=P0.charAt(t[c]));return a===!1&&(o+=P0.charAt(0)),o}};$0=fn;fn.NAME="IntegerValueBlock";Object.defineProperty($0.prototype,"valueHex",{set:function(r){this.valueHexView=new Uint8Array(r),this.setValueHex()},get:function(){return this.valueHexView.slice().buffer}});var z0,xe=class r extends we{constructor(e={}){super(e,fn),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}toBigInt(){return h1(),BigInt(this.valueBlock.toString())}static fromBigInt(e){h1();let t=BigInt(e),n=new ln,i=t.toString(16).replace(/^-/,""),s=new Uint8Array(H.Convert.FromHex(i));if(t<0){let a=new Uint8Array(s.length+(s[0]&128?1:0));a[0]|=128;let l=BigInt(`0x${H.Convert.ToHex(a)}`)+t,u=H.BufferSourceConverter.toUint8Array(H.Convert.FromHex(l.toString(16)));u[0]|=128,n.write(u)}else s[0]&128&&n.write(new Uint8Array([0])),n.write(s);return new r({valueHex:n.final()})}convertToDER(){let e=new r({valueHex:this.valueBlock.valueHexView});return e.valueBlock.toDER(),e}convertFromDER(){return new r({valueHex:this.valueBlock.valueHexView[0]===0?this.valueBlock.valueHexView.subarray(1):this.valueBlock.valueHexView})}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()}`}};z0=xe;S.Integer=z0;xe.NAME="INTEGER";var G0,S1=class extends xe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}};G0=S1;S.Enumerated=G0;S1.NAME="ENUMERATED";var hn=class extends It(Be){constructor({valueDec:e=-1,isFirstSid:t=!1,...n}={}){super(n),this.valueDec=e,this.isFirstSid=t}fromBER(e,t,n){if(!n)return t;let i=H.BufferSourceConverter.toUint8Array(e);if(!St(this,i,t,n))return-1;let s=i.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=s[a]&127,this.blockLength++,!!(s[a]&128));a++);let o=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)o[a]=this.valueHexView[a];return this.valueHexView=o,s[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=nr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}set valueBigInt(e){h1();let t=BigInt(e).toString(2);for(;t.length%7;)t="0"+t;let n=new Uint8Array(t.length/7);for(let i=0;i<n.length;i++)n[i]=parseInt(t.slice(i*7,i*7+7),2)+(i+1<n.length?128:0);this.fromBER(n.buffer,0,n.length)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let i=this.valueHexView,s=new Uint8Array(this.blockLength);for(let o=0;o<this.blockLength-1;o++)s[o]=i[o]|128;return s[this.blockLength-1]=i[this.blockLength-1],s.buffer}let t=qt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",Xe;let n=new Uint8Array(t.byteLength);if(!e){let i=new Uint8Array(t),s=t.byteLength-1;for(let o=0;o<s;o++)n[o]=i[o]|128;n[s]=i[s]}return n}toString(){let e="";if(this.isHexOnly)e=H.Convert.ToHex(this.valueHexView);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec,isFirstSid:this.isFirstSid}}};hn.NAME="sidBlock";var I1=class extends Be{constructor({value:e=Pr,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let i=t;for(;n>0;){let s=new hn;if(i=s.fromBER(e,i,n),i===-1)return this.blockLength=0,this.error=s.error,i;this.value.length===0&&(s.isFirstSid=!0),this.blockLength+=s.blockLength,n-=s.blockLength,this.value.push(s)}return i}toBER(e){let t=[];for(let n=0;n<this.value.length;n++){let i=this.value[n].toBER(e);if(i.byteLength===0)return this.error=this.value[n].error,Xe;t.push(i)}return bo(t)}fromString(e){this.value=[];let t=0,n=0,i="",s=!1;do if(n=e.indexOf(".",t),n===-1?i=e.substring(t):i=e.substring(t,n),t=n+1,s){let o=this.value[0],a=0;switch(o.valueDec){case 0:break;case 1:a=40;break;case 2:a=80;break;default:this.value=[];return}let c=parseInt(i,10);if(isNaN(c))return;o.valueDec=c+a,s=!1}else{let o=new hn;if(i>Number.MAX_SAFE_INTEGER){h1();let a=BigInt(i);o.valueBigInt=a}else if(o.valueDec=parseInt(i,10),isNaN(o.valueDec))return;this.value.length||(o.isFirstSid=!0,s=!0),this.value.push(o)}while(n!==-1)}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let i=this.value[n].toString();n!==0&&(e=`${e}.`),t?(i=`{${i}}`,this.value[n].isFirstSid?e=`2.{${i} - 80}`:e+=i):e+=i}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};I1.NAME="ObjectIdentifierValueBlock";var j0,Lr=class extends we{constructor(e={}){super(e,I1),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};j0=Lr;S.ObjectIdentifier=j0;Lr.NAME="OBJECT IDENTIFIER";var dn=class extends It(Et){constructor({valueDec:e=0,...t}={}){super(t),this.valueDec=e}fromBER(e,t,n){if(n===0)return t;let i=H.BufferSourceConverter.toUint8Array(e);if(!St(this,i,t,n))return-1;let s=i.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=s[a]&127,this.blockLength++,!!(s[a]&128));a++);let o=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)o[a]=this.valueHexView[a];return this.valueHexView=o,s[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=nr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let i=this.valueHexView,s=new Uint8Array(this.blockLength);for(let o=0;o<this.blockLength-1;o++)s[o]=i[o]|128;return s[this.blockLength-1]=i[this.blockLength-1],s.buffer}let t=qt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",Xe;let n=new Uint8Array(t.byteLength);if(!e){let i=new Uint8Array(t),s=t.byteLength-1;for(let o=0;o<s;o++)n[o]=i[o]|128;n[s]=i[s]}return n.buffer}toString(){let e="";return this.isHexOnly?e=H.Convert.ToHex(this.valueHexView):e=this.valueDec.toString(),e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}};dn.NAME="relativeSidBlock";var k1=class extends Be{constructor({value:e=Pr,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let i=t;for(;n>0;){let s=new dn;if(i=s.fromBER(e,i,n),i===-1)return this.blockLength=0,this.error=s.error,i;this.blockLength+=s.blockLength,n-=s.blockLength,this.value.push(s)}return i}toBER(e,t){let n=[];for(let i=0;i<this.value.length;i++){let s=this.value[i].toBER(e);if(s.byteLength===0)return this.error=this.value[i].error,Xe;n.push(s)}return bo(n)}fromString(e){this.value=[];let t=0,n=0,i="";do{n=e.indexOf(".",t),n===-1?i=e.substring(t):i=e.substring(t,n),t=n+1;let s=new dn;if(s.valueDec=parseInt(i,10),isNaN(s.valueDec))return!0;this.value.push(s)}while(n!==-1);return!0}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let i=this.value[n].toString();n!==0&&(e=`${e}.`),t&&(i=`{${i}}`),e+=i}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};k1.NAME="RelativeObjectIdentifierValueBlock";var Z0,T1=class extends we{constructor(e={}){super(e,k1),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};Z0=T1;S.RelativeObjectIdentifier=Z0;T1.NAME="RelativeObjectIdentifier";var W0,At=class extends Kt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}};W0=At;S.Sequence=W0;At.NAME="SEQUENCE";var Q0,R1=class extends Kt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}};Q0=R1;S.Set=Q0;R1.NAME="SET";var N1=class extends It(Be){constructor({...e}={}){super(e),this.isHexOnly=!0,this.value=Pr}toJSON(){return{...super.toJSON(),value:this.value}}};N1.NAME="StringValueBlock";var L1=class extends N1{};L1.NAME="SimpleStringValueBlock";var Re=class extends g1{constructor({...e}={}){super(e,L1)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t);for(let i=0;i<t;i++)n[i]=e.charCodeAt(i);this.valueBlock.value=e}};Re.NAME="SIMPLE STRING";var P1=class extends Re{fromBuffer(e){this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e);try{this.valueBlock.value=H.Convert.ToUtf8String(e)}catch(t){this.warnings.push(`Error during "decodeURIComponent": ${t}, using raw string`),this.valueBlock.value=H.Convert.ToBinary(e)}}fromString(e){this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf8String(e)),this.valueBlock.value=e}};P1.NAME="Utf8StringValueBlock";var Y0,Bt=class extends P1{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}};Y0=Bt;S.Utf8String=Y0;Bt.NAME="UTF8String";var C1=class extends Re{fromBuffer(e){this.valueBlock.value=H.Convert.ToUtf16String(e),this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e)}fromString(e){this.valueBlock.value=e,this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf16String(e))}};C1.NAME="BmpStringValueBlock";var X0,_1=class extends C1{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}};X0=_1;S.BmpString=X0;_1.NAME="BMPString";var U1=class extends Re{fromBuffer(e){let t=ArrayBuffer.isView(e)?e.slice().buffer:e.slice(0),n=new Uint8Array(t);for(let i=0;i<n.length;i+=4)n[i]=n[i+3],n[i+1]=n[i+2],n[i+2]=0,n[i+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t*4);for(let i=0;i<t;i++){let s=qt(e.charCodeAt(i),8),o=new Uint8Array(s);if(o.length>4)continue;let a=4-o.length;for(let c=o.length-1;c>=0;c--)n[i*4+c+a]=o[c]}this.valueBlock.value=e}};U1.NAME="UniversalStringValueBlock";var J0,D1=class extends U1{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}};J0=D1;S.UniversalString=J0;D1.NAME="UniversalString";var e3,M1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}};e3=M1;S.NumericString=e3;M1.NAME="NumericString";var t3,O1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}};t3=O1;S.PrintableString=t3;O1.NAME="PrintableString";var r3,V1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}};r3=V1;S.TeletexString=r3;V1.NAME="TeletexString";var n3,F1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}};n3=F1;S.VideotexString=n3;F1.NAME="VideotexString";var i3,H1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}};i3=H1;S.IA5String=i3;H1.NAME="IA5String";var s3,q1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}};s3=q1;S.GraphicString=s3;q1.NAME="GraphicString";var o3,pn=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}};o3=pn;S.VisibleString=o3;pn.NAME="VisibleString";var a3,K1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}};a3=K1;S.GeneralString=a3;K1.NAME="GeneralString";var c3,$1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}};c3=$1;S.CharacterString=c3;$1.NAME="CharacterString";var l3,gn=class extends pn{constructor({value:e,valueDate:t,...n}={}){if(super(n),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,e){this.fromString(e),this.valueBlock.valueHexView=new Uint8Array(e.length);for(let i=0;i<e.length;i++)this.valueBlock.valueHexView[i]=e.charCodeAt(i)}t&&(this.fromDate(t),this.valueBlock.valueHexView=new Uint8Array(this.toBuffer())),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e)))}toBuffer(){let e=this.toString(),t=new ArrayBuffer(e.length),n=new Uint8Array(t);for(let i=0;i<e.length;i++)n[i]=e.charCodeAt(i);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){let n=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig.exec(e);if(n===null){this.error="Wrong input string for conversion";return}let i=parseInt(n[1],10);i>=50?this.year=1900+i:this.year=2e3+i,this.month=parseInt(n[2],10),this.day=parseInt(n[3],10),this.hour=parseInt(n[4],10),this.minute=parseInt(n[5],10),this.second=parseInt(n[6],10)}toString(e="iso"){if(e==="iso"){let t=new Array(7);return t[0]=De(this.year<2e3?this.year-1900:this.year-2e3,2),t[1]=De(this.month,2),t[2]=De(this.day,2),t[3]=De(this.hour,2),t[4]=De(this.minute,2),t[5]=De(this.second,2),t[6]="Z",t.join("")}return super.toString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.toDate().toISOString()}`}toJSON(){return{...super.toJSON(),year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second}}};l3=gn;S.UTCTime=l3;gn.NAME="UTCTime";var u3,z1=class extends gn{constructor(e={}){var t;super(e),(t=this.millisecond)!==null&&t!==void 0||(this.millisecond=0),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromDate(e){super.fromDate(e),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t=!1,n="",i="",s=0,o,a=0,c=0;if(e[e.length-1]==="Z")n=e.substring(0,e.length-1),t=!0;else{let f=new Number(e[e.length-1]);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");n=e}if(t){if(n.indexOf("+")!==-1)throw new Error("Wrong input string for conversion");if(n.indexOf("-")!==-1)throw new Error("Wrong input string for conversion")}else{let f=1,h=n.indexOf("+"),g="";if(h===-1&&(h=n.indexOf("-"),f=-1),h!==-1){if(g=n.substring(h+1),n=n.substring(0,h),g.length!==2&&g.length!==4)throw new Error("Wrong input string for conversion");let y=parseInt(g.substring(0,2),10);if(isNaN(y.valueOf()))throw new Error("Wrong input string for conversion");if(a=f*y,g.length===4){if(y=parseInt(g.substring(2,4),10),isNaN(y.valueOf()))throw new Error("Wrong input string for conversion");c=f*y}}}let l=n.indexOf(".");if(l===-1&&(l=n.indexOf(",")),l!==-1){let f=new Number(`0${n.substring(l)}`);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");s=f.valueOf(),i=n.substring(0,l)}else i=n;switch(!0){case i.length===8:if(o=/(\d{4})(\d{2})(\d{2})/ig,l!==-1)throw new Error("Wrong input string for conversion");break;case i.length===10:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=60*s;this.minute=Math.floor(f),f=60*(f-this.minute),this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case i.length===12:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=60*s;this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case i.length===14:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=1e3*s;this.millisecond=Math.floor(f)}break;default:throw new Error("Wrong input string for conversion")}let u=o.exec(i);if(u===null)throw new Error("Wrong input string for conversion");for(let f=1;f<u.length;f++)switch(f){case 1:this.year=parseInt(u[f],10);break;case 2:this.month=parseInt(u[f],10);break;case 3:this.day=parseInt(u[f],10);break;case 4:this.hour=parseInt(u[f],10)+a;break;case 5:this.minute=parseInt(u[f],10)+c;break;case 6:this.second=parseInt(u[f],10);break;default:throw new Error("Wrong input string for conversion")}if(t===!1){let f=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=f.getUTCFullYear(),this.month=f.getUTCMonth(),this.day=f.getUTCDay(),this.hour=f.getUTCHours(),this.minute=f.getUTCMinutes(),this.second=f.getUTCSeconds(),this.millisecond=f.getUTCMilliseconds()}}toString(e="iso"){if(e==="iso"){let t=[];return t.push(De(this.year,4)),t.push(De(this.month,2)),t.push(De(this.day,2)),t.push(De(this.hour,2)),t.push(De(this.minute,2)),t.push(De(this.second,2)),this.millisecond!==0&&(t.push("."),t.push(De(this.millisecond,3))),t.push("Z"),t.join("")}return super.toString(e)}toJSON(){return{...super.toJSON(),millisecond:this.millisecond}}};u3=z1;S.GeneralizedTime=u3;z1.NAME="GeneralizedTime";var f3,G1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}};f3=G1;S.DATE=f3;G1.NAME="DATE";var h3,j1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}};h3=j1;S.TimeOfDay=h3;j1.NAME="TimeOfDay";var d3,Z1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}};d3=Z1;S.DateTime=d3;Z1.NAME="DateTime";var p3,W1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}};p3=W1;S.Duration=p3;W1.NAME="Duration";var g3,Q1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}};g3=Q1;S.TIME=g3;Q1.NAME="TIME";function X1(r){if(isNaN(r)||r<=0)throw new $("random bytes length must be a Number bigger than 0");return Ar(r)}var mn=class extends Error{constructor(e="An error occurred while verifying a message"){super(e),this.name="VerificationError"}},J1=class extends Error{constructor(e="Missing Web Crypto API"){super(e),this.name="WebCryptoMissingError"}};var m3={get(r=globalThis){let e=r.crypto;if(e?.subtle==null)throw new J1("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api");return e}};var $t=m3;async function y3(r){let e=await $t.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await Ha(e);return{privateKey:t[0],publicKey:t[1]}}async function b3(r,e){let t=await $t.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await $t.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,e instanceof Uint8Array?e:e.subarray());return new Uint8Array(n,0,n.byteLength)}async function w3(r,e,t){let n=await $t.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return $t.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t instanceof Uint8Array?t:t.subarray())}async function Ha(r){if(r.privateKey==null||r.publicKey==null)throw new $("Private and public key are required");return Promise.all([$t.get().subtle.exportKey("jwk",r.privateKey),$t.get().subtle.exportKey("jwk",r.publicKey)])}function vo(r){if(r.kty!=="RSA")throw new $("invalid key type");if(r.n==null)throw new $("invalid key modulus");return Y(r.n,"base64url").length*8}var Cr=class{type="RSA";_key;_raw;_multihash;constructor(e,t){this._key=e,this._multihash=t}get raw(){return this._raw==null&&(this._raw=yn.jwkToPkix(this._key)),this._raw}toMultihash(){return this._multihash}toCID(){return ne.createV1(114,this._multihash)}toString(){return Q.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ee(this.raw,e.raw)}verify(e,t){return w3(this._key,t,e)}},bn=class{type="RSA";_key;_raw;publicKey;constructor(e,t){this._key=e,this.publicKey=t}get raw(){return this._raw==null&&(this._raw=yn.jwkToPkcs1(this._key)),this._raw}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ee(this.raw,e.raw)}sign(e){return b3(this._key,e)}};var ei=8192,Eo=18;function x3(r){let{result:e}=xo(r),t=e.valueBlock.value;return{n:C(at(t[1].toBigInt()),"base64url"),e:C(at(t[2].toBigInt()),"base64url"),d:C(at(t[3].toBigInt()),"base64url"),p:C(at(t[4].toBigInt()),"base64url"),q:C(at(t[5].toBigInt()),"base64url"),dp:C(at(t[6].toBigInt()),"base64url"),dq:C(at(t[7].toBigInt()),"base64url"),qi:C(at(t[8].toBigInt()),"base64url"),kty:"RSA",alg:"RS256"}}function qa(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new $("JWK was missing components");let t=new At({value:[new xe({value:0}),xe.fromBigInt(ct(Y(r.n,"base64url"))),xe.fromBigInt(ct(Y(r.e,"base64url"))),xe.fromBigInt(ct(Y(r.d,"base64url"))),xe.fromBigInt(ct(Y(r.p,"base64url"))),xe.fromBigInt(ct(Y(r.q,"base64url"))),xe.fromBigInt(ct(Y(r.dp,"base64url"))),xe.fromBigInt(ct(Y(r.dq,"base64url"))),xe.fromBigInt(ct(Y(r.qi,"base64url")))]}).toBER();return new Uint8Array(t,0,t.byteLength)}function v3(r){let{result:e}=xo(r),t=e.valueBlock.value[1].valueBlock.value[0].valueBlock.value;return{kty:"RSA",n:C(at(t[0].toBigInt()),"base64url"),e:C(at(t[1].toBigInt()),"base64url")}}function Ao(r){if(r.n==null||r.e==null)throw new $("JWK was missing components");let t=new At({value:[new At({value:[new Lr({value:"1.2.840.113549.1.1.1"}),new Rr]}),new Nr({valueHex:new At({value:[xe.fromBigInt(ct(Y(r.n,"base64url"))),xe.fromBigInt(ct(Y(r.e,"base64url")))]}).toBER()})]}).toBER();return new Uint8Array(t,0,t.byteLength)}function at(r){let e=r.toString(16);e.length%2>0&&(e=`0${e}`);let t=e.length/2,n=new Uint8Array(t),i=0,s=0;for(;i<t;)n[i]=parseInt(e.slice(s,s+2),16),i+=1,s+=2;return n}function ct(r){let e=[];return r.forEach(function(t){let n=t.toString(16);n.length%2>0&&(n=`0${n}`),e.push(n)}),BigInt("0x"+e.join(""))}function E3(r){let e=x3(r);return A3(e)}function Bo(r){let e=v3(r);if(vo(e)>ei)throw new ht("Key size is too large");let t=kr(st.encode({Type:fe.RSA,Data:r})),n=Ze(Eo,t);return new Cr(e,n)}function A3(r){if(vo(r)>ei)throw new $("Key size is too large");let e=S3(r),t=kr(st.encode({Type:fe.RSA,Data:Ao(e.publicKey)})),n=Ze(Eo,t);return new bn(e.privateKey,new Cr(e.publicKey,n))}async function B3(r){if(r>ei)throw new $("Key size is too large");let e=await y3(r),t=kr(st.encode({Type:fe.RSA,Data:Ao(e.publicKey)})),n=Ze(Eo,t);return new bn(e.privateKey,new Cr(e.publicKey,n))}function S3(r){if(r==null)throw new $("Missing key parameter");return{privateKey:r,publicKey:{kty:r.kty,n:r.n,e:r.e}}}var ti=class extends Er{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,a0(e);let n=nn(t);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let i=this.blockLen,s=new Uint8Array(i);s.set(n.length>i?e.create().update(n).digest():n);for(let o=0;o<s.length;o++)s[o]^=54;this.iHash.update(s),this.oHash=e.create();for(let o=0;o<s.length;o++)s[o]^=106;this.oHash.update(s),s.fill(0)}update(e){return vr(this),this.iHash.update(e),this}digestInto(e){vr(this),xr(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:n,finished:i,destroyed:s,blockLen:o,outputLen:a}=this;return e=e,e.finished=i,e.destroyed=s,e.blockLen=o,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},So=(r,e,t)=>new ti(r,e).update(t).digest();So.create=(r,e)=>new ti(r,e);function I3(r){r.lowS!==void 0&&Qe("lowS",r.lowS),r.prehash!==void 0&&Qe("prehash",r.prehash)}function Ka(r){let e=an(r);it(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:t,Fp:n,a:i}=e;if(t){if(!n.eql(i,n.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof t!="object"||typeof t.beta!="bigint"||typeof t.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}var{bytesToNumberBE:$a,hexToBytes:za}=r1,kt={Err:class extends Error{constructor(e=""){super(e)}},_tlv:{encode:(r,e)=>{let{Err:t}=kt;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length&1)throw new t("tlv.encode: unpadded data");let n=e.length/2,i=Xt(n);if(i.length/2&128)throw new t("tlv.encode: long form length too big");let s=n>127?Xt(i.length/2|128):"";return`${Xt(r)}${s}${i}${e}`},decode(r,e){let{Err:t}=kt,n=0;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length<2||e[n++]!==r)throw new t("tlv.decode: wrong tlv");let i=e[n++],s=!!(i&128),o=0;if(!s)o=i;else{let c=i&127;if(!c)throw new t("tlv.decode(long): indefinite length not supported");if(c>4)throw new t("tlv.decode(long): byte length is too big");let l=e.subarray(n,n+c);if(l.length!==c)throw new t("tlv.decode: length bytes not complete");if(l[0]===0)throw new t("tlv.decode(long): zero leftmost byte");for(let u of l)o=o<<8|u;if(n+=c,o<128)throw new t("tlv.decode(long): not minimal encoding")}let a=e.subarray(n,n+o);if(a.length!==o)throw new t("tlv.decode: wrong value length");return{v:a,l:e.subarray(n+o)}}},_int:{encode(r){let{Err:e}=kt;if(r<Tt)throw new e("integer: negative integers are not allowed");let t=Xt(r);if(Number.parseInt(t[0],16)&8&&(t="00"+t),t.length&1)throw new e("unexpected assertion");return t},decode(r){let{Err:e}=kt;if(r[0]&128)throw new e("Invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("Invalid signature integer: unnecessary leading zero");return $a(r)}},toSig(r){let{Err:e,_int:t,_tlv:n}=kt,i=typeof r=="string"?za(r):r;Sr(i);let{v:s,l:o}=n.decode(48,i);if(o.length)throw new e("Invalid signature: left bytes after parsing");let{v:a,l:c}=n.decode(2,s),{v:l,l:u}=n.decode(2,c);if(u.length)throw new e("Invalid signature: left bytes after parsing");return{r:t.decode(a),s:t.decode(l)}},hexFromSig(r){let{_tlv:e,_int:t}=kt,n=`${e.encode(2,t.encode(r.r))}${e.encode(2,t.encode(r.s))}`;return e.encode(48,n)}},Tt=BigInt(0),ge=BigInt(1),Lu=BigInt(2),k3=BigInt(3),Pu=BigInt(4);function Ga(r){let e=Ka(r),{Fp:t}=e,n=Vt(e.n,e.nBitLength),i=e.toBytes||((p,d,w)=>{let v=d.toAffine();return xt(Uint8Array.from([4]),t.toBytes(v.x),t.toBytes(v.y))}),s=e.fromBytes||(p=>{let d=p.subarray(1),w=t.fromBytes(d.subarray(0,t.BYTES)),v=t.fromBytes(d.subarray(t.BYTES,2*t.BYTES));return{x:w,y:v}});function o(p){let{a:d,b:w}=e,v=t.sqr(p),m=t.mul(v,p);return t.add(t.add(m,t.mul(p,d)),w)}if(!t.eql(t.sqr(e.Gy),o(e.Gx)))throw new Error("bad generator point: equation left != right");function a(p){return sn(p,ge,e.n)}function c(p){let{allowedPrivateKeyLengths:d,nByteLength:w,wrapPrivateKey:v,n:m}=e;if(d&&typeof p!="bigint"){if(Dt(p)&&(p=bt(p)),typeof p!="string"||!d.includes(p.length))throw new Error("Invalid key");p=p.padStart(w*2,"0")}let A;try{A=typeof p=="bigint"?p:wt(re("private key",p,w))}catch{throw new Error(`private key must be ${w} bytes, hex or bigint, not ${typeof p}`)}return v&&(A=Z(A,m)),_e("private key",A,ge,m),A}function l(p){if(!(p instanceof h))throw new Error("ProjectivePoint expected")}let u=tr((p,d)=>{let{px:w,py:v,pz:m}=p;if(t.eql(m,t.ONE))return{x:w,y:v};let A=p.is0();d==null&&(d=A?t.ONE:t.inv(m));let R=t.mul(w,d),T=t.mul(v,d),I=t.mul(m,d);if(A)return{x:t.ZERO,y:t.ZERO};if(!t.eql(I,t.ONE))throw new Error("invZ was invalid");return{x:R,y:T}}),f=tr(p=>{if(p.is0()){if(e.allowInfinityPoint&&!t.is0(p.py))return;throw new Error("bad point: ZERO")}let{x:d,y:w}=p.toAffine();if(!t.isValid(d)||!t.isValid(w))throw new Error("bad point: x or y not FE");let v=t.sqr(w),m=o(d);if(!t.eql(v,m))throw new Error("bad point: equation left != right");if(!p.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class h{constructor(d,w,v){if(this.px=d,this.py=w,this.pz=v,d==null||!t.isValid(d))throw new Error("x required");if(w==null||!t.isValid(w))throw new Error("y required");if(v==null||!t.isValid(v))throw new Error("z required");Object.freeze(this)}static fromAffine(d){let{x:w,y:v}=d||{};if(!d||!t.isValid(w)||!t.isValid(v))throw new Error("invalid affine point");if(d instanceof h)throw new Error("projective point not allowed");let m=A=>t.eql(A,t.ZERO);return m(w)&&m(v)?h.ZERO:new h(w,v,t.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){let w=t.invertBatch(d.map(v=>v.pz));return d.map((v,m)=>v.toAffine(w[m])).map(h.fromAffine)}static fromHex(d){let w=h.fromAffine(s(re("pointHex",d)));return w.assertValidity(),w}static fromPrivateKey(d){return h.BASE.multiply(c(d))}static msm(d,w){return s1(h,n,d,w)}_setWindowSize(d){y.setWindowSize(this,d)}assertValidity(){f(this)}hasEvenY(){let{y:d}=this.toAffine();if(t.isOdd)return!t.isOdd(d);throw new Error("Field doesn't support isOdd")}equals(d){l(d);let{px:w,py:v,pz:m}=this,{px:A,py:R,pz:T}=d,I=t.eql(t.mul(w,T),t.mul(A,m)),k=t.eql(t.mul(v,T),t.mul(R,m));return I&&k}negate(){return new h(this.px,t.neg(this.py),this.pz)}double(){let{a:d,b:w}=e,v=t.mul(w,k3),{px:m,py:A,pz:R}=this,T=t.ZERO,I=t.ZERO,k=t.ZERO,P=t.mul(m,m),oe=t.mul(A,A),K=t.mul(R,R),O=t.mul(m,A);return O=t.add(O,O),k=t.mul(m,R),k=t.add(k,k),T=t.mul(d,k),I=t.mul(v,K),I=t.add(T,I),T=t.sub(oe,I),I=t.add(oe,I),I=t.mul(T,I),T=t.mul(O,T),k=t.mul(v,k),K=t.mul(d,K),O=t.sub(P,K),O=t.mul(d,O),O=t.add(O,k),k=t.add(P,P),P=t.add(k,P),P=t.add(P,K),P=t.mul(P,O),I=t.add(I,P),K=t.mul(A,R),K=t.add(K,K),P=t.mul(K,O),T=t.sub(T,P),k=t.mul(K,oe),k=t.add(k,k),k=t.add(k,k),new h(T,I,k)}add(d){l(d);let{px:w,py:v,pz:m}=this,{px:A,py:R,pz:T}=d,I=t.ZERO,k=t.ZERO,P=t.ZERO,oe=e.a,K=t.mul(e.b,k3),O=t.mul(w,A),ae=t.mul(v,R),B=t.mul(m,T),N=t.add(w,v),x=t.add(A,R);N=t.mul(N,x),x=t.add(O,ae),N=t.sub(N,x),x=t.add(w,m);let b=t.add(A,T);return x=t.mul(x,b),b=t.add(O,B),x=t.sub(x,b),b=t.add(v,m),I=t.add(R,T),b=t.mul(b,I),I=t.add(ae,B),b=t.sub(b,I),P=t.mul(oe,x),I=t.mul(K,B),P=t.add(I,P),I=t.sub(ae,P),P=t.add(ae,P),k=t.mul(I,P),ae=t.add(O,O),ae=t.add(ae,O),B=t.mul(oe,B),x=t.mul(K,x),ae=t.add(ae,B),B=t.sub(O,B),B=t.mul(oe,B),x=t.add(x,B),O=t.mul(ae,x),k=t.add(k,O),O=t.mul(b,x),I=t.mul(N,I),I=t.sub(I,O),O=t.mul(N,ae),P=t.mul(b,P),P=t.add(P,O),new h(I,k,P)}subtract(d){return this.add(d.negate())}is0(){return this.equals(h.ZERO)}wNAF(d){return y.wNAFCached(this,d,h.normalizeZ)}multiplyUnsafe(d){_e("scalar",d,Tt,e.n);let w=h.ZERO;if(d===Tt)return w;if(d===ge)return this;let{endo:v}=e;if(!v)return y.unsafeLadder(this,d);let{k1neg:m,k1:A,k2neg:R,k2:T}=v.splitScalar(d),I=w,k=w,P=this;for(;A>Tt||T>Tt;)A&ge&&(I=I.add(P)),T&ge&&(k=k.add(P)),P=P.double(),A>>=ge,T>>=ge;return m&&(I=I.negate()),R&&(k=k.negate()),k=new h(t.mul(k.px,v.beta),k.py,k.pz),I.add(k)}multiply(d){let{endo:w,n:v}=e;_e("scalar",d,ge,v);let m,A;if(w){let{k1neg:R,k1:T,k2neg:I,k2:k}=w.splitScalar(d),{p:P,f:oe}=this.wNAF(T),{p:K,f:O}=this.wNAF(k);P=y.constTimeNegate(R,P),K=y.constTimeNegate(I,K),K=new h(t.mul(K.px,w.beta),K.py,K.pz),m=P.add(K),A=oe.add(O)}else{let{p:R,f:T}=this.wNAF(d);m=R,A=T}return h.normalizeZ([m,A])[0]}multiplyAndAddUnsafe(d,w,v){let m=h.BASE,A=(T,I)=>I===Tt||I===ge||!T.equals(m)?T.multiplyUnsafe(I):T.multiply(I),R=A(this,w).add(A(d,v));return R.is0()?void 0:R}toAffine(d){return u(this,d)}isTorsionFree(){let{h:d,isTorsionFree:w}=e;if(d===ge)return!0;if(w)return w(h,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:d,clearCofactor:w}=e;return d===ge?this:w?w(h,this):this.multiplyUnsafe(e.h)}toRawBytes(d=!0){return Qe("isCompressed",d),this.assertValidity(),i(h,this,d)}toHex(d=!0){return Qe("isCompressed",d),bt(this.toRawBytes(d))}}h.BASE=new h(e.Gx,e.Gy,t.ONE),h.ZERO=new h(t.ZERO,t.ONE,t.ZERO);let g=e.nBitLength,y=i1(h,e.endo?Math.ceil(g/2):g);return{CURVE:e,ProjectivePoint:h,normPrivateKeyToScalar:c,weierstrassEquation:o,isWithinCurveOrder:a}}function ja(r){let e=an(r);return it(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function T3(r){let e=ja(r),{Fp:t,n}=e,i=t.BYTES+1,s=2*t.BYTES+1;function o(B){return Z(B,n)}function a(B){return n1(B,n)}let{ProjectivePoint:c,normPrivateKeyToScalar:l,weierstrassEquation:u,isWithinCurveOrder:f}=Ga({...e,toBytes(B,N,x){let b=N.toAffine(),E=t.toBytes(b.x),L=xt;return Qe("isCompressed",x),x?L(Uint8Array.from([N.hasEvenY()?2:3]),E):L(Uint8Array.from([4]),E,t.toBytes(b.y))},fromBytes(B){let N=B.length,x=B[0],b=B.subarray(1);if(N===i&&(x===2||x===3)){let E=wt(b);if(!sn(E,ge,t.ORDER))throw new Error("Point is not on curve");let L=u(E),_;try{_=t.sqrt(L)}catch(q){let F=q instanceof Error?": "+q.message:"";throw new Error("Point is not on curve"+F)}let U=(_&ge)===ge;return(x&1)===1!==U&&(_=t.neg(_)),{x:E,y:_}}else if(N===s&&x===4){let E=t.fromBytes(b.subarray(0,t.BYTES)),L=t.fromBytes(b.subarray(t.BYTES,2*t.BYTES));return{x:E,y:L}}else throw new Error(`Point of length ${N} was invalid. Expected ${i} compressed bytes or ${s} uncompressed bytes`)}}),h=B=>bt(Ot(B,e.nByteLength));function g(B){let N=n>>ge;return B>N}function y(B){return g(B)?o(-B):B}let p=(B,N,x)=>wt(B.slice(N,x));class d{constructor(N,x,b){this.r=N,this.s=x,this.recovery=b,this.assertValidity()}static fromCompact(N){let x=e.nByteLength;return N=re("compactSignature",N,x*2),new d(p(N,0,x),p(N,x,2*x))}static fromDER(N){let{r:x,s:b}=kt.toSig(re("DER",N));return new d(x,b)}assertValidity(){_e("r",this.r,ge,n),_e("s",this.s,ge,n)}addRecoveryBit(N){return new d(this.r,this.s,N)}recoverPublicKey(N){let{r:x,s:b,recovery:E}=this,L=T(re("msgHash",N));if(E==null||![0,1,2,3].includes(E))throw new Error("recovery id invalid");let _=E===2||E===3?x+e.n:x;if(_>=t.ORDER)throw new Error("recovery id 2 or 3 invalid");let U=E&1?"03":"02",V=c.fromHex(U+h(_)),q=a(_),F=o(-L*q),j=o(b*q),W=c.BASE.multiplyAndAddUnsafe(V,F,j);if(!W)throw new Error("point at infinify");return W.assertValidity(),W}hasHighS(){return g(this.s)}normalizeS(){return this.hasHighS()?new d(this.r,o(-this.s),this.recovery):this}toDERRawBytes(){return Jt(this.toDERHex())}toDERHex(){return kt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return Jt(this.toCompactHex())}toCompactHex(){return h(this.r)+h(this.s)}}let w={isValidPrivateKey(B){try{return l(B),!0}catch{return!1}},normPrivateKeyToScalar:l,randomPrivateKey:()=>{let B=oo(e.n);return x0(e.randomBytes(B),e.n)},precompute(B=8,N=c.BASE){return N._setWindowSize(B),N.multiply(BigInt(3)),N}};function v(B,N=!0){return c.fromPrivateKey(B).toRawBytes(N)}function m(B){let N=Dt(B),x=typeof B=="string",b=(N||x)&&B.length;return N?b===i||b===s:x?b===2*i||b===2*s:B instanceof c}function A(B,N,x=!0){if(m(B))throw new Error("first arg must be private key");if(!m(N))throw new Error("second arg must be public key");return c.fromHex(N).multiply(l(B)).toRawBytes(x)}let R=e.bits2int||function(B){let N=wt(B),x=B.length*8-e.nBitLength;return x>0?N>>BigInt(x):N},T=e.bits2int_modN||function(B){return o(R(B))},I=on(e.nBitLength);function k(B){return _e(`num < 2^${e.nBitLength}`,B,Tt,I),Ot(B,e.nByteLength)}function P(B,N,x=oe){if(["recovered","canonical"].some(de=>de in x))throw new Error("sign() legacy options not supported");let{hash:b,randomBytes:E}=e,{lowS:L,prehash:_,extraEntropy:U}=x;L==null&&(L=!0),B=re("msgHash",B),I3(x),_&&(B=re("prehashed msgHash",b(B)));let V=T(B),q=l(N),F=[k(q),k(V)];if(U!=null&&U!==!1){let de=U===!0?E(t.BYTES):U;F.push(re("extraEntropy",de))}let j=xt(...F),W=V;function he(de){let me=R(de);if(!f(me))return;let ke=a(me),ce=c.BASE.multiply(me).toAffine(),Le=o(ce.x);if(Le===Tt)return;let ut=o(ke*o(W+Le*q));if(ut===Tt)return;let $r=(ce.x===Le?0:2)|Number(ce.y&ge),zr=ut;return L&&g(ut)&&(zr=y(ut),$r^=1),new d(Le,zr,$r)}return{seed:j,k2sig:he}}let oe={lowS:e.lowS,prehash:!1},K={lowS:e.lowS,prehash:!1};function O(B,N,x=oe){let{seed:b,k2sig:E}=P(B,N,x),L=e;return ro(L.hash.outputLen,L.nByteLength,L.hmac)(b,E)}c.BASE._setWindowSize(8);function ae(B,N,x,b=K){let E=B;if(N=re("msgHash",N),x=re("publicKey",x),"strict"in b)throw new Error("options.strict was renamed to lowS");I3(b);let{lowS:L,prehash:_}=b,U,V;try{if(typeof E=="string"||Dt(E))try{U=d.fromDER(E)}catch(ce){if(!(ce instanceof kt.Err))throw ce;U=d.fromCompact(E)}else if(typeof E=="object"&&typeof E.r=="bigint"&&typeof E.s=="bigint"){let{r:ce,s:Le}=E;U=new d(ce,Le)}else throw new Error("PARSE");V=c.fromHex(x)}catch(ce){if(ce.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(L&&U.hasHighS())return!1;_&&(N=e.hash(N));let{r:q,s:F}=U,j=T(N),W=a(F),he=o(j*W),de=o(q*W),me=c.BASE.multiplyAndAddUnsafe(V,he,de)?.toAffine();return me?o(me.x)===q:!1}return{CURVE:e,getPublicKey:v,getSharedSecret:A,sign:O,verify:ae,ProjectivePoint:c,Signature:d,utils:w}}function Za(r){return{hash:r,hmac:(e,...t)=>So(r,e,Zs(...t)),randomBytes:Ar}}function R3(r,e){let t=n=>T3({...r,...Za(n)});return Object.freeze({...t(e),create:t})}var P3=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),N3=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Wa=BigInt(1),Io=BigInt(2),L3=(r,e)=>(r+e/Io)/e;function Qa(r){let e=P3,t=BigInt(3),n=BigInt(6),i=BigInt(11),s=BigInt(22),o=BigInt(23),a=BigInt(44),c=BigInt(88),l=r*r*r%e,u=l*l*r%e,f=J(u,t,e)*u%e,h=J(f,t,e)*u%e,g=J(h,Io,e)*l%e,y=J(g,i,e)*g%e,p=J(y,s,e)*y%e,d=J(p,a,e)*p%e,w=J(d,c,e)*d%e,v=J(w,a,e)*p%e,m=J(v,t,e)*u%e,A=J(m,o,e)*y%e,R=J(A,n,e)*l%e,T=J(R,Io,e);if(!ko.eql(ko.sqr(T),r))throw new Error("Cannot find square root");return T}var ko=Vt(P3,void 0,void 0,{sqrt:Qa}),ir=R3({a:BigInt(0),b:BigInt(7),Fp:ko,n:N3,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{let e=N3,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-Wa*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),s=t,o=BigInt("0x100000000000000000000000000000000"),a=L3(s*r,e),c=L3(-n*r,e),l=Z(r-a*t-c*i,e),u=Z(-a*n-c*s,e),f=l>o,h=u>o;if(f&&(l=e-l),h&&(u=e-u),l>o||u>o)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:f,k1:l,k2neg:h,k2:u}}}},kr),Hu=BigInt(0);var qu=ir.ProjectivePoint;function Se(r,e){e==null&&(e=r.reduce((i,s)=>i+s.length,0));let t=pe(e),n=0;for(let i of r)t.set(i,n),n+=i.length;return t}function C3(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}function _3(r,e,t){let n=mt.digest(t instanceof Uint8Array?t:t.subarray());if(C3(n))return n.then(({digest:i})=>ir.verify(e,i,r)).catch(i=>{throw new mn(String(i))});try{return ir.verify(e,n.digest,r)}catch(i){throw new mn(String(i))}}var ri=class{type="secp256k1";raw;_key;constructor(e){this._key=D3(e),this.raw=U3(this._key)}toMultihash(){return gt.digest(Ir(this))}toCID(){return ne.createV1(114,this.toMultihash())}toString(){return Q.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ee(this.raw,e.raw)}verify(e,t){return _3(this._key,t,e)}};function To(r){return new ri(r)}function U3(r){return ir.ProjectivePoint.fromHex(r).toRawBytes(!0)}function D3(r){try{return ir.ProjectivePoint.fromHex(r),r}catch(e){throw new ht(String(e))}}function ni(r){let{Type:e,Data:t}=st.decode(r),n=t??new Uint8Array;switch(e){case fe.RSA:return Bo(n);case fe.Ed25519:return fo(n);case fe.secp256k1:return To(n);default:throw new Zt}}function M3(r){let{Type:e,Data:t}=st.decode(r.digest),n=t??new Uint8Array;switch(e){case fe.Ed25519:return fo(n);case fe.secp256k1:return To(n);default:throw new Zt}}function Ir(r){return st.encode({Type:fe[r.type],Data:r.raw})}async function _r(r,e){let t=e.key,i=C(t).split("/");if(i.length<3)return;let s=r[i[1].toString()];if(s==null)throw new $(`No validator available for key type "${i[1]}"`);await s(t,e.value)}var Xa=async(r,e)=>{if(!(r instanceof Uint8Array))throw new $('"key" must be a Uint8Array');if(r.byteLength<5)throw new $("Invalid public key record");if(C(r.subarray(0,4))!=="/pk/")throw new $("key was not prefixed with /pk/");let n=ni(e),i=r.slice(4);if(!ee(i,n.toMultihash().bytes))throw new $("public key does not match passed in key")},O3={pk:Xa};var V3=Symbol.for("nodejs.util.inspect.custom"),Ja=114,wn=class{type;multihash;publicKey;string;constructor(e){this.type=e.type,this.multihash=e.multihash,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[ts]=!0;toString(){return this.string==null&&(this.string=Q.encode(this.multihash.bytes).slice(1)),this.string}toMultihash(){return this.multihash}toCID(){return ne.createV1(Ja,this.multihash)}toJSON(){return this.toString()}equals(e){if(e==null)return!1;if(e instanceof Uint8Array)return ee(this.multihash.bytes,e);if(typeof e=="string")return this.toString()===e;if(e?.toMultihash()?.bytes!=null)return ee(this.multihash.bytes,e.toMultihash().bytes);throw new Error("not valid Id")}[V3](){return`PeerId(${this.toString()})`}},xn=class extends wn{type="RSA";publicKey;constructor(e){super({...e,type:"RSA"}),this.publicKey=e.publicKey}},vn=class extends wn{type="Ed25519";publicKey;constructor(e){super({...e,type:"Ed25519"}),this.publicKey=e.publicKey}},En=class extends wn{type="secp256k1";publicKey;constructor(e){super({...e,type:"secp256k1"}),this.publicKey=e.publicKey}},e8=2336,ii=class{type="url";multihash;publicKey;url;constructor(e){this.url=e.toString(),this.multihash=gt.digest(Y(this.url))}[V3](){return`PeerId(${this.url})`}[ts]=!0;toString(){return this.toCID().toString()}toMultihash(){return this.multihash}toCID(){return ne.createV1(e8,this.toMultihash())}toJSON(){return this.toString()}equals(e){return e==null?!1:(e instanceof Uint8Array&&(e=C(e)),e.toString()===this.toString())}};function F3(r,e){let t;if(r.charAt(0)==="1"||r.charAt(0)==="Q")t=be(Q.decode(`z${r}`));else{if(e==null)throw new $('Please pass a multibase decoder for strings that do not start with "1" or "Q"');t=be(e.decode(r))}return Je(t)}function H3(r){if(r.type==="Ed25519")return new vn({multihash:r.toCID().multihash,publicKey:r});if(r.type==="secp256k1")return new En({multihash:r.toCID().multihash,publicKey:r});if(r.type==="RSA")return new xn({multihash:r.toCID().multihash,publicKey:r});throw new Zt}function Je(r){if(r8(r))return new xn({multihash:r});if(t8(r))try{let e=M3(r);if(e.type==="Ed25519")return new vn({multihash:r,publicKey:e});if(e.type==="secp256k1")return new En({multihash:r,publicKey:e})}catch{let t=C(r.digest);return new ii(new URL(t))}throw new On("Supplied PeerID Multihash is invalid")}function t8(r){return r.code===gt.code}function r8(r){return r.code===mt.code}var si=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,n=e();return n===void 0&&(this.index=t),n}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,n){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,t,n,i){return this.readAtomically(()=>{let s=0,o=0,a=this.peekChar();if(a===void 0)return;let c=a==="0",l=2**(8*i)-1;for(;;){let u=this.readAtomically(()=>{let f=this.readChar();if(f===void 0)return;let h=Number.parseInt(f,e);if(!Number.isNaN(h))return h});if(u===void 0)break;if(s*=e,s+=u,s>l||(o+=1,t!==void 0&&o>t))return}if(o!==0)return!n&&c&&o>1?void 0:s})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let n=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[t]=n}return e})}readIPv6Addr(){let e=t=>{for(let n=0;n<t.length/2;n++){let i=n*2;if(n<t.length-3){let o=this.readSeparator(":",n,()=>this.readIPv4Addr());if(o!==void 0)return t[i]=o[0],t[i+1]=o[1],t[i+2]=o[2],t[i+3]=o[3],[i+4,!0]}let s=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(s===void 0)return[i,!1];t[i]=s>>8,t[i+1]=s&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[n,i]=e(t);if(n===16)return t;if(i||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let s=new Uint8Array(14),o=16-(n+2),[a]=e(s.subarray(0,o));return t.set(s.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var q3=45,n8=15,Ur=new si;function Ro(r){if(!(r.length>n8))return Ur.new(r).parseWith(()=>Ur.readIPv4Addr())}function No(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>q3))return Ur.new(r).parseWith(()=>Ur.readIPv6Addr())}function oi(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>q3))return Ur.new(r).parseWith(()=>Ur.readIPAddr())}function ai(r){return!!Ro(r)}function ci(r){return!!No(r)}function li(r){return!!oi(r)}var $3=Mn(K3(),1),i8=["0.0.0.0/8","10.0.0.0/8","100.64.0.0/10","127.0.0.0/8","169.254.0.0/16","172.16.0.0/12","192.0.0.0/24","192.0.0.0/29","192.0.0.8/32","192.0.0.9/32","192.0.0.10/32","192.0.0.170/32","192.0.0.171/32","192.0.2.0/24","192.31.196.0/24","192.52.193.0/24","192.88.99.0/24","192.168.0.0/16","192.175.48.0/24","198.18.0.0/15","198.51.100.0/24","203.0.113.0/24","240.0.0.0/4","255.255.255.255/32"],s8=i8.map(r=>new $3.Netmask(r));function Lo(r){for(let e of s8)if(e.contains(r))return!0;return!1}function o8(r){return/^::ffff:([0-9a-fA-F]{1,4}):([0-9a-fA-F]{1,4})$/.test(r)}function a8(r){let e=r.split(":");if(e.length<2)return!1;let t=e[e.length-1].padStart(4,"0"),n=e[e.length-2].padStart(4,"0"),i=`${parseInt(n.substring(0,2),16)}.${parseInt(n.substring(2),16)}.${parseInt(t.substring(0,2),16)}.${parseInt(t.substring(2),16)}`;return Lo(i)}function c8(r){return/^::ffff:([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)}function l8(r){let e=r.split(":"),t=e[e.length-1];return Lo(t)}function u8(r){return/^::$/.test(r)||/^::1$/.test(r)||/^64:ff9b::([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)||/^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^f[c-d]([0-9a-fA-F]{2,2}):/i.test(r)||/^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(r)||/^ff([0-9a-fA-F]{2,2}):/i.test(r)}function ui(r){return ai(r)?Lo(r):o8(r)?a8(r):c8(r)?l8(r):ci(r)?u8(r):void 0}var Rt="/",z3=new TextEncoder().encode(Rt),fi=z3[0],Dr=class r{_buf;constructor(e,t){if(typeof e=="string")this._buf=Y(e);else if(e instanceof Uint8Array)this._buf=e;else throw new Error("Invalid key, should be String of Uint8Array");if(t==null&&(t=!0),t&&this.clean(),this._buf.byteLength===0||this._buf[0]!==fi)throw new Error("Invalid key")}toString(e="utf8"){return C(this._buf,e)}uint8Array(){return this._buf}get[Symbol.toStringTag](){return`Key(${this.toString()})`}static withNamespaces(e){return new r(e.join(Rt))}static random(){return new r(Math.random().toString().substring(2))}static asKey(e){return e instanceof Uint8Array||typeof e=="string"?new r(e):typeof e.uint8Array=="function"?new r(e.uint8Array()):null}clean(){if((this._buf==null||this._buf.byteLength===0)&&(this._buf=z3),this._buf[0]!==fi){let e=new Uint8Array(this._buf.byteLength+1);e.fill(fi,0,1),e.set(this._buf,1),this._buf=e}for(;this._buf.byteLength>1&&this._buf[this._buf.byteLength-1]===fi;)this._buf=this._buf.subarray(0,-1)}less(e){let t=this.list(),n=e.list();for(let i=0;i<t.length;i++){if(n.length<i+1)return!1;let s=t[i],o=n[i];if(s<o)return!0;if(s>o)return!1}return t.length<n.length}reverse(){return r.withNamespaces(this.list().slice().reverse())}namespaces(){return this.list()}baseNamespace(){let e=this.namespaces();return e[e.length-1]}list(){return this.toString().split(Rt).slice(1)}type(){return f8(this.baseNamespace())}name(){return h8(this.baseNamespace())}instance(e){return new r(this.toString()+":"+e)}path(){let e=this.parent().toString();return e.endsWith(Rt)||(e+=Rt),e+=this.type(),new r(e)}parent(){let e=this.list();return e.length===1?new r(Rt):new r(e.slice(0,-1).join(Rt))}child(e){return this.toString()===Rt?e:e.toString()===Rt?this:new r(this.toString()+e.toString(),!1)}isAncestorOf(e){return e.toString()===this.toString()?!1:e.toString().startsWith(this.toString())}isDecendantOf(e){return e.toString()===this.toString()?!1:this.toString().startsWith(e.toString())}isTopLevel(){return this.list().length===1}concat(...e){return r.withNamespaces([...this.namespaces(),...d8(e.map(t=>t.namespaces()))])}};function f8(r){let e=r.split(":");return e.length<2?"":e.slice(0,-1).join(":")}function h8(r){let e=r.split(":");return e[e.length-1]}function d8(r){return[].concat(...r)}var p8=Y("/pk/");function hi(r){return{...r,multiaddrs:r.multiaddrs.filter(e=>{let[[t,n]]=e.stringTuples();if(t===53||t===54||t===55)return n!=="localhost";if(t!==4&&t!==6||n==null)return!1;let i=ui(n);return i==null?!0:!i})}}function G3(r){return{...r,multiaddrs:r.multiaddrs.filter(e=>{let[[t,n]]=e.stringTuples();if(n==="localhost")return!0;if(t!==4&&t!==6||n==null)return!1;let i=ui(n);return i??!1})}}function j3(r){return r}async function zt(r){return(await mt.digest(r)).digest}async function ze(r){return zt(r.toMultihash().bytes)}function Gt(r){return new Dr(`${A2}/${C(r,"base32")}`,!1)}function Z3(r){return Se([p8,r.toMultihash().bytes])}function W3(r){return C(r.subarray(0,4))==="/pk/"}function Q3(r){let e=be(r.subarray(4));return Je(e)}function Po(r,e){let t=new Date;return new le(r,e,t).serialize()}function Y3(r,e=100){let t;return()=>{clearTimeout(t),t=setTimeout(()=>{r()},e)}}var g8=290,m8=54,y8=55,b8=56,w8=4,x8=41;function X3(r){let e=r.stringTuples();for(let t of e)if(t[0]===g8)return!1;if(e[0][0]===m8||e[0][0]===y8||e[0][0]===b8)return!0;if(e[0][0]===w8||e[0][0]===x8){let t=ui(`${e[0][1]}`);return t==null||!t}return!1}var di=class{log;components;validators;selectors;peerRouting;queryManager;network;constructor(e,t){let{validators:n,selectors:i,peerRouting:s,queryManager:o,network:a,logPrefix:c}=t;this.components=e,this.log=e.logger.forComponent(`${c}:content-fetching`),this.validators=n,this.selectors=i,this.peerRouting=s,this.queryManager=o,this.network=a}async getLocal(e){this.log("getLocal %b",e);let t=Gt(e);this.log("fetching record for key %k",t);let n=await this.components.datastore.get(t);this.log("found %k in local datastore",t);let i=le.deserialize(n);return await _r(this.validators,i),i}async*sendCorrectionRecord(e,t,n,i={}){this.log("sendCorrection for %b",e);let s=Po(e,n);for(let{value:o,from:a}of t){if(ee(o,n)){this.log("record was ok");continue}if(this.components.peerId.equals(a)){try{let u=Gt(e);this.log(`Storing corrected record for key ${u.toString()}`),await this.components.datastore.put(u,s.subarray())}catch(u){this.log.error("Failed error correcting self",u)}continue}let c=!1,l={type:M.PUT_VALUE,key:e,record:s};for await(let u of this.network.sendRequest(a,l,i))u.name==="PEER_RESPONSE"&&u.record!=null&&ee(u.record.value,le.deserialize(s).value)&&(c=!0),yield u;c||(yield Ve({from:a,error:new Ct("Value not put correctly")},i)),this.log.error("Failed error correcting entry")}}async*put(e,t,n={}){this.log("put key %b value %b",e,t);let i=Po(e,t),s=Gt(e);this.log(`storing record for key ${s.toString()}`),await this.components.datastore.put(s,i.subarray()),yield*Pt(this.peerRouting.getClosestPeers(e,{signal:n.signal}),o=>gr(o,a=>async()=>{if(a.name!=="FINAL_PEER")return[a];let c=[],l={type:M.PUT_VALUE,key:e,record:i};this.log("send put to %p",a.peer.id);for await(let u of this.network.sendRequest(a.peer.id,l,n))c.push(u),u.name==="PEER_RESPONSE"&&(u.record!=null&&ee(u.record.value,le.deserialize(i).value)||c.push(Ve({from:a.peer.id,error:new Ct("Value not put correctly")},n)));return c}),o=>en(o,{ordered:!1,concurrency:3}),async function*(o){for await(let a of o)yield*a})}async*get(e,t={}){this.log("get %b",e);let n=[];for await(let a of this.getMany(e,t))a.name==="VALUE"&&n.push(a),yield a;if(n.length===0)return;let i=n.map(a=>a.value),s=0;try{s=i0(this.selectors,e,i)}catch(a){if(a.name!=="InvalidParametersError")throw a}let o=i[s];if(this.log("GetValue %b %b",e,o),o==null)throw new Ge("Best value was not found");yield*this.sendCorrectionRecord(e,n,o,t),yield n[s]}async*getMany(e,t={}){this.log("getMany values for %b",e);try{let s=await this.getLocal(e);yield rn({value:s.value,from:this.components.peerId},t)}catch(s){this.log("error getting local value for %b",e,s)}let n=this,i=async function*({peer:s,signal:o}){for await(let a of n.peerRouting.getValueOrPeers(s,e,{signal:o}))yield a,a.name==="PEER_RESPONSE"&&a.record!=null&&(yield rn({from:s,value:a.record.value},t))};yield*this.queryManager.run(e,i,t)}};function _o(r,e){let t={[Symbol.iterator]:()=>t,next:()=>{let n=r.next(),i=n.value;return n.done===!0||i==null?{done:!0,value:void 0}:{done:!1,value:e(i)}}};return t}function pi(r){let e=be(Q.decode(`z${r}`));return Je(e)}var lt=class r{set;constructor(e){if(this.set=new Set,e!=null)for(let t of e)this.set.add(t.toString())}get size(){return this.set.size}[Symbol.iterator](){return this.values()}add(e){this.set.add(e.toString())}clear(){this.set.clear()}delete(e){this.set.delete(e.toString())}entries(){return _o(this.set.entries(),e=>{let t=pi(e[0]);return[t,t]})}forEach(e){this.set.forEach(t=>{let n=pi(t);e(n,n,this)})}has(e){return this.set.has(e.toString())}values(){return _o(this.set.values(),e=>pi(e))}intersection(e){let t=new r;for(let n of e)this.has(n)&&t.add(n);return t}difference(e){let t=new r;for(let n of this)e.has(n)||t.add(n);return t}union(e){let t=new r;for(let n of e)t.add(n);for(let n of this)t.add(n);return t}};var t4=Symbol.for("@achingbrain/uint8arraylist");function e4(r,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let t=0;for(let n of r){let i=t+n.byteLength;if(e<i)return{buf:n,index:e-t};t=i}throw new RangeError("index is out of bounds")}function gi(r){return!!r?.[t4]}var Fe=class r{bufs;length;[t4]=!0;constructor(...e){this.bufs=[],this.length=0,e.length>0&&this.appendAll(e)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...e){this.appendAll(e)}appendAll(e){let t=0;for(let n of e)if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.push(n);else if(gi(n))t+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}prepend(...e){this.prependAll(e)}prependAll(e){let t=0;for(let n of e.reverse())if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.unshift(n);else if(gi(n))t+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}get(e){let t=e4(this.bufs,e);return t.buf[t.index]}set(e,t){let n=e4(this.bufs,e);n.buf[n.index]=t}write(e,t=0){if(e instanceof Uint8Array)for(let n=0;n<e.length;n++)this.set(t+n,e[n]);else if(gi(e))for(let n=0;n<e.length;n++)this.set(t+n,e.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(e){if(e=Math.trunc(e),!(Number.isNaN(e)||e<=0)){if(e===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(e>=this.bufs[0].byteLength)e-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(e),this.length-=e;break}}}slice(e,t){let{bufs:n,length:i}=this._subList(e,t);return Se(n,i)}subarray(e,t){let{bufs:n,length:i}=this._subList(e,t);return n.length===1?n[0]:Se(n,i)}sublist(e,t){let{bufs:n,length:i}=this._subList(e,t),s=new r;return s.length=i,s.bufs=[...n],s}_subList(e,t){if(e=e??0,t=t??this.length,e<0&&(e=this.length+e),t<0&&(t=this.length+t),e<0||t>this.length)throw new RangeError("index is out of bounds");if(e===t)return{bufs:[],length:0};if(e===0&&t===this.length)return{bufs:this.bufs,length:this.length};let n=[],i=0;for(let s=0;s<this.bufs.length;s++){let o=this.bufs[s],a=i,c=a+o.byteLength;if(i=c,e>=c)continue;let l=e>=a&&e<c,u=t>a&&t<=c;if(l&&u){if(e===a&&t===c){n.push(o);break}let f=e-a;n.push(o.subarray(f,f+(t-e)));break}if(l){if(e===0){n.push(o);continue}n.push(o.subarray(e-a));continue}if(u){if(t===c){n.push(o);break}n.push(o.subarray(0,t-a));break}n.push(o)}return{bufs:n,length:t-e}}indexOf(e,t=0){if(!gi(e)&&!(e instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let n=e instanceof Uint8Array?e:e.subarray();if(t=Number(t??0),isNaN(t)&&(t=0),t<0&&(t=this.length+t),t<0&&(t=0),e.length===0)return t>this.length?this.length:t;let i=n.byteLength;if(i===0)throw new TypeError("search must be at least 1 byte long");let s=256,o=new Int32Array(s);for(let f=0;f<s;f++)o[f]=-1;for(let f=0;f<i;f++)o[n[f]]=f;let a=o,c=this.byteLength-n.byteLength,l=n.byteLength-1,u;for(let f=t;f<=c;f+=u){u=0;for(let h=l;h>=0;h--){let g=this.get(f+h);if(n[h]!==g){u=Math.max(1,h-a[g]);break}}if(u===0)return f}return-1}getInt8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getInt8(0)}setInt8(e,t){let n=pe(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,t),this.write(n,e)}getInt16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,t)}setInt16(e,t,n){let i=Ce(2);new DataView(i.buffer,i.byteOffset,i.byteLength).setInt16(0,t,n),this.write(i,e)}getInt32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,t)}setInt32(e,t,n){let i=Ce(4);new DataView(i.buffer,i.byteOffset,i.byteLength).setInt32(0,t,n),this.write(i,e)}getBigInt64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,t)}setBigInt64(e,t,n){let i=Ce(8);new DataView(i.buffer,i.byteOffset,i.byteLength).setBigInt64(0,t,n),this.write(i,e)}getUint8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getUint8(0)}setUint8(e,t){let n=pe(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,t),this.write(n,e)}getUint16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,t)}setUint16(e,t,n){let i=Ce(2);new DataView(i.buffer,i.byteOffset,i.byteLength).setUint16(0,t,n),this.write(i,e)}getUint32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,t)}setUint32(e,t,n){let i=Ce(4);new DataView(i.buffer,i.byteOffset,i.byteLength).setUint32(0,t,n),this.write(i,e)}getBigUint64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,t)}setBigUint64(e,t,n){let i=Ce(8);new DataView(i.buffer,i.byteOffset,i.byteLength).setBigUint64(0,t,n),this.write(i,e)}getFloat32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,t)}setFloat32(e,t,n){let i=Ce(4);new DataView(i.buffer,i.byteOffset,i.byteLength).setFloat32(0,t,n),this.write(i,e)}getFloat64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,t)}setFloat64(e,t,n){let i=Ce(8);new DataView(i.buffer,i.byteOffset,i.byteLength).setFloat64(0,t,n),this.write(i,e)}equals(e){if(e==null||!(e instanceof r)||e.bufs.length!==this.bufs.length)return!1;for(let t=0;t<this.bufs.length;t++)if(!ee(this.bufs[t],e.bufs[t]))return!1;return!0}static fromUint8Arrays(e,t){let n=new r;return n.bufs=e,t==null&&(t=e.reduce((i,s)=>i+s.byteLength,0)),n.length=t,n}};var Jh=parseInt("0xFFFF",16),ed=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);var i4=ai,S8=ci,Uo=function(r){let e=0;if(r=r.toString().trim(),i4(r)){let t=new Uint8Array(e+4);return r.split(/\./g).forEach(n=>{t[e++]=parseInt(n,10)&255}),t}if(S8(r)){let t=r.split(":",8),n;for(n=0;n<t.length;n++){let s=i4(t[n]),o;s&&(o=Uo(t[n]),t[n]=C(o.slice(0,2),"base16")),o!=null&&++n<8&&t.splice(n,0,C(o.slice(2,4),"base16"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(n=0;n<t.length&&t[n]!=="";n++);let s=[n,1];for(n=9-t.length;n>0;n--)s.push("0");t.splice.apply(t,s)}let i=new Uint8Array(e+16);for(n=0;n<t.length;n++){let s=parseInt(t[n],16);i[e++]=s>>8&255,i[e++]=s&255}return i}throw new Error("invalid ip address")},s4=function(r,e=0,t){e=~~e,t=t??r.length-e;let n=new DataView(r.buffer);if(t===4){let i=[];for(let s=0;s<t;s++)i.push(r[e+s]);return i.join(".")}if(t===16){let i=[];for(let s=0;s<t;s+=2)i.push(n.getUint16(e+s).toString(16));return i.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var Mr={},Do={},k8=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];k8.forEach(r=>{let e=T8(...r);Do[e.code]=e,Mr[e.name]=e});function T8(r,e,t,n,i){return{code:r,size:e,name:t,resolvable:!!n,path:!!i}}function G(r){if(typeof r=="number"){if(Do[r]!=null)return Do[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(Mr[r]!=null)return Mr[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var Ud=G("ip4"),Dd=G("ip6"),Md=G("ipcidr");function Fo(r,e){switch(G(r).code){case 4:case 41:return N8(e);case 42:return Vo(e);case 6:case 273:case 33:case 132:return c4(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Vo(e);case 421:return _8(e);case 444:return a4(e);case 445:return a4(e);case 466:return C8(e);case 481:return globalThis.encodeURIComponent(Vo(e));default:return C(e,"base16")}}function Ho(r,e){switch(G(r).code){case 4:return o4(e);case 41:return o4(e);case 42:return Oo(e);case 6:case 273:case 33:case 132:return qo(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Oo(e);case 421:return L8(e);case 444:return U8(e);case 445:return D8(e);case 466:return P8(e);case 481:return Oo(globalThis.decodeURIComponent(e));default:return Y(e,"base16")}}var Mo=Object.values(Qr).map(r=>r.decoder),R8=function(){let r=Mo[0].or(Mo[1]);return Mo.slice(2).forEach(e=>r=r.or(e)),r}();function o4(r){if(!li(r))throw new Error("invalid ip address");return Uo(r)}function N8(r){let e=s4(r,0,r.length);if(e==null)throw new Error("ipBuff is required");if(!li(e))throw new Error("invalid ip address");return e}function qo(r){let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function c4(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function Oo(r){let e=Y(r),t=Uint8Array.from(He(e.length));return Se([t,e],t.length+e.length)}function Vo(r){let e=Me(r);if(r=r.slice(se(e)),r.length!==e)throw new Error("inconsistent lengths");return C(r)}function L8(r){let e;r[0]==="Q"||r[0]==="1"?e=be(Q.decode(`z${r}`)).bytes:e=ne.parse(r).multihash.bytes;let t=Uint8Array.from(He(e.length));return Se([t,e],t.length+e.length)}function P8(r){let e=R8.decode(r),t=Uint8Array.from(He(e.length));return Se([t,e],t.length+e.length)}function C8(r){let e=Me(r),t=r.slice(se(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+C(t,"base64url")}function _8(r){let e=Me(r),t=r.slice(se(e));if(t.length!==e)throw new Error("inconsistent lengths");return C(t,"base58btc")}function U8(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);let t=pt.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let i=qo(n);return Se([t,i],t.length+i.length)}function D8(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);let t=pt.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let i=qo(n);return Se([t,i],t.length+i.length)}function a4(r){let e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=C(e,"base32"),i=c4(t);return`${n}:${i}`}function l4(r){r=Ko(r);let e=[],t=[],n=null,i=r.split("/").slice(1);if(i.length===1&&i[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let s=0;s<i.length;s++){let o=i[s],a=G(o);if(a.size===0){e.push([a.code]),t.push([a.code]);continue}if(s++,s>=i.length)throw f4("invalid address: "+r);if(a.path===!0){n=Ko(i.slice(s).join("/")),e.push([a.code,Ho(a.code,n)]),t.push([a.code,n]);break}let c=Ho(a.code,i[s]);e.push([a.code,c]),t.push([a.code,Fo(a.code,c)])}return{string:u4(t),bytes:zo(e),tuples:e,stringTuples:t,path:n}}function $o(r){let e=[],t=[],n=null,i=0;for(;i<r.length;){let s=Me(r,i),o=se(s),a=G(s),c=M8(a,r.slice(i+o));if(c===0){e.push([s]),t.push([s]),i+=o;continue}let l=r.slice(i+o,i+o+c);if(i+=c+o,i>r.length)throw f4("Invalid address Uint8Array: "+C(r,"base16"));e.push([s,l]);let u=Fo(s,l);if(t.push([s,u]),a.path===!0){n=u;break}}return{bytes:Uint8Array.from(r),string:u4(t),tuples:e,stringTuples:t,path:n}}function u4(r){let e=[];return r.map(t=>{let n=G(t[0]);return e.push(n.name),t.length>1&&t[1]!=null&&e.push(t[1]),null}),Ko(e.join("/"))}function zo(r){return Se(r.map(e=>{let t=G(e[0]),n=Uint8Array.from(He(t.code));return e.length>1&&e[1]!=null&&(n=Se([n,e[1]])),n}))}function M8(r,e){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let t=Me(e instanceof Uint8Array?e:Uint8Array.from(e));return t+se(t)}}function Ko(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}function f4(r){return new Error("Error parsing address: "+r)}var O8=Symbol.for("nodejs.util.inspect.custom"),jo=Symbol.for("@multiformats/js-multiaddr/multiaddr"),V8=[G("dns").code,G("dns4").code,G("dns6").code,G("dnsaddr").code],Go=class extends Error{constructor(e="No available resolver"){super(e),this.name="NoAvailableResolverError"}},mi=class r{bytes;#e;#r;#s;#a;[jo]=!0;constructor(e){e==null&&(e="");let t;if(e instanceof Uint8Array)t=$o(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);t=l4(e)}else if(d4(e))t=$o(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=t.bytes,this.#e=t.string,this.#r=t.tuples,this.#s=t.stringTuples,this.#a=t.path}toString(){return this.#e}toJSON(){return this.toString()}toOptions(){let e,t,n,i,s="",o=G("tcp"),a=G("udp"),c=G("ip4"),l=G("ip6"),u=G("dns6"),f=G("ip6zone");for(let[g,y]of this.stringTuples())g===f.code&&(s=`%${y??""}`),V8.includes(g)&&(t=o.name,i=443,n=`${y??""}${s}`,e=g===u.code?6:4),(g===o.code||g===a.code)&&(t=G(g).name,i=parseInt(y??"")),(g===c.code||g===l.code)&&(t=G(g).name,n=`${y??""}${s}`,e=g===l.code?6:4);if(e==null||t==null||n==null||i==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:t,port:i}}protos(){return this.#r.map(([e])=>Object.assign({},G(e)))}protoCodes(){return this.#r.map(([e])=>e)}protoNames(){return this.#r.map(([e])=>G(e).name)}tuples(){return this.#r}stringTuples(){return this.#s}encapsulate(e){return e=new r(e),new r(this.toString()+e.toString())}decapsulate(e){let t=e.toString(),n=this.toString(),i=n.lastIndexOf(t);if(i<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new r(n.slice(0,i))}decapsulateCode(e){let t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new r(zo(t.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,i])=>{n===Mr.p2p.code&&e.push([n,i]),n===Mr["p2p-circuit"].code&&(e=[])});let t=e.pop();if(t?.[1]!=null){let n=t[1];return n[0]==="Q"||n[0]==="1"?C(Q.decode(`z${n}`),"base58btc"):C(ne.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#a}equals(e){return ee(this.bytes,e.bytes)}async resolve(e){let t=this.protos().find(s=>s.resolvable);if(t==null)return[this];let n=h4.get(t.name);if(n==null)throw new Go(`no available resolver for ${t.name}`);return(await n(this,e)).map(s=>sr(s))}nodeAddress(){let e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){let t=(e??this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}[O8](){return`Multiaddr(${this.#e})`}};var h4=new Map;function d4(r){return!!r?.[jo]}function sr(r){return new mi(r)}function p4(r,e){return{id:r.id.toMultihash().bytes,multiaddrs:(r.multiaddrs??[]).map(n=>n.bytes),connection:e}}function Bn(r){if(r.id==null)throw new Error("Invalid peer in message");let e=be(r.id);return{id:Je(e),multiaddrs:(r.multiaddrs??[]).map(t=>sr(t))}}var yi=class{log;components;network;peerRouting;queryManager;routingTable;providers;constructor(e,t){let{network:n,peerRouting:i,queryManager:s,routingTable:o,providers:a,logPrefix:c}=t;this.components=e,this.log=e.logger.forComponent(`${c}:content-routing`),this.network=n,this.peerRouting=i,this.queryManager=s,this.routingTable=o,this.providers=a}async*provide(e,t,n={}){this.log("provide %s",e);let i=e.multihash.bytes;await this.providers.addProvider(e,this.components.peerId);let s={type:M.ADD_PROVIDER,key:i,providers:[p4({id:this.components.peerId,multiaddrs:t})]},o=0,a=c=>async()=>{if(c.name!=="FINAL_PEER")return[c];let l=[];this.log("putProvider %s to %p",e,c.peer.id);try{this.log("sending provider record for %s to %p",e,c.peer.id);for await(let u of this.network.sendMessage(c.peer.id,s,n))u.name==="PEER_RESPONSE"&&(this.log("sent provider record for %s to %p",e,c.peer.id),o++),l.push(u)}catch(u){this.log.error("error sending provide record to peer %p",c.peer.id,u),l.push(Ve({from:c.peer.id,error:u},n))}return l};yield*Pt(this.peerRouting.getClosestPeers(i,n),c=>gr(c,l=>a(l)),c=>en(c,{ordered:!1,concurrency:3}),async function*(c){for await(let l of c)yield*l}),this.log("sent provider records to %d peers",o)}async*findProviders(e,t){let n=this.routingTable.kBucketSize,i=0,s=e.multihash.bytes,o=this;this.log("findProviders %c",e);let a=await this.providers.getProviders(e);if(a.length>0){let u=[];for(let f of a.slice(0,n))try{let h=await this.components.peerStore.get(f);u.push({id:f,multiaddrs:h.addresses.map(({multiaddr:g})=>g)})}catch(h){if(h.name!=="NotFoundError")throw h;this.log("no peer store entry for %p",f)}if(yield tn({from:this.components.peerId,messageType:M.GET_PROVIDERS,providers:u},t),yield Gs({from:this.components.peerId,providers:u},t),i+=u.length,i>=n)return}let c=async function*({peer:u,signal:f}){let h={type:M.GET_PROVIDERS,key:s};yield*o.network.sendRequest(u,h,{...t,signal:f})},l=new lt(a);for await(let u of this.queryManager.run(s,c,t))if(yield u,u.name==="PEER_RESPONSE"){this.log("Found %d provider entries for %c and %d closer peers",u.providers.length,e,u.closer.length);let f=[];for(let h of u.providers)l.has(h.id)||(l.add(h.id),f.push(h));if(f.length>0&&(yield Gs({from:u.from,providers:f},t),i+=f.length,i>=n))return}}};function jt(r){let e=new globalThis.AbortController;function t(){e.abort();for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}for(let s of r){if(s?.aborted===!0){t();break}s?.addEventListener!=null&&s.addEventListener("abort",t)}function n(){for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}let i=e.signal;return i.clear=n,i}var Or=class{movingAverage;variance;deviation;forecast;timespan;previousTime;constructor(e){this.timespan=e,this.movingAverage=0,this.variance=0,this.deviation=0,this.forecast=0}alpha(e,t){return 1-Math.exp(-(e-t)/this.timespan)}push(e,t=Date.now()){if(this.previousTime!=null){let n=this.alpha(t,this.previousTime),i=e-this.movingAverage,s=n*i;this.movingAverage=n*e+(1-n)*this.movingAverage,this.variance=(1-n)*(this.variance+i*s),this.deviation=Math.sqrt(this.variance),this.forecast=this.movingAverage+n*i}else this.movingAverage=e;this.previousTime=t}};var F8=1.2,H8=2,q8=2e3,bi=class{success;failure;next;metric;timeoutMultiplier;failureMultiplier;minTimeout;constructor(e={}){this.success=new Or(e.interval??5e3),this.failure=new Or(e.interval??5e3),this.next=new Or(e.interval??5e3),this.failureMultiplier=e.failureMultiplier??H8,this.timeoutMultiplier=e.timeoutMultiplier??F8,this.minTimeout=e.minTimeout??q8,e.metricName!=null&&(this.metric=e.metrics?.registerMetricGroup(e.metricName))}getTimeoutSignal(e={}){let t=Math.max(Math.round(this.next.movingAverage*(e.timeoutFactor??this.timeoutMultiplier)),this.minTimeout),n=AbortSignal.timeout(t),i=jt([e.signal,n]);return ye(1/0,i,n),i.start=Date.now(),i.timeout=t,i}cleanUp(e){let t=Date.now()-e.start;e.aborted?(this.failure.push(t),this.next.push(t*this.failureMultiplier),this.metric?.update({failureMovingAverage:this.failure.movingAverage,failureDeviation:this.failure.deviation,failureForecast:this.failure.forecast,failureVariance:this.failure.variance,failure:t})):(this.success.push(t),this.next.push(t),this.metric?.update({successMovingAverage:this.success.movingAverage,successDeviation:this.success.deviation,successForecast:this.success.forecast,successVariance:this.success.variance,success:t}))}};var wi=class extends Error{type;code;constructor(e,t,n){super(e??"The operation was aborted"),this.type="aborted",this.name=n??"AbortError",this.code=t??"ABORT_ERR"}};async function Vr(r,e,t){if(e==null)return r;if(e.aborted)return Promise.reject(new wi(t?.errorMessage,t?.errorCode,t?.errorName));let n,i=new wi(t?.errorMessage,t?.errorCode,t?.errorName);try{return await Promise.race([r,new Promise((s,o)=>{n=()=>{o(i)},e.addEventListener("abort",n)})])}finally{n!=null&&e.removeEventListener("abort",n)}}var Zo=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=ie(),this.haveNext=ie()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let e=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=ie(),e}async throw(e){return this.ended=!0,e!=null&&(this.haveNext.promise.catch(()=>{}),this.haveNext.reject(e)),{done:!0,value:void 0}}async return(){let e={done:!0,value:void 0};return await this._push(void 0),e}async push(e,t){await this._push(e,t)}async end(e,t){e!=null?await this.throw(e):await this._push(void 0,t)}async _push(e,t){if(e!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");for(;this.nextResult!=null;)await this.readNext.promise;e!=null?this.nextResult={done:!1,value:e}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=ie(),await Vr(this.readNext.promise,t?.signal,t)}};function g4(){return new Zo}var xi=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var Wo=class extends Error{code;constructor(e,t){super(e),this.code=t}},Qo=class extends Wo{type;constructor(e){super(e,"ABORT_ERR"),this.type="aborted",this.name="AbortError"}};function m4(r,e){let t=g4();r.sink(t).catch(async o=>{await t.end(o)}),r.sink=async o=>{for await(let a of o)await t.push(a);await t.end()};let n=r.source;r.source[Symbol.iterator]!=null?n=r.source[Symbol.iterator]():r.source[Symbol.asyncIterator]!=null&&(n=r.source[Symbol.asyncIterator]());let i=new Fe;return{read:async(o,a)=>{a?.signal?.throwIfAborted();let c,l=new Promise((u,f)=>{c=()=>{f(new Qo("Read aborted"))},a?.signal?.addEventListener("abort",c)});try{if(o==null){let{done:f,value:h}=await Promise.race([n.next(),l]);return f===!0?new Fe:h}for(;i.byteLength<o;){let{value:f,done:h}=await Promise.race([n.next(),l]);if(h===!0)throw new xi("unexpected end of input");i.append(f)}let u=i.sublist(0,o);return i.consume(o),u}finally{c!=null&&a?.signal?.removeEventListener("abort",c)}},write:async(o,a)=>{a?.signal?.throwIfAborted(),o instanceof Uint8Array?await t.push(o,a):await t.push(o.subarray(),a)},unwrap:()=>{if(i.byteLength>0){let o=r.source;r.source=async function*(){e?.yieldBytes===!1?yield i:yield*i,yield*o}()}return r}}}var vi=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},Ei=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},Ai=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"};function y4(r,e={}){let t=m4(r,e);e.maxDataLength!=null&&e.maxLengthLength==null&&(e.maxLengthLength=se(e.maxDataLength));let n=e?.lengthDecoder??Me,i=e?.lengthEncoder??He;return{read:async o=>{let a=-1,c=new Fe;for(;;){c.append(await t.read(1,o));try{a=n(c)}catch(l){if(l instanceof RangeError)continue;throw l}if(a<0)throw new vi("Invalid message length");if(e?.maxLengthLength!=null&&c.byteLength>e.maxLengthLength)throw new Ai("message length length too long");if(a>-1)break}if(e?.maxDataLength!=null&&a>e.maxDataLength)throw new Ei("message length too long");return t.read(a,o)},write:async(o,a)=>{await t.write(new Fe(i(o.byteLength),o),a)},writeV:async(o,a)=>{let c=new Fe(...o.flatMap(l=>[i(l.byteLength),l]));await t.write(c,a)},unwrap:()=>t.unwrap()}}function Sn(r,e){let t=y4(r,e),n={read:async(i,s)=>{let o=await t.read(s);return i.decode(o)},write:async(i,s,o)=>{await t.write(s.encode(i),o)},writeV:async(i,s,o)=>{await t.writeV(i.map(a=>s.encode(a)),o)},pb:i=>({read:async s=>n.read(i,s),write:async(s,o)=>n.write(s,i,o),writeV:async(s,o)=>n.writeV(s,i,o),unwrap:()=>n}),unwrap:()=>t.unwrap()};return n}var Bi=class extends Pe{log;protocol;running;components;timeout;constructor(e,t){super();let{protocol:n}=t;this.components=e,this.log=e.logger.forComponent(`${t.logPrefix}:network`),this.running=!1,this.protocol=n,this.timeout=new bi({...t.timeout??{},metrics:e.metrics,metricName:`${t.logPrefix.replaceAll(":","_")}_network_message_send_times_milliseconds`})}async start(){this.running||(this.running=!0)}async stop(){this.running=!1}isStarted(){return this.running}async*sendRequest(e,t,n={}){if(!this.running)return;let i=t.type;if(i==null)throw new $("Message type was missing");this.log("sending %s to %p",t.type,e),yield js({peer:e},n),yield zs({to:e,type:i},n);let s,o=this.timeout.getTimeoutSignal(n);n={...n,signal:o};try{s=await(await this.components.connectionManager.openConnection(e,n)).newStream(this.protocol,n);let c=await this._writeReadMessage(s,t,n);s.close(n).catch(l=>{this.log.error("error closing stream to %p",e,l),s?.abort(l)}),yield tn({from:e,messageType:c.type,closer:c.closer.map(Bn),providers:c.providers.map(Bn),record:c.record==null?void 0:le.deserialize(c.record)},n)}catch(a){s?.abort(a),this.log.error("could not send %s to %p",t.type,e,a),yield Ve({from:e,error:a},n)}finally{this.timeout.cleanUp(o)}}async*sendMessage(e,t,n={}){if(!this.running)return;let i=t.type;if(i==null)throw new $("Message type was missing");this.log("sending %s to %p",t.type,e),yield js({peer:e},n),yield zs({to:e,type:i},n);let s,o=this.timeout.getTimeoutSignal(n);n={...n,signal:o};try{s=await(await this.components.connectionManager.openConnection(e,n)).newStream(this.protocol,n),await this._writeMessage(s,t,n),s.close(n).catch(c=>{this.log.error("error closing stream to %p",e,c),s?.abort(c)}),yield tn({from:e,messageType:i},n)}catch(a){s?.abort(a),yield Ve({from:e,error:a},n)}finally{this.timeout.cleanUp(o)}}async _writeMessage(e,t,n){let i=Sn(e);await i.write(t,Ke,n),await i.unwrap().close(n)}async _writeReadMessage(e,t,n){let i=Sn(e);await i.write(t,Ke,n);let s=await i.read(Ke,n);return await i.unwrap().close(n),s.closer.forEach(o=>{this.safeDispatchEvent("peer",{detail:Bn(o)})}),s.providers.forEach(o=>{this.safeDispatchEvent("peer",{detail:Bn(o)})}),s}};function et(r,e){if(r.length!==e.length)throw new Error("Inputs should have the same length");let t=pe(r.length);for(let n=0;n<r.length;n++)t[n]=r[n]^e[n];return t}function Fr(r,e){if(r.byteLength!==e.byteLength)throw new Error("Inputs should have the same length");for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return r[t]<e[t]?-1:1;return 0}var Hr=class{originDhtKey;capacity;peerDistances;constructor(e,t){this.originDhtKey=e,this.capacity=t,this.peerDistances=[]}get length(){return this.peerDistances.length}get peers(){return this.peerDistances.map(e=>e.peer)}async add(e){let t=await ze(e.id);this.addWitKadId(e,t)}addWitKadId(e,t){if(this.peerDistances.find(i=>i.peer.id.equals(e.id))!=null)return;let n={peer:e,distance:et(this.originDhtKey,t)};this.peerDistances.push(n),this.peerDistances.sort((i,s)=>Fr(i.distance,s.distance)),this.peerDistances=this.peerDistances.slice(0,this.capacity)}async isCloser(e){if(this.length===0)return!0;let t=await ze(e),n=et(t,this.originDhtKey),i=this.peerDistances[this.peerDistances.length-1].distance;return Fr(n,i)===-1}async anyCloser(e){return e.length===0?!1:Promise.any(e.map(async t=>this.isCloser(t)))}};var Si=class{log;routingTable;network;validators;queryManager;peerStore;peerId;constructor(e,t){let{routingTable:n,network:i,validators:s,queryManager:o,logPrefix:a}=t;this.routingTable=n,this.network=i,this.validators=s,this.queryManager=o,this.peerStore=e.peerStore,this.peerId=e.peerId,this.log=e.logger.forComponent(`${a}:peer-routing`)}async findPeerLocal(e){let t,n=await this.routingTable.find(e);if(n!=null){this.log("findPeerLocal found %p in routing table",e);try{t=await this.peerStore.get(n)}catch(i){if(i.name!=="NotFoundError")throw i}}if(t==null)try{t=await this.peerStore.get(e)}catch(i){if(i.name!=="NotFoundError")throw i}if(t!=null)return this.log("findPeerLocal found %p in peer store",e),{id:t.id,multiaddrs:t.addresses.map(i=>i.multiaddr)}}async*_getValueSingle(e,t,n={}){let i={type:M.GET_VALUE,key:t};yield*this.network.sendRequest(e,i,n)}async*getPublicKeyFromNode(e,t={}){let n=Z3(e);for await(let i of this._getValueSingle(e,n,t))if(yield i,i.name==="PEER_RESPONSE"&&i.record!=null){let s=ni(i.record.value),o=H3(s);if(!o.equals(e))throw new ht("public key does not match id");if(o.publicKey==null)throw new ht("public key missing");yield rn({from:e,value:i.record.value},t)}throw new Ct(`Node not responding with its public key: ${e.toString()}`)}async*findPeer(e,t={}){if(this.log("findPeer %p",e),t.useCache!==!1){let i=await this.findPeerLocal(e);if(i!=null){this.log("found local"),yield Yn({from:this.peerId,peer:i},t);return}}let n=!1;if(t.useNetwork!==!1){let i=this,s=async function*({peer:o,signal:a}){let c={type:M.FIND_NODE,key:e.toMultihash().bytes};for await(let l of i.network.sendRequest(o,c,{...t,signal:a}))if(yield l,l.name==="PEER_RESPONSE"){let u=l.closer.find(f=>f.id.equals(e));u!=null&&(yield Yn({from:l.from,peer:u},t))}};for await(let o of this.queryManager.run(e.toMultihash().bytes,s,t))o.name==="FINAL_PEER"&&(n=!0),yield o}n||(yield Ve({from:this.peerId,error:new Ge("Not found")},t))}async*getClosestPeers(e,t={}){this.log("getClosestPeers to %b",e);let n=await zt(e),i=this.routingTable.closestPeers(n),s=this,o=new Hr(n,this.routingTable.kBucketSize);await Promise.all(i.map(async c=>{await o.add({id:c,multiaddrs:[]})}));let a=async function*({peer:c,signal:l}){s.log("closerPeersSingle %s from %p",C(e,"base32"),c);let u={type:M.FIND_NODE,key:e};yield*s.network.sendRequest(c,u,{...t,signal:l})};for await(let c of this.queryManager.run(e,a,t))c.name==="PEER_RESPONSE"&&await Promise.all(c.closer.map(async l=>{await o.add(l)})),yield c;this.log("found %d peers close to %b",o.length,e);for(let c of o.peers)yield Yn({from:this.peerId,peer:c},t)}async*getValueOrPeers(e,t,n={}){for await(let i of this._getValueSingle(e,t,n)){if(i.name==="PEER_RESPONSE"&&i.record!=null)try{await this._verifyRecordOnline(i.record)}catch{let o="invalid record received, discarded";this.log(o),yield Ve({from:i.from,error:new Ct(o)},n);continue}yield i}}async _verifyRecordOnline(e){if(e.timeReceived==null)throw new Zn("invalid record received");await _r(this.validators,new le(e.key,e.value,e.timeReceived))}async getCloserPeersOffline(e,t){let n=await zt(e),i=this.routingTable.closestPeers(n),s=[];for(let o of i)if(!o.equals(t))try{let a=await this.peerStore.get(o);s.push({id:o,multiaddrs:a.addresses.map(({multiaddr:c})=>c)})}catch(a){if(a.name!=="NotFoundError")throw a}return s.length>0?this.log("getCloserPeersOffline found %d peer(s) closer to %b than %p",s.length,e,t):this.log("getCloserPeersOffline could not find peer closer to %b than %p with %d peers in the routing table",e,t,this.routingTable.size),s}};var B4=Mn(w4(),1);var Xo=Mn(v4(),1);var qr=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},Jo=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}},E4=r=>globalThis.DOMException===void 0?new Jo(r):new DOMException(r),A4=r=>{let e=r.reason===void 0?E4("This operation was aborted."):r.reason;return e instanceof Error?e:E4(e)};function kn(r,e){let{milliseconds:t,fallback:n,message:i,customTimers:s={setTimeout,clearTimeout}}=e,o,c=new Promise((l,u)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){let{signal:h}=e;h.aborted&&u(A4(h)),h.addEventListener("abort",()=>{u(A4(h))})}if(t===Number.POSITIVE_INFINITY){r.then(l,u);return}let f=new qr;o=s.setTimeout.call(void 0,()=>{if(n){try{l(n())}catch(h){u(h)}return}typeof r.cancel=="function"&&r.cancel(),i===!1?l():i instanceof Error?u(i):(f.message=i??`Promise timed out after ${t} milliseconds`,u(f))},t),(async()=>{try{l(await r)}catch(h){u(h)}})()}).finally(()=>{c.clear()});return c.clear=()=>{s.clearTimeout.call(void 0,o),o=void 0},c}function e2(r,e,t){let n=0,i=r.length;for(;i>0;){let s=Math.trunc(i/2),o=n+s;t(r[o],e)<=0?(n=++o,i-=s+1):i=s}return n}var Tn=class{#e=[];enqueue(e,t){t={priority:0,...t};let n={priority:t.priority,run:e};if(this.size&&this.#e[this.size-1].priority>=t.priority){this.#e.push(n);return}let i=e2(this.#e,n,(s,o)=>o.priority-s.priority);this.#e.splice(i,0,n)}dequeue(){return this.#e.shift()?.run}filter(e){return this.#e.filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return this.#e.length}};var Rn=class extends Xo.default{#e;#r;#s=0;#a;#c;#p=0;#n;#l;#t;#g;#i=0;#u;#o;#m;timeout;constructor(e){if(super(),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:Tn,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${e.intervalCap?.toString()??""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${e.interval?.toString()??""}\` (${typeof e.interval})`);this.#e=e.carryoverConcurrencyCount,this.#r=e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,this.#a=e.intervalCap,this.#c=e.interval,this.#t=new e.queueClass,this.#g=e.queueClass,this.concurrency=e.concurrency,this.timeout=e.timeout,this.#m=e.throwOnTimeout===!0,this.#o=e.autoStart===!1}get#w(){return this.#r||this.#s<this.#a}get#x(){return this.#i<this.#u}#v(){this.#i--,this.#f(),this.emit("next")}#E(){this.#b(),this.#y(),this.#l=void 0}get#A(){let e=Date.now();if(this.#n===void 0){let t=this.#p-e;if(t<0)this.#s=this.#e?this.#i:0;else return this.#l===void 0&&(this.#l=setTimeout(()=>{this.#E()},t)),!0}return!1}#f(){if(this.#t.size===0)return this.#n&&clearInterval(this.#n),this.#n=void 0,this.emit("empty"),this.#i===0&&this.emit("idle"),!1;if(!this.#o){let e=!this.#A;if(this.#w&&this.#x){let t=this.#t.dequeue();return t?(this.emit("active"),t(),e&&this.#y(),!0):!1}}return!1}#y(){this.#r||this.#n!==void 0||(this.#n=setInterval(()=>{this.#b()},this.#c),this.#p=Date.now()+this.#c)}#b(){this.#s===0&&this.#i===0&&this.#n&&(clearInterval(this.#n),this.#n=void 0),this.#s=this.#e?this.#i:0,this.#h()}#h(){for(;this.#f(););}get concurrency(){return this.#u}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);this.#u=e,this.#h()}async#B(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(e.reason)},{once:!0})})}async add(e,t={}){return t={timeout:this.timeout,throwOnTimeout:this.#m,...t},new Promise((n,i)=>{this.#t.enqueue(async()=>{this.#i++,this.#s++;try{t.signal?.throwIfAborted();let s=e({signal:t.signal});t.timeout&&(s=kn(Promise.resolve(s),{milliseconds:t.timeout})),t.signal&&(s=Promise.race([s,this.#B(t.signal)]));let o=await s;n(o),this.emit("completed",o)}catch(s){if(s instanceof qr&&!t.throwOnTimeout){n();return}i(s),this.emit("error",s)}finally{this.#v()}},t),this.emit("add"),this.#f()})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return this.#o?(this.#o=!1,this.#h(),this):this}pause(){this.#o=!0}clear(){this.#t=new this.#g}async onEmpty(){this.#t.size!==0&&await this.#d("empty")}async onSizeLessThan(e){this.#t.size<e||await this.#d("next",()=>this.#t.size<e)}async onIdle(){this.#i===0&&this.#t.size===0||await this.#d("idle")}async#d(e,t){return new Promise(n=>{let i=()=>{t&&!t()||(this.off(e,i),n())};this.on(e,i)})}get size(){return this.#t.size}sizeBy(e){return this.#t.filter(e).length}get pending(){return this.#i}get isPaused(){return this.#o}};var ki=class{log;datastore;cache;cleanupInterval;provideValidity;syncQueue;started;cleaner;constructor(e,t={}){let{cacheSize:n,cleanupInterval:i,provideValidity:s}=t;this.log=e.logger.forComponent("libp2p:kad-dht:providers"),this.datastore=e.datastore,this.cleanupInterval=i??36e5,this.provideValidity=s??864e5,this.cache=(0,B4.default)(n??256),this.syncQueue=new Rn({concurrency:1}),this.started=!1}isStarted(){return this.started}async start(){this.started||(this.started=!0,this.cleaner=setInterval(()=>{this._cleanup().catch(e=>{this.log.error(e)})},this.cleanupInterval))}async stop(){this.started=!1,this.cleaner!=null&&(clearInterval(this.cleaner),this.cleaner=void 0)}async _cleanup(){await this.syncQueue.add(async()=>{let e=Date.now(),t=0,n=0,i=new Map,s=this.datastore.batch(),o=this.datastore.query({prefix:ns});for await(let a of o)try{let{cid:c,peerId:l}=S4(a.key),u=I4(a.value).getTime(),f=Date.now(),h=f-u,g=h>this.provideValidity;if(this.log("comparing: %d - %d = %d > %d %s",f,u,h,this.provideValidity,g?"(expired)":""),g){n++,s.delete(a.key);let y=i.get(c)??new Set;y.add(l),i.set(c,y)}t++}catch(c){this.log.error(c.message)}i.size>0?(this.log("deleting %d / %d entries",n,t),await s.commit()):this.log("nothing to delete");for(let[a,c]of i){let l=Nn(a),u=this.cache.get(l);if(u!=null){for(let f of c)u.delete(f);u.size===0?this.cache.remove(l):this.cache.set(l,u)}}this.log("Cleanup successful (%dms)",Date.now()-e)})}async _getProvidersMap(e){let t=Nn(e),n=this.cache.get(t);return n==null&&(n=await W8(this.datastore,e),this.cache.set(t,n)),n}async addProvider(e,t){await this.syncQueue.add(async()=>{this.log("%p provides %s",t,e);let n=await this._getProvidersMap(e);this.log("loaded %s provs",n.size);let i=new Date;n.set(t.toString(),i);let s=Nn(e);this.cache.set(s,n),await Z8(this.datastore,e,t,i)})}async getProviders(e){return this.syncQueue.add(async()=>(this.log("get providers for %s",e),[...(await this._getProvidersMap(e)).keys()].map(n=>F3(n))),{throwOnTimeout:!0})}};function Nn(r){let e=typeof r=="string"?r:C(r.multihash.bytes,"base32");return`${ns}/${e}`}async function Z8(r,e,t,n){let i=[Nn(e),"/",t.toString()].join(""),s=new Dr(i),o=He(n.getTime());await r.put(s,o)}function S4(r){let e=r.toString().split("/");if(e.length!==5)throw new Error(`incorrectly formatted provider entry key in datastore: ${r.toString()}`);return{cid:e[3],peerId:e[4]}}async function W8(r,e){let t=new Map,n=r.query({prefix:Nn(e)});for await(let i of n){let{peerId:s}=S4(i.key);t.set(s,I4(i.value))}return t}function I4(r){return new Date(Me(r))}var t2=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=t??"ABORT_ERR"}};async function Ti(r,e,t,n){let i=new t2(n?.errorMessage,n?.errorCode);return t?.aborted===!0?Promise.reject(i):new Promise((s,o)=>{function a(){t?.removeEventListener("abort",u),r.removeEventListener(e,c),n?.errorEvent!=null&&r.removeEventListener(n.errorEvent,l)}let c=f=>{try{if(n?.filter?.(f)===!1)return}catch(h){a(),o(h);return}a(),s(f)},l=f=>{a(),o(f.detail)},u=()=>{a(),o(i)};t?.addEventListener("abort",u),r.addEventListener(e,c),n?.errorEvent!=null&&r.addEventListener(n.errorEvent,l)})}var Ri=class{deferred;signal;constructor(e){this.signal=e,this.deferred=ie(),this.onAbort=this.onAbort.bind(this),this.signal?.addEventListener("abort",this.onAbort)}onAbort(){this.deferred.reject(this.signal?.reason??new ft)}cleanup(){this.signal?.removeEventListener("abort",this.onAbort)}};function Q8(){return`${parseInt(String(Math.random()*1e9),10).toString()}${Date.now()}`}var Ni=class{id;fn;options;recipients;status;timeline;controller;constructor(e,t){this.id=Q8(),this.status="queued",this.fn=e,this.options=t,this.recipients=[],this.timeline={created:Date.now()},this.controller=new AbortController,ye(1/0,this.controller.signal),this.onAbort=this.onAbort.bind(this)}abort(e){this.controller.abort(e)}onAbort(){this.recipients.reduce((t,n)=>t&&n.signal?.aborted===!0,!0)&&(this.controller.abort(new ft),this.cleanup())}async join(e={}){let t=new Ri(e.signal);return this.recipients.push(t),e.signal?.addEventListener("abort",this.onAbort),t.deferred.promise}async run(){this.status="running",this.timeline.started=Date.now();try{this.controller.signal.throwIfAborted();let e=await Vr(this.fn({...this.options??{},signal:this.controller.signal}),this.controller.signal);this.recipients.forEach(t=>{t.deferred.resolve(e)}),this.status="complete"}catch(e){this.recipients.forEach(t=>{t.deferred.reject(e)}),this.status="errored"}finally{this.timeline.finished=Date.now(),this.cleanup()}}cleanup(){this.recipients.forEach(e=>{e.cleanup(),e.signal?.removeEventListener("abort",this.onAbort)})}};var Kr=class extends Pe{concurrency;queue;pending;sort;constructor(e={}){super(),this.concurrency=e.concurrency??Number.POSITIVE_INFINITY,this.pending=0,e.metricName!=null&&e.metrics?.registerMetricGroup(e.metricName,{calculate:()=>({size:this.queue.length,running:this.pending,queued:this.queue.length-this.pending})}),this.sort=e.sort,this.queue=[]}tryToStartAnother(){if(this.size===0)return queueMicrotask(()=>{this.safeDispatchEvent("empty")}),this.running===0&&queueMicrotask(()=>{this.safeDispatchEvent("idle")}),!1;if(this.pending<this.concurrency){let e;for(let t of this.queue)if(t.status==="queued"){e=t;break}return e==null?!1:(this.safeDispatchEvent("active"),this.pending++,e.run().finally(()=>{for(let t=0;t<this.queue.length;t++)if(this.queue[t]===e){this.queue.splice(t,1);break}this.pending--,this.tryToStartAnother(),this.safeDispatchEvent("next")}),!0)}return!1}enqueue(e){this.queue.push(e),this.sort!=null&&this.queue.sort(this.sort)}async add(e,t){t?.signal?.throwIfAborted();let n=new Ni(e,t);return this.enqueue(n),this.safeDispatchEvent("add"),this.tryToStartAnother(),n.join(t).then(i=>(this.safeDispatchEvent("completed",{detail:i}),this.safeDispatchEvent("success",{detail:{job:n,result:i}}),i)).catch(i=>{if(n.status==="queued"){for(let s=0;s<this.queue.length;s++)if(this.queue[s]===n){this.queue.splice(s,1);break}}throw this.safeDispatchEvent("error",{detail:i}),this.safeDispatchEvent("failure",{detail:{job:n,error:i}}),i})}clear(){this.queue.splice(0,this.queue.length)}abort(){this.queue.forEach(e=>{e.abort(new ft)}),this.clear()}async onEmpty(e){this.size!==0&&await Ti(this,"empty",e?.signal)}async onSizeLessThan(e,t){this.size<e||await Ti(this,"next",t?.signal,{filter:()=>this.size<e})}async onIdle(e){this.pending===0&&this.size===0||await Ti(this,"idle",e?.signal)}get size(){return this.queue.length}get queued(){return this.queue.length-this.pending}get running(){return this.pending}async*toGenerator(e){e?.signal?.throwIfAborted();let t=yr({objectMode:!0}),n=c=>{c!=null?this.abort():this.clear(),t.end(c)},i=c=>{c.detail!=null&&t.push(c.detail)},s=c=>{n(c.detail)},o=()=>{n()},a=()=>{n(new ft("Queue aborted"))};this.addEventListener("completed",i),this.addEventListener("error",s),this.addEventListener("idle",o),e?.signal?.addEventListener("abort",a);try{yield*t}finally{this.removeEventListener("completed",i),this.removeEventListener("error",s),this.removeEventListener("idle",o),e?.signal?.removeEventListener("abort",a),n()}}};async function*k4(r){let{key:e,startingPeer:t,ourPeerId:n,signal:i,query:s,alpha:o,pathIndex:a,numPaths:c,queryFuncTimeout:l,log:u,peersSeen:f,connectionManager:h}=r,g=new Kr({concurrency:o,sort:(d,w)=>Fr(d.options.distance,w.options.distance)}),y=await zt(e);function p(d,w){if(d==null)return;f.add(d);let v=et(w,y);g.add(async()=>{let m=[i];l!=null&&m.push(AbortSignal.timeout(l));let A=jt(m);ye(1/0,A);try{for await(let R of s({key:e,peer:d,signal:A,pathIndex:a,numPaths:c})){if(A.aborted)return;if(R.name==="PEER_RESPONSE")for(let T of R.closer){if(f.has(T.id)){u("already seen %p in query",T.id);continue}if(n.equals(T.id)){u("not querying ourselves");continue}if(!await h.isDialable(T.multiaddrs)){u("not querying undialable peer");continue}let I=await ze(T.id),k=et(I,y);if(Fr(k,v)!==-1){u("skipping %p as they are not closer to %b than %p",T.id,e,d);continue}u("querying closer peer %p",T.id),p(T.id,I)}g.safeDispatchEvent("completed",{detail:R})}}catch(R){if(!i.aborted)return Ve({from:d,error:R},r)}finally{A.clear()}},{distance:v}).catch(m=>{u.error(m)})}p(t,await ze(t));try{for await(let d of g.toGenerator({signal:i}))d!=null&&(yield d)}catch(d){throw i.aborted?new jn("Query aborted"):d}}var Li=class{disjointPaths;alpha;shutDownController;running;queries;logger;peerId;connectionManager;routingTable;initialQuerySelfHasRun;logPrefix;metrics;constructor(e,t){let{disjointPaths:n=20,alpha:i=3,logPrefix:s}=t;this.logPrefix=s,this.disjointPaths=n??20,this.running=!1,this.alpha=i??3,this.queries=0,this.initialQuerySelfHasRun=t.initialQuerySelfHasRun,this.routingTable=t.routingTable,this.logger=e.logger,this.peerId=e.peerId,this.connectionManager=e.connectionManager,e.metrics!=null&&(this.metrics={runningQueries:e.metrics.registerMetric(`${s.replaceAll(":","_")}_running_queries`),queryTime:e.metrics.registerMetric(`${s.replaceAll(":","_")}_query_time_seconds`)}),this.shutDownController=new AbortController,ye(1/0,this.shutDownController.signal)}isStarted(){return this.running}async start(){this.running=!0,this.shutDownController=new AbortController,ye(1/0,this.shutDownController.signal)}async stop(){this.running=!1,this.shutDownController.abort()}async*run(e,t,n={}){if(!this.running)throw new Error("QueryManager not started");let i=this.metrics?.queryTime.timer();if(n.signal==null){let u=AbortSignal.timeout(18e4);ye(1/0,u),n={...n,signal:u}}let s=new AbortController,o=jt([this.shutDownController.signal,s.signal,n.signal]);ye(1/0,o,s.signal);let a=this.logger.forComponent(`${this.logPrefix}:query:`+C(e,"base58btc")),c=Date.now(),l=!1;try{n.isSelfQuery!==!0&&this.initialQuerySelfHasRun!=null&&(a("waiting for initial query-self query before continuing"),await Vr(this.initialQuerySelfHasRun.promise,o),this.initialQuerySelfHasRun=void 0),a("query:start"),this.queries++,this.metrics?.runningQueries.update(this.queries);let u=await zt(e),f=this.routingTable.closestPeers(u),h=f.slice(0,Math.min(this.disjointPaths,f.length));if(f.length===0){a.error("Running query with no peers");return}let g=new lt,y=h.map((p,d)=>k4({key:e,startingPeer:p,ourPeerId:this.peerId,signal:o,query:t,pathIndex:d,numPaths:h.length,alpha:this.alpha,queryFuncTimeout:n.queryFuncTimeout,log:a,peersSeen:g,onProgress:n.onProgress,connectionManager:this.connectionManager}));for await(let p of Gn(...y)){if(p.name==="QUERY_ERROR"&&a.error("query error",p.error),p.name==="PEER_RESPONSE")for(let d of[...p.closer,...p.providers])await this.connectionManager.isDialable(d.multiaddrs)&&await this.routingTable.add(d.id);yield p}l=!0}catch(u){if(!(!this.running&&u.name==="QueryAbortedError"))throw u}finally{l||(a("query exited early"),s.abort()),o.clear(),this.queries--,this.metrics?.runningQueries.update(this.queries),i?.(),a("query:done in %dms",Date.now()-c)}}};function Y8(r){return r[Symbol.asyncIterator]!=null}function X8(r){if(Y8(r))return(async()=>{let e=0;for await(let t of r)e++;return e})();{let e=0;for(let t of r)e++;return e}}var Pi=X8;function J8(r){return r[Symbol.asyncIterator]!=null}function e7(r,e){return J8(r)?async function*(){let t=0;if(!(e<1)){for await(let n of r)if(yield n,t++,t===e)return}}():function*(){let t=0;if(!(e<1)){for(let n of r)if(yield n,t++,t===e)return}}()}var R4=e7;var t7=r=>{let e=r.addEventListener||r.on||r.addListener,t=r.removeEventListener||r.off||r.removeListener;if(!e||!t)throw new TypeError("Emitter is not compatible");return{addListener:e.bind(r),removeListener:t.bind(r)}};function r7(r,e,t){let n,i=new Promise((s,o)=>{if(t={rejectionEvents:["error"],multiArgs:!1,resolveImmediately:!1,...t},!(t.count>=0&&(t.count===Number.POSITIVE_INFINITY||Number.isInteger(t.count))))throw new TypeError("The `count` option should be at least 0 or more");t.signal?.throwIfAborted();let a=[e].flat(),c=[],{addListener:l,removeListener:u}=t7(r),f=(...g)=>{let y=t.multiArgs?g:g[0];t.filter&&!t.filter(y)||(c.push(y),t.count===c.length&&(n(),s(c)))},h=g=>{n(),o(g)};n=()=>{for(let g of a)u(g,f);for(let g of t.rejectionEvents)u(g,h)};for(let g of a)l(g,f);for(let g of t.rejectionEvents)l(g,h);t.signal&&t.signal.addEventListener("abort",()=>{h(t.signal.reason)},{once:!0}),t.resolveImmediately&&s(c)});if(i.cancel=n,typeof t.timeout=="number"){let s=kn(i,{milliseconds:t.timeout});return s.cancel=n,s}return i}function N4(r,e,t){typeof t=="function"&&(t={filter:t}),t={...t,count:1,resolveImmediately:!1};let n=r7(r,e,t),i=n.then(s=>s[0]);return i.cancel=n.cancel,i}var Ci=class{log;peerId;peerRouting;routingTable;count;interval;initialInterval;queryTimeout;started;timeoutId;controller;initialQuerySelfHasRun;querySelfPromise;constructor(e,t){let{peerRouting:n,logPrefix:i,count:s,interval:o,queryTimeout:a,routingTable:c}=t;this.peerId=e.peerId,this.log=e.logger.forComponent(`${i}:query-self`),this.started=!1,this.peerRouting=n,this.routingTable=c,this.count=s??20,this.interval=o??3e5,this.initialInterval=t.initialInterval??1e3,this.queryTimeout=a??5e3,this.initialQuerySelfHasRun=t.initialQuerySelfHasRun}isStarted(){return this.started}start(){this.started||(this.started=!0,clearTimeout(this.timeoutId),this.timeoutId=setTimeout(()=>{this.querySelf().catch(e=>{this.log.error("error running self-query",e)})},this.initialInterval))}stop(){this.started=!1,this.timeoutId!=null&&clearTimeout(this.timeoutId),this.controller!=null&&this.controller.abort()}async querySelf(){if(!this.started){this.log("skip self-query because we are not started");return}if(this.querySelfPromise!=null)return this.log("joining existing self query"),this.querySelfPromise.promise;if(this.querySelfPromise=ie(),this.started){this.controller=new AbortController;let e=AbortSignal.timeout(this.queryTimeout),t=jt([this.controller.signal,e]);ye(1/0,t,this.controller.signal,e);try{this.routingTable.size===0&&(this.log("routing table was empty, waiting for some peers before running query"),await N4(this.routingTable,"peer:add",{signal:t})),this.log("run self-query, look for %d peers timing out after %dms",this.count,this.queryTimeout);let n=Date.now(),i=await Pt(this.peerRouting.getClosestPeers(this.peerId.toMultihash().bytes,{signal:t,isSelfQuery:!0}),s=>R4(s,this.count),async s=>Pi(s));this.log("self-query found %d peers in %dms",i,Date.now()-n)}catch(n){this.log.error("self-query error",n)}finally{t.clear(),this.initialQuerySelfHasRun!=null&&(this.initialQuerySelfHasRun.resolve(),this.initialQuerySelfHasRun=void 0)}}this.querySelfPromise.resolve(),this.querySelfPromise=void 0,this.started&&(this.timeoutId=setTimeout(()=>{this.querySelf().catch(e=>{this.log.error("error running self-query",e)})},this.interval))}};var _i=class extends Kr{has(e){return this.find(e)!=null}find(e){return this.queue.find(t=>e.equals(t.options.peerId))}};function n7(r,e){if(r===e)return!0;if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;++t)if(r[t]!==e[t])return!1;return!0}function L4(r,e){if(!(e instanceof Uint8Array))throw new TypeError(r+" is not a Uint8Array");if(e.byteLength!==32)throw new TypeError(r+" had incorrect length")}function Ln(r){return Array.isArray(r?.peers)}var Ui=class extends Pe{root;localPeer;prefixLength;splitThreshold;kBucketSize;numberOfNodesToPing;constructor(e){super(),this.localPeer=e.localPeer,this.prefixLength=e.prefixLength,this.kBucketSize=e.kBucketSize??Pn,this.splitThreshold=e.splitThreshold??this.kBucketSize,this.numberOfNodesToPing=e.numberOfNodesToPing??3,L4("options.localPeer.kadId",e.localPeer.kadId),this.root={prefix:"",depth:0,peers:[]}}add(e){L4("peer.kadId",e?.kadId);let t=this._determineBucket(e.kadId);if(!(this._indexOf(t,e.kadId)>-1)){if(t.peers.length===this.splitThreshold&&t.depth<this.prefixLength){this._split(t),this.add(e);return}if(t.peers.length<this.kBucketSize){t.peers.push(e),this.safeDispatchEvent("added",{detail:e});return}this.safeDispatchEvent("ping",{detail:{oldContacts:t.peers.slice(0,this.numberOfNodesToPing),newContact:e}})}}*closest(e,t=this.kBucketSize){let n=new Hr(e,t);for(let i of this.toIterable())n.addWitKadId({id:i.peerId,multiaddrs:[]},i.kadId);yield*gr(n.peers,i=>i.id)}count(){function e(t){if(Ln(t))return t.peers.length;let n=0;return t.left!=null&&(n+=e(t.left)),t.right!=null&&(n+=e(t.right)),n}return e(this.root)}get(e){let t=this._determineBucket(e),n=this._indexOf(t,e);return t.peers[n]}remove(e){let t=this._determineBucket(e),n=this._indexOf(t,e);if(n>-1){let i=t.peers.splice(n,1)[0];this.safeDispatchEvent("removed",{detail:i})}}*toIterable(){function*e(t){if(Ln(t)){yield*t.peers;return}yield*e(t.left),yield*e(t.right)}yield*e(this.root)}distance(e,t){return BigInt("0x"+C(et(e,t),"base16"))}_determineBucket(e){let n=C(e,"base2").substring(0,this.prefixLength);function i(s,o=0){return Ln(s)?s:n[o]==="0"?i(s.left,o+1):i(s.right,o+1)}return i(this.root)}_indexOf(e,t){return e.peers.findIndex(n=>n7(n.kadId,t))}_split(e){let t=e.depth+1,n={prefix:"0",depth:t,peers:[]},i={prefix:"1",depth:t,peers:[]};for(let s of e.peers)C(s.kadId,"base2")[t]==="0"?n.peers.push(s):i.peers.push(s);delete e.peers,e.left=n,e.right=i}};var i7="kad-close",s7=50,Pn=20,o7=32,a7=1e4,c7=10,Di=class extends Pe{kBucketSize;kb;pingQueue;log;components;prefixLength;splitThreshold;pingTimeout;pingConcurrency;running;protocol;tagName;tagValue;metrics;constructor(e,t){super(),this.components=e,this.log=e.logger.forComponent(`${t.logPrefix}:routing-table`),this.kBucketSize=t.kBucketSize??Pn,this.pingTimeout=t.pingTimeout??a7,this.pingConcurrency=t.pingConcurrency??c7,this.running=!1,this.protocol=t.protocol,this.tagName=t.tagName??i7,this.tagValue=t.tagValue??s7,this.prefixLength=t.prefixLength??o7,this.splitThreshold=t.splitThreshold??Pn,this.pingQueue=new _i({concurrency:this.pingConcurrency,metricName:`${t.logPrefix.replaceAll(":","_")}_ping_queue`,metrics:this.components.metrics}),this.pingQueue.addEventListener("error",n=>{this.log.error("error pinging peer",n.detail)}),this.components.metrics!=null&&(this.metrics={routingTableSize:this.components.metrics.registerMetric(`${t.logPrefix.replaceAll(":","_")}_routing_table_size`),routingTableKadBucketTotal:this.components.metrics.registerMetric(`${t.logPrefix.replaceAll(":","_")}_routing_table_kad_bucket_total`),routingTableKadBucketAverageOccupancy:this.components.metrics.registerMetric(`${t.logPrefix.replaceAll(":","_")}_routing_table_kad_bucket_average_occupancy`),routingTableKadBucketMaxDepth:this.components.metrics.registerMetric(`${t.logPrefix.replaceAll(":","_")}_routing_table_kad_bucket_max_depth`)})}isStarted(){return this.running}async start(){this.running=!0;let e=new Ui({localPeer:{kadId:await ze(this.components.peerId),peerId:this.components.peerId},kBucketSize:this.kBucketSize,prefixLength:this.prefixLength,splitThreshold:this.splitThreshold,numberOfNodesToPing:1});this.kb=e,e.addEventListener("ping",n=>{this._onPing(n).catch(i=>{this.log.error("could not process k-bucket ping event",i)})});let t=0;for(let n of await this.components.peerStore.all())if(n.protocols.includes(this.protocol)){let i=await ze(n.id);this.kb.add({kadId:i,peerId:n.id}),t++}this.log("added %d peer store peers to the routing table",t),this._tagPeers(e)}async stop(){this.running=!1,this.pingQueue.clear(),this.kb=void 0}_tagPeers(e){let t=new lt,n=Y3(()=>{let i=new lt(e.closest(e.localPeer.kadId,Pn)),s=i.difference(t),o=t.difference(i);Promise.resolve().then(async()=>{for(let a of s)await this.components.peerStore.merge(a,{tags:{[this.tagName]:{value:this.tagValue}}});for(let a of o)await this.components.peerStore.merge(a,{tags:{[this.tagName]:void 0}})}).catch(a=>{this.log.error("Could not update peer tags",a)}),t=i});e.addEventListener("added",i=>{n(),this.safeDispatchEvent("peer:add",{detail:i.detail.peerId})}),e.addEventListener("removed",i=>{n(),this.safeDispatchEvent("peer:remove",{detail:i.detail.peerId})})}async _onPing(e){if(!this.running)return;let{oldContacts:t,newContact:n}=e.detail,s=(await Promise.all(t.map(async o=>{let a=this.pingQueue.find(o.peerId);return a!=null?a.join():this.pingQueue.add(async()=>{let c;try{let l={signal:AbortSignal.timeout(this.pingTimeout)};this.log("pinging old contact %p",o.peerId),c=await(await this.components.connectionManager.openConnection(o.peerId,l)).newStream(this.protocol,l);let f=Sn(c);await f.write({type:M.PING},Ke,l);let h=await f.read(Ke,l);if(await f.unwrap().close(),h.type!==M.PING)throw new ve(`Incorrect message type received, expected PING got ${h.type}`);return!0}catch(l){return this.running&&this.kb!=null&&(this.log.error("could not ping peer %p",o.peerId,l),this.log("evicting old contact after ping failed %p",o.peerId),this.kb.remove(o.kadId)),c?.abort(l),!1}finally{this.metrics?.routingTableSize.update(this.size)}},{peerId:o.peerId})}))).filter(o=>o).length;this.running&&s<t.length&&this.kb!=null&&(this.log("adding new contact %p",n.peerId),this.kb.add(n))}get size(){return this.kb==null?0:this.kb.count()}async find(e){let t=await ze(e);return this.kb?.get(t)?.peerId}closestPeer(e){let t=this.closestPeers(e,1);if(t.length>0)return t[0]}closestPeers(e,t=this.kBucketSize){return this.kb==null?[]:[...this.kb.closest(e,t)]}async add(e){if(this.kb==null)throw new Error("RoutingTable is not started");let t=await ze(e);this.kb.add({kadId:t,peerId:e}),this.log("added %p with kad id %b",e,t),this.updateMetrics()}async remove(e){if(this.kb==null)throw new Error("RoutingTable is not started");let t=await ze(e);this.kb.remove(t),this.updateMetrics()}updateMetrics(){if(this.metrics==null||this.kb==null)return;let e=0,t=0,n=0;function i(s){if(Ln(s)){s.depth>n&&(n=s.depth),t++,e+=s.peers.length;return}i(s.left),i(s.right)}i(this.kb.root),this.metrics.routingTableSize.update(e),this.metrics.routingTableKadBucketTotal.update(t),this.metrics.routingTableKadBucketAverageOccupancy.update(Math.round(e/t)),this.metrics.routingTableKadBucketMaxDepth.update(n)}};var P4=[77591,22417,43971,28421,740,29829,71467,228973,196661,78537,27689,36431,44415,14362,19456,106025,96308,2882,49509,21149,87173,131409,75844,23676,121838,30291,17492,2953,7564,110620,129477,127283,53113,72417,165166,109690,21200,102125,24049,71504,90342,25307,72039,26812,26715,32264,133800,71161,88956,171987,51779,24425,16671,30251,186294,247761,14202,2121,8465,35024,4876,85917,169730,3638,256836,96184,943,18678,6583,52907,35807,112254,214097,18796,11595,9243,23554,887,268203,382004,24590,111335,11625,16619,29039,102425,69006,97976,92362,32552,63717,41433,128974,137630,59943,10019,13986,35430,33665,108037,43799,43280,38195,29078,58629,18265,14425,46832,235538,40830,77881,110717,58937,3463,325358,51300,47623,117252,19007,10170,20540,91237,294813,4951,79841,56232,36270,128547,69209,66275,100156,32063,73531,34439,80937,28892,44466,88595,216307,32583,49620,16605,82127,45807,21630,78726,20235,40163,111007,96926,5567,72083,21665,58844,39419,179767,48328,42662,51550,5251,37811,49608,81056,50854,55513,20922,18891,197409,164656,32593,71449,220474,58919,85682,67854,13758,35066,3565,61905,214793,119572,141419,21504,10302,27354,67003,46131,32668,15165,64871,34450,17821,2757,11452,34189,5160,12257,85523,560,53385,65887,119549,135620,312353,115979,122356,10867,193231,124537,54783,90675,120791,4715,142253,50943,17271,43358,25331,4917,120566,34580,12878,33786,160528,32523,4869,301307,104817,81491,23276,8832,97911,31265,52065,7998,49622,9715,43998,34091,84587,20664,69041,29419,53205,10838,58288,116145,6185,5154,141795,35924,21307,144738,43730,12085,8279,10002,119,133779,199668,72938,31768,39176,67875,38453,9700,44144,4121,116048,41733,12868,82669,92308,128,34262,11332,7712,90764,36141,13553,71312,77470,117314,96549,49135,23602,54468,28605,6327,62308,17171,67531,21319,14105,894,107722,46157,8503,51069,100472,45138,15246,14577,35609,191464,1757,13364,161349,32067,91705,81144,52339,5408,91066,21983,14157,100545,4372,26630,129112,1423,29676,213626,4397,88436,99190,6877,49958,26122,114348,60661,29818,293118,50042,179738,16400,163423,89627,31040,43973,36638,45952,5153,1894,109322,1898,134021,12402,112077,68309,190269,69866,31938,107383,11522,105232,11248,14868,39852,71707,186525,16530,38162,106212,11700,5130,16608,26998,59586,108399,230033,43683,48135,82179,2073,5015,196684,189293,16378,23452,8301,35640,11632,214551,29240,57644,33137,91949,55157,52384,117313,5090,17717,89668,49363,82238,241035,66216,29066,184088,97206,62820,26595,4241,135635,173672,8202,459,71355,146294,29587,3008,135385,141203,14803,6634,45094,69362,50925,546,51884,62011,83296,234584,44515,56050,89476,87751,19373,12691,149923,19794,13833,35846,87557,58339,2884,19145,25647,12224,11024,77338,64608,122297,53025,7205,36189,36294,170779,21750,7739,173883,75192,35664,224240,113121,30181,26267,27036,117827,92015,106516,55628,203549,67949,60462,60844,35911,20457,1820,920,19773,8738,73173,181993,38521,98254,76257,46008,92796,5384,26868,151566,22124,2411,15919,186872,180021,28099,152961,78811,80237,62352,102653,74259,184890,16792,123702,224945,29940,19512,75283,14059,112691,92811,233329,20411,138569,53341,109802,50600,134528,66747,5529,166531,31578,64732,67189,1596,126357,967,167999,206598,109752,119431,207825,78791,91938,10301,27311,24233,252343,28831,32812,66002,112267,90895,8786,8095,16824,22866,21813,60507,174833,19549,130985,117051,52110,6938,81923,123864,38061,919,18680,53534,46739,112893,161529,85429,26761,11900,81121,91968,15390,217947,56524,1713,6654,37089,85630,138866,61850,16491,75577,16884,98296,73523,6140,44645,6062,36366,29844,57946,37932,42472,5266,20834,19309,33753,127182,134259,35810,41805,45878,312001,14881,47757,49251,120050,44252,3708,25856,107864,120347,1228,36550,41682,34496,47025,8393,173365,246526,12894,161607,35670,90785,126572,2095,124731,157033,58694,554,12786,9642,4817,16136,47864,174698,66992,4639,69284,10625,40710,27763,51738,30404,264105,137904,109882,52487,42824,57514,2740,10479,146799,107390,16586,88038,174951,9410,16185,44158,5568,40658,46108,12763,97385,26175,108859,664,230732,67470,46663,14395,50750,141320,93140,15361,47997,55784,6791,307840,118569,107326,18056,58281,260415,54691,8790,73332,45633,7511,45674,143373,14031,11799,94491,35646,96544,14560,26049,32983,25791,83814,42094,231370,63955,139212,2359,169908,3108,183486,105867,28197,32941,124968,26402,88267,149768,23053,3078,19091,52924,25383,19209,111548,97361,3959,24880,235061,9099,24921,161254,151405,20508,7159,34381,20133,11434,74036,19974,34769,36585,1076,22454,17354,38727,235160,111547,96454,117448,156940,91330,37299,7310,26915,117060,51369,22620,61861,322264,106850,111694,15091,2624,40345,300446,177064,1707,27389,54792,327783,132669,183543,59003,17744,20603,151134,106923,53084,71803,279424,319816,11579,21946,16728,38274,72711,5085,83391,88646,40159,25027,34680,10752,12988,54126,30365,18338,100445,230674,44874,84974,143877,123253,139372,28082,91477,144002,13096,219729,46016,50029,42377,14601,6660,58244,58978,23918,88206,113611,64452,17541,41032,10942,12021,49189,10978,40175,37156,10947,71709,106894,112538,57007,137486,150608,152719,40615,7746,279716,13101,19524,28708,40578,72320,1096,182051,94527,51275,22833,45164,81917,77519,48508,5421,140302,37845,149830,5587,27579,5357,428725,248187,6326,206760,39814,32585,89923,44341,288753,284443,96368,31201,94189,119504,20359,52073,103216,179,27934,32801,96035,34111,34309,101326,18198,20704,210266,37643,27880,141873,106e3,19414,56614,167714,66483,107885,86602,4379,20796,75467,4987,5017,118857,26003,34308,114428,29198,6686,29697,73632,3739,69795,16798,41504,7207,30722,21436,36735,28067,28545,3239,11221,36031,41889,100010,19247,317673,29495,174554,6424,129725,53845,94986,7955,59676,2604,191497,19735,102214,62954,23844,11872,179525,261436,34492,428,78404,142035,16747,17246,27578,37021,33672,57944,26056,135760,2369,61674,122066,31327,19374,157065,40553,130982,69619,71290,38855,72100,92903,95940,51422,165999,65713,57873,50726,7288,20272,2081,42326,22624,81120,57914,79352,19447,1684,72302,11774,302559,161481,96396,13692,414988,3721,79066,56627,46883,21150,11747,12184,5856,113458,176117,84416,52079,27933,3354,59765,141359,2212,216309,2555,23458,196722,142463,45701,44548,28798,19418,215,29916,9396,10574,114226,84475,13520,18694,34056,4524,90302,62930,13539,19407,77209,7728,38088,9535,2263,23875,183945,17750,26274,67172,10585,28042,22199,7478,51331,66030,26774,192929,31434,25850,50197,52926,178158,4679,181256,70184,229600,9959,105594,72158,73974,2726,35085,78087,23284,35568,51713,155676,5401,27254,11966,17569,223253,71993,103357,111477,55722,30504,26034,46774,35392,36285,214814,41143,163465,1051,16094,81044,6636,76489,179102,20712,39178,35683,125177,54219,30617,52994,25324,50123,2543,87529,58995,10688,125199,12388,60158,125481,131646,7642,133350,65874,3438,97277,101450,10075,56344,116821,50778,60547,98016,106135,13859,14255,16300,77373,173521,8285,45932,37426,4054,114295,55947,7703,39114,52,51119,128135,19714,60715,9554,50492,88180,2823,118271,52993,122625,97919,23859,37895,25040,33614,32102,20431,3577,9275,15686,43031,157741,110358,1884,40291,125391,13736,5008,64881,87336,77381,70711,43032,49155,118587,70494,4318,10168,30126,12580,10524,280104,104001,145413,2862,84140,6603,106005,13566,12780,11251,42830,571,179910,82443,13146,469,42714,32591,265217,424024,92553,54721,134100,6007,15242,114681,59030,16718,85465,200214,85982,55174,165013,23493,56964,82529,109150,32706,27568,82442,5350,14976,13165,44890,60021,21343,33978,17264,4655,22328,27819,75730,16567,55483,14510,17926,45827,150609,3704,7385,272531,161543,76904,122163,52405,2039,19165,41623,14423,228354,3369,176360,85491,7122,35789,303724,4465,13628,2233,55311,118771,20713,10006,221519,45115,71021,35650,29775,7337,10864,20665,21142,1746,15080,1624,32449,10905,105743,229797,7701,3940,22997,178467,57208,389057,39683,59403,63344,63125,54847,69691,18336,56448,3362,37202,18282,29648,138224,35867,10495,5911,28814,26653,31514,176702,26550,45621,11734,4525,40543,73944,121080,27858,155561,14887,44670,30742,8796,107455,113472,56369,75581,183777,240095,133699,153299,8768,160464,26058,49078,103971,21875,71486,44888,17156,9678,89541,123019,102337,3972,83930,21245,87852,109660,287918,183019,686,10100,39177,283941,11274,24736,26793,26214,25995,77011,141580,4070,23742,46285,46632,30700,26669,19056,35951,115575,174034,56097,35463,87425,24575,44245,38701,82317,85922,281616,100333,147697,61503,7730,84330,8530,59917,61597,17173,9092,32658,90288,193136,39023,20381,56654,31132,7779,1919,1375,117128,30819,11169,40938,23935,115201,101155,151034,4835,11231,74550,89388,59951,91704,107312,167882,115062,12732,72738,88703,464019,158267,57995,60496,737,14371,123867,4174,243339,159946,7568,16025,134556,110916,38103,191,80226,88794,29688,27230,10454,76308,57647,77409,113483,66864,14745,19808,12023,46583,84805,16015,17102,2231,20611,3547,95740,250131,34559,108894,8498,15853,159169,148920,20942,2813,93160,45188,210613,45531,52587,149062,39782,28194,57849,60965,84954,89766,84453,100927,16501,27658,165311,103841,54192,207341,19558,20084,319622,5672,205467,98462,61849,36279,13609,147177,24726,165015,209489,59591,31157,6551,117580,75060,141146,277310,21072,22023,106474,63041,137443,122965,68371,5383,42146,98961,113467,30863,23794,4843,99630,30392,82679,13699,241612,33601,93146,24319,18643,32155,95669,40440,15333,34089,67799,142144,58245,38633,114531,117400,77861,188726,5507,2568,8853,10987,107222,2663,2421,11530,13345,30075,41785,118661,104786,17459,12490,16281,71936,193555,17431,5944,71758,26485,77317,20803,367167,158,7362,93430,11735,172445,46002,11532,54482,930,62911,2235,23004,179236,4764,101859,208113,22477,55163,95579,14098,67320,162556,90709,156949,3826,57492,4025,34092,87442,104565,6718,186015,28214,14209,10039,107186,233912,58877,81637,55265,39828,6194,145813,50831,105849,4974,88319,122296,10272,197216,95714,51540,72418,23324,91555,8743,140452,250249,51666,34124,7229,38592,129641,78169,174242,22464,149964,51450,14034,10026,95376,26190,120062,14401,8700,265,31386,143573,7203,229889,61567,4227,140981,2466,72052,10787,10062,30958,6099,38471,30103,23202,208101,70847,467,58934,32271,32984,36637,24107,30771,17109,73353,13650,2098,157040,67366,66904,106018,265380,107238,18535,44025,32681,144983,62505,91295,56120,3082,77508,10322,63023,36700,81885,224127,16721,45023,239261,111272,13852,7866,149243,204199,32309,22084,42029,38316,126644,104973,14406,43454,67322,61310,15789,40285,24026,181047,6301,70927,23319,115823,27248,66693,115875,278566,63007,146844,56841,59007,87368,180001,22370,42114,80605,12022,10374,308,25079,14689,12618,63368,7936,264973,212291,136713,95999,105801,18965,32075,48700,52230,35119,96912,32992,8586,16606,101333,101812,14969,39930,759,193090,27387,42914,12937,5058,62646,64528,38624,25743,37502,3716,4435,30352,178687,26461,132611,42002,138442,35833,59582,16345,8048,60319,49349,309,47800,49739,90482,26405,34470,63786,32479,85028,39866,47846,11649,23934,29466,2816,42864,31828,7410,74885,49632,47629,111801,90749,19536,18767,105764,59606,21223,10746,76298,22220,39408,7190,79654,64856,11602,82156,272765,17079,70089,245473,51813,184407,384678,1576,122249,5064,27481,6188,25790,74361,27541,318284,45430,31488,620,93579,45723,192118,22670,51913,4162,70244,35966,26397,16199,50899,209613,121702,287507,2993,36101,132229,67345,33062,76295,118628,78705,52316,34375,107083,107454,44863,127561,33964,3073,154010,190914,55967,39074,6272,31047,5550,41123,26154,98638,47110,19998,148091,50229,31329,59900,195442,19106,61347,73497,70015,682,45850,25776,38022,148951,6288,37411,232526,109277,27286,32342,9262,5220,16651,23175,46740,129438,78614,121925,66914,88710,127952,5563,21500,34521,10739,14863,191006,62956,17359,16749,67027,56284,69134,43301,35039,58883,54466,60823,404451,75743,59856,86979,7923,34273,83785,32142,7693,268986,197428,282681,17049,22346,22990,92245,107180,3357,37104,96724,49153,7683,31197,43267,82231,164276,23696,20848,188364,22309,24821,158707,1018,22514,70922,27792,45589,59709,10765,736,35218,63479,51987,24275,63588,55361,92929,81964,4658,20122,12330,44058,13065,311456,72224,8337,211229,38979,22590,138478,52757,32595,133600,8838,31549,94412,43391,90056,1585,94802,127271,6223,31889,137038,132910,2165,57616,230152,6080,10748,36737,74579,134062,50525,180532,119270,34556,76155,82394,52595,29258,31435,87820,67996,26943,183878,38007,2410,13526,180297,69856,3503,187396,167700,7838,16701,9199,56267,3661,37407,65994,23767,5708,62508,221700,67088,86978,46776,84434,32088,5612,9149,88244,21685,95151,46750,189612,2979,506311,2594,3628,40074,105039,78243,28523,6651,38058,71999,30992,12764,68261,108991,6165,26450,61961,13400,22426,7490,60890,109623,2070,12958,50355,67979,257096,7213,42578,52121,35716,65461,7516,124758,39268,302,64712,14977,1467,219452,2840,34229,11121,21602,19270,63574,8024,1532,17331,79839,78885,52029,180767,57957,6069,91265,61380,55767,8927,32881,287603,22149,35029,68876,6428,199567,46926,13412,104132,21434,366616,45060,110046,81924,128910,45886,52821,130416,29416,77342,21762,67329,121432,79924,11724,38625,81006,102033,28338,13326,3250,82056,82526,38212,21112,12382,111495,3263,7414,86274,93490,40844,30224,45212,24019,48411,71367,24941,76729,57776,3769,38114,202019,197745,31953,237533,33270,201580,255648,100798,44741,32241,98468,106931,10085,15090,170358,33154,66787,18819,69760,25061,234005,82660,6295,131975,16874,9076,4094,25005,17740,40908,19533,220019,44330,99792,50040,19619,13950,55228,24423,31253,95308,103177,184795,28590,82285,5059,3210,75525,49894,70007,56178,10580,36051,139681,21617,98736,3555,106306,164189,37352,63915,47824,24883,145530,61904,28444,11483,19837,145446,30420,112972,85939,11835,191233,2262,20705,58630,1753,148334,1197,144714,6887,11223,107667,60879,77914,4151,57417,81594,96681,169430,1784,20444,95138,254041,27038,596,7117,72808,13759,3353,126776,21074,55322,27081,36942,39547,139830,179275,4453,713,8722,71399,19204,25785,22794,23923,104114,11291,25458,102309,88396,75288,230440,206396,104551,58447,130857,37247,94734,31548,176529,226077,65159,20104,10096,66881,94191,237909,27109,37404,1520,27421,25220,113003,23423,24884,50585,6286,231877,150800,11789,3226,90004,60642,5053,202400,61442,132531,175329,57138,30116,103847,9973,75367,16452,32360,59119,21246,10191,164804,23305,61051,37348,154530,13214,5468,50403,66754,130976,50559,80515,14436,155492,84017,5472,43107,41240,2890,90431,70188,382,76234,48040,50211,281038,237007,32115,142178,1536,22761,96429,1811,31243,1679,49143,55209,17402,235054,61494,7462,77030,34925,87609,78002,9499,9027,73289,201078,101379,63544,27666,5469,10642,30029,49816,132979,95620,58086,351930,116300,2110,2043,30845,6154,11279,16727,4122,2277,27281,4971,3650,39060,61970,65951,39674,75686,38151,11370,130809,177895,32665,63725,122267,7857,39618,118483,44792,157755,178624,136994,24260,41308,22471,12404,21707,12486,30473,52781,50246,20247,39065,909,56825,103158,128603,31542,1089,41935,32744,12428,37963,84420,33134,72921,208449,42622,168151,127335,147107,46699,38216,12591,94342,85814,31423,24944,2605,87542,67473,192551,4496,56321,91819,17630,6300,256183,114569,202090,33209,35289,34897,24967,40520,43470,5344,10199,34810,14283,10381,10017,62923,49924,23233,64539,13051,35686,19698,11570,135555,120868,44924,87065,52318,52335,47586,140906,245885,109834,78668,9065,46990,25258,72022,61243,40838,4545,146387,10537,11557,17470,36930,68104,46711,24264,79401,81043,18225,120488,24746,84338,81652,28266,13776,21878,46973,1047,230465,73357,95777,24973,210160,62210,58404,110633,169651,6937,41870,9909,26822,191062,76553,27519,96256,239070,2478,205678,67955,58532,20601,50120,19148,78501,195724,110740,8249,109665,27446,30568,57631,31425,49752,32820,65504,50079,3663,102256,219898,23849,211315,14645,4359,91767,9528,12449,49366,7941,49763,107848,8930,27086,50686,9744,10447,81935,39513,46514,1670,29229,6172,22312,137280,97759,9806,14445,22976,56458,73391,34983,93760,174219,52573,33149,59747,2429,136277,75123,165263,91040,7446,57632,48633,97140,246081,84766,151684,79918,93268,120346,54059,54875,77858,32996,103590,45276,11968,19600,25849,17159,132907,42828,16817,4913,99462,103303,27395,5737,74184,20749,21160,14377,77062,131403,158735,10999,27799,77785,9320,34366,51593,61070,33746,47048,29268,36675,30262,53297,9832,82e3,20188,122292,39917,7331,18160,68301,185935,134830,15031,4935,10004,165845,185534,46923,30109,44134,122631,18874,22903,112790,26561,18549,348902,82871,140345,255565,135390,63556,103747,145055,179600,145662,296111,61661,211987,23952,52342,126343,48450,32919,44277,82185,9591,62139,205363,376969,394874,108461,18040,120885,14798,39863,16571,16794,58271,81025,55206,14640,118656,6361,44092,85970,6262,153863,108244,180200,72264,79947,38044,10050,5735,61221,80712,5471,115689,11391,11661,184257,20010,60116,30320,19327,134598,45455,27542,18004,125092,452272,1549,91523,46567,180063,156026,2608,11174,58848,37788,65907,80194,30490,5786,40775,119519,106241,11323,156297,8425,61495,2617,29675,2425,59886,112582,49142,59618,4863,50597,86710,50650,168632,27693,85641,83643,18993,25768,84284,28090,93592,36627,312804,43381,9887,9402,100931,97165,3311,173330,66805,28935,4963,184460,3201,78102,19126,21607,37496,24938,22615,16153,32862,134792,153318,61120,6067,2812,12826,12792,23825,37559,64662,202250,102694,155488,85881,149193,46233,65383,15521,106982,11358,176786,25752,39717,34208,24510,32464,77742,39371,72028,138229,60688,71386,102834,132477,2208,11548,63670,271279,28351,30338,38620,32491,99845,143885,152266,13252,2825,178663,108097,1775,78201,14897,113573,163346,62292,171129,22183,96598,38733,64971,166776,117445,9968,146393,44677,74867,20908,97328,12761,25656,26785,9148,112344,26115,99176,110121,22437,49547,6180,79320,5835,31392,43328,33377,75870,119860,69497,80273,7325,155219,43167,111173,28347,20222,3763,71752,55041,47252,14618,28088,15012,97805,194698,54636,2036,41349,6173,96604,61530,51859,43782,13361,24334,22668,24792,7070,23441,16789,3209,36211,208475,26242,32880,122181,182407,21444,31060,88459,29929,77907,12716,10934,97005,20599,31690,8403,58445,30303,22700,10336,86731,103115,337709,72556,46788,112566,47684,67089,53548,36874,56487,41387,125985,26893,40071,106683,73712,18787,40105,72992,67246,137276,50802,36790,70328,138827,22466,39263,183295,29858,50975,9322,57397,10654,24364,30383,55799,41600,23584,127295,296610,129078,143558,244131,86397,36049,1085,80677,3820,108139,5476,34767,24683,7758,13060,7239,131671,250593,59556,103392,29810,4188,252323,39404,116877,7651,43600,40338,13554,157253,39196,25978,144387,61211,234,50104,6129,10449,93777,9240,356378,274148,4439,72970,3724,147770,78680,62570,115877,40027,40547,36817,224392,64609,34795,165027,67440,2477,37206,23431,50754,164797,46018,94995,170982,27051,7957,22767,3674,27900,56419,18930,60701,41302,2692,84749,339721,61996,111094,80221,50129,1045,8153,62945,19202,8250,37208,37418,32560,79477,41106,88569,33963,36693,5892,30570,1581,66471,49647,11922,160717,29442,5643,114865,82962,95982,132098,22633,22838,94726,54556,28566,205039,162340,33216,16849,35847,221339,94851,26533,71469,1805,3804,12935,45483,71020,36310,65381,192960,34240,35165,59773,1248,46954,155332,96864,4246,388800,16129,57133,74592,44807,442014,38203,42574,80818,91592,26377,36424,65760,977,77387,22628,147610,28018,30561,98454,6969,119628,63648,18170,36854,26601,64018,22027,37279,51395,152934,21153,9430,58760,194742,5330,55115,34158,28917,174111,13171,122326,1526,43896,66094,25325,4234,148354,11450,275,18999,112191,44365,22723,68409,8733,57746,96565,75007,14196,108844,29475,88599,177563,100792,106156,86323,93726,14248,135341,194131,40126,47099,14779,8272,39597,95983,171398,65882,28052,10393,47213,40689,22120,72212,106829,34964,109146,753,648,21660,30047,17527,181025,5619,145357,4085,216883,9359,186951,24779,53931,24545,36197,223296,62628,168101,4243,107313,30321,26642,13049,51059,31027,107912,807,73550,26551,84369,122422,165872,49754,74213,234264,33151,52014,33100,87183,22365,52500,40013,23302,5652,72723,21404,26107,48434,587,94049,168493,96418,32871,70860,31709,25128,443,71597,166253,15670,70994,26341,133675,28280,75491,54756,47955,56028,26182,11952,113272,472197,64640,110753,17919,337,50642,22576,142,87371,53391,93210,126694,15285,19642,85667,14148,1506,42092,52962,33243,11970,20734,135843,57044,58880,13002,219134,22876,64754,232519,4257,43120,321573,24799,64526,124728,52579,81472,70831,276848,17403,74359,23021,182101,74597,23744,148267,12055,7976,5349,11772,67540,167347,65318,18720,127832,108238,22828,90233,9987,259080,118185,73209,79270,13775,90100,137742,90799,70569,15699,19961,9087,67475,57872,39731,8810,134897,131868,146849,19898,3334,2281,167061,91073,60356,467742,74712,188,53179,137679,92769,29241,9537,132595,80119,1041,88962,5976,40171,44911,102859,139059,104558,98987,47761,19272,71472,113864,175377,73338,10857,23402,23758,1591,139864,5644,4076,118760,16427,134198,18853,20291,100849,37423,22038,36677,19071,195521,57445,11069,31869,55718,66882,148490,44,41296,75242,49704,166810,9906,20943,122258,49112,105667,15969,10344,6408,187694,21399,72742,58970,14867,14376,81889,41856,23225,15042,56993,16074,131389,74276,72407,53875,383108,53597,37363,68993,44854,122548,430927,198279,38430,80409,12245,2981,628,2818,17760,37437,238229,7968,46892,2200,3730,34190,65983,37959,112291,87850,70827,6522,20750,73913,111621,41652,19587,2780,58668,25916,85259,18200,168962,95781,42445,102050,7776,57662,103313,47742,96358,41964,66174,100396,29069,204735,19679,27978,7479,40264,22534,61183,36081,107436,58223,14680,23002,101311,24716,124108,12908,5646,31750,40380,14215,232799,102772,14122,96775,61398,50917,12096,149880,67833,598749,124194,155871,49216,790,14677,65319,56917,7440,145744,95701,12206,49405,129269,76199,45732,9767,11058,9047,210885,11051,7392,26307,2130,8132,147526,20802,232698,115660,50060,59789,57344,107623,80343,112676,23291,9866,160971,34032,118291,15719,59730,164911,28975,2659,58046,78480,21854,66209,53863,109085,116045,29021,46481,107552,22130,18764,70254,31272,11300,52460,43933,84738,20721,53869,190840,79673,105300,7561,321817,66924,13940,33281,101046,183181,32176,71878,5678,62924,79535,56646,40303,19559,27703,93042,73368,42187,3670,37376,46440,7023,36816,109628,20680,5940,276440,275233,170848,112093,136996,14984,20226,111441,77693,112960,48577,39370,55707,50314,123404,26570,54281,61372,123391,4857,35928,246740,132507,106646,44241,7196,92258,9825,37688,51197,303141,5590,15476,132986,10955,85782,34486,26696,7991,28813,18858,39546,11703,11365,38185,5716,93555,11925,40121,60002,6985,10976,171384,3887,43394,13337,56346,6381,252336,39573,75042,53711,1028,31781,44295,95925,131713,7214,68125,43571,70954,213234,1628,8760,13391,65485,17320,56038,1710,25248,60803,57399,19839,3870,326,281556,50945,72400,21460,316244,75619,56246,98775,481,13513,55765,50427,7388,123519,32929,57908,27124,61316,101097,57467,30228,48792,10788,20402,37318,50526,155730,34456,158065,145305,17832,43733,64052,4506,35072,205355,177028,184004,187081,68616,35938,83703,10367,36892,93186,260137,51934,89970,4985,23445,26755,21558,7948,78741,23376,124405,85594,68596,57536,49351,12619,56593,132668,99924,109728,71844,71935,196018,65464,17617,14987,89701,143773,33997,8687,22701,33258,2914,4436,72108,85610,9671,49067,2327,82988,1361,1672,44033,35777,30269,24057,10605,82236,616,15793,13919,47249,112086,116698,9484,80207,90574,33304,68624,93127,56101,42210,160929,4827,38995,38095,4701,125119,5027,33680,9236,231236,14135,87837,23318,70261,78893,30151,81482,14332,1084,74256,27532,46644,79185,3148,62615,6981,55672,31668,36825,1849,14536,37446,14738,23779,43058,162749,72199,1168,21346,5592,85932,85302,9668,18351,57135,150360,2080,228015,77953,34670,119302,151751,31009,106725,84265,45214,59289,74178,113071,263206,111009,4021,44449,188119,192629,123592,392506,292847,114487,12831,205858,9852,20780,79648,75767,357014,97721,18166,21005,67950,33226,204009,16536,2987,11335,66717,144910,47950,17262,55060,15063,2934,51038,26775,178497,66008,3427,49433,128592,20036,157553,63861,3089,23015,51210,28696,35933,49942,71135,231518,99620,17248,21835,176536,20676,16944,38700,165831,233253,295625,36723,13023,52745,10907,19423,67972,125868,95473,82875,1183,108455,52685,33417,64095,21433,52438,33191,127809,44505,211823,7810,2752,95548,162031,7185,91196,47563,61721,33359,17897,23682,42806,178101,22874,49707,199897,75419,82456,8618,11171,79712,116847,18783,44190,46564,5346,59046,95032,7893,14916,3214,26800,24172,121453,34362,10250,17408,18888,4840,68696,22831,13162,36005,32512,14800,62357,41723,45046,27247,37486,5372,2564,34261,298500,66509,133920,89138,31305,117697,19097,108304,81386,84106,23802,46411,63304,946,51417,41777,41041,19501,115864,60743,294354,37955,94165,18116,1156,17937,20645,57114,90804,58042,48643,92288,9861,2557,88546,61333,101008,12853,5148,87856,4152,144503,73841,18718,9789,147565,10846,42085,12789,30223,8993,56352,67203,2448,28215,6052,23540,126319,75933,36689,80235,23231,23561,21383,38800,77548,102798,21234,31468,158608,46188,63960,191679,8051,67014,11185,170078,42186,28827,34777,41930,212079,12421,34750,24111,110344,73918,45171,70826,141949,40063,23979,24254,37309,26724,27179,24718,83648,54938,14591,17425,29525,102675,48975,48654,12316,8929,60640,41709,50168,63264,89812,50716,48632,38755,138583,160123,55579,71829,24230,233277,46322,39650,166388,34718,24108,98252,7031,106695,62498,18258,35062,217827,78731,34824,33354,19520,60852,2432,60224,8587,2836,62955,702,20227,42285,40560,95592,62486,11094,53035,143291,18842,46177,77994,1770,9657,107422,172915,32655,128716,25886,25164,156740,119928,165875,85817,11007,89110,33956,12652,65156,180266,8494,36889,19958,20955,96,1264,118288,135769,44754,86671,5632,19026,168220,289120,33569,93821,66144,70635,7687,5642,2714,55445,56636,71545,184182,93133,7332,37389,12643,52315,22729,11014,158742,17050,152889,50178,34601,41945,52136,9948,26914,63548,95721,115951,40759,8960,158258,38938,49232,48325,42234,81523,253019,66128,40978,20048,238048,38760,62928,122560,118532,43687,137472,163689,26680,9878,17448,51035,16211,60834,36749,29178,14241,59868,150086,2305,26477,42422,34342,165341,83279,33894,14257,29928,12743,13957,125571,89134,66712,10952,16507,147839,30146,7249,16565,45399,39874,114565,215780,31990,230881,171477,102,196546,44538,10880,84948,281705,86651,10617,31395,2342,453658,43569,60561,132901,21845,17727,58556,258242,22262,58728,4008,77997,11806,37431,30599,81375,109137,185787,114085,217292,97453,169085,30593,60212,11544,102056,65580,2384,91655,4855,95725,7295,157994,16228,20669,53276,141590,105246,17334,25440,76067,17967,39321,38911,11362,28559,63807,21627,26468,85816,40120,1025,15234,58319,69516,66512,124548,75845,78873,22137,46681,51242,85683,32909,76747,35555,43396,101465,1765,73094,1077,2962,39028,66777,57831,42048,15828,13962,36041,63657,52412,5242,58846,2141,5506,219012,134451,3936,182230,17558,17153,152237,22621,49377,170216,35257,68233,65374,6510,11126,212151,7184,2480,22517,3437,33073,30156,16557,3768,55067,86829,91e3,12350,148650,66017,79424,70885,49066,28250,21369,51213,34533,11510,3258,18176,18465,84413,6315,36411,163765,4346,356,107618,598,13727,285026,162695,8749,14583,7132,63521,184253,32378,25991,5604,30961,53675,4874,84693,5086,34811,26978,56564,7904,33519,51221,113942,69253,6664,125563,22055,220680,102008,742,51930,19494,176108,44424,35123,13025,75685,11759,74335,22250,181453,131147,16984,132115,154311,11991,76452,52609,85351,196,30969,9198,74919,2529,56838,71779,29187,116304,3504,62330,41190,86153,28393,254926,104228,105189,13264,84359,3574,12415,8534,57147,10175,188174,59504,60932,66318,16407,107921,17638,99103,49278,28403,39786,145865,8462,3558,43406,142271,29139,21989,36552,93955,72365,7176,13556,106185,37957,321774,17782,129017,51154,27938,24952,1935,39366,2791,33489,41582,56078,24558,9311,5449,218786,27808,190429,68013,36020,86003,29735,3404,87348,119357,115714,2324,86796,81973,40992,43376,93621,28784,16808,36367,2517,2909,191926,24978,55303,53308,205724,60068,3098,21375,64784,23949,26579,63121,12319,80145,39967,97861,6757,70143,67642,37082,34698,69140,122883,46151,62187,80934,429,19437,135071,137885,222647,13331,154065,327,61778,74257,40116,37493,14855,85079,237641,42342,102164,199965,71204,4662,29368,5042,113914,122214,8955,13149,102503,43173,5659,163787,69003,307084,63392,171080,21390,81918,86666,36622,24126,28887,5736,28054,207170,163428,79891,346467,95363,38980,111806,80828,9200,19288,294896,114468,87405,111715,141705,7015,72754,68463,48738,243147,33397,101210,37051,98801,82847,20397,4940,185559,18716,54718,83491,11725,40803,1128,12128,23060,5174,7745,67007,46701,1571,27807,180186,256996,18975,16837,7877,212758,250379,15440,87954,57755,24719,124057,83461,258,50864,8874,29038,71289,31627,15429,9005,4061,113851,107716,82819,13651,79656,117851,17539,111446,12938,39724,190787,4352,15402,21070,62708,8539,23777,73853,13552,38810,86117,16285,56400,1718,75342,142863,29033,378,110113,180321,32586,23606,26393,160984,207987,23783,8406,16904,24596,47274,11693,46539,60524,78595,48423,31718,20170,9009,146268,15183,191060,172765,1349,138436,37365,10970,40509,225817,20021,70394,152138,21541,66559,66544,89352,2725,17258,91345,7313,3815,115868,8660,40362,4071,103524,39388,118275,21950,6549,38226,32754,209574,29201,43495,18028,20296,40597,18370,47520,202450,24134,2219,8195,69545,38041,136934,46374,19041,159811,84865,58620,846,98749,13569,30714,97246,32186,4479,27355,92973,35214,151491,75963,37631,1561,27200,238083,23182,60756,12291,25766,39355,102333,87362,65741,59906,19538,201575,48772,102938,24438,292580,39964,66366,9004,61379,50548,37622,38732,28379,68180,76622,17488,69849,5963,7219,48143,43413,55358,540,58691,29506,19245,52193,48621,5518,13048,118625,44755,191081,42061,89197,2259,60665,66994,71210,51232,3585,142096,55024,7892,8345,58653,463307,65658,64319,137941,136323,53499,12746,43492,6978,95163,29925,60175,5128,7352,41463,184756,121146,20473,18426,4598,5309,54580,14277,121151,10691,56711,43880,63409,76682,11830,172218,264898,32632,66536,81062,31649,25788,92774,60222,11100,63159,9432,224657,25240,53613,152,138620,163829,2397,85345,12501,37507,64932,38575,43522,65789,80198,78796,35226,3851,108891,73311,3060,28391,93671,39663,46142,30982,66041,37281,68157,26553,71872,81142,211527,39747,118119,22695,2859,11066,20232,168911,7933,197005,17066,111071,44434,133994,120798,12766,227798,45756,132852,29917,36076,55352,65281,129800,41958,18944,84678,18580,168093,132621,39997,54092,27740,32354,3770,114118,103242,43918,15899,18574,145944,3190,123469,219903,24169,100571,62403,16776,92779,14535,17168,16475,14304,37231,1712,28218,242754,61688,28980,1318,51359,222657,99200,67989,31772,23932,35351,201251,49041,27306,19128,40135,3986,77333,19649,120683,151927,21081,7076,78375,77501,101599,8011,89585,96715,58179,5378,102138,106793,26051,217276,4197,16297,27014,46721,13322,22806,5278,29629,70632,9647,71519,58818,40603,128530,8903,36770,56900,31483,26935,43845,34265,34920,87658,6114,84767,64250,47318,50720,19264,162514,33357,13117,6705,46696,75032,71054,87004,42035,69138,11903,99854,102328,19611,34525,69312,6431,49842,101600,133178,108751,41829,89939,225664,48916,99556,9195,130387,5960,36857,116724,53518,94002,39077,53996,6945,22261,64291,8314,152785,57588,16522,9091,5048,87671,35441,39509,1945,12423,158923,178413,37549,14095,1475,73188,62878,4819,24012,68534,42606,4010,120809,57497,59564,101758,103718,32701,80116,12345,95834,46918,21468,53213,15665,31200,3867,5140,96013,250744,21016,10069,13968,35449,180829,27683,39704,59956,22893,3115,26293,32785,75934,62445,141162,62720,2018,83638,19949,114012,95006,3330,99829,130935,309272,9565,55874,121727,37017,23586,319858,40970,27602,8625,112329,61060,100088,118525,25922,16232,1907,60671,51583,44553,80993,5262,94679,8676,940,20736,11823,3020,16476,12340,152600,97416,3703,25744,66826,16245,16876,46446,84798,74227,176020,45192,61955,75496,23946,23626,40372,26036,6149,11822,30582,16541,41914,82385,232823,40921,80773,14930,3631,7517,39619,4348,36180,126106,138939,62611,1477,113512,47321,25052,14546,118881,29060,23589,128322,36795,18401,137921,104699,267929,36194,172791,18113,4766,188215,30083,332586,94089,5805,77909,22194,68234,154976,43220,40660,70001,184893,138095,11128,103010,22663,5108,212615,8485,5565,49222,54614,26530,42639,16319,55062,152662,105595,21114,22216,10294,68158,10436,86950,7206,62115,3977,3657,59874,456,118617,18156,106663,112229,80992,17442,8217,55551,5133,34344,251927,51153,39364,201321,7816,66803,23057,156724,145664,14276,95705,979,2796,6875,13429,212525,50602,26276,28284,3424,19465,52397,46963,31420,51399,206476,92317,48851,637,100820,83349,10317,60227,21972,6908,282439,32857,224767,95629,83882,42106,87338,69757,29840,68709,37665,45244,114577,49188,175943,54009,186746,106158,70168,3358,234002,50555,9221,129338,9562,20118,32923,78479,118280,65752,4977,10474,102174,60947,129006,10570,83451,8598,8078,159367,123785,80438,16742,5905,5281,181513,42402,6977,163136,93179,42191,14968,50421,112401,105440,33456,57347,121611,4221,94954,36517,24046,27796,6255,33394,72990,135408,116627,1233,57874,25654,95419,68156,401399,313338,55208,45573,93124,119251,47200,38196,11909,130667,45391,73904,64964,167846,4137,115606,52036,62214,7969,160925,7187,1132,134835,40309,73195,64494,80472,444841,61111,26500,45323,40743,53625,52797,22659,15631,29739,36706,28841,39147,102836,26794,10536,14845,87305,45874,12241,127587,83833,57183,79722,30844,41304,84655,20825,92500,3722,25655,27811,10157,81634,31362,34088,92487,70123,22190,185100,72658,139035,192523,88241,2078,230490,44528,85638,100198,22088,29982,291233,241062,13865,4445,137791,37835,107218,31726,19718,38234,72528,23046,19177,66695,5109,17251,28077,5617,21554,47839,72425,133825,1486,73065,181275,141508,21768,62971,63082,2512,34200,9904,120309,6392,91243,68416,268253,41199,116757,138551,185526,41246,28986,4093,19057,17295,4148,245766,122360,35356,112075,20301,75441,10998,7977,19769,62922,937,63547,100196,26427,157820,20983,236696,22935,8140,90315,156004,47204,140973,7726,45097,52725,22636,23436,257282,105247,522,88389,216031,202204,46812,211666,19693,68828,81691,45925,11256,30292,372,5236,167826,88328,232776,151611,5360,82104,18841,80393,25465,18285,20320,72377,31730,33160,45803,38715,27705,37379,24163,18360,103586,4015,32305,269494,91252,20080,36567,54650,7797,57073,12650,31164,42209,6375,261663,105528,81661,106002,2800,5375,17247,43151,4442,15727,194619,100855,144898,62320,78465,39929,16454,1967,28311,61363,17219,9395,8745,121445,76939,80385,162380,22009,54191,44248,16299,122830,48151,74429,78291,64755,14238,44966,2511,17712,67954,93583,829,105899,49935,84750,11591,33185,85447,42717,27409,208542,28965,62052,52525,5597,25694,65594,16343,63224,276188,12475,9331,127507,38522,57287,24128,133161,79723,105548,133695,48917,27558,43278,46520,13778,141954,110785,83366,17715,46317,105763,66298,147013,41086,94180,16478,220447,44611,730,19722,78975,117889,125643,26254,16574,18480,65006,15806,38549,246418,46052,36056,8440,34984,30170,3163,59800,4458,115442,4283,41970,33507,104078,1653,22,121158,276486,3655,6338,24048,133421,23641,2161,24422,36006,8086,10675,181474,12307,29514,59143,14729,52509,87128,122470,19446,80852,33314,24573,119864,14237,9652,57779,6612,51851,15284,98871,90581,124466,156831,21190,22015,71380,161906,87247,69201,18392,17908,108470,72962,40719,14338,17911,95260,43339,20610,78916,20710,72451,11315,31448,17263,58853,178878,48111,116002,45497,80506,82605,85880,36300,121755,25215,36118,301929,88728,405223,276136,553,34704,212438,49970,78329,922,20711,25036,257130,38295,145369,18128,15385,30829,55656,48345,8012,3561,28004,122041,192900,58338,112508,41085,29976,87040,47117,23905,4336,92061,138880,97407,42083,172121,6256,25192,172671,5,93568,1420,12677,31605,56743,40620,6015,78415,231077,31298,80026,13902,19048,24924,170586,32955,176119,87859,36731,6773,27711,24658,26475,115216,133207,93250,95820,88522,8317,5714,124047,55219,86860,19677,23961,22928,162209,8904,225992,359835,56084,96201,29392,96558,86071,93643,55114,13347,8183,95129,82012,2017,123336,34219,115554,157159,47747,101684,41008,18735,193781,104151,226906,7552,179874,124113,31159,21162,44010,14771,51268,166128,31382,73124,77438,92830,205709,12113,1292,38937,13114,1334,2118,15597,69581,14449,21934,76618,48728,67038,14967,51495,24243,87736,147249,26720,11119,46063,43749,5843,44147,152629,133428,65703,14269,45604,57982,28672,55616,45957,8438,95433,37698,220862,132034,39456,61870,4161,26501,73560,56418,9845,4654,20916,10456,88920,119358,9015,65931,96507,48029,38534,21676,109081,43078,34943,25089,6131,28766,23665,5477,10255,16695,67,45778,42443,42770,29534,23733,100513,62617,42630,48746,14191,43753,50295,26007,8792,57243,43119,54725,164253,58250,112304,131796,25165,4651,3188,24831,47748,3705,19540,13211,102095,5593,18699,23666,32005,117571,33541,60584,74573,86311,99443,25172,27222,168938,7143,11853,53560,18834,19960,86522,28217,53266,117700,72989,34323,18721,66450,34346,74056,47217,202002,46269,9429,68582,75458,37823,82843,96652,32549,145144,27958,19820,158086,31955,201406,135379,31207,192545,12950,51704,9094,248263,76147,64028,110009,79407,89345,99284,223492,47966,26848,15359,201137,2861,110507,71231,72297,31851,118777,71039,151051,240855,16333,50766,14727,7939,4149,80908,418780,88378,59276,1327,7284,38576,79814,65820,42199,84860,49574,62596,12396,70598,40117,8648,7994,16836,7630,14047,359699,106878,525,29037,28064,13380,11675,50669,74216,103539,180314,27449,56299,172344,19274,7301,246099,32043,19422,36506,129317,6806,30140,4614,46639,66926,932,86600,6322,27847,233103,10541,39025,34887,3517,12972,26220,2031,66561,115015,48658,47596,12714,33845,3893,16165,35237,89983,14769,11962,147224,47018,29977,27979,5552,82338,86023,131368,1218,24853,237840,132193,15455,40873,3668,65351,53388,15229,59889,272245,47934,11858,34347,18038,90853,86981,300602,19343,114181,29362,84921,6095,106059,79472,38015,1206,48741,6208,8e4,21916,17423,6002,108083,24479,34931,56661,9511,26995,100694,163853,35997,81254,58321,18919,171890,86877,91341,74503,70477,53412,7027,59281,39892,131302,5864,15947,61301,67466,162369,47956,27874,35624,282324,21270,111847,102548,41482,30955,116737,28264,8592,55458,22301,75090,29821,30697,51709,3041,19208,8038,24634,30467,87509,126428,19389,18814,152686,20701,83474,45832,80891,105808,11378,153223,120770,98186,150633,49838,9141,12755,30962,5260,74490,21256,31678,65062,33326,289838,187831,20595,89768,2805,58535,10844,70085,12090,2451,138068,98544,24461,4511,6754,41684,28203,3383,65355,82833,30161,83924,234361,128424,28921,222594,33975,125491,34069,11508,67464,144226,41850,98703,34371,7901,21254,38398,65651,23549,53883,213340,123269,12028,71764,177701,28758,2623,68395,11549,15232,68603,9660,63116,36079,57093,31198,20475,48467,89984,35619,186847,107469,31389,43631,73867,41949,68841,114250,1605,30564,63403,17588,27680,99533,12641,70325,50428,73426,78379,11855,91651,72081,91720,60198,15743,12065,83398,140046,6761,46598,45900,5068,886,62448,148968,37347,19405,9680,15819,43496,63370,75667,163700,37639,3633,22774,34341,183131,134335,37200,23915,7054,14194,12970,26438,13350,285521,25594,8219,104410,91039,168804,138480,149734,15907,33818,61132,60082,4622,110187,56736,13551,73571,3945,73463,65498,17758,263266,17593,2710,27585,54469,38200,45367,63754,28881,3473,12791,98287,31895,65787,4463,94536,24951,36332,59901,28803,52130,86403,7668,181822,74831,18977,9850,177206,145485,109798,7292,31421,26280,77211,58511,12507,127004,11113,147,8729,56208,43066,79926,129937,31345,83947,39915,46146,98763,42566,1337,13192,18323,105163,80570,117753,16555,72883,11077,159438,40764,70933,83329,26066,12276,72059,21655,173836,126713,69454,153482,91585,70644,102558,110483,6764,127864,190133,3961,101798,20945,71138,82402,90884,69669,44753,923,16939,59700,164258,25969,27082,31399,43846,6306,246093,51342,6153,151581,202801,182731,56475,162188,89426,141356,14355,121815,27536,28023,65257,77523,106668,127314,24947,12790,38796,169698,23555,10725,44573,183083,42088,62716,43265,105958,32050,44067,50118,1668,3874,6243,318411,16599,1691,94999,52378,28671,216728,123258,2059,34969,69225,5913,136280,171443,141515,91662,22175,135282,80020,92270,1663,4808,4482,3495,34691,5226,109830,108512,17342,107488,11606,123190,100247,29666,146527,113014,15794,30894,13224,39585,243192,22351,9903,7836,47699,11078,25468,122291,48821,26780,122679,75521,81450,630,4895,92900,55074,74293,17441,3563,111657,103102,51613,12318,52370,36191,68245,34269,40445,41354,122901,168604,182500,62012,42557,11259,24428,115113,86345,12362,3909,78430,86852,134602,20459,47853,93879,22577,7659,3688,38555,13349,17381,56715,91639,12493,10895,92438,3142,37057,28928,2004,36427,32268,34222,209974,10432,67436,41989,173518,107930,27079,62729,30908,55558,5828,45031,14902,53546,8204,144263,60255,14520,88212,86582,109589,69356,8064,47449,8505,66558,16886,4844,52817,111260,215129,12941,91118,650,20770,6273,73089,40618,62790,2873,35002,14023,97208,19386,102646,36993,143736,135457,35385,113601,17893,32627,84439,100619,56016,6581,57264,172160,45452,111710,203627,70131,24100,322787,1996,35665,70078,22358,90922,83658,4097,63200,58499,14542,99153,52159,6615,12414,63415,31986,16823,1579,65405,137809,8841,16898,48082,259,33014,42375,12260,179850,73667,91389,98882,29532,17311,326251,41092,5928,20742,44964,48019,43505,9317,49265,6643,192712,48424,163487,19861,20113,70848,31928,105333,23685,78563,14638,54755,7158,24142,44018,20774,125255,20331,24280,10163,1285,2336,39851,4299,117269,46714,63816,87779,159624,11731,9971,990,137317,108831,50994,74554,162680,23640,131597,146962,170620,34829,91205,21184,1913,63616,18427,93136,156592,17519,67565,115882,138220,78622,88535,18115,2711,33554,109492,54298,971,24914,25863,36363,45715,27099,194995,14299,178181,111488,72395,322385,157719,130787,11897,81843,83999,11369,49280,118604,40922,61332,110343,53407,75639,40582,300440,54722,25637,13694,48248,48278,194521,56203,52779,48783,72627,10953,376,16733,280238,26351,230789,15132,25168,137270,3588,63704,73376,94031,74284,19443,159557,9697,39901,13351,119050,15406,146455,3460,29556,75195,37673,102524,92329,47289,98413,15311,100684,56345,7116,95480,11590,7200,167,23610,58426,17730,136656,27944,53151,2701,8824,103124,3017,90744,113588,53216,79736,65940,26931,498,29568,80540,143543,21292,1740,59268,16561,180816,42323,50174,40890,52866,10703,57169,4700,17191,4424,93511,49698,166650,26972,48631,165169,82879,69326,202970,4007,2376,231325,139592,22119,62851,37504,68816,58345,67398,186643,43331,277416,53749,15746,23102,17432,4793,151138,48822,54265,48203,198688,14305,54287,2291,18018,113378,123260,7180,97549,87027,120085,2920,76080,8190,102005,5641,64580,14955,59802,54028,58884,19367,81779,412567,85957,97053,103637,78871,29364,27637,141728,4767,30686,112738,130146,42745,12730,105040,14844,232,210944,36581,152317,135543,29744,3129,55647,58149,46319,27265,17499,28005,59948,7170,34138,5702,293047,110892,408,91760,218674,18469,46095,81403,14389,4610,35672,73060,11006,74848,104820,118143,190357,20043,105358,141735,5115,27093,45924,123073,52599,29433,9616,238350,78610,24851,58858,26769,31969,24613,18294,4982,32735,39639,143563,112073,202205,12567,4873,88601,44897,81503,101648,81362,34662,85277,17574,48173,21435,221188,40215,39576,80786,26544,64668,81841,10731,37733,247986,149188,127703,495,18382,54388,72446,43071,30974,198723,89608,41360,190,33045,8386,31658,19992,237838,119015,137622,50890,100913,6460,116233,267230,26621,104129,65114,14190,41542,14888,85962,23342,23041,26453,43725,71809,45186,4770,46452,53894,56616,221286,18973,9038,109299,55365,19366,26863,18808,60909,69353,41738,83463,12100,68561,72860,3980,13796,49340,12332,31311,27418,4255,53430,18976,45523,510,14224,30477,26581,4530,3651,101663,139840,22709,150861,31996,63923,120623,262522,3076,10528,2929,14672,130238,18087,9816,121894,100308,25085,55111,14565,18952,53293,2042,369988,23674,61789,133529,28783,108293,35477,47119,36448,71049,40015,33055,78598,198442,1833,159937,40654,77444,189245,113153,8621,18599,38553,35223,166072,2375,11659,21786,89523,6032,12116,63046,159398,18454,3678,32521,47626,11411,103527,38896,42946,15696,26370,10185,8413,37080,165583,4331,63555,14907,72220,50056,6623,62236,36565,49783,10049,17503,100581,55951,146244,24724,9626,17969,25524,109300,173965,99994,101056,46459,43647,53737,277968,8347,123521,74858,33829,44762,77574,877,81377,222525,123532,30602,43881,53145,2973,16284,81940,61281,127044,63620,9875,14756,114829,19032,9202,52759,119141,23928,120551,19607,3599,33401,76821,73233,117430,39968,36539,7071,5446,121735,194059,15206,45283,6706,15603,65615,1207,165723,92275,34773,104447,8396,32353,205240,164323,13600,60555,79205,25532,22907,33410,57480,107111,69630,32137,47832,70913,33161,20321,2371,117348,10714,86246,1625,11763,17900,268,78457,99175,97940,101092,86660,32221,14041,128504,125080,53744,124263,31017,13897,403,31859,21964,5633,111630,5547,77329,17961,18241,84995,25984,12983,67491,62168,47262,5241,297,51191,7351,8967,147212,82060,16821,782,11033,82431,62957,5026,43459,77963,203477,53528,6247,191852,87774,74164,215654,13467,1522,219964,28589,244104,16242,117821,67725,72570,156792,17186,15979,26990,44128,193014,35276,57125,16212,166451,68017,6905,77608,16364,53777,75921,76426,37975,26203,269296,64099,84122,12077,38533,830,4407,20139,963,43028,38902,42911,37503,83343,85045,16979,1165,60835,137387,58380,86990,110066,134540,56331,193845,81238,17922,163093,38744,110641,12502,56404,34862,26865,125964,12965,111648,25547,7771,27196,136980,9555,29551,107158,57885,18831,37705,35505,101742,13970,102109,62548,124657,23328,11124,89592,146376,248050,6241,22033,18337,80685,29898,11908,216623,67721,106162,146610,21377,15085,91552,42041,62560,122532,125336,102365,121537,142559,29693,223919,11515,110495,18776,22494,5895,185059,103592,229351,51220,100102,37027,257855,29359,54123,36066,106493,12244,79258,32002,432,56205,94836,90182,6726,14762,29391,48938,26864,38083,60364,3310,60192,14766,205567,57504,110760,22649,24666,46333,21517,3430,13135,28873,27052,158809,11597,20529,6695,23138,22960,37137,45574,6545,305877,43423,26153,24769,59844,14501,10430,134352,56169,13213,103432,49523,35181,13435,12408,129475,64620,230854,77390,51990,15653,83248,33466,44571,117828,51481,2187,10559,68019,18021,54895,48247,18354,33737,4554,108595,37288,39767,116707,9175,3726,108877,21616,83684,49862,1938,8543,276466,20134,108498,48770,102254,31914,131520,185291,100559,51890,209,19526,76471,50544,71814,99351,8172,198526,28816,20419,9109,98389,136777,76479,75596,30635,165417,48216,120220,25955,211071,39314,24308,32164,2559,146280,43403,9233,17947,90585,1786,86920,125662,2457,64741,32152,32918,122882,78538,44001,31723,56426,23375,103172,88177,145697,52506,49319,68016,31664,41488,18486,110400,7030,28241,986,109199,19900,42147,56864,65287,49183,7858,24e3,30453,840,16673,25907,68916,89927,6309,158335,36407,199737,130464,13137,59603,201778,195292,21015,42466,179062,172561,89492,11075,180407,31868,72493,20998,60217,9865,19530,39274,130266,54539,21623,12535,13505,40641,73375,4087,85633,2153,3117,70680,55788,92096,47509,98493,37490,271936,151475,3032,16171,96642,34106,78425,125761,19591,3366,19316,54508,24183,50786,194248,91528,33253,34622,108355,41741,705,3814,3883,108929,13203,67831,10142,59754,68208,29128,84820,56880,38794,24972,48571,40821,40476,18137,164254,24064,236309,79181,11282,395,39169,2013,51587,28551,9645,701,109513,115899,113566,12762,62045,58322,103726,41343,40866,244102,143816,2490,70346,40973,52618,15412,30720,104315,38917,42027,93676,17513,107418,20706,123890,13399,97727,24044,87962,65606,44250,98044,65276,74790,101473,19350,91570,1326,87790,172042,7577,100813,86896,85891,41512,108130,27794,14875,71431,12835,156250,58135,3759,22476,42176,115873,34686,56523,73643,108505,51491,20838,12721,32863,45700,29496,13700,34294,55360,29206,155942,123812,7706,163234,203,132720,49358,144431,8130,175788,35818,3270,76832,25710,54095,97274,28779,94621,74396,19092,128242,58067,20885,14670,93255,15107,63291,23654,126900,129421,59294,262659,9798,3251,67344,28600,44629,50672,29072,26999,31526,23183,49175,165843,175455,17282,175411,32022,45989,30298,90690,78118,83156,23749,35636,31317,7069,80381,94561,133756,14960,97404,6138,41065,78041,32843,16601,34123,9559,146529,123377,96395,54441,42012,84257,123541,10745,22139,106459,11720,150883,172651,154996,110538,4728,53447,25704,2009,71152,119354,21166,66604,1429,216162,8637,122250,63520,27180,29172,36124,276428,107787,77184,4680,14952,104903,24418,14793,51561,52931,8371,26342,48526,7118,92066,67280,40653,8847,34597,105438,14198,50163,61188,146286,50315,41205,170829,161496,585,197359,95056,1687,365794,91349,48507,5804,49263,5146,104902,96365,117343,132222,46084,96919,16875,8073,262381,79982,52663,13928,16056,153908,15145,109256,132308,18763,24904,167644,13618,40750,18686,147124,114709,150038,52849,2938,12568,48617,8778,5459,44202,44591,74914,17183,248689,13878,7822,80060,23116,194037,18487,2067,7798,43077,33678,244028,31320,74273,2794,19466,8218,36280,183997,48124,19416,29656,19280,98734,7715,18311,30701,133602,150307,126956,7378,2933,79903,13178,12593,86571,26604,92446,13574,44205,65699,427599,21118,8245,14407,27877,47936,33542,7916,26460,117762,21596,37818,2249,127359,209394,60044,47677,308089,36791,154971,31417,6998,150042,174360,12255,43009,29335,48739,3912,101398,53340,2580,146939,151295,45360,125275,15273,45383,27456,48761,23314,8750,60801,85823,104759,27894,123685,66968,39480,26917,55290,83305,2696,98390,57569,145853,340733,4919,20024,52268,30884,7413,203685,70989,112855,4129,50536,349518,68205,332641,159581,135361,236026,37563,176404,64899,6578,122033,63871,1850,85234,82089,66124,74145,121098,107351,12687,36881,117334,13136,14698,85933,93866,18047,32620,310,15094,46e3,88451,23632,36645,27940,87618,80520,58892,20976,27702,140090,96075,67841,103292,238964,87778,107338,17019,83427,67522,7302,8261,47570,116787,8730,80484,61772,174422,56005,131193,52875,14588,28471,59817,9586,15720,158155,51307,109734,15196,11025,59331,3884,52626,102602,84797,25158,27314,4437,20488,76214,189248,35023,114952,157376,2827,62439,102878,129749,36405,10329,109339,108633,36662,1254,13267,5470,87105,58004,15397,10434,159667,21864,52022,179464,3013,32147,31496,116832,18494,105502,129227,107267,50033,13481,9954,24267,22141,16257,116154,36185,950,115685,11305,176708,2048,178671,112573,287867,162328,497663,95170,50979,193861,50987,30368,136257,31830,46549,15119,169876,23788,17462,249887,57377,1949,35448,14791,43769,210091,3783,34612,282103,88380,245190,5457,20491,98908,11402,86899,117916,16028,162584,60644,320177,156096,31065,55876,22e3,77655,9992,23397,13757,317623,63978,215255,2443,17648,93231,27388,104529,93807,55505,140477,12046,112040,70887,40152,94365,112353,25063,114679,266061,71248,119555,15589,2244,617,14129,211431,70110,100652,7777,4383,85911,89221,21010,120615,58357,86405,37554,41647,18,15143,69662,60491,14714,186134,148344,42347,5410,168175,44535,42449,343894,129417,99682,20659,27272,140483,63455,222159,17536,13722,42637,62324,11976,114691,148109,2283,32057,182393,4295,147364,33705,2075,44303,30274,28331,63740,69740,29148,10346,44862,33716,73937,153333,12930,38784,247159,2515,41053,20256,83368,256189,54639,115240,5096,24661,175419,153552,26516,141,138176,63885,34115,47222,55709,2765,28479,38875,236608,12229,22921,77291,54426,45388,2860,57787,114579,295139,105782,17826,71066,19119,54364,69385,16568,12323,28057,33346,34919,124763,155533,101386,31644,8627,49001,303600,29868,63213,9103,77280,71333,9696,138789,37059,24823,5057,21352,32368,114208,56803,19424,10445,58514,8661,209508,26187,171838,10460,63454,14016,122504,41328,21329,46618,32493,38225,7855,31763,7945,29876,8734,6438,24205,97490,139977,130740,47323,33195,85390,57194,13813,60600,21313,96251,7699,27584,170521,139271,1363,4402,336738,129223,84983,69150,13147,3590,163929,207225,155260,55916,20288,4503,8398,98490,11773,27512,37113,84976,86558,28365,11756,116005,182148,13733,115313,47644,67208,85069,9347,14995,226141,14704,101835,41159,35314,13113,63526,214039,29978,50446,83339,17440,129441,72522,118641,97816,24907,73844,15717,118884,167255,96509,162793,30847,36849,51297,78974,77793,10427,1873,2972,9999,35074,28190,64297,146836,46298,60038,163007,108919,61219,2403,75022,127339,4233,110389,69022,9833,128097,88016,79390,222936,22570,94657,28462,56956,38803,81536,30474,152794,19566,16481,147408,74574,81895,20731,1918,1366,76367,187321,54494,24366,21690,61696,33283,107477,77499,31112,414383,74362,18463,218441,120929,59848,258629,201924,69269,454,19989,13054,59894,3623,58908,20681,35723,78523,102680,38988,184112,108087,50944,132704,52966,21699,18860,96349,201411,82697,85395,95658,5093,6427,177894,44191,32755,26961,155739,6249,31310,81030,26574,84311,120155,86730,113535,7424,48888,13516,45747,98098,20077,183995,81945,43210,26704,40420,75831,45648,11180,6855,57927,65528,124096,34851,2598,156633,107572,127352,38169,123845,60142,62722,105584,232364,23211,68120,1601,22169,89299,747,258039,80572,7258,152249,11862,101204,8834,121434,33761,19175,133142,46343,40178,48723,3589,41977,30210,38868,62257,10087,82658,87827,90646,16415,47552,351723,28298,72225,91146,272760,1701,11295,1652,109651,300747,51863,198800,29446,11794,32345,37538,22356,33102,37590,113544,37970,11478,179743,25454,103417,59905,221970,105196,145604,7817,164809,102360,16974,75840,255333,56902,6659,1954,645,59400,67769,7689,18675,5215,13793,20536,27852,3387,29523,259718,16860,94625,43143,29245,15848,233581,22685,63631,78557,22836,133302,84513,1348,51826,47129,98836,58284,1830,1749,94642,10933,6145,12506,10975,13879,103781,144434,10268,28409,32346,52968,121567,107374,77268,23686,35097,10501,155275,15303,47136,21102,168741,55332,90385,15996,84817,681,137803,25054,142275,6163,38175,8056,124296,240642,65621,4934,178205,16101,62803,60964,18230,100622,76465,44689,14545,9543,47514,16852,93380,28048,12047,107106,37575,101485,77047,57326,34819,96137,76916,6469,46264,115983,75768,87668,69942,13027,165,8373,114231,26434,52844,42799,182044,23580,146254,38081,43236,33883,146220,382894,14606,46035,36481,166621,35417,95382,2957,59384,60428,36358,66343,75378,22267,22950,83528,17577,56474,25285,4619,179691,75355,95836,53295,34588,171410,4487,14679,84208,44015,18562,109133,54101,11531,86052,174479,303157,28095,9953,35642,14564,39802,16145,77606,117406,53038,121117,53624,22062,1212,7632,127157,237292,189087,10478,127345,102515,181997,86752,87623,10966,121602,68783,68681,83042,114380,138349,191305,67176,50085,39016,1427,42384,1412,67118,122616,72389,25260,2237,13576,137346,19938,20304,2191,68759,5373,61364,238507,75814,23931,69565,38993,131741,38364,12528,87762,5679,129853,5310,186831,32653,90338,260176,389531,108118,26843,43985,50175,30563,25106,56965,18130,140428,4542,165503,117991,24219,229605,1819,129663,1240,3797,76093,18398,71339,51919,93043,27175,47060,216257,6483,35051,1217,16512,80798,129064,13225,69339,8548,237079,72298,2575,34280,51379,117910,55671,53345,247552,29486,39328,140821,34681,57045,60177,5004,90269,78522,2479,322607,48474,61296,13057,31558,4678,59271,6699,27044,31988,35944,12503,83480,4389,136508,3781,114121,70279,4488,155829,42214,2898,68191,75695,305850,45041,74344,106509,30087,17429,93292,12477,290,23080,114802,35714,18751,26554,105424,17775,2144,2412,100610,65192,113975,52975,180272,135050,129815,76238,106483,21440,63186,4260,46189,9711,28249,4169,23429,23390,8324,141585,63809,67668,38457,38063,39226,59972,1189,203916,62368,14403,16949,61767,85801,1739,40147,35049,76757,33124,62102,15780,103593,103009,53484,22952,67973,114645,6566,5245,50462,7601,8288,3513,194571,80276,1908,54592,5124,58571,2513,6800,273997,193904,1119,17991,117245,2508,129156,82366,26278,71465,63341,56943,39662,106116,94966,156875,9736,2204,122308,94418,27134,1280,24539,49022,45314,3764,50904,46424,30699,28087,293839,9400,33646,40165,822,147499,50263,116179,29085,11863,31314,5578,17797,5104,12454,1604,15342,219206,10232,67800,94261,25872,13565,90339,78971,75377,26649,41184,47695,11514,35369,20767,14227,41953,309396,148270,147938,33074,14453,27499,109019,39018,25738,240196,158931,52820,8612,95853,21524,137010,84901,70869,70021,116794,48404,38771,6732,1070,70990,187297,49140,5238,576,3564,253975,16027,16483,2811,37775,19034,25259,4053,2e3,70083,95774,19713,33431,92703,91314,42381,288770,48194,95985,3991,77418,13406,241328,245086,56533,35275,62725,9246,51924,70181,95331,16163,31410,79016,39312,120878,119371,275987,80124,27712,9186,220,23598,146167,85209,68238,282190,57048,31273,30555,80913,17594,75779,59160,135002,101219,189377,29225,96735,60126,62522,104e3,27620,86814,17240,147533,11001,5425,43682,410,49460,87270,69480,46315,59448,1816,76201,9431,11788,87960,29063,65539,47347,11678,33846,7008,196704,9895,6753,8633,120892,59970,572824,115934,6646,202559,892,48351,37611,251282,57823,67263,57750,26527,34485,90747,7685,88370,6144,64182,1709,41969,21458,62327,181657,49247,225330,122600,114574,107124,85361,111833,63243,71420,15655,191178,72430,18063,51425,54002,12364,53225,86557,18193,97580,41232,138398,67821,128724,8944,233212,101353,52099,42127,14006,120107,32789,32132,3498,18123,33758,56058,5779,128760,59888,98869,18445,84702,51911,13234,218379,20093,39031,8074,70195,20708,23462,24355,131384,60189,26390,10403,41060,7140,10781,49410,42261,87202,82566,41663,43105,60276,2768,5733,74176,28329,2297,145430,131632,83615,122915,105441,655,224102,5284,136426,67763,16294,188511,32538,61049,27893,3394,13951,159099,28542,17930,145360,9492,190122,32285,78855,26440,13570,58648,73908,4239,124561,2444,74172,53131,11468,10794,73566,11623,35343,64710,30481,4163,10328,38309,29901,10538,154377,76132,92405,24839,11679,3465,13449,11637,7824,2337,57754,1260,14458,41118,19878,38661,13416,159180,37074,163164,54137,28627,52134,184900,8520,40385,29546,30502,22386,66527,107458,6850,24022,47983,30603,35083,8934,304066,39500,9,28261,33026,77251,9374,44833,116312,34990,29236,63563,125639,135405,165398,159055,55690,88141,69643,236964,31983,25572,20436,36746,60896,31850,16179,11828,5888,3043,66368,9750,31167,7915,53111,36430,1333,64344,93659,20061,60596,180191,51630,6792,30244,43509,101058,22409,420,44210,109783,43223,27030,72477,72831,32679,29235,7675,47556,12258,39907,149412,84926,118247,24692,71717,105038,86009,45941,41189,89453,29856,52543,30627,226798,67303,59230,67415,34408,1367,99685,16867,128419,52147,4111,125381,117881,16173,44093,102224,31575,23234,24870,83790,127407,239098,3200,994,1255,100903,242275,117266,55116,38205,16140,29662,11307,40414,208793,123355,56470,4862,75600,30119,58218,70828,24075,26974,7802,192353,4851,5475,78720,66596,3409,28573,64396,30381,30690,59859,88256,5406,99945,103064,34463,37727,24238,86643,60088,4057,23741,5967,162904,38240,28356,93858,25510,122879,6897,3278,7057,11971,4400,35461,211413,21395,59615,39471,87233,55795,128426,3051,22470,41950,14705,3974,180108,80476,78442,204996,91987,15634,67610,139015,142373,35611,51134,10387,4353,153456,57749,181039,14183,68447,151532,21107,36452,20551,3186,46247,46383,129666,88736,140662,146243,2066,8360,7978,64818,106963,17896,47801,10723,114821,223295,74192,3293,3393,16987,74064,11277,91622,4270,29828,27951,387869,103235,1374,61988,120083,477,145892,128378,11779,211263,61354,18221,17869,46530,83061,108538,157981,90608,67199,95080,49064,195814,12302,66307,10348,231346,160732,112859,63633,146558,21271,31037,198802,47622,12862,95710,3910,77850,73961,85585,34752,61e3,4082,24595,103679,71107,8208,79568,150019,16615,24961,139857,32664,197366,4559,54735,32696,4126,162019,75698,13916,70108,159638,19834,9349,24675,175560,49643,18206,52459,27992,10809,88865,401975,133172,29e3,34558,30915,3658,25834,42430,36562,125265,18182,10155,40149,97082,208980,19575,60853,90529,66545,9600,789,46420,2317,88593,55595,98980,115302,5742,169155,1073,177901,3472,11189,63711,78643,65472,50459,127979,93,42202,67053,21720,157650,11145,141378,42033,22824,85705,79114,35584,15974,1510,54172,28562,12451,104226,19190,97151,73024,20948,5151,81741,21499,29006,84183,198074,54003,45120,170125,26240,35177,28389,64863,79974,60778,176915,232183,45342,2038,80253,41564,40703,32689,5430,100689,5366,23007,134279,14266,26712,73993,24934,64242,52113,102887,61801,46415,201049,54251,62133,122757,164883,30815,139966,2319,30842,766,13362,10287,134518,86111,81665,82440,28333,43019,18963,8804,161944,23439,102144,101145,80029,39052,248708,30350,117340,11878,128467,974,138625,63961,5237,74778,61834,67040,43814,13690,65947,33809,232476,115258,181745,28824,94013,9510,10246,93722,81976,7217,114383,3493,16014,69045,72692,12145,80981,9507,6692,1620,60820,330444,35474,33962,4797,7053,295463,46445,27026,12491,77988,49524,35675,90947,29114,166705,101385,133782,32704,6186,84595,176031,185623,45966,151302,63069,1699,107491,947,15458,74452,196212,6046,10498,12163,10239,35191,243951,9277,9090,29539,54460,22820,26514,112549,60372,51753,48756,21812,70861,260326,41,44222,10441,16961,48148,138771,216194,5914,52153,53400,212036,56519,26245,10117,45888,15294,138019,90913,26368,43842,42111,23348,6082,194845,161089,156206,51546,11647,30759,302912,262094,8635,78876,26535,35283,54183,31183,85484,147873,12989,5197,6356,72894,65347,20150,27370,73787,1493,45918,12366,190217,20724,13858,10981,67449,81213,7553,14115,72242,271517,11842,48310,88743,143726,22177,3290,243231,58452,62937,12592,1654,40066,33477,13751,9921,128442,15868,7106,75236,83773,10775,36938,10482,170465,17368,17469,161508,32752,98340,800,19824,264456,3901,87319,2867,26782,9630,113102,185815,24197,44584,86366,40224,3636,140916,31731,267731,9567,53678,72984,29389,27963,17106,50282,284911,60170,8322,12608,23374,89652,5268,39044,229766,8869,151350,31436,177342,12269,183212,120418,116270,2843,78888,69192,7865,184099,1086,129897,18383,70508,20242,18508,229924,124569,35749,50589,55626,9884,83115,40971,30671,18135,14452,38861,17844,201826,5549,26413,17189,13561,38539,10679,143331,3314,36785,171194,49685,187713,67506,4618,104039,17060,195080,50648,33159,19238,67559,134840,28599,157523,17130,38064,117398,94355,31918,13575,34538,40326,13997,3494,348283,62481,26862,3603,104426,244363,153709,112487,304612,199674,41239,35545,54869,293005,28223,26277,26899,4533,18518,15492,38587,80488,70485,160395,263,60162,11382,222152,4696,250751,51921,182609,10707,48463,46243,1227,49111,111564,46502,33342,56846,68541,63559,858,139927,16654,229375,76759,26478,33205,95828,23399,92945,2637,35630,28470,143992,50214,14174,21456,166191,65665,1711,21594,78019,97599,111701,36,147151,110246,189022,43021,30397,40757,131935,42065,73335,48039,26596,28984,15102,2361,7421,202167,69744,43766,52826,3642,83304,33873,75140,63169,192389,36551,92748,13039,123959,233220,21738,84447,77230,20228,187852,19095,25799,92136,108774,29237,53947,2299,118106,2687,8830,42331,202924,33667,2023,73763,30704,19363,19779,16737,35629,48081,24068,101013,162338,291912,13749,24745,328289,167679,70086,48299,23306,16732,17801,43322,54589,3586,63653,43624,53474,925,109177,251316,43805,13082,19511,86565,142182,92461,17117,101033,103319,64589,4022,4351,235897,5352,82705,107142,46391,156084,5860,61365,10558,13045,7717,18357,33922,12590,33065,6928,46993,783,46937,67846,8952,26295,6107,119656,18799,17458,50747,4229,179559,112727,118080,20683,41464,125468,51560,49749,44231,7359,35339,62988,136487,67015,5208,29150,24956,105186,48858,6143,18097,6972,16404,73489,58742,97196,36357,164616,5834,32267,13746,147733,15113,132091,34127,106298,39729,106426,22294,9780,15602,36213,71502,42808,66802,599,60755,5851,39120,67363,108623,126368,72770,91263,32486,30596,151717,7951,52002,43103,11768,68942,40901,39344,24037,127500,116890,48403,16926,86750,17745,48648,159545,34460,58419,5634,114317,67865,31462,23352,24010,98185,125708,69686,68337,13610,26271,70691,2980,4768,27225,102402,75453,28106,8104,6931,1176,6274,6475,112635,22498,6176,238686,26832,28893,90319,14441,15682,15087,39517,45270,109134,104440,45965,47645,81772,7876,52683,87720,12898,4505,185665,2769,113401,15664,57592,105229,137381,97059,119268,6876,43309,33886,128363,35476,144249,67013,143587,83367,25703,91436,59347,53236,2289,16519,19844,46309,58558,99834,23313,218816,231303,36388,51333,183535,109792,139277,54306,90139,18235,8275,32710,37677,82464,86025,92204,88842,117723,37570,128723,234242,76350,73795,34896,148247,58424,11105,11744,45746,63372,17118,49772,199520,81902,38004,22911,33752,3125,1995,53792,4689,26909,108150,146062,69674,41811,161444,84855,8999,28561,16731,93937,3189,21967,24890,22943,1356,145300,51569,28802,517,118679,31703,40607,48098,108854,25003,10233,73969,177495,5248,24516,215347,146192,48712,60626,69188,40735,5866,586,101541,6509,47590,52129,5969,222045,110933,25733,24223,65339,62812,2414,155418,35819,16022,78423,43138,20995,128255,240673,46745,236093,72176,57085,97841,61248,107,36068,193177,105427,55726,215229,20446,47228,100420,87091,14429,121708,23605,21157,187721,21880,2997,203976,99166,95068,25877,7724,98925,83401,4829,13182,18229,13718,239662,38653,116505,153497,30589,89029,38962,181302,43853,78872,180301,4786,248240,7401,106136,112590,77745,19731,60880,77789,125748,135487,5975,48627,34084,12419,215770,47557,254582,10364,106495,21856,67539,88981,38805,21428,48732,42316,12149,16078,52808,25327,51322,33850,51147,12253,122354,46077,56483,254553,115417,81834,150991,94662,86668,7381,12841,100650,18218,15741,22372,68294,50705,15535,84660,61887,22553,72299,31361,24824,17743,46820,64288,31582,77006,111674,116384,30760,80920,86149,77192,51979,79691,60342,122805,103800,240873,160744,233114,78962,54920,8608,3484,316104,72548,24337,5088,230040,21926,10172,36838,26,86221,83458,102176,12062,17571,41929,41170,28428,68239,41750,103930,2634,18313,53019,34825,97837,63115,24606,73157,152474,14715,91439,37033,109806,140259,30668,174760,380,135597,95673,136073,65073,134249,13829,17279,122305,4420,46444,10237,64848,203623,70728,10349,182885,65075,24519,25783,40318,34139,22222,63394,55266,102764,41422,20126,65100,90408,53640,35128,48932,11192,38935,96839,34782,39492,19396,41332,6250,5511,19492,51304,25936,104466,54099,73771,86115,5080,7669,30891,111700,13931,25276,72289,135447,14820,258641,25265,31005,281179,75286,393,95359,14623,13584,6680,101227,80173,44933,76666,54542,13244,39348,458,25379,109451,134348,81143,6959,65554,12027,51311,8716,57589,140731,28467,23316,17272,30458,25980,55229,77197,83798,28302,114784,7428,34548,26241,14712,39336,103304,18928,54080,12870,334,87722,15208,16895,142098,114262,39820,83913,57817,28682,7721,14900,108672,11250,62246,42849,415188,1724,26555,24549,25505,26443,107450,145899,61035,43528,6901,60726,65906,267741,21338,147590,42079,18924,73017,135236,15393,5206,4026,84185,1531,5988,113890,82647,303391,7386,69844,71611,189865,76523,31877,13315,19314,198575,32821,1928,67641,25913,104475,103489,3297,70391,18406,15446,113347,19295,93790,27856,1792,167471,116449,8541,4408,41757,63233,25765,86680,64501,27034,24816,34975,6079,4486,49693,36229,16917,21581,62426,27862,11612,54284,35702,194034,355,24277,48262,87411,70504,310164,118018,12516,47559,43502,57433,107139,9290,66533,80863,14634,34312,91725,28606,21342,67241,72355,43244,375789,37402,174015,105070,8342,44167,67494,1890,16365,11723,271002,1865,47918,8350,45564,27742,25110,125803,8553,49504,81925,62211,4534,15491,19011,80373,206920,667,102405,128623,245524,5553,113309,192739,65766,19567,22832,261958,29679,21293,71134,20962,105123,24721,860,21752,33448,18372,157167,94822,35770,173224,232737,75729,28937,46828,28062,25453,5207,140366,36665,30652,6169,67920,150458,92040,23186,184604,92330,20891,176492,49427,27828,38305,42495,143982,49560,25503,90043,29747,65328,47830,12932,11068,77721,9003,25213,94205,140426,46090,89945,138173,192691,33329,112232,129905,35709,27514,1841,19957,31411,127476,53572,17497,173549,55063,175135,19841,69314,5192,237921,117660,150697,4060,273045,50414,98940,65348,153665,164423,58804,156695,48994,213928,86036,28608,8355,39574,34540,16927,135680,18374,151587,10830,53805,16878,16623,4282,48030,8537,14986,46102,13062,72897,72,33050,108227,39451,45935,651,113320,40535,95176,57450,48843,5003,19019,10407,211163,3848,1068,4988,32091,30095,41692,15099,43602,107434,50744,7627,171349,16313,150832,352665,207750,33937,38256,51091,156e3,87889,90663,84175,24908,114900,50365,31494,83829,5398,169342,47521,54818,18935,8356,43094,41212,174536,10082,92550,6678,60614,23355,69721,14796,34149,128830,58187,3179,208,40325,28399,225029,401412,51150,31580,207268,6657,10993,69818,64282,289845,23308,12961,38447,6681,52944,31855,2572,47646,120728,179148,37240,45196,218274,4816,3695,21961,50084,35209,18073,51452,27004,6100,33941,1377,84831,171214,85,141510,9078,99227,32610,6417,11718,49868,65579,87902,73018,49062,46280,61742,21512,40862,107733,15941,29168,157765,144919,14487,5767,158014,140070,7241,573,71584,16921,223566,40331,179473,35081,47926,140885,41508,52104,59180,42310,32811,29048,123517,102413,80208,10104,14746,12649,153641,126022,37965,113017,4171,83,142592,2809,6362,50416,71323,116894,260776,16204,1524,5760,30351,12658,20703,54403,36083,45408,74772,4946,14485,50759,111222,10890,2195,167147,92962,130534,16283,177256,35016,15472,210156,151187,73922,117691,43250,52051,37392,24811,24358,30830,5775,818,21969,1476,127322,151783,58392,31021,106913,65215,89407,90802,28531,11690,20234,95249,44602,37256,18707,11928,5161,4410,26571,51903,49768,22008,25252,65780,209499,68769,203726,13249,137363,48845,86823,6658,5674,31881,1083,1823,108676,34518,166752,13791,14287,91576,91429,8665,11529,26401,16191,91972,30964,5254,28486,54697,79613,66520,18447,22870,45203,194466,22822,51703,12278,76716,44595,73455,33546,12235,144843,36154,51247,11116,33040,3180,225753,60864,1972,28469,12891,28879,10338,144157,56294,353058,38302,41447,87532,110616,27065,168438,6557,1213,50804,144643,24817,2390,136531,38174,247513,16190,4059,122791,131994,137430,39506,57650,16305,5188,54309,106128,20628,88071,67394,395446,250285,66176,91254,1399,114196,43915,60230,44853,27206,106353,43013,18733,345105,226453,51202,16607,57106,117175,35492,10476,89598,127439,15187,39624,13688,61570,10615,31111,59370,6238,175252,32143,224492,41388,95408,34384,148238,78307,38959,9340,160091,61443,15737,11216,41244,170,38299,102443,113097,26382,14027,33707,3957,76300,66160,19431,18900,6952,1717,108656,82206,188021,257335,27295,43999,41210,31777,46956,57457,12657,11489,15697,48060,204748,53583,82422,284790,30503,137341,8120,19615,220311,15991,10217,63424,9808,67431,70976,98221,4491,15177,28535,144789,751,13230,2394,1504,33977,132104,30316,22230,931,97193,185240,24826,22687,174322,15307,22988,1390,188745,180325,29580,59068,74903,18994,29195,79,15436,7622,38462,11566,138710,44828,45774,37768,99236,68137,84083,19282,22698,17134,74807,126662,173497,46248,16938,119735,3212,28292,213652,49013,9975,32180,45660,86250,4801,68788,95490,77482,113751,11994,44624,94452,46839,128497,100316,5798,58588,73184,202987,65417,37790,88524,1606,43156,97964,105717,34947,11203,100060,37742,130074,93653,107799,94311,196106,41347,8035,10780,16390,27883,118236,167395,1979,25006,19375,31628,18916,144723,78502,114047,103107,86492,107686,5844,20934,206963,23556,22591,16562,146333,20167,10471,117434,33085,2863,9740,36669,41849,37271,22790,18209,28979,8231,12952,54408,21731,25130,45208,55748,138120,75826,414,29593,9925,292865,25999,683,123149,7036,92159,86055,61827,103680,23176,54918,58466,57578,13305,5709,86479,16697,31064,17660,200919,10770,49793,33423,32370,52047,16488,62555,6459,8426,83493,7763,59725,82812,18628,67760,79405,68557,9612,7673,28102,56517,69620,171797,32458,29541,15870,81109,32080,207644,71495,21202,11039,91036,61230,2810,130800,32260,4613,60590,37112,75214,33979,126402,155062,30642,63875,12810,194463,82799,47664,16725,36685,43367,61099,449,172150,102867,21691,301838,36745,7130,18671,57316,34852,38034,54182,35578,65900,99486,19771,3456,2658,16914,99866,28390,28109,8262,21147,34353,20006,4228,137085,1675,203023,283196,198286,214375,163329,290603,152574,40471,83506,30068,14730,23177,131539,34759,27668,32178,71896,104799,116305,85430,119262,42860,25160,8911,23428,49437,105322,6519,16203,6349,74711,1230,38045,8540,75165,44736,25909,51026,317034,4984,32281,91312,27060,44431,17817,45363,155937,239085,35697,59784,91993,29531,126740,213757,76560,167776,285273,24262,8237,65030,41160,74437,48804,118916,13159,37842,1031,75349,1478,11655,108777,23435,277425,101734,67469,70231,124711,43532,28514,65526,54956,1e3,21882,17728,25302,40952,52214,149632,1999,2111,3259,63362,89961,220561,39777,26335,9063,10572,12416,34551,34623,38604,24723,5947,15588,69927,66252,119177,69173,46629,28714,70715,212408,20521,406913,74380,11716,50659,50862,37009,88460,130101,7210,53853,538,65120,151950,55806,163748,52837,13153,21100,16674,64536,6091,138201,44837,58547,3723,163,2177,32288,85454,34033,8497,14282,25742,10535,10741,79559,117493,243787,49337,100718,79495,40139,42956,7551,55433,15421,31509,23034,45081,547,61176,53434,328001,8470,36263,30145,4519,74173,53935,11845,73774,60211,78025,3,4102,73782,109293,315332,48412,26683,13714,6865,20128,18490,104141,325,39470,171970,115860,15707,7268,73301,74336,31370,2368,111827,107757,136231,142844,97138,96638,84053,38691,23801,1588,10573,122098,77039,240,186135,146101,11996,18143,112963,46171,155836,348769,47795,121213,116266,132515,3344,144804,31286,99187,255838,129694,35894,48779,55235,148582,71967,65282,15174,13920,47080,6147,108242,157593,125025,7136,1286,28957,127956,28402,98813,20805,7532,109417,40610,5041,32958,15142,18408,108596,33543,50517,27748,80114,233434,91447,487,37094,100048,30541,43477,10639,89862,155868,37667,8726,60684,237903,73408,99589,12190,38739,97348,3914,13594,2680,149016,13907,30171,28343,23530,115225,61104,35821,147679,14337,4297,244282,24085,326976,56428,7851,21303,131620,71446,83253,68692,111870,5224,15813,38197,49026,45057,13660,3306,76345,40671,27905,91072,996,68527,62085,91351,122634,55109,168209,2024,27560,112707,17352,8306,167115,169921,166958,5031,46020,11844,67284,19130,76185,6920,32849,5450,14610,22451,21002,17392,31872,66682,84796,13709,40210,59898,12029,8719,53564,21462,91884,21647,88379,194428,12754,37797,132826,160016,22567,54383,53186,77611,31107,8339,4694,19185,90355,23597,17222,140675,28442,23668,55977,9128,61555,28774,155229,17658,9390,24379,69357,15752,127381,239631,62460,93181,55913,45133,140155,18676,25249,33164,29581,82837,67223,22362,29975,7317,52813,1943,29613,20012,207130,49617,49651,5636,15334,36313,29226,28084,95247,72072,19e3,224932,15811,114,32127,38097,37508,88507,37225,27359,91626,12193,69279,20608,11055,88156,92808,2152,57259,55275,72789,24475,104414,1708,9882,3818,48661,66897,1631,34806,227930,85815,87753,18321,250664,72733,25107,206797,50891,8082,196411,92596,96764,152823,65514,22819,387277,62176,51225,40329,15563,189,3659,73670,64357,51793,275136,33482,86653,74615,67058,11318,125720,15388,22388,8267,1730,102663,170910,40784,7144,85373,13040,7088,94309,583,44224,140424,77439,18496,164026,36578,4722,9151,5824,63365,26510,35199,40500,79277,32495,44614,35233,9566,203293,152144,7097,2330,183480,98629,13423,330887,44130,68600,30939,97829,31012,345465,56747,94879,4939,160027,149761,99423,46099,32251,15332,8761,96094,128555,5763,235318,222223,55729,30241,55420,201746,3987,81382,8259,49325,23287,7719,24633,251100,92311,18591,110533,64759,170260,393860,7175,21144,132887,3593,75346,101277,91109,16387,259187,11627,57459,173829,44694,55780,49797,89192,120443,62622,3904,14814,23887,1027,112258,64955,99800,11132,66353,36202,48624,18158,88481,96882,43059,11040,2455,7077,21651,181159,99126,100434,61388,68186,19161,110468,120052,8819,55324,41494,7014,37689,3618,87729,92615,207943,9823,128657,12587,15857,6379,67628,51216,71775,157617,63244,1503,3864,218754,110864,5769,21492,7243,1192,87921,85529,31512,18537,42698,35350,73510,84474,34301,8991,21013,35034,566,38832,19838,35586,37216,39413,55006,12178,59742,856,84563,6900,25632,17437,49786,30723,13847,70845,4044,7843,23944,235976,55530,48942,6518,20939,73769,192653,52936,95207,23895,132542,142982,22632,87452,48042,54018,178468,10728,26230,23559,363,81269,142012,5718,346258,31456,84333,246476,51018,66692,101804,120570,39962,30373,70593,2864,60541,19425,54209,104092,7201,31545,48018,25865,15442,46257,40443,8328,6451,111782,47527,97754,33046,470,245116,31095,39,91934,87208,73470,36708,36521,12801,70624,36272,8892,79768,12427,55454,103756,5908,52390,62962,22720,141138,94634,41689,128402,126390,6628,106394,35527,134394,82727,254651,194502,148064,89549,3202,28359,957,21954,27906,49840,142747,8307,24206,48978,1186,71728,133038,71474,91306,6333,110959,74600,70387,18983,62609,56057,22970,1147,135850,1321,28834,3578,59715,102227,32827,81415,99952,55636,257598,390,22702,35701,85872,402916,39216,189795,14929,19467,10112,144422,61514,5279,63421,134686,41436,8424,51925,10598,132295,124416,4604,194739,210929,57866,31829,51626,50007,9976,91878,61906,56168,81906,60918,61859,40017,23059,16887,40927,62064,12785,32893,32913,21782,93965,20169,44387,79084,38463,11457,93950,27127,157050,2697,337088,5116,54128,48255,33279,8821,27352,25515,124022,65710,28906,38557,33390,1722,104435,72215,38551,12094,30978,25113,6671,37355,175109,42862,98024,65406,221276,59624,118012,64637,78760,86697,21426,1639,40350,12584,67193,84144,31396,7863,143011,69629,63112,9454,28666,65798,46372,134721,6314,51402,30837,151922,2847,38676,38008,92823,136245,17540,5504,109295,205242,37606,5211,214892,1586,20670,208711,137743,19328,40652,16995,20023,14657,154919,34422,12996,13918,38221,47690,16398,2959,37680,89122,6721,198469,91876,172043,83898,101992,26084,94570,3635,76958,22853,76497,38266,176590,168403,44464,142840,79180,184594,1984,41806,83147,11985,6546,366068,59732,24533,271505,8736,39084,222992,93429,28962,58985,86665,8432,30028,14548,32439,54424,165029,55175,27458,69046,121277,46168,33732,20661,24581,135574,123110,37556,79260,72611,16957,12939,46162,58238,44907,72936,253758,41324,32518,96480,11949,124438,65280,43256,34107,53533,43531,37037,28366,45970,32741,173438,6121,194202,62969,26355,30314,58370,28455,1848,50519,82830,90393,21761,295490,10936,256940,133568,44050,20269,4089,27457,21610,219460,36743,14821,101388,52005,13124,30979,140816,167362,26054,18458,60789,34917,40447,26606,33422,9066,3452,83614,5761,20263,137238,25038,91310,101,52322,74548,42572,38084,214054,186568,31802,17665,30620,141936,37730,14420,4265,187218,49640,188208,51441,55388,96452,66659,40869,42039,60967,221027,19234,178581,29105,96050,9165,196118,157335,3738,40354,117436,2965,34136,59659,15570,50843,230035,31444,71260,43886,18316,5387,38500,168508,17406,32174,8828,103373,143806,90367,3560,18719,122310,16508,26719,2541,105429,6645,37998,73190,10591,235916,49737,87112,233941,53188,32193,79154,4544,52905,126477,7580,63501,57314,3216,31337,6541,103083,60846,49,9756,15481,1355,43840,14319,13743,27486,10222,73114,230718,418644,16706,6674,279748,23058,45273,295831,86306,2743,5535,88773,21829,35253,120938,31153,3169,16839,42847,8751,80974,33942,36867,35514,16485,26474,77775,56877,5391,48346,3882,108713,31403,27804,55248,26235,43821,136104,40118,175507,28034,203908,18732,1788,34030,106427,36958,54359,7251,44936,15356,69139,455,157915,22173,140291,50348,43275,82066,49621,54952,15216,36226,96695,66855,6936,1987,8227,196087,4631,68827,99004,47541,110265,17953,147605,110242,58520,31312,38724,329975,642,3155,34497,75937,6207,73843,6120,17249,51429,117746,3218,910,68961,319671,14938,29555,34700,1649,66673,72268,9655,76800,153087,6941,210168,27130,35398,1780,73242,3135,56689,19556,165307,8765,35967,121458,13333,70453,17350,117253,22265,13340,44265,39869,441,3742,135025,23581,33309,16543,17731,13291,157637,283005,21408,101360,63887,52312,83873,5338,233779,23759,186949,34531,177320,38069,156465,91004,19353,59852,68160,14891,1338,1072,29823,1950,28901,81407,313445,73038,84807,162348,240257,37162,138934,16111,58013,41253,102951,16457,96056,19541,56402,67217,41638,94381,89674,29481,37456,80815,151579,13937,13683,132537,19699,134545,67020,29816,222341,141235,427578,48868,129557,233342,23077,87871,16213,18728,16184,9469,37913,19680,2798,171356,178328,13216,50049,72690,71904,124644,55455,7504,29052,41036,266546,19899,30391,188755,8659,59469,16,104298,112943,53865,76203,138226,68857,139953,14125,107625,119795,173133,4398,50273,48808,54390,16466,122086,31835,67035,50971,48859,7508,46427,66477,73021,84615,39985,83076,46779,201569,53336,36443,60865,168164,143810,51393,25548,169307,32896,24485,38424,21837,29087,275813,51674,6714,64883,46169,187369,55186,76192,12852,12018,62134,31067,118303,16542,12125,10579,4928,26291,43854,7091,10946,253716,109062,39283,17261,113012,258512,47764,125126,32646,55892,80279,201623,149872,3192,385,1208,48750,5376,58738,22335,5427,82416,47811,32435,143086,38930,94128,59975,156037,37977,38224,62485,7698,50405,71027,16462,21559,136153,34131,107506,162069,63703,3101,215029,40407,4178,3774,9187,80019,17880,97926,67579,2600,18405,8351,47924,86638,70820,92206,86453,29610,42241,119200,3198,15466,67813,57863,35454,4779,99518,4649,104641,144269,33730,38073,65864,6838,109456,193298,154007,5623,45741,30846,182578,25573,157224,1543,58575,138703,146140,44971,49356,18275,59064,20300,13122,11848,24453,11973,9797,86843,2919,25530,49210,1130,161220,76788,75373,85604,34926,36014,17777,17255,51533,11676,92226,51845,119859,21525,5936,18507,28050,1140,31418,14857,34207,47859,10750,36382,32079,106909,59426,87757,38393,110042,15965,97104,33757,35344,97993,53979,33651,45407,41884,82515,173089,7177,58371,35365,47543,51927,35587,10670,23544,29306,84233,39976,76076,62097,9007,8668,28119,78281,120790,19835,143020,54968,18670,64959,20649,34469,42570,33001,136570,87796,120044,1106,58700,63951,127623,12805,83057,40212,31773,49850,7361,54336,347524,101314,23751,19569,48791,29174,49369,20467,7465,75842,38281,623,112457,60210,28849,51003,94720,6426,90047,85560,43761,3579,85105,34607,90410,118528,7224,42907,111163,18168,6960,161135,191298,5247,100584,127552,171568,20121,91173,12636,54615,20199,63730,98105,2396,40387,14438,125012,4765,33235,12865,45299,37728,82098,77872,114037,59253,19675,24838,398016,102561,11446,17069,57508,178277,65836,99941,26114,2585,271882,136866,50126,11027,155648,118367,14585,8910,123015,335383,40434,41016,53021,14439,87098,176860,201543,121888,2358,9286,5739,22666,54270,37884,169381,33984,93859,16124,89364,72207,51639,76366,99029,65812,2198,12147,174891,194289,6986,30252,88822,21284,11445,288337,160821,33034,100869,43852,25761,52882,1144,103809,1924,84458,86079,43411,13542,139276,18141,34978,41298,7276,26481,173800,33210,17951,142652,33616,33677,2210,19941,98568,2486,192414,80136,12058,235883,50963,249638,29572,27221,47034,6124,72107,63346,97620,158513,299699,40388,23235,37176,224244,198386,121323,67992,23827,63170,17838,106622,158590,26807,5345,23489,91891,55474,74834,37981,13058,5977,72552,34706,26828,145172,19904,21367,34043,960,77092,91381,4733,47446,7680,41697,5170,16960,14741,46101,13656,473,51842,37433,11103,11551,121951,13191,97536,165932,50397,51628,129028,9069,44885,6590,59195,47045,32940,225472,90345,21833,13303,29407,96615,141951,5198,6028,18395,7181,3861,14966,156358,167182,36529,55253,25942,173153,30959,27261,50691,150176,162201,38467,48462,80602,42163,118482,168,108756,26011,17166,54149,456538,22512,91374,13816,90358,131615,18132,226707,1824,28139,26860,42253,93877,77351,65575,8980,80574,22020,27948,40422,91324,76376,13528,39281,91685,82215,122541,144066,1983,193851,17283,26320,2739,194978,4790,26845,42627,61300,65815,174612,55133,4200,191130,79771,158321,52280,166796,221620,62461,11278,4067,88152,83409,31717,121367,13522,47325,37945,10406,174348,249321,154101,64912,29938,51775,17220,15776,166138,78890,84425,54121,42861,16368,24572,291647,10197,32073,22651,11677,97509,26952,35787,18424,41910,71614,94977,72318,41594,70024,275419,37702,60199,7335,39107,61315,18271,18394,33768,87884,104277,123724,7277,56288,71981,189803,49320,3352,6798,14240,8954,69220,94433,57372,28620,68863,193727,85575,42309,41667,67689,42081,22543,44824,12719,28540,114236,101553,27638,27296,4300,5353,4663,19379,94098,3758,95888,95144,80344,87320,28447,259518,12718,71391,152731,37063,24132,31911,104896,15672,103782,1521,4945,72541,23717,122632,15619,87175,206120,29428,189780,61416,28350,44457,972,1175,47233,198738,95789,41907,21953,97034,59341,22864,53713,16873,32971,20693,20954,31336,21477,16169,38370,16412,9019,3841,24599,21938,17085,6484,81198,76413,5849,72514,12320,65247,276175,37234,59796,52642,16312,57349,198507,94148,46134,18958,125552,1747,18725,151873,14901,5490,68287,29470,3689,64794,40814,26018,25692,54450,2703,88278,124886,173087,174e3,24159,179477,24276,46004,201876,209202,445,52876,31948,30206,157610,39180,18439,44124,50469,5774,96278,222758,200216,50290,45486,20435,46986,46276,140133,142326,15569,13363,47522,92583,2182,7135,16853,22998,30272,4952,63263,35623,39096,53789,44864,20053,110392,124213,4630,16087,28221,127787,25839,77481,44693,13464,113146,6983,27069,55717,50102,4760,7107,26186,66507,59145,36032,104182,71328,29425,64317,50781,47465,94298,69706,74899,22754,120756,25108,93077,56834,73286,39928,16218,41699,176763,7555,70819,50083,26895,23315,26014,16773,123079,41712,5719,31516,90427,158540,85051,183128,40864,27505,55392,9058,45224,96857,30901,136622,96557,56304,120061,11501,151448,5773,89743,7769,86069,2935,18471,41628,10114,33660,110170,49479,26745,92846,33221,26731,18795,87076,8550,2100,29972,120289,3077,72490,33784,2630,208722,50861,63483,79029,6419,39467,14302,45286,64207,9686,67513,44170,1050,77246,59266,17055,53801,7150,11111,42432,4278,94579,362117,36175,42902,41933,39002,98489,22913,74161,84773,57036,17556,162288,74485,178760,93867,73635,128860,50362,261,67455,80001,46080,35662,4368,25247,19230,74393,22588,1822,27682,235324,13798,85998,13194,235067,23514,71669,147632,23191,134748,214683,105101,1518,25489,247114,7380,54842,26922,3971,26361,20844,68642,170517,77339,123255,8963,77818,150998,48466,36806,2732,23261,11741,236162,18243,126216,28690,50546,16385,92760,197383,246558,201295,88255,67588,71687,176076,172653,169058,33906,63747,24835,157621,43338,30050,46152,132741,2770,51371,94835,6614,15112,11749,56936,1250,19027,399017,58036,100215,23388,55815,308768,124152,94803,9521,64186,8971,28,30427,62163,7616,103838,35079,29203,131235,7743,17389,10882,37420,61460,228512,85363,41581,131077,62822,119647,10130,54445,26925,19968,29016,24446,74028,24176,61448,67185,9254,8563,119129,9771,99184,37716,39514,10532,221512,258753,218630,55980,23394,32141,61924,66749,32411,3741,36475,26678,77010,44946,91203,128749,116953,20476,49625,53116,13735,102335,29376,51946,83407,67892,59212,34685,21083,1546,112982,32972,74397,1078,190545,16082,86140,58591,89611,101531,10061,105104,76319,20035,17551,52611,169061,190842,100780,23907,90413,115619,9675,34710,193435,49443,129734,11183,258877,16318,136182,126808,44635,27304,192375,2599,125648,47051,12091,23814,721,58800,40137,66726,97930,60877,74487,7942,54326,9841,41428,13762,8211,85383,6950,99177,79806,201786,296464,124087,13144,29741,41721,47634,55088,254286,106408,17041,99064,12942,64086,45233,14005,2612,55827,255,7984,13980,38574,12776,46654,73499,249951,2101,26676,25996,132326,116415,119062,50449,31033,23038,11589,179252,20007,14860,129270,21143,17796,144715,60106,70758,69842,34674,282133,44014,16774,57268,38528,24053,46373,201667,28327,471023,51889,102667,21193,114909,84132,69317,96723,67969,16134,68145,15058,28765,32035,2524,101089,98664,25045,76571,14957,86040,118506,262428,154764,81573,39681,283900,73287,127825,544,80448,52347,38512,175971,15180,45467,33086,46552,48894,81107,43213,36672,54025,76703,8053,7608,13299,56619,20752,238099,54164,105133,1444,32942,953,37564,8e3,66316,119463,106817,404,13667,149108,128597,31267,10269,49836,106150,1484,52330,76965,160486,171648,38456,31263,22424,37738,66245,67467,143369,60471,75610,20895,115528,86070,60854,40796,49347,18989,15030,11371,37578,15779,79867,10187,86462,46402,155626,93200,40229,7090,57547,108053,99598,11088,47505,41218,206017,2173,20988,30219,22919,80563,57566,42369,93141,41675,2407,182519,120495,27154,16702,29456,14349,7958,16688,117177,140375,42467,261919,74916,153569,10836,34742,49526,7621,105997,12212,2270,392377,7755,17959,25086,232152,138791,33847,13860,35316,5811,1344,71259,50452,207539,92635,50359,5821,33674,30255,2086,2587,96264,17543,42,6029,9580,43007,139248,82831,12917,29607,25786,51467,42137,85161,100698,31561,88989,121990,278500,3602,109344,37982,15279,116442,28936,30880,87894,58079,128661,126731,67392,28051,146885,4861,16216,97344,42827,147561,153948,22684,21335,47685,1853,43349,15185,59642,10229,25520,187921,108972,5579,98037,24945,6697,19193,63734,137934,75056,89740,19767,224268,56138,63643,151661,39313,70618,84031,89723,84074,13703,85626,35460,8867,64845,3439,57906,99776,63968,49270,81130,34356,16210,23547,36446,34090,140028,72439,2221,22163,57058,363492,113754,18913,95451,48663,54464,54037,176097,68425,3023,34906,29482,117389,341780,80431,58330,16753,92616,60907,94846,147486,4498,48646,7773,46801,7778,18946,464978,47558,33223,177444,7328,15626,63337,94700,11743,9351,255024,39098,16447,42647,96230,39769,58840,10068,63439,35800,65843,58823,413844,9156,51258,7434,61791,85018,6872,3692,28096,7121,33024,6009,75532,31997,192535,9661,3304,9547,14753,31987,25314,55689,15896,20430,39472,31340,99744,25398,115569,54883,28719,205423,23071,57855,64638,149867,25671,82403,37616,20668,39989,77996,74948,140555,175248,64810,36515,46595,4958,248773,24045,28728,136673,168704,20804,114833,100325,27135,21205,96151,153134,45992,7093,13992,76047,1980,19432,145001,75159,87462,17710,1013,45556,34297,144882,20648,26061,11319,129567,108555,18872,464580,33386,22717,65948,167189,5603,135042,79542,8801,202632,18114,91882,5973,5239,67315,4431,60916,47819,71693,32597,32606,18183,45072,80329,76385,24749,51305,40314,156514,14693,130345,13168,66214,18029,12858,34801,27628,14544,10823,40522,40185,33739,148694,23548,9923,61012,28859,17933,19442,34364,99849,164107,141167,30629,21054,6744,36491,8096,42474,41706,155060,30650,10600,163442,1143,96655,61390,52359,7559,51568,64256,203854,4467,22453,14504,436398,7878,6980,8293,63610,293747,16167,35763,19627,147603,15419,18032,110744,51346,33681,54571,40472,48615,39073,21604,13754,173027,92560,11083,47299,63062,11813,52007,29883,9734,139722,15953,1550,20651,13616,49306,16113,90089,92326,7584,30712,72424,164858,6831,152871,55746,197721,34167,196442,6022,112107,55215,7538,123381,4920,43539,77165,8939,50392,34192,20225,79762,22505,58667,40770,29788,97180,82835,4568,8579,13273,363569,35898,49983,436,36598,3237,131691,62418,35591,8101,4073,379438,65218,76072,33887,2968,27573,212619,288680,68278,72851,150504,217896,6913,121339,22017,35340,51072,43616,75043,31437,10833,81487,4364,22968,41454,106687,85446,19863,109625,149241,524,141850,214404,54376,657,237023,9401,108137,53800,32474,49712,53334,126876,27337,45552,177696,8269,15036,12097,42240,2328,125374,119295,99715,2500,19624,39441,27220,102691,60957,94543,39101,18566,67362,13975,78230,25017,34017,239007,90027,39351,41681,35354,43822,1043,916,58587,141983,94818,38799,75459,41114,67432,16195,36606,59568,22272,126769,31424,68659,12287,134302,257977,5756,207285,95637,47248,117689,19583,77451,22373,12200,54993,117118,34244,29386,34562,53819,71267,64172,77665,49368,7716,59301,25749,45426,194789,17297,2650,1766,32501,45198,20403,20984,6600,14171,94604,19037,5402,29896,9938,59935,109708,88081,145182,44844,39167,352626,164173,35374,45982,6122,154,73419,220487,53834,53601,17992,8609,229321,5610,68098,66815,71012,95069,140968,27396,8957,134489,24656,86659,56598,134852,17316,123838,255436,6613,41610,138033,81452,32023,32396,123687,63398,8693,29712,30407,19296,121188,3551,36099,20032,111948,56624,16547,27453,35916,15378,52039,56849,13489,22214,73177,53097,277349,2157,14029,187886,10260,141743,246460,91880,50869,3788,49486,133566,54950,33120,129337,53768,18333,9525,26902,312251,10297,9020,70759,16647,112432,59260,84609,9818,82766,73569,468,46001,75780,55028,52106,11498,43645,108069,17150,17753,29417,16705,31799,9606,289,122254,115975,8620,6133,255357,56908,14456,133464,43554,79224,11247,29630,160,12756,25464,65960,350428,62521,321796,100359,67358,35169,46172,113128,48988,88868,31094,33266,6847,60887,98188,49659,69117,92977,220228,13947,80181,35103,62170,97351,13475,2440,199768,19498,36597,46971,25234,67806,62881,84717,73648,181966,10488,94149,21550,26655,63436,48375,14405,165650,9621,24439,28043,42735,4490,29963,56674,45373,1934,262446,50855,67098,26898,5261,52696,40644,33900,9440,180286,87162,22940,19704,26936,69769,10254,101759,27406,12243,48e3,73926,113215,54935,5726,192787,4312,106216,9366,11550,52949,23457,212271,277152,133895,108374,6191,96477,29980,218916,58024,54696,40853,91124,65894,91170,65908,252552,6793,29212,15389,44516,122515,52617,35058,9017,103536,39510,49136,19242,130652,662077,74699,47024,31422,8517,73351,24399,13867,128360,4810,4434,61779,111983,61036,17798,110240,59722,102960,39688,10001,23803,23039,176498,56659,44814,134295,17188,77577,74466,226175,102472,154333,63900,111747,18062,41171,79669,32773,408933,42562,28931,30907,107388,43487,2946,240310,23938,24354,319,184983,7927,6488,1422,10790,68809,68209,64775,4361,202,17123,59634,51200,44391,18188,17843,2619,74278,3230,9540,47187,21702,36274,56894,43907,16310,34790,16866,6150,5561,13587,107545,108873,126867,86986,28640,33427,19017,5762,80637,17430,46903,2047,131055,25958,13558,5444,47152,13900,44563,122857,45348,70863,39593,54332,38068,33637,318,40310,143467,18502,24520,11377,62013,28942,27246,28269,83545,17999,59015,90707,30065,15161,34720,1263,37008,2012,6060,98575,92933,5721,299,199555,24578,29223,2985,743,115825,109523,136657,47454,26378,53586,3733,174945,93340,244456,5693,37386,28782,89767,27545,23573,18798,136425,34320,84778,20041,48453,38215,7477,71958,40621,8773,5874,187927,105965,51100,43533,18083,8443,10180,43597,2003,183999,69689,12216,129696,146188,62389,34044,68410,12765,43273,26949,266807,3345,34477,79197,5688,47539,213110,21634,22257,50092,32222,42346,39530,63668,98,134978,74022,5152,59088,174145,37220,9934,9545,118937,5724,87240,19875,15784,40143,23263,87513,181654,285152,37881,263241,4966,43934,10433,186657,6470,74416,225854,25908,142677,246262,32280,6192,75890,45546,143264,135305,29742,47013,77787,11732,126658,8763,37950,21806,57557,113464,89465,108995,164574,23894,22996,23169,15369,23117,17642,130607,40503,36239,280990,44666,9981,40427,147487,26869,168452,32886,32991,46798,240839,15111,70502,65697,88548,44145,28701,48767,31139,206777,35659,181164,166262,14554,171445,31786,66523,76607,17956,6507,31279,90476,116611,167918,6560,1243,115324,80128,41867,55897,187323,37069,32596,189444,145931,13390,105530,65709,26805,6999,55714,41300,22915,68951,22138,21120,22264,10058,19945,33635,56123,99085,10032,5818,6016,46649,57476,35264,94413,112522,262288,93686,83038,14341,23204,28807,66084,77987,6101,126673,7133,38126,5923,122091,170240,97772,46874,215746,43948,41622,3272,55596,8332,146411,251315,13533,8561,81521,115449,48616,175175,2063,186556,3036,134537,75772,29728,82360,22973,186559,86348,89100,38388,82297,45610,2613,87082,9986,177812,57884,23591,47485,42543,33582,44713,74439,257444,252451,31825,35631,38540,33066,5147,13973,4343,51830,70378,22827,26448,95560,36896,241741,48067,203953,298860,61620,20450,3220,67272,6586,107662,100160,108684,6929,57226,4762,7457,1320,40404,77204,99309,62750,208653,59977,44e3,74315,34332,5819,172217,64904,114077,18147,84012,1791,98456,90930,21446,116669,103938,7422,85140,59713,5768,326211,16239,75411,13229,29398,10758,236107,1539,112472,95979,152154,151294,306,21196,38146,10700,6891,84282,109646,56492,40539,6589,119491,51354,30685,140209,136906,29622,73617,49553,70525,51671,166869,139616,74395,37439,49595,45678,11959,33211,86560,52434,9282,62690,112155,130810,5243,108261,99970,265613,72551,80049,6391,33365,90721,66737,69872,87011,1860,9032,112544,60905,37371,89015,140351,19076,850,373531,2802,36725,218795,72062,28990,16550,24614,7815,6187,26336,33373,32162,42791,73555,32062,23386,10244,56392,49442,27076,136262,12412,14883,1134,33675,97153,199281,15608,100152,74072,47942,254301,36451,16026,10687,65067,56708,254030,30290,50490,13864,57941,259331,35588,23485,43486,24869,21620,92971,22072,88645,1048,182050,13343,32452,14825,19509,3325,216938,45740,99716,189082,53740,78245,25609,24311,176777,47340,308354,40669,66085,14102,125339,9225,128709,97207,1271,200933,78439,113451,88975,18324,46521,11819,18570,141756,72512,170020,52754,63550,118515,103073,93330,32736,50499,14722,31600,68452,398867,29316,172786,18417,104924,2606,5670,84818,16288,67106,59580,82929,607401,291,85829,359,15897,35830,50696,65630,52672,22115,356968,29895,40837,231192,34024,38957,26722,406,23335,124952,72068,68804,13268,147101,164740,276569,162596,66943,11569,26654,66358,4777,23229,102127,5848,978,2921,59666,5371,28212,90108,42938,39320,2499,4271,108792,33510,125072,71653,65239,38250,66357,38577,13964,86251,35708,50755,36010,29448,12209,3844,38222,206337,100876,67827,137088,14167,252225,84163,195270,1306,5703,54198,779,46802,22028,51124,86759,70560,113164,35685,162145,45471,34561,422,2611,6464,47486,19223,38246,9191,18331,89942,243642,212364,15893,17518,22617,6409,30046,126182,59716,36560,104428,18846,26592,19458,50793,147333,30826,1388,27647,10922,14495,33545,19269,135828,39727,41601,46931,233379,49169,131130,182112,16276,82381,118209,142445,128310,19672,28740,82907,33436,3118,102206,28723,24819,41937,38854,5157,3881,111491,1142,9776,421673,152241,29309,14961,87854,6054,15424,3796,82656,54996,2108,55367,239450,154525,9643,118103,106041,64601,68549,48707,30266,25772,18740,9462,229669,91798,112152,191327,14493,72828,8175,66636,236474,25817,87351,129027,76653,20422,22983,71240,27846,44661,12399,46158,77704,53101,35032,11072,17300,109294,33638,24408,1895,11241,760,17584,82479,125877,63150,141075,34259,23274,81698,15732,43577,48340,91584,14688,16379,24481,150280,96420,262050,48635,43727,61819,56268,72003,88178,17281,79912,13218,122519,125295,166396,11811,2171,118930,67746,17636,178278,174656,95661,173039,83845,79689,17473,98555,127696,203415,54730,22925,232239,9309,12136,175026,20740,180188,10747,39816,314017,266131,10040,175732,112550,220651,31974,37393,888,23008,86799,4303,64905,148467,75337,251,3284,370102,50264,9835,5438,23655,4481,29851,329,12855,7162,64931,78141,12804,42372,296771,83547,18624,34874,86271,3360,48665,77735,88767,11463,63527,28889,22258,29140,194315,113924,25499,6406,31334,1845,4802,49184,43455,35469,127594,92970,61038,115005,38840,87761,106838,8811,20572,55637,11162,96721,132425,108925,2948,125457,36356,3502,75270,27622,127192,2561,123095,49394,61155,16897,110064,9699,89448,53356,19628,220310,21622,83036,9885,112214,6087,26713,17901,161912,91492,3440,68594,9266,92238,8087,6866,150194,72175,80701,13459,31836,43243,239700,95846,44749,50647,21945,230538,120612,132371,244604,5193,105637,34661,41341,68775,85393,1874,8771,33718,49672,77403,595452,99507,6490,58895,128742,7704,39239,73217,43816,62824,37804,199976,22361,80005,87514,94832,14089,4574,139975,59142,75523,100268,43906,53442,15152,2547,186002,17011,19513,204282,3343,60568,128318,119250,4298,51871,41336,71759,21921,45074,98169,145889,99427,11350,1237,5520,28799,7803,53702,21026,136352,38293,128690,12158,90132,44600,10184,26957,39459,126025,78904,82999,59373,39301,150198,120529,153042,20177,50089,14764,271571,30530,123161,38975,101562,22941,5648,124654,109243,69817,71675,49162,106884,21241,107795,30258,16572,188262,141456,7688,60718,8271,11044,32440,104608,103419,236109,93156,43293,128929,42107,67180,25201,115254,185488,130954,72813,167547,20537,39969,38432,22582,184022,1139,27199,5655,17767,97412,122606,209377,27070,35871,326617,188954,42680,73512,80911,22629,3011,95021,315242,157737,383,41821,41808,19335,27950,15674,25677,110950,35375,76835,59108,57370,35262,16569,160415,37706,78086,32041,49691,137143,9782,172080,50148,77917,6323,10110,69172,17711,21795,59511,76184,135114,31046,132319,59105,157578,20549,80778,57649,158421,65143,4575,72235,21899,10797,92745,34035,106079,80159,4508,78304,25350,75457,46458,32937,25623,47,8531,104751,84953,8138,36508,187199,66310,115274,13253,32461,38536,1916,42007,187160,35055,26325,84394,35963,94216,45590,97782];var Mi=15,Oi=class{log;peerRouting;routingTable;refreshInterval;refreshQueryTimeout;commonPrefixLengthRefreshedAt;refreshTimeoutId;constructor(e,t){let{peerRouting:n,routingTable:i,refreshInterval:s,refreshQueryTimeout:o,logPrefix:a}=t;this.log=e.logger.forComponent(`${a}:routing-table:refresh`),this.peerRouting=n,this.routingTable=i,this.refreshInterval=s??3e5,this.refreshQueryTimeout=o??3e4,this.commonPrefixLengthRefreshedAt=[],this.refreshTable=this.refreshTable.bind(this)}async afterStart(){this.log(`refreshing routing table every ${this.refreshInterval}ms`),this.refreshTable(!0)}async stop(){this.refreshTimeoutId!=null&&clearTimeout(this.refreshTimeoutId)}refreshTable(e=!1){this.log("refreshing routing table");let t=this._maxCommonPrefix(),n=this._getTrackedCommonPrefixLengthsForRefresh(t);this.log(`max common prefix length ${t}`),this.log(`tracked CPLs [ ${n.map(i=>i.toISOString()).join(", ")} ]`),Promise.all(n.map(async(i,s)=>{try{if(await this._refreshCommonPrefixLength(s,i,e),this._numPeersForCpl(t)===0){let o=Math.min(2*(s+1),n.length-1);for(let a=s+1;a<o+1;a++)try{await this._refreshCommonPrefixLength(a,i,e)}catch(c){this.log.error(c)}}}catch(o){this.log.error(o)}})).catch(i=>{this.log.error(i)}).then(()=>{this.refreshTimeoutId=setTimeout(this.refreshTable,this.refreshInterval),this.refreshTimeoutId.unref!=null&&this.refreshTimeoutId.unref()}).catch(i=>{this.log.error(i)})}async _refreshCommonPrefixLength(e,t,n){if(!n&&t.getTime()>Date.now()-this.refreshInterval){this.log("not running refresh for cpl %s as time since last refresh not above interval",e);return}let i=await this._generateRandomPeerId(e);this.log("starting refreshing cpl %s with key %p (routing table size was %s)",e,i,this.routingTable.size);let s=AbortSignal.timeout(this.refreshQueryTimeout);ye(1/0,s);let o=await Pi(this.peerRouting.getClosestPeers(i.toMultihash().bytes,{signal:s}));this.log(`found ${o} peers that were close to imaginary peer %p`,i),this.log("finished refreshing cpl %s with key %p (routing table size is now %s)",e,i,this.routingTable.size)}_getTrackedCommonPrefixLengthsForRefresh(e){e>Mi&&(e=Mi);let t=[];for(let n=0;n<=e;n++)t[n]=this.commonPrefixLengthRefreshedAt[n]??new Date;return t}async _generateRandomPeerId(e){if(this.routingTable.kb==null)throw new Error("Routing table not started");let t=X1(2),n=(t[1]<<8)+t[0],i=await this._makePeerId(this.routingTable.kb.localPeer.kadId,n,e),s=be(i);return Je(s)}async _makePeerId(e,t,n){if(n>Mi)throw new Error(`Cannot generate peer ID for common prefix length greater than ${Mi}`);let o=new DataView(e.buffer,e.byteOffset,e.byteLength).getUint16(0,!1)^32768>>n,a=65535<<16-(n+1),c=o&a|t&~a,l=P4[c],u=new ArrayBuffer(34),f=new DataView(u,0,u.byteLength);return f.setUint8(0,mt.code),f.setUint8(1,32),f.setUint32(2,l,!1),new Uint8Array(f.buffer,f.byteOffset,f.byteLength)}_maxCommonPrefix(){let e=0;for(let t of this._prefixLengths())t>e&&(e=t);return e}_numPeersForCpl(e){let t=0;for(let n of this._prefixLengths())n===e&&t++;return t}*_prefixLengths(){if(this.routingTable.kb!=null)for(let{kadId:e}of this.routingTable.kb.toIterable()){let t=et(this.routingTable.kb.localPeer.kadId,e),n=0;for(let i of t)if(i===0)n++;else break;yield n}}};function Vi(r){return r[Symbol.asyncIterator]!=null}var Fi=r=>{let e=se(r),t=pe(e);return He(r,t),Fi.bytes=e,t};Fi.bytes=0;function Hi(r,e){e=e??{};let t=e.lengthEncoder??Fi;function*n(i){let s=t(i.byteLength);s instanceof Uint8Array?yield s:yield*s,i instanceof Uint8Array?yield i:yield*i}return Vi(r)?async function*(){for await(let i of r)yield*n(i)}():function*(){for(let i of r)yield*n(i)}()}Hi.single=(r,e)=>{e=e??{};let t=e.lengthEncoder??Fi;return new Fe(t(r.byteLength),r)};var qi=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},Ki=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},$i=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"},Cn=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var l7=8,u7=1024*1024*4,or;(function(r){r[r.LENGTH=0]="LENGTH",r[r.DATA=1]="DATA"})(or||(or={}));var r2=r=>{let e=Me(r);return r2.bytes=se(e),e};r2.bytes=0;function _n(r,e){let t=new Fe,n=or.LENGTH,i=-1,s=e?.lengthDecoder??r2,o=e?.maxLengthLength??l7,a=e?.maxDataLength??u7;function*c(){for(;t.byteLength>0;){if(n===or.LENGTH)try{if(i=s(t),i<0)throw new qi("Invalid message length");if(i>a)throw new Ki("Message length too long");let l=s.bytes;t.consume(l),e?.onLength!=null&&e.onLength(i),n=or.DATA}catch(l){if(l instanceof RangeError){if(t.byteLength>o)throw new $i("Message length length too long");break}throw l}if(n===or.DATA){if(t.byteLength<i)break;let l=t.sublist(0,i);t.consume(i),e?.onData!=null&&e.onData(l),yield l,n=or.LENGTH}}}return Vi(r)?async function*(){for await(let l of r)t.append(l),yield*c();if(t.byteLength>0)throw new Cn("Unexpected end of input")}():function*(){for(let l of r)t.append(l),yield*c();if(t.byteLength>0)throw new Cn("Unexpected end of input")}()}_n.fromReader=(r,e)=>{let t=1,n=async function*(){for(;;)try{let{done:s,value:o}=await r.next(t);if(s===!0)return;o!=null&&(yield o)}catch(s){if(s.code==="ERR_UNDER_READ")return{done:!0,value:null};throw s}finally{t=1}}();return _n(n,{...e??{},onLength:s=>{t=s}})};var zi=class{providers;log;constructor(e,t){this.log=e.logger.forComponent(`${t.logPrefix}:rpc:handlers:add-provider`),this.providers=t.providers}async handle(e,t){if(this.log("start"),t.key==null||t.key.length===0)throw new ve("Missing key");let n;try{n=ne.decode(t.key)}catch{throw new ve("Invalid CID")}(t.providers==null||t.providers.length===0)&&this.log.error("no providers found in message"),await Promise.all(t.providers.map(async i=>{if(!e.equals(i.id)){this.log("invalid provider peer %p from %p",i.id,e);return}if(i.multiaddrs.length<1){this.log("no valid addresses for provider %p. Ignore",e);return}this.log("received provider %p for %s (addrs %s)",e,n,i.multiaddrs.map(o=>sr(o).toString()));let s=be(i.id);await this.providers.addProvider(n,Je(s))}))}};var Gi=class{peerRouting;peerInfoMapper;peerId;addressManager;log;constructor(e,t){let{peerRouting:n,logPrefix:i}=t;this.log=e.logger.forComponent(`${i}:rpc:handlers:find-node`),this.peerId=e.peerId,this.addressManager=e.addressManager,this.peerRouting=n,this.peerInfoMapper=t.peerInfoMapper}async handle(e,t){if(this.log("incoming request from %p for peers closer to %b",e,t.key),t.key==null)throw new ve("Invalid FIND_NODE message received - key was missing");let n=await this.peerRouting.getCloserPeersOffline(t.key,e);ee(this.peerId.toMultihash().bytes,t.key)&&n.push({id:this.peerId,multiaddrs:this.addressManager.getAddresses().map(s=>s.decapsulateCode(G("p2p").code))});let i={type:M.FIND_NODE,clusterLevel:t.clusterLevel,closer:n.map(this.peerInfoMapper).filter(({multiaddrs:s})=>s.length).map(s=>({id:s.id.toMultihash().bytes,multiaddrs:s.multiaddrs.map(o=>o.bytes)})),providers:[]};return i.closer.length===0&&this.log("could not find any peers closer to %b than %p",t.key,e),i}};var ji=class{peerRouting;providers;peerStore;peerInfoMapper;log;constructor(e,t){let{peerRouting:n,providers:i,logPrefix:s}=t;this.log=e.logger.forComponent(`${s}:rpc:handlers:get-providers`),this.peerStore=e.peerStore,this.peerRouting=n,this.providers=i,this.peerInfoMapper=t.peerInfoMapper}async handle(e,t){if(t.key==null)throw new ve("Invalid GET_PROVIDERS message received - key was missing");let n;try{n=ne.decode(t.key)}catch{throw new ve("Invalid CID")}this.log("%p asking for providers for %s",e,n);let[i,s]=await Promise.all([this.providers.getProviders(n),this.peerRouting.getCloserPeersOffline(t.key,e)]),o=await this._getPeers(i),a=await this._getPeers(s.map(({id:l})=>l)),c={type:M.GET_PROVIDERS,key:t.key,clusterLevel:t.clusterLevel,closer:a.map(this.peerInfoMapper).filter(({multiaddrs:l})=>l.length).map(l=>({id:l.id.toMultihash().bytes,multiaddrs:l.multiaddrs.map(u=>u.bytes)})),providers:o.map(this.peerInfoMapper).filter(({multiaddrs:l})=>l.length).map(l=>({id:l.id.toMultihash().bytes,multiaddrs:l.multiaddrs.map(u=>u.bytes)}))};return this.log("got %s providers %s closerPeers",c.providers.length,c.closer.length),c}async _getAddresses(e){return[]}async _getPeers(e){let t=[];for(let n of e)try{let i=await this.peerStore.get(n),s=this.peerInfoMapper({id:n,multiaddrs:i.addresses.map(({multiaddr:o})=>o)});s.multiaddrs.length>0&&t.push(s)}catch(i){if(i.name!=="NotFoundError")throw i}return t}};var Zi=class{peerStore;datastore;peerRouting;log;constructor(e,t){this.log=e.logger.forComponent(`${t.logPrefix}:rpc:handlers:get-value`),this.peerStore=e.peerStore,this.datastore=e.datastore,this.peerRouting=t.peerRouting}async handle(e,t){let n=t.key;if(this.log("%p asked for key %b",e,n),n==null||n.length===0)throw new ve("Invalid key");let i={type:M.GET_VALUE,key:n,clusterLevel:t.clusterLevel,closer:[],providers:[]};if(W3(n)){this.log("is public key");let a=Q3(n),c;try{let l=await this.peerStore.get(a);if(l.id.publicKey==null)throw new Ge("No public key found in key book");c=Ir(l.id.publicKey)}catch(l){if(l.name!=="NotFoundError")throw l}if(c!=null)return this.log("returning found public key"),i.record=new le(n,c,new Date).serialize(),i}let[s,o]=await Promise.all([this._checkLocalDatastore(n),this.peerRouting.getCloserPeersOffline(n,e)]);return s!=null&&(this.log("had record for %b in local datastore",n),i.record=s.serialize()),o.length>0&&(this.log("had %s closer peers in routing table",o.length),i.closer=o.map(a=>({id:a.id.toMultihash().bytes,multiaddrs:a.multiaddrs.map(c=>c.bytes)}))),i}async _checkLocalDatastore(e){this.log("checkLocalDatastore looking for %b",e);let t=Gt(e),n;try{n=await this.datastore.get(t)}catch(s){if(s.name==="NotFoundError")return;throw s}let i=le.deserialize(n);if(i.timeReceived==null||Date.now()-i.timeReceived.getTime()>1296e5){await this.datastore.delete(t);return}return i}};var Wi=class{log;constructor(e,t){this.log=e.logger.forComponent(`${t.logPrefix}:rpc:handlers:ping`)}async handle(e,t){return this.log("ping from %p",e),t}};var Qi=class{components;validators;log;constructor(e,t){let{validators:n}=t;this.components=e,this.log=e.logger.forComponent(`${t.logPrefix}:rpc:handlers:put-value`),this.validators=n}async handle(e,t){let n=t.key;if(this.log("%p asked us to store value for key %b",e,n),t.record==null){let i=`Empty record from: ${e.toString()}`;throw this.log.error(i),new ve(i)}try{let i=le.deserialize(t.record);await _r(this.validators,i),i.timeReceived=new Date;let s=Gt(i.key);await this.components.datastore.put(s,i.serialize().subarray()),this.log("put record for %b into datastore under key %k",n,s)}catch(i){this.log("did not put record for key %b into datastore %o",n,i)}return t}};var Yi=class{handlers;routingTable;log;constructor(e,t){let{providers:n,peerRouting:i,validators:s,logPrefix:o,peerInfoMapper:a}=t;this.log=e.logger.forComponent(`${o}:rpc`),this.routingTable=t.routingTable,this.handlers={[M.GET_VALUE.toString()]:new Zi(e,{peerRouting:i,logPrefix:o}),[M.PUT_VALUE.toString()]:new Qi(e,{validators:s,logPrefix:o}),[M.FIND_NODE.toString()]:new Gi(e,{peerRouting:i,logPrefix:o,peerInfoMapper:a}),[M.ADD_PROVIDER.toString()]:new zi(e,{providers:n,logPrefix:o}),[M.GET_PROVIDERS.toString()]:new ji(e,{peerRouting:i,providers:n,logPrefix:o,peerInfoMapper:a}),[M.PING.toString()]:new Wi(e,{logPrefix:o})}}async handleMessage(e,t){try{await this.routingTable.add(e)}catch(i){this.log.error("Failed to update the kbucket store",i)}let n=this.handlers[t.type];if(n==null){this.log.error(`no handler found for message type: ${t.type}`);return}return n.handle(e,t)}onIncomingStream(e){Promise.resolve().then(async()=>{let{stream:t,connection:n}=e,i=n.remotePeer;try{await this.routingTable.add(i)}catch(o){this.log.error(o)}let s=this;await Pt(t,o=>_n(o),async function*(o){for await(let a of o){let c=Ke.decode(a);s.log("incoming %s from %p",c.type,i);let l=await s.handleMessage(i,c);l!=null&&(yield Ke.encode(l))}},o=>Hi(o),t)}).catch(t=>{this.log.error(t)})}};var Xi=class extends Pe{log;components;protocol;running;registrarId;constructor(e,t){super();let{protocol:n,logPrefix:i}=t;this.components=e,this.log=e.logger.forComponent(`${i}:topology-listener`),this.running=!1,this.protocol=n}isStarted(){return this.running}async start(){this.running||(this.running=!0,this.registrarId=await this.components.registrar.register(this.protocol,{onConnect:e=>{this.log("observed peer %p with protocol %s",e,this.protocol),this.dispatchEvent(new CustomEvent("peer",{detail:e}))}}))}async stop(){this.running=!1,this.registrarId!=null&&(this.components.registrar.unregister(this.registrarId),this.registrarId=void 0)}};var n2=class{dht;constructor(e){this.dht=e}async provide(e,t={}){await rs(this.dht.provide(e,t))}async*findProviders(e,t={}){for await(let n of this.dht.findProviders(e,t))n.name==="PROVIDER"&&(yield*n.providers)}async put(e,t,n){await rs(this.dht.put(e,t,n))}async get(e,t){for await(let n of this.dht.get(e,t))if(n.name==="VALUE")return n.value;throw new Ge("Could not find value for key")}},i2=class{dht;constructor(e){this.dht=e}async findPeer(e,t={}){for await(let n of this.dht.findPeer(e,t))if(n.name==="FINAL_PEER")return n.peer;throw new Ge("Peer not found")}async*getClosestPeers(e,t={}){for await(let n of this.dht.getClosestPeers(e,t))n.name==="FINAL_PEER"&&(yield n.peer)}},h7=32,d7=64,Ji=class extends Pe{protocol;routingTable;providers;network;peerRouting;components;log;running;kBucketSize;clientMode;validators;selectors;queryManager;contentFetching;contentRouting;routingTableRefresh;rpc;topologyListener;querySelf;maxInboundStreams;maxOutboundStreams;dhtContentRouting;dhtPeerRouting;peerInfoMapper;constructor(e,t={}){super();let{kBucketSize:n,clientMode:i,validators:s,selectors:o,querySelfInterval:a,protocol:c,logPrefix:l,pingTimeout:u,pingConcurrency:f,maxInboundStreams:h,maxOutboundStreams:g,providers:y}=t,p=l??"libp2p:kad-dht";this.running=!1,this.components=e,this.log=e.logger.forComponent(p),this.protocol=c??E2,this.kBucketSize=n??20,this.clientMode=i??!0,this.maxInboundStreams=h??h7,this.maxOutboundStreams=g??d7,this.peerInfoMapper=t.peerInfoMapper??hi,this.routingTable=new Di(e,{kBucketSize:n,pingTimeout:u,pingConcurrency:f,protocol:this.protocol,logPrefix:p}),this.providers=new ki(e,y??{}),this.validators={...O3,...s},this.selectors={...s0,...o},this.network=new Bi(e,{protocol:this.protocol,logPrefix:p});let d=ie();t.allowQueryWithZeroPeers===!0&&d.resolve(),this.queryManager=new Li(e,{disjointPaths:Math.ceil(this.kBucketSize/2),logPrefix:p,initialQuerySelfHasRun:d,routingTable:this.routingTable}),this.peerRouting=new Si(e,{routingTable:this.routingTable,network:this.network,validators:this.validators,queryManager:this.queryManager,logPrefix:p}),this.contentFetching=new di(e,{validators:this.validators,selectors:this.selectors,peerRouting:this.peerRouting,queryManager:this.queryManager,network:this.network,logPrefix:p}),this.contentRouting=new yi(e,{network:this.network,peerRouting:this.peerRouting,queryManager:this.queryManager,routingTable:this.routingTable,providers:this.providers,logPrefix:p}),this.routingTableRefresh=new Oi(e,{peerRouting:this.peerRouting,routingTable:this.routingTable,logPrefix:p}),this.rpc=new Yi(e,{routingTable:this.routingTable,providers:this.providers,peerRouting:this.peerRouting,validators:this.validators,logPrefix:p,peerInfoMapper:this.peerInfoMapper}),this.topologyListener=new Xi(e,{protocol:this.protocol,logPrefix:p}),this.querySelf=new Ci(e,{peerRouting:this.peerRouting,interval:a,initialInterval:t.initialQuerySelfInterval,logPrefix:p,initialQuerySelfHasRun:d,routingTable:this.routingTable}),this.network.addEventListener("peer",w=>{let v=w.detail;this.onPeerConnect(v).catch(m=>{this.log.error("could not add %p to routing table",v.id,m)}),this.dispatchEvent(new CustomEvent("peer",{detail:v}))}),this.topologyListener.addEventListener("peer",w=>{let v=w.detail;Promise.resolve().then(async()=>{let m=await this.components.peerStore.get(v),A={id:v,multiaddrs:m.addresses.map(({multiaddr:R})=>R),protocols:m.protocols};await this.onPeerConnect(A)}).catch(m=>{this.log.error("could not add %p to routing table",v,m)})}),this.dhtPeerRouting=new i2(this),this.dhtContentRouting=new n2(this),t.clientMode==null&&e.events.addEventListener("self:peer:update",w=>{this.log("received update of self-peer info"),Promise.resolve().then(async()=>{let v=w.detail.peer.addresses.some(({multiaddr:A})=>X3(A)),m=this.getMode();v&&m==="client"?await this.setMode("server"):m==="server"&&!v&&await this.setMode("client")}).catch(v=>{this.log.error("error setting dht server mode",v)})})}[Symbol.toStringTag]="@libp2p/kad-dht";[x2]=["@libp2p/content-routing","@libp2p/peer-routing","@libp2p/peer-discovery"];[v2]=["@libp2p/identify"];get[p2](){return this.dhtContentRouting}get[m2](){return this.dhtPeerRouting}get[g2](){return this}async onPeerConnect(e){if(this.log("peer %p connected",e.id),e=this.peerInfoMapper(e),e.multiaddrs.length===0){this.log("ignoring %p as there were no valid addresses in %s after filtering",e.id,e.multiaddrs.map(t=>t.toString()));return}try{await this.routingTable.add(e.id)}catch(t){this.log.error("could not add %p to routing table",e.id,t)}}isStarted(){return this.running}getMode(){return this.clientMode?"client":"server"}async setMode(e){await this.components.registrar.unhandle(this.protocol),e==="client"?(this.log("enabling client mode"),this.clientMode=!0):(this.log("enabling server mode"),this.clientMode=!1,await this.components.registrar.handle(this.protocol,this.rpc.onIncomingStream.bind(this.rpc),{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams}))}async start(){this.running=!0,await this.setMode(this.clientMode?"client":"server"),await b2(this.querySelf,this.providers,this.queryManager,this.network,this.routingTable,this.topologyListener,this.routingTableRefresh)}async stop(){this.running=!1,await w2(this.querySelf,this.providers,this.queryManager,this.network,this.routingTable,this.routingTableRefresh,this.topologyListener)}async*put(e,t,n={}){yield*this.contentFetching.put(e,t,n)}async*get(e,t={}){yield*this.contentFetching.get(e,t)}async*provide(e,t={}){yield*this.contentRouting.provide(e,this.components.addressManager.getAddresses(),t)}async*findProviders(e,t={}){yield*this.contentRouting.findProviders(e,t)}async*findPeer(e,t={}){yield*this.peerRouting.findPeer(e,t)}async*getClosestPeers(e,t={}){yield*this.peerRouting.getClosestPeers(e,t)}async refreshRoutingTable(){this.routingTableRefresh.refreshTable(!0)}};var s2;(function(r){r[r.SEND_QUERY=0]="SEND_QUERY",r[r.PEER_RESPONSE=1]="PEER_RESPONSE",r[r.FINAL_PEER=2]="FINAL_PEER",r[r.QUERY_ERROR=3]="QUERY_ERROR",r[r.PROVIDER=4]="PROVIDER",r[r.VALUE=5]="VALUE",r[r.ADD_PEER=6]="ADD_PEER",r[r.DIAL_PEER=7]="DIAL_PEER"})(s2||(s2={}));function p7(r={}){return e=>new Ji(e,r)}return G4(g7);})();
+`)}`:`${t} :`}};O0=Kt;S.Constructed=O0;Kt.NAME="CONSTRUCTED";var b1=class extends Be{fromBER(e,t,n){return t}toBER(e){return Xe}};b1.override="EndOfContentValueBlock";var V0,w1=class extends we{constructor(e={}){super(e,b1),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}};V0=w1;S.EndOfContent=V0;w1.NAME=un;var F0,Rr=class extends we{constructor(e={}){super(e,Be),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}fromBER(e,t,n){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=n,t+n>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+n}toBER(e,t){let n=new ArrayBuffer(2);if(!e){let i=new Uint8Array(n);i[0]=5,i[1]=0}return t&&t.write(n),n}onAsciiEncoding(){return`${this.constructor.NAME}`}};F0=Rr;S.Null=F0;Rr.NAME="NULL";var x1=class extends It(Be){constructor({value:e,...t}={}){super(t),t.valueHex?this.valueHexView=H.BufferSourceConverter.toUint8Array(t.valueHex):this.valueHexView=new Uint8Array(1),e&&(this.value=e)}get value(){for(let e of this.valueHexView)if(e>0)return!0;return!1}set value(e){this.valueHexView[0]=e?255:0}fromBER(e,t,n){let i=H.BufferSourceConverter.toUint8Array(e);return St(this,i,t,n)?(this.valueHexView=i.subarray(t,t+n),n>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,yo.call(this),this.blockLength=n,t+n):-1}toBER(){return this.valueHexView.slice()}toJSON(){return{...super.toJSON(),value:this.value}}};x1.NAME="BooleanValueBlock";var H0,v1=class extends we{constructor(e={}){super(e,x1),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.getValue}`}};H0=v1;S.Boolean=H0;v1.NAME="BOOLEAN";var E1=class extends It(ot){constructor({isConstructed:e=!1,...t}={}){super(t),this.isConstructed=e}fromBER(e,t,n){let i=0;if(this.isConstructed){if(this.isHexOnly=!1,i=ot.prototype.fromBER.call(this,e,t,n),i===-1)return i;for(let s=0;s<this.value.length;s++){let o=this.value[s].constructor.NAME;if(o===un){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(o!==_0)return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,i=super.fromBER(e,t,n),this.blockLength=n;return i}toBER(e,t){return this.isConstructed?ot.prototype.toBER.call(this,e,t):e?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),isConstructed:this.isConstructed}}};E1.NAME="OctetStringValueBlock";var q0,A1=class r extends we{constructor({idBlock:e={},lenBlock:t={},...n}={}){var i,s;(i=n.isConstructed)!==null&&i!==void 0||(n.isConstructed=!!(!((s=n.value)===null||s===void 0)&&s.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},E1),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,n){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,n===0)return this.idBlock.error.length===0&&(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length===0&&(this.blockLength+=this.lenBlock.blockLength),t;if(!this.valueBlock.isConstructed){let s=(e instanceof ArrayBuffer?new Uint8Array(e):e).subarray(t,t+n);try{if(s.byteLength){let o=Y1(s,0,s.byteLength);o.offset!==-1&&o.offset===n&&(this.valueBlock.value=[o.result])}}catch{}}return super.fromBER(e,t,n)}onAsciiEncoding(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?Kt.prototype.onAsciiEncoding.call(this):`${this.constructor.NAME} : ${H.Convert.ToHex(this.valueBlock.valueHexView)}`}getValue(){if(!this.idBlock.isConstructed)return this.valueBlock.valueHexView.slice().buffer;let e=[];for(let t of this.valueBlock.value)t instanceof r&&e.push(t.valueBlock.valueHexView);return H.BufferSourceConverter.concat(e)}};q0=A1;S.OctetString=q0;A1.NAME=_0;var B1=class extends It(ot){constructor({unusedBits:e=0,isConstructed:t=!1,...n}={}){super(n),this.unusedBits=e,this.isConstructed=t,this.blockLength=this.valueHexView.byteLength}fromBER(e,t,n){if(!n)return t;let i=-1;if(this.isConstructed){if(i=ot.prototype.fromBER.call(this,e,t,n),i===-1)return i;for(let a of this.value){let c=a.constructor.NAME;if(c===un){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(c!==U0)return this.error="BIT STRING may consists of BIT STRINGs only",-1;let l=a.valueBlock;if(this.unusedBits>0&&l.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;this.unusedBits=l.unusedBits}return i}let s=H.BufferSourceConverter.toUint8Array(e);if(!St(this,s,t,n))return-1;let o=s.subarray(t,t+n);if(this.unusedBits=o[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){let a=o.subarray(1);try{if(a.byteLength){let c=Y1(a,0,a.byteLength);c.offset!==-1&&c.offset===n-1&&(this.value=[c.result])}}catch{}}return this.valueHexView=o.subarray(1),this.blockLength=o.length,t+n}toBER(e,t){if(this.isConstructed)return ot.prototype.toBER.call(this,e,t);if(e)return new ArrayBuffer(this.valueHexView.byteLength+1);if(!this.valueHexView.byteLength)return Xe;let n=new Uint8Array(this.valueHexView.length+1);return n[0]=this.unusedBits,n.set(this.valueHexView,1),n.buffer}toJSON(){return{...super.toJSON(),unusedBits:this.unusedBits,isConstructed:this.isConstructed}}};B1.NAME="BitStringValueBlock";var K0,Nr=class extends we{constructor({idBlock:e={},lenBlock:t={},...n}={}){var i,s;(i=n.isConstructed)!==null&&i!==void 0||(n.isConstructed=!!(!((s=n.value)===null||s===void 0)&&s.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},B1),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}fromBER(e,t,n){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,n)}onAsciiEncoding(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return Kt.prototype.onAsciiEncoding.call(this);{let e=[],t=this.valueBlock.valueHexView;for(let i of t)e.push(i.toString(2).padStart(8,"0"));let n=e.join("");return`${this.constructor.NAME} : ${n.substring(0,n.length-this.valueBlock.unusedBits)}`}}};K0=Nr;S.BitString=K0;Nr.NAME=U0;var $0;function Oa(r,e){let t=new Uint8Array([0]),n=new Uint8Array(r),i=new Uint8Array(e),s=n.slice(0),o=s.length-1,a=i.slice(0),c=a.length-1,l=0,u=c<o?o:c,f=0;for(let h=u;h>=0;h--,f++){switch(!0){case f<a.length:l=s[o-f]+a[c-f]+t[0];break;default:l=s[o-f]+t[0]}switch(t[0]=l/10,!0){case f>=s.length:s=f1(new Uint8Array([l%10]),s);break;default:s[o-f]=l%10}}return t[0]>0&&(s=f1(t,s)),s}function C0(r){if(r>=cn.length)for(let e=cn.length;e<=r;e++){let t=new Uint8Array([0]),n=cn[e-1].slice(0);for(let i=n.length-1;i>=0;i--){let s=new Uint8Array([(n[i]<<1)+t[0]]);t[0]=s[0]/10,n[i]=s[0]%10}t[0]>0&&(n=f1(t,n)),cn.push(n)}return cn[r]}function Va(r,e){let t=0,n=new Uint8Array(r),i=new Uint8Array(e),s=n.slice(0),o=s.length-1,a=i.slice(0),c=a.length-1,l,u=0;for(let f=c;f>=0;f--,u++)switch(l=s[o-u]-a[c-u]-t,!0){case l<0:t=1,s[o-u]=l+10;break;default:t=0,s[o-u]=l}if(t>0)for(let f=o-c+1;f>=0;f--,u++)if(l=s[o-u]-t,l<0)t=1,s[o-u]=l+10;else{t=0,s[o-u]=l;break}return s.slice()}var fn=class extends It(Be){constructor({value:e,...t}={}){super(t),this._valueDec=0,t.valueHex&&this.setValueHex(),e!==void 0&&(this.valueDec=e)}setValueHex(){this.valueHexView.length>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,this.valueHexView.length>0&&(this._valueDec=yo.call(this)))}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this.valueHexView=new Uint8Array(N0(e))}get valueDec(){return this._valueDec}fromDER(e,t,n,i=0){let s=this.fromBER(e,t,n);if(s===-1)return s;let o=this.valueHexView;return o[0]===0&&o[1]&128?this.valueHexView=o.subarray(1):i!==0&&o.length<i&&(i-o.length>1&&(i=o.length+1),this.valueHexView=o.subarray(i-o.length)),s}toDER(e=!1){let t=this.valueHexView;switch(!0){case(t[0]&128)!==0:{let n=new Uint8Array(this.valueHexView.length+1);n[0]=0,n.set(t,1),this.valueHexView=n}break;case(t[0]===0&&(t[1]&128)===0):this.valueHexView=this.valueHexView.subarray(1);break}return this.toBER(e)}fromBER(e,t,n){let i=super.fromBER(e,t,n);return i===-1||this.setValueHex(),i}toBER(e){return e?new ArrayBuffer(this.valueHexView.length):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}toString(){let e=this.valueHexView.length*8-1,t=new Uint8Array(this.valueHexView.length*8/3),n=0,i,s=this.valueHexView,o="",a=!1;for(let c=s.byteLength-1;c>=0;c--){i=s[c];for(let l=0;l<8;l++){if((i&1)===1)switch(n){case e:t=Va(C0(n),t),o="-";break;default:t=Oa(t,C0(n))}n++,i>>=1}}for(let c=0;c<t.length;c++)t[c]&&(a=!0),a&&(o+=P0.charAt(t[c]));return a===!1&&(o+=P0.charAt(0)),o}};$0=fn;fn.NAME="IntegerValueBlock";Object.defineProperty($0.prototype,"valueHex",{set:function(r){this.valueHexView=new Uint8Array(r),this.setValueHex()},get:function(){return this.valueHexView.slice().buffer}});var z0,xe=class r extends we{constructor(e={}){super(e,fn),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}toBigInt(){return h1(),BigInt(this.valueBlock.toString())}static fromBigInt(e){h1();let t=BigInt(e),n=new ln,i=t.toString(16).replace(/^-/,""),s=new Uint8Array(H.Convert.FromHex(i));if(t<0){let a=new Uint8Array(s.length+(s[0]&128?1:0));a[0]|=128;let l=BigInt(`0x${H.Convert.ToHex(a)}`)+t,u=H.BufferSourceConverter.toUint8Array(H.Convert.FromHex(l.toString(16)));u[0]|=128,n.write(u)}else s[0]&128&&n.write(new Uint8Array([0])),n.write(s);return new r({valueHex:n.final()})}convertToDER(){let e=new r({valueHex:this.valueBlock.valueHexView});return e.valueBlock.toDER(),e}convertFromDER(){return new r({valueHex:this.valueBlock.valueHexView[0]===0?this.valueBlock.valueHexView.subarray(1):this.valueBlock.valueHexView})}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()}`}};z0=xe;S.Integer=z0;xe.NAME="INTEGER";var G0,S1=class extends xe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}};G0=S1;S.Enumerated=G0;S1.NAME="ENUMERATED";var hn=class extends It(Be){constructor({valueDec:e=-1,isFirstSid:t=!1,...n}={}){super(n),this.valueDec=e,this.isFirstSid=t}fromBER(e,t,n){if(!n)return t;let i=H.BufferSourceConverter.toUint8Array(e);if(!St(this,i,t,n))return-1;let s=i.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=s[a]&127,this.blockLength++,!!(s[a]&128));a++);let o=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)o[a]=this.valueHexView[a];return this.valueHexView=o,s[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=nr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}set valueBigInt(e){h1();let t=BigInt(e).toString(2);for(;t.length%7;)t="0"+t;let n=new Uint8Array(t.length/7);for(let i=0;i<n.length;i++)n[i]=parseInt(t.slice(i*7,i*7+7),2)+(i+1<n.length?128:0);this.fromBER(n.buffer,0,n.length)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let i=this.valueHexView,s=new Uint8Array(this.blockLength);for(let o=0;o<this.blockLength-1;o++)s[o]=i[o]|128;return s[this.blockLength-1]=i[this.blockLength-1],s.buffer}let t=qt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",Xe;let n=new Uint8Array(t.byteLength);if(!e){let i=new Uint8Array(t),s=t.byteLength-1;for(let o=0;o<s;o++)n[o]=i[o]|128;n[s]=i[s]}return n}toString(){let e="";if(this.isHexOnly)e=H.Convert.ToHex(this.valueHexView);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec,isFirstSid:this.isFirstSid}}};hn.NAME="sidBlock";var I1=class extends Be{constructor({value:e=Pr,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let i=t;for(;n>0;){let s=new hn;if(i=s.fromBER(e,i,n),i===-1)return this.blockLength=0,this.error=s.error,i;this.value.length===0&&(s.isFirstSid=!0),this.blockLength+=s.blockLength,n-=s.blockLength,this.value.push(s)}return i}toBER(e){let t=[];for(let n=0;n<this.value.length;n++){let i=this.value[n].toBER(e);if(i.byteLength===0)return this.error=this.value[n].error,Xe;t.push(i)}return bo(t)}fromString(e){this.value=[];let t=0,n=0,i="",s=!1;do if(n=e.indexOf(".",t),n===-1?i=e.substring(t):i=e.substring(t,n),t=n+1,s){let o=this.value[0],a=0;switch(o.valueDec){case 0:break;case 1:a=40;break;case 2:a=80;break;default:this.value=[];return}let c=parseInt(i,10);if(isNaN(c))return;o.valueDec=c+a,s=!1}else{let o=new hn;if(i>Number.MAX_SAFE_INTEGER){h1();let a=BigInt(i);o.valueBigInt=a}else if(o.valueDec=parseInt(i,10),isNaN(o.valueDec))return;this.value.length||(o.isFirstSid=!0,s=!0),this.value.push(o)}while(n!==-1)}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let i=this.value[n].toString();n!==0&&(e=`${e}.`),t?(i=`{${i}}`,this.value[n].isFirstSid?e=`2.{${i} - 80}`:e+=i):e+=i}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};I1.NAME="ObjectIdentifierValueBlock";var j0,Lr=class extends we{constructor(e={}){super(e,I1),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};j0=Lr;S.ObjectIdentifier=j0;Lr.NAME="OBJECT IDENTIFIER";var dn=class extends It(Et){constructor({valueDec:e=0,...t}={}){super(t),this.valueDec=e}fromBER(e,t,n){if(n===0)return t;let i=H.BufferSourceConverter.toUint8Array(e);if(!St(this,i,t,n))return-1;let s=i.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=s[a]&127,this.blockLength++,!!(s[a]&128));a++);let o=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)o[a]=this.valueHexView[a];return this.valueHexView=o,s[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=nr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let i=this.valueHexView,s=new Uint8Array(this.blockLength);for(let o=0;o<this.blockLength-1;o++)s[o]=i[o]|128;return s[this.blockLength-1]=i[this.blockLength-1],s.buffer}let t=qt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",Xe;let n=new Uint8Array(t.byteLength);if(!e){let i=new Uint8Array(t),s=t.byteLength-1;for(let o=0;o<s;o++)n[o]=i[o]|128;n[s]=i[s]}return n.buffer}toString(){let e="";return this.isHexOnly?e=H.Convert.ToHex(this.valueHexView):e=this.valueDec.toString(),e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}};dn.NAME="relativeSidBlock";var k1=class extends Be{constructor({value:e=Pr,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let i=t;for(;n>0;){let s=new dn;if(i=s.fromBER(e,i,n),i===-1)return this.blockLength=0,this.error=s.error,i;this.blockLength+=s.blockLength,n-=s.blockLength,this.value.push(s)}return i}toBER(e,t){let n=[];for(let i=0;i<this.value.length;i++){let s=this.value[i].toBER(e);if(s.byteLength===0)return this.error=this.value[i].error,Xe;n.push(s)}return bo(n)}fromString(e){this.value=[];let t=0,n=0,i="";do{n=e.indexOf(".",t),n===-1?i=e.substring(t):i=e.substring(t,n),t=n+1;let s=new dn;if(s.valueDec=parseInt(i,10),isNaN(s.valueDec))return!0;this.value.push(s)}while(n!==-1);return!0}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let i=this.value[n].toString();n!==0&&(e=`${e}.`),t&&(i=`{${i}}`),e+=i}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};k1.NAME="RelativeObjectIdentifierValueBlock";var Z0,T1=class extends we{constructor(e={}){super(e,k1),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};Z0=T1;S.RelativeObjectIdentifier=Z0;T1.NAME="RelativeObjectIdentifier";var W0,At=class extends Kt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}};W0=At;S.Sequence=W0;At.NAME="SEQUENCE";var Q0,R1=class extends Kt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}};Q0=R1;S.Set=Q0;R1.NAME="SET";var N1=class extends It(Be){constructor({...e}={}){super(e),this.isHexOnly=!0,this.value=Pr}toJSON(){return{...super.toJSON(),value:this.value}}};N1.NAME="StringValueBlock";var L1=class extends N1{};L1.NAME="SimpleStringValueBlock";var Re=class extends g1{constructor({...e}={}){super(e,L1)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t);for(let i=0;i<t;i++)n[i]=e.charCodeAt(i);this.valueBlock.value=e}};Re.NAME="SIMPLE STRING";var P1=class extends Re{fromBuffer(e){this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e);try{this.valueBlock.value=H.Convert.ToUtf8String(e)}catch(t){this.warnings.push(`Error during "decodeURIComponent": ${t}, using raw string`),this.valueBlock.value=H.Convert.ToBinary(e)}}fromString(e){this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf8String(e)),this.valueBlock.value=e}};P1.NAME="Utf8StringValueBlock";var Y0,Bt=class extends P1{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}};Y0=Bt;S.Utf8String=Y0;Bt.NAME="UTF8String";var C1=class extends Re{fromBuffer(e){this.valueBlock.value=H.Convert.ToUtf16String(e),this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e)}fromString(e){this.valueBlock.value=e,this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf16String(e))}};C1.NAME="BmpStringValueBlock";var X0,_1=class extends C1{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}};X0=_1;S.BmpString=X0;_1.NAME="BMPString";var U1=class extends Re{fromBuffer(e){let t=ArrayBuffer.isView(e)?e.slice().buffer:e.slice(0),n=new Uint8Array(t);for(let i=0;i<n.length;i+=4)n[i]=n[i+3],n[i+1]=n[i+2],n[i+2]=0,n[i+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t*4);for(let i=0;i<t;i++){let s=qt(e.charCodeAt(i),8),o=new Uint8Array(s);if(o.length>4)continue;let a=4-o.length;for(let c=o.length-1;c>=0;c--)n[i*4+c+a]=o[c]}this.valueBlock.value=e}};U1.NAME="UniversalStringValueBlock";var J0,D1=class extends U1{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}};J0=D1;S.UniversalString=J0;D1.NAME="UniversalString";var e3,M1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}};e3=M1;S.NumericString=e3;M1.NAME="NumericString";var t3,O1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}};t3=O1;S.PrintableString=t3;O1.NAME="PrintableString";var r3,V1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}};r3=V1;S.TeletexString=r3;V1.NAME="TeletexString";var n3,F1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}};n3=F1;S.VideotexString=n3;F1.NAME="VideotexString";var i3,H1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}};i3=H1;S.IA5String=i3;H1.NAME="IA5String";var s3,q1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}};s3=q1;S.GraphicString=s3;q1.NAME="GraphicString";var o3,pn=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}};o3=pn;S.VisibleString=o3;pn.NAME="VisibleString";var a3,K1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}};a3=K1;S.GeneralString=a3;K1.NAME="GeneralString";var c3,$1=class extends Re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}};c3=$1;S.CharacterString=c3;$1.NAME="CharacterString";var l3,gn=class extends pn{constructor({value:e,valueDate:t,...n}={}){if(super(n),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,e){this.fromString(e),this.valueBlock.valueHexView=new Uint8Array(e.length);for(let i=0;i<e.length;i++)this.valueBlock.valueHexView[i]=e.charCodeAt(i)}t&&(this.fromDate(t),this.valueBlock.valueHexView=new Uint8Array(this.toBuffer())),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e)))}toBuffer(){let e=this.toString(),t=new ArrayBuffer(e.length),n=new Uint8Array(t);for(let i=0;i<e.length;i++)n[i]=e.charCodeAt(i);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){let n=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig.exec(e);if(n===null){this.error="Wrong input string for conversion";return}let i=parseInt(n[1],10);i>=50?this.year=1900+i:this.year=2e3+i,this.month=parseInt(n[2],10),this.day=parseInt(n[3],10),this.hour=parseInt(n[4],10),this.minute=parseInt(n[5],10),this.second=parseInt(n[6],10)}toString(e="iso"){if(e==="iso"){let t=new Array(7);return t[0]=De(this.year<2e3?this.year-1900:this.year-2e3,2),t[1]=De(this.month,2),t[2]=De(this.day,2),t[3]=De(this.hour,2),t[4]=De(this.minute,2),t[5]=De(this.second,2),t[6]="Z",t.join("")}return super.toString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.toDate().toISOString()}`}toJSON(){return{...super.toJSON(),year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second}}};l3=gn;S.UTCTime=l3;gn.NAME="UTCTime";var u3,z1=class extends gn{constructor(e={}){var t;super(e),(t=this.millisecond)!==null&&t!==void 0||(this.millisecond=0),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromDate(e){super.fromDate(e),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t=!1,n="",i="",s=0,o,a=0,c=0;if(e[e.length-1]==="Z")n=e.substring(0,e.length-1),t=!0;else{let f=new Number(e[e.length-1]);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");n=e}if(t){if(n.indexOf("+")!==-1)throw new Error("Wrong input string for conversion");if(n.indexOf("-")!==-1)throw new Error("Wrong input string for conversion")}else{let f=1,h=n.indexOf("+"),g="";if(h===-1&&(h=n.indexOf("-"),f=-1),h!==-1){if(g=n.substring(h+1),n=n.substring(0,h),g.length!==2&&g.length!==4)throw new Error("Wrong input string for conversion");let y=parseInt(g.substring(0,2),10);if(isNaN(y.valueOf()))throw new Error("Wrong input string for conversion");if(a=f*y,g.length===4){if(y=parseInt(g.substring(2,4),10),isNaN(y.valueOf()))throw new Error("Wrong input string for conversion");c=f*y}}}let l=n.indexOf(".");if(l===-1&&(l=n.indexOf(",")),l!==-1){let f=new Number(`0${n.substring(l)}`);if(isNaN(f.valueOf()))throw new Error("Wrong input string for conversion");s=f.valueOf(),i=n.substring(0,l)}else i=n;switch(!0){case i.length===8:if(o=/(\d{4})(\d{2})(\d{2})/ig,l!==-1)throw new Error("Wrong input string for conversion");break;case i.length===10:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=60*s;this.minute=Math.floor(f),f=60*(f-this.minute),this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case i.length===12:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=60*s;this.second=Math.floor(f),f=1e3*(f-this.second),this.millisecond=Math.floor(f)}break;case i.length===14:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig,l!==-1){let f=1e3*s;this.millisecond=Math.floor(f)}break;default:throw new Error("Wrong input string for conversion")}let u=o.exec(i);if(u===null)throw new Error("Wrong input string for conversion");for(let f=1;f<u.length;f++)switch(f){case 1:this.year=parseInt(u[f],10);break;case 2:this.month=parseInt(u[f],10);break;case 3:this.day=parseInt(u[f],10);break;case 4:this.hour=parseInt(u[f],10)+a;break;case 5:this.minute=parseInt(u[f],10)+c;break;case 6:this.second=parseInt(u[f],10);break;default:throw new Error("Wrong input string for conversion")}if(t===!1){let f=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=f.getUTCFullYear(),this.month=f.getUTCMonth(),this.day=f.getUTCDay(),this.hour=f.getUTCHours(),this.minute=f.getUTCMinutes(),this.second=f.getUTCSeconds(),this.millisecond=f.getUTCMilliseconds()}}toString(e="iso"){if(e==="iso"){let t=[];return t.push(De(this.year,4)),t.push(De(this.month,2)),t.push(De(this.day,2)),t.push(De(this.hour,2)),t.push(De(this.minute,2)),t.push(De(this.second,2)),this.millisecond!==0&&(t.push("."),t.push(De(this.millisecond,3))),t.push("Z"),t.join("")}return super.toString(e)}toJSON(){return{...super.toJSON(),millisecond:this.millisecond}}};u3=z1;S.GeneralizedTime=u3;z1.NAME="GeneralizedTime";var f3,G1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}};f3=G1;S.DATE=f3;G1.NAME="DATE";var h3,j1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}};h3=j1;S.TimeOfDay=h3;j1.NAME="TimeOfDay";var d3,Z1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}};d3=Z1;S.DateTime=d3;Z1.NAME="DateTime";var p3,W1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}};p3=W1;S.Duration=p3;W1.NAME="Duration";var g3,Q1=class extends Bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}};g3=Q1;S.TIME=g3;Q1.NAME="TIME";function X1(r){if(isNaN(r)||r<=0)throw new $("random bytes length must be a Number bigger than 0");return Ar(r)}var mn=class extends Error{constructor(e="An error occurred while verifying a message"){super(e),this.name="VerificationError"}},J1=class extends Error{constructor(e="Missing Web Crypto API"){super(e),this.name="WebCryptoMissingError"}};var m3={get(r=globalThis){let e=r.crypto;if(e?.subtle==null)throw new J1("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api");return e}};var $t=m3;async function y3(r){let e=await $t.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await Ha(e);return{privateKey:t[0],publicKey:t[1]}}async function b3(r,e){let t=await $t.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await $t.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,e instanceof Uint8Array?e:e.subarray());return new Uint8Array(n,0,n.byteLength)}async function w3(r,e,t){let n=await $t.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return $t.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t instanceof Uint8Array?t:t.subarray())}async function Ha(r){if(r.privateKey==null||r.publicKey==null)throw new $("Private and public key are required");return Promise.all([$t.get().subtle.exportKey("jwk",r.privateKey),$t.get().subtle.exportKey("jwk",r.publicKey)])}function vo(r){if(r.kty!=="RSA")throw new $("invalid key type");if(r.n==null)throw new $("invalid key modulus");return Y(r.n,"base64url").length*8}var Cr=class{type="RSA";_key;_raw;_multihash;constructor(e,t){this._key=e,this._multihash=t}get raw(){return this._raw==null&&(this._raw=yn.jwkToPkix(this._key)),this._raw}toMultihash(){return this._multihash}toCID(){return ne.createV1(114,this._multihash)}toString(){return Q.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ee(this.raw,e.raw)}verify(e,t){return w3(this._key,t,e)}},bn=class{type="RSA";_key;_raw;publicKey;constructor(e,t){this._key=e,this.publicKey=t}get raw(){return this._raw==null&&(this._raw=yn.jwkToPkcs1(this._key)),this._raw}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ee(this.raw,e.raw)}sign(e){return b3(this._key,e)}};var ei=8192,Eo=18;function x3(r){let{result:e}=xo(r),t=e.valueBlock.value;return{n:C(at(t[1].toBigInt()),"base64url"),e:C(at(t[2].toBigInt()),"base64url"),d:C(at(t[3].toBigInt()),"base64url"),p:C(at(t[4].toBigInt()),"base64url"),q:C(at(t[5].toBigInt()),"base64url"),dp:C(at(t[6].toBigInt()),"base64url"),dq:C(at(t[7].toBigInt()),"base64url"),qi:C(at(t[8].toBigInt()),"base64url"),kty:"RSA",alg:"RS256"}}function qa(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new $("JWK was missing components");let t=new At({value:[new xe({value:0}),xe.fromBigInt(ct(Y(r.n,"base64url"))),xe.fromBigInt(ct(Y(r.e,"base64url"))),xe.fromBigInt(ct(Y(r.d,"base64url"))),xe.fromBigInt(ct(Y(r.p,"base64url"))),xe.fromBigInt(ct(Y(r.q,"base64url"))),xe.fromBigInt(ct(Y(r.dp,"base64url"))),xe.fromBigInt(ct(Y(r.dq,"base64url"))),xe.fromBigInt(ct(Y(r.qi,"base64url")))]}).toBER();return new Uint8Array(t,0,t.byteLength)}function v3(r){let{result:e}=xo(r),t=e.valueBlock.value[1].valueBlock.value[0].valueBlock.value;return{kty:"RSA",n:C(at(t[0].toBigInt()),"base64url"),e:C(at(t[1].toBigInt()),"base64url")}}function Ao(r){if(r.n==null||r.e==null)throw new $("JWK was missing components");let t=new At({value:[new At({value:[new Lr({value:"1.2.840.113549.1.1.1"}),new Rr]}),new Nr({valueHex:new At({value:[xe.fromBigInt(ct(Y(r.n,"base64url"))),xe.fromBigInt(ct(Y(r.e,"base64url")))]}).toBER()})]}).toBER();return new Uint8Array(t,0,t.byteLength)}function at(r){let e=r.toString(16);e.length%2>0&&(e=`0${e}`);let t=e.length/2,n=new Uint8Array(t),i=0,s=0;for(;i<t;)n[i]=parseInt(e.slice(s,s+2),16),i+=1,s+=2;return n}function ct(r){let e=[];return r.forEach(function(t){let n=t.toString(16);n.length%2>0&&(n=`0${n}`),e.push(n)}),BigInt("0x"+e.join(""))}function E3(r){let e=x3(r);return A3(e)}function Bo(r){let e=v3(r);if(vo(e)>ei)throw new ht("Key size is too large");let t=kr(st.encode({Type:fe.RSA,Data:r})),n=Ze(Eo,t);return new Cr(e,n)}function A3(r){if(vo(r)>ei)throw new $("Key size is too large");let e=S3(r),t=kr(st.encode({Type:fe.RSA,Data:Ao(e.publicKey)})),n=Ze(Eo,t);return new bn(e.privateKey,new Cr(e.publicKey,n))}async function B3(r){if(r>ei)throw new $("Key size is too large");let e=await y3(r),t=kr(st.encode({Type:fe.RSA,Data:Ao(e.publicKey)})),n=Ze(Eo,t);return new bn(e.privateKey,new Cr(e.publicKey,n))}function S3(r){if(r==null)throw new $("Missing key parameter");return{privateKey:r,publicKey:{kty:r.kty,n:r.n,e:r.e}}}var ti=class extends Er{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,a0(e);let n=nn(t);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let i=this.blockLen,s=new Uint8Array(i);s.set(n.length>i?e.create().update(n).digest():n);for(let o=0;o<s.length;o++)s[o]^=54;this.iHash.update(s),this.oHash=e.create();for(let o=0;o<s.length;o++)s[o]^=106;this.oHash.update(s),s.fill(0)}update(e){return vr(this),this.iHash.update(e),this}digestInto(e){vr(this),xr(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:n,finished:i,destroyed:s,blockLen:o,outputLen:a}=this;return e=e,e.finished=i,e.destroyed=s,e.blockLen=o,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},So=(r,e,t)=>new ti(r,e).update(t).digest();So.create=(r,e)=>new ti(r,e);function I3(r){r.lowS!==void 0&&Qe("lowS",r.lowS),r.prehash!==void 0&&Qe("prehash",r.prehash)}function Ka(r){let e=an(r);it(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:t,Fp:n,a:i}=e;if(t){if(!n.eql(i,n.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof t!="object"||typeof t.beta!="bigint"||typeof t.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}var{bytesToNumberBE:$a,hexToBytes:za}=r1,kt={Err:class extends Error{constructor(e=""){super(e)}},_tlv:{encode:(r,e)=>{let{Err:t}=kt;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length&1)throw new t("tlv.encode: unpadded data");let n=e.length/2,i=Xt(n);if(i.length/2&128)throw new t("tlv.encode: long form length too big");let s=n>127?Xt(i.length/2|128):"";return`${Xt(r)}${s}${i}${e}`},decode(r,e){let{Err:t}=kt,n=0;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length<2||e[n++]!==r)throw new t("tlv.decode: wrong tlv");let i=e[n++],s=!!(i&128),o=0;if(!s)o=i;else{let c=i&127;if(!c)throw new t("tlv.decode(long): indefinite length not supported");if(c>4)throw new t("tlv.decode(long): byte length is too big");let l=e.subarray(n,n+c);if(l.length!==c)throw new t("tlv.decode: length bytes not complete");if(l[0]===0)throw new t("tlv.decode(long): zero leftmost byte");for(let u of l)o=o<<8|u;if(n+=c,o<128)throw new t("tlv.decode(long): not minimal encoding")}let a=e.subarray(n,n+o);if(a.length!==o)throw new t("tlv.decode: wrong value length");return{v:a,l:e.subarray(n+o)}}},_int:{encode(r){let{Err:e}=kt;if(r<Tt)throw new e("integer: negative integers are not allowed");let t=Xt(r);if(Number.parseInt(t[0],16)&8&&(t="00"+t),t.length&1)throw new e("unexpected assertion");return t},decode(r){let{Err:e}=kt;if(r[0]&128)throw new e("Invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("Invalid signature integer: unnecessary leading zero");return $a(r)}},toSig(r){let{Err:e,_int:t,_tlv:n}=kt,i=typeof r=="string"?za(r):r;Sr(i);let{v:s,l:o}=n.decode(48,i);if(o.length)throw new e("Invalid signature: left bytes after parsing");let{v:a,l:c}=n.decode(2,s),{v:l,l:u}=n.decode(2,c);if(u.length)throw new e("Invalid signature: left bytes after parsing");return{r:t.decode(a),s:t.decode(l)}},hexFromSig(r){let{_tlv:e,_int:t}=kt,n=`${e.encode(2,t.encode(r.r))}${e.encode(2,t.encode(r.s))}`;return e.encode(48,n)}},Tt=BigInt(0),ge=BigInt(1),Lu=BigInt(2),k3=BigInt(3),Pu=BigInt(4);function Ga(r){let e=Ka(r),{Fp:t}=e,n=Vt(e.n,e.nBitLength),i=e.toBytes||((p,d,w)=>{let v=d.toAffine();return xt(Uint8Array.from([4]),t.toBytes(v.x),t.toBytes(v.y))}),s=e.fromBytes||(p=>{let d=p.subarray(1),w=t.fromBytes(d.subarray(0,t.BYTES)),v=t.fromBytes(d.subarray(t.BYTES,2*t.BYTES));return{x:w,y:v}});function o(p){let{a:d,b:w}=e,v=t.sqr(p),m=t.mul(v,p);return t.add(t.add(m,t.mul(p,d)),w)}if(!t.eql(t.sqr(e.Gy),o(e.Gx)))throw new Error("bad generator point: equation left != right");function a(p){return sn(p,ge,e.n)}function c(p){let{allowedPrivateKeyLengths:d,nByteLength:w,wrapPrivateKey:v,n:m}=e;if(d&&typeof p!="bigint"){if(Dt(p)&&(p=bt(p)),typeof p!="string"||!d.includes(p.length))throw new Error("Invalid key");p=p.padStart(w*2,"0")}let A;try{A=typeof p=="bigint"?p:wt(re("private key",p,w))}catch{throw new Error(`private key must be ${w} bytes, hex or bigint, not ${typeof p}`)}return v&&(A=Z(A,m)),_e("private key",A,ge,m),A}function l(p){if(!(p instanceof h))throw new Error("ProjectivePoint expected")}let u=tr((p,d)=>{let{px:w,py:v,pz:m}=p;if(t.eql(m,t.ONE))return{x:w,y:v};let A=p.is0();d==null&&(d=A?t.ONE:t.inv(m));let R=t.mul(w,d),T=t.mul(v,d),I=t.mul(m,d);if(A)return{x:t.ZERO,y:t.ZERO};if(!t.eql(I,t.ONE))throw new Error("invZ was invalid");return{x:R,y:T}}),f=tr(p=>{if(p.is0()){if(e.allowInfinityPoint&&!t.is0(p.py))return;throw new Error("bad point: ZERO")}let{x:d,y:w}=p.toAffine();if(!t.isValid(d)||!t.isValid(w))throw new Error("bad point: x or y not FE");let v=t.sqr(w),m=o(d);if(!t.eql(v,m))throw new Error("bad point: equation left != right");if(!p.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class h{constructor(d,w,v){if(this.px=d,this.py=w,this.pz=v,d==null||!t.isValid(d))throw new Error("x required");if(w==null||!t.isValid(w))throw new Error("y required");if(v==null||!t.isValid(v))throw new Error("z required");Object.freeze(this)}static fromAffine(d){let{x:w,y:v}=d||{};if(!d||!t.isValid(w)||!t.isValid(v))throw new Error("invalid affine point");if(d instanceof h)throw new Error("projective point not allowed");let m=A=>t.eql(A,t.ZERO);return m(w)&&m(v)?h.ZERO:new h(w,v,t.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){let w=t.invertBatch(d.map(v=>v.pz));return d.map((v,m)=>v.toAffine(w[m])).map(h.fromAffine)}static fromHex(d){let w=h.fromAffine(s(re("pointHex",d)));return w.assertValidity(),w}static fromPrivateKey(d){return h.BASE.multiply(c(d))}static msm(d,w){return s1(h,n,d,w)}_setWindowSize(d){y.setWindowSize(this,d)}assertValidity(){f(this)}hasEvenY(){let{y:d}=this.toAffine();if(t.isOdd)return!t.isOdd(d);throw new Error("Field doesn't support isOdd")}equals(d){l(d);let{px:w,py:v,pz:m}=this,{px:A,py:R,pz:T}=d,I=t.eql(t.mul(w,T),t.mul(A,m)),k=t.eql(t.mul(v,T),t.mul(R,m));return I&&k}negate(){return new h(this.px,t.neg(this.py),this.pz)}double(){let{a:d,b:w}=e,v=t.mul(w,k3),{px:m,py:A,pz:R}=this,T=t.ZERO,I=t.ZERO,k=t.ZERO,P=t.mul(m,m),oe=t.mul(A,A),K=t.mul(R,R),O=t.mul(m,A);return O=t.add(O,O),k=t.mul(m,R),k=t.add(k,k),T=t.mul(d,k),I=t.mul(v,K),I=t.add(T,I),T=t.sub(oe,I),I=t.add(oe,I),I=t.mul(T,I),T=t.mul(O,T),k=t.mul(v,k),K=t.mul(d,K),O=t.sub(P,K),O=t.mul(d,O),O=t.add(O,k),k=t.add(P,P),P=t.add(k,P),P=t.add(P,K),P=t.mul(P,O),I=t.add(I,P),K=t.mul(A,R),K=t.add(K,K),P=t.mul(K,O),T=t.sub(T,P),k=t.mul(K,oe),k=t.add(k,k),k=t.add(k,k),new h(T,I,k)}add(d){l(d);let{px:w,py:v,pz:m}=this,{px:A,py:R,pz:T}=d,I=t.ZERO,k=t.ZERO,P=t.ZERO,oe=e.a,K=t.mul(e.b,k3),O=t.mul(w,A),ae=t.mul(v,R),B=t.mul(m,T),N=t.add(w,v),x=t.add(A,R);N=t.mul(N,x),x=t.add(O,ae),N=t.sub(N,x),x=t.add(w,m);let b=t.add(A,T);return x=t.mul(x,b),b=t.add(O,B),x=t.sub(x,b),b=t.add(v,m),I=t.add(R,T),b=t.mul(b,I),I=t.add(ae,B),b=t.sub(b,I),P=t.mul(oe,x),I=t.mul(K,B),P=t.add(I,P),I=t.sub(ae,P),P=t.add(ae,P),k=t.mul(I,P),ae=t.add(O,O),ae=t.add(ae,O),B=t.mul(oe,B),x=t.mul(K,x),ae=t.add(ae,B),B=t.sub(O,B),B=t.mul(oe,B),x=t.add(x,B),O=t.mul(ae,x),k=t.add(k,O),O=t.mul(b,x),I=t.mul(N,I),I=t.sub(I,O),O=t.mul(N,ae),P=t.mul(b,P),P=t.add(P,O),new h(I,k,P)}subtract(d){return this.add(d.negate())}is0(){return this.equals(h.ZERO)}wNAF(d){return y.wNAFCached(this,d,h.normalizeZ)}multiplyUnsafe(d){_e("scalar",d,Tt,e.n);let w=h.ZERO;if(d===Tt)return w;if(d===ge)return this;let{endo:v}=e;if(!v)return y.unsafeLadder(this,d);let{k1neg:m,k1:A,k2neg:R,k2:T}=v.splitScalar(d),I=w,k=w,P=this;for(;A>Tt||T>Tt;)A&ge&&(I=I.add(P)),T&ge&&(k=k.add(P)),P=P.double(),A>>=ge,T>>=ge;return m&&(I=I.negate()),R&&(k=k.negate()),k=new h(t.mul(k.px,v.beta),k.py,k.pz),I.add(k)}multiply(d){let{endo:w,n:v}=e;_e("scalar",d,ge,v);let m,A;if(w){let{k1neg:R,k1:T,k2neg:I,k2:k}=w.splitScalar(d),{p:P,f:oe}=this.wNAF(T),{p:K,f:O}=this.wNAF(k);P=y.constTimeNegate(R,P),K=y.constTimeNegate(I,K),K=new h(t.mul(K.px,w.beta),K.py,K.pz),m=P.add(K),A=oe.add(O)}else{let{p:R,f:T}=this.wNAF(d);m=R,A=T}return h.normalizeZ([m,A])[0]}multiplyAndAddUnsafe(d,w,v){let m=h.BASE,A=(T,I)=>I===Tt||I===ge||!T.equals(m)?T.multiplyUnsafe(I):T.multiply(I),R=A(this,w).add(A(d,v));return R.is0()?void 0:R}toAffine(d){return u(this,d)}isTorsionFree(){let{h:d,isTorsionFree:w}=e;if(d===ge)return!0;if(w)return w(h,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:d,clearCofactor:w}=e;return d===ge?this:w?w(h,this):this.multiplyUnsafe(e.h)}toRawBytes(d=!0){return Qe("isCompressed",d),this.assertValidity(),i(h,this,d)}toHex(d=!0){return Qe("isCompressed",d),bt(this.toRawBytes(d))}}h.BASE=new h(e.Gx,e.Gy,t.ONE),h.ZERO=new h(t.ZERO,t.ONE,t.ZERO);let g=e.nBitLength,y=i1(h,e.endo?Math.ceil(g/2):g);return{CURVE:e,ProjectivePoint:h,normPrivateKeyToScalar:c,weierstrassEquation:o,isWithinCurveOrder:a}}function ja(r){let e=an(r);return it(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function T3(r){let e=ja(r),{Fp:t,n}=e,i=t.BYTES+1,s=2*t.BYTES+1;function o(B){return Z(B,n)}function a(B){return n1(B,n)}let{ProjectivePoint:c,normPrivateKeyToScalar:l,weierstrassEquation:u,isWithinCurveOrder:f}=Ga({...e,toBytes(B,N,x){let b=N.toAffine(),E=t.toBytes(b.x),L=xt;return Qe("isCompressed",x),x?L(Uint8Array.from([N.hasEvenY()?2:3]),E):L(Uint8Array.from([4]),E,t.toBytes(b.y))},fromBytes(B){let N=B.length,x=B[0],b=B.subarray(1);if(N===i&&(x===2||x===3)){let E=wt(b);if(!sn(E,ge,t.ORDER))throw new Error("Point is not on curve");let L=u(E),_;try{_=t.sqrt(L)}catch(q){let F=q instanceof Error?": "+q.message:"";throw new Error("Point is not on curve"+F)}let U=(_&ge)===ge;return(x&1)===1!==U&&(_=t.neg(_)),{x:E,y:_}}else if(N===s&&x===4){let E=t.fromBytes(b.subarray(0,t.BYTES)),L=t.fromBytes(b.subarray(t.BYTES,2*t.BYTES));return{x:E,y:L}}else throw new Error(`Point of length ${N} was invalid. Expected ${i} compressed bytes or ${s} uncompressed bytes`)}}),h=B=>bt(Ot(B,e.nByteLength));function g(B){let N=n>>ge;return B>N}function y(B){return g(B)?o(-B):B}let p=(B,N,x)=>wt(B.slice(N,x));class d{constructor(N,x,b){this.r=N,this.s=x,this.recovery=b,this.assertValidity()}static fromCompact(N){let x=e.nByteLength;return N=re("compactSignature",N,x*2),new d(p(N,0,x),p(N,x,2*x))}static fromDER(N){let{r:x,s:b}=kt.toSig(re("DER",N));return new d(x,b)}assertValidity(){_e("r",this.r,ge,n),_e("s",this.s,ge,n)}addRecoveryBit(N){return new d(this.r,this.s,N)}recoverPublicKey(N){let{r:x,s:b,recovery:E}=this,L=T(re("msgHash",N));if(E==null||![0,1,2,3].includes(E))throw new Error("recovery id invalid");let _=E===2||E===3?x+e.n:x;if(_>=t.ORDER)throw new Error("recovery id 2 or 3 invalid");let U=E&1?"03":"02",V=c.fromHex(U+h(_)),q=a(_),F=o(-L*q),j=o(b*q),W=c.BASE.multiplyAndAddUnsafe(V,F,j);if(!W)throw new Error("point at infinify");return W.assertValidity(),W}hasHighS(){return g(this.s)}normalizeS(){return this.hasHighS()?new d(this.r,o(-this.s),this.recovery):this}toDERRawBytes(){return Jt(this.toDERHex())}toDERHex(){return kt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return Jt(this.toCompactHex())}toCompactHex(){return h(this.r)+h(this.s)}}let w={isValidPrivateKey(B){try{return l(B),!0}catch{return!1}},normPrivateKeyToScalar:l,randomPrivateKey:()=>{let B=oo(e.n);return x0(e.randomBytes(B),e.n)},precompute(B=8,N=c.BASE){return N._setWindowSize(B),N.multiply(BigInt(3)),N}};function v(B,N=!0){return c.fromPrivateKey(B).toRawBytes(N)}function m(B){let N=Dt(B),x=typeof B=="string",b=(N||x)&&B.length;return N?b===i||b===s:x?b===2*i||b===2*s:B instanceof c}function A(B,N,x=!0){if(m(B))throw new Error("first arg must be private key");if(!m(N))throw new Error("second arg must be public key");return c.fromHex(N).multiply(l(B)).toRawBytes(x)}let R=e.bits2int||function(B){let N=wt(B),x=B.length*8-e.nBitLength;return x>0?N>>BigInt(x):N},T=e.bits2int_modN||function(B){return o(R(B))},I=on(e.nBitLength);function k(B){return _e(`num < 2^${e.nBitLength}`,B,Tt,I),Ot(B,e.nByteLength)}function P(B,N,x=oe){if(["recovered","canonical"].some(de=>de in x))throw new Error("sign() legacy options not supported");let{hash:b,randomBytes:E}=e,{lowS:L,prehash:_,extraEntropy:U}=x;L==null&&(L=!0),B=re("msgHash",B),I3(x),_&&(B=re("prehashed msgHash",b(B)));let V=T(B),q=l(N),F=[k(q),k(V)];if(U!=null&&U!==!1){let de=U===!0?E(t.BYTES):U;F.push(re("extraEntropy",de))}let j=xt(...F),W=V;function he(de){let me=R(de);if(!f(me))return;let ke=a(me),ce=c.BASE.multiply(me).toAffine(),Le=o(ce.x);if(Le===Tt)return;let ut=o(ke*o(W+Le*q));if(ut===Tt)return;let $r=(ce.x===Le?0:2)|Number(ce.y&ge),zr=ut;return L&&g(ut)&&(zr=y(ut),$r^=1),new d(Le,zr,$r)}return{seed:j,k2sig:he}}let oe={lowS:e.lowS,prehash:!1},K={lowS:e.lowS,prehash:!1};function O(B,N,x=oe){let{seed:b,k2sig:E}=P(B,N,x),L=e;return ro(L.hash.outputLen,L.nByteLength,L.hmac)(b,E)}c.BASE._setWindowSize(8);function ae(B,N,x,b=K){let E=B;if(N=re("msgHash",N),x=re("publicKey",x),"strict"in b)throw new Error("options.strict was renamed to lowS");I3(b);let{lowS:L,prehash:_}=b,U,V;try{if(typeof E=="string"||Dt(E))try{U=d.fromDER(E)}catch(ce){if(!(ce instanceof kt.Err))throw ce;U=d.fromCompact(E)}else if(typeof E=="object"&&typeof E.r=="bigint"&&typeof E.s=="bigint"){let{r:ce,s:Le}=E;U=new d(ce,Le)}else throw new Error("PARSE");V=c.fromHex(x)}catch(ce){if(ce.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(L&&U.hasHighS())return!1;_&&(N=e.hash(N));let{r:q,s:F}=U,j=T(N),W=a(F),he=o(j*W),de=o(q*W),me=c.BASE.multiplyAndAddUnsafe(V,he,de)?.toAffine();return me?o(me.x)===q:!1}return{CURVE:e,getPublicKey:v,getSharedSecret:A,sign:O,verify:ae,ProjectivePoint:c,Signature:d,utils:w}}function Za(r){return{hash:r,hmac:(e,...t)=>So(r,e,Zs(...t)),randomBytes:Ar}}function R3(r,e){let t=n=>T3({...r,...Za(n)});return Object.freeze({...t(e),create:t})}var P3=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),N3=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Wa=BigInt(1),Io=BigInt(2),L3=(r,e)=>(r+e/Io)/e;function Qa(r){let e=P3,t=BigInt(3),n=BigInt(6),i=BigInt(11),s=BigInt(22),o=BigInt(23),a=BigInt(44),c=BigInt(88),l=r*r*r%e,u=l*l*r%e,f=J(u,t,e)*u%e,h=J(f,t,e)*u%e,g=J(h,Io,e)*l%e,y=J(g,i,e)*g%e,p=J(y,s,e)*y%e,d=J(p,a,e)*p%e,w=J(d,c,e)*d%e,v=J(w,a,e)*p%e,m=J(v,t,e)*u%e,A=J(m,o,e)*y%e,R=J(A,n,e)*l%e,T=J(R,Io,e);if(!ko.eql(ko.sqr(T),r))throw new Error("Cannot find square root");return T}var ko=Vt(P3,void 0,void 0,{sqrt:Qa}),ir=R3({a:BigInt(0),b:BigInt(7),Fp:ko,n:N3,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{let e=N3,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-Wa*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),s=t,o=BigInt("0x100000000000000000000000000000000"),a=L3(s*r,e),c=L3(-n*r,e),l=Z(r-a*t-c*i,e),u=Z(-a*n-c*s,e),f=l>o,h=u>o;if(f&&(l=e-l),h&&(u=e-u),l>o||u>o)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:f,k1:l,k2neg:h,k2:u}}}},kr),Hu=BigInt(0);var qu=ir.ProjectivePoint;function Se(r,e){e==null&&(e=r.reduce((i,s)=>i+s.length,0));let t=pe(e),n=0;for(let i of r)t.set(i,n),n+=i.length;return t}function C3(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}function _3(r,e,t){let n=mt.digest(t instanceof Uint8Array?t:t.subarray());if(C3(n))return n.then(({digest:i})=>ir.verify(e,i,r)).catch(i=>{throw new mn(String(i))});try{return ir.verify(e,n.digest,r)}catch(i){throw new mn(String(i))}}var ri=class{type="secp256k1";raw;_key;constructor(e){this._key=D3(e),this.raw=U3(this._key)}toMultihash(){return gt.digest(Ir(this))}toCID(){return ne.createV1(114,this.toMultihash())}toString(){return Q.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ee(this.raw,e.raw)}verify(e,t){return _3(this._key,t,e)}};function To(r){return new ri(r)}function U3(r){return ir.ProjectivePoint.fromHex(r).toRawBytes(!0)}function D3(r){try{return ir.ProjectivePoint.fromHex(r),r}catch(e){throw new ht(String(e))}}function ni(r){let{Type:e,Data:t}=st.decode(r),n=t??new Uint8Array;switch(e){case fe.RSA:return Bo(n);case fe.Ed25519:return fo(n);case fe.secp256k1:return To(n);default:throw new Zt}}function M3(r){let{Type:e,Data:t}=st.decode(r.digest),n=t??new Uint8Array;switch(e){case fe.Ed25519:return fo(n);case fe.secp256k1:return To(n);default:throw new Zt}}function Ir(r){return st.encode({Type:fe[r.type],Data:r.raw})}async function _r(r,e){let t=e.key,i=C(t).split("/");if(i.length<3)return;let s=r[i[1].toString()];if(s==null)throw new $(`No validator available for key type "${i[1]}"`);await s(t,e.value)}var Xa=async(r,e)=>{if(!(r instanceof Uint8Array))throw new $('"key" must be a Uint8Array');if(r.byteLength<5)throw new $("Invalid public key record");if(C(r.subarray(0,4))!=="/pk/")throw new $("key was not prefixed with /pk/");let n=ni(e),i=r.slice(4);if(!ee(i,n.toMultihash().bytes))throw new $("public key does not match passed in key")},O3={pk:Xa};var V3=Symbol.for("nodejs.util.inspect.custom"),Ja=114,wn=class{type;multihash;publicKey;string;constructor(e){this.type=e.type,this.multihash=e.multihash,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[ts]=!0;toString(){return this.string==null&&(this.string=Q.encode(this.multihash.bytes).slice(1)),this.string}toMultihash(){return this.multihash}toCID(){return ne.createV1(Ja,this.multihash)}toJSON(){return this.toString()}equals(e){if(e==null)return!1;if(e instanceof Uint8Array)return ee(this.multihash.bytes,e);if(typeof e=="string")return this.toString()===e;if(e?.toMultihash()?.bytes!=null)return ee(this.multihash.bytes,e.toMultihash().bytes);throw new Error("not valid Id")}[V3](){return`PeerId(${this.toString()})`}},xn=class extends wn{type="RSA";publicKey;constructor(e){super({...e,type:"RSA"}),this.publicKey=e.publicKey}},vn=class extends wn{type="Ed25519";publicKey;constructor(e){super({...e,type:"Ed25519"}),this.publicKey=e.publicKey}},En=class extends wn{type="secp256k1";publicKey;constructor(e){super({...e,type:"secp256k1"}),this.publicKey=e.publicKey}},e8=2336,ii=class{type="url";multihash;publicKey;url;constructor(e){this.url=e.toString(),this.multihash=gt.digest(Y(this.url))}[V3](){return`PeerId(${this.url})`}[ts]=!0;toString(){return this.toCID().toString()}toMultihash(){return this.multihash}toCID(){return ne.createV1(e8,this.toMultihash())}toJSON(){return this.toString()}equals(e){return e==null?!1:(e instanceof Uint8Array&&(e=C(e)),e.toString()===this.toString())}};function F3(r,e){let t;if(r.charAt(0)==="1"||r.charAt(0)==="Q")t=be(Q.decode(`z${r}`));else{if(e==null)throw new $('Please pass a multibase decoder for strings that do not start with "1" or "Q"');t=be(e.decode(r))}return Je(t)}function H3(r){if(r.type==="Ed25519")return new vn({multihash:r.toCID().multihash,publicKey:r});if(r.type==="secp256k1")return new En({multihash:r.toCID().multihash,publicKey:r});if(r.type==="RSA")return new xn({multihash:r.toCID().multihash,publicKey:r});throw new Zt}function Je(r){if(r8(r))return new xn({multihash:r});if(t8(r))try{let e=M3(r);if(e.type==="Ed25519")return new vn({multihash:r,publicKey:e});if(e.type==="secp256k1")return new En({multihash:r,publicKey:e})}catch{let t=C(r.digest);return new ii(new URL(t))}throw new On("Supplied PeerID Multihash is invalid")}function t8(r){return r.code===gt.code}function r8(r){return r.code===mt.code}var si=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,n=e();return n===void 0&&(this.index=t),n}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,n){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,t,n,i){return this.readAtomically(()=>{let s=0,o=0,a=this.peekChar();if(a===void 0)return;let c=a==="0",l=2**(8*i)-1;for(;;){let u=this.readAtomically(()=>{let f=this.readChar();if(f===void 0)return;let h=Number.parseInt(f,e);if(!Number.isNaN(h))return h});if(u===void 0)break;if(s*=e,s+=u,s>l||(o+=1,t!==void 0&&o>t))return}if(o!==0)return!n&&c&&o>1?void 0:s})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let n=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[t]=n}return e})}readIPv6Addr(){let e=t=>{for(let n=0;n<t.length/2;n++){let i=n*2;if(n<t.length-3){let o=this.readSeparator(":",n,()=>this.readIPv4Addr());if(o!==void 0)return t[i]=o[0],t[i+1]=o[1],t[i+2]=o[2],t[i+3]=o[3],[i+4,!0]}let s=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(s===void 0)return[i,!1];t[i]=s>>8,t[i+1]=s&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[n,i]=e(t);if(n===16)return t;if(i||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let s=new Uint8Array(14),o=16-(n+2),[a]=e(s.subarray(0,o));return t.set(s.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var q3=45,n8=15,Ur=new si;function Ro(r){if(!(r.length>n8))return Ur.new(r).parseWith(()=>Ur.readIPv4Addr())}function No(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>q3))return Ur.new(r).parseWith(()=>Ur.readIPv6Addr())}function oi(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>q3))return Ur.new(r).parseWith(()=>Ur.readIPAddr())}function ai(r){return!!Ro(r)}function ci(r){return!!No(r)}function li(r){return!!oi(r)}var $3=Mn(K3(),1),i8=["0.0.0.0/8","10.0.0.0/8","100.64.0.0/10","127.0.0.0/8","169.254.0.0/16","172.16.0.0/12","192.0.0.0/24","192.0.0.0/29","192.0.0.8/32","192.0.0.9/32","192.0.0.10/32","192.0.0.170/32","192.0.0.171/32","192.0.2.0/24","192.31.196.0/24","192.52.193.0/24","192.88.99.0/24","192.168.0.0/16","192.175.48.0/24","198.18.0.0/15","198.51.100.0/24","203.0.113.0/24","240.0.0.0/4","255.255.255.255/32"],s8=i8.map(r=>new $3.Netmask(r));function Lo(r){for(let e of s8)if(e.contains(r))return!0;return!1}function o8(r){return/^::ffff:([0-9a-fA-F]{1,4}):([0-9a-fA-F]{1,4})$/.test(r)}function a8(r){let e=r.split(":");if(e.length<2)return!1;let t=e[e.length-1].padStart(4,"0"),n=e[e.length-2].padStart(4,"0"),i=`${parseInt(n.substring(0,2),16)}.${parseInt(n.substring(2),16)}.${parseInt(t.substring(0,2),16)}.${parseInt(t.substring(2),16)}`;return Lo(i)}function c8(r){return/^::ffff:([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)}function l8(r){let e=r.split(":"),t=e[e.length-1];return Lo(t)}function u8(r){return/^::$/.test(r)||/^::1$/.test(r)||/^64:ff9b::([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)||/^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^f[c-d]([0-9a-fA-F]{2,2}):/i.test(r)||/^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(r)||/^ff([0-9a-fA-F]{2,2}):/i.test(r)}function ui(r){return ai(r)?Lo(r):o8(r)?a8(r):c8(r)?l8(r):ci(r)?u8(r):void 0}var Rt="/",z3=new TextEncoder().encode(Rt),fi=z3[0],Dr=class r{_buf;constructor(e,t){if(typeof e=="string")this._buf=Y(e);else if(e instanceof Uint8Array)this._buf=e;else throw new Error("Invalid key, should be String of Uint8Array");if(t==null&&(t=!0),t&&this.clean(),this._buf.byteLength===0||this._buf[0]!==fi)throw new Error("Invalid key")}toString(e="utf8"){return C(this._buf,e)}uint8Array(){return this._buf}get[Symbol.toStringTag](){return`Key(${this.toString()})`}static withNamespaces(e){return new r(e.join(Rt))}static random(){return new r(Math.random().toString().substring(2))}static asKey(e){return e instanceof Uint8Array||typeof e=="string"?new r(e):typeof e.uint8Array=="function"?new r(e.uint8Array()):null}clean(){if((this._buf==null||this._buf.byteLength===0)&&(this._buf=z3),this._buf[0]!==fi){let e=new Uint8Array(this._buf.byteLength+1);e.fill(fi,0,1),e.set(this._buf,1),this._buf=e}for(;this._buf.byteLength>1&&this._buf[this._buf.byteLength-1]===fi;)this._buf=this._buf.subarray(0,-1)}less(e){let t=this.list(),n=e.list();for(let i=0;i<t.length;i++){if(n.length<i+1)return!1;let s=t[i],o=n[i];if(s<o)return!0;if(s>o)return!1}return t.length<n.length}reverse(){return r.withNamespaces(this.list().slice().reverse())}namespaces(){return this.list()}baseNamespace(){let e=this.namespaces();return e[e.length-1]}list(){return this.toString().split(Rt).slice(1)}type(){return f8(this.baseNamespace())}name(){return h8(this.baseNamespace())}instance(e){return new r(this.toString()+":"+e)}path(){let e=this.parent().toString();return e.endsWith(Rt)||(e+=Rt),e+=this.type(),new r(e)}parent(){let e=this.list();return e.length===1?new r(Rt):new r(e.slice(0,-1).join(Rt))}child(e){return this.toString()===Rt?e:e.toString()===Rt?this:new r(this.toString()+e.toString(),!1)}isAncestorOf(e){return e.toString()===this.toString()?!1:e.toString().startsWith(this.toString())}isDecendantOf(e){return e.toString()===this.toString()?!1:this.toString().startsWith(e.toString())}isTopLevel(){return this.list().length===1}concat(...e){return r.withNamespaces([...this.namespaces(),...d8(e.map(t=>t.namespaces()))])}};function f8(r){let e=r.split(":");return e.length<2?"":e.slice(0,-1).join(":")}function h8(r){let e=r.split(":");return e[e.length-1]}function d8(r){return[].concat(...r)}var p8=Y("/pk/");function hi(r){return{...r,multiaddrs:r.multiaddrs.filter(e=>{let[[t,n]]=e.stringTuples();if(t===53||t===54||t===55)return n!=="localhost";if(t!==4&&t!==6||n==null)return!1;let i=ui(n);return i==null?!0:!i})}}function G3(r){return{...r,multiaddrs:r.multiaddrs.filter(e=>{let[[t,n]]=e.stringTuples();if(n==="localhost")return!0;if(t!==4&&t!==6||n==null)return!1;let i=ui(n);return i??!1})}}function j3(r){return r}async function zt(r){return(await mt.digest(r)).digest}async function ze(r){return zt(r.toMultihash().bytes)}function Gt(r){return new Dr(`${A2}/${C(r,"base32")}`,!1)}function Z3(r){return Se([p8,r.toMultihash().bytes])}function W3(r){return C(r.subarray(0,4))==="/pk/"}function Q3(r){let e=be(r.subarray(4));return Je(e)}function Po(r,e){let t=new Date;return new le(r,e,t).serialize()}function Y3(r,e=100){let t;return()=>{clearTimeout(t),t=setTimeout(()=>{r()},e)}}var g8=290,m8=54,y8=55,b8=56,w8=4,x8=41;function X3(r){let e=r.stringTuples();for(let t of e)if(t[0]===g8)return!1;if(e[0][0]===m8||e[0][0]===y8||e[0][0]===b8)return!0;if(e[0][0]===w8||e[0][0]===x8){let t=ui(`${e[0][1]}`);return t==null||!t}return!1}var di=class{log;components;validators;selectors;peerRouting;queryManager;network;constructor(e,t){let{validators:n,selectors:i,peerRouting:s,queryManager:o,network:a,logPrefix:c}=t;this.components=e,this.log=e.logger.forComponent(`${c}:content-fetching`),this.validators=n,this.selectors=i,this.peerRouting=s,this.queryManager=o,this.network=a}async getLocal(e){this.log("getLocal %b",e);let t=Gt(e);this.log("fetching record for key %k",t);let n=await this.components.datastore.get(t);this.log("found %k in local datastore",t);let i=le.deserialize(n);return await _r(this.validators,i),i}async*sendCorrectionRecord(e,t,n,i={}){this.log("sendCorrection for %b",e);let s=Po(e,n);for(let{value:o,from:a}of t){if(ee(o,n)){this.log("record was ok");continue}if(this.components.peerId.equals(a)){try{let u=Gt(e);this.log(`Storing corrected record for key ${u.toString()}`),await this.components.datastore.put(u,s.subarray())}catch(u){this.log.error("Failed error correcting self",u)}continue}let c=!1,l={type:M.PUT_VALUE,key:e,record:s};for await(let u of this.network.sendRequest(a,l,i))u.name==="PEER_RESPONSE"&&u.record!=null&&ee(u.record.value,le.deserialize(s).value)&&(c=!0),yield u;c||(yield Ve({from:a,error:new Ct("Value not put correctly")},i)),this.log.error("Failed error correcting entry")}}async*put(e,t,n={}){this.log("put key %b value %b",e,t);let i=Po(e,t),s=Gt(e);this.log(`storing record for key ${s.toString()}`),await this.components.datastore.put(s,i.subarray()),yield*Pt(this.peerRouting.getClosestPeers(e,{signal:n.signal}),o=>gr(o,a=>async()=>{if(a.name!=="FINAL_PEER")return[a];let c=[],l={type:M.PUT_VALUE,key:e,record:i};this.log("send put to %p",a.peer.id);for await(let u of this.network.sendRequest(a.peer.id,l,n))c.push(u),u.name==="PEER_RESPONSE"&&(u.record!=null&&ee(u.record.value,le.deserialize(i).value)||c.push(Ve({from:a.peer.id,error:new Ct("Value not put correctly")},n)));return c}),o=>en(o,{ordered:!1,concurrency:3}),async function*(o){for await(let a of o)yield*a})}async*get(e,t={}){this.log("get %b",e);let n=[];for await(let a of this.getMany(e,t))a.name==="VALUE"&&n.push(a),yield a;if(n.length===0)return;let i=n.map(a=>a.value),s=0;try{s=i0(this.selectors,e,i)}catch(a){if(a.name!=="InvalidParametersError")throw a}let o=i[s];if(this.log("GetValue %b %b",e,o),o==null)throw new Ge("Best value was not found");yield*this.sendCorrectionRecord(e,n,o,t),yield n[s]}async*getMany(e,t={}){this.log("getMany values for %b",e);try{let s=await this.getLocal(e);yield rn({value:s.value,from:this.components.peerId},t)}catch(s){this.log("error getting local value for %b",e,s)}let n=this,i=async function*({peer:s,signal:o}){for await(let a of n.peerRouting.getValueOrPeers(s,e,{signal:o}))yield a,a.name==="PEER_RESPONSE"&&a.record!=null&&(yield rn({from:s,value:a.record.value},t))};yield*this.queryManager.run(e,i,t)}};function _o(r,e){let t={[Symbol.iterator]:()=>t,next:()=>{let n=r.next(),i=n.value;return n.done===!0||i==null?{done:!0,value:void 0}:{done:!1,value:e(i)}}};return t}function pi(r){let e=be(Q.decode(`z${r}`));return Je(e)}var lt=class r{set;constructor(e){if(this.set=new Set,e!=null)for(let t of e)this.set.add(t.toString())}get size(){return this.set.size}[Symbol.iterator](){return this.values()}add(e){this.set.add(e.toString())}clear(){this.set.clear()}delete(e){this.set.delete(e.toString())}entries(){return _o(this.set.entries(),e=>{let t=pi(e[0]);return[t,t]})}forEach(e){this.set.forEach(t=>{let n=pi(t);e(n,n,this)})}has(e){return this.set.has(e.toString())}values(){return _o(this.set.values(),e=>pi(e))}intersection(e){let t=new r;for(let n of e)this.has(n)&&t.add(n);return t}difference(e){let t=new r;for(let n of this)e.has(n)||t.add(n);return t}union(e){let t=new r;for(let n of e)t.add(n);for(let n of this)t.add(n);return t}};var t4=Symbol.for("@achingbrain/uint8arraylist");function e4(r,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let t=0;for(let n of r){let i=t+n.byteLength;if(e<i)return{buf:n,index:e-t};t=i}throw new RangeError("index is out of bounds")}function gi(r){return!!r?.[t4]}var Fe=class r{bufs;length;[t4]=!0;constructor(...e){this.bufs=[],this.length=0,e.length>0&&this.appendAll(e)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...e){this.appendAll(e)}appendAll(e){let t=0;for(let n of e)if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.push(n);else if(gi(n))t+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}prepend(...e){this.prependAll(e)}prependAll(e){let t=0;for(let n of e.reverse())if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.unshift(n);else if(gi(n))t+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}get(e){let t=e4(this.bufs,e);return t.buf[t.index]}set(e,t){let n=e4(this.bufs,e);n.buf[n.index]=t}write(e,t=0){if(e instanceof Uint8Array)for(let n=0;n<e.length;n++)this.set(t+n,e[n]);else if(gi(e))for(let n=0;n<e.length;n++)this.set(t+n,e.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(e){if(e=Math.trunc(e),!(Number.isNaN(e)||e<=0)){if(e===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(e>=this.bufs[0].byteLength)e-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(e),this.length-=e;break}}}slice(e,t){let{bufs:n,length:i}=this._subList(e,t);return Se(n,i)}subarray(e,t){let{bufs:n,length:i}=this._subList(e,t);return n.length===1?n[0]:Se(n,i)}sublist(e,t){let{bufs:n,length:i}=this._subList(e,t),s=new r;return s.length=i,s.bufs=[...n],s}_subList(e,t){if(e=e??0,t=t??this.length,e<0&&(e=this.length+e),t<0&&(t=this.length+t),e<0||t>this.length)throw new RangeError("index is out of bounds");if(e===t)return{bufs:[],length:0};if(e===0&&t===this.length)return{bufs:this.bufs,length:this.length};let n=[],i=0;for(let s=0;s<this.bufs.length;s++){let o=this.bufs[s],a=i,c=a+o.byteLength;if(i=c,e>=c)continue;let l=e>=a&&e<c,u=t>a&&t<=c;if(l&&u){if(e===a&&t===c){n.push(o);break}let f=e-a;n.push(o.subarray(f,f+(t-e)));break}if(l){if(e===0){n.push(o);continue}n.push(o.subarray(e-a));continue}if(u){if(t===c){n.push(o);break}n.push(o.subarray(0,t-a));break}n.push(o)}return{bufs:n,length:t-e}}indexOf(e,t=0){if(!gi(e)&&!(e instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let n=e instanceof Uint8Array?e:e.subarray();if(t=Number(t??0),isNaN(t)&&(t=0),t<0&&(t=this.length+t),t<0&&(t=0),e.length===0)return t>this.length?this.length:t;let i=n.byteLength;if(i===0)throw new TypeError("search must be at least 1 byte long");let s=256,o=new Int32Array(s);for(let f=0;f<s;f++)o[f]=-1;for(let f=0;f<i;f++)o[n[f]]=f;let a=o,c=this.byteLength-n.byteLength,l=n.byteLength-1,u;for(let f=t;f<=c;f+=u){u=0;for(let h=l;h>=0;h--){let g=this.get(f+h);if(n[h]!==g){u=Math.max(1,h-a[g]);break}}if(u===0)return f}return-1}getInt8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getInt8(0)}setInt8(e,t){let n=pe(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,t),this.write(n,e)}getInt16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,t)}setInt16(e,t,n){let i=Ce(2);new DataView(i.buffer,i.byteOffset,i.byteLength).setInt16(0,t,n),this.write(i,e)}getInt32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,t)}setInt32(e,t,n){let i=Ce(4);new DataView(i.buffer,i.byteOffset,i.byteLength).setInt32(0,t,n),this.write(i,e)}getBigInt64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,t)}setBigInt64(e,t,n){let i=Ce(8);new DataView(i.buffer,i.byteOffset,i.byteLength).setBigInt64(0,t,n),this.write(i,e)}getUint8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getUint8(0)}setUint8(e,t){let n=pe(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,t),this.write(n,e)}getUint16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,t)}setUint16(e,t,n){let i=Ce(2);new DataView(i.buffer,i.byteOffset,i.byteLength).setUint16(0,t,n),this.write(i,e)}getUint32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,t)}setUint32(e,t,n){let i=Ce(4);new DataView(i.buffer,i.byteOffset,i.byteLength).setUint32(0,t,n),this.write(i,e)}getBigUint64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,t)}setBigUint64(e,t,n){let i=Ce(8);new DataView(i.buffer,i.byteOffset,i.byteLength).setBigUint64(0,t,n),this.write(i,e)}getFloat32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,t)}setFloat32(e,t,n){let i=Ce(4);new DataView(i.buffer,i.byteOffset,i.byteLength).setFloat32(0,t,n),this.write(i,e)}getFloat64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,t)}setFloat64(e,t,n){let i=Ce(8);new DataView(i.buffer,i.byteOffset,i.byteLength).setFloat64(0,t,n),this.write(i,e)}equals(e){if(e==null||!(e instanceof r)||e.bufs.length!==this.bufs.length)return!1;for(let t=0;t<this.bufs.length;t++)if(!ee(this.bufs[t],e.bufs[t]))return!1;return!0}static fromUint8Arrays(e,t){let n=new r;return n.bufs=e,t==null&&(t=e.reduce((i,s)=>i+s.byteLength,0)),n.length=t,n}};var Jh=parseInt("0xFFFF",16),ed=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);var i4=ai,S8=ci,Uo=function(r){let e=0;if(r=r.toString().trim(),i4(r)){let t=new Uint8Array(e+4);return r.split(/\./g).forEach(n=>{t[e++]=parseInt(n,10)&255}),t}if(S8(r)){let t=r.split(":",8),n;for(n=0;n<t.length;n++){let s=i4(t[n]),o;s&&(o=Uo(t[n]),t[n]=C(o.slice(0,2),"base16")),o!=null&&++n<8&&t.splice(n,0,C(o.slice(2,4),"base16"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(n=0;n<t.length&&t[n]!=="";n++);let s=[n,1];for(n=9-t.length;n>0;n--)s.push("0");t.splice.apply(t,s)}let i=new Uint8Array(e+16);for(n=0;n<t.length;n++){let s=parseInt(t[n],16);i[e++]=s>>8&255,i[e++]=s&255}return i}throw new Error("invalid ip address")},s4=function(r,e=0,t){e=~~e,t=t??r.length-e;let n=new DataView(r.buffer);if(t===4){let i=[];for(let s=0;s<t;s++)i.push(r[e+s]);return i.join(".")}if(t===16){let i=[];for(let s=0;s<t;s+=2)i.push(n.getUint16(e+s).toString(16));return i.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var Mr={},Do={},k8=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];k8.forEach(r=>{let e=T8(...r);Do[e.code]=e,Mr[e.name]=e});function T8(r,e,t,n,i){return{code:r,size:e,name:t,resolvable:!!n,path:!!i}}function G(r){if(typeof r=="number"){if(Do[r]!=null)return Do[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(Mr[r]!=null)return Mr[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var Ud=G("ip4"),Dd=G("ip6"),Md=G("ipcidr");function Fo(r,e){switch(G(r).code){case 4:case 41:return N8(e);case 42:return Vo(e);case 6:case 273:case 33:case 132:return c4(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Vo(e);case 421:return _8(e);case 444:return a4(e);case 445:return a4(e);case 466:return C8(e);case 481:return globalThis.encodeURIComponent(Vo(e));default:return C(e,"base16")}}function Ho(r,e){switch(G(r).code){case 4:return o4(e);case 41:return o4(e);case 42:return Oo(e);case 6:case 273:case 33:case 132:return qo(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Oo(e);case 421:return L8(e);case 444:return U8(e);case 445:return D8(e);case 466:return P8(e);case 481:return Oo(globalThis.decodeURIComponent(e));default:return Y(e,"base16")}}var Mo=Object.values(Qr).map(r=>r.decoder),R8=function(){let r=Mo[0].or(Mo[1]);return Mo.slice(2).forEach(e=>r=r.or(e)),r}();function o4(r){if(!li(r))throw new Error("invalid ip address");return Uo(r)}function N8(r){let e=s4(r,0,r.length);if(e==null)throw new Error("ipBuff is required");if(!li(e))throw new Error("invalid ip address");return e}function qo(r){let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function c4(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function Oo(r){let e=Y(r),t=Uint8Array.from(He(e.length));return Se([t,e],t.length+e.length)}function Vo(r){let e=Me(r);if(r=r.slice(se(e)),r.length!==e)throw new Error("inconsistent lengths");return C(r)}function L8(r){let e;r[0]==="Q"||r[0]==="1"?e=be(Q.decode(`z${r}`)).bytes:e=ne.parse(r).multihash.bytes;let t=Uint8Array.from(He(e.length));return Se([t,e],t.length+e.length)}function P8(r){let e=R8.decode(r),t=Uint8Array.from(He(e.length));return Se([t,e],t.length+e.length)}function C8(r){let e=Me(r),t=r.slice(se(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+C(t,"base64url")}function _8(r){let e=Me(r),t=r.slice(se(e));if(t.length!==e)throw new Error("inconsistent lengths");return C(t,"base58btc")}function U8(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);let t=pt.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let i=qo(n);return Se([t,i],t.length+i.length)}function D8(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);let t=pt.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let i=qo(n);return Se([t,i],t.length+i.length)}function a4(r){let e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=C(e,"base32"),i=c4(t);return`${n}:${i}`}function l4(r){r=Ko(r);let e=[],t=[],n=null,i=r.split("/").slice(1);if(i.length===1&&i[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let s=0;s<i.length;s++){let o=i[s],a=G(o);if(a.size===0){e.push([a.code]),t.push([a.code]);continue}if(s++,s>=i.length)throw f4("invalid address: "+r);if(a.path===!0){n=Ko(i.slice(s).join("/")),e.push([a.code,Ho(a.code,n)]),t.push([a.code,n]);break}let c=Ho(a.code,i[s]);e.push([a.code,c]),t.push([a.code,Fo(a.code,c)])}return{string:u4(t),bytes:zo(e),tuples:e,stringTuples:t,path:n}}function $o(r){let e=[],t=[],n=null,i=0;for(;i<r.length;){let s=Me(r,i),o=se(s),a=G(s),c=M8(a,r.slice(i+o));if(c===0){e.push([s]),t.push([s]),i+=o;continue}let l=r.slice(i+o,i+o+c);if(i+=c+o,i>r.length)throw f4("Invalid address Uint8Array: "+C(r,"base16"));e.push([s,l]);let u=Fo(s,l);if(t.push([s,u]),a.path===!0){n=u;break}}return{bytes:Uint8Array.from(r),string:u4(t),tuples:e,stringTuples:t,path:n}}function u4(r){let e=[];return r.map(t=>{let n=G(t[0]);return e.push(n.name),t.length>1&&t[1]!=null&&e.push(t[1]),null}),Ko(e.join("/"))}function zo(r){return Se(r.map(e=>{let t=G(e[0]),n=Uint8Array.from(He(t.code));return e.length>1&&e[1]!=null&&(n=Se([n,e[1]])),n}))}function M8(r,e){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let t=Me(e instanceof Uint8Array?e:Uint8Array.from(e));return t+se(t)}}function Ko(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}function f4(r){return new Error("Error parsing address: "+r)}var O8=Symbol.for("nodejs.util.inspect.custom"),jo=Symbol.for("@multiformats/js-multiaddr/multiaddr"),V8=[G("dns").code,G("dns4").code,G("dns6").code,G("dnsaddr").code],Go=class extends Error{constructor(e="No available resolver"){super(e),this.name="NoAvailableResolverError"}},mi=class r{bytes;#e;#r;#s;#a;[jo]=!0;constructor(e){e==null&&(e="");let t;if(e instanceof Uint8Array)t=$o(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);t=l4(e)}else if(d4(e))t=$o(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=t.bytes,this.#e=t.string,this.#r=t.tuples,this.#s=t.stringTuples,this.#a=t.path}toString(){return this.#e}toJSON(){return this.toString()}toOptions(){let e,t,n,i,s="",o=G("tcp"),a=G("udp"),c=G("ip4"),l=G("ip6"),u=G("dns6"),f=G("ip6zone");for(let[g,y]of this.stringTuples())g===f.code&&(s=`%${y??""}`),V8.includes(g)&&(t=o.name,i=443,n=`${y??""}${s}`,e=g===u.code?6:4),(g===o.code||g===a.code)&&(t=G(g).name,i=parseInt(y??"")),(g===c.code||g===l.code)&&(t=G(g).name,n=`${y??""}${s}`,e=g===l.code?6:4);if(e==null||t==null||n==null||i==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:t,port:i}}protos(){return this.#r.map(([e])=>Object.assign({},G(e)))}protoCodes(){return this.#r.map(([e])=>e)}protoNames(){return this.#r.map(([e])=>G(e).name)}tuples(){return this.#r}stringTuples(){return this.#s}encapsulate(e){return e=new r(e),new r(this.toString()+e.toString())}decapsulate(e){let t=e.toString(),n=this.toString(),i=n.lastIndexOf(t);if(i<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new r(n.slice(0,i))}decapsulateCode(e){let t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new r(zo(t.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,i])=>{n===Mr.p2p.code&&e.push([n,i]),n===Mr["p2p-circuit"].code&&(e=[])});let t=e.pop();if(t?.[1]!=null){let n=t[1];return n[0]==="Q"||n[0]==="1"?C(Q.decode(`z${n}`),"base58btc"):C(ne.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#a}equals(e){return ee(this.bytes,e.bytes)}async resolve(e){let t=this.protos().find(s=>s.resolvable);if(t==null)return[this];let n=h4.get(t.name);if(n==null)throw new Go(`no available resolver for ${t.name}`);return(await n(this,e)).map(s=>sr(s))}nodeAddress(){let e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){let t=(e??this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}[O8](){return`Multiaddr(${this.#e})`}};var h4=new Map;function d4(r){return!!r?.[jo]}function sr(r){return new mi(r)}function p4(r,e){return{id:r.id.toMultihash().bytes,multiaddrs:(r.multiaddrs??[]).map(n=>n.bytes),connection:e}}function Bn(r){if(r.id==null)throw new Error("Invalid peer in message");let e=be(r.id);return{id:Je(e),multiaddrs:(r.multiaddrs??[]).map(t=>sr(t))}}var yi=class{log;components;network;peerRouting;queryManager;routingTable;providers;constructor(e,t){let{network:n,peerRouting:i,queryManager:s,routingTable:o,providers:a,logPrefix:c}=t;this.components=e,this.log=e.logger.forComponent(`${c}:content-routing`),this.network=n,this.peerRouting=i,this.queryManager=s,this.routingTable=o,this.providers=a}async*provide(e,t,n={}){this.log("provide %s",e);let i=e.multihash.bytes;await this.providers.addProvider(e,this.components.peerId);let s={type:M.ADD_PROVIDER,key:i,providers:[p4({id:this.components.peerId,multiaddrs:t})]},o=0,a=c=>async()=>{if(c.name!=="FINAL_PEER")return[c];let l=[];this.log("putProvider %s to %p",e,c.peer.id);try{this.log("sending provider record for %s to %p",e,c.peer.id);for await(let u of this.network.sendMessage(c.peer.id,s,n))u.name==="PEER_RESPONSE"&&(this.log("sent provider record for %s to %p",e,c.peer.id),o++),l.push(u)}catch(u){this.log.error("error sending provide record to peer %p",c.peer.id,u),l.push(Ve({from:c.peer.id,error:u},n))}return l};yield*Pt(this.peerRouting.getClosestPeers(i,n),c=>gr(c,l=>a(l)),c=>en(c,{ordered:!1,concurrency:3}),async function*(c){for await(let l of c)yield*l}),this.log("sent provider records to %d peers",o)}async*findProviders(e,t){let n=this.routingTable.kBucketSize,i=0,s=e.multihash.bytes,o=this;this.log("findProviders %c",e);let a=await this.providers.getProviders(e);if(a.length>0){let u=[];for(let f of a.slice(0,n))try{let h=await this.components.peerStore.get(f);u.push({id:f,multiaddrs:h.addresses.map(({multiaddr:g})=>g)})}catch(h){if(h.name!=="NotFoundError")throw h;this.log("no peer store entry for %p",f)}if(yield tn({from:this.components.peerId,messageType:M.GET_PROVIDERS,providers:u},t),yield Gs({from:this.components.peerId,providers:u},t),i+=u.length,i>=n)return}let c=async function*({peer:u,signal:f}){let h={type:M.GET_PROVIDERS,key:s};yield*o.network.sendRequest(u,h,{...t,signal:f})},l=new lt(a);for await(let u of this.queryManager.run(s,c,t))if(yield u,u.name==="PEER_RESPONSE"){this.log("Found %d provider entries for %c and %d closer peers",u.providers.length,e,u.closer.length);let f=[];for(let h of u.providers)l.has(h.id)||(l.add(h.id),f.push(h));if(f.length>0&&(yield Gs({from:u.from,providers:f},t),i+=f.length,i>=n))return}}};function jt(r){let e=new globalThis.AbortController;function t(){e.abort();for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}for(let s of r){if(s?.aborted===!0){t();break}s?.addEventListener!=null&&s.addEventListener("abort",t)}function n(){for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}let i=e.signal;return i.clear=n,i}var Or=class{movingAverage;variance;deviation;forecast;timespan;previousTime;constructor(e){this.timespan=e,this.movingAverage=0,this.variance=0,this.deviation=0,this.forecast=0}alpha(e,t){return 1-Math.exp(-(e-t)/this.timespan)}push(e,t=Date.now()){if(this.previousTime!=null){let n=this.alpha(t,this.previousTime),i=e-this.movingAverage,s=n*i;this.movingAverage=n*e+(1-n)*this.movingAverage,this.variance=(1-n)*(this.variance+i*s),this.deviation=Math.sqrt(this.variance),this.forecast=this.movingAverage+n*i}else this.movingAverage=e;this.previousTime=t}};var F8=1.2,H8=2,q8=2e3,bi=class{success;failure;next;metric;timeoutMultiplier;failureMultiplier;minTimeout;constructor(e={}){this.success=new Or(e.interval??5e3),this.failure=new Or(e.interval??5e3),this.next=new Or(e.interval??5e3),this.failureMultiplier=e.failureMultiplier??H8,this.timeoutMultiplier=e.timeoutMultiplier??F8,this.minTimeout=e.minTimeout??q8,e.metricName!=null&&(this.metric=e.metrics?.registerMetricGroup(e.metricName))}getTimeoutSignal(e={}){let t=Math.max(Math.round(this.next.movingAverage*(e.timeoutFactor??this.timeoutMultiplier)),this.minTimeout),n=AbortSignal.timeout(t),i=jt([e.signal,n]);return ye(1/0,i,n),i.start=Date.now(),i.timeout=t,i}cleanUp(e){let t=Date.now()-e.start;e.aborted?(this.failure.push(t),this.next.push(t*this.failureMultiplier),this.metric?.update({failureMovingAverage:this.failure.movingAverage,failureDeviation:this.failure.deviation,failureForecast:this.failure.forecast,failureVariance:this.failure.variance,failure:t})):(this.success.push(t),this.next.push(t),this.metric?.update({successMovingAverage:this.success.movingAverage,successDeviation:this.success.deviation,successForecast:this.success.forecast,successVariance:this.success.variance,success:t}))}};var wi=class extends Error{type;code;constructor(e,t,n){super(e??"The operation was aborted"),this.type="aborted",this.name=n??"AbortError",this.code=t??"ABORT_ERR"}};async function Vr(r,e,t){if(e==null)return r;if(e.aborted)return Promise.reject(new wi(t?.errorMessage,t?.errorCode,t?.errorName));let n,i=new wi(t?.errorMessage,t?.errorCode,t?.errorName);try{return await Promise.race([r,new Promise((s,o)=>{n=()=>{o(i)},e.addEventListener("abort",n)})])}finally{n!=null&&e.removeEventListener("abort",n)}}var Zo=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=ie(),this.haveNext=ie()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let e=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=ie(),e}async throw(e){return this.ended=!0,e!=null&&(this.haveNext.promise.catch(()=>{}),this.haveNext.reject(e)),{done:!0,value:void 0}}async return(){let e={done:!0,value:void 0};return await this._push(void 0),e}async push(e,t){await this._push(e,t)}async end(e,t){e!=null?await this.throw(e):await this._push(void 0,t)}async _push(e,t){if(e!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");for(;this.nextResult!=null;)await this.readNext.promise;e!=null?this.nextResult={done:!1,value:e}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=ie(),await Vr(this.readNext.promise,t?.signal,t)}};function g4(){return new Zo}var xi=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var Wo=class extends Error{code;constructor(e,t){super(e),this.code=t}},Qo=class extends Wo{type;constructor(e){super(e,"ABORT_ERR"),this.type="aborted",this.name="AbortError"}};function m4(r,e){let t=g4();r.sink(t).catch(async o=>{await t.end(o)}),r.sink=async o=>{for await(let a of o)await t.push(a);await t.end()};let n=r.source;r.source[Symbol.iterator]!=null?n=r.source[Symbol.iterator]():r.source[Symbol.asyncIterator]!=null&&(n=r.source[Symbol.asyncIterator]());let i=new Fe;return{read:async(o,a)=>{a?.signal?.throwIfAborted();let c,l=new Promise((u,f)=>{c=()=>{f(new Qo("Read aborted"))},a?.signal?.addEventListener("abort",c)});try{if(o==null){let{done:f,value:h}=await Promise.race([n.next(),l]);return f===!0?new Fe:h}for(;i.byteLength<o;){let{value:f,done:h}=await Promise.race([n.next(),l]);if(h===!0)throw new xi("unexpected end of input");i.append(f)}let u=i.sublist(0,o);return i.consume(o),u}finally{c!=null&&a?.signal?.removeEventListener("abort",c)}},write:async(o,a)=>{a?.signal?.throwIfAborted(),o instanceof Uint8Array?await t.push(o,a):await t.push(o.subarray(),a)},unwrap:()=>{if(i.byteLength>0){let o=r.source;r.source=async function*(){e?.yieldBytes===!1?yield i:yield*i,yield*o}()}return r}}}var vi=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},Ei=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},Ai=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"};function y4(r,e={}){let t=m4(r,e);e.maxDataLength!=null&&e.maxLengthLength==null&&(e.maxLengthLength=se(e.maxDataLength));let n=e?.lengthDecoder??Me,i=e?.lengthEncoder??He;return{read:async o=>{let a=-1,c=new Fe;for(;;){c.append(await t.read(1,o));try{a=n(c)}catch(l){if(l instanceof RangeError)continue;throw l}if(a<0)throw new vi("Invalid message length");if(e?.maxLengthLength!=null&&c.byteLength>e.maxLengthLength)throw new Ai("message length length too long");if(a>-1)break}if(e?.maxDataLength!=null&&a>e.maxDataLength)throw new Ei("message length too long");return t.read(a,o)},write:async(o,a)=>{await t.write(new Fe(i(o.byteLength),o),a)},writeV:async(o,a)=>{let c=new Fe(...o.flatMap(l=>[i(l.byteLength),l]));await t.write(c,a)},unwrap:()=>t.unwrap()}}function Sn(r,e){let t=y4(r,e),n={read:async(i,s)=>{let o=await t.read(s);return i.decode(o)},write:async(i,s,o)=>{await t.write(s.encode(i),o)},writeV:async(i,s,o)=>{await t.writeV(i.map(a=>s.encode(a)),o)},pb:i=>({read:async s=>n.read(i,s),write:async(s,o)=>n.write(s,i,o),writeV:async(s,o)=>n.writeV(s,i,o),unwrap:()=>n}),unwrap:()=>t.unwrap()};return n}var Bi=class extends Pe{log;protocol;running;components;timeout;constructor(e,t){super();let{protocol:n}=t;this.components=e,this.log=e.logger.forComponent(`${t.logPrefix}:network`),this.running=!1,this.protocol=n,this.timeout=new bi({...t.timeout??{},metrics:e.metrics,metricName:`${t.logPrefix.replaceAll(":","_")}_network_message_send_times_milliseconds`})}async start(){this.running||(this.running=!0)}async stop(){this.running=!1}isStarted(){return this.running}async*sendRequest(e,t,n={}){if(!this.running)return;let i=t.type;if(i==null)throw new $("Message type was missing");this.log("sending %s to %p",t.type,e),yield js({peer:e},n),yield zs({to:e,type:i},n);let s,o=this.timeout.getTimeoutSignal(n);n={...n,signal:o};try{s=await(await this.components.connectionManager.openConnection(e,n)).newStream(this.protocol,n);let c=await this._writeReadMessage(s,t,n);s.close(n).catch(l=>{this.log.error("error closing stream to %p",e,l),s?.abort(l)}),yield tn({from:e,messageType:c.type,closer:c.closer.map(Bn),providers:c.providers.map(Bn),record:c.record==null?void 0:le.deserialize(c.record)},n)}catch(a){s?.abort(a),n.signal?.aborted!==!0&&this.log.error("could not send %s to %p - %e",t.type,e,a),yield Ve({from:e,error:a},n)}finally{this.timeout.cleanUp(o)}}async*sendMessage(e,t,n={}){if(!this.running)return;let i=t.type;if(i==null)throw new $("Message type was missing");this.log("sending %s to %p",t.type,e),yield js({peer:e},n),yield zs({to:e,type:i},n);let s,o=this.timeout.getTimeoutSignal(n);n={...n,signal:o};try{s=await(await this.components.connectionManager.openConnection(e,n)).newStream(this.protocol,n),await this._writeMessage(s,t,n),s.close(n).catch(c=>{this.log.error("error closing stream to %p",e,c),s?.abort(c)}),yield tn({from:e,messageType:i},n)}catch(a){s?.abort(a),yield Ve({from:e,error:a},n)}finally{this.timeout.cleanUp(o)}}async _writeMessage(e,t,n){let i=Sn(e);await i.write(t,Ke,n),await i.unwrap().close(n)}async _writeReadMessage(e,t,n){let i=Sn(e);await i.write(t,Ke,n);let s=await i.read(Ke,n);return await i.unwrap().close(n),s.closer.forEach(o=>{this.safeDispatchEvent("peer",{detail:Bn(o)})}),s.providers.forEach(o=>{this.safeDispatchEvent("peer",{detail:Bn(o)})}),s}};function et(r,e){if(r.length!==e.length)throw new Error("Inputs should have the same length");let t=pe(r.length);for(let n=0;n<r.length;n++)t[n]=r[n]^e[n];return t}function Fr(r,e){if(r.byteLength!==e.byteLength)throw new Error("Inputs should have the same length");for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return r[t]<e[t]?-1:1;return 0}var Hr=class{originDhtKey;capacity;peerDistances;constructor(e,t){this.originDhtKey=e,this.capacity=t,this.peerDistances=[]}get length(){return this.peerDistances.length}get peers(){return this.peerDistances.map(e=>e.peer)}async add(e){let t=await ze(e.id);this.addWitKadId(e,t)}addWitKadId(e,t){if(this.peerDistances.find(i=>i.peer.id.equals(e.id))!=null)return;let n={peer:e,distance:et(this.originDhtKey,t)};this.peerDistances.push(n),this.peerDistances.sort((i,s)=>Fr(i.distance,s.distance)),this.peerDistances=this.peerDistances.slice(0,this.capacity)}async isCloser(e){if(this.length===0)return!0;let t=await ze(e),n=et(t,this.originDhtKey),i=this.peerDistances[this.peerDistances.length-1].distance;return Fr(n,i)===-1}async anyCloser(e){return e.length===0?!1:Promise.any(e.map(async t=>this.isCloser(t)))}};var Si=class{log;routingTable;network;validators;queryManager;peerStore;peerId;constructor(e,t){let{routingTable:n,network:i,validators:s,queryManager:o,logPrefix:a}=t;this.routingTable=n,this.network=i,this.validators=s,this.queryManager=o,this.peerStore=e.peerStore,this.peerId=e.peerId,this.log=e.logger.forComponent(`${a}:peer-routing`)}async findPeerLocal(e){let t,n=await this.routingTable.find(e);if(n!=null){this.log("findPeerLocal found %p in routing table",e);try{t=await this.peerStore.get(n)}catch(i){if(i.name!=="NotFoundError")throw i}}if(t==null)try{t=await this.peerStore.get(e)}catch(i){if(i.name!=="NotFoundError")throw i}if(t!=null)return this.log("findPeerLocal found %p in peer store",e),{id:t.id,multiaddrs:t.addresses.map(i=>i.multiaddr)}}async*_getValueSingle(e,t,n={}){let i={type:M.GET_VALUE,key:t};yield*this.network.sendRequest(e,i,n)}async*getPublicKeyFromNode(e,t={}){let n=Z3(e);for await(let i of this._getValueSingle(e,n,t))if(yield i,i.name==="PEER_RESPONSE"&&i.record!=null){let s=ni(i.record.value),o=H3(s);if(!o.equals(e))throw new ht("public key does not match id");if(o.publicKey==null)throw new ht("public key missing");yield rn({from:e,value:i.record.value},t)}throw new Ct(`Node not responding with its public key: ${e.toString()}`)}async*findPeer(e,t={}){if(this.log("findPeer %p",e),t.useCache!==!1){let i=await this.findPeerLocal(e);if(i!=null){this.log("found local"),yield Yn({from:this.peerId,peer:i},t);return}}let n=!1;if(t.useNetwork!==!1){let i=this,s=async function*({peer:o,signal:a}){let c={type:M.FIND_NODE,key:e.toMultihash().bytes};for await(let l of i.network.sendRequest(o,c,{...t,signal:a}))if(yield l,l.name==="PEER_RESPONSE"){let u=l.closer.find(f=>f.id.equals(e));u!=null&&(yield Yn({from:l.from,peer:u},t))}};for await(let o of this.queryManager.run(e.toMultihash().bytes,s,t))o.name==="FINAL_PEER"&&(n=!0),yield o}n||(yield Ve({from:this.peerId,error:new Ge("Not found")},t))}async*getClosestPeers(e,t={}){this.log("getClosestPeers to %b",e);let n=await zt(e),i=this.routingTable.closestPeers(n),s=this,o=new Hr(n,this.routingTable.kBucketSize);await Promise.all(i.map(async c=>{await o.add({id:c,multiaddrs:[]})}));let a=async function*({peer:c,signal:l}){s.log("closerPeersSingle %s from %p",C(e,"base32"),c);let u={type:M.FIND_NODE,key:e};yield*s.network.sendRequest(c,u,{...t,signal:l})};for await(let c of this.queryManager.run(e,a,t))c.name==="PEER_RESPONSE"&&await Promise.all(c.closer.map(async l=>{await o.add(l)})),yield c;this.log("found %d peers close to %b",o.length,e);for(let c of o.peers)yield Yn({from:this.peerId,peer:c},t)}async*getValueOrPeers(e,t,n={}){for await(let i of this._getValueSingle(e,t,n)){if(i.name==="PEER_RESPONSE"&&i.record!=null)try{await this._verifyRecordOnline(i.record)}catch{let o="invalid record received, discarded";this.log(o),yield Ve({from:i.from,error:new Ct(o)},n);continue}yield i}}async _verifyRecordOnline(e){if(e.timeReceived==null)throw new Zn("invalid record received");await _r(this.validators,new le(e.key,e.value,e.timeReceived))}async getCloserPeersOffline(e,t){let n=await zt(e),i=this.routingTable.closestPeers(n),s=[];for(let o of i)if(!o.equals(t))try{let a=await this.peerStore.get(o);s.push({id:o,multiaddrs:a.addresses.map(({multiaddr:c})=>c)})}catch(a){if(a.name!=="NotFoundError")throw a}return s.length>0?this.log("getCloserPeersOffline found %d peer(s) closer to %b than %p",s.length,e,t):this.log("getCloserPeersOffline could not find peer closer to %b than %p with %d peers in the routing table",e,t,this.routingTable.size),s}};var B4=Mn(w4(),1);var Xo=Mn(v4(),1);var qr=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},Jo=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}},E4=r=>globalThis.DOMException===void 0?new Jo(r):new DOMException(r),A4=r=>{let e=r.reason===void 0?E4("This operation was aborted."):r.reason;return e instanceof Error?e:E4(e)};function kn(r,e){let{milliseconds:t,fallback:n,message:i,customTimers:s={setTimeout,clearTimeout}}=e,o,c=new Promise((l,u)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){let{signal:h}=e;h.aborted&&u(A4(h)),h.addEventListener("abort",()=>{u(A4(h))})}if(t===Number.POSITIVE_INFINITY){r.then(l,u);return}let f=new qr;o=s.setTimeout.call(void 0,()=>{if(n){try{l(n())}catch(h){u(h)}return}typeof r.cancel=="function"&&r.cancel(),i===!1?l():i instanceof Error?u(i):(f.message=i??`Promise timed out after ${t} milliseconds`,u(f))},t),(async()=>{try{l(await r)}catch(h){u(h)}})()}).finally(()=>{c.clear()});return c.clear=()=>{s.clearTimeout.call(void 0,o),o=void 0},c}function e2(r,e,t){let n=0,i=r.length;for(;i>0;){let s=Math.trunc(i/2),o=n+s;t(r[o],e)<=0?(n=++o,i-=s+1):i=s}return n}var Tn=class{#e=[];enqueue(e,t){t={priority:0,...t};let n={priority:t.priority,run:e};if(this.size&&this.#e[this.size-1].priority>=t.priority){this.#e.push(n);return}let i=e2(this.#e,n,(s,o)=>o.priority-s.priority);this.#e.splice(i,0,n)}dequeue(){return this.#e.shift()?.run}filter(e){return this.#e.filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return this.#e.length}};var Rn=class extends Xo.default{#e;#r;#s=0;#a;#c;#p=0;#n;#l;#t;#g;#i=0;#u;#o;#m;timeout;constructor(e){if(super(),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:Tn,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${e.intervalCap?.toString()??""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${e.interval?.toString()??""}\` (${typeof e.interval})`);this.#e=e.carryoverConcurrencyCount,this.#r=e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,this.#a=e.intervalCap,this.#c=e.interval,this.#t=new e.queueClass,this.#g=e.queueClass,this.concurrency=e.concurrency,this.timeout=e.timeout,this.#m=e.throwOnTimeout===!0,this.#o=e.autoStart===!1}get#w(){return this.#r||this.#s<this.#a}get#x(){return this.#i<this.#u}#v(){this.#i--,this.#f(),this.emit("next")}#E(){this.#b(),this.#y(),this.#l=void 0}get#A(){let e=Date.now();if(this.#n===void 0){let t=this.#p-e;if(t<0)this.#s=this.#e?this.#i:0;else return this.#l===void 0&&(this.#l=setTimeout(()=>{this.#E()},t)),!0}return!1}#f(){if(this.#t.size===0)return this.#n&&clearInterval(this.#n),this.#n=void 0,this.emit("empty"),this.#i===0&&this.emit("idle"),!1;if(!this.#o){let e=!this.#A;if(this.#w&&this.#x){let t=this.#t.dequeue();return t?(this.emit("active"),t(),e&&this.#y(),!0):!1}}return!1}#y(){this.#r||this.#n!==void 0||(this.#n=setInterval(()=>{this.#b()},this.#c),this.#p=Date.now()+this.#c)}#b(){this.#s===0&&this.#i===0&&this.#n&&(clearInterval(this.#n),this.#n=void 0),this.#s=this.#e?this.#i:0,this.#h()}#h(){for(;this.#f(););}get concurrency(){return this.#u}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);this.#u=e,this.#h()}async#B(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(e.reason)},{once:!0})})}async add(e,t={}){return t={timeout:this.timeout,throwOnTimeout:this.#m,...t},new Promise((n,i)=>{this.#t.enqueue(async()=>{this.#i++,this.#s++;try{t.signal?.throwIfAborted();let s=e({signal:t.signal});t.timeout&&(s=kn(Promise.resolve(s),{milliseconds:t.timeout})),t.signal&&(s=Promise.race([s,this.#B(t.signal)]));let o=await s;n(o),this.emit("completed",o)}catch(s){if(s instanceof qr&&!t.throwOnTimeout){n();return}i(s),this.emit("error",s)}finally{this.#v()}},t),this.emit("add"),this.#f()})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return this.#o?(this.#o=!1,this.#h(),this):this}pause(){this.#o=!0}clear(){this.#t=new this.#g}async onEmpty(){this.#t.size!==0&&await this.#d("empty")}async onSizeLessThan(e){this.#t.size<e||await this.#d("next",()=>this.#t.size<e)}async onIdle(){this.#i===0&&this.#t.size===0||await this.#d("idle")}async#d(e,t){return new Promise(n=>{let i=()=>{t&&!t()||(this.off(e,i),n())};this.on(e,i)})}get size(){return this.#t.size}sizeBy(e){return this.#t.filter(e).length}get pending(){return this.#i}get isPaused(){return this.#o}};var ki=class{log;datastore;cache;cleanupInterval;provideValidity;syncQueue;started;cleaner;constructor(e,t={}){let{cacheSize:n,cleanupInterval:i,provideValidity:s}=t;this.log=e.logger.forComponent("libp2p:kad-dht:providers"),this.datastore=e.datastore,this.cleanupInterval=i??36e5,this.provideValidity=s??864e5,this.cache=(0,B4.default)(n??256),this.syncQueue=new Rn({concurrency:1}),this.started=!1}isStarted(){return this.started}async start(){this.started||(this.started=!0,this.cleaner=setInterval(()=>{this._cleanup().catch(e=>{this.log.error(e)})},this.cleanupInterval))}async stop(){this.started=!1,this.cleaner!=null&&(clearInterval(this.cleaner),this.cleaner=void 0)}async _cleanup(){await this.syncQueue.add(async()=>{let e=Date.now(),t=0,n=0,i=new Map,s=this.datastore.batch(),o=this.datastore.query({prefix:ns});for await(let a of o)try{let{cid:c,peerId:l}=S4(a.key),u=I4(a.value).getTime(),f=Date.now(),h=f-u,g=h>this.provideValidity;if(this.log("comparing: %d - %d = %d > %d %s",f,u,h,this.provideValidity,g?"(expired)":""),g){n++,s.delete(a.key);let y=i.get(c)??new Set;y.add(l),i.set(c,y)}t++}catch(c){this.log.error(c.message)}i.size>0?(this.log("deleting %d / %d entries",n,t),await s.commit()):this.log("nothing to delete");for(let[a,c]of i){let l=Nn(a),u=this.cache.get(l);if(u!=null){for(let f of c)u.delete(f);u.size===0?this.cache.remove(l):this.cache.set(l,u)}}this.log("Cleanup successful (%dms)",Date.now()-e)})}async _getProvidersMap(e){let t=Nn(e),n=this.cache.get(t);return n==null&&(n=await W8(this.datastore,e),this.cache.set(t,n)),n}async addProvider(e,t){await this.syncQueue.add(async()=>{this.log("%p provides %s",t,e);let n=await this._getProvidersMap(e);this.log("loaded %s provs",n.size);let i=new Date;n.set(t.toString(),i);let s=Nn(e);this.cache.set(s,n),await Z8(this.datastore,e,t,i)})}async getProviders(e){return this.syncQueue.add(async()=>(this.log("get providers for %s",e),[...(await this._getProvidersMap(e)).keys()].map(n=>F3(n))),{throwOnTimeout:!0})}};function Nn(r){let e=typeof r=="string"?r:C(r.multihash.bytes,"base32");return`${ns}/${e}`}async function Z8(r,e,t,n){let i=[Nn(e),"/",t.toString()].join(""),s=new Dr(i),o=He(n.getTime());await r.put(s,o)}function S4(r){let e=r.toString().split("/");if(e.length!==5)throw new Error(`incorrectly formatted provider entry key in datastore: ${r.toString()}`);return{cid:e[3],peerId:e[4]}}async function W8(r,e){let t=new Map,n=r.query({prefix:Nn(e)});for await(let i of n){let{peerId:s}=S4(i.key);t.set(s,I4(i.value))}return t}function I4(r){return new Date(Me(r))}var t2=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=t??"ABORT_ERR"}};async function Ti(r,e,t,n){let i=new t2(n?.errorMessage,n?.errorCode);return t?.aborted===!0?Promise.reject(i):new Promise((s,o)=>{function a(){t?.removeEventListener("abort",u),r.removeEventListener(e,c),n?.errorEvent!=null&&r.removeEventListener(n.errorEvent,l)}let c=f=>{try{if(n?.filter?.(f)===!1)return}catch(h){a(),o(h);return}a(),s(f)},l=f=>{a(),o(f.detail)},u=()=>{a(),o(i)};t?.addEventListener("abort",u),r.addEventListener(e,c),n?.errorEvent!=null&&r.addEventListener(n.errorEvent,l)})}var Ri=class{deferred;signal;constructor(e){this.signal=e,this.deferred=ie(),this.onAbort=this.onAbort.bind(this),this.signal?.addEventListener("abort",this.onAbort)}onAbort(){this.deferred.reject(this.signal?.reason??new ft)}cleanup(){this.signal?.removeEventListener("abort",this.onAbort)}};function Q8(){return`${parseInt(String(Math.random()*1e9),10).toString()}${Date.now()}`}var Ni=class{id;fn;options;recipients;status;timeline;controller;constructor(e,t){this.id=Q8(),this.status="queued",this.fn=e,this.options=t,this.recipients=[],this.timeline={created:Date.now()},this.controller=new AbortController,ye(1/0,this.controller.signal),this.onAbort=this.onAbort.bind(this)}abort(e){this.controller.abort(e)}onAbort(){this.recipients.reduce((t,n)=>t&&n.signal?.aborted===!0,!0)&&(this.controller.abort(new ft),this.cleanup())}async join(e={}){let t=new Ri(e.signal);return this.recipients.push(t),e.signal?.addEventListener("abort",this.onAbort),t.deferred.promise}async run(){this.status="running",this.timeline.started=Date.now();try{this.controller.signal.throwIfAborted();let e=await Vr(this.fn({...this.options??{},signal:this.controller.signal}),this.controller.signal);this.recipients.forEach(t=>{t.deferred.resolve(e)}),this.status="complete"}catch(e){this.recipients.forEach(t=>{t.deferred.reject(e)}),this.status="errored"}finally{this.timeline.finished=Date.now(),this.cleanup()}}cleanup(){this.recipients.forEach(e=>{e.cleanup(),e.signal?.removeEventListener("abort",this.onAbort)})}};var Kr=class extends Pe{concurrency;queue;pending;sort;constructor(e={}){super(),this.concurrency=e.concurrency??Number.POSITIVE_INFINITY,this.pending=0,e.metricName!=null&&e.metrics?.registerMetricGroup(e.metricName,{calculate:()=>({size:this.queue.length,running:this.pending,queued:this.queue.length-this.pending})}),this.sort=e.sort,this.queue=[]}tryToStartAnother(){if(this.size===0)return queueMicrotask(()=>{this.safeDispatchEvent("empty")}),this.running===0&&queueMicrotask(()=>{this.safeDispatchEvent("idle")}),!1;if(this.pending<this.concurrency){let e;for(let t of this.queue)if(t.status==="queued"){e=t;break}return e==null?!1:(this.safeDispatchEvent("active"),this.pending++,e.run().finally(()=>{for(let t=0;t<this.queue.length;t++)if(this.queue[t]===e){this.queue.splice(t,1);break}this.pending--,this.tryToStartAnother(),this.safeDispatchEvent("next")}),!0)}return!1}enqueue(e){this.queue.push(e),this.sort!=null&&this.queue.sort(this.sort)}async add(e,t){t?.signal?.throwIfAborted();let n=new Ni(e,t);return this.enqueue(n),this.safeDispatchEvent("add"),this.tryToStartAnother(),n.join(t).then(i=>(this.safeDispatchEvent("completed",{detail:i}),this.safeDispatchEvent("success",{detail:{job:n,result:i}}),i)).catch(i=>{if(n.status==="queued"){for(let s=0;s<this.queue.length;s++)if(this.queue[s]===n){this.queue.splice(s,1);break}}throw this.safeDispatchEvent("error",{detail:i}),this.safeDispatchEvent("failure",{detail:{job:n,error:i}}),i})}clear(){this.queue.splice(0,this.queue.length)}abort(){this.queue.forEach(e=>{e.abort(new ft)}),this.clear()}async onEmpty(e){this.size!==0&&await Ti(this,"empty",e?.signal)}async onSizeLessThan(e,t){this.size<e||await Ti(this,"next",t?.signal,{filter:()=>this.size<e})}async onIdle(e){this.pending===0&&this.size===0||await Ti(this,"idle",e?.signal)}get size(){return this.queue.length}get queued(){return this.queue.length-this.pending}get running(){return this.pending}async*toGenerator(e){e?.signal?.throwIfAborted();let t=yr({objectMode:!0}),n=c=>{c!=null?this.abort():this.clear(),t.end(c)},i=c=>{c.detail!=null&&t.push(c.detail)},s=c=>{n(c.detail)},o=()=>{n()},a=()=>{n(new ft("Queue aborted"))};this.addEventListener("completed",i),this.addEventListener("error",s),this.addEventListener("idle",o),e?.signal?.addEventListener("abort",a);try{yield*t}finally{this.removeEventListener("completed",i),this.removeEventListener("error",s),this.removeEventListener("idle",o),e?.signal?.removeEventListener("abort",a),n()}}};async function*k4(r){let{key:e,startingPeer:t,ourPeerId:n,signal:i,query:s,alpha:o,pathIndex:a,numPaths:c,queryFuncTimeout:l,log:u,peersSeen:f,connectionManager:h}=r,g=new Kr({concurrency:o,sort:(d,w)=>Fr(d.options.distance,w.options.distance)}),y=await zt(e);function p(d,w){if(d==null)return;f.add(d);let v=et(w,y);g.add(async()=>{let m=[i];l!=null&&m.push(AbortSignal.timeout(l));let A=jt(m);ye(1/0,A);try{for await(let R of s({key:e,peer:d,signal:A,pathIndex:a,numPaths:c})){if(A.aborted)return;if(R.name==="PEER_RESPONSE")for(let T of R.closer){if(f.has(T.id)){u.trace("already seen %p in query",T.id);continue}if(n.equals(T.id)){u("not querying ourselves");continue}if(!await h.isDialable(T.multiaddrs)){u("not querying undialable peer");continue}let I=await ze(T.id),k=et(I,y);if(Fr(k,v)!==-1){u.trace("skipping %p as they are not closer to %b than %p",T.id,e,d);continue}u("querying closer peer %p",T.id),p(T.id,I)}g.safeDispatchEvent("completed",{detail:R})}}catch(R){if(!i.aborted)return Ve({from:d,error:R},r)}finally{A.clear()}},{distance:v}).catch(m=>{u.error(m)})}p(t,await ze(t));try{for await(let d of g.toGenerator({signal:i}))d!=null&&(yield d)}catch(d){throw i.aborted?new jn("Query aborted"):d}}var Li=class{disjointPaths;alpha;shutDownController;running;queries;logger;peerId;connectionManager;routingTable;initialQuerySelfHasRun;logPrefix;metrics;constructor(e,t){let{disjointPaths:n=20,alpha:i=3,logPrefix:s}=t;this.logPrefix=s,this.disjointPaths=n??20,this.running=!1,this.alpha=i??3,this.queries=0,this.initialQuerySelfHasRun=t.initialQuerySelfHasRun,this.routingTable=t.routingTable,this.logger=e.logger,this.peerId=e.peerId,this.connectionManager=e.connectionManager,e.metrics!=null&&(this.metrics={runningQueries:e.metrics.registerMetric(`${s.replaceAll(":","_")}_running_queries`),queryTime:e.metrics.registerMetric(`${s.replaceAll(":","_")}_query_time_seconds`)}),this.shutDownController=new AbortController,ye(1/0,this.shutDownController.signal)}isStarted(){return this.running}async start(){this.running=!0,this.shutDownController=new AbortController,ye(1/0,this.shutDownController.signal)}async stop(){this.running=!1,this.shutDownController.abort()}async*run(e,t,n={}){if(!this.running)throw new Error("QueryManager not started");let i=this.metrics?.queryTime.timer();if(n.signal==null){let u=AbortSignal.timeout(18e4);ye(1/0,u),n={...n,signal:u}}let s=new AbortController,o=jt([this.shutDownController.signal,s.signal,n.signal]);ye(1/0,o,s.signal);let a=this.logger.forComponent(`${this.logPrefix}:query:`+C(e,"base58btc")),c=Date.now(),l=!1;try{n.isSelfQuery!==!0&&this.initialQuerySelfHasRun!=null&&(a("waiting for initial query-self query before continuing"),await Vr(this.initialQuerySelfHasRun.promise,o),this.initialQuerySelfHasRun=void 0),a("query:start"),this.queries++,this.metrics?.runningQueries.update(this.queries);let u=await zt(e),f=this.routingTable.closestPeers(u),h=f.slice(0,Math.min(this.disjointPaths,f.length));if(f.length===0){a.error("Running query with no peers");return}let g=new lt,y=h.map((p,d)=>k4({key:e,startingPeer:p,ourPeerId:this.peerId,signal:o,query:t,pathIndex:d,numPaths:h.length,alpha:this.alpha,queryFuncTimeout:n.queryFuncTimeout,log:a,peersSeen:g,onProgress:n.onProgress,connectionManager:this.connectionManager}));for await(let p of Gn(...y)){if(p.name==="QUERY_ERROR"&&a.error("query error",p.error),p.name==="PEER_RESPONSE")for(let d of[...p.closer,...p.providers])await this.connectionManager.isDialable(d.multiaddrs)&&await this.routingTable.add(d.id);yield p}l=!0}catch(u){if(!(!this.running&&u.name==="QueryAbortedError"))throw u}finally{l||(a("query exited early"),s.abort()),o.clear(),this.queries--,this.metrics?.runningQueries.update(this.queries),i?.(),a("query:done in %dms",Date.now()-c)}}};function Y8(r){return r[Symbol.asyncIterator]!=null}function X8(r){if(Y8(r))return(async()=>{let e=0;for await(let t of r)e++;return e})();{let e=0;for(let t of r)e++;return e}}var Pi=X8;function J8(r){return r[Symbol.asyncIterator]!=null}function e7(r,e){return J8(r)?async function*(){let t=0;if(!(e<1)){for await(let n of r)if(yield n,t++,t===e)return}}():function*(){let t=0;if(!(e<1)){for(let n of r)if(yield n,t++,t===e)return}}()}var R4=e7;var t7=r=>{let e=r.addEventListener||r.on||r.addListener,t=r.removeEventListener||r.off||r.removeListener;if(!e||!t)throw new TypeError("Emitter is not compatible");return{addListener:e.bind(r),removeListener:t.bind(r)}};function r7(r,e,t){let n,i=new Promise((s,o)=>{if(t={rejectionEvents:["error"],multiArgs:!1,resolveImmediately:!1,...t},!(t.count>=0&&(t.count===Number.POSITIVE_INFINITY||Number.isInteger(t.count))))throw new TypeError("The `count` option should be at least 0 or more");t.signal?.throwIfAborted();let a=[e].flat(),c=[],{addListener:l,removeListener:u}=t7(r),f=(...g)=>{let y=t.multiArgs?g:g[0];t.filter&&!t.filter(y)||(c.push(y),t.count===c.length&&(n(),s(c)))},h=g=>{n(),o(g)};n=()=>{for(let g of a)u(g,f);for(let g of t.rejectionEvents)u(g,h)};for(let g of a)l(g,f);for(let g of t.rejectionEvents)l(g,h);t.signal&&t.signal.addEventListener("abort",()=>{h(t.signal.reason)},{once:!0}),t.resolveImmediately&&s(c)});if(i.cancel=n,typeof t.timeout=="number"){let s=kn(i,{milliseconds:t.timeout});return s.cancel=n,s}return i}function N4(r,e,t){typeof t=="function"&&(t={filter:t}),t={...t,count:1,resolveImmediately:!1};let n=r7(r,e,t),i=n.then(s=>s[0]);return i.cancel=n.cancel,i}var Ci=class{log;peerId;peerRouting;routingTable;count;interval;initialInterval;queryTimeout;started;timeoutId;controller;initialQuerySelfHasRun;querySelfPromise;constructor(e,t){let{peerRouting:n,logPrefix:i,count:s,interval:o,queryTimeout:a,routingTable:c}=t;this.peerId=e.peerId,this.log=e.logger.forComponent(`${i}:query-self`),this.started=!1,this.peerRouting=n,this.routingTable=c,this.count=s??20,this.interval=o??3e5,this.initialInterval=t.initialInterval??1e3,this.queryTimeout=a??5e3,this.initialQuerySelfHasRun=t.initialQuerySelfHasRun}isStarted(){return this.started}start(){this.started||(this.started=!0,clearTimeout(this.timeoutId),this.timeoutId=setTimeout(()=>{this.querySelf().catch(e=>{this.log.error("error running self-query",e)})},this.initialInterval))}stop(){this.started=!1,this.timeoutId!=null&&clearTimeout(this.timeoutId),this.controller!=null&&this.controller.abort()}async querySelf(){if(!this.started){this.log("skip self-query because we are not started");return}if(this.querySelfPromise!=null)return this.log("joining existing self query"),this.querySelfPromise.promise;if(this.querySelfPromise=ie(),this.started){this.controller=new AbortController;let e=AbortSignal.timeout(this.queryTimeout),t=jt([this.controller.signal,e]);ye(1/0,t,this.controller.signal,e);try{this.routingTable.size===0&&(this.log("routing table was empty, waiting for some peers before running query"),await N4(this.routingTable,"peer:add",{signal:t})),this.log("run self-query, look for %d peers timing out after %dms",this.count,this.queryTimeout);let n=Date.now(),i=await Pt(this.peerRouting.getClosestPeers(this.peerId.toMultihash().bytes,{signal:t,isSelfQuery:!0}),s=>R4(s,this.count),async s=>Pi(s));this.log("self-query found %d peers in %dms",i,Date.now()-n)}catch(n){this.log.error("self-query error",n)}finally{t.clear(),this.initialQuerySelfHasRun!=null&&(this.initialQuerySelfHasRun.resolve(),this.initialQuerySelfHasRun=void 0)}}this.querySelfPromise.resolve(),this.querySelfPromise=void 0,this.started&&(this.timeoutId=setTimeout(()=>{this.querySelf().catch(e=>{this.log.error("error running self-query",e)})},this.interval))}};var _i=class extends Kr{has(e){return this.find(e)!=null}find(e){return this.queue.find(t=>e.equals(t.options.peerId))}};function n7(r,e){if(r===e)return!0;if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;++t)if(r[t]!==e[t])return!1;return!0}function L4(r,e){if(!(e instanceof Uint8Array))throw new TypeError(r+" is not a Uint8Array");if(e.byteLength!==32)throw new TypeError(r+" had incorrect length")}function Ln(r){return Array.isArray(r?.peers)}var Ui=class extends Pe{root;localPeer;prefixLength;splitThreshold;kBucketSize;numberOfNodesToPing;constructor(e){super(),this.localPeer=e.localPeer,this.prefixLength=e.prefixLength,this.kBucketSize=e.kBucketSize??Pn,this.splitThreshold=e.splitThreshold??this.kBucketSize,this.numberOfNodesToPing=e.numberOfNodesToPing??3,L4("options.localPeer.kadId",e.localPeer.kadId),this.root={prefix:"",depth:0,peers:[]}}add(e){L4("peer.kadId",e?.kadId);let t=this._determineBucket(e.kadId);if(!(this._indexOf(t,e.kadId)>-1)){if(t.peers.length===this.splitThreshold&&t.depth<this.prefixLength){this._split(t),this.add(e);return}if(t.peers.length<this.kBucketSize){t.peers.push(e),this.safeDispatchEvent("added",{detail:e});return}this.safeDispatchEvent("ping",{detail:{oldContacts:t.peers.slice(0,this.numberOfNodesToPing),newContact:e}})}}*closest(e,t=this.kBucketSize){let n=new Hr(e,t);for(let i of this.toIterable())n.addWitKadId({id:i.peerId,multiaddrs:[]},i.kadId);yield*gr(n.peers,i=>i.id)}count(){function e(t){if(Ln(t))return t.peers.length;let n=0;return t.left!=null&&(n+=e(t.left)),t.right!=null&&(n+=e(t.right)),n}return e(this.root)}get(e){let t=this._determineBucket(e),n=this._indexOf(t,e);return t.peers[n]}remove(e){let t=this._determineBucket(e),n=this._indexOf(t,e);if(n>-1){let i=t.peers.splice(n,1)[0];this.safeDispatchEvent("removed",{detail:i})}}*toIterable(){function*e(t){if(Ln(t)){yield*t.peers;return}yield*e(t.left),yield*e(t.right)}yield*e(this.root)}distance(e,t){return BigInt("0x"+C(et(e,t),"base16"))}_determineBucket(e){let n=C(e,"base2").substring(0,this.prefixLength);function i(s,o=0){return Ln(s)?s:n[o]==="0"?i(s.left,o+1):i(s.right,o+1)}return i(this.root)}_indexOf(e,t){return e.peers.findIndex(n=>n7(n.kadId,t))}_split(e){let t=e.depth+1,n={prefix:"0",depth:t,peers:[]},i={prefix:"1",depth:t,peers:[]};for(let s of e.peers)C(s.kadId,"base2")[t]==="0"?n.peers.push(s):i.peers.push(s);delete e.peers,e.left=n,e.right=i}};var i7="kad-close",s7=50,Pn=20,o7=32,a7=1e4,c7=10,Di=class extends Pe{kBucketSize;kb;pingQueue;log;components;prefixLength;splitThreshold;pingTimeout;pingConcurrency;running;protocol;tagName;tagValue;metrics;constructor(e,t){super(),this.components=e,this.log=e.logger.forComponent(`${t.logPrefix}:routing-table`),this.kBucketSize=t.kBucketSize??Pn,this.pingTimeout=t.pingTimeout??a7,this.pingConcurrency=t.pingConcurrency??c7,this.running=!1,this.protocol=t.protocol,this.tagName=t.tagName??i7,this.tagValue=t.tagValue??s7,this.prefixLength=t.prefixLength??o7,this.splitThreshold=t.splitThreshold??Pn,this.pingQueue=new _i({concurrency:this.pingConcurrency,metricName:`${t.logPrefix.replaceAll(":","_")}_ping_queue`,metrics:this.components.metrics}),this.pingQueue.addEventListener("error",n=>{this.log.error("error pinging peer",n.detail)}),this.components.metrics!=null&&(this.metrics={routingTableSize:this.components.metrics.registerMetric(`${t.logPrefix.replaceAll(":","_")}_routing_table_size`),routingTableKadBucketTotal:this.components.metrics.registerMetric(`${t.logPrefix.replaceAll(":","_")}_routing_table_kad_bucket_total`),routingTableKadBucketAverageOccupancy:this.components.metrics.registerMetric(`${t.logPrefix.replaceAll(":","_")}_routing_table_kad_bucket_average_occupancy`),routingTableKadBucketMaxDepth:this.components.metrics.registerMetric(`${t.logPrefix.replaceAll(":","_")}_routing_table_kad_bucket_max_depth`)})}isStarted(){return this.running}async start(){this.running=!0;let e=new Ui({localPeer:{kadId:await ze(this.components.peerId),peerId:this.components.peerId},kBucketSize:this.kBucketSize,prefixLength:this.prefixLength,splitThreshold:this.splitThreshold,numberOfNodesToPing:1});this.kb=e,e.addEventListener("ping",n=>{this._onPing(n).catch(i=>{this.log.error("could not process k-bucket ping event",i)})});let t=0;for(let n of await this.components.peerStore.all())if(n.protocols.includes(this.protocol)){let i=await ze(n.id);this.kb.add({kadId:i,peerId:n.id}),t++}this.log("added %d peer store peers to the routing table",t),this._tagPeers(e)}async stop(){this.running=!1,this.pingQueue.clear(),this.kb=void 0}_tagPeers(e){let t=new lt,n=Y3(()=>{let i=new lt(e.closest(e.localPeer.kadId,Pn)),s=i.difference(t),o=t.difference(i);Promise.resolve().then(async()=>{for(let a of s)await this.components.peerStore.merge(a,{tags:{[this.tagName]:{value:this.tagValue}}});for(let a of o)await this.components.peerStore.merge(a,{tags:{[this.tagName]:void 0}})}).catch(a=>{this.log.error("Could not update peer tags",a)}),t=i});e.addEventListener("added",i=>{n(),this.safeDispatchEvent("peer:add",{detail:i.detail.peerId})}),e.addEventListener("removed",i=>{n(),this.safeDispatchEvent("peer:remove",{detail:i.detail.peerId})})}async _onPing(e){if(!this.running)return;let{oldContacts:t,newContact:n}=e.detail,s=(await Promise.all(t.map(async o=>{let a=this.pingQueue.find(o.peerId);return a!=null?a.join():this.pingQueue.add(async()=>{let c;try{let l={signal:AbortSignal.timeout(this.pingTimeout)};this.log("pinging old contact %p",o.peerId),c=await(await this.components.connectionManager.openConnection(o.peerId,l)).newStream(this.protocol,l);let f=Sn(c);await f.write({type:M.PING},Ke,l);let h=await f.read(Ke,l);if(await f.unwrap().close(),h.type!==M.PING)throw new ve(`Incorrect message type received, expected PING got ${h.type}`);return!0}catch(l){return this.running&&this.kb!=null&&(this.log.error("could not ping peer %p",o.peerId,l),this.log("evicting old contact after ping failed %p",o.peerId),this.kb.remove(o.kadId)),c?.abort(l),!1}finally{this.metrics?.routingTableSize.update(this.size)}},{peerId:o.peerId})}))).filter(o=>o).length;this.running&&s<t.length&&this.kb!=null&&(this.log("adding new contact %p",n.peerId),this.kb.add(n))}get size(){return this.kb==null?0:this.kb.count()}async find(e){let t=await ze(e);return this.kb?.get(t)?.peerId}closestPeer(e){let t=this.closestPeers(e,1);if(t.length>0)return t[0]}closestPeers(e,t=this.kBucketSize){return this.kb==null?[]:[...this.kb.closest(e,t)]}async add(e){if(this.kb==null)throw new Error("RoutingTable is not started");let t=await ze(e);this.kb.add({kadId:t,peerId:e}),this.log.trace("added %p with kad id %b",e,t),this.updateMetrics()}async remove(e){if(this.kb==null)throw new Error("RoutingTable is not started");let t=await ze(e);this.kb.remove(t),this.updateMetrics()}updateMetrics(){if(this.metrics==null||this.kb==null)return;let e=0,t=0,n=0;function i(s){if(Ln(s)){s.depth>n&&(n=s.depth),t++,e+=s.peers.length;return}i(s.left),i(s.right)}i(this.kb.root),this.metrics.routingTableSize.update(e),this.metrics.routingTableKadBucketTotal.update(t),this.metrics.routingTableKadBucketAverageOccupancy.update(Math.round(e/t)),this.metrics.routingTableKadBucketMaxDepth.update(n)}};var P4=[77591,22417,43971,28421,740,29829,71467,228973,196661,78537,27689,36431,44415,14362,19456,106025,96308,2882,49509,21149,87173,131409,75844,23676,121838,30291,17492,2953,7564,110620,129477,127283,53113,72417,165166,109690,21200,102125,24049,71504,90342,25307,72039,26812,26715,32264,133800,71161,88956,171987,51779,24425,16671,30251,186294,247761,14202,2121,8465,35024,4876,85917,169730,3638,256836,96184,943,18678,6583,52907,35807,112254,214097,18796,11595,9243,23554,887,268203,382004,24590,111335,11625,16619,29039,102425,69006,97976,92362,32552,63717,41433,128974,137630,59943,10019,13986,35430,33665,108037,43799,43280,38195,29078,58629,18265,14425,46832,235538,40830,77881,110717,58937,3463,325358,51300,47623,117252,19007,10170,20540,91237,294813,4951,79841,56232,36270,128547,69209,66275,100156,32063,73531,34439,80937,28892,44466,88595,216307,32583,49620,16605,82127,45807,21630,78726,20235,40163,111007,96926,5567,72083,21665,58844,39419,179767,48328,42662,51550,5251,37811,49608,81056,50854,55513,20922,18891,197409,164656,32593,71449,220474,58919,85682,67854,13758,35066,3565,61905,214793,119572,141419,21504,10302,27354,67003,46131,32668,15165,64871,34450,17821,2757,11452,34189,5160,12257,85523,560,53385,65887,119549,135620,312353,115979,122356,10867,193231,124537,54783,90675,120791,4715,142253,50943,17271,43358,25331,4917,120566,34580,12878,33786,160528,32523,4869,301307,104817,81491,23276,8832,97911,31265,52065,7998,49622,9715,43998,34091,84587,20664,69041,29419,53205,10838,58288,116145,6185,5154,141795,35924,21307,144738,43730,12085,8279,10002,119,133779,199668,72938,31768,39176,67875,38453,9700,44144,4121,116048,41733,12868,82669,92308,128,34262,11332,7712,90764,36141,13553,71312,77470,117314,96549,49135,23602,54468,28605,6327,62308,17171,67531,21319,14105,894,107722,46157,8503,51069,100472,45138,15246,14577,35609,191464,1757,13364,161349,32067,91705,81144,52339,5408,91066,21983,14157,100545,4372,26630,129112,1423,29676,213626,4397,88436,99190,6877,49958,26122,114348,60661,29818,293118,50042,179738,16400,163423,89627,31040,43973,36638,45952,5153,1894,109322,1898,134021,12402,112077,68309,190269,69866,31938,107383,11522,105232,11248,14868,39852,71707,186525,16530,38162,106212,11700,5130,16608,26998,59586,108399,230033,43683,48135,82179,2073,5015,196684,189293,16378,23452,8301,35640,11632,214551,29240,57644,33137,91949,55157,52384,117313,5090,17717,89668,49363,82238,241035,66216,29066,184088,97206,62820,26595,4241,135635,173672,8202,459,71355,146294,29587,3008,135385,141203,14803,6634,45094,69362,50925,546,51884,62011,83296,234584,44515,56050,89476,87751,19373,12691,149923,19794,13833,35846,87557,58339,2884,19145,25647,12224,11024,77338,64608,122297,53025,7205,36189,36294,170779,21750,7739,173883,75192,35664,224240,113121,30181,26267,27036,117827,92015,106516,55628,203549,67949,60462,60844,35911,20457,1820,920,19773,8738,73173,181993,38521,98254,76257,46008,92796,5384,26868,151566,22124,2411,15919,186872,180021,28099,152961,78811,80237,62352,102653,74259,184890,16792,123702,224945,29940,19512,75283,14059,112691,92811,233329,20411,138569,53341,109802,50600,134528,66747,5529,166531,31578,64732,67189,1596,126357,967,167999,206598,109752,119431,207825,78791,91938,10301,27311,24233,252343,28831,32812,66002,112267,90895,8786,8095,16824,22866,21813,60507,174833,19549,130985,117051,52110,6938,81923,123864,38061,919,18680,53534,46739,112893,161529,85429,26761,11900,81121,91968,15390,217947,56524,1713,6654,37089,85630,138866,61850,16491,75577,16884,98296,73523,6140,44645,6062,36366,29844,57946,37932,42472,5266,20834,19309,33753,127182,134259,35810,41805,45878,312001,14881,47757,49251,120050,44252,3708,25856,107864,120347,1228,36550,41682,34496,47025,8393,173365,246526,12894,161607,35670,90785,126572,2095,124731,157033,58694,554,12786,9642,4817,16136,47864,174698,66992,4639,69284,10625,40710,27763,51738,30404,264105,137904,109882,52487,42824,57514,2740,10479,146799,107390,16586,88038,174951,9410,16185,44158,5568,40658,46108,12763,97385,26175,108859,664,230732,67470,46663,14395,50750,141320,93140,15361,47997,55784,6791,307840,118569,107326,18056,58281,260415,54691,8790,73332,45633,7511,45674,143373,14031,11799,94491,35646,96544,14560,26049,32983,25791,83814,42094,231370,63955,139212,2359,169908,3108,183486,105867,28197,32941,124968,26402,88267,149768,23053,3078,19091,52924,25383,19209,111548,97361,3959,24880,235061,9099,24921,161254,151405,20508,7159,34381,20133,11434,74036,19974,34769,36585,1076,22454,17354,38727,235160,111547,96454,117448,156940,91330,37299,7310,26915,117060,51369,22620,61861,322264,106850,111694,15091,2624,40345,300446,177064,1707,27389,54792,327783,132669,183543,59003,17744,20603,151134,106923,53084,71803,279424,319816,11579,21946,16728,38274,72711,5085,83391,88646,40159,25027,34680,10752,12988,54126,30365,18338,100445,230674,44874,84974,143877,123253,139372,28082,91477,144002,13096,219729,46016,50029,42377,14601,6660,58244,58978,23918,88206,113611,64452,17541,41032,10942,12021,49189,10978,40175,37156,10947,71709,106894,112538,57007,137486,150608,152719,40615,7746,279716,13101,19524,28708,40578,72320,1096,182051,94527,51275,22833,45164,81917,77519,48508,5421,140302,37845,149830,5587,27579,5357,428725,248187,6326,206760,39814,32585,89923,44341,288753,284443,96368,31201,94189,119504,20359,52073,103216,179,27934,32801,96035,34111,34309,101326,18198,20704,210266,37643,27880,141873,106e3,19414,56614,167714,66483,107885,86602,4379,20796,75467,4987,5017,118857,26003,34308,114428,29198,6686,29697,73632,3739,69795,16798,41504,7207,30722,21436,36735,28067,28545,3239,11221,36031,41889,100010,19247,317673,29495,174554,6424,129725,53845,94986,7955,59676,2604,191497,19735,102214,62954,23844,11872,179525,261436,34492,428,78404,142035,16747,17246,27578,37021,33672,57944,26056,135760,2369,61674,122066,31327,19374,157065,40553,130982,69619,71290,38855,72100,92903,95940,51422,165999,65713,57873,50726,7288,20272,2081,42326,22624,81120,57914,79352,19447,1684,72302,11774,302559,161481,96396,13692,414988,3721,79066,56627,46883,21150,11747,12184,5856,113458,176117,84416,52079,27933,3354,59765,141359,2212,216309,2555,23458,196722,142463,45701,44548,28798,19418,215,29916,9396,10574,114226,84475,13520,18694,34056,4524,90302,62930,13539,19407,77209,7728,38088,9535,2263,23875,183945,17750,26274,67172,10585,28042,22199,7478,51331,66030,26774,192929,31434,25850,50197,52926,178158,4679,181256,70184,229600,9959,105594,72158,73974,2726,35085,78087,23284,35568,51713,155676,5401,27254,11966,17569,223253,71993,103357,111477,55722,30504,26034,46774,35392,36285,214814,41143,163465,1051,16094,81044,6636,76489,179102,20712,39178,35683,125177,54219,30617,52994,25324,50123,2543,87529,58995,10688,125199,12388,60158,125481,131646,7642,133350,65874,3438,97277,101450,10075,56344,116821,50778,60547,98016,106135,13859,14255,16300,77373,173521,8285,45932,37426,4054,114295,55947,7703,39114,52,51119,128135,19714,60715,9554,50492,88180,2823,118271,52993,122625,97919,23859,37895,25040,33614,32102,20431,3577,9275,15686,43031,157741,110358,1884,40291,125391,13736,5008,64881,87336,77381,70711,43032,49155,118587,70494,4318,10168,30126,12580,10524,280104,104001,145413,2862,84140,6603,106005,13566,12780,11251,42830,571,179910,82443,13146,469,42714,32591,265217,424024,92553,54721,134100,6007,15242,114681,59030,16718,85465,200214,85982,55174,165013,23493,56964,82529,109150,32706,27568,82442,5350,14976,13165,44890,60021,21343,33978,17264,4655,22328,27819,75730,16567,55483,14510,17926,45827,150609,3704,7385,272531,161543,76904,122163,52405,2039,19165,41623,14423,228354,3369,176360,85491,7122,35789,303724,4465,13628,2233,55311,118771,20713,10006,221519,45115,71021,35650,29775,7337,10864,20665,21142,1746,15080,1624,32449,10905,105743,229797,7701,3940,22997,178467,57208,389057,39683,59403,63344,63125,54847,69691,18336,56448,3362,37202,18282,29648,138224,35867,10495,5911,28814,26653,31514,176702,26550,45621,11734,4525,40543,73944,121080,27858,155561,14887,44670,30742,8796,107455,113472,56369,75581,183777,240095,133699,153299,8768,160464,26058,49078,103971,21875,71486,44888,17156,9678,89541,123019,102337,3972,83930,21245,87852,109660,287918,183019,686,10100,39177,283941,11274,24736,26793,26214,25995,77011,141580,4070,23742,46285,46632,30700,26669,19056,35951,115575,174034,56097,35463,87425,24575,44245,38701,82317,85922,281616,100333,147697,61503,7730,84330,8530,59917,61597,17173,9092,32658,90288,193136,39023,20381,56654,31132,7779,1919,1375,117128,30819,11169,40938,23935,115201,101155,151034,4835,11231,74550,89388,59951,91704,107312,167882,115062,12732,72738,88703,464019,158267,57995,60496,737,14371,123867,4174,243339,159946,7568,16025,134556,110916,38103,191,80226,88794,29688,27230,10454,76308,57647,77409,113483,66864,14745,19808,12023,46583,84805,16015,17102,2231,20611,3547,95740,250131,34559,108894,8498,15853,159169,148920,20942,2813,93160,45188,210613,45531,52587,149062,39782,28194,57849,60965,84954,89766,84453,100927,16501,27658,165311,103841,54192,207341,19558,20084,319622,5672,205467,98462,61849,36279,13609,147177,24726,165015,209489,59591,31157,6551,117580,75060,141146,277310,21072,22023,106474,63041,137443,122965,68371,5383,42146,98961,113467,30863,23794,4843,99630,30392,82679,13699,241612,33601,93146,24319,18643,32155,95669,40440,15333,34089,67799,142144,58245,38633,114531,117400,77861,188726,5507,2568,8853,10987,107222,2663,2421,11530,13345,30075,41785,118661,104786,17459,12490,16281,71936,193555,17431,5944,71758,26485,77317,20803,367167,158,7362,93430,11735,172445,46002,11532,54482,930,62911,2235,23004,179236,4764,101859,208113,22477,55163,95579,14098,67320,162556,90709,156949,3826,57492,4025,34092,87442,104565,6718,186015,28214,14209,10039,107186,233912,58877,81637,55265,39828,6194,145813,50831,105849,4974,88319,122296,10272,197216,95714,51540,72418,23324,91555,8743,140452,250249,51666,34124,7229,38592,129641,78169,174242,22464,149964,51450,14034,10026,95376,26190,120062,14401,8700,265,31386,143573,7203,229889,61567,4227,140981,2466,72052,10787,10062,30958,6099,38471,30103,23202,208101,70847,467,58934,32271,32984,36637,24107,30771,17109,73353,13650,2098,157040,67366,66904,106018,265380,107238,18535,44025,32681,144983,62505,91295,56120,3082,77508,10322,63023,36700,81885,224127,16721,45023,239261,111272,13852,7866,149243,204199,32309,22084,42029,38316,126644,104973,14406,43454,67322,61310,15789,40285,24026,181047,6301,70927,23319,115823,27248,66693,115875,278566,63007,146844,56841,59007,87368,180001,22370,42114,80605,12022,10374,308,25079,14689,12618,63368,7936,264973,212291,136713,95999,105801,18965,32075,48700,52230,35119,96912,32992,8586,16606,101333,101812,14969,39930,759,193090,27387,42914,12937,5058,62646,64528,38624,25743,37502,3716,4435,30352,178687,26461,132611,42002,138442,35833,59582,16345,8048,60319,49349,309,47800,49739,90482,26405,34470,63786,32479,85028,39866,47846,11649,23934,29466,2816,42864,31828,7410,74885,49632,47629,111801,90749,19536,18767,105764,59606,21223,10746,76298,22220,39408,7190,79654,64856,11602,82156,272765,17079,70089,245473,51813,184407,384678,1576,122249,5064,27481,6188,25790,74361,27541,318284,45430,31488,620,93579,45723,192118,22670,51913,4162,70244,35966,26397,16199,50899,209613,121702,287507,2993,36101,132229,67345,33062,76295,118628,78705,52316,34375,107083,107454,44863,127561,33964,3073,154010,190914,55967,39074,6272,31047,5550,41123,26154,98638,47110,19998,148091,50229,31329,59900,195442,19106,61347,73497,70015,682,45850,25776,38022,148951,6288,37411,232526,109277,27286,32342,9262,5220,16651,23175,46740,129438,78614,121925,66914,88710,127952,5563,21500,34521,10739,14863,191006,62956,17359,16749,67027,56284,69134,43301,35039,58883,54466,60823,404451,75743,59856,86979,7923,34273,83785,32142,7693,268986,197428,282681,17049,22346,22990,92245,107180,3357,37104,96724,49153,7683,31197,43267,82231,164276,23696,20848,188364,22309,24821,158707,1018,22514,70922,27792,45589,59709,10765,736,35218,63479,51987,24275,63588,55361,92929,81964,4658,20122,12330,44058,13065,311456,72224,8337,211229,38979,22590,138478,52757,32595,133600,8838,31549,94412,43391,90056,1585,94802,127271,6223,31889,137038,132910,2165,57616,230152,6080,10748,36737,74579,134062,50525,180532,119270,34556,76155,82394,52595,29258,31435,87820,67996,26943,183878,38007,2410,13526,180297,69856,3503,187396,167700,7838,16701,9199,56267,3661,37407,65994,23767,5708,62508,221700,67088,86978,46776,84434,32088,5612,9149,88244,21685,95151,46750,189612,2979,506311,2594,3628,40074,105039,78243,28523,6651,38058,71999,30992,12764,68261,108991,6165,26450,61961,13400,22426,7490,60890,109623,2070,12958,50355,67979,257096,7213,42578,52121,35716,65461,7516,124758,39268,302,64712,14977,1467,219452,2840,34229,11121,21602,19270,63574,8024,1532,17331,79839,78885,52029,180767,57957,6069,91265,61380,55767,8927,32881,287603,22149,35029,68876,6428,199567,46926,13412,104132,21434,366616,45060,110046,81924,128910,45886,52821,130416,29416,77342,21762,67329,121432,79924,11724,38625,81006,102033,28338,13326,3250,82056,82526,38212,21112,12382,111495,3263,7414,86274,93490,40844,30224,45212,24019,48411,71367,24941,76729,57776,3769,38114,202019,197745,31953,237533,33270,201580,255648,100798,44741,32241,98468,106931,10085,15090,170358,33154,66787,18819,69760,25061,234005,82660,6295,131975,16874,9076,4094,25005,17740,40908,19533,220019,44330,99792,50040,19619,13950,55228,24423,31253,95308,103177,184795,28590,82285,5059,3210,75525,49894,70007,56178,10580,36051,139681,21617,98736,3555,106306,164189,37352,63915,47824,24883,145530,61904,28444,11483,19837,145446,30420,112972,85939,11835,191233,2262,20705,58630,1753,148334,1197,144714,6887,11223,107667,60879,77914,4151,57417,81594,96681,169430,1784,20444,95138,254041,27038,596,7117,72808,13759,3353,126776,21074,55322,27081,36942,39547,139830,179275,4453,713,8722,71399,19204,25785,22794,23923,104114,11291,25458,102309,88396,75288,230440,206396,104551,58447,130857,37247,94734,31548,176529,226077,65159,20104,10096,66881,94191,237909,27109,37404,1520,27421,25220,113003,23423,24884,50585,6286,231877,150800,11789,3226,90004,60642,5053,202400,61442,132531,175329,57138,30116,103847,9973,75367,16452,32360,59119,21246,10191,164804,23305,61051,37348,154530,13214,5468,50403,66754,130976,50559,80515,14436,155492,84017,5472,43107,41240,2890,90431,70188,382,76234,48040,50211,281038,237007,32115,142178,1536,22761,96429,1811,31243,1679,49143,55209,17402,235054,61494,7462,77030,34925,87609,78002,9499,9027,73289,201078,101379,63544,27666,5469,10642,30029,49816,132979,95620,58086,351930,116300,2110,2043,30845,6154,11279,16727,4122,2277,27281,4971,3650,39060,61970,65951,39674,75686,38151,11370,130809,177895,32665,63725,122267,7857,39618,118483,44792,157755,178624,136994,24260,41308,22471,12404,21707,12486,30473,52781,50246,20247,39065,909,56825,103158,128603,31542,1089,41935,32744,12428,37963,84420,33134,72921,208449,42622,168151,127335,147107,46699,38216,12591,94342,85814,31423,24944,2605,87542,67473,192551,4496,56321,91819,17630,6300,256183,114569,202090,33209,35289,34897,24967,40520,43470,5344,10199,34810,14283,10381,10017,62923,49924,23233,64539,13051,35686,19698,11570,135555,120868,44924,87065,52318,52335,47586,140906,245885,109834,78668,9065,46990,25258,72022,61243,40838,4545,146387,10537,11557,17470,36930,68104,46711,24264,79401,81043,18225,120488,24746,84338,81652,28266,13776,21878,46973,1047,230465,73357,95777,24973,210160,62210,58404,110633,169651,6937,41870,9909,26822,191062,76553,27519,96256,239070,2478,205678,67955,58532,20601,50120,19148,78501,195724,110740,8249,109665,27446,30568,57631,31425,49752,32820,65504,50079,3663,102256,219898,23849,211315,14645,4359,91767,9528,12449,49366,7941,49763,107848,8930,27086,50686,9744,10447,81935,39513,46514,1670,29229,6172,22312,137280,97759,9806,14445,22976,56458,73391,34983,93760,174219,52573,33149,59747,2429,136277,75123,165263,91040,7446,57632,48633,97140,246081,84766,151684,79918,93268,120346,54059,54875,77858,32996,103590,45276,11968,19600,25849,17159,132907,42828,16817,4913,99462,103303,27395,5737,74184,20749,21160,14377,77062,131403,158735,10999,27799,77785,9320,34366,51593,61070,33746,47048,29268,36675,30262,53297,9832,82e3,20188,122292,39917,7331,18160,68301,185935,134830,15031,4935,10004,165845,185534,46923,30109,44134,122631,18874,22903,112790,26561,18549,348902,82871,140345,255565,135390,63556,103747,145055,179600,145662,296111,61661,211987,23952,52342,126343,48450,32919,44277,82185,9591,62139,205363,376969,394874,108461,18040,120885,14798,39863,16571,16794,58271,81025,55206,14640,118656,6361,44092,85970,6262,153863,108244,180200,72264,79947,38044,10050,5735,61221,80712,5471,115689,11391,11661,184257,20010,60116,30320,19327,134598,45455,27542,18004,125092,452272,1549,91523,46567,180063,156026,2608,11174,58848,37788,65907,80194,30490,5786,40775,119519,106241,11323,156297,8425,61495,2617,29675,2425,59886,112582,49142,59618,4863,50597,86710,50650,168632,27693,85641,83643,18993,25768,84284,28090,93592,36627,312804,43381,9887,9402,100931,97165,3311,173330,66805,28935,4963,184460,3201,78102,19126,21607,37496,24938,22615,16153,32862,134792,153318,61120,6067,2812,12826,12792,23825,37559,64662,202250,102694,155488,85881,149193,46233,65383,15521,106982,11358,176786,25752,39717,34208,24510,32464,77742,39371,72028,138229,60688,71386,102834,132477,2208,11548,63670,271279,28351,30338,38620,32491,99845,143885,152266,13252,2825,178663,108097,1775,78201,14897,113573,163346,62292,171129,22183,96598,38733,64971,166776,117445,9968,146393,44677,74867,20908,97328,12761,25656,26785,9148,112344,26115,99176,110121,22437,49547,6180,79320,5835,31392,43328,33377,75870,119860,69497,80273,7325,155219,43167,111173,28347,20222,3763,71752,55041,47252,14618,28088,15012,97805,194698,54636,2036,41349,6173,96604,61530,51859,43782,13361,24334,22668,24792,7070,23441,16789,3209,36211,208475,26242,32880,122181,182407,21444,31060,88459,29929,77907,12716,10934,97005,20599,31690,8403,58445,30303,22700,10336,86731,103115,337709,72556,46788,112566,47684,67089,53548,36874,56487,41387,125985,26893,40071,106683,73712,18787,40105,72992,67246,137276,50802,36790,70328,138827,22466,39263,183295,29858,50975,9322,57397,10654,24364,30383,55799,41600,23584,127295,296610,129078,143558,244131,86397,36049,1085,80677,3820,108139,5476,34767,24683,7758,13060,7239,131671,250593,59556,103392,29810,4188,252323,39404,116877,7651,43600,40338,13554,157253,39196,25978,144387,61211,234,50104,6129,10449,93777,9240,356378,274148,4439,72970,3724,147770,78680,62570,115877,40027,40547,36817,224392,64609,34795,165027,67440,2477,37206,23431,50754,164797,46018,94995,170982,27051,7957,22767,3674,27900,56419,18930,60701,41302,2692,84749,339721,61996,111094,80221,50129,1045,8153,62945,19202,8250,37208,37418,32560,79477,41106,88569,33963,36693,5892,30570,1581,66471,49647,11922,160717,29442,5643,114865,82962,95982,132098,22633,22838,94726,54556,28566,205039,162340,33216,16849,35847,221339,94851,26533,71469,1805,3804,12935,45483,71020,36310,65381,192960,34240,35165,59773,1248,46954,155332,96864,4246,388800,16129,57133,74592,44807,442014,38203,42574,80818,91592,26377,36424,65760,977,77387,22628,147610,28018,30561,98454,6969,119628,63648,18170,36854,26601,64018,22027,37279,51395,152934,21153,9430,58760,194742,5330,55115,34158,28917,174111,13171,122326,1526,43896,66094,25325,4234,148354,11450,275,18999,112191,44365,22723,68409,8733,57746,96565,75007,14196,108844,29475,88599,177563,100792,106156,86323,93726,14248,135341,194131,40126,47099,14779,8272,39597,95983,171398,65882,28052,10393,47213,40689,22120,72212,106829,34964,109146,753,648,21660,30047,17527,181025,5619,145357,4085,216883,9359,186951,24779,53931,24545,36197,223296,62628,168101,4243,107313,30321,26642,13049,51059,31027,107912,807,73550,26551,84369,122422,165872,49754,74213,234264,33151,52014,33100,87183,22365,52500,40013,23302,5652,72723,21404,26107,48434,587,94049,168493,96418,32871,70860,31709,25128,443,71597,166253,15670,70994,26341,133675,28280,75491,54756,47955,56028,26182,11952,113272,472197,64640,110753,17919,337,50642,22576,142,87371,53391,93210,126694,15285,19642,85667,14148,1506,42092,52962,33243,11970,20734,135843,57044,58880,13002,219134,22876,64754,232519,4257,43120,321573,24799,64526,124728,52579,81472,70831,276848,17403,74359,23021,182101,74597,23744,148267,12055,7976,5349,11772,67540,167347,65318,18720,127832,108238,22828,90233,9987,259080,118185,73209,79270,13775,90100,137742,90799,70569,15699,19961,9087,67475,57872,39731,8810,134897,131868,146849,19898,3334,2281,167061,91073,60356,467742,74712,188,53179,137679,92769,29241,9537,132595,80119,1041,88962,5976,40171,44911,102859,139059,104558,98987,47761,19272,71472,113864,175377,73338,10857,23402,23758,1591,139864,5644,4076,118760,16427,134198,18853,20291,100849,37423,22038,36677,19071,195521,57445,11069,31869,55718,66882,148490,44,41296,75242,49704,166810,9906,20943,122258,49112,105667,15969,10344,6408,187694,21399,72742,58970,14867,14376,81889,41856,23225,15042,56993,16074,131389,74276,72407,53875,383108,53597,37363,68993,44854,122548,430927,198279,38430,80409,12245,2981,628,2818,17760,37437,238229,7968,46892,2200,3730,34190,65983,37959,112291,87850,70827,6522,20750,73913,111621,41652,19587,2780,58668,25916,85259,18200,168962,95781,42445,102050,7776,57662,103313,47742,96358,41964,66174,100396,29069,204735,19679,27978,7479,40264,22534,61183,36081,107436,58223,14680,23002,101311,24716,124108,12908,5646,31750,40380,14215,232799,102772,14122,96775,61398,50917,12096,149880,67833,598749,124194,155871,49216,790,14677,65319,56917,7440,145744,95701,12206,49405,129269,76199,45732,9767,11058,9047,210885,11051,7392,26307,2130,8132,147526,20802,232698,115660,50060,59789,57344,107623,80343,112676,23291,9866,160971,34032,118291,15719,59730,164911,28975,2659,58046,78480,21854,66209,53863,109085,116045,29021,46481,107552,22130,18764,70254,31272,11300,52460,43933,84738,20721,53869,190840,79673,105300,7561,321817,66924,13940,33281,101046,183181,32176,71878,5678,62924,79535,56646,40303,19559,27703,93042,73368,42187,3670,37376,46440,7023,36816,109628,20680,5940,276440,275233,170848,112093,136996,14984,20226,111441,77693,112960,48577,39370,55707,50314,123404,26570,54281,61372,123391,4857,35928,246740,132507,106646,44241,7196,92258,9825,37688,51197,303141,5590,15476,132986,10955,85782,34486,26696,7991,28813,18858,39546,11703,11365,38185,5716,93555,11925,40121,60002,6985,10976,171384,3887,43394,13337,56346,6381,252336,39573,75042,53711,1028,31781,44295,95925,131713,7214,68125,43571,70954,213234,1628,8760,13391,65485,17320,56038,1710,25248,60803,57399,19839,3870,326,281556,50945,72400,21460,316244,75619,56246,98775,481,13513,55765,50427,7388,123519,32929,57908,27124,61316,101097,57467,30228,48792,10788,20402,37318,50526,155730,34456,158065,145305,17832,43733,64052,4506,35072,205355,177028,184004,187081,68616,35938,83703,10367,36892,93186,260137,51934,89970,4985,23445,26755,21558,7948,78741,23376,124405,85594,68596,57536,49351,12619,56593,132668,99924,109728,71844,71935,196018,65464,17617,14987,89701,143773,33997,8687,22701,33258,2914,4436,72108,85610,9671,49067,2327,82988,1361,1672,44033,35777,30269,24057,10605,82236,616,15793,13919,47249,112086,116698,9484,80207,90574,33304,68624,93127,56101,42210,160929,4827,38995,38095,4701,125119,5027,33680,9236,231236,14135,87837,23318,70261,78893,30151,81482,14332,1084,74256,27532,46644,79185,3148,62615,6981,55672,31668,36825,1849,14536,37446,14738,23779,43058,162749,72199,1168,21346,5592,85932,85302,9668,18351,57135,150360,2080,228015,77953,34670,119302,151751,31009,106725,84265,45214,59289,74178,113071,263206,111009,4021,44449,188119,192629,123592,392506,292847,114487,12831,205858,9852,20780,79648,75767,357014,97721,18166,21005,67950,33226,204009,16536,2987,11335,66717,144910,47950,17262,55060,15063,2934,51038,26775,178497,66008,3427,49433,128592,20036,157553,63861,3089,23015,51210,28696,35933,49942,71135,231518,99620,17248,21835,176536,20676,16944,38700,165831,233253,295625,36723,13023,52745,10907,19423,67972,125868,95473,82875,1183,108455,52685,33417,64095,21433,52438,33191,127809,44505,211823,7810,2752,95548,162031,7185,91196,47563,61721,33359,17897,23682,42806,178101,22874,49707,199897,75419,82456,8618,11171,79712,116847,18783,44190,46564,5346,59046,95032,7893,14916,3214,26800,24172,121453,34362,10250,17408,18888,4840,68696,22831,13162,36005,32512,14800,62357,41723,45046,27247,37486,5372,2564,34261,298500,66509,133920,89138,31305,117697,19097,108304,81386,84106,23802,46411,63304,946,51417,41777,41041,19501,115864,60743,294354,37955,94165,18116,1156,17937,20645,57114,90804,58042,48643,92288,9861,2557,88546,61333,101008,12853,5148,87856,4152,144503,73841,18718,9789,147565,10846,42085,12789,30223,8993,56352,67203,2448,28215,6052,23540,126319,75933,36689,80235,23231,23561,21383,38800,77548,102798,21234,31468,158608,46188,63960,191679,8051,67014,11185,170078,42186,28827,34777,41930,212079,12421,34750,24111,110344,73918,45171,70826,141949,40063,23979,24254,37309,26724,27179,24718,83648,54938,14591,17425,29525,102675,48975,48654,12316,8929,60640,41709,50168,63264,89812,50716,48632,38755,138583,160123,55579,71829,24230,233277,46322,39650,166388,34718,24108,98252,7031,106695,62498,18258,35062,217827,78731,34824,33354,19520,60852,2432,60224,8587,2836,62955,702,20227,42285,40560,95592,62486,11094,53035,143291,18842,46177,77994,1770,9657,107422,172915,32655,128716,25886,25164,156740,119928,165875,85817,11007,89110,33956,12652,65156,180266,8494,36889,19958,20955,96,1264,118288,135769,44754,86671,5632,19026,168220,289120,33569,93821,66144,70635,7687,5642,2714,55445,56636,71545,184182,93133,7332,37389,12643,52315,22729,11014,158742,17050,152889,50178,34601,41945,52136,9948,26914,63548,95721,115951,40759,8960,158258,38938,49232,48325,42234,81523,253019,66128,40978,20048,238048,38760,62928,122560,118532,43687,137472,163689,26680,9878,17448,51035,16211,60834,36749,29178,14241,59868,150086,2305,26477,42422,34342,165341,83279,33894,14257,29928,12743,13957,125571,89134,66712,10952,16507,147839,30146,7249,16565,45399,39874,114565,215780,31990,230881,171477,102,196546,44538,10880,84948,281705,86651,10617,31395,2342,453658,43569,60561,132901,21845,17727,58556,258242,22262,58728,4008,77997,11806,37431,30599,81375,109137,185787,114085,217292,97453,169085,30593,60212,11544,102056,65580,2384,91655,4855,95725,7295,157994,16228,20669,53276,141590,105246,17334,25440,76067,17967,39321,38911,11362,28559,63807,21627,26468,85816,40120,1025,15234,58319,69516,66512,124548,75845,78873,22137,46681,51242,85683,32909,76747,35555,43396,101465,1765,73094,1077,2962,39028,66777,57831,42048,15828,13962,36041,63657,52412,5242,58846,2141,5506,219012,134451,3936,182230,17558,17153,152237,22621,49377,170216,35257,68233,65374,6510,11126,212151,7184,2480,22517,3437,33073,30156,16557,3768,55067,86829,91e3,12350,148650,66017,79424,70885,49066,28250,21369,51213,34533,11510,3258,18176,18465,84413,6315,36411,163765,4346,356,107618,598,13727,285026,162695,8749,14583,7132,63521,184253,32378,25991,5604,30961,53675,4874,84693,5086,34811,26978,56564,7904,33519,51221,113942,69253,6664,125563,22055,220680,102008,742,51930,19494,176108,44424,35123,13025,75685,11759,74335,22250,181453,131147,16984,132115,154311,11991,76452,52609,85351,196,30969,9198,74919,2529,56838,71779,29187,116304,3504,62330,41190,86153,28393,254926,104228,105189,13264,84359,3574,12415,8534,57147,10175,188174,59504,60932,66318,16407,107921,17638,99103,49278,28403,39786,145865,8462,3558,43406,142271,29139,21989,36552,93955,72365,7176,13556,106185,37957,321774,17782,129017,51154,27938,24952,1935,39366,2791,33489,41582,56078,24558,9311,5449,218786,27808,190429,68013,36020,86003,29735,3404,87348,119357,115714,2324,86796,81973,40992,43376,93621,28784,16808,36367,2517,2909,191926,24978,55303,53308,205724,60068,3098,21375,64784,23949,26579,63121,12319,80145,39967,97861,6757,70143,67642,37082,34698,69140,122883,46151,62187,80934,429,19437,135071,137885,222647,13331,154065,327,61778,74257,40116,37493,14855,85079,237641,42342,102164,199965,71204,4662,29368,5042,113914,122214,8955,13149,102503,43173,5659,163787,69003,307084,63392,171080,21390,81918,86666,36622,24126,28887,5736,28054,207170,163428,79891,346467,95363,38980,111806,80828,9200,19288,294896,114468,87405,111715,141705,7015,72754,68463,48738,243147,33397,101210,37051,98801,82847,20397,4940,185559,18716,54718,83491,11725,40803,1128,12128,23060,5174,7745,67007,46701,1571,27807,180186,256996,18975,16837,7877,212758,250379,15440,87954,57755,24719,124057,83461,258,50864,8874,29038,71289,31627,15429,9005,4061,113851,107716,82819,13651,79656,117851,17539,111446,12938,39724,190787,4352,15402,21070,62708,8539,23777,73853,13552,38810,86117,16285,56400,1718,75342,142863,29033,378,110113,180321,32586,23606,26393,160984,207987,23783,8406,16904,24596,47274,11693,46539,60524,78595,48423,31718,20170,9009,146268,15183,191060,172765,1349,138436,37365,10970,40509,225817,20021,70394,152138,21541,66559,66544,89352,2725,17258,91345,7313,3815,115868,8660,40362,4071,103524,39388,118275,21950,6549,38226,32754,209574,29201,43495,18028,20296,40597,18370,47520,202450,24134,2219,8195,69545,38041,136934,46374,19041,159811,84865,58620,846,98749,13569,30714,97246,32186,4479,27355,92973,35214,151491,75963,37631,1561,27200,238083,23182,60756,12291,25766,39355,102333,87362,65741,59906,19538,201575,48772,102938,24438,292580,39964,66366,9004,61379,50548,37622,38732,28379,68180,76622,17488,69849,5963,7219,48143,43413,55358,540,58691,29506,19245,52193,48621,5518,13048,118625,44755,191081,42061,89197,2259,60665,66994,71210,51232,3585,142096,55024,7892,8345,58653,463307,65658,64319,137941,136323,53499,12746,43492,6978,95163,29925,60175,5128,7352,41463,184756,121146,20473,18426,4598,5309,54580,14277,121151,10691,56711,43880,63409,76682,11830,172218,264898,32632,66536,81062,31649,25788,92774,60222,11100,63159,9432,224657,25240,53613,152,138620,163829,2397,85345,12501,37507,64932,38575,43522,65789,80198,78796,35226,3851,108891,73311,3060,28391,93671,39663,46142,30982,66041,37281,68157,26553,71872,81142,211527,39747,118119,22695,2859,11066,20232,168911,7933,197005,17066,111071,44434,133994,120798,12766,227798,45756,132852,29917,36076,55352,65281,129800,41958,18944,84678,18580,168093,132621,39997,54092,27740,32354,3770,114118,103242,43918,15899,18574,145944,3190,123469,219903,24169,100571,62403,16776,92779,14535,17168,16475,14304,37231,1712,28218,242754,61688,28980,1318,51359,222657,99200,67989,31772,23932,35351,201251,49041,27306,19128,40135,3986,77333,19649,120683,151927,21081,7076,78375,77501,101599,8011,89585,96715,58179,5378,102138,106793,26051,217276,4197,16297,27014,46721,13322,22806,5278,29629,70632,9647,71519,58818,40603,128530,8903,36770,56900,31483,26935,43845,34265,34920,87658,6114,84767,64250,47318,50720,19264,162514,33357,13117,6705,46696,75032,71054,87004,42035,69138,11903,99854,102328,19611,34525,69312,6431,49842,101600,133178,108751,41829,89939,225664,48916,99556,9195,130387,5960,36857,116724,53518,94002,39077,53996,6945,22261,64291,8314,152785,57588,16522,9091,5048,87671,35441,39509,1945,12423,158923,178413,37549,14095,1475,73188,62878,4819,24012,68534,42606,4010,120809,57497,59564,101758,103718,32701,80116,12345,95834,46918,21468,53213,15665,31200,3867,5140,96013,250744,21016,10069,13968,35449,180829,27683,39704,59956,22893,3115,26293,32785,75934,62445,141162,62720,2018,83638,19949,114012,95006,3330,99829,130935,309272,9565,55874,121727,37017,23586,319858,40970,27602,8625,112329,61060,100088,118525,25922,16232,1907,60671,51583,44553,80993,5262,94679,8676,940,20736,11823,3020,16476,12340,152600,97416,3703,25744,66826,16245,16876,46446,84798,74227,176020,45192,61955,75496,23946,23626,40372,26036,6149,11822,30582,16541,41914,82385,232823,40921,80773,14930,3631,7517,39619,4348,36180,126106,138939,62611,1477,113512,47321,25052,14546,118881,29060,23589,128322,36795,18401,137921,104699,267929,36194,172791,18113,4766,188215,30083,332586,94089,5805,77909,22194,68234,154976,43220,40660,70001,184893,138095,11128,103010,22663,5108,212615,8485,5565,49222,54614,26530,42639,16319,55062,152662,105595,21114,22216,10294,68158,10436,86950,7206,62115,3977,3657,59874,456,118617,18156,106663,112229,80992,17442,8217,55551,5133,34344,251927,51153,39364,201321,7816,66803,23057,156724,145664,14276,95705,979,2796,6875,13429,212525,50602,26276,28284,3424,19465,52397,46963,31420,51399,206476,92317,48851,637,100820,83349,10317,60227,21972,6908,282439,32857,224767,95629,83882,42106,87338,69757,29840,68709,37665,45244,114577,49188,175943,54009,186746,106158,70168,3358,234002,50555,9221,129338,9562,20118,32923,78479,118280,65752,4977,10474,102174,60947,129006,10570,83451,8598,8078,159367,123785,80438,16742,5905,5281,181513,42402,6977,163136,93179,42191,14968,50421,112401,105440,33456,57347,121611,4221,94954,36517,24046,27796,6255,33394,72990,135408,116627,1233,57874,25654,95419,68156,401399,313338,55208,45573,93124,119251,47200,38196,11909,130667,45391,73904,64964,167846,4137,115606,52036,62214,7969,160925,7187,1132,134835,40309,73195,64494,80472,444841,61111,26500,45323,40743,53625,52797,22659,15631,29739,36706,28841,39147,102836,26794,10536,14845,87305,45874,12241,127587,83833,57183,79722,30844,41304,84655,20825,92500,3722,25655,27811,10157,81634,31362,34088,92487,70123,22190,185100,72658,139035,192523,88241,2078,230490,44528,85638,100198,22088,29982,291233,241062,13865,4445,137791,37835,107218,31726,19718,38234,72528,23046,19177,66695,5109,17251,28077,5617,21554,47839,72425,133825,1486,73065,181275,141508,21768,62971,63082,2512,34200,9904,120309,6392,91243,68416,268253,41199,116757,138551,185526,41246,28986,4093,19057,17295,4148,245766,122360,35356,112075,20301,75441,10998,7977,19769,62922,937,63547,100196,26427,157820,20983,236696,22935,8140,90315,156004,47204,140973,7726,45097,52725,22636,23436,257282,105247,522,88389,216031,202204,46812,211666,19693,68828,81691,45925,11256,30292,372,5236,167826,88328,232776,151611,5360,82104,18841,80393,25465,18285,20320,72377,31730,33160,45803,38715,27705,37379,24163,18360,103586,4015,32305,269494,91252,20080,36567,54650,7797,57073,12650,31164,42209,6375,261663,105528,81661,106002,2800,5375,17247,43151,4442,15727,194619,100855,144898,62320,78465,39929,16454,1967,28311,61363,17219,9395,8745,121445,76939,80385,162380,22009,54191,44248,16299,122830,48151,74429,78291,64755,14238,44966,2511,17712,67954,93583,829,105899,49935,84750,11591,33185,85447,42717,27409,208542,28965,62052,52525,5597,25694,65594,16343,63224,276188,12475,9331,127507,38522,57287,24128,133161,79723,105548,133695,48917,27558,43278,46520,13778,141954,110785,83366,17715,46317,105763,66298,147013,41086,94180,16478,220447,44611,730,19722,78975,117889,125643,26254,16574,18480,65006,15806,38549,246418,46052,36056,8440,34984,30170,3163,59800,4458,115442,4283,41970,33507,104078,1653,22,121158,276486,3655,6338,24048,133421,23641,2161,24422,36006,8086,10675,181474,12307,29514,59143,14729,52509,87128,122470,19446,80852,33314,24573,119864,14237,9652,57779,6612,51851,15284,98871,90581,124466,156831,21190,22015,71380,161906,87247,69201,18392,17908,108470,72962,40719,14338,17911,95260,43339,20610,78916,20710,72451,11315,31448,17263,58853,178878,48111,116002,45497,80506,82605,85880,36300,121755,25215,36118,301929,88728,405223,276136,553,34704,212438,49970,78329,922,20711,25036,257130,38295,145369,18128,15385,30829,55656,48345,8012,3561,28004,122041,192900,58338,112508,41085,29976,87040,47117,23905,4336,92061,138880,97407,42083,172121,6256,25192,172671,5,93568,1420,12677,31605,56743,40620,6015,78415,231077,31298,80026,13902,19048,24924,170586,32955,176119,87859,36731,6773,27711,24658,26475,115216,133207,93250,95820,88522,8317,5714,124047,55219,86860,19677,23961,22928,162209,8904,225992,359835,56084,96201,29392,96558,86071,93643,55114,13347,8183,95129,82012,2017,123336,34219,115554,157159,47747,101684,41008,18735,193781,104151,226906,7552,179874,124113,31159,21162,44010,14771,51268,166128,31382,73124,77438,92830,205709,12113,1292,38937,13114,1334,2118,15597,69581,14449,21934,76618,48728,67038,14967,51495,24243,87736,147249,26720,11119,46063,43749,5843,44147,152629,133428,65703,14269,45604,57982,28672,55616,45957,8438,95433,37698,220862,132034,39456,61870,4161,26501,73560,56418,9845,4654,20916,10456,88920,119358,9015,65931,96507,48029,38534,21676,109081,43078,34943,25089,6131,28766,23665,5477,10255,16695,67,45778,42443,42770,29534,23733,100513,62617,42630,48746,14191,43753,50295,26007,8792,57243,43119,54725,164253,58250,112304,131796,25165,4651,3188,24831,47748,3705,19540,13211,102095,5593,18699,23666,32005,117571,33541,60584,74573,86311,99443,25172,27222,168938,7143,11853,53560,18834,19960,86522,28217,53266,117700,72989,34323,18721,66450,34346,74056,47217,202002,46269,9429,68582,75458,37823,82843,96652,32549,145144,27958,19820,158086,31955,201406,135379,31207,192545,12950,51704,9094,248263,76147,64028,110009,79407,89345,99284,223492,47966,26848,15359,201137,2861,110507,71231,72297,31851,118777,71039,151051,240855,16333,50766,14727,7939,4149,80908,418780,88378,59276,1327,7284,38576,79814,65820,42199,84860,49574,62596,12396,70598,40117,8648,7994,16836,7630,14047,359699,106878,525,29037,28064,13380,11675,50669,74216,103539,180314,27449,56299,172344,19274,7301,246099,32043,19422,36506,129317,6806,30140,4614,46639,66926,932,86600,6322,27847,233103,10541,39025,34887,3517,12972,26220,2031,66561,115015,48658,47596,12714,33845,3893,16165,35237,89983,14769,11962,147224,47018,29977,27979,5552,82338,86023,131368,1218,24853,237840,132193,15455,40873,3668,65351,53388,15229,59889,272245,47934,11858,34347,18038,90853,86981,300602,19343,114181,29362,84921,6095,106059,79472,38015,1206,48741,6208,8e4,21916,17423,6002,108083,24479,34931,56661,9511,26995,100694,163853,35997,81254,58321,18919,171890,86877,91341,74503,70477,53412,7027,59281,39892,131302,5864,15947,61301,67466,162369,47956,27874,35624,282324,21270,111847,102548,41482,30955,116737,28264,8592,55458,22301,75090,29821,30697,51709,3041,19208,8038,24634,30467,87509,126428,19389,18814,152686,20701,83474,45832,80891,105808,11378,153223,120770,98186,150633,49838,9141,12755,30962,5260,74490,21256,31678,65062,33326,289838,187831,20595,89768,2805,58535,10844,70085,12090,2451,138068,98544,24461,4511,6754,41684,28203,3383,65355,82833,30161,83924,234361,128424,28921,222594,33975,125491,34069,11508,67464,144226,41850,98703,34371,7901,21254,38398,65651,23549,53883,213340,123269,12028,71764,177701,28758,2623,68395,11549,15232,68603,9660,63116,36079,57093,31198,20475,48467,89984,35619,186847,107469,31389,43631,73867,41949,68841,114250,1605,30564,63403,17588,27680,99533,12641,70325,50428,73426,78379,11855,91651,72081,91720,60198,15743,12065,83398,140046,6761,46598,45900,5068,886,62448,148968,37347,19405,9680,15819,43496,63370,75667,163700,37639,3633,22774,34341,183131,134335,37200,23915,7054,14194,12970,26438,13350,285521,25594,8219,104410,91039,168804,138480,149734,15907,33818,61132,60082,4622,110187,56736,13551,73571,3945,73463,65498,17758,263266,17593,2710,27585,54469,38200,45367,63754,28881,3473,12791,98287,31895,65787,4463,94536,24951,36332,59901,28803,52130,86403,7668,181822,74831,18977,9850,177206,145485,109798,7292,31421,26280,77211,58511,12507,127004,11113,147,8729,56208,43066,79926,129937,31345,83947,39915,46146,98763,42566,1337,13192,18323,105163,80570,117753,16555,72883,11077,159438,40764,70933,83329,26066,12276,72059,21655,173836,126713,69454,153482,91585,70644,102558,110483,6764,127864,190133,3961,101798,20945,71138,82402,90884,69669,44753,923,16939,59700,164258,25969,27082,31399,43846,6306,246093,51342,6153,151581,202801,182731,56475,162188,89426,141356,14355,121815,27536,28023,65257,77523,106668,127314,24947,12790,38796,169698,23555,10725,44573,183083,42088,62716,43265,105958,32050,44067,50118,1668,3874,6243,318411,16599,1691,94999,52378,28671,216728,123258,2059,34969,69225,5913,136280,171443,141515,91662,22175,135282,80020,92270,1663,4808,4482,3495,34691,5226,109830,108512,17342,107488,11606,123190,100247,29666,146527,113014,15794,30894,13224,39585,243192,22351,9903,7836,47699,11078,25468,122291,48821,26780,122679,75521,81450,630,4895,92900,55074,74293,17441,3563,111657,103102,51613,12318,52370,36191,68245,34269,40445,41354,122901,168604,182500,62012,42557,11259,24428,115113,86345,12362,3909,78430,86852,134602,20459,47853,93879,22577,7659,3688,38555,13349,17381,56715,91639,12493,10895,92438,3142,37057,28928,2004,36427,32268,34222,209974,10432,67436,41989,173518,107930,27079,62729,30908,55558,5828,45031,14902,53546,8204,144263,60255,14520,88212,86582,109589,69356,8064,47449,8505,66558,16886,4844,52817,111260,215129,12941,91118,650,20770,6273,73089,40618,62790,2873,35002,14023,97208,19386,102646,36993,143736,135457,35385,113601,17893,32627,84439,100619,56016,6581,57264,172160,45452,111710,203627,70131,24100,322787,1996,35665,70078,22358,90922,83658,4097,63200,58499,14542,99153,52159,6615,12414,63415,31986,16823,1579,65405,137809,8841,16898,48082,259,33014,42375,12260,179850,73667,91389,98882,29532,17311,326251,41092,5928,20742,44964,48019,43505,9317,49265,6643,192712,48424,163487,19861,20113,70848,31928,105333,23685,78563,14638,54755,7158,24142,44018,20774,125255,20331,24280,10163,1285,2336,39851,4299,117269,46714,63816,87779,159624,11731,9971,990,137317,108831,50994,74554,162680,23640,131597,146962,170620,34829,91205,21184,1913,63616,18427,93136,156592,17519,67565,115882,138220,78622,88535,18115,2711,33554,109492,54298,971,24914,25863,36363,45715,27099,194995,14299,178181,111488,72395,322385,157719,130787,11897,81843,83999,11369,49280,118604,40922,61332,110343,53407,75639,40582,300440,54722,25637,13694,48248,48278,194521,56203,52779,48783,72627,10953,376,16733,280238,26351,230789,15132,25168,137270,3588,63704,73376,94031,74284,19443,159557,9697,39901,13351,119050,15406,146455,3460,29556,75195,37673,102524,92329,47289,98413,15311,100684,56345,7116,95480,11590,7200,167,23610,58426,17730,136656,27944,53151,2701,8824,103124,3017,90744,113588,53216,79736,65940,26931,498,29568,80540,143543,21292,1740,59268,16561,180816,42323,50174,40890,52866,10703,57169,4700,17191,4424,93511,49698,166650,26972,48631,165169,82879,69326,202970,4007,2376,231325,139592,22119,62851,37504,68816,58345,67398,186643,43331,277416,53749,15746,23102,17432,4793,151138,48822,54265,48203,198688,14305,54287,2291,18018,113378,123260,7180,97549,87027,120085,2920,76080,8190,102005,5641,64580,14955,59802,54028,58884,19367,81779,412567,85957,97053,103637,78871,29364,27637,141728,4767,30686,112738,130146,42745,12730,105040,14844,232,210944,36581,152317,135543,29744,3129,55647,58149,46319,27265,17499,28005,59948,7170,34138,5702,293047,110892,408,91760,218674,18469,46095,81403,14389,4610,35672,73060,11006,74848,104820,118143,190357,20043,105358,141735,5115,27093,45924,123073,52599,29433,9616,238350,78610,24851,58858,26769,31969,24613,18294,4982,32735,39639,143563,112073,202205,12567,4873,88601,44897,81503,101648,81362,34662,85277,17574,48173,21435,221188,40215,39576,80786,26544,64668,81841,10731,37733,247986,149188,127703,495,18382,54388,72446,43071,30974,198723,89608,41360,190,33045,8386,31658,19992,237838,119015,137622,50890,100913,6460,116233,267230,26621,104129,65114,14190,41542,14888,85962,23342,23041,26453,43725,71809,45186,4770,46452,53894,56616,221286,18973,9038,109299,55365,19366,26863,18808,60909,69353,41738,83463,12100,68561,72860,3980,13796,49340,12332,31311,27418,4255,53430,18976,45523,510,14224,30477,26581,4530,3651,101663,139840,22709,150861,31996,63923,120623,262522,3076,10528,2929,14672,130238,18087,9816,121894,100308,25085,55111,14565,18952,53293,2042,369988,23674,61789,133529,28783,108293,35477,47119,36448,71049,40015,33055,78598,198442,1833,159937,40654,77444,189245,113153,8621,18599,38553,35223,166072,2375,11659,21786,89523,6032,12116,63046,159398,18454,3678,32521,47626,11411,103527,38896,42946,15696,26370,10185,8413,37080,165583,4331,63555,14907,72220,50056,6623,62236,36565,49783,10049,17503,100581,55951,146244,24724,9626,17969,25524,109300,173965,99994,101056,46459,43647,53737,277968,8347,123521,74858,33829,44762,77574,877,81377,222525,123532,30602,43881,53145,2973,16284,81940,61281,127044,63620,9875,14756,114829,19032,9202,52759,119141,23928,120551,19607,3599,33401,76821,73233,117430,39968,36539,7071,5446,121735,194059,15206,45283,6706,15603,65615,1207,165723,92275,34773,104447,8396,32353,205240,164323,13600,60555,79205,25532,22907,33410,57480,107111,69630,32137,47832,70913,33161,20321,2371,117348,10714,86246,1625,11763,17900,268,78457,99175,97940,101092,86660,32221,14041,128504,125080,53744,124263,31017,13897,403,31859,21964,5633,111630,5547,77329,17961,18241,84995,25984,12983,67491,62168,47262,5241,297,51191,7351,8967,147212,82060,16821,782,11033,82431,62957,5026,43459,77963,203477,53528,6247,191852,87774,74164,215654,13467,1522,219964,28589,244104,16242,117821,67725,72570,156792,17186,15979,26990,44128,193014,35276,57125,16212,166451,68017,6905,77608,16364,53777,75921,76426,37975,26203,269296,64099,84122,12077,38533,830,4407,20139,963,43028,38902,42911,37503,83343,85045,16979,1165,60835,137387,58380,86990,110066,134540,56331,193845,81238,17922,163093,38744,110641,12502,56404,34862,26865,125964,12965,111648,25547,7771,27196,136980,9555,29551,107158,57885,18831,37705,35505,101742,13970,102109,62548,124657,23328,11124,89592,146376,248050,6241,22033,18337,80685,29898,11908,216623,67721,106162,146610,21377,15085,91552,42041,62560,122532,125336,102365,121537,142559,29693,223919,11515,110495,18776,22494,5895,185059,103592,229351,51220,100102,37027,257855,29359,54123,36066,106493,12244,79258,32002,432,56205,94836,90182,6726,14762,29391,48938,26864,38083,60364,3310,60192,14766,205567,57504,110760,22649,24666,46333,21517,3430,13135,28873,27052,158809,11597,20529,6695,23138,22960,37137,45574,6545,305877,43423,26153,24769,59844,14501,10430,134352,56169,13213,103432,49523,35181,13435,12408,129475,64620,230854,77390,51990,15653,83248,33466,44571,117828,51481,2187,10559,68019,18021,54895,48247,18354,33737,4554,108595,37288,39767,116707,9175,3726,108877,21616,83684,49862,1938,8543,276466,20134,108498,48770,102254,31914,131520,185291,100559,51890,209,19526,76471,50544,71814,99351,8172,198526,28816,20419,9109,98389,136777,76479,75596,30635,165417,48216,120220,25955,211071,39314,24308,32164,2559,146280,43403,9233,17947,90585,1786,86920,125662,2457,64741,32152,32918,122882,78538,44001,31723,56426,23375,103172,88177,145697,52506,49319,68016,31664,41488,18486,110400,7030,28241,986,109199,19900,42147,56864,65287,49183,7858,24e3,30453,840,16673,25907,68916,89927,6309,158335,36407,199737,130464,13137,59603,201778,195292,21015,42466,179062,172561,89492,11075,180407,31868,72493,20998,60217,9865,19530,39274,130266,54539,21623,12535,13505,40641,73375,4087,85633,2153,3117,70680,55788,92096,47509,98493,37490,271936,151475,3032,16171,96642,34106,78425,125761,19591,3366,19316,54508,24183,50786,194248,91528,33253,34622,108355,41741,705,3814,3883,108929,13203,67831,10142,59754,68208,29128,84820,56880,38794,24972,48571,40821,40476,18137,164254,24064,236309,79181,11282,395,39169,2013,51587,28551,9645,701,109513,115899,113566,12762,62045,58322,103726,41343,40866,244102,143816,2490,70346,40973,52618,15412,30720,104315,38917,42027,93676,17513,107418,20706,123890,13399,97727,24044,87962,65606,44250,98044,65276,74790,101473,19350,91570,1326,87790,172042,7577,100813,86896,85891,41512,108130,27794,14875,71431,12835,156250,58135,3759,22476,42176,115873,34686,56523,73643,108505,51491,20838,12721,32863,45700,29496,13700,34294,55360,29206,155942,123812,7706,163234,203,132720,49358,144431,8130,175788,35818,3270,76832,25710,54095,97274,28779,94621,74396,19092,128242,58067,20885,14670,93255,15107,63291,23654,126900,129421,59294,262659,9798,3251,67344,28600,44629,50672,29072,26999,31526,23183,49175,165843,175455,17282,175411,32022,45989,30298,90690,78118,83156,23749,35636,31317,7069,80381,94561,133756,14960,97404,6138,41065,78041,32843,16601,34123,9559,146529,123377,96395,54441,42012,84257,123541,10745,22139,106459,11720,150883,172651,154996,110538,4728,53447,25704,2009,71152,119354,21166,66604,1429,216162,8637,122250,63520,27180,29172,36124,276428,107787,77184,4680,14952,104903,24418,14793,51561,52931,8371,26342,48526,7118,92066,67280,40653,8847,34597,105438,14198,50163,61188,146286,50315,41205,170829,161496,585,197359,95056,1687,365794,91349,48507,5804,49263,5146,104902,96365,117343,132222,46084,96919,16875,8073,262381,79982,52663,13928,16056,153908,15145,109256,132308,18763,24904,167644,13618,40750,18686,147124,114709,150038,52849,2938,12568,48617,8778,5459,44202,44591,74914,17183,248689,13878,7822,80060,23116,194037,18487,2067,7798,43077,33678,244028,31320,74273,2794,19466,8218,36280,183997,48124,19416,29656,19280,98734,7715,18311,30701,133602,150307,126956,7378,2933,79903,13178,12593,86571,26604,92446,13574,44205,65699,427599,21118,8245,14407,27877,47936,33542,7916,26460,117762,21596,37818,2249,127359,209394,60044,47677,308089,36791,154971,31417,6998,150042,174360,12255,43009,29335,48739,3912,101398,53340,2580,146939,151295,45360,125275,15273,45383,27456,48761,23314,8750,60801,85823,104759,27894,123685,66968,39480,26917,55290,83305,2696,98390,57569,145853,340733,4919,20024,52268,30884,7413,203685,70989,112855,4129,50536,349518,68205,332641,159581,135361,236026,37563,176404,64899,6578,122033,63871,1850,85234,82089,66124,74145,121098,107351,12687,36881,117334,13136,14698,85933,93866,18047,32620,310,15094,46e3,88451,23632,36645,27940,87618,80520,58892,20976,27702,140090,96075,67841,103292,238964,87778,107338,17019,83427,67522,7302,8261,47570,116787,8730,80484,61772,174422,56005,131193,52875,14588,28471,59817,9586,15720,158155,51307,109734,15196,11025,59331,3884,52626,102602,84797,25158,27314,4437,20488,76214,189248,35023,114952,157376,2827,62439,102878,129749,36405,10329,109339,108633,36662,1254,13267,5470,87105,58004,15397,10434,159667,21864,52022,179464,3013,32147,31496,116832,18494,105502,129227,107267,50033,13481,9954,24267,22141,16257,116154,36185,950,115685,11305,176708,2048,178671,112573,287867,162328,497663,95170,50979,193861,50987,30368,136257,31830,46549,15119,169876,23788,17462,249887,57377,1949,35448,14791,43769,210091,3783,34612,282103,88380,245190,5457,20491,98908,11402,86899,117916,16028,162584,60644,320177,156096,31065,55876,22e3,77655,9992,23397,13757,317623,63978,215255,2443,17648,93231,27388,104529,93807,55505,140477,12046,112040,70887,40152,94365,112353,25063,114679,266061,71248,119555,15589,2244,617,14129,211431,70110,100652,7777,4383,85911,89221,21010,120615,58357,86405,37554,41647,18,15143,69662,60491,14714,186134,148344,42347,5410,168175,44535,42449,343894,129417,99682,20659,27272,140483,63455,222159,17536,13722,42637,62324,11976,114691,148109,2283,32057,182393,4295,147364,33705,2075,44303,30274,28331,63740,69740,29148,10346,44862,33716,73937,153333,12930,38784,247159,2515,41053,20256,83368,256189,54639,115240,5096,24661,175419,153552,26516,141,138176,63885,34115,47222,55709,2765,28479,38875,236608,12229,22921,77291,54426,45388,2860,57787,114579,295139,105782,17826,71066,19119,54364,69385,16568,12323,28057,33346,34919,124763,155533,101386,31644,8627,49001,303600,29868,63213,9103,77280,71333,9696,138789,37059,24823,5057,21352,32368,114208,56803,19424,10445,58514,8661,209508,26187,171838,10460,63454,14016,122504,41328,21329,46618,32493,38225,7855,31763,7945,29876,8734,6438,24205,97490,139977,130740,47323,33195,85390,57194,13813,60600,21313,96251,7699,27584,170521,139271,1363,4402,336738,129223,84983,69150,13147,3590,163929,207225,155260,55916,20288,4503,8398,98490,11773,27512,37113,84976,86558,28365,11756,116005,182148,13733,115313,47644,67208,85069,9347,14995,226141,14704,101835,41159,35314,13113,63526,214039,29978,50446,83339,17440,129441,72522,118641,97816,24907,73844,15717,118884,167255,96509,162793,30847,36849,51297,78974,77793,10427,1873,2972,9999,35074,28190,64297,146836,46298,60038,163007,108919,61219,2403,75022,127339,4233,110389,69022,9833,128097,88016,79390,222936,22570,94657,28462,56956,38803,81536,30474,152794,19566,16481,147408,74574,81895,20731,1918,1366,76367,187321,54494,24366,21690,61696,33283,107477,77499,31112,414383,74362,18463,218441,120929,59848,258629,201924,69269,454,19989,13054,59894,3623,58908,20681,35723,78523,102680,38988,184112,108087,50944,132704,52966,21699,18860,96349,201411,82697,85395,95658,5093,6427,177894,44191,32755,26961,155739,6249,31310,81030,26574,84311,120155,86730,113535,7424,48888,13516,45747,98098,20077,183995,81945,43210,26704,40420,75831,45648,11180,6855,57927,65528,124096,34851,2598,156633,107572,127352,38169,123845,60142,62722,105584,232364,23211,68120,1601,22169,89299,747,258039,80572,7258,152249,11862,101204,8834,121434,33761,19175,133142,46343,40178,48723,3589,41977,30210,38868,62257,10087,82658,87827,90646,16415,47552,351723,28298,72225,91146,272760,1701,11295,1652,109651,300747,51863,198800,29446,11794,32345,37538,22356,33102,37590,113544,37970,11478,179743,25454,103417,59905,221970,105196,145604,7817,164809,102360,16974,75840,255333,56902,6659,1954,645,59400,67769,7689,18675,5215,13793,20536,27852,3387,29523,259718,16860,94625,43143,29245,15848,233581,22685,63631,78557,22836,133302,84513,1348,51826,47129,98836,58284,1830,1749,94642,10933,6145,12506,10975,13879,103781,144434,10268,28409,32346,52968,121567,107374,77268,23686,35097,10501,155275,15303,47136,21102,168741,55332,90385,15996,84817,681,137803,25054,142275,6163,38175,8056,124296,240642,65621,4934,178205,16101,62803,60964,18230,100622,76465,44689,14545,9543,47514,16852,93380,28048,12047,107106,37575,101485,77047,57326,34819,96137,76916,6469,46264,115983,75768,87668,69942,13027,165,8373,114231,26434,52844,42799,182044,23580,146254,38081,43236,33883,146220,382894,14606,46035,36481,166621,35417,95382,2957,59384,60428,36358,66343,75378,22267,22950,83528,17577,56474,25285,4619,179691,75355,95836,53295,34588,171410,4487,14679,84208,44015,18562,109133,54101,11531,86052,174479,303157,28095,9953,35642,14564,39802,16145,77606,117406,53038,121117,53624,22062,1212,7632,127157,237292,189087,10478,127345,102515,181997,86752,87623,10966,121602,68783,68681,83042,114380,138349,191305,67176,50085,39016,1427,42384,1412,67118,122616,72389,25260,2237,13576,137346,19938,20304,2191,68759,5373,61364,238507,75814,23931,69565,38993,131741,38364,12528,87762,5679,129853,5310,186831,32653,90338,260176,389531,108118,26843,43985,50175,30563,25106,56965,18130,140428,4542,165503,117991,24219,229605,1819,129663,1240,3797,76093,18398,71339,51919,93043,27175,47060,216257,6483,35051,1217,16512,80798,129064,13225,69339,8548,237079,72298,2575,34280,51379,117910,55671,53345,247552,29486,39328,140821,34681,57045,60177,5004,90269,78522,2479,322607,48474,61296,13057,31558,4678,59271,6699,27044,31988,35944,12503,83480,4389,136508,3781,114121,70279,4488,155829,42214,2898,68191,75695,305850,45041,74344,106509,30087,17429,93292,12477,290,23080,114802,35714,18751,26554,105424,17775,2144,2412,100610,65192,113975,52975,180272,135050,129815,76238,106483,21440,63186,4260,46189,9711,28249,4169,23429,23390,8324,141585,63809,67668,38457,38063,39226,59972,1189,203916,62368,14403,16949,61767,85801,1739,40147,35049,76757,33124,62102,15780,103593,103009,53484,22952,67973,114645,6566,5245,50462,7601,8288,3513,194571,80276,1908,54592,5124,58571,2513,6800,273997,193904,1119,17991,117245,2508,129156,82366,26278,71465,63341,56943,39662,106116,94966,156875,9736,2204,122308,94418,27134,1280,24539,49022,45314,3764,50904,46424,30699,28087,293839,9400,33646,40165,822,147499,50263,116179,29085,11863,31314,5578,17797,5104,12454,1604,15342,219206,10232,67800,94261,25872,13565,90339,78971,75377,26649,41184,47695,11514,35369,20767,14227,41953,309396,148270,147938,33074,14453,27499,109019,39018,25738,240196,158931,52820,8612,95853,21524,137010,84901,70869,70021,116794,48404,38771,6732,1070,70990,187297,49140,5238,576,3564,253975,16027,16483,2811,37775,19034,25259,4053,2e3,70083,95774,19713,33431,92703,91314,42381,288770,48194,95985,3991,77418,13406,241328,245086,56533,35275,62725,9246,51924,70181,95331,16163,31410,79016,39312,120878,119371,275987,80124,27712,9186,220,23598,146167,85209,68238,282190,57048,31273,30555,80913,17594,75779,59160,135002,101219,189377,29225,96735,60126,62522,104e3,27620,86814,17240,147533,11001,5425,43682,410,49460,87270,69480,46315,59448,1816,76201,9431,11788,87960,29063,65539,47347,11678,33846,7008,196704,9895,6753,8633,120892,59970,572824,115934,6646,202559,892,48351,37611,251282,57823,67263,57750,26527,34485,90747,7685,88370,6144,64182,1709,41969,21458,62327,181657,49247,225330,122600,114574,107124,85361,111833,63243,71420,15655,191178,72430,18063,51425,54002,12364,53225,86557,18193,97580,41232,138398,67821,128724,8944,233212,101353,52099,42127,14006,120107,32789,32132,3498,18123,33758,56058,5779,128760,59888,98869,18445,84702,51911,13234,218379,20093,39031,8074,70195,20708,23462,24355,131384,60189,26390,10403,41060,7140,10781,49410,42261,87202,82566,41663,43105,60276,2768,5733,74176,28329,2297,145430,131632,83615,122915,105441,655,224102,5284,136426,67763,16294,188511,32538,61049,27893,3394,13951,159099,28542,17930,145360,9492,190122,32285,78855,26440,13570,58648,73908,4239,124561,2444,74172,53131,11468,10794,73566,11623,35343,64710,30481,4163,10328,38309,29901,10538,154377,76132,92405,24839,11679,3465,13449,11637,7824,2337,57754,1260,14458,41118,19878,38661,13416,159180,37074,163164,54137,28627,52134,184900,8520,40385,29546,30502,22386,66527,107458,6850,24022,47983,30603,35083,8934,304066,39500,9,28261,33026,77251,9374,44833,116312,34990,29236,63563,125639,135405,165398,159055,55690,88141,69643,236964,31983,25572,20436,36746,60896,31850,16179,11828,5888,3043,66368,9750,31167,7915,53111,36430,1333,64344,93659,20061,60596,180191,51630,6792,30244,43509,101058,22409,420,44210,109783,43223,27030,72477,72831,32679,29235,7675,47556,12258,39907,149412,84926,118247,24692,71717,105038,86009,45941,41189,89453,29856,52543,30627,226798,67303,59230,67415,34408,1367,99685,16867,128419,52147,4111,125381,117881,16173,44093,102224,31575,23234,24870,83790,127407,239098,3200,994,1255,100903,242275,117266,55116,38205,16140,29662,11307,40414,208793,123355,56470,4862,75600,30119,58218,70828,24075,26974,7802,192353,4851,5475,78720,66596,3409,28573,64396,30381,30690,59859,88256,5406,99945,103064,34463,37727,24238,86643,60088,4057,23741,5967,162904,38240,28356,93858,25510,122879,6897,3278,7057,11971,4400,35461,211413,21395,59615,39471,87233,55795,128426,3051,22470,41950,14705,3974,180108,80476,78442,204996,91987,15634,67610,139015,142373,35611,51134,10387,4353,153456,57749,181039,14183,68447,151532,21107,36452,20551,3186,46247,46383,129666,88736,140662,146243,2066,8360,7978,64818,106963,17896,47801,10723,114821,223295,74192,3293,3393,16987,74064,11277,91622,4270,29828,27951,387869,103235,1374,61988,120083,477,145892,128378,11779,211263,61354,18221,17869,46530,83061,108538,157981,90608,67199,95080,49064,195814,12302,66307,10348,231346,160732,112859,63633,146558,21271,31037,198802,47622,12862,95710,3910,77850,73961,85585,34752,61e3,4082,24595,103679,71107,8208,79568,150019,16615,24961,139857,32664,197366,4559,54735,32696,4126,162019,75698,13916,70108,159638,19834,9349,24675,175560,49643,18206,52459,27992,10809,88865,401975,133172,29e3,34558,30915,3658,25834,42430,36562,125265,18182,10155,40149,97082,208980,19575,60853,90529,66545,9600,789,46420,2317,88593,55595,98980,115302,5742,169155,1073,177901,3472,11189,63711,78643,65472,50459,127979,93,42202,67053,21720,157650,11145,141378,42033,22824,85705,79114,35584,15974,1510,54172,28562,12451,104226,19190,97151,73024,20948,5151,81741,21499,29006,84183,198074,54003,45120,170125,26240,35177,28389,64863,79974,60778,176915,232183,45342,2038,80253,41564,40703,32689,5430,100689,5366,23007,134279,14266,26712,73993,24934,64242,52113,102887,61801,46415,201049,54251,62133,122757,164883,30815,139966,2319,30842,766,13362,10287,134518,86111,81665,82440,28333,43019,18963,8804,161944,23439,102144,101145,80029,39052,248708,30350,117340,11878,128467,974,138625,63961,5237,74778,61834,67040,43814,13690,65947,33809,232476,115258,181745,28824,94013,9510,10246,93722,81976,7217,114383,3493,16014,69045,72692,12145,80981,9507,6692,1620,60820,330444,35474,33962,4797,7053,295463,46445,27026,12491,77988,49524,35675,90947,29114,166705,101385,133782,32704,6186,84595,176031,185623,45966,151302,63069,1699,107491,947,15458,74452,196212,6046,10498,12163,10239,35191,243951,9277,9090,29539,54460,22820,26514,112549,60372,51753,48756,21812,70861,260326,41,44222,10441,16961,48148,138771,216194,5914,52153,53400,212036,56519,26245,10117,45888,15294,138019,90913,26368,43842,42111,23348,6082,194845,161089,156206,51546,11647,30759,302912,262094,8635,78876,26535,35283,54183,31183,85484,147873,12989,5197,6356,72894,65347,20150,27370,73787,1493,45918,12366,190217,20724,13858,10981,67449,81213,7553,14115,72242,271517,11842,48310,88743,143726,22177,3290,243231,58452,62937,12592,1654,40066,33477,13751,9921,128442,15868,7106,75236,83773,10775,36938,10482,170465,17368,17469,161508,32752,98340,800,19824,264456,3901,87319,2867,26782,9630,113102,185815,24197,44584,86366,40224,3636,140916,31731,267731,9567,53678,72984,29389,27963,17106,50282,284911,60170,8322,12608,23374,89652,5268,39044,229766,8869,151350,31436,177342,12269,183212,120418,116270,2843,78888,69192,7865,184099,1086,129897,18383,70508,20242,18508,229924,124569,35749,50589,55626,9884,83115,40971,30671,18135,14452,38861,17844,201826,5549,26413,17189,13561,38539,10679,143331,3314,36785,171194,49685,187713,67506,4618,104039,17060,195080,50648,33159,19238,67559,134840,28599,157523,17130,38064,117398,94355,31918,13575,34538,40326,13997,3494,348283,62481,26862,3603,104426,244363,153709,112487,304612,199674,41239,35545,54869,293005,28223,26277,26899,4533,18518,15492,38587,80488,70485,160395,263,60162,11382,222152,4696,250751,51921,182609,10707,48463,46243,1227,49111,111564,46502,33342,56846,68541,63559,858,139927,16654,229375,76759,26478,33205,95828,23399,92945,2637,35630,28470,143992,50214,14174,21456,166191,65665,1711,21594,78019,97599,111701,36,147151,110246,189022,43021,30397,40757,131935,42065,73335,48039,26596,28984,15102,2361,7421,202167,69744,43766,52826,3642,83304,33873,75140,63169,192389,36551,92748,13039,123959,233220,21738,84447,77230,20228,187852,19095,25799,92136,108774,29237,53947,2299,118106,2687,8830,42331,202924,33667,2023,73763,30704,19363,19779,16737,35629,48081,24068,101013,162338,291912,13749,24745,328289,167679,70086,48299,23306,16732,17801,43322,54589,3586,63653,43624,53474,925,109177,251316,43805,13082,19511,86565,142182,92461,17117,101033,103319,64589,4022,4351,235897,5352,82705,107142,46391,156084,5860,61365,10558,13045,7717,18357,33922,12590,33065,6928,46993,783,46937,67846,8952,26295,6107,119656,18799,17458,50747,4229,179559,112727,118080,20683,41464,125468,51560,49749,44231,7359,35339,62988,136487,67015,5208,29150,24956,105186,48858,6143,18097,6972,16404,73489,58742,97196,36357,164616,5834,32267,13746,147733,15113,132091,34127,106298,39729,106426,22294,9780,15602,36213,71502,42808,66802,599,60755,5851,39120,67363,108623,126368,72770,91263,32486,30596,151717,7951,52002,43103,11768,68942,40901,39344,24037,127500,116890,48403,16926,86750,17745,48648,159545,34460,58419,5634,114317,67865,31462,23352,24010,98185,125708,69686,68337,13610,26271,70691,2980,4768,27225,102402,75453,28106,8104,6931,1176,6274,6475,112635,22498,6176,238686,26832,28893,90319,14441,15682,15087,39517,45270,109134,104440,45965,47645,81772,7876,52683,87720,12898,4505,185665,2769,113401,15664,57592,105229,137381,97059,119268,6876,43309,33886,128363,35476,144249,67013,143587,83367,25703,91436,59347,53236,2289,16519,19844,46309,58558,99834,23313,218816,231303,36388,51333,183535,109792,139277,54306,90139,18235,8275,32710,37677,82464,86025,92204,88842,117723,37570,128723,234242,76350,73795,34896,148247,58424,11105,11744,45746,63372,17118,49772,199520,81902,38004,22911,33752,3125,1995,53792,4689,26909,108150,146062,69674,41811,161444,84855,8999,28561,16731,93937,3189,21967,24890,22943,1356,145300,51569,28802,517,118679,31703,40607,48098,108854,25003,10233,73969,177495,5248,24516,215347,146192,48712,60626,69188,40735,5866,586,101541,6509,47590,52129,5969,222045,110933,25733,24223,65339,62812,2414,155418,35819,16022,78423,43138,20995,128255,240673,46745,236093,72176,57085,97841,61248,107,36068,193177,105427,55726,215229,20446,47228,100420,87091,14429,121708,23605,21157,187721,21880,2997,203976,99166,95068,25877,7724,98925,83401,4829,13182,18229,13718,239662,38653,116505,153497,30589,89029,38962,181302,43853,78872,180301,4786,248240,7401,106136,112590,77745,19731,60880,77789,125748,135487,5975,48627,34084,12419,215770,47557,254582,10364,106495,21856,67539,88981,38805,21428,48732,42316,12149,16078,52808,25327,51322,33850,51147,12253,122354,46077,56483,254553,115417,81834,150991,94662,86668,7381,12841,100650,18218,15741,22372,68294,50705,15535,84660,61887,22553,72299,31361,24824,17743,46820,64288,31582,77006,111674,116384,30760,80920,86149,77192,51979,79691,60342,122805,103800,240873,160744,233114,78962,54920,8608,3484,316104,72548,24337,5088,230040,21926,10172,36838,26,86221,83458,102176,12062,17571,41929,41170,28428,68239,41750,103930,2634,18313,53019,34825,97837,63115,24606,73157,152474,14715,91439,37033,109806,140259,30668,174760,380,135597,95673,136073,65073,134249,13829,17279,122305,4420,46444,10237,64848,203623,70728,10349,182885,65075,24519,25783,40318,34139,22222,63394,55266,102764,41422,20126,65100,90408,53640,35128,48932,11192,38935,96839,34782,39492,19396,41332,6250,5511,19492,51304,25936,104466,54099,73771,86115,5080,7669,30891,111700,13931,25276,72289,135447,14820,258641,25265,31005,281179,75286,393,95359,14623,13584,6680,101227,80173,44933,76666,54542,13244,39348,458,25379,109451,134348,81143,6959,65554,12027,51311,8716,57589,140731,28467,23316,17272,30458,25980,55229,77197,83798,28302,114784,7428,34548,26241,14712,39336,103304,18928,54080,12870,334,87722,15208,16895,142098,114262,39820,83913,57817,28682,7721,14900,108672,11250,62246,42849,415188,1724,26555,24549,25505,26443,107450,145899,61035,43528,6901,60726,65906,267741,21338,147590,42079,18924,73017,135236,15393,5206,4026,84185,1531,5988,113890,82647,303391,7386,69844,71611,189865,76523,31877,13315,19314,198575,32821,1928,67641,25913,104475,103489,3297,70391,18406,15446,113347,19295,93790,27856,1792,167471,116449,8541,4408,41757,63233,25765,86680,64501,27034,24816,34975,6079,4486,49693,36229,16917,21581,62426,27862,11612,54284,35702,194034,355,24277,48262,87411,70504,310164,118018,12516,47559,43502,57433,107139,9290,66533,80863,14634,34312,91725,28606,21342,67241,72355,43244,375789,37402,174015,105070,8342,44167,67494,1890,16365,11723,271002,1865,47918,8350,45564,27742,25110,125803,8553,49504,81925,62211,4534,15491,19011,80373,206920,667,102405,128623,245524,5553,113309,192739,65766,19567,22832,261958,29679,21293,71134,20962,105123,24721,860,21752,33448,18372,157167,94822,35770,173224,232737,75729,28937,46828,28062,25453,5207,140366,36665,30652,6169,67920,150458,92040,23186,184604,92330,20891,176492,49427,27828,38305,42495,143982,49560,25503,90043,29747,65328,47830,12932,11068,77721,9003,25213,94205,140426,46090,89945,138173,192691,33329,112232,129905,35709,27514,1841,19957,31411,127476,53572,17497,173549,55063,175135,19841,69314,5192,237921,117660,150697,4060,273045,50414,98940,65348,153665,164423,58804,156695,48994,213928,86036,28608,8355,39574,34540,16927,135680,18374,151587,10830,53805,16878,16623,4282,48030,8537,14986,46102,13062,72897,72,33050,108227,39451,45935,651,113320,40535,95176,57450,48843,5003,19019,10407,211163,3848,1068,4988,32091,30095,41692,15099,43602,107434,50744,7627,171349,16313,150832,352665,207750,33937,38256,51091,156e3,87889,90663,84175,24908,114900,50365,31494,83829,5398,169342,47521,54818,18935,8356,43094,41212,174536,10082,92550,6678,60614,23355,69721,14796,34149,128830,58187,3179,208,40325,28399,225029,401412,51150,31580,207268,6657,10993,69818,64282,289845,23308,12961,38447,6681,52944,31855,2572,47646,120728,179148,37240,45196,218274,4816,3695,21961,50084,35209,18073,51452,27004,6100,33941,1377,84831,171214,85,141510,9078,99227,32610,6417,11718,49868,65579,87902,73018,49062,46280,61742,21512,40862,107733,15941,29168,157765,144919,14487,5767,158014,140070,7241,573,71584,16921,223566,40331,179473,35081,47926,140885,41508,52104,59180,42310,32811,29048,123517,102413,80208,10104,14746,12649,153641,126022,37965,113017,4171,83,142592,2809,6362,50416,71323,116894,260776,16204,1524,5760,30351,12658,20703,54403,36083,45408,74772,4946,14485,50759,111222,10890,2195,167147,92962,130534,16283,177256,35016,15472,210156,151187,73922,117691,43250,52051,37392,24811,24358,30830,5775,818,21969,1476,127322,151783,58392,31021,106913,65215,89407,90802,28531,11690,20234,95249,44602,37256,18707,11928,5161,4410,26571,51903,49768,22008,25252,65780,209499,68769,203726,13249,137363,48845,86823,6658,5674,31881,1083,1823,108676,34518,166752,13791,14287,91576,91429,8665,11529,26401,16191,91972,30964,5254,28486,54697,79613,66520,18447,22870,45203,194466,22822,51703,12278,76716,44595,73455,33546,12235,144843,36154,51247,11116,33040,3180,225753,60864,1972,28469,12891,28879,10338,144157,56294,353058,38302,41447,87532,110616,27065,168438,6557,1213,50804,144643,24817,2390,136531,38174,247513,16190,4059,122791,131994,137430,39506,57650,16305,5188,54309,106128,20628,88071,67394,395446,250285,66176,91254,1399,114196,43915,60230,44853,27206,106353,43013,18733,345105,226453,51202,16607,57106,117175,35492,10476,89598,127439,15187,39624,13688,61570,10615,31111,59370,6238,175252,32143,224492,41388,95408,34384,148238,78307,38959,9340,160091,61443,15737,11216,41244,170,38299,102443,113097,26382,14027,33707,3957,76300,66160,19431,18900,6952,1717,108656,82206,188021,257335,27295,43999,41210,31777,46956,57457,12657,11489,15697,48060,204748,53583,82422,284790,30503,137341,8120,19615,220311,15991,10217,63424,9808,67431,70976,98221,4491,15177,28535,144789,751,13230,2394,1504,33977,132104,30316,22230,931,97193,185240,24826,22687,174322,15307,22988,1390,188745,180325,29580,59068,74903,18994,29195,79,15436,7622,38462,11566,138710,44828,45774,37768,99236,68137,84083,19282,22698,17134,74807,126662,173497,46248,16938,119735,3212,28292,213652,49013,9975,32180,45660,86250,4801,68788,95490,77482,113751,11994,44624,94452,46839,128497,100316,5798,58588,73184,202987,65417,37790,88524,1606,43156,97964,105717,34947,11203,100060,37742,130074,93653,107799,94311,196106,41347,8035,10780,16390,27883,118236,167395,1979,25006,19375,31628,18916,144723,78502,114047,103107,86492,107686,5844,20934,206963,23556,22591,16562,146333,20167,10471,117434,33085,2863,9740,36669,41849,37271,22790,18209,28979,8231,12952,54408,21731,25130,45208,55748,138120,75826,414,29593,9925,292865,25999,683,123149,7036,92159,86055,61827,103680,23176,54918,58466,57578,13305,5709,86479,16697,31064,17660,200919,10770,49793,33423,32370,52047,16488,62555,6459,8426,83493,7763,59725,82812,18628,67760,79405,68557,9612,7673,28102,56517,69620,171797,32458,29541,15870,81109,32080,207644,71495,21202,11039,91036,61230,2810,130800,32260,4613,60590,37112,75214,33979,126402,155062,30642,63875,12810,194463,82799,47664,16725,36685,43367,61099,449,172150,102867,21691,301838,36745,7130,18671,57316,34852,38034,54182,35578,65900,99486,19771,3456,2658,16914,99866,28390,28109,8262,21147,34353,20006,4228,137085,1675,203023,283196,198286,214375,163329,290603,152574,40471,83506,30068,14730,23177,131539,34759,27668,32178,71896,104799,116305,85430,119262,42860,25160,8911,23428,49437,105322,6519,16203,6349,74711,1230,38045,8540,75165,44736,25909,51026,317034,4984,32281,91312,27060,44431,17817,45363,155937,239085,35697,59784,91993,29531,126740,213757,76560,167776,285273,24262,8237,65030,41160,74437,48804,118916,13159,37842,1031,75349,1478,11655,108777,23435,277425,101734,67469,70231,124711,43532,28514,65526,54956,1e3,21882,17728,25302,40952,52214,149632,1999,2111,3259,63362,89961,220561,39777,26335,9063,10572,12416,34551,34623,38604,24723,5947,15588,69927,66252,119177,69173,46629,28714,70715,212408,20521,406913,74380,11716,50659,50862,37009,88460,130101,7210,53853,538,65120,151950,55806,163748,52837,13153,21100,16674,64536,6091,138201,44837,58547,3723,163,2177,32288,85454,34033,8497,14282,25742,10535,10741,79559,117493,243787,49337,100718,79495,40139,42956,7551,55433,15421,31509,23034,45081,547,61176,53434,328001,8470,36263,30145,4519,74173,53935,11845,73774,60211,78025,3,4102,73782,109293,315332,48412,26683,13714,6865,20128,18490,104141,325,39470,171970,115860,15707,7268,73301,74336,31370,2368,111827,107757,136231,142844,97138,96638,84053,38691,23801,1588,10573,122098,77039,240,186135,146101,11996,18143,112963,46171,155836,348769,47795,121213,116266,132515,3344,144804,31286,99187,255838,129694,35894,48779,55235,148582,71967,65282,15174,13920,47080,6147,108242,157593,125025,7136,1286,28957,127956,28402,98813,20805,7532,109417,40610,5041,32958,15142,18408,108596,33543,50517,27748,80114,233434,91447,487,37094,100048,30541,43477,10639,89862,155868,37667,8726,60684,237903,73408,99589,12190,38739,97348,3914,13594,2680,149016,13907,30171,28343,23530,115225,61104,35821,147679,14337,4297,244282,24085,326976,56428,7851,21303,131620,71446,83253,68692,111870,5224,15813,38197,49026,45057,13660,3306,76345,40671,27905,91072,996,68527,62085,91351,122634,55109,168209,2024,27560,112707,17352,8306,167115,169921,166958,5031,46020,11844,67284,19130,76185,6920,32849,5450,14610,22451,21002,17392,31872,66682,84796,13709,40210,59898,12029,8719,53564,21462,91884,21647,88379,194428,12754,37797,132826,160016,22567,54383,53186,77611,31107,8339,4694,19185,90355,23597,17222,140675,28442,23668,55977,9128,61555,28774,155229,17658,9390,24379,69357,15752,127381,239631,62460,93181,55913,45133,140155,18676,25249,33164,29581,82837,67223,22362,29975,7317,52813,1943,29613,20012,207130,49617,49651,5636,15334,36313,29226,28084,95247,72072,19e3,224932,15811,114,32127,38097,37508,88507,37225,27359,91626,12193,69279,20608,11055,88156,92808,2152,57259,55275,72789,24475,104414,1708,9882,3818,48661,66897,1631,34806,227930,85815,87753,18321,250664,72733,25107,206797,50891,8082,196411,92596,96764,152823,65514,22819,387277,62176,51225,40329,15563,189,3659,73670,64357,51793,275136,33482,86653,74615,67058,11318,125720,15388,22388,8267,1730,102663,170910,40784,7144,85373,13040,7088,94309,583,44224,140424,77439,18496,164026,36578,4722,9151,5824,63365,26510,35199,40500,79277,32495,44614,35233,9566,203293,152144,7097,2330,183480,98629,13423,330887,44130,68600,30939,97829,31012,345465,56747,94879,4939,160027,149761,99423,46099,32251,15332,8761,96094,128555,5763,235318,222223,55729,30241,55420,201746,3987,81382,8259,49325,23287,7719,24633,251100,92311,18591,110533,64759,170260,393860,7175,21144,132887,3593,75346,101277,91109,16387,259187,11627,57459,173829,44694,55780,49797,89192,120443,62622,3904,14814,23887,1027,112258,64955,99800,11132,66353,36202,48624,18158,88481,96882,43059,11040,2455,7077,21651,181159,99126,100434,61388,68186,19161,110468,120052,8819,55324,41494,7014,37689,3618,87729,92615,207943,9823,128657,12587,15857,6379,67628,51216,71775,157617,63244,1503,3864,218754,110864,5769,21492,7243,1192,87921,85529,31512,18537,42698,35350,73510,84474,34301,8991,21013,35034,566,38832,19838,35586,37216,39413,55006,12178,59742,856,84563,6900,25632,17437,49786,30723,13847,70845,4044,7843,23944,235976,55530,48942,6518,20939,73769,192653,52936,95207,23895,132542,142982,22632,87452,48042,54018,178468,10728,26230,23559,363,81269,142012,5718,346258,31456,84333,246476,51018,66692,101804,120570,39962,30373,70593,2864,60541,19425,54209,104092,7201,31545,48018,25865,15442,46257,40443,8328,6451,111782,47527,97754,33046,470,245116,31095,39,91934,87208,73470,36708,36521,12801,70624,36272,8892,79768,12427,55454,103756,5908,52390,62962,22720,141138,94634,41689,128402,126390,6628,106394,35527,134394,82727,254651,194502,148064,89549,3202,28359,957,21954,27906,49840,142747,8307,24206,48978,1186,71728,133038,71474,91306,6333,110959,74600,70387,18983,62609,56057,22970,1147,135850,1321,28834,3578,59715,102227,32827,81415,99952,55636,257598,390,22702,35701,85872,402916,39216,189795,14929,19467,10112,144422,61514,5279,63421,134686,41436,8424,51925,10598,132295,124416,4604,194739,210929,57866,31829,51626,50007,9976,91878,61906,56168,81906,60918,61859,40017,23059,16887,40927,62064,12785,32893,32913,21782,93965,20169,44387,79084,38463,11457,93950,27127,157050,2697,337088,5116,54128,48255,33279,8821,27352,25515,124022,65710,28906,38557,33390,1722,104435,72215,38551,12094,30978,25113,6671,37355,175109,42862,98024,65406,221276,59624,118012,64637,78760,86697,21426,1639,40350,12584,67193,84144,31396,7863,143011,69629,63112,9454,28666,65798,46372,134721,6314,51402,30837,151922,2847,38676,38008,92823,136245,17540,5504,109295,205242,37606,5211,214892,1586,20670,208711,137743,19328,40652,16995,20023,14657,154919,34422,12996,13918,38221,47690,16398,2959,37680,89122,6721,198469,91876,172043,83898,101992,26084,94570,3635,76958,22853,76497,38266,176590,168403,44464,142840,79180,184594,1984,41806,83147,11985,6546,366068,59732,24533,271505,8736,39084,222992,93429,28962,58985,86665,8432,30028,14548,32439,54424,165029,55175,27458,69046,121277,46168,33732,20661,24581,135574,123110,37556,79260,72611,16957,12939,46162,58238,44907,72936,253758,41324,32518,96480,11949,124438,65280,43256,34107,53533,43531,37037,28366,45970,32741,173438,6121,194202,62969,26355,30314,58370,28455,1848,50519,82830,90393,21761,295490,10936,256940,133568,44050,20269,4089,27457,21610,219460,36743,14821,101388,52005,13124,30979,140816,167362,26054,18458,60789,34917,40447,26606,33422,9066,3452,83614,5761,20263,137238,25038,91310,101,52322,74548,42572,38084,214054,186568,31802,17665,30620,141936,37730,14420,4265,187218,49640,188208,51441,55388,96452,66659,40869,42039,60967,221027,19234,178581,29105,96050,9165,196118,157335,3738,40354,117436,2965,34136,59659,15570,50843,230035,31444,71260,43886,18316,5387,38500,168508,17406,32174,8828,103373,143806,90367,3560,18719,122310,16508,26719,2541,105429,6645,37998,73190,10591,235916,49737,87112,233941,53188,32193,79154,4544,52905,126477,7580,63501,57314,3216,31337,6541,103083,60846,49,9756,15481,1355,43840,14319,13743,27486,10222,73114,230718,418644,16706,6674,279748,23058,45273,295831,86306,2743,5535,88773,21829,35253,120938,31153,3169,16839,42847,8751,80974,33942,36867,35514,16485,26474,77775,56877,5391,48346,3882,108713,31403,27804,55248,26235,43821,136104,40118,175507,28034,203908,18732,1788,34030,106427,36958,54359,7251,44936,15356,69139,455,157915,22173,140291,50348,43275,82066,49621,54952,15216,36226,96695,66855,6936,1987,8227,196087,4631,68827,99004,47541,110265,17953,147605,110242,58520,31312,38724,329975,642,3155,34497,75937,6207,73843,6120,17249,51429,117746,3218,910,68961,319671,14938,29555,34700,1649,66673,72268,9655,76800,153087,6941,210168,27130,35398,1780,73242,3135,56689,19556,165307,8765,35967,121458,13333,70453,17350,117253,22265,13340,44265,39869,441,3742,135025,23581,33309,16543,17731,13291,157637,283005,21408,101360,63887,52312,83873,5338,233779,23759,186949,34531,177320,38069,156465,91004,19353,59852,68160,14891,1338,1072,29823,1950,28901,81407,313445,73038,84807,162348,240257,37162,138934,16111,58013,41253,102951,16457,96056,19541,56402,67217,41638,94381,89674,29481,37456,80815,151579,13937,13683,132537,19699,134545,67020,29816,222341,141235,427578,48868,129557,233342,23077,87871,16213,18728,16184,9469,37913,19680,2798,171356,178328,13216,50049,72690,71904,124644,55455,7504,29052,41036,266546,19899,30391,188755,8659,59469,16,104298,112943,53865,76203,138226,68857,139953,14125,107625,119795,173133,4398,50273,48808,54390,16466,122086,31835,67035,50971,48859,7508,46427,66477,73021,84615,39985,83076,46779,201569,53336,36443,60865,168164,143810,51393,25548,169307,32896,24485,38424,21837,29087,275813,51674,6714,64883,46169,187369,55186,76192,12852,12018,62134,31067,118303,16542,12125,10579,4928,26291,43854,7091,10946,253716,109062,39283,17261,113012,258512,47764,125126,32646,55892,80279,201623,149872,3192,385,1208,48750,5376,58738,22335,5427,82416,47811,32435,143086,38930,94128,59975,156037,37977,38224,62485,7698,50405,71027,16462,21559,136153,34131,107506,162069,63703,3101,215029,40407,4178,3774,9187,80019,17880,97926,67579,2600,18405,8351,47924,86638,70820,92206,86453,29610,42241,119200,3198,15466,67813,57863,35454,4779,99518,4649,104641,144269,33730,38073,65864,6838,109456,193298,154007,5623,45741,30846,182578,25573,157224,1543,58575,138703,146140,44971,49356,18275,59064,20300,13122,11848,24453,11973,9797,86843,2919,25530,49210,1130,161220,76788,75373,85604,34926,36014,17777,17255,51533,11676,92226,51845,119859,21525,5936,18507,28050,1140,31418,14857,34207,47859,10750,36382,32079,106909,59426,87757,38393,110042,15965,97104,33757,35344,97993,53979,33651,45407,41884,82515,173089,7177,58371,35365,47543,51927,35587,10670,23544,29306,84233,39976,76076,62097,9007,8668,28119,78281,120790,19835,143020,54968,18670,64959,20649,34469,42570,33001,136570,87796,120044,1106,58700,63951,127623,12805,83057,40212,31773,49850,7361,54336,347524,101314,23751,19569,48791,29174,49369,20467,7465,75842,38281,623,112457,60210,28849,51003,94720,6426,90047,85560,43761,3579,85105,34607,90410,118528,7224,42907,111163,18168,6960,161135,191298,5247,100584,127552,171568,20121,91173,12636,54615,20199,63730,98105,2396,40387,14438,125012,4765,33235,12865,45299,37728,82098,77872,114037,59253,19675,24838,398016,102561,11446,17069,57508,178277,65836,99941,26114,2585,271882,136866,50126,11027,155648,118367,14585,8910,123015,335383,40434,41016,53021,14439,87098,176860,201543,121888,2358,9286,5739,22666,54270,37884,169381,33984,93859,16124,89364,72207,51639,76366,99029,65812,2198,12147,174891,194289,6986,30252,88822,21284,11445,288337,160821,33034,100869,43852,25761,52882,1144,103809,1924,84458,86079,43411,13542,139276,18141,34978,41298,7276,26481,173800,33210,17951,142652,33616,33677,2210,19941,98568,2486,192414,80136,12058,235883,50963,249638,29572,27221,47034,6124,72107,63346,97620,158513,299699,40388,23235,37176,224244,198386,121323,67992,23827,63170,17838,106622,158590,26807,5345,23489,91891,55474,74834,37981,13058,5977,72552,34706,26828,145172,19904,21367,34043,960,77092,91381,4733,47446,7680,41697,5170,16960,14741,46101,13656,473,51842,37433,11103,11551,121951,13191,97536,165932,50397,51628,129028,9069,44885,6590,59195,47045,32940,225472,90345,21833,13303,29407,96615,141951,5198,6028,18395,7181,3861,14966,156358,167182,36529,55253,25942,173153,30959,27261,50691,150176,162201,38467,48462,80602,42163,118482,168,108756,26011,17166,54149,456538,22512,91374,13816,90358,131615,18132,226707,1824,28139,26860,42253,93877,77351,65575,8980,80574,22020,27948,40422,91324,76376,13528,39281,91685,82215,122541,144066,1983,193851,17283,26320,2739,194978,4790,26845,42627,61300,65815,174612,55133,4200,191130,79771,158321,52280,166796,221620,62461,11278,4067,88152,83409,31717,121367,13522,47325,37945,10406,174348,249321,154101,64912,29938,51775,17220,15776,166138,78890,84425,54121,42861,16368,24572,291647,10197,32073,22651,11677,97509,26952,35787,18424,41910,71614,94977,72318,41594,70024,275419,37702,60199,7335,39107,61315,18271,18394,33768,87884,104277,123724,7277,56288,71981,189803,49320,3352,6798,14240,8954,69220,94433,57372,28620,68863,193727,85575,42309,41667,67689,42081,22543,44824,12719,28540,114236,101553,27638,27296,4300,5353,4663,19379,94098,3758,95888,95144,80344,87320,28447,259518,12718,71391,152731,37063,24132,31911,104896,15672,103782,1521,4945,72541,23717,122632,15619,87175,206120,29428,189780,61416,28350,44457,972,1175,47233,198738,95789,41907,21953,97034,59341,22864,53713,16873,32971,20693,20954,31336,21477,16169,38370,16412,9019,3841,24599,21938,17085,6484,81198,76413,5849,72514,12320,65247,276175,37234,59796,52642,16312,57349,198507,94148,46134,18958,125552,1747,18725,151873,14901,5490,68287,29470,3689,64794,40814,26018,25692,54450,2703,88278,124886,173087,174e3,24159,179477,24276,46004,201876,209202,445,52876,31948,30206,157610,39180,18439,44124,50469,5774,96278,222758,200216,50290,45486,20435,46986,46276,140133,142326,15569,13363,47522,92583,2182,7135,16853,22998,30272,4952,63263,35623,39096,53789,44864,20053,110392,124213,4630,16087,28221,127787,25839,77481,44693,13464,113146,6983,27069,55717,50102,4760,7107,26186,66507,59145,36032,104182,71328,29425,64317,50781,47465,94298,69706,74899,22754,120756,25108,93077,56834,73286,39928,16218,41699,176763,7555,70819,50083,26895,23315,26014,16773,123079,41712,5719,31516,90427,158540,85051,183128,40864,27505,55392,9058,45224,96857,30901,136622,96557,56304,120061,11501,151448,5773,89743,7769,86069,2935,18471,41628,10114,33660,110170,49479,26745,92846,33221,26731,18795,87076,8550,2100,29972,120289,3077,72490,33784,2630,208722,50861,63483,79029,6419,39467,14302,45286,64207,9686,67513,44170,1050,77246,59266,17055,53801,7150,11111,42432,4278,94579,362117,36175,42902,41933,39002,98489,22913,74161,84773,57036,17556,162288,74485,178760,93867,73635,128860,50362,261,67455,80001,46080,35662,4368,25247,19230,74393,22588,1822,27682,235324,13798,85998,13194,235067,23514,71669,147632,23191,134748,214683,105101,1518,25489,247114,7380,54842,26922,3971,26361,20844,68642,170517,77339,123255,8963,77818,150998,48466,36806,2732,23261,11741,236162,18243,126216,28690,50546,16385,92760,197383,246558,201295,88255,67588,71687,176076,172653,169058,33906,63747,24835,157621,43338,30050,46152,132741,2770,51371,94835,6614,15112,11749,56936,1250,19027,399017,58036,100215,23388,55815,308768,124152,94803,9521,64186,8971,28,30427,62163,7616,103838,35079,29203,131235,7743,17389,10882,37420,61460,228512,85363,41581,131077,62822,119647,10130,54445,26925,19968,29016,24446,74028,24176,61448,67185,9254,8563,119129,9771,99184,37716,39514,10532,221512,258753,218630,55980,23394,32141,61924,66749,32411,3741,36475,26678,77010,44946,91203,128749,116953,20476,49625,53116,13735,102335,29376,51946,83407,67892,59212,34685,21083,1546,112982,32972,74397,1078,190545,16082,86140,58591,89611,101531,10061,105104,76319,20035,17551,52611,169061,190842,100780,23907,90413,115619,9675,34710,193435,49443,129734,11183,258877,16318,136182,126808,44635,27304,192375,2599,125648,47051,12091,23814,721,58800,40137,66726,97930,60877,74487,7942,54326,9841,41428,13762,8211,85383,6950,99177,79806,201786,296464,124087,13144,29741,41721,47634,55088,254286,106408,17041,99064,12942,64086,45233,14005,2612,55827,255,7984,13980,38574,12776,46654,73499,249951,2101,26676,25996,132326,116415,119062,50449,31033,23038,11589,179252,20007,14860,129270,21143,17796,144715,60106,70758,69842,34674,282133,44014,16774,57268,38528,24053,46373,201667,28327,471023,51889,102667,21193,114909,84132,69317,96723,67969,16134,68145,15058,28765,32035,2524,101089,98664,25045,76571,14957,86040,118506,262428,154764,81573,39681,283900,73287,127825,544,80448,52347,38512,175971,15180,45467,33086,46552,48894,81107,43213,36672,54025,76703,8053,7608,13299,56619,20752,238099,54164,105133,1444,32942,953,37564,8e3,66316,119463,106817,404,13667,149108,128597,31267,10269,49836,106150,1484,52330,76965,160486,171648,38456,31263,22424,37738,66245,67467,143369,60471,75610,20895,115528,86070,60854,40796,49347,18989,15030,11371,37578,15779,79867,10187,86462,46402,155626,93200,40229,7090,57547,108053,99598,11088,47505,41218,206017,2173,20988,30219,22919,80563,57566,42369,93141,41675,2407,182519,120495,27154,16702,29456,14349,7958,16688,117177,140375,42467,261919,74916,153569,10836,34742,49526,7621,105997,12212,2270,392377,7755,17959,25086,232152,138791,33847,13860,35316,5811,1344,71259,50452,207539,92635,50359,5821,33674,30255,2086,2587,96264,17543,42,6029,9580,43007,139248,82831,12917,29607,25786,51467,42137,85161,100698,31561,88989,121990,278500,3602,109344,37982,15279,116442,28936,30880,87894,58079,128661,126731,67392,28051,146885,4861,16216,97344,42827,147561,153948,22684,21335,47685,1853,43349,15185,59642,10229,25520,187921,108972,5579,98037,24945,6697,19193,63734,137934,75056,89740,19767,224268,56138,63643,151661,39313,70618,84031,89723,84074,13703,85626,35460,8867,64845,3439,57906,99776,63968,49270,81130,34356,16210,23547,36446,34090,140028,72439,2221,22163,57058,363492,113754,18913,95451,48663,54464,54037,176097,68425,3023,34906,29482,117389,341780,80431,58330,16753,92616,60907,94846,147486,4498,48646,7773,46801,7778,18946,464978,47558,33223,177444,7328,15626,63337,94700,11743,9351,255024,39098,16447,42647,96230,39769,58840,10068,63439,35800,65843,58823,413844,9156,51258,7434,61791,85018,6872,3692,28096,7121,33024,6009,75532,31997,192535,9661,3304,9547,14753,31987,25314,55689,15896,20430,39472,31340,99744,25398,115569,54883,28719,205423,23071,57855,64638,149867,25671,82403,37616,20668,39989,77996,74948,140555,175248,64810,36515,46595,4958,248773,24045,28728,136673,168704,20804,114833,100325,27135,21205,96151,153134,45992,7093,13992,76047,1980,19432,145001,75159,87462,17710,1013,45556,34297,144882,20648,26061,11319,129567,108555,18872,464580,33386,22717,65948,167189,5603,135042,79542,8801,202632,18114,91882,5973,5239,67315,4431,60916,47819,71693,32597,32606,18183,45072,80329,76385,24749,51305,40314,156514,14693,130345,13168,66214,18029,12858,34801,27628,14544,10823,40522,40185,33739,148694,23548,9923,61012,28859,17933,19442,34364,99849,164107,141167,30629,21054,6744,36491,8096,42474,41706,155060,30650,10600,163442,1143,96655,61390,52359,7559,51568,64256,203854,4467,22453,14504,436398,7878,6980,8293,63610,293747,16167,35763,19627,147603,15419,18032,110744,51346,33681,54571,40472,48615,39073,21604,13754,173027,92560,11083,47299,63062,11813,52007,29883,9734,139722,15953,1550,20651,13616,49306,16113,90089,92326,7584,30712,72424,164858,6831,152871,55746,197721,34167,196442,6022,112107,55215,7538,123381,4920,43539,77165,8939,50392,34192,20225,79762,22505,58667,40770,29788,97180,82835,4568,8579,13273,363569,35898,49983,436,36598,3237,131691,62418,35591,8101,4073,379438,65218,76072,33887,2968,27573,212619,288680,68278,72851,150504,217896,6913,121339,22017,35340,51072,43616,75043,31437,10833,81487,4364,22968,41454,106687,85446,19863,109625,149241,524,141850,214404,54376,657,237023,9401,108137,53800,32474,49712,53334,126876,27337,45552,177696,8269,15036,12097,42240,2328,125374,119295,99715,2500,19624,39441,27220,102691,60957,94543,39101,18566,67362,13975,78230,25017,34017,239007,90027,39351,41681,35354,43822,1043,916,58587,141983,94818,38799,75459,41114,67432,16195,36606,59568,22272,126769,31424,68659,12287,134302,257977,5756,207285,95637,47248,117689,19583,77451,22373,12200,54993,117118,34244,29386,34562,53819,71267,64172,77665,49368,7716,59301,25749,45426,194789,17297,2650,1766,32501,45198,20403,20984,6600,14171,94604,19037,5402,29896,9938,59935,109708,88081,145182,44844,39167,352626,164173,35374,45982,6122,154,73419,220487,53834,53601,17992,8609,229321,5610,68098,66815,71012,95069,140968,27396,8957,134489,24656,86659,56598,134852,17316,123838,255436,6613,41610,138033,81452,32023,32396,123687,63398,8693,29712,30407,19296,121188,3551,36099,20032,111948,56624,16547,27453,35916,15378,52039,56849,13489,22214,73177,53097,277349,2157,14029,187886,10260,141743,246460,91880,50869,3788,49486,133566,54950,33120,129337,53768,18333,9525,26902,312251,10297,9020,70759,16647,112432,59260,84609,9818,82766,73569,468,46001,75780,55028,52106,11498,43645,108069,17150,17753,29417,16705,31799,9606,289,122254,115975,8620,6133,255357,56908,14456,133464,43554,79224,11247,29630,160,12756,25464,65960,350428,62521,321796,100359,67358,35169,46172,113128,48988,88868,31094,33266,6847,60887,98188,49659,69117,92977,220228,13947,80181,35103,62170,97351,13475,2440,199768,19498,36597,46971,25234,67806,62881,84717,73648,181966,10488,94149,21550,26655,63436,48375,14405,165650,9621,24439,28043,42735,4490,29963,56674,45373,1934,262446,50855,67098,26898,5261,52696,40644,33900,9440,180286,87162,22940,19704,26936,69769,10254,101759,27406,12243,48e3,73926,113215,54935,5726,192787,4312,106216,9366,11550,52949,23457,212271,277152,133895,108374,6191,96477,29980,218916,58024,54696,40853,91124,65894,91170,65908,252552,6793,29212,15389,44516,122515,52617,35058,9017,103536,39510,49136,19242,130652,662077,74699,47024,31422,8517,73351,24399,13867,128360,4810,4434,61779,111983,61036,17798,110240,59722,102960,39688,10001,23803,23039,176498,56659,44814,134295,17188,77577,74466,226175,102472,154333,63900,111747,18062,41171,79669,32773,408933,42562,28931,30907,107388,43487,2946,240310,23938,24354,319,184983,7927,6488,1422,10790,68809,68209,64775,4361,202,17123,59634,51200,44391,18188,17843,2619,74278,3230,9540,47187,21702,36274,56894,43907,16310,34790,16866,6150,5561,13587,107545,108873,126867,86986,28640,33427,19017,5762,80637,17430,46903,2047,131055,25958,13558,5444,47152,13900,44563,122857,45348,70863,39593,54332,38068,33637,318,40310,143467,18502,24520,11377,62013,28942,27246,28269,83545,17999,59015,90707,30065,15161,34720,1263,37008,2012,6060,98575,92933,5721,299,199555,24578,29223,2985,743,115825,109523,136657,47454,26378,53586,3733,174945,93340,244456,5693,37386,28782,89767,27545,23573,18798,136425,34320,84778,20041,48453,38215,7477,71958,40621,8773,5874,187927,105965,51100,43533,18083,8443,10180,43597,2003,183999,69689,12216,129696,146188,62389,34044,68410,12765,43273,26949,266807,3345,34477,79197,5688,47539,213110,21634,22257,50092,32222,42346,39530,63668,98,134978,74022,5152,59088,174145,37220,9934,9545,118937,5724,87240,19875,15784,40143,23263,87513,181654,285152,37881,263241,4966,43934,10433,186657,6470,74416,225854,25908,142677,246262,32280,6192,75890,45546,143264,135305,29742,47013,77787,11732,126658,8763,37950,21806,57557,113464,89465,108995,164574,23894,22996,23169,15369,23117,17642,130607,40503,36239,280990,44666,9981,40427,147487,26869,168452,32886,32991,46798,240839,15111,70502,65697,88548,44145,28701,48767,31139,206777,35659,181164,166262,14554,171445,31786,66523,76607,17956,6507,31279,90476,116611,167918,6560,1243,115324,80128,41867,55897,187323,37069,32596,189444,145931,13390,105530,65709,26805,6999,55714,41300,22915,68951,22138,21120,22264,10058,19945,33635,56123,99085,10032,5818,6016,46649,57476,35264,94413,112522,262288,93686,83038,14341,23204,28807,66084,77987,6101,126673,7133,38126,5923,122091,170240,97772,46874,215746,43948,41622,3272,55596,8332,146411,251315,13533,8561,81521,115449,48616,175175,2063,186556,3036,134537,75772,29728,82360,22973,186559,86348,89100,38388,82297,45610,2613,87082,9986,177812,57884,23591,47485,42543,33582,44713,74439,257444,252451,31825,35631,38540,33066,5147,13973,4343,51830,70378,22827,26448,95560,36896,241741,48067,203953,298860,61620,20450,3220,67272,6586,107662,100160,108684,6929,57226,4762,7457,1320,40404,77204,99309,62750,208653,59977,44e3,74315,34332,5819,172217,64904,114077,18147,84012,1791,98456,90930,21446,116669,103938,7422,85140,59713,5768,326211,16239,75411,13229,29398,10758,236107,1539,112472,95979,152154,151294,306,21196,38146,10700,6891,84282,109646,56492,40539,6589,119491,51354,30685,140209,136906,29622,73617,49553,70525,51671,166869,139616,74395,37439,49595,45678,11959,33211,86560,52434,9282,62690,112155,130810,5243,108261,99970,265613,72551,80049,6391,33365,90721,66737,69872,87011,1860,9032,112544,60905,37371,89015,140351,19076,850,373531,2802,36725,218795,72062,28990,16550,24614,7815,6187,26336,33373,32162,42791,73555,32062,23386,10244,56392,49442,27076,136262,12412,14883,1134,33675,97153,199281,15608,100152,74072,47942,254301,36451,16026,10687,65067,56708,254030,30290,50490,13864,57941,259331,35588,23485,43486,24869,21620,92971,22072,88645,1048,182050,13343,32452,14825,19509,3325,216938,45740,99716,189082,53740,78245,25609,24311,176777,47340,308354,40669,66085,14102,125339,9225,128709,97207,1271,200933,78439,113451,88975,18324,46521,11819,18570,141756,72512,170020,52754,63550,118515,103073,93330,32736,50499,14722,31600,68452,398867,29316,172786,18417,104924,2606,5670,84818,16288,67106,59580,82929,607401,291,85829,359,15897,35830,50696,65630,52672,22115,356968,29895,40837,231192,34024,38957,26722,406,23335,124952,72068,68804,13268,147101,164740,276569,162596,66943,11569,26654,66358,4777,23229,102127,5848,978,2921,59666,5371,28212,90108,42938,39320,2499,4271,108792,33510,125072,71653,65239,38250,66357,38577,13964,86251,35708,50755,36010,29448,12209,3844,38222,206337,100876,67827,137088,14167,252225,84163,195270,1306,5703,54198,779,46802,22028,51124,86759,70560,113164,35685,162145,45471,34561,422,2611,6464,47486,19223,38246,9191,18331,89942,243642,212364,15893,17518,22617,6409,30046,126182,59716,36560,104428,18846,26592,19458,50793,147333,30826,1388,27647,10922,14495,33545,19269,135828,39727,41601,46931,233379,49169,131130,182112,16276,82381,118209,142445,128310,19672,28740,82907,33436,3118,102206,28723,24819,41937,38854,5157,3881,111491,1142,9776,421673,152241,29309,14961,87854,6054,15424,3796,82656,54996,2108,55367,239450,154525,9643,118103,106041,64601,68549,48707,30266,25772,18740,9462,229669,91798,112152,191327,14493,72828,8175,66636,236474,25817,87351,129027,76653,20422,22983,71240,27846,44661,12399,46158,77704,53101,35032,11072,17300,109294,33638,24408,1895,11241,760,17584,82479,125877,63150,141075,34259,23274,81698,15732,43577,48340,91584,14688,16379,24481,150280,96420,262050,48635,43727,61819,56268,72003,88178,17281,79912,13218,122519,125295,166396,11811,2171,118930,67746,17636,178278,174656,95661,173039,83845,79689,17473,98555,127696,203415,54730,22925,232239,9309,12136,175026,20740,180188,10747,39816,314017,266131,10040,175732,112550,220651,31974,37393,888,23008,86799,4303,64905,148467,75337,251,3284,370102,50264,9835,5438,23655,4481,29851,329,12855,7162,64931,78141,12804,42372,296771,83547,18624,34874,86271,3360,48665,77735,88767,11463,63527,28889,22258,29140,194315,113924,25499,6406,31334,1845,4802,49184,43455,35469,127594,92970,61038,115005,38840,87761,106838,8811,20572,55637,11162,96721,132425,108925,2948,125457,36356,3502,75270,27622,127192,2561,123095,49394,61155,16897,110064,9699,89448,53356,19628,220310,21622,83036,9885,112214,6087,26713,17901,161912,91492,3440,68594,9266,92238,8087,6866,150194,72175,80701,13459,31836,43243,239700,95846,44749,50647,21945,230538,120612,132371,244604,5193,105637,34661,41341,68775,85393,1874,8771,33718,49672,77403,595452,99507,6490,58895,128742,7704,39239,73217,43816,62824,37804,199976,22361,80005,87514,94832,14089,4574,139975,59142,75523,100268,43906,53442,15152,2547,186002,17011,19513,204282,3343,60568,128318,119250,4298,51871,41336,71759,21921,45074,98169,145889,99427,11350,1237,5520,28799,7803,53702,21026,136352,38293,128690,12158,90132,44600,10184,26957,39459,126025,78904,82999,59373,39301,150198,120529,153042,20177,50089,14764,271571,30530,123161,38975,101562,22941,5648,124654,109243,69817,71675,49162,106884,21241,107795,30258,16572,188262,141456,7688,60718,8271,11044,32440,104608,103419,236109,93156,43293,128929,42107,67180,25201,115254,185488,130954,72813,167547,20537,39969,38432,22582,184022,1139,27199,5655,17767,97412,122606,209377,27070,35871,326617,188954,42680,73512,80911,22629,3011,95021,315242,157737,383,41821,41808,19335,27950,15674,25677,110950,35375,76835,59108,57370,35262,16569,160415,37706,78086,32041,49691,137143,9782,172080,50148,77917,6323,10110,69172,17711,21795,59511,76184,135114,31046,132319,59105,157578,20549,80778,57649,158421,65143,4575,72235,21899,10797,92745,34035,106079,80159,4508,78304,25350,75457,46458,32937,25623,47,8531,104751,84953,8138,36508,187199,66310,115274,13253,32461,38536,1916,42007,187160,35055,26325,84394,35963,94216,45590,97782];var Mi=15,Oi=class{log;peerRouting;routingTable;refreshInterval;refreshQueryTimeout;commonPrefixLengthRefreshedAt;refreshTimeoutId;constructor(e,t){let{peerRouting:n,routingTable:i,refreshInterval:s,refreshQueryTimeout:o,logPrefix:a}=t;this.log=e.logger.forComponent(`${a}:routing-table:refresh`),this.peerRouting=n,this.routingTable=i,this.refreshInterval=s??3e5,this.refreshQueryTimeout=o??3e4,this.commonPrefixLengthRefreshedAt=[],this.refreshTable=this.refreshTable.bind(this)}async afterStart(){this.log(`refreshing routing table every ${this.refreshInterval}ms`),this.refreshTable(!0)}async stop(){this.refreshTimeoutId!=null&&clearTimeout(this.refreshTimeoutId)}refreshTable(e=!1){this.log("refreshing routing table");let t=this._maxCommonPrefix(),n=this._getTrackedCommonPrefixLengthsForRefresh(t);this.log(`max common prefix length ${t}`),this.log(`tracked CPLs [ ${n.map(i=>i.toISOString()).join(", ")} ]`),Promise.all(n.map(async(i,s)=>{try{if(await this._refreshCommonPrefixLength(s,i,e),this._numPeersForCpl(t)===0){let o=Math.min(2*(s+1),n.length-1);for(let a=s+1;a<o+1;a++)try{await this._refreshCommonPrefixLength(a,i,e)}catch(c){this.log.error(c)}}}catch(o){this.log.error(o)}})).catch(i=>{this.log.error(i)}).then(()=>{this.refreshTimeoutId=setTimeout(this.refreshTable,this.refreshInterval),this.refreshTimeoutId.unref!=null&&this.refreshTimeoutId.unref()}).catch(i=>{this.log.error(i)})}async _refreshCommonPrefixLength(e,t,n){if(!n&&t.getTime()>Date.now()-this.refreshInterval){this.log("not running refresh for cpl %s as time since last refresh not above interval",e);return}let i=await this._generateRandomPeerId(e);this.log("starting refreshing cpl %s with key %p (routing table size was %s)",e,i,this.routingTable.size);let s=AbortSignal.timeout(this.refreshQueryTimeout);ye(1/0,s);let o=await Pi(this.peerRouting.getClosestPeers(i.toMultihash().bytes,{signal:s}));this.log(`found ${o} peers that were close to imaginary peer %p`,i),this.log("finished refreshing cpl %s with key %p (routing table size is now %s)",e,i,this.routingTable.size)}_getTrackedCommonPrefixLengthsForRefresh(e){e>Mi&&(e=Mi);let t=[];for(let n=0;n<=e;n++)t[n]=this.commonPrefixLengthRefreshedAt[n]??new Date;return t}async _generateRandomPeerId(e){if(this.routingTable.kb==null)throw new Error("Routing table not started");let t=X1(2),n=(t[1]<<8)+t[0],i=await this._makePeerId(this.routingTable.kb.localPeer.kadId,n,e),s=be(i);return Je(s)}async _makePeerId(e,t,n){if(n>Mi)throw new Error(`Cannot generate peer ID for common prefix length greater than ${Mi}`);let o=new DataView(e.buffer,e.byteOffset,e.byteLength).getUint16(0,!1)^32768>>n,a=65535<<16-(n+1),c=o&a|t&~a,l=P4[c],u=new ArrayBuffer(34),f=new DataView(u,0,u.byteLength);return f.setUint8(0,mt.code),f.setUint8(1,32),f.setUint32(2,l,!1),new Uint8Array(f.buffer,f.byteOffset,f.byteLength)}_maxCommonPrefix(){let e=0;for(let t of this._prefixLengths())t>e&&(e=t);return e}_numPeersForCpl(e){let t=0;for(let n of this._prefixLengths())n===e&&t++;return t}*_prefixLengths(){if(this.routingTable.kb!=null)for(let{kadId:e}of this.routingTable.kb.toIterable()){let t=et(this.routingTable.kb.localPeer.kadId,e),n=0;for(let i of t)if(i===0)n++;else break;yield n}}};function Vi(r){return r[Symbol.asyncIterator]!=null}var Fi=r=>{let e=se(r),t=pe(e);return He(r,t),Fi.bytes=e,t};Fi.bytes=0;function Hi(r,e){e=e??{};let t=e.lengthEncoder??Fi;function*n(i){let s=t(i.byteLength);s instanceof Uint8Array?yield s:yield*s,i instanceof Uint8Array?yield i:yield*i}return Vi(r)?async function*(){for await(let i of r)yield*n(i)}():function*(){for(let i of r)yield*n(i)}()}Hi.single=(r,e)=>{e=e??{};let t=e.lengthEncoder??Fi;return new Fe(t(r.byteLength),r)};var qi=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},Ki=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},$i=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"},Cn=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var l7=8,u7=1024*1024*4,or;(function(r){r[r.LENGTH=0]="LENGTH",r[r.DATA=1]="DATA"})(or||(or={}));var r2=r=>{let e=Me(r);return r2.bytes=se(e),e};r2.bytes=0;function _n(r,e){let t=new Fe,n=or.LENGTH,i=-1,s=e?.lengthDecoder??r2,o=e?.maxLengthLength??l7,a=e?.maxDataLength??u7;function*c(){for(;t.byteLength>0;){if(n===or.LENGTH)try{if(i=s(t),i<0)throw new qi("Invalid message length");if(i>a)throw new Ki("Message length too long");let l=s.bytes;t.consume(l),e?.onLength!=null&&e.onLength(i),n=or.DATA}catch(l){if(l instanceof RangeError){if(t.byteLength>o)throw new $i("Message length length too long");break}throw l}if(n===or.DATA){if(t.byteLength<i)break;let l=t.sublist(0,i);t.consume(i),e?.onData!=null&&e.onData(l),yield l,n=or.LENGTH}}}return Vi(r)?async function*(){for await(let l of r)t.append(l),yield*c();if(t.byteLength>0)throw new Cn("Unexpected end of input")}():function*(){for(let l of r)t.append(l),yield*c();if(t.byteLength>0)throw new Cn("Unexpected end of input")}()}_n.fromReader=(r,e)=>{let t=1,n=async function*(){for(;;)try{let{done:s,value:o}=await r.next(t);if(s===!0)return;o!=null&&(yield o)}catch(s){if(s.code==="ERR_UNDER_READ")return{done:!0,value:null};throw s}finally{t=1}}();return _n(n,{...e??{},onLength:s=>{t=s}})};var zi=class{providers;log;constructor(e,t){this.log=e.logger.forComponent(`${t.logPrefix}:rpc:handlers:add-provider`),this.providers=t.providers}async handle(e,t){if(t.key==null||t.key.length===0)throw new ve("Missing key");let n;try{n=ne.decode(t.key)}catch{throw new ve("Invalid CID")}(t.providers==null||t.providers.length===0)&&this.log.error("no providers found in message"),this.log("%p asked us to store provider record for for %c",e,n),await Promise.all(t.providers.map(async i=>{if(!e.equals(i.id)){this.log("invalid provider peer %p from %p",i.id,e);return}if(i.multiaddrs.length<1){this.log("no valid addresses for provider %p. Ignore",e);return}this.log("received provider %p for %s (addrs %s)",e,n,i.multiaddrs.map(o=>sr(o).toString()));let s=be(i.id);await this.providers.addProvider(n,Je(s))}))}};var Gi=class{peerRouting;peerInfoMapper;peerId;addressManager;log;constructor(e,t){let{peerRouting:n,logPrefix:i}=t;this.log=e.logger.forComponent(`${i}:rpc:handlers:find-node`),this.peerId=e.peerId,this.addressManager=e.addressManager,this.peerRouting=n,this.peerInfoMapper=t.peerInfoMapper}async handle(e,t){if(this.log("incoming request from %p for peers closer to %b",e,t.key),t.key==null)throw new ve("Invalid FIND_NODE message received - key was missing");let n=await this.peerRouting.getCloserPeersOffline(t.key,e);ee(this.peerId.toMultihash().bytes,t.key)&&n.push({id:this.peerId,multiaddrs:this.addressManager.getAddresses().map(s=>s.decapsulateCode(G("p2p").code))});let i={type:M.FIND_NODE,clusterLevel:t.clusterLevel,closer:n.map(this.peerInfoMapper).filter(({multiaddrs:s})=>s.length).map(s=>({id:s.id.toMultihash().bytes,multiaddrs:s.multiaddrs.map(o=>o.bytes)})),providers:[]};return i.closer.length===0&&this.log("could not find any peers closer to %b than %p",t.key,e),i}};var ji=class{peerRouting;providers;peerStore;peerInfoMapper;log;constructor(e,t){let{peerRouting:n,providers:i,logPrefix:s}=t;this.log=e.logger.forComponent(`${s}:rpc:handlers:get-providers`),this.peerStore=e.peerStore,this.peerRouting=n,this.providers=i,this.peerInfoMapper=t.peerInfoMapper}async handle(e,t){if(t.key==null)throw new ve("Invalid GET_PROVIDERS message received - key was missing");let n;try{n=ne.decode(t.key)}catch{throw new ve("Invalid CID")}this.log("%p asking for providers for %s",e,n);let[i,s]=await Promise.all([this.providers.getProviders(n),this.peerRouting.getCloserPeersOffline(t.key,e)]),o=await this._getPeers(i),a=await this._getPeers(s.map(({id:l})=>l)),c={type:M.GET_PROVIDERS,key:t.key,clusterLevel:t.clusterLevel,closer:a.map(this.peerInfoMapper).filter(({multiaddrs:l})=>l.length).map(l=>({id:l.id.toMultihash().bytes,multiaddrs:l.multiaddrs.map(u=>u.bytes)})),providers:o.map(this.peerInfoMapper).filter(({multiaddrs:l})=>l.length).map(l=>({id:l.id.toMultihash().bytes,multiaddrs:l.multiaddrs.map(u=>u.bytes)}))};return this.log("got %s providers %s closerPeers",c.providers.length,c.closer.length),c}async _getAddresses(e){return[]}async _getPeers(e){let t=[];for(let n of e)try{let i=await this.peerStore.get(n),s=this.peerInfoMapper({id:n,multiaddrs:i.addresses.map(({multiaddr:o})=>o)});s.multiaddrs.length>0&&t.push(s)}catch(i){if(i.name!=="NotFoundError")throw i}return t}};var Zi=class{peerStore;datastore;peerRouting;log;constructor(e,t){this.log=e.logger.forComponent(`${t.logPrefix}:rpc:handlers:get-value`),this.peerStore=e.peerStore,this.datastore=e.datastore,this.peerRouting=t.peerRouting}async handle(e,t){let n=t.key;if(this.log("%p asked for key %b",e,n),n==null||n.length===0)throw new ve("Invalid key");let i={type:M.GET_VALUE,key:n,clusterLevel:t.clusterLevel,closer:[],providers:[]};if(W3(n)){this.log("is public key");let a=Q3(n),c;try{let l=await this.peerStore.get(a);if(l.id.publicKey==null)throw new Ge("No public key found in key book");c=Ir(l.id.publicKey)}catch(l){if(l.name!=="NotFoundError")throw l}if(c!=null)return this.log("returning found public key"),i.record=new le(n,c,new Date).serialize(),i}let[s,o]=await Promise.all([this._checkLocalDatastore(n),this.peerRouting.getCloserPeersOffline(n,e)]);return s!=null&&(this.log("had record for %b in local datastore",n),i.record=s.serialize()),o.length>0&&(this.log("had %s closer peers in routing table",o.length),i.closer=o.map(a=>({id:a.id.toMultihash().bytes,multiaddrs:a.multiaddrs.map(c=>c.bytes)}))),i}async _checkLocalDatastore(e){this.log("checkLocalDatastore looking for %b",e);let t=Gt(e),n;try{n=await this.datastore.get(t)}catch(s){if(s.name==="NotFoundError")return;throw s}let i=le.deserialize(n);if(i.timeReceived==null||Date.now()-i.timeReceived.getTime()>1296e5){await this.datastore.delete(t);return}return i}};var Wi=class{log;constructor(e,t){this.log=e.logger.forComponent(`${t.logPrefix}:rpc:handlers:ping`)}async handle(e,t){return this.log("ping from %p",e),t}};var Qi=class{components;validators;log;constructor(e,t){let{validators:n}=t;this.components=e,this.log=e.logger.forComponent(`${t.logPrefix}:rpc:handlers:put-value`),this.validators=n}async handle(e,t){let n=t.key;if(this.log("%p asked us to store value for key %b",e,n),t.record==null){let i=`Empty record from: ${e.toString()}`;throw this.log.error(i),new ve(i)}try{let i=le.deserialize(t.record);await _r(this.validators,i),i.timeReceived=new Date;let s=Gt(i.key);await this.components.datastore.put(s,i.serialize().subarray()),this.log("put record for %b into datastore under key %k",n,s)}catch(i){this.log("did not put record for key %b into datastore %o",n,i)}return t}};var Yi=class{handlers;routingTable;log;metrics;constructor(e,t){let{providers:n,peerRouting:i,validators:s,logPrefix:o,peerInfoMapper:a}=t;this.metrics={operations:e.metrics?.registerCounterGroup(`${o.replaceAll(":","_")}_inbound_rpc_requests_total`),errors:e.metrics?.registerCounterGroup(`${o.replaceAll(":","_")}_inbound_rpc_errors_total`)},this.log=e.logger.forComponent(`${o}:rpc`),this.routingTable=t.routingTable,this.handlers={[M.GET_VALUE.toString()]:new Zi(e,{peerRouting:i,logPrefix:o}),[M.PUT_VALUE.toString()]:new Qi(e,{validators:s,logPrefix:o}),[M.FIND_NODE.toString()]:new Gi(e,{peerRouting:i,logPrefix:o,peerInfoMapper:a}),[M.ADD_PROVIDER.toString()]:new zi(e,{providers:n,logPrefix:o}),[M.GET_PROVIDERS.toString()]:new ji(e,{peerRouting:i,providers:n,logPrefix:o,peerInfoMapper:a}),[M.PING.toString()]:new Wi(e,{logPrefix:o})}}async handleMessage(e,t){try{await this.routingTable.add(e)}catch(i){this.log.error("Failed to update the kbucket store",i)}let n=this.handlers[t.type];if(n==null){this.log.error(`no handler found for message type: ${t.type}`);return}try{return this.metrics.operations?.increment({[t.type]:!0}),await n.handle(e,t)}catch{this.metrics.errors?.increment({[t.type]:!0})}}onIncomingStream(e){Promise.resolve().then(async()=>{let{stream:t,connection:n}=e,i=n.remotePeer;try{await this.routingTable.add(i)}catch(o){this.log.error(o)}let s=this;await Pt(t,o=>_n(o),async function*(o){for await(let a of o){let c=Ke.decode(a);s.log("incoming %s from %p",c.type,i);let l=await s.handleMessage(i,c);l!=null&&(yield Ke.encode(l))}},o=>Hi(o),t)}).catch(t=>{this.log.error(t)})}};var Xi=class extends Pe{log;components;protocol;running;registrarId;constructor(e,t){super();let{protocol:n,logPrefix:i}=t;this.components=e,this.log=e.logger.forComponent(`${i}:topology-listener`),this.running=!1,this.protocol=n}isStarted(){return this.running}async start(){this.running||(this.running=!0,this.registrarId=await this.components.registrar.register(this.protocol,{onConnect:e=>{this.log("observed peer %p with protocol %s",e,this.protocol),this.dispatchEvent(new CustomEvent("peer",{detail:e}))}}))}async stop(){this.running=!1,this.registrarId!=null&&(this.components.registrar.unregister(this.registrarId),this.registrarId=void 0)}};var n2=class{dht;constructor(e){this.dht=e}async provide(e,t={}){await rs(this.dht.provide(e,t))}async*findProviders(e,t={}){for await(let n of this.dht.findProviders(e,t))n.name==="PROVIDER"&&(yield*n.providers)}async put(e,t,n){await rs(this.dht.put(e,t,n))}async get(e,t){for await(let n of this.dht.get(e,t))if(n.name==="VALUE")return n.value;throw new Ge("Could not find value for key")}},i2=class{dht;constructor(e){this.dht=e}async findPeer(e,t={}){for await(let n of this.dht.findPeer(e,t))if(n.name==="FINAL_PEER")return n.peer;throw new Ge("Peer not found")}async*getClosestPeers(e,t={}){for await(let n of this.dht.getClosestPeers(e,t))n.name==="FINAL_PEER"&&(yield n.peer)}},h7=32,d7=64,Ji=class extends Pe{protocol;routingTable;providers;network;peerRouting;components;log;running;kBucketSize;clientMode;validators;selectors;queryManager;contentFetching;contentRouting;routingTableRefresh;rpc;topologyListener;querySelf;maxInboundStreams;maxOutboundStreams;dhtContentRouting;dhtPeerRouting;peerInfoMapper;constructor(e,t={}){super();let{kBucketSize:n,clientMode:i,validators:s,selectors:o,querySelfInterval:a,protocol:c,logPrefix:l,pingTimeout:u,pingConcurrency:f,maxInboundStreams:h,maxOutboundStreams:g,providers:y}=t,p=l??"libp2p:kad-dht";this.running=!1,this.components=e,this.log=e.logger.forComponent(p),this.protocol=c??E2,this.kBucketSize=n??20,this.clientMode=i??!0,this.maxInboundStreams=h??h7,this.maxOutboundStreams=g??d7,this.peerInfoMapper=t.peerInfoMapper??hi,this.routingTable=new Di(e,{kBucketSize:n,pingTimeout:u,pingConcurrency:f,protocol:this.protocol,logPrefix:p}),this.providers=new ki(e,y??{}),this.validators={...O3,...s},this.selectors={...s0,...o},this.network=new Bi(e,{protocol:this.protocol,logPrefix:p});let d=ie();t.allowQueryWithZeroPeers===!0&&d.resolve(),this.queryManager=new Li(e,{disjointPaths:Math.ceil(this.kBucketSize/2),logPrefix:p,initialQuerySelfHasRun:d,routingTable:this.routingTable}),this.peerRouting=new Si(e,{routingTable:this.routingTable,network:this.network,validators:this.validators,queryManager:this.queryManager,logPrefix:p}),this.contentFetching=new di(e,{validators:this.validators,selectors:this.selectors,peerRouting:this.peerRouting,queryManager:this.queryManager,network:this.network,logPrefix:p}),this.contentRouting=new yi(e,{network:this.network,peerRouting:this.peerRouting,queryManager:this.queryManager,routingTable:this.routingTable,providers:this.providers,logPrefix:p}),this.routingTableRefresh=new Oi(e,{peerRouting:this.peerRouting,routingTable:this.routingTable,logPrefix:p}),this.rpc=new Yi(e,{routingTable:this.routingTable,providers:this.providers,peerRouting:this.peerRouting,validators:this.validators,logPrefix:p,peerInfoMapper:this.peerInfoMapper}),this.topologyListener=new Xi(e,{protocol:this.protocol,logPrefix:p}),this.querySelf=new Ci(e,{peerRouting:this.peerRouting,interval:a,initialInterval:t.initialQuerySelfInterval,logPrefix:p,initialQuerySelfHasRun:d,routingTable:this.routingTable}),this.network.addEventListener("peer",w=>{let v=w.detail;this.onPeerConnect(v).catch(m=>{this.log.error("could not add %p to routing table",v.id,m)}),this.dispatchEvent(new CustomEvent("peer",{detail:v}))}),this.topologyListener.addEventListener("peer",w=>{let v=w.detail;Promise.resolve().then(async()=>{let m=await this.components.peerStore.get(v),A={id:v,multiaddrs:m.addresses.map(({multiaddr:R})=>R),protocols:m.protocols};await this.onPeerConnect(A)}).catch(m=>{this.log.error("could not add %p to routing table",v,m)})}),this.dhtPeerRouting=new i2(this),this.dhtContentRouting=new n2(this),t.clientMode==null&&e.events.addEventListener("self:peer:update",w=>{this.log("received update of self-peer info"),Promise.resolve().then(async()=>{let v=w.detail.peer.addresses.some(({multiaddr:A})=>X3(A)),m=this.getMode();v&&m==="client"?await this.setMode("server"):m==="server"&&!v&&await this.setMode("client")}).catch(v=>{this.log.error("error setting dht server mode",v)})})}[Symbol.toStringTag]="@libp2p/kad-dht";[x2]=["@libp2p/content-routing","@libp2p/peer-routing","@libp2p/peer-discovery"];[v2]=["@libp2p/identify"];get[p2](){return this.dhtContentRouting}get[m2](){return this.dhtPeerRouting}get[g2](){return this}async onPeerConnect(e){if(this.log.trace("peer %p connected",e.id),e=this.peerInfoMapper(e),e.multiaddrs.length===0){this.log.trace("ignoring %p as there were no valid addresses in %s after filtering",e.id,e.multiaddrs.map(t=>t.toString()));return}try{await this.routingTable.add(e.id)}catch(t){this.log.error("could not add %p to routing table",e.id,t)}}isStarted(){return this.running}getMode(){return this.clientMode?"client":"server"}async setMode(e){if(e===this.getMode()){this.log("already in %s mode",e);return}e==="client"?(this.log("enabling client mode"),this.clientMode=!0,await this.components.registrar.unhandle(this.protocol)):(this.log("enabling server mode"),this.clientMode=!1,await this.components.registrar.handle(this.protocol,this.rpc.onIncomingStream.bind(this.rpc),{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams}))}async start(){this.running=!0,await this.setMode(this.clientMode?"client":"server"),await b2(this.querySelf,this.providers,this.queryManager,this.network,this.routingTable,this.topologyListener,this.routingTableRefresh)}async stop(){this.running=!1,await w2(this.querySelf,this.providers,this.queryManager,this.network,this.routingTable,this.routingTableRefresh,this.topologyListener)}async*put(e,t,n={}){yield*this.contentFetching.put(e,t,n)}async*get(e,t={}){yield*this.contentFetching.get(e,t)}async*provide(e,t={}){yield*this.contentRouting.provide(e,this.components.addressManager.getAddresses(),t)}async*findProviders(e,t={}){yield*this.contentRouting.findProviders(e,t)}async*findPeer(e,t={}){yield*this.peerRouting.findPeer(e,t)}async*getClosestPeers(e,t={}){yield*this.peerRouting.getClosestPeers(e,t)}async refreshRoutingTable(){this.routingTableRefresh.refreshTable(!0)}};var s2;(function(r){r[r.SEND_QUERY=0]="SEND_QUERY",r[r.PEER_RESPONSE=1]="PEER_RESPONSE",r[r.FINAL_PEER=2]="FINAL_PEER",r[r.QUERY_ERROR=3]="QUERY_ERROR",r[r.PROVIDER=4]="PROVIDER",r[r.VALUE=5]="VALUE",r[r.ADD_PEER=6]="ADD_PEER",r[r.DIAL_PEER=7]="DIAL_PEER"})(s2||(s2={}));function p7(r={}){return e=>new Ji(e,r)}return G4(g7);})();
 /*! Bundled license information:
 
 pvtsutils/build/index.js:
diff --git a/node_modules/@libp2p/kad-dht/dist/src/kad-dht.d.ts.map b/node_modules/@libp2p/kad-dht/dist/src/kad-dht.d.ts.map
index ce039a9..a251ada 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/kad-dht.d.ts.map
+++ b/node_modules/@libp2p/kad-dht/dist/src/kad-dht.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"kad-dht.d.ts","sourceRoot":"","sources":["../../src/kad-dht.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"kad-dht.d.ts","sourceRoot":"","sources":["../../src/kad-dht.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/src/kad-dht.js b/node_modules/@libp2p/kad-dht/dist/src/kad-dht.js
index 275963c..be3356b 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/kad-dht.js
+++ b/node_modules/@libp2p/kad-dht/dist/src/kad-dht.js
@@ -270,10 +270,10 @@ export class KadDHT extends TypedEventEmitter {
         return this;
     }
     async onPeerConnect(peerData) {
-        this.log('peer %p connected', peerData.id);
+        this.log.trace('peer %p connected', peerData.id);
         peerData = this.peerInfoMapper(peerData);
         if (peerData.multiaddrs.length === 0) {
-            this.log('ignoring %p as there were no valid addresses in %s after filtering', peerData.id, peerData.multiaddrs.map(addr => addr.toString()));
+            this.log.trace('ignoring %p as there were no valid addresses in %s after filtering', peerData.id, peerData.multiaddrs.map(addr => addr.toString()));
             return;
         }
         try {
@@ -299,10 +299,14 @@ export class KadDHT extends TypedEventEmitter {
      * If 'server' this node will respond to DHT queries, if 'client' this node will not
      */
     async setMode(mode) {
-        await this.components.registrar.unhandle(this.protocol);
+        if (mode === this.getMode()) {
+            this.log('already in %s mode', mode);
+            return;
+        }
         if (mode === 'client') {
             this.log('enabling client mode');
             this.clientMode = true;
+            await this.components.registrar.unhandle(this.protocol);
         }
         else {
             this.log('enabling server mode');
diff --git a/node_modules/@libp2p/kad-dht/dist/src/kad-dht.js.map b/node_modules/@libp2p/kad-dht/dist/src/kad-dht.js.map
index 1905c88..92eed0f 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/kad-dht.js.map
+++ b/node_modules/@libp2p/kad-dht/dist/src/kad-dht.js.map
@@ -1 +1 @@
-{"version":3,"file":"kad-dht.js","sourceRoot":"","sources":["../../src/kad-dht.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"kad-dht.js","sourceRoot":"","sources":["../../src/kad-dht.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/src/network.d.ts.map b/node_modules/@libp2p/kad-dht/dist/src/network.d.ts.map
index 35d5f2e..850e308 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/network.d.ts.map
+++ b/node_modules/@libp2p/kad-dht/dist/src/network.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"network.d.ts","sourceRoot":"","sources":["../../src/network.ts"],"names":[],"mappings":"AAAA,OAAO,EAA0B,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AAE7E,OAAO,EAAmB,KAAK,mBAAmB,EAAE,MAAM,gCAAgC,CAAA;AAE1F,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAA;AAQ1C,OAAO,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,YAAY,CAAA;AAC9D,OAAO,KAAK,EAAE,YAAY,EAAU,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAElH,MAAM,WAAW,WAAW;IAC1B,QAAQ,EAAE,MAAM,CAAA;IAChB,SAAS,EAAE,MAAM,CAAA;IACjB,OAAO,CAAC,EAAE,IAAI,CAAC,mBAAmB,EAAE,aAAa,GAAG,SAAS,CAAC,CAAA;CAC/D;AAED,UAAU,aAAa;IACrB,MAAM,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAA;CAC9B;AAED;;GAEG;AACH,qBAAa,OAAQ,SAAQ,iBAAiB,CAAC,aAAa,CAAE,YAAW,SAAS;IAChF,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;IAC5B,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAQ;IACjC,OAAO,CAAC,OAAO,CAAS;IACxB,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAkB;IAC7C,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAiB;IAEzC;;OAEG;gBACU,UAAU,EAAE,gBAAgB,EAAE,IAAI,EAAE,WAAW;IAe5D;;OAEG;IACG,KAAK,IAAK,OAAO,CAAC,IAAI,CAAC;IAQ7B;;OAEG;IACG,IAAI,IAAK,OAAO,CAAC,IAAI,CAAC;IAI5B;;OAEG;IACH,SAAS,IAAK,OAAO;IAIrB;;OAEG;IACK,WAAW,CAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,GAAE,cAAmB,GAAG,cAAc,CAAC,UAAU,CAAC;IAkDjH;;OAEG;IACK,WAAW,CAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,GAAE,cAAmB,GAAG,cAAc,CAAC,UAAU,CAAC;IA4CjH;;OAEG;IACG,aAAa,CAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC;IAMjG;;;;OAIG;IACG,iBAAiB,CAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC;CAuBzG"}
\ No newline at end of file
+{"version":3,"file":"network.d.ts","sourceRoot":"","sources":["../../src/network.ts"],"names":[],"mappings":"AAAA,OAAO,EAA0B,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AAE7E,OAAO,EAAmB,KAAK,mBAAmB,EAAE,MAAM,gCAAgC,CAAA;AAE1F,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAA;AAQ1C,OAAO,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,YAAY,CAAA;AAC9D,OAAO,KAAK,EAAE,YAAY,EAAU,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAElH,MAAM,WAAW,WAAW;IAC1B,QAAQ,EAAE,MAAM,CAAA;IAChB,SAAS,EAAE,MAAM,CAAA;IACjB,OAAO,CAAC,EAAE,IAAI,CAAC,mBAAmB,EAAE,aAAa,GAAG,SAAS,CAAC,CAAA;CAC/D;AAED,UAAU,aAAa;IACrB,MAAM,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAA;CAC9B;AAED;;GAEG;AACH,qBAAa,OAAQ,SAAQ,iBAAiB,CAAC,aAAa,CAAE,YAAW,SAAS;IAChF,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;IAC5B,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAQ;IACjC,OAAO,CAAC,OAAO,CAAS;IACxB,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAkB;IAC7C,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAiB;IAEzC;;OAEG;gBACU,UAAU,EAAE,gBAAgB,EAAE,IAAI,EAAE,WAAW;IAe5D;;OAEG;IACG,KAAK,IAAK,OAAO,CAAC,IAAI,CAAC;IAQ7B;;OAEG;IACG,IAAI,IAAK,OAAO,CAAC,IAAI,CAAC;IAI5B;;OAEG;IACH,SAAS,IAAK,OAAO;IAIrB;;OAEG;IACK,WAAW,CAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,GAAE,cAAmB,GAAG,cAAc,CAAC,UAAU,CAAC;IAwDjH;;OAEG;IACK,WAAW,CAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,GAAE,cAAmB,GAAG,cAAc,CAAC,UAAU,CAAC;IA4CjH;;OAEG;IACG,aAAa,CAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC;IAMjG;;;;OAIG;IACG,iBAAiB,CAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC;CAuBzG"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/src/network.js b/node_modules/@libp2p/kad-dht/dist/src/network.js
index 4859f0b..1d922a0 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/network.js
+++ b/node_modules/@libp2p/kad-dht/dist/src/network.js
@@ -90,7 +90,11 @@ export class Network extends TypedEventEmitter {
         }
         catch (err) {
             stream?.abort(err);
-            this.log.error('could not send %s to %p', msg.type, to, err);
+            // only log if the incoming signal was not aborted - this means we were
+            // no longer interested in the query result
+            if (options.signal?.aborted !== true) {
+                this.log.error('could not send %s to %p - %e', msg.type, to, err);
+            }
             yield queryErrorEvent({ from: to, error: err }, options);
         }
         finally {
diff --git a/node_modules/@libp2p/kad-dht/dist/src/network.js.map b/node_modules/@libp2p/kad-dht/dist/src/network.js.map
index 0484837..1b0b8a6 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/network.js.map
+++ b/node_modules/@libp2p/kad-dht/dist/src/network.js.map
@@ -1 +1 @@
-{"version":3,"file":"network.js","sourceRoot":"","sources":["../../src/network.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"network.js","sourceRoot":"","sources":["../../src/network.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/src/query/query-path.js b/node_modules/@libp2p/kad-dht/dist/src/query/query-path.js
index 7c0be78..d9cb915 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/query/query-path.js
+++ b/node_modules/@libp2p/kad-dht/dist/src/query/query-path.js
@@ -53,7 +53,7 @@ export async function* queryPath(options) {
                     if (event.name === 'PEER_RESPONSE') {
                         for (const closerPeer of event.closer) {
                             if (peersSeen.has(closerPeer.id)) { // eslint-disable-line max-depth
-                                log('already seen %p in query', closerPeer.id);
+                                log.trace('already seen %p in query', closerPeer.id);
                                 continue;
                             }
                             if (ourPeerId.equals(closerPeer.id)) { // eslint-disable-line max-depth
@@ -68,7 +68,7 @@ export async function* queryPath(options) {
                             const closerPeerXor = uint8ArrayXor(closerPeerKadId, kadId);
                             // only continue query if closer peer is actually closer
                             if (uint8ArrayXorCompare(closerPeerXor, peerXor) !== -1) { // eslint-disable-line max-depth
-                                log('skipping %p as they are not closer to %b than %p', closerPeer.id, key, peer);
+                                log.trace('skipping %p as they are not closer to %b than %p', closerPeer.id, key, peer);
                                 continue;
                             }
                             log('querying closer peer %p', closerPeer.id);
diff --git a/node_modules/@libp2p/kad-dht/dist/src/query/query-path.js.map b/node_modules/@libp2p/kad-dht/dist/src/query/query-path.js.map
index 068f752..11965ea 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/query/query-path.js.map
+++ b/node_modules/@libp2p/kad-dht/dist/src/query/query-path.js.map
@@ -1 +1 @@
-{"version":3,"file":"query-path.js","sourceRoot":"","sources":["../../../src/query/query-path.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AACnD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAA;AAC3C,OAAO,EAAE,SAAS,EAAE,MAAM,YAAY,CAAA;AACtC,OAAO,EAAE,GAAG,IAAI,aAAa,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAC5E,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAA;AAChD,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,aAAa,CAAA;AAC1D,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAA;AAyE7C;;;GAGG;AACH,MAAM,CAAC,KAAK,SAAU,CAAC,CAAC,SAAS,CAAE,OAAyB;IAC1D,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,gBAAgB,EAAE,GAAG,EAAE,SAAS,EAAE,iBAAiB,EAAE,GAAG,OAAO,CAAA;IAChJ,+EAA+E;IAC/E,yFAAyF;IACzF,MAAM,KAAK,GAAG,IAAI,KAAK,CAA4C;QACjE,WAAW,EAAE,KAAK;QAClB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;KAC7E,CAAC,CAAA;IAEF,iDAAiD;IACjD,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,GAAG,CAAC,CAAA;IAEtC;;;OAGG;IACH,SAAS,SAAS,CAAE,IAAY,EAAE,SAAqB;QACrD,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;YACjB,OAAM;QACR,CAAC;QAED,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QAEnB,MAAM,OAAO,GAAG,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;QAE/C,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAA;YAExB,IAAI,gBAAgB,IAAI,IAAI,EAAE,CAAC;gBAC7B,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAA;YACrD,CAAC;YAED,MAAM,cAAc,GAAG,SAAS,CAAC,OAAO,CAAC,CAAA;YAEzC,wCAAwC;YACxC,eAAe,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAA;YAEzC,IAAI,CAAC;gBACH,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,KAAK,CAAC;oBAC9B,GAAG;oBACH,IAAI;oBACJ,MAAM,EAAE,cAAc;oBACtB,SAAS;oBACT,QAAQ;iBACT,CAAC,EAAE,CAAC;oBACH,IAAI,cAAc,CAAC,OAAO,EAAE,CAAC;wBAC3B,OAAM;oBACR,CAAC;oBAED,gFAAgF;oBAChF,IAAI,KAAK,CAAC,IAAI,KAAK,eAAe,EAAE,CAAC;wBACnC,KAAK,MAAM,UAAU,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC;4BACtC,IAAI,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,gCAAgC;gCAClE,GAAG,CAAC,0BAA0B,EAAE,UAAU,CAAC,EAAE,CAAC,CAAA;gCAC9C,SAAQ;4BACV,CAAC;4BAED,IAAI,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,gCAAgC;gCACrE,GAAG,CAAC,wBAAwB,CAAC,CAAA;gCAC7B,SAAQ;4BACV,CAAC;4BAED,IAAI,CAAC,CAAC,MAAM,iBAAiB,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,gCAAgC;gCAClG,GAAG,CAAC,8BAA8B,CAAC,CAAA;gCACnC,SAAQ;4BACV,CAAC;4BAED,MAAM,eAAe,GAAG,MAAM,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,CAAA;4BAC1D,MAAM,aAAa,GAAG,aAAa,CAAC,eAAe,EAAE,KAAK,CAAC,CAAA;4BAE3D,wDAAwD;4BACxD,IAAI,oBAAoB,CAAC,aAAa,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,gCAAgC;gCACzF,GAAG,CAAC,kDAAkD,EAAE,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;gCACjF,SAAQ;4BACV,CAAC;4BAED,GAAG,CAAC,yBAAyB,EAAE,UAAU,CAAC,EAAE,CAAC,CAAA;4BAC7C,SAAS,CAAC,UAAU,CAAC,EAAE,EAAE,eAAe,CAAC,CAAA;wBAC3C,CAAC;oBACH,CAAC;oBAED,KAAK,CAAC,iBAAiB,CAAC,WAAW,EAAE;wBACnC,MAAM,EAAE,KAAK;qBACd,CAAC,CAAA;gBACJ,CAAC;YACH,CAAC;YAAC,OAAO,GAAQ,EAAE,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;oBACpB,OAAO,eAAe,CAAC;wBACrB,IAAI,EAAE,IAAI;wBACV,KAAK,EAAE,GAAG;qBACX,EAAE,OAAO,CAAC,CAAA;gBACb,CAAC;YACH,CAAC;oBAAS,CAAC;gBACT,cAAc,CAAC,KAAK,EAAE,CAAA;YACxB,CAAC;QACH,CAAC,EAAE;YACD,QAAQ,EAAE,OAAO;SAClB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACb,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAChB,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,yCAAyC;IACzC,SAAS,CAAC,YAAY,EAAE,MAAM,aAAa,CAAC,YAAY,CAAC,CAAC,CAAA;IAE1D,IAAI,CAAC;QACH,gCAAgC;QAChC,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;YACxD,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;gBAClB,MAAM,KAAK,CAAA;YACb,CAAC;QACH,CAAC;IACH,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;YACnB,MAAM,IAAI,iBAAiB,CAAC,eAAe,CAAC,CAAA;QAC9C,CAAC;QAED,MAAM,GAAG,CAAA;IACX,CAAC;AACH,CAAC"}
\ No newline at end of file
+{"version":3,"file":"query-path.js","sourceRoot":"","sources":["../../../src/query/query-path.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/src/routing-table/index.js b/node_modules/@libp2p/kad-dht/dist/src/routing-table/index.js
index 01a958a..8628529 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/routing-table/index.js
+++ b/node_modules/@libp2p/kad-dht/dist/src/routing-table/index.js
@@ -256,7 +256,7 @@ export class RoutingTable extends TypedEventEmitter {
         }
         const kadId = await utils.convertPeerId(peerId);
         this.kb.add({ kadId, peerId });
-        this.log('added %p with kad id %b', peerId, kadId);
+        this.log.trace('added %p with kad id %b', peerId, kadId);
         this.updateMetrics();
     }
     /**
diff --git a/node_modules/@libp2p/kad-dht/dist/src/routing-table/index.js.map b/node_modules/@libp2p/kad-dht/dist/src/routing-table/index.js.map
index 486892d..b5c25f4 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/routing-table/index.js.map
+++ b/node_modules/@libp2p/kad-dht/dist/src/routing-table/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/routing-table/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/routing-table/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/src/rpc/handlers/add-provider.js b/node_modules/@libp2p/kad-dht/dist/src/rpc/handlers/add-provider.js
index 766ddb1..e23610c 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/rpc/handlers/add-provider.js
+++ b/node_modules/@libp2p/kad-dht/dist/src/rpc/handlers/add-provider.js
@@ -11,7 +11,6 @@ export class AddProviderHandler {
         this.providers = init.providers;
     }
     async handle(peerId, msg) {
-        this.log('start');
         if (msg.key == null || msg.key.length === 0) {
             throw new InvalidMessageError('Missing key');
         }
@@ -26,6 +25,7 @@ export class AddProviderHandler {
         if (msg.providers == null || msg.providers.length === 0) {
             this.log.error('no providers found in message');
         }
+        this.log('%p asked us to store provider record for for %c', peerId, cid);
         await Promise.all(msg.providers.map(async (pi) => {
             // Ignore providers not from the originator
             if (!peerId.equals(pi.id)) {
diff --git a/node_modules/@libp2p/kad-dht/dist/src/rpc/handlers/add-provider.js.map b/node_modules/@libp2p/kad-dht/dist/src/rpc/handlers/add-provider.js.map
index 52c6c5e..a8e8226 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/rpc/handlers/add-provider.js.map
+++ b/node_modules/@libp2p/kad-dht/dist/src/rpc/handlers/add-provider.js.map
@@ -1 +1 @@
-{"version":3,"file":"add-provider.js","sourceRoot":"","sources":["../../../../src/rpc/handlers/add-provider.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAA;AACvD,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAA;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AACtC,OAAO,KAAK,MAAM,MAAM,4BAA4B,CAAA;AAepD,MAAM,OAAO,kBAAkB;IACZ,SAAS,CAAW;IACpB,GAAG,CAAQ;IAE5B,YAAa,UAAiC,EAAE,IAA4B;QAC1E,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,4BAA4B,CAAC,CAAA;QACxF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;IACjC,CAAC;IAED,KAAK,CAAC,MAAM,CAAE,MAAc,EAAE,GAAY;QACxC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QAEjB,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC5C,MAAM,IAAI,mBAAmB,CAAC,aAAa,CAAC,CAAA;QAC9C,CAAC;QAED,IAAI,GAAQ,CAAA;QACZ,IAAI,CAAC;YACH,yDAAyD;YACzD,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAC3B,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,MAAM,IAAI,mBAAmB,CAAC,aAAa,CAAC,CAAA;QAC9C,CAAC;QAED,IAAI,GAAG,CAAC,SAAS,IAAI,IAAI,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAA;QACjD,CAAC;QAED,MAAM,OAAO,CAAC,GAAG,CACf,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE;YAC7B,2CAA2C;YAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBAC1B,IAAI,CAAC,GAAG,CAAC,kCAAkC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;gBAC3D,OAAM;YACR,CAAC;YAED,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC7B,IAAI,CAAC,GAAG,CAAC,4CAA4C,EAAE,MAAM,CAAC,CAAA;gBAC9D,OAAM;YACR,CAAC;YAED,IAAI,CAAC,GAAG,CAAC,wCAAwC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAElH,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;YAEtC,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAA;QACvE,CAAC,CAAC,CACH,CAAA;QAED,OAAO,SAAS,CAAA;IAClB,CAAC;CACF"}
\ No newline at end of file
+{"version":3,"file":"add-provider.js","sourceRoot":"","sources":["../../../../src/rpc/handlers/add-provider.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAA;AACvD,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAA;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AACtC,OAAO,KAAK,MAAM,MAAM,4BAA4B,CAAA;AAepD,MAAM,OAAO,kBAAkB;IACZ,SAAS,CAAW;IACpB,GAAG,CAAQ;IAE5B,YAAa,UAAiC,EAAE,IAA4B;QAC1E,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,4BAA4B,CAAC,CAAA;QACxF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;IACjC,CAAC;IAED,KAAK,CAAC,MAAM,CAAE,MAAc,EAAE,GAAY;QACxC,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC5C,MAAM,IAAI,mBAAmB,CAAC,aAAa,CAAC,CAAA;QAC9C,CAAC;QAED,IAAI,GAAQ,CAAA;QACZ,IAAI,CAAC;YACH,yDAAyD;YACzD,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAC3B,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,MAAM,IAAI,mBAAmB,CAAC,aAAa,CAAC,CAAA;QAC9C,CAAC;QAED,IAAI,GAAG,CAAC,SAAS,IAAI,IAAI,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAA;QACjD,CAAC;QAED,IAAI,CAAC,GAAG,CAAC,iDAAiD,EAAE,MAAM,EAAE,GAAG,CAAC,CAAA;QAExE,MAAM,OAAO,CAAC,GAAG,CACf,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE;YAC7B,2CAA2C;YAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBAC1B,IAAI,CAAC,GAAG,CAAC,kCAAkC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;gBAC3D,OAAM;YACR,CAAC;YAED,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC7B,IAAI,CAAC,GAAG,CAAC,4CAA4C,EAAE,MAAM,CAAC,CAAA;gBAC9D,OAAM;YACR,CAAC;YAED,IAAI,CAAC,GAAG,CAAC,wCAAwC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAElH,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;YAEtC,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAA;QACvE,CAAC,CAAC,CACH,CAAA;QAED,OAAO,SAAS,CAAA;IAClB,CAAC;CACF"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/src/rpc/index.d.ts b/node_modules/@libp2p/kad-dht/dist/src/rpc/index.d.ts
index 8dbfc38..897e3c2 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/rpc/index.d.ts
+++ b/node_modules/@libp2p/kad-dht/dist/src/rpc/index.d.ts
@@ -7,7 +7,7 @@ import type { PeerInfoMapper, Validators } from '../index.js';
 import type { PeerRouting } from '../peer-routing';
 import type { Providers } from '../providers';
 import type { RoutingTable } from '../routing-table';
-import type { PeerId } from '@libp2p/interface';
+import type { Metrics, PeerId } from '@libp2p/interface';
 import type { IncomingStreamData } from '@libp2p/interface-internal';
 export interface DHTMessageHandler {
     handle(peerId: PeerId, msg: Message): Promise<Message | undefined>;
@@ -21,11 +21,13 @@ export interface RPCInit {
     peerInfoMapper: PeerInfoMapper;
 }
 export interface RPCComponents extends GetValueHandlerComponents, PutValueHandlerComponents, FindNodeHandlerComponents, GetProvidersHandlerComponents {
+    metrics?: Metrics;
 }
 export declare class RPC {
     private readonly handlers;
     private readonly routingTable;
     private readonly log;
+    private readonly metrics;
     constructor(components: RPCComponents, init: RPCInit);
     /**
      * Process incoming DHT messages
diff --git a/node_modules/@libp2p/kad-dht/dist/src/rpc/index.d.ts.map b/node_modules/@libp2p/kad-dht/dist/src/rpc/index.d.ts.map
index 6b3c43d..67e5807 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/rpc/index.d.ts.map
+++ b/node_modules/@libp2p/kad-dht/dist/src/rpc/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/rpc/index.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAe,MAAM,mBAAmB,CAAA;AAExD,OAAO,EAAmB,KAAK,yBAAyB,EAAE,MAAM,yBAAyB,CAAA;AACzF,OAAO,EAAuB,KAAK,6BAA6B,EAAE,MAAM,6BAA6B,CAAA;AACrG,OAAO,EAAmB,KAAK,yBAAyB,EAAE,MAAM,yBAAyB,CAAA;AAEzF,OAAO,EAAmB,KAAK,yBAAyB,EAAE,MAAM,yBAAyB,CAAA;AACzF,OAAO,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAC7D,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAA;AAClD,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,cAAc,CAAA;AAC7C,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAA;AACpD,OAAO,KAAK,EAAU,MAAM,EAAE,MAAM,mBAAmB,CAAA;AACvD,OAAO,KAAK,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAA;AAEpE,MAAM,WAAW,iBAAiB;IAChC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC,CAAA;CACnE;AAED,MAAM,WAAW,OAAO;IACtB,YAAY,EAAE,YAAY,CAAA;IAC1B,SAAS,EAAE,SAAS,CAAA;IACpB,WAAW,EAAE,WAAW,CAAA;IACxB,UAAU,EAAE,UAAU,CAAA;IACtB,SAAS,EAAE,MAAM,CAAA;IACjB,cAAc,EAAE,cAAc,CAAA;CAC/B;AAED,MAAM,WAAW,aAAc,SAAQ,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,6BAA6B;CAEpJ;AAED,qBAAa,GAAG;IACd,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAmC;IAC5D,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAc;IAC3C,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;gBAEf,UAAU,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO;IAerD;;OAEG;IACG,aAAa,CAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC;IAkBhF;;OAEG;IACH,gBAAgB,CAAE,IAAI,EAAE,kBAAkB,GAAG,IAAI;CAqClD"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/rpc/index.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAe,MAAM,mBAAmB,CAAA;AAExD,OAAO,EAAmB,KAAK,yBAAyB,EAAE,MAAM,yBAAyB,CAAA;AACzF,OAAO,EAAuB,KAAK,6BAA6B,EAAE,MAAM,6BAA6B,CAAA;AACrG,OAAO,EAAmB,KAAK,yBAAyB,EAAE,MAAM,yBAAyB,CAAA;AAEzF,OAAO,EAAmB,KAAK,yBAAyB,EAAE,MAAM,yBAAyB,CAAA;AACzF,OAAO,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAC7D,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAA;AAClD,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,cAAc,CAAA;AAC7C,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAA;AACpD,OAAO,KAAK,EAAwB,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAC9E,OAAO,KAAK,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAA;AAEpE,MAAM,WAAW,iBAAiB;IAChC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC,CAAA;CACnE;AAED,MAAM,WAAW,OAAO;IACtB,YAAY,EAAE,YAAY,CAAA;IAC1B,SAAS,EAAE,SAAS,CAAA;IACpB,WAAW,EAAE,WAAW,CAAA;IACxB,UAAU,EAAE,UAAU,CAAA;IACtB,SAAS,EAAE,MAAM,CAAA;IACjB,cAAc,EAAE,cAAc,CAAA;CAC/B;AAED,MAAM,WAAW,aAAc,SAAQ,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,6BAA6B;IACnJ,OAAO,CAAC,EAAE,OAAO,CAAA;CAClB;AAED,qBAAa,GAAG;IACd,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAmC;IAC5D,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAc;IAC3C,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;IAC5B,OAAO,CAAC,QAAQ,CAAC,OAAO,CAGvB;gBAEY,UAAU,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO;IAmBrD;;OAEG;IACG,aAAa,CAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC;IA4BhF;;OAEG;IACH,gBAAgB,CAAE,IAAI,EAAE,kBAAkB,GAAG,IAAI;CAqClD"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/src/rpc/index.js b/node_modules/@libp2p/kad-dht/dist/src/rpc/index.js
index 3f635ab..21e9340 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/rpc/index.js
+++ b/node_modules/@libp2p/kad-dht/dist/src/rpc/index.js
@@ -11,8 +11,13 @@ export class RPC {
     handlers;
     routingTable;
     log;
+    metrics;
     constructor(components, init) {
         const { providers, peerRouting, validators, logPrefix, peerInfoMapper } = init;
+        this.metrics = {
+            operations: components.metrics?.registerCounterGroup(`${logPrefix.replaceAll(':', '_')}_inbound_rpc_requests_total`),
+            errors: components.metrics?.registerCounterGroup(`${logPrefix.replaceAll(':', '_')}_inbound_rpc_errors_total`)
+        };
         this.log = components.logger.forComponent(`${logPrefix}:rpc`);
         this.routingTable = init.routingTable;
         this.handlers = {
@@ -40,7 +45,17 @@ export class RPC {
             this.log.error(`no handler found for message type: ${msg.type}`);
             return;
         }
-        return handler.handle(peerId, msg);
+        try {
+            this.metrics.operations?.increment({
+                [msg.type]: true
+            });
+            return await handler.handle(peerId, msg);
+        }
+        catch {
+            this.metrics.errors?.increment({
+                [msg.type]: true
+            });
+        }
     }
     /**
      * Handle incoming streams on the dht protocol
diff --git a/node_modules/@libp2p/kad-dht/dist/src/rpc/index.js.map b/node_modules/@libp2p/kad-dht/dist/src/rpc/index.js.map
index 2fbcbbd..bb3fcaa 100644
--- a/node_modules/@libp2p/kad-dht/dist/src/rpc/index.js.map
+++ b/node_modules/@libp2p/kad-dht/dist/src/rpc/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/rpc/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/rpc/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.d.ts
new file mode 100644
index 0000000..976ee96
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=enable-server-mode.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.d.ts.map
new file mode 100644
index 0000000..ef925ab
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"enable-server-mode.spec.d.ts","sourceRoot":"","sources":["../../test/enable-server-mode.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.js b/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.js
new file mode 100644
index 0000000..eef76fa
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.js
@@ -0,0 +1,62 @@
+/* eslint-env mocha */
+/* eslint max-nested-callbacks: ["error", 8] */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import { TestDHT } from './utils/test-dht.js';
+const testCases = [
+    ['should enable server mode when public IP4 addresses are found', '/ip4/139.178.91.71/udp/4001/quic', 'server'],
+    ['should enable server mode when public IP6 addresses are found', '/ip6/2604:1380:45e3:6e00::1/udp/4001/quic', 'server'],
+    ['should enable server mode when DNS4 addresses are found', '/dns4/sv15.bootstrap.libp2p.io/tcp/443/wss/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN', 'server'],
+    ['should enable server mode when DNS6 addresses are found', '/dns6/sv15.bootstrap.libp2p.io/tcp/443/wss/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN', 'server'],
+    ['should enable server mode when DNSADDR addresses are found', '/dnsaddr/sv15.bootstrap.libp2p.io/tcp/443/wss/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN', 'server'],
+    ['should not enable server mode when private IP4 addresses are found', '/ip4/127.0.0.1/udp/4001/quic', 'client'],
+    ['should not enable server mode when private IP6 addresses are found', '/ip6/::1/udp/4001/quic', 'client'],
+    ['should not enable server mode when otherwise public circuit relay addresses are found', '/dns4/sv15.bootstrap.libp2p.io/tcp/443/wss/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit', 'client']
+];
+describe('enable server mode', () => {
+    let tdht;
+    beforeEach(() => {
+        tdht = new TestDHT();
+    });
+    afterEach(async () => {
+        await tdht.teardown();
+    });
+    testCases.forEach(([name, addr, result]) => {
+        it(name, async function () {
+            const dht = await tdht.spawn({ clientMode: undefined });
+            expect(dht.getMode()).to.equal('client');
+            dht.components.events.safeDispatchEvent('self:peer:update', {
+                detail: {
+                    peer: {
+                        addresses: [{
+                                multiaddr: multiaddr('/ip4/127.0.0.1/tcp/4001'),
+                                isCertified: true
+                            }, {
+                                multiaddr: multiaddr('/ip6/::1/tcp/4001'),
+                                isCertified: true
+                            }, {
+                                multiaddr: multiaddr(addr),
+                                isCertified: true
+                            }]
+                    }
+                }
+            });
+            await delay(100);
+            expect(dht.getMode()).to.equal(result, `did not change to "${result}" mode after updating with address ${addr}`);
+            dht.components.events.safeDispatchEvent('self:peer:update', {
+                detail: {
+                    peer: {
+                        addresses: [{
+                                multiaddr: multiaddr('/ip4/127.0.0.1/tcp/4001'),
+                                isCertified: true
+                            }]
+                    }
+                }
+            });
+            await delay(100);
+            expect(dht.getMode()).to.equal('client', `did not reset to client mode after updating with address ${addr}`);
+        });
+    });
+});
+//# sourceMappingURL=enable-server-mode.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.js.map
new file mode 100644
index 0000000..210bd8d
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/enable-server-mode.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"enable-server-mode.spec.js","sourceRoot":"","sources":["../../test/enable-server-mode.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,+CAA+C;AAE/C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAA;AAE7C,MAAM,SAAS,GAAoC;IACjD,CAAC,+DAA+D,EAAE,kCAAkC,EAAE,QAAQ,CAAC;IAC/G,CAAC,+DAA+D,EAAE,2CAA2C,EAAE,QAAQ,CAAC;IACxH,CAAC,yDAAyD,EAAE,+FAA+F,EAAE,QAAQ,CAAC;IACtK,CAAC,yDAAyD,EAAE,+FAA+F,EAAE,QAAQ,CAAC;IACtK,CAAC,4DAA4D,EAAE,kGAAkG,EAAE,QAAQ,CAAC;IAC5K,CAAC,oEAAoE,EAAE,8BAA8B,EAAE,QAAQ,CAAC;IAChH,CAAC,oEAAoE,EAAE,wBAAwB,EAAE,QAAQ,CAAC;IAC1G,CAAC,uFAAuF,EAAE,2GAA2G,EAAE,QAAQ,CAAC;CACjN,CAAA;AAED,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAI,IAAa,CAAA;IAEjB,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,GAAG,IAAI,OAAO,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAA;IACvB,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;QACzC,EAAE,CAAC,IAAI,EAAE,KAAK;YACZ,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAA;YAEvD,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;YAExC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,EAAE;gBAC1D,MAAM,EAAE;oBACN,IAAI,EAAE;wBACJ,SAAS,EAAE,CAAC;gCACV,SAAS,EAAE,SAAS,CAAC,yBAAyB,CAAC;gCAC/C,WAAW,EAAE,IAAI;6BAClB,EAAE;gCACD,SAAS,EAAE,SAAS,CAAC,mBAAmB,CAAC;gCACzC,WAAW,EAAE,IAAI;6BAClB,EAAE;gCACD,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC;gCAC1B,WAAW,EAAE,IAAI;6BAClB,CAAC;qBACH;iBACF;aACF,CAAC,CAAA;YAEF,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA;YAEhB,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,sBAAsB,MAAM,sCAAsC,IAAI,EAAE,CAAC,CAAA;YAEhH,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,EAAE;gBAC1D,MAAM,EAAE;oBACN,IAAI,EAAE;wBACJ,SAAS,EAAE,CAAC;gCACV,SAAS,EAAE,SAAS,CAAC,yBAAyB,CAAC;gCAC/C,WAAW,EAAE,IAAI;6BAClB,CAAC;qBACH;iBACF;aACF,CAAC,CAAA;YAEF,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA;YAEhB,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,4DAA4D,IAAI,EAAE,CAAC,CAAA;QAC9G,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.d.ts b/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.d.ts
new file mode 100644
index 0000000..1f7a637
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.d.ts
@@ -0,0 +1,2 @@
+export declare const publicKey: Uint8Array;
+//# sourceMappingURL=go-key-records.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.d.ts.map
new file mode 100644
index 0000000..0e5c05f
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-key-records.d.ts","sourceRoot":"","sources":["../../../../test/fixtures/record/go-key-records.ts"],"names":[],"mappings":"AAEA,eAAO,MAAM,SAAS,YAErB,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.js b/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.js
new file mode 100644
index 0000000..01d7aa4
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.js
@@ -0,0 +1,3 @@
+import { base64pad } from 'multiformats/bases/base64';
+export const publicKey = base64pad.decode('MCAASXjBcMA0GCSqGSIb3DQEBAQUAA0sAMEgCQQDjXAQQMal4SB2tSnX6NJIPmC69/BT8A8jc7/gDUZNkEhdhYHvc7k7S4vntV/c92nJGxNdop9fKJyevuNMuXhhHAgMBAAE=');
+//# sourceMappingURL=go-key-records.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.js.map b/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.js.map
new file mode 100644
index 0000000..25230a4
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/fixtures/record/go-key-records.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-key-records.js","sourceRoot":"","sources":["../../../../test/fixtures/record/go-key-records.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAA;AAErD,MAAM,CAAC,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CACvC,uIAAuI,CACxI,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.d.ts b/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.d.ts
new file mode 100644
index 0000000..d3c0de3
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=generate-peers.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.d.ts.map
new file mode 100644
index 0000000..54d702e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"generate-peers.node.d.ts","sourceRoot":"","sources":["../../../test/generate-peers/generate-peers.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.js b/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.js
new file mode 100644
index 0000000..41d1e44
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.js
@@ -0,0 +1,90 @@
+/* eslint-env mocha */
+import path from 'path';
+import { fileURLToPath } from 'url';
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import { execa } from 'execa';
+import { stubInterface } from 'sinon-ts';
+import { toString as uintArrayToString } from 'uint8arrays/to-string';
+import which from 'which';
+import { RoutingTable } from '../../src/routing-table/index.js';
+import { RoutingTableRefresh } from '../../src/routing-table/refresh.js';
+import { convertPeerId } from '../../src/utils.js';
+const dirname = path.dirname(fileURLToPath(import.meta.url));
+async function fromGo(targetCpl, randPrefix, localKadId) {
+    const { stdout } = await execa('./generate-peer', [targetCpl.toString(), randPrefix.toString(), localKadId], {
+        cwd: dirname
+    });
+    const arr = stdout
+        .slice(1, stdout.length - 1)
+        .split(' ')
+        .filter(Boolean)
+        .map(i => parseInt(i, 10));
+    return Uint8Array.from(arr);
+}
+describe.skip('generate peers', function () {
+    this.timeout(540 * 1000);
+    const go = which.sync('go', { nothrow: true });
+    if (go == null) {
+        it.skip('No golang installation found on this system', () => { });
+        return;
+    }
+    let refresh;
+    before(async () => {
+        await execa(go, ['build', 'generate-peer.go'], {
+            cwd: __dirname
+        });
+    });
+    beforeEach(async () => {
+        const key = await generateKeyPair('RSA', 512);
+        const id = peerIdFromPrivateKey(key);
+        const components = {
+            peerId: id,
+            connectionManager: stubInterface(),
+            peerStore: stubInterface(),
+            logger: defaultLogger()
+        };
+        const table = new RoutingTable(components, {
+            kBucketSize: 20,
+            logPrefix: '',
+            protocol: '/ipfs/kad/1.0.0'
+        });
+        refresh = new RoutingTableRefresh({
+            logger: defaultLogger()
+        }, {
+            routingTable: table,
+            // @ts-expect-error not a full implementation
+            peerRouting: {},
+            logPrefix: ''
+        });
+    });
+    const TEST_CASES = [{
+            targetCpl: 2,
+            randPrefix: 29381
+        }, {
+            targetCpl: 12,
+            randPrefix: 3821
+        }, {
+            targetCpl: 5,
+            randPrefix: 9493
+        }, {
+            targetCpl: 9,
+            randPrefix: 19209
+        }, {
+            targetCpl: 1,
+            randPrefix: 49898
+        }];
+    TEST_CASES.forEach(({ targetCpl, randPrefix }) => {
+        it(`should generate peers targetCpl ${targetCpl} randPrefix ${randPrefix}`, async () => {
+            const key = await generateKeyPair('RSA', 512);
+            const peerId = peerIdFromPrivateKey(key);
+            const localKadId = await convertPeerId(peerId);
+            const goOutput = await fromGo(targetCpl, randPrefix, uintArrayToString(localKadId, 'base64pad'));
+            const jsOutput = await refresh._makePeerId(localKadId, randPrefix, targetCpl);
+            expect(goOutput).to.deep.equal(jsOutput);
+        });
+    });
+});
+//# sourceMappingURL=generate-peers.node.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.js.map b/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.js.map
new file mode 100644
index 0000000..2021694
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/generate-peers/generate-peers.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"generate-peers.node.js","sourceRoot":"","sources":["../../../test/generate-peers/generate-peers.node.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.d.ts
new file mode 100644
index 0000000..be785a2
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=kad-dht.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.d.ts.map
new file mode 100644
index 0000000..8aba50b
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"kad-dht.spec.d.ts","sourceRoot":"","sources":["../../test/kad-dht.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.js b/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.js
new file mode 100644
index 0000000..3e7aa37
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.js
@@ -0,0 +1,650 @@
+/* eslint-env mocha */
+/* eslint max-nested-callbacks: ["error", 8] */
+import { peerIdFromMultihash } from '@libp2p/peer-id';
+import { Libp2pRecord } from '@libp2p/record';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import all from 'it-all';
+import drain from 'it-drain';
+import filter from 'it-filter';
+import last from 'it-last';
+import map from 'it-map';
+import { pipe } from 'it-pipe';
+import * as Digest from 'multiformats/hashes/digest';
+import sinon from 'sinon';
+import { equals as uint8ArrayEquals } from 'uint8arrays/equals';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import * as c from '../src/constants.js';
+import { EventTypes, MessageType } from '../src/index.js';
+import { peerResponseEvent } from '../src/query/events.js';
+import * as kadUtils from '../src/utils.js';
+import { createPeerIds } from './utils/create-peer-id.js';
+import { createValues } from './utils/create-values.js';
+import { countDiffPeers } from './utils/index.js';
+import { sortClosestPeers } from './utils/sort-closest-peers.js';
+import { TestDHT } from './utils/test-dht.js';
+async function findEvent(events, name) {
+    const eventTypes = new Set();
+    const event = await last(filter(events, event => {
+        eventTypes.add(event.name);
+        return event.name === name;
+    }));
+    if (event == null) {
+        throw new Error(`No ${name} event found, saw ${Array.from(eventTypes).join()}`);
+    }
+    return event;
+}
+describe('KadDHT', () => {
+    let peerIds;
+    let values;
+    let tdht;
+    beforeEach(() => {
+        tdht = new TestDHT();
+    });
+    afterEach(async () => {
+        await tdht.teardown();
+    });
+    before(async function () {
+        this.timeout(10 * 1000);
+        const res = await Promise.all([
+            createPeerIds(3),
+            createValues(20)
+        ]);
+        peerIds = res[0];
+        values = res[1];
+    });
+    afterEach(() => {
+        sinon.restore();
+    });
+    describe('create', () => {
+        it('simple', async () => {
+            const dht = await tdht.spawn({
+                kBucketSize: 5
+            });
+            expect(dht).to.have.property('put');
+            expect(dht).to.have.property('get');
+            expect(dht).to.have.property('provide');
+            expect(dht).to.have.property('findProviders');
+            expect(dht).to.have.property('findPeer');
+            expect(dht).to.have.property('getClosestPeers');
+            expect(dht).to.have.property('getMode');
+            expect(dht).to.have.property('setMode');
+        });
+        it('forward providers init options to providers component', async () => {
+            const dht = await tdht.spawn({
+                kBucketSize: 5,
+                providers: {
+                    cleanupInterval: 60,
+                    provideValidity: 60 * 10
+                }
+            });
+            expect(dht.providers).to.have.property('cleanupInterval', 60);
+            expect(dht.providers).to.have.property('provideValidity', 60 * 10);
+        });
+    });
+    describe('start and stop', () => {
+        it('default mode', async () => {
+            // off by default
+            const dht = await tdht.spawn({ clientMode: undefined }, false);
+            const registrarHandleSpy = sinon.spy(dht.components.registrar, 'handle');
+            await dht.start();
+            // by default we start in client mode
+            expect(registrarHandleSpy).to.have.property('callCount', 0);
+            await dht.setMode('server');
+            // now we should be in server mode
+            expect(registrarHandleSpy).to.have.property('callCount', 1);
+            await dht.stop();
+        });
+        it('server mode', async () => {
+            // turn client mode off explicitly
+            const dht = await tdht.spawn({ clientMode: false }, false);
+            const registrarHandleSpy = sinon.spy(dht.components.registrar, 'handle');
+            await dht.start();
+            // should have started in server mode
+            expect(registrarHandleSpy).to.have.property('callCount', 1);
+            await dht.setMode('server');
+            // we were already in server mode
+            expect(registrarHandleSpy).to.have.property('callCount', 2);
+            await dht.stop();
+        });
+        it('client mode', async () => {
+            // turn client mode on explicitly
+            const dht = await tdht.spawn({ clientMode: true }, false);
+            const registrarHandleSpy = sinon.spy(dht.components.registrar, 'handle');
+            await dht.start();
+            await dht.stop();
+            // should not have registered handler in client mode
+            expect(registrarHandleSpy).to.have.property('callCount', 0);
+        });
+        it('should not fail when already started', async () => {
+            const dht = await tdht.spawn(undefined, false);
+            await dht.start();
+            await dht.start();
+            await dht.start();
+            await dht.stop();
+        });
+        it('should not fail to stop when was not started', async () => {
+            const dht = await tdht.spawn(undefined, false);
+            await dht.stop();
+        });
+    });
+    describe('content fetching', () => {
+        it('put - get same node', async function () {
+            this.timeout(10 * 1000);
+            const key = uint8ArrayFromString('/v/hello');
+            const value = uint8ArrayFromString('world');
+            const dht = await tdht.spawn();
+            // Exchange data through the dht
+            await drain(dht.put(key, value));
+            const res = await last(dht.get(key));
+            expect(res).to.have.property('value').that.equalBytes(value);
+        });
+        it('put - get', async function () {
+            this.timeout(10 * 1000);
+            const key = uint8ArrayFromString('/v/hello');
+            const value = uint8ArrayFromString('world');
+            const [dhtA, dhtB] = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            // Connect nodes
+            await tdht.connect(dhtA, dhtB);
+            // Exchange data through the dht
+            await drain(dhtA.put(key, value));
+            const res = await findEvent(dhtB.get(key), 'VALUE');
+            expect(res).to.have.property('value').that.equalBytes(value);
+        });
+        it('put - get calls progress handler', async function () {
+            this.timeout(10 * 1000);
+            const key = uint8ArrayFromString('/v/hello');
+            const value = uint8ArrayFromString('world');
+            const [dhtA, dhtB] = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            // Connect nodes
+            await tdht.connect(dhtA, dhtB);
+            const putProgress = sinon.stub();
+            // Exchange data through the dht
+            await drain(dhtA.put(key, value, {
+                onProgress: putProgress
+            }));
+            expect(putProgress).to.have.property('called', true);
+            const getProgress = sinon.stub();
+            await drain(dhtB.get(key, {
+                onProgress: getProgress
+            }));
+            expect(getProgress).to.have.property('called', true);
+        });
+        it('put - should require a minimum number of peers to have successful puts', async function () {
+            this.timeout(10 * 1000);
+            const error = new Error('fake error');
+            const key = uint8ArrayFromString('/v/hello');
+            const value = uint8ArrayFromString('world');
+            const [dhtA, dhtB, dhtC, dhtD] = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn({
+                    // Stub verify record
+                    validators: {
+                        v: sinon.stub().rejects(error)
+                    }
+                })
+            ]);
+            await Promise.all([
+                tdht.connect(dhtA, dhtB),
+                tdht.connect(dhtA, dhtC),
+                tdht.connect(dhtA, dhtD)
+            ]);
+            // DHT operations
+            await drain(dhtA.put(key, value));
+            const res = await last(dhtB.get(key));
+            expect(res).to.have.property('value').that.equalBytes(value);
+        });
+        it('put - get using key with no prefix (no selector available)', async function () {
+            this.timeout(10 * 1000);
+            const key = uint8ArrayFromString('hello');
+            const value = uint8ArrayFromString('world');
+            const [dhtA, dhtB] = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            await tdht.connect(dhtA, dhtB);
+            // DHT operations
+            await drain(dhtA.put(key, value));
+            const res = await last(dhtB.get(key));
+            expect(res).to.have.property('value').that.equalBytes(value);
+        });
+        it('put - get using key from provided validator and selector', async function () {
+            this.timeout(10 * 1000);
+            const key = uint8ArrayFromString('/ipns/hello');
+            const value = uint8ArrayFromString('world');
+            const [dhtA, dhtB] = await Promise.all([
+                tdht.spawn({
+                    validators: {
+                        ipns: sinon.stub().resolves()
+                    },
+                    selectors: {
+                        ipns: sinon.stub().returns(0)
+                    }
+                }),
+                tdht.spawn({
+                    validators: {
+                        ipns: sinon.stub().resolves()
+                    },
+                    selectors: {
+                        ipns: sinon.stub().returns(0)
+                    }
+                })
+            ]);
+            await tdht.connect(dhtA, dhtB);
+            // DHT operations
+            await drain(dhtA.put(key, value));
+            const res = await last(dhtB.get(key));
+            expect(res).to.have.property('value').that.equalBytes(value);
+        });
+        it('put - get should fail if unrecognized key prefix in get', async function () {
+            this.timeout(10 * 1000);
+            const key = uint8ArrayFromString('/v2/hello');
+            const value = uint8ArrayFromString('world');
+            const [dhtA, dhtB] = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            await tdht.connect(dhtA, dhtB);
+            await drain(dhtA.put(key, value));
+            await expect(last(dhtA.get(key))).to.eventually.be.rejected
+                .with.property('name', 'MissingSelectorError');
+        });
+        it('put - get with update', async function () {
+            this.timeout(20 * 1000);
+            const key = uint8ArrayFromString('/v/hello');
+            const valueA = uint8ArrayFromString('worldA');
+            const valueB = uint8ArrayFromString('worldB');
+            const [dhtA, dhtB] = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            const dhtASpy = sinon.spy(dhtA.network, 'sendRequest');
+            // Put before peers connected
+            await drain(dhtA.put(key, valueA));
+            await drain(dhtB.put(key, valueB));
+            // Connect peers
+            await tdht.connect(dhtA, dhtB);
+            // Get values
+            const resA = await last(dhtA.get(key));
+            const resB = await last(dhtB.get(key));
+            // First is selected
+            expect(resA).to.have.property('value').that.equalBytes(valueA);
+            expect(resB).to.have.property('value').that.equalBytes(valueA);
+            let foundGetValue = false;
+            let foundPutValue = false;
+            for (const call of dhtASpy.getCalls()) {
+                if (call.args[0].equals(dhtB.components.peerId) && call.args[1].type === 'GET_VALUE') {
+                    // query B
+                    foundGetValue = true;
+                }
+                if (call.args[0].equals(dhtB.components.peerId) && call.args[1].type === 'PUT_VALUE') {
+                    // update B
+                    foundPutValue = true;
+                }
+            }
+            expect(foundGetValue).to.be.true('did not get value from dhtB');
+            expect(foundPutValue).to.be.true('did not update value on dhtB');
+        });
+        it('layered get', async function () {
+            this.timeout(40 * 1000);
+            const key = uint8ArrayFromString('/v/hello');
+            const value = uint8ArrayFromString('world');
+            const dhts = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            // Connect all
+            await Promise.all([
+                tdht.connect(dhts[0], dhts[1]),
+                tdht.connect(dhts[1], dhts[2]),
+                tdht.connect(dhts[2], dhts[3])
+            ]);
+            // DHT operations
+            await drain(dhts[3].put(key, value));
+            const res = await last(dhts[0].get(key));
+            expect(res).to.have.property('value').that.equalBytes(value);
+        });
+        it('getMany with nvals=1 goes out to swarm if there is no local value', async () => {
+            const key = uint8ArrayFromString('/v/hello');
+            const value = uint8ArrayFromString('world');
+            const rec = new Libp2pRecord(key, value, new Date());
+            const dht = await tdht.spawn();
+            // Simulate returning a peer id to query
+            sinon.stub(dht.routingTable, 'closestPeers').returns([peerIds[1]]);
+            // Simulate going out to the network and returning the record
+            sinon.stub(dht.peerRouting, 'getValueOrPeers').callsFake(async function* (peer) {
+                yield peerResponseEvent({
+                    messageType: MessageType.GET_VALUE,
+                    from: peer,
+                    record: rec
+                });
+            }); // eslint-disable-line require-await
+            const res = await last(dht.get(key));
+            expect(res).to.have.property('value').that.equalBytes(value);
+        });
+    });
+    describe('content routing', () => {
+        it('provides', async function () {
+            this.timeout(20 * 1000);
+            const dhts = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            const ids = dhts.map((d) => d.components.peerId);
+            const idsB58 = ids.map(id => id.toString());
+            sinon.spy(dhts[3].network, 'sendMessage');
+            // connect peers
+            await Promise.all([
+                tdht.connect(dhts[0], dhts[1]),
+                tdht.connect(dhts[1], dhts[2]),
+                tdht.connect(dhts[2], dhts[3])
+            ]);
+            // provide values
+            await Promise.all(values.map(async (value) => { await drain(dhts[3].provide(value.cid)); }));
+            // Expect an ADD_PROVIDER message to be sent to each peer for each value
+            const fn = dhts[3].network.sendMessage;
+            const valuesBuffs = values.map(v => v.cid.multihash.bytes);
+            // @ts-expect-error fn is a spy
+            const calls = fn.getCalls().map(c => c.args);
+            for (const [peerId, msg] of calls) {
+                expect(idsB58).includes(peerId.toString());
+                expect(msg.type).equals(MessageType.ADD_PROVIDER);
+                expect(valuesBuffs).includes(msg.key);
+                expect(msg.providers.length).equals(1);
+                expect(peerIdFromMultihash(Digest.decode(msg.providers[0].id)).toString()).equals(idsB58[3]);
+            }
+            // Expect each DHT to find the provider of each value
+            let n = 0;
+            for (const v of values) {
+                n = (n + 1) % 3;
+                const events = await all(dhts[n].findProviders(v.cid));
+                const provs = Object.values(events.reduce((acc, curr) => {
+                    if (curr.name === 'PEER_RESPONSE') {
+                        curr.providers.forEach(peer => {
+                            acc[peer.id.toString()] = peer.id;
+                        });
+                    }
+                    return acc;
+                }, {}));
+                expect(provs).to.have.length(1);
+                expect(provs[0].toString()).to.equal(ids[3].toString());
+            }
+        });
+        it('provides if in server mode', async function () {
+            const dhts = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            // connect peers
+            await Promise.all([
+                tdht.connect(dhts[0], dhts[1]),
+                tdht.connect(dhts[1], dhts[2]),
+                tdht.connect(dhts[2], dhts[3])
+            ]);
+            const sendMessageSpy = sinon.spy(dhts[0].network, 'sendMessage');
+            await dhts[0].setMode('server');
+            await drain(dhts[0].provide(values[0].cid));
+            expect(sendMessageSpy.called).to.be.true();
+        });
+        it('find providers', async function () {
+            this.timeout(20 * 1000);
+            const val = values[0];
+            const dhts = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            // Connect
+            await Promise.all([
+                tdht.connect(dhts[0], dhts[1]),
+                tdht.connect(dhts[1], dhts[2])
+            ]);
+            await Promise.all(dhts.map(async (dht) => { await drain(dht.provide(val.cid)); }));
+            const events = await all(dhts[0].findProviders(val.cid));
+            // find providers find all the 3 providers
+            const provs = Object.values(events.reduce((acc, curr) => {
+                if (curr.name === 'PEER_RESPONSE') {
+                    curr.providers.forEach(peer => {
+                        acc[peer.id.toString()] = peer.id;
+                    });
+                }
+                return acc;
+            }, {}));
+            expect(provs).to.have.length(3);
+        });
+        it('find providers from client', async function () {
+            this.timeout(20 * 1000);
+            const val = values[0];
+            const dhts = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            const clientDHT = await tdht.spawn({ clientMode: true });
+            // Connect
+            await Promise.all([
+                tdht.connect(clientDHT, dhts[0]),
+                tdht.connect(dhts[0], dhts[1]),
+                tdht.connect(dhts[1], dhts[2])
+            ]);
+            await Promise.all(dhts.map(async (dht) => { await drain(dht.provide(val.cid)); }));
+            const events = await all(dhts[0].findProviders(val.cid));
+            // find providers find all the 3 providers
+            const provs = Object.values(events.reduce((acc, curr) => {
+                if (curr.name === 'PEER_RESPONSE') {
+                    curr.providers.forEach(peer => {
+                        acc[peer.id.toString()] = peer.id;
+                    });
+                }
+                return acc;
+            }, {}));
+            expect(provs).to.have.length(3);
+        });
+        it('find client provider', async function () {
+            this.timeout(20 * 1000);
+            const val = values[0];
+            const dhts = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            const clientDHT = await tdht.spawn({ clientMode: true });
+            // Connect
+            await Promise.all([
+                tdht.connect(clientDHT, dhts[0]),
+                tdht.connect(dhts[0], dhts[1])
+            ]);
+            await drain(clientDHT.provide(val.cid));
+            await delay(1e3);
+            const events = await all(dhts[1].findProviders(val.cid));
+            // find providers find the client provider
+            const provs = Object.values(events.reduce((acc, curr) => {
+                if (curr.name === 'PEER_RESPONSE') {
+                    curr.providers.forEach(peer => {
+                        acc[peer.id.toString()] = peer.id;
+                    });
+                }
+                return acc;
+            }, {}));
+            expect(provs).to.have.length(1);
+        });
+        it('find one provider locally', async function () {
+            this.timeout(20 * 1000);
+            const val = values[0];
+            const dht = await tdht.spawn();
+            sinon.stub(dht.components.peerStore, 'get').withArgs(dht.components.peerId)
+                .resolves({
+                id: dht.components.peerId,
+                addresses: [],
+                protocols: [],
+                tags: new Map(),
+                metadata: new Map()
+            });
+            sinon.stub(dht.providers, 'getProviders').resolves([dht.components.peerId]);
+            // Find provider
+            const events = await all(dht.findProviders(val.cid));
+            const provs = Object.values(events.reduce((acc, curr) => {
+                if (curr.name === 'PEER_RESPONSE') {
+                    curr.providers.forEach(peer => {
+                        acc[peer.id.toString()] = peer.id;
+                    });
+                }
+                return acc;
+            }, {}));
+            expect(provs).to.have.length(1);
+        });
+    });
+    describe('peer routing', () => {
+        it('findPeer', async function () {
+            this.timeout(240 * 1000);
+            const dhts = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            await Promise.all([
+                tdht.connect(dhts[0], dhts[1]),
+                tdht.connect(dhts[0], dhts[2]),
+                tdht.connect(dhts[0], dhts[3])
+            ]);
+            const ids = dhts.map((d) => d.components.peerId);
+            const finalPeer = await findEvent(dhts[0].findPeer(ids[ids.length - 1]), 'FINAL_PEER');
+            expect(finalPeer.peer.id.equals(ids[ids.length - 1])).to.eql(true);
+        });
+        it('find peer query', async function () {
+            this.timeout(240 * 1000);
+            // Create 101 nodes
+            const nDHTs = 101;
+            const dhts = await Promise.all(new Array(nDHTs).fill(0).map(async () => tdht.spawn()));
+            const dhtsById = new Map(dhts.map((d) => {
+                const peerId = d.components.peerId;
+                peerId.privateKey = d.components.privateKey;
+                return [peerId, d];
+            }));
+            const ids = [...dhtsById.keys()];
+            // The origin node for the FIND_PEER query
+            const originNode = dhts[0];
+            // The key
+            const val = uint8ArrayFromString('foobar');
+            // Hash the key into the DHT's key format
+            const rtval = await kadUtils.convertBuffer(val);
+            // Make connections between nodes close to each other
+            const sorted = await sortClosestPeers(ids, rtval);
+            const conns = [];
+            const maxRightIndex = sorted.length - 1;
+            for (let i = 0; i < sorted.length; i++) {
+                // Connect to 5 nodes on either side (10 in total)
+                for (const distance of [1, 3, 11, 31, 63]) {
+                    let rightIndex = i + distance;
+                    if (rightIndex > maxRightIndex) {
+                        rightIndex = maxRightIndex * 2 - (rightIndex + 1);
+                    }
+                    let leftIndex = i - distance;
+                    if (leftIndex < 0) {
+                        leftIndex = 1 - leftIndex;
+                    }
+                    conns.push([sorted[leftIndex], sorted[rightIndex]]);
+                }
+            }
+            await Promise.all(conns.map(async (conn) => {
+                const dhtA = dhtsById.get(conn[0]);
+                const dhtB = dhtsById.get(conn[1]);
+                if (dhtA == null || dhtB == null) {
+                    throw new Error('Could not find DHT');
+                }
+                await tdht.connect(dhtA, dhtB);
+            }));
+            // Get the alpha (3) closest peers to the key from the origin's
+            // routing table
+            const rtablePeers = originNode.routingTable.closestPeers(rtval, c.ALPHA);
+            expect(rtablePeers).to.have.length(c.ALPHA);
+            // The set of peers used to initiate the query (the closest alpha
+            // peers to the key that the origin knows about)
+            const rtableSet = {};
+            rtablePeers.forEach((p) => {
+                rtableSet[p.toString()] = true;
+            });
+            const originNodeIndex = ids.findIndex(i => uint8ArrayEquals(i.toMultihash().bytes, originNode.components.peerId.toMultihash().bytes));
+            const otherIds = ids.slice(0, originNodeIndex).concat(ids.slice(originNodeIndex + 1));
+            // Make the query
+            const out = await pipe(originNode.getClosestPeers(val), source => filter(source, (event) => event.type === EventTypes.FINAL_PEER), 
+            // @ts-expect-error tsc has problems with filtering
+            source => map(source, (event) => event.peer.id), async (source) => all(source));
+            const actualClosest = await sortClosestPeers(otherIds, rtval);
+            // Expect that the response includes nodes that are were not
+            // already in the origin's routing table (ie it went out to
+            // the network to find closer peers)
+            expect(out.filter((p) => !rtableSet[p.toString()]))
+                .to.not.be.empty();
+            // The expected closest kValue peers to the key
+            const exp = actualClosest.slice(0, c.K);
+            // Expect the kValue peers found to include the kValue closest connected peers
+            // to the key
+            expect(countDiffPeers(out, exp)).to.equal(0);
+        });
+        it('getClosestPeers', async function () {
+            this.timeout(240 * 1000);
+            const nDHTs = 30;
+            const dhts = await Promise.all(new Array(nDHTs).fill(0).map(async () => tdht.spawn()));
+            const connected = [];
+            for (let i = 0; i < dhts.length - 1; i++) {
+                connected.push(tdht.connect(dhts[i], dhts[(i + 1) % dhts.length]));
+            }
+            await Promise.all(connected);
+            const res = await all(filter(dhts[1].getClosestPeers(uint8ArrayFromString('foo')), event => event.name === 'FINAL_PEER'));
+            expect(res).to.not.be.empty();
+        });
+        it.skip('should not include itself in getClosestPeers PEER_RESPONSE', async function () {
+            this.timeout(240 * 1000);
+            const nDHTs = 30;
+            const dhts = await Promise.all(new Array(nDHTs).fill(0).map(async () => tdht.spawn()));
+            const connected = [];
+            for (let i = 0; i < dhts.length - 1; i++) {
+                connected.push(tdht.connect(dhts[i], dhts[(i + 1) % dhts.length]));
+            }
+            await Promise.all(connected);
+            const res = await all(dhts[1].getClosestPeers(dhts[2].components.peerId.toMultihash().bytes));
+            expect(res).to.not.be.empty();
+            // no peer should include itself in the response, only other peers that it
+            // knows who are closer
+            for (const event of res) {
+                if (event.name !== 'PEER_RESPONSE') {
+                    continue;
+                }
+                expect(event.closer.map(peer => peer.id.toString()))
+                    .to.not.include(event.from.toString());
+            }
+        });
+    });
+    describe('errors', () => {
+        it('get should handle correctly an unexpected error', async function () {
+            this.timeout(240 * 1000);
+            const error = new Error('fake error');
+            const [dhtA, dhtB] = await Promise.all([
+                tdht.spawn(),
+                tdht.spawn()
+            ]);
+            await tdht.connect(dhtA, dhtB);
+            const stub = sinon.stub(dhtA.components.connectionManager, 'openConnection').rejects(error);
+            const errors = await all(filter(dhtA.get(uint8ArrayFromString('/v/hello')), event => event.name === 'QUERY_ERROR'));
+            expect(errors).to.have.lengthOf(1);
+            expect(errors).to.have.nested.property('[0].error', error);
+            stub.restore();
+        });
+    });
+});
+//# sourceMappingURL=kad-dht.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.js.map
new file mode 100644
index 0000000..53f1c6d
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/kad-dht.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"kad-dht.spec.js","sourceRoot":"","sources":["../../test/kad-dht.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.d.ts
new file mode 100644
index 0000000..5dc125e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=kad-utils.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.d.ts.map
new file mode 100644
index 0000000..5aeffc7
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"kad-utils.spec.d.ts","sourceRoot":"","sources":["../../test/kad-utils.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.js b/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.js
new file mode 100644
index 0000000..db5b3f3
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.js
@@ -0,0 +1,81 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { concat as uint8ArrayConcat } from 'uint8arrays/concat';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { toString as uint8ArrayToString } from 'uint8arrays/to-string';
+import * as utils from '../src/utils.js';
+import { createPeerId, createPeerIds } from './utils/create-peer-id.js';
+describe('kad utils', () => {
+    describe('bufferToKey', () => {
+        it('returns the base32 encoded key of the buffer', () => {
+            const buf = uint8ArrayFromString('hello world');
+            const key = utils.bufferToKey(buf);
+            expect(key.toString())
+                .to.equal('/' + uint8ArrayToString(buf, 'base32'));
+        });
+    });
+    describe('bufferToRecordKey', () => {
+        it('returns the base32 encoded key of the buffer with the record prefix', () => {
+            const buf = uint8ArrayFromString('hello world');
+            const key = utils.bufferToRecordKey(buf);
+            expect(key.toString())
+                .to.equal('/dht/record/' + uint8ArrayToString(buf, 'base32'));
+        });
+    });
+    describe('convertBuffer', () => {
+        it('returns the sha2-256 hash of the buffer', async () => {
+            const buf = uint8ArrayFromString('hello world');
+            const digest = await utils.convertBuffer(buf);
+            expect(digest)
+                .to.equalBytes(uint8ArrayFromString('b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9', 'base16'));
+        });
+    });
+    describe('keyForPublicKey', () => {
+        it('works', async () => {
+            const peer = await createPeerId();
+            expect(utils.keyForPublicKey(peer))
+                .to.eql(uint8ArrayConcat([uint8ArrayFromString('/pk/'), peer.toMultihash().bytes]));
+        });
+    });
+    describe('fromPublicKeyKey', () => {
+        it('round trips', async function () {
+            this.timeout(40 * 1000);
+            const peers = await createPeerIds(50);
+            peers.forEach((id, i) => {
+                expect(utils.isPublicKeyKey(utils.keyForPublicKey(id))).to.eql(true);
+                expect(utils.fromPublicKeyKey(utils.keyForPublicKey(id)).toMultihash().bytes)
+                    .to.eql(id.toMultihash().bytes);
+            });
+        });
+    });
+    describe('removePrivateAddresses', () => {
+        it('filters private multiaddrs', async () => {
+            const id = await createPeerId();
+            const multiaddrs = [
+                multiaddr('/dns4/example.com/tcp/4001'),
+                multiaddr('/ip4/192.168.0.1/tcp/4001'),
+                multiaddr('/ip4/1.1.1.1/tcp/4001'),
+                multiaddr('/dns4/localhost/tcp/4001')
+            ];
+            const peerInfo = utils.removePrivateAddressesMapper({ id, multiaddrs });
+            expect(peerInfo.multiaddrs.map((ma) => ma.toString()))
+                .to.eql(['/dns4/example.com/tcp/4001', '/ip4/1.1.1.1/tcp/4001']);
+        });
+    });
+    describe('removePublicAddresses', () => {
+        it('filters public multiaddrs', async () => {
+            const id = await createPeerId();
+            const multiaddrs = [
+                multiaddr('/dns4/example.com/tcp/4001'),
+                multiaddr('/ip4/192.168.0.1/tcp/4001'),
+                multiaddr('/ip4/1.1.1.1/tcp/4001'),
+                multiaddr('/dns4/localhost/tcp/4001')
+            ];
+            const peerInfo = utils.removePublicAddressesMapper({ id, multiaddrs });
+            expect(peerInfo.multiaddrs.map((ma) => ma.toString()))
+                .to.eql(['/ip4/192.168.0.1/tcp/4001', '/dns4/localhost/tcp/4001']);
+        });
+    });
+});
+//# sourceMappingURL=kad-utils.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.js.map
new file mode 100644
index 0000000..a5e085b
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/kad-utils.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"kad-utils.spec.js","sourceRoot":"","sources":["../../test/kad-utils.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.d.ts
new file mode 100644
index 0000000..ae35a72
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=libp2p-routing.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.d.ts.map
new file mode 100644
index 0000000..66c3bb3
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"libp2p-routing.spec.d.ts","sourceRoot":"","sources":["../../test/libp2p-routing.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.js b/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.js
new file mode 100644
index 0000000..aae86b1
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.js
@@ -0,0 +1,280 @@
+import { contentRoutingSymbol, TypedEventEmitter, start, stop, peerRoutingSymbol } from '@libp2p/interface';
+import { matchPeerId } from '@libp2p/interface-compliance-tests/matchers';
+import { defaultLogger } from '@libp2p/logger';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core';
+import all from 'it-all';
+import map from 'it-map';
+import { duplexPair } from 'it-pair/duplex';
+import { pbStream } from 'it-protobuf-stream';
+import { CID } from 'multiformats/cid';
+import pDefer from 'p-defer';
+import { stubInterface } from 'sinon-ts';
+import { kadDHT, passthroughMapper } from '../src/index.js';
+import { Message, MessageType } from '../src/message/dht.js';
+import { convertBuffer } from '../src/utils.js';
+import { createPeerIds } from './utils/create-peer-id.js';
+import { sortClosestPeers } from './utils/sort-closest-peers.js';
+const PROTOCOL = '/test/dht/1.0.0';
+function createStreams(peerId, components) {
+    const duplex = duplexPair();
+    const outgoingStream = stubInterface({
+        close: async () => { }
+    });
+    outgoingStream.source = duplex[0].source;
+    outgoingStream.sink.callsFake(async (source) => duplex[0].sink(source));
+    const incomingStream = stubInterface({
+        close: async () => { }
+    });
+    incomingStream.source = duplex[1].source;
+    incomingStream.sink.callsFake(async (source) => duplex[1].sink(source));
+    const connection = stubInterface();
+    connection.newStream.withArgs(PROTOCOL).resolves(outgoingStream);
+    components.connectionManager.openConnection.withArgs(matchPeerId(peerId)).resolves(connection);
+    return {
+        connection,
+        incomingStream
+    };
+}
+function createPeer(peerId, peer = {}) {
+    const minPort = 1000;
+    const maxPort = 50000;
+    return {
+        id: peerId,
+        addresses: [{
+                isCertified: false,
+                multiaddr: multiaddr(`/ip4/58.42.62.62/tcp/${Math.random() * (maxPort - minPort) + minPort}`)
+            }],
+        tags: new Map(),
+        metadata: new Map(),
+        protocols: [
+            PROTOCOL
+        ],
+        ...peer
+    };
+}
+describe('content routing', () => {
+    let contentRouting;
+    let components;
+    let dht;
+    let peers;
+    let key;
+    beforeEach(async () => {
+        key = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+        const unsortedPeers = await createPeerIds(5);
+        // sort remaining peers by XOR distance to the key, closest -> furthest
+        peers = await sortClosestPeers(unsortedPeers, await convertBuffer(key.multihash.bytes));
+        components = {
+            peerId: peers[peers.length - 1],
+            privateKey: peers[peers.length - 1].privateKey,
+            registrar: stubInterface(),
+            addressManager: stubInterface(),
+            peerStore: stubInterface({
+                all: async () => []
+            }),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            }),
+            datastore: new MemoryDatastore(),
+            events: new TypedEventEmitter(),
+            logger: defaultLogger()
+        };
+        dht = kadDHT({
+            protocol: PROTOCOL,
+            peerInfoMapper: passthroughMapper,
+            clientMode: false,
+            allowQueryWithZeroPeers: true
+        })(components);
+        await start(dht);
+        // @ts-expect-error cannot use symbol to index KadDHT type
+        contentRouting = dht[contentRoutingSymbol];
+    });
+    afterEach(async () => {
+        await stop(dht);
+    });
+    it('should provide', async () => {
+        const remotePeer = createPeer(peers[0]);
+        components.peerStore.get.withArgs(matchPeerId(remotePeer.id)).resolves(remotePeer);
+        const { connection, incomingStream } = createStreams(remotePeer.id, components);
+        // a peer has connected
+        const topology = components.registrar.register.getCall(0).args[1];
+        topology.onConnect?.(remotePeer.id, connection);
+        // begin provide
+        void contentRouting.provide(key);
+        // read FIND_NODE message
+        const pb = pbStream(incomingStream);
+        const findNodeRequest = await pb.read(Message);
+        expect(findNodeRequest.type).to.equal(MessageType.FIND_NODE);
+        expect(findNodeRequest.key).to.equalBytes(key.multihash.bytes);
+        // reply with this node
+        await pb.write({
+            type: MessageType.FIND_NODE,
+            closer: [{
+                    id: remotePeer.id.toMultihash().bytes,
+                    multiaddrs: remotePeer.addresses.map(({ multiaddr }) => multiaddr.bytes)
+                }]
+        }, Message);
+        // read ADD_PROVIDER message
+        const addProviderRequest = await pb.read(Message);
+        expect(addProviderRequest.type).to.equal(MessageType.ADD_PROVIDER);
+    });
+    it('should find providers', async () => {
+        const remotePeer = createPeer(peers[3]);
+        const providerPeer = createPeer(peers[2]);
+        components.peerStore.get.withArgs(matchPeerId(remotePeer.id)).resolves(remotePeer);
+        const { connection, incomingStream } = createStreams(remotePeer.id, components);
+        // a peer has connected
+        const topology = components.registrar.register.getCall(0).args[1];
+        topology.onConnect?.(remotePeer.id, connection);
+        void Promise.resolve().then(async () => {
+            const pb = pbStream(incomingStream);
+            // read GET_PROVIDERS message
+            const getProvidersRequest = await pb.read(Message);
+            expect(getProvidersRequest.type).to.equal(MessageType.GET_PROVIDERS);
+            expect(getProvidersRequest.key).to.equalBytes(key.multihash.bytes);
+            // reply with the provider node
+            await pb.write({
+                type: MessageType.GET_PROVIDERS,
+                providers: [{
+                        id: providerPeer.id.toMultihash().bytes,
+                        multiaddrs: providerPeer.addresses.map(({ multiaddr }) => multiaddr.bytes)
+                    }]
+            }, Message);
+        });
+        // should have received the provider
+        await expect(all(map(contentRouting.findProviders(key), prov => ({
+            id: prov.id.toString(),
+            multiaddrs: prov.multiaddrs.map(ma => ma.toString())
+        })))).to.eventually.deep.equal([{
+                id: providerPeer.id.toString(),
+                multiaddrs: providerPeer.addresses.map(({ multiaddr }) => multiaddr.toString())
+            }]);
+    });
+});
+describe('peer routing', () => {
+    let peerRouting;
+    let components;
+    let dht;
+    let peers;
+    let key;
+    beforeEach(async () => {
+        key = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+        const unsortedPeers = await createPeerIds(5);
+        // sort remaining peers by XOR distance to the key, closest -> furthest
+        peers = await sortClosestPeers(unsortedPeers, await convertBuffer(key.multihash.bytes));
+        components = {
+            peerId: peers[peers.length - 1],
+            privateKey: peers[peers.length - 1].privateKey,
+            registrar: stubInterface(),
+            addressManager: stubInterface(),
+            peerStore: stubInterface({
+                all: async () => []
+            }),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            }),
+            datastore: new MemoryDatastore(),
+            events: new TypedEventEmitter(),
+            logger: defaultLogger()
+        };
+        dht = kadDHT({
+            protocol: PROTOCOL,
+            peerInfoMapper: passthroughMapper,
+            clientMode: false,
+            allowQueryWithZeroPeers: true
+        })(components);
+        await start(dht);
+        // @ts-expect-error cannot use symbol to index KadDHT type
+        peerRouting = dht[peerRoutingSymbol];
+    });
+    afterEach(async () => {
+        await stop(dht);
+    });
+    it('should find peer', async () => {
+        const remotePeer = createPeer(peers[1]);
+        const targetPeer = createPeer(peers[0]);
+        components.peerStore.get.withArgs(matchPeerId(remotePeer.id)).resolves(remotePeer);
+        const { connection, incomingStream } = createStreams(remotePeer.id, components);
+        // a peer has connected
+        const topology = components.registrar.register.getCall(0).args[1];
+        topology.onConnect?.(remotePeer.id, connection);
+        // begin find
+        const p = peerRouting.findPeer(peers[0]);
+        // read FIND_NODE message
+        const pb = pbStream(incomingStream);
+        const findNodeRequest = await pb.read(Message);
+        expect(findNodeRequest.type).to.equal(MessageType.FIND_NODE);
+        expect(findNodeRequest.key).to.equalBytes(peers[0].toMultihash().bytes);
+        // reply with this node
+        await pb.write({
+            type: MessageType.FIND_NODE,
+            closer: [{
+                    id: targetPeer.id.toMultihash().bytes,
+                    multiaddrs: targetPeer.addresses.map(({ multiaddr }) => multiaddr.bytes)
+                }]
+        }, Message);
+        const peerInfo = await p;
+        expect({
+            id: peerInfo.id.toString(),
+            multiaddrs: peerInfo.multiaddrs.map(ma => ma.toString())
+        }).to.deep.equal({
+            id: targetPeer.id.toString(),
+            multiaddrs: targetPeer.addresses.map(({ multiaddr }) => multiaddr.toString())
+        });
+    });
+    it('should find closest peers', async () => {
+        const remotePeer = createPeer(peers[3]);
+        const closestPeer = createPeer(peers[2]);
+        const remotePeerInteractionsComplete = pDefer();
+        const closestPeerInteractionsComplete = pDefer();
+        components.peerStore.get.withArgs(matchPeerId(remotePeer.id)).resolves(remotePeer);
+        components.peerStore.get.withArgs(matchPeerId(closestPeer.id)).resolves(closestPeer);
+        const { connection, incomingStream } = createStreams(remotePeer.id, components);
+        const { incomingStream: closestPeerIncomingStream } = createStreams(closestPeer.id, components);
+        // a peer has connected
+        const topology = components.registrar.register.getCall(0).args[1];
+        topology.onConnect?.(remotePeer.id, connection);
+        // remotePeer stream
+        void Promise.resolve().then(async () => {
+            const pb = pbStream(incomingStream);
+            // read FIND_NODE message
+            const findNodeRequest = await pb.read(Message);
+            expect(findNodeRequest.type).to.equal(MessageType.FIND_NODE);
+            expect(findNodeRequest.key).to.equalBytes(key.multihash.bytes);
+            // reply with the closest node
+            await pb.write({
+                type: MessageType.FIND_NODE,
+                closer: [{
+                        id: closestPeer.id.toMultihash().bytes,
+                        multiaddrs: closestPeer.addresses.map(({ multiaddr }) => multiaddr.bytes)
+                    }]
+            }, Message);
+            remotePeerInteractionsComplete.resolve();
+        });
+        // closestPeer stream
+        void Promise.resolve().then(async () => {
+            const pb = pbStream(closestPeerIncomingStream);
+            // read FIND_NODE message
+            const findNodeRequest = await pb.read(Message);
+            expect(findNodeRequest.type).to.equal(MessageType.FIND_NODE);
+            expect(findNodeRequest.key).to.equalBytes(key.multihash.bytes);
+            // we are the closest so no closer peers
+            await pb.write({
+                type: MessageType.FIND_NODE
+            }, Message);
+            closestPeerInteractionsComplete.resolve();
+        });
+        // should have received the closest peer
+        await expect(all(map(peerRouting.getClosestPeers(key.multihash.bytes), prov => ({
+            id: prov.id.toString(),
+            multiaddrs: prov.multiaddrs.map(ma => ma.toString())
+        })))).to.eventually.deep.equal([{
+                id: closestPeer.id.toString(),
+                multiaddrs: closestPeer.addresses.map(({ multiaddr }) => multiaddr.toString())
+            }]);
+        await expect(remotePeerInteractionsComplete.promise).to.eventually.be.undefined();
+        await expect(closestPeerInteractionsComplete.promise).to.eventually.be.undefined();
+    });
+});
+//# sourceMappingURL=libp2p-routing.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.js.map
new file mode 100644
index 0000000..0ebc97b
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/libp2p-routing.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"libp2p-routing.spec.js","sourceRoot":"","sources":["../../test/libp2p-routing.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/message.node.d.ts b/node_modules/@libp2p/kad-dht/dist/test/message.node.d.ts
new file mode 100644
index 0000000..d140821
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/message.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=message.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/message.node.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/message.node.d.ts.map
new file mode 100644
index 0000000..931e2a8
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/message.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"message.node.d.ts","sourceRoot":"","sources":["../../test/message.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/message.node.js b/node_modules/@libp2p/kad-dht/dist/test/message.node.js
new file mode 100644
index 0000000..a6a3d86
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/message.node.js
@@ -0,0 +1,29 @@
+/* eslint-env mocha */
+import fs from 'fs';
+import path from 'path';
+import { isPeerId } from '@libp2p/interface';
+import { peerIdFromMultihash } from '@libp2p/peer-id';
+import { Libp2pRecord } from '@libp2p/record';
+import { expect } from 'aegir/chai';
+import range from 'lodash.range';
+import * as Digest from 'multiformats/hashes/digest';
+import { Message } from '../src/message/dht.js';
+describe('Message', () => {
+    it('go-interop', () => {
+        range(1, 9).forEach((i) => {
+            const raw = fs.readFileSync(path.join(process.cwd(), 'test', 'fixtures', `msg-${i}`));
+            const msg = Message.decode(raw);
+            expect(msg.clusterLevel).to.gte(0);
+            if (msg.record != null) {
+                const record = Libp2pRecord.deserialize(msg.record);
+                expect(record.key).to.be.a('Uint8Array');
+            }
+            if (msg.providers.length > 0) {
+                msg.providers.forEach((p) => {
+                    expect(isPeerId(peerIdFromMultihash(Digest.decode(p.id)))).to.be.true();
+                });
+            }
+        });
+    });
+});
+//# sourceMappingURL=message.node.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/message.node.js.map b/node_modules/@libp2p/kad-dht/dist/test/message.node.js.map
new file mode 100644
index 0000000..701b8b1
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/message.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"message.node.js","sourceRoot":"","sources":["../../test/message.node.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,MAAM,IAAI,CAAA;AACnB,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAC5C,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAA;AACrD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAC7C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,cAAc,CAAA;AAChC,OAAO,KAAK,MAAM,MAAM,4BAA4B,CAAA;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAA;AAE/C,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;QACpB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACxB,MAAM,GAAG,GAAG,EAAE,CAAC,YAAY,CACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,EAAE,CAAC,CACzD,CAAA;YAED,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;YAE/B,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YAClC,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE,CAAC;gBACvB,MAAM,MAAM,GAAG,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;gBAEnD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAA;YAC1C,CAAC;YAED,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC7B,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC1B,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;gBACzE,CAAC,CAAC,CAAA;YACJ,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/message.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/message.spec.d.ts
new file mode 100644
index 0000000..35f5cbb
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/message.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=message.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/message.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/message.spec.d.ts.map
new file mode 100644
index 0000000..e237c20
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/message.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"message.spec.d.ts","sourceRoot":"","sources":["../../test/message.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/message.spec.js b/node_modules/@libp2p/kad-dht/dist/test/message.spec.js
new file mode 100644
index 0000000..d91785c
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/message.spec.js
@@ -0,0 +1,58 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { Libp2pRecord } from '@libp2p/record';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import random from 'lodash.random';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { Message, MessageType } from '../src/message/dht.js';
+import { toPbPeerInfo } from '../src/message/utils.js';
+describe('Message', () => {
+    it('serialize & deserialize', async function () {
+        this.timeout(10 * 1000);
+        const peers = await Promise.all(Array.from({ length: 5 }).map(async () => peerIdFromPrivateKey(await generateKeyPair('Ed25519'))));
+        const closer = peers.slice(0, 5).map((p) => ({
+            id: p,
+            multiaddrs: [
+                multiaddr(`/ip4/198.176.1.${random(198)}/tcp/1234`),
+                multiaddr(`/ip4/100.176.1.${random(198)}`)
+            ]
+        }));
+        const providers = peers.slice(0, 5).map((p) => ({
+            id: p,
+            multiaddrs: [
+                multiaddr(`/ip4/98.176.1.${random(198)}/tcp/1234`),
+                multiaddr(`/ip4/10.176.1.${random(198)}`)
+            ]
+        }));
+        const record = new Libp2pRecord(uint8ArrayFromString('hello'), uint8ArrayFromString('world'), new Date());
+        const msg = {
+            type: MessageType.GET_VALUE,
+            key: uint8ArrayFromString('hello'),
+            closer: closer.map(peer => toPbPeerInfo(peer)),
+            providers: providers.map(peer => toPbPeerInfo(peer)),
+            record: record.serialize()
+        };
+        const enc = Message.encode(msg);
+        const dec = Message.decode(enc);
+        expect(dec.type).to.be.eql(msg.type);
+        expect(dec.key).to.be.eql(msg.key);
+        expect(dec.clusterLevel).to.be.eql(msg.clusterLevel);
+        if (dec.record == null) {
+            throw new Error('No record found');
+        }
+        expect(dec.record).to.equalBytes(record.serialize());
+        expect(dec.closer).to.have.length(5);
+        dec.closer.forEach((peer, i) => {
+            expect(peer.id).equalBytes(msg.closer?.[i].id);
+            expect(peer.multiaddrs).to.deep.equal(msg.closer?.[i].multiaddrs);
+        });
+        expect(dec.providers).to.have.length(5);
+        dec.providers.forEach((peer, i) => {
+            expect(peer.id).equalBytes(msg.providers?.[i].id);
+            expect(peer.multiaddrs).to.deep.equal(msg.providers?.[i].multiaddrs);
+        });
+    });
+});
+//# sourceMappingURL=message.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/message.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/message.spec.js.map
new file mode 100644
index 0000000..9a297d8
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/message.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"message.spec.js","sourceRoot":"","sources":["../../test/message.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.d.ts
new file mode 100644
index 0000000..81e2813
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=multiple-nodes.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.d.ts.map
new file mode 100644
index 0000000..fd48d9e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"multiple-nodes.spec.d.ts","sourceRoot":"","sources":["../../test/multiple-nodes.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.js b/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.js
new file mode 100644
index 0000000..ee702b0
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.js
@@ -0,0 +1,88 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import drain from 'it-drain';
+import last from 'it-last';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { TestDHT } from './utils/test-dht.js';
+describe('multiple nodes', function () {
+    this.timeout(60 * 1000);
+    const n = 8;
+    let tdht;
+    let dhts;
+    // spawn nodes
+    beforeEach(async function () {
+        tdht = new TestDHT();
+        dhts = await Promise.all(new Array(n).fill(0).map(async () => tdht.spawn({
+            clientMode: false
+        })));
+        // all nodes except the last one
+        const range = Array.from(Array(n - 1).keys());
+        // connect the last one with the others one by one
+        return Promise.all(range.map(async (i) => { await tdht.connect(dhts[n - 1], dhts[i]); }));
+    });
+    afterEach(async function () {
+        await tdht.teardown();
+    });
+    it('put to "bootstrap" node and get with the others', async function () {
+        const key = uint8ArrayFromString('/v/hello0');
+        const value = uint8ArrayFromString('world');
+        await drain(dhts[7].put(key, value));
+        const res = await Promise.all([
+            last(dhts[0].get(key)),
+            last(dhts[1].get(key)),
+            last(dhts[2].get(key)),
+            last(dhts[3].get(key)),
+            last(dhts[4].get(key)),
+            last(dhts[5].get(key)),
+            last(dhts[6].get(key))
+        ]);
+        expect(res[0]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[1]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[2]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[3]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[4]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[5]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[6]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+    });
+    it('put to a node and get with the others', async function () {
+        const key = uint8ArrayFromString('/v/hello1');
+        const value = uint8ArrayFromString('world');
+        await drain(dhts[1].put(key, value));
+        const res = await Promise.all([
+            last(dhts[0].get(key)),
+            last(dhts[2].get(key)),
+            last(dhts[3].get(key)),
+            last(dhts[4].get(key)),
+            last(dhts[5].get(key)),
+            last(dhts[6].get(key)),
+            last(dhts[7].get(key))
+        ]);
+        expect(res[0]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[1]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[2]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[3]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[4]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[5]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+        expect(res[6]).have.property('value').that.equalBytes(uint8ArrayFromString('world'));
+    });
+    it('put to several nodes in series with different values and get the last one in a subset of them', async function () {
+        const key = uint8ArrayFromString('/v/hallo');
+        const result = uint8ArrayFromString('world4');
+        await drain(dhts[0].put(key, uint8ArrayFromString('world0')));
+        await drain(dhts[1].put(key, uint8ArrayFromString('world1')));
+        await drain(dhts[2].put(key, uint8ArrayFromString('world2')));
+        await drain(dhts[3].put(key, uint8ArrayFromString('world3')));
+        await drain(dhts[4].put(key, uint8ArrayFromString('world4')));
+        const res = await Promise.all([
+            last(dhts[4].get(key)),
+            last(dhts[5].get(key)),
+            last(dhts[6].get(key)),
+            last(dhts[7].get(key))
+        ]);
+        expect(res[0]).have.property('value').that.equalBytes(result);
+        expect(res[1]).have.property('value').that.equalBytes(result);
+        expect(res[2]).have.property('value').that.equalBytes(result);
+        expect(res[3]).have.property('value').that.equalBytes(result);
+    });
+});
+//# sourceMappingURL=multiple-nodes.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.js.map
new file mode 100644
index 0000000..95bab50
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/multiple-nodes.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"multiple-nodes.spec.js","sourceRoot":"","sources":["../../test/multiple-nodes.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/network.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/network.spec.d.ts
new file mode 100644
index 0000000..d3353d2
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/network.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=network.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/network.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/network.spec.d.ts.map
new file mode 100644
index 0000000..4a361da
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/network.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"network.spec.d.ts","sourceRoot":"","sources":["../../test/network.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/network.spec.js b/node_modules/@libp2p/kad-dht/dist/test/network.spec.js
new file mode 100644
index 0000000..3430b4a
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/network.spec.js
@@ -0,0 +1,83 @@
+/* eslint-env mocha */
+import { mockStream } from '@libp2p/interface-compliance-tests/mocks';
+import { expect } from 'aegir/chai';
+import all from 'it-all';
+import * as lp from 'it-length-prefixed';
+import pDefer from 'p-defer';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { Message, MessageType } from '../src/message/dht.js';
+import { TestDHT } from './utils/test-dht.js';
+describe('Network', () => {
+    let dht;
+    let tdht;
+    before(async function () {
+        this.timeout(10 * 1000);
+        tdht = new TestDHT();
+        dht = await tdht.spawn({
+            clientMode: false
+        });
+    });
+    after(async () => { await tdht.teardown(); });
+    describe('sendRequest', () => {
+        it('send and response echo', async () => {
+            const msg = {
+                type: MessageType.PING,
+                key: uint8ArrayFromString('hello')
+            };
+            const events = await all(dht.network.sendRequest(dht.components.peerId, msg));
+            const response = events
+                .filter(event => event.name === 'PEER_RESPONSE')
+                .pop();
+            expect(response).to.have.property('messageType', MessageType.PING);
+        });
+        it('send and response different messages', async () => {
+            const defer = pDefer();
+            let i = 0;
+            const finish = () => {
+                if (i++ === 1) {
+                    defer.resolve();
+                }
+            };
+            const msg = {
+                type: MessageType.PING,
+                key: uint8ArrayFromString('hello')
+            };
+            // mock it
+            dht.components.connectionManager.openConnection = async (peer) => {
+                // @ts-expect-error incomplete implementation
+                const connection = {
+                    newStream: async (protocols) => {
+                        const protocol = Array.isArray(protocols) ? protocols[0] : protocols;
+                        const msg = {
+                            type: MessageType.FIND_NODE,
+                            key: uint8ArrayFromString('world')
+                        };
+                        const source = (async function* () {
+                            yield lp.encode.single(Message.encode(msg));
+                        })();
+                        const sink = async (source) => {
+                            for await (const buf of lp.decode(source)) {
+                                expect(Message.decode(buf).type).to.eql(MessageType.PING);
+                                finish();
+                            }
+                        };
+                        const stream = mockStream({ source, sink });
+                        return {
+                            ...stream,
+                            protocol
+                        };
+                    }
+                };
+                return connection;
+            };
+            const events = await all(dht.network.sendRequest(dht.components.peerId, msg));
+            const response = events
+                .filter(event => event.name === 'PEER_RESPONSE')
+                .pop();
+            expect(response).to.have.property('messageType', MessageType.FIND_NODE);
+            finish();
+            return defer.promise;
+        });
+    });
+});
+//# sourceMappingURL=network.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/network.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/network.spec.js.map
new file mode 100644
index 0000000..f6d4801
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/network.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"network.spec.js","sourceRoot":"","sources":["../../test/network.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.d.ts
new file mode 100644
index 0000000..94d84e2
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-distance-list.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.d.ts.map
new file mode 100644
index 0000000..cd0831b
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-distance-list.spec.d.ts","sourceRoot":"","sources":["../../test/peer-distance-list.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.js b/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.js
new file mode 100644
index 0000000..e1be5f3
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.js
@@ -0,0 +1,87 @@
+/* eslint-env mocha */
+import { peerIdFromString } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import { PeerDistanceList } from '../src/peer-list/peer-distance-list.js';
+import * as kadUtils from '../src/utils.js';
+describe('PeerDistanceList', () => {
+    const p1 = { id: peerIdFromString('12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE1'), multiaddrs: [] };
+    const p2 = { id: peerIdFromString('12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE2'), multiaddrs: [] };
+    const p3 = { id: peerIdFromString('12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE3'), multiaddrs: [] };
+    const p4 = { id: peerIdFromString('12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE4'), multiaddrs: [] };
+    const p5 = { id: peerIdFromString('12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE1'), multiaddrs: [] };
+    const p6 = { id: peerIdFromString('12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE5'), multiaddrs: [] };
+    const p7 = { id: peerIdFromString('12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE2'), multiaddrs: [] };
+    let key;
+    before(async () => {
+        key = await kadUtils.convertPeerId(p1.id);
+    });
+    describe('basics', () => {
+        it('add', async () => {
+            const pdl = new PeerDistanceList(key, 100);
+            await pdl.add(p3);
+            await pdl.add(p1);
+            await pdl.add(p2);
+            await pdl.add(p4);
+            await pdl.add(p5);
+            await pdl.add(p1);
+            // Note: p1 and p5 are equal
+            expect(pdl.length).to.eql(4);
+            expect(pdl.peers).to.be.eql([p1, p4, p3, p2]);
+        });
+        it('capacity', async () => {
+            const pdl = new PeerDistanceList(key, 3);
+            await pdl.add(p1);
+            await pdl.add(p2);
+            await pdl.add(p3);
+            await pdl.add(p4);
+            await pdl.add(p5);
+            await pdl.add(p6);
+            // Note: p1 and p5 are equal
+            expect(pdl.length).to.eql(3);
+            // Closer peers added later should replace further
+            // peers added earlier
+            expect(pdl.peers).to.be.eql([p1, p4, p3]);
+        });
+    });
+    describe('closer', () => {
+        let pdl;
+        before(async () => {
+            pdl = new PeerDistanceList(key, 100);
+            await pdl.add(p1);
+            await pdl.add(p2);
+            await pdl.add(p3);
+            await pdl.add(p4);
+        });
+        it('single closer peer', async () => {
+            const closer = await pdl.anyCloser([p6.id]);
+            expect(closer).to.be.eql(true);
+        });
+        it('single further peer', async () => {
+            const closer = await pdl.anyCloser([p7.id]);
+            expect(closer).to.be.eql(false);
+        });
+        it('closer and further peer', async () => {
+            const closer = await pdl.anyCloser([p6.id, p7.id]);
+            expect(closer).to.be.eql(true);
+        });
+        it('single peer equal to furthest in list', async () => {
+            const closer = await pdl.anyCloser([p2.id]);
+            expect(closer).to.be.eql(false);
+        });
+        it('no peers', async () => {
+            const closer = await pdl.anyCloser([]);
+            expect(closer).to.be.eql(false);
+        });
+        it('empty peer distance list', async () => {
+            const pdl = new PeerDistanceList(key, 100);
+            const closer = await pdl.anyCloser([p1.id]);
+            expect(closer).to.be.eql(true);
+        });
+        it('empty peer distance list and no peers', async () => {
+            const pdl = new PeerDistanceList(key, 100);
+            const closer = await pdl.anyCloser([]);
+            expect(closer).to.be.eql(false);
+        });
+    });
+});
+//# sourceMappingURL=peer-distance-list.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.js.map
new file mode 100644
index 0000000..016e043
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/peer-distance-list.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-distance-list.spec.js","sourceRoot":"","sources":["../../test/peer-distance-list.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAA;AAClD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,gBAAgB,EAAE,MAAM,wCAAwC,CAAA;AACzE,OAAO,KAAK,QAAQ,MAAM,iBAAiB,CAAA;AAE3C,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,gBAAgB,CAAC,sDAAsD,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAA;IAC3G,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,gBAAgB,CAAC,sDAAsD,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAA;IAC3G,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,gBAAgB,CAAC,sDAAsD,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAA;IAC3G,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,gBAAgB,CAAC,sDAAsD,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAA;IAC3G,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,gBAAgB,CAAC,sDAAsD,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAA;IAC3G,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,gBAAgB,CAAC,sDAAsD,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAA;IAC3G,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,gBAAgB,CAAC,sDAAsD,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAA;IAE3G,IAAI,GAAe,CAAA;IACnB,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,GAAG,GAAG,MAAM,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;IAC3C,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACtB,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,EAAE;YACnB,MAAM,GAAG,GAAG,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;YAE1C,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YAEjB,4BAA4B;YAC5B,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YAC5B,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,MAAM,GAAG,GAAG,IAAI,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;YAExC,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YAEjB,4BAA4B;YAC5B,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YAE5B,kDAAkD;YAClD,sBAAsB;YACtB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;QAC3C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACtB,IAAI,GAAqB,CAAA;QAEzB,MAAM,CAAC,KAAK,IAAI,EAAE;YAChB,GAAG,GAAG,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;YAEpC,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;QACnB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;YAClC,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAE3C,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QAChC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;YACnC,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAE3C,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACjC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;YACvC,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAElD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QAChC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACrD,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAE3C,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACjC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;YAEtC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACjC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YACxC,MAAM,GAAG,GAAG,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;YAC1C,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAE3C,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QAChC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACrD,MAAM,GAAG,GAAG,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;YAC1C,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;YAEtC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACjC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.d.ts
new file mode 100644
index 0000000..070e8d3
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-list.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.d.ts.map
new file mode 100644
index 0000000..c36e744
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-list.spec.d.ts","sourceRoot":"","sources":["../../test/peer-list.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.js b/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.js
new file mode 100644
index 0000000..4ac8002
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.js
@@ -0,0 +1,21 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { PeerList } from '../src/peer-list/index.js';
+import { createPeerIds } from './utils/create-peer-id.js';
+describe('PeerList', () => {
+    let peers;
+    before(async () => {
+        peers = await createPeerIds(3);
+    });
+    it('basics', () => {
+        const l = new PeerList();
+        expect(l.push(peers[0])).to.eql(true);
+        expect(l.push(peers[0])).to.eql(false);
+        expect(l).to.have.length(1);
+        expect(l.push(peers[1])).to.eql(true);
+        expect(l.pop()).to.eql(peers[1]);
+        expect(l).to.have.length(1);
+        expect(l.toArray()).to.eql([peers[0]]);
+    });
+});
+//# sourceMappingURL=peer-list.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.js.map
new file mode 100644
index 0000000..44efe34
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/peer-list.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-list.spec.js","sourceRoot":"","sources":["../../test/peer-list.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAA;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAA;AAGzD,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,IAAI,KAAe,CAAA;IAEnB,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,KAAK,GAAG,MAAM,aAAa,CAAC,CAAC,CAAC,CAAA;IAChC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;QAChB,MAAM,CAAC,GAAG,IAAI,QAAQ,EAAE,CAAA;QAExB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACrC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACtC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QAC3B,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACrC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QAChC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QAC3B,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IACxC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/providers.node.d.ts b/node_modules/@libp2p/kad-dht/dist/test/providers.node.d.ts
new file mode 100644
index 0000000..5d608fa
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/providers.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=providers.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/providers.node.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/providers.node.d.ts.map
new file mode 100644
index 0000000..1ce1110
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/providers.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"providers.node.d.ts","sourceRoot":"","sources":["../../test/providers.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/providers.node.js b/node_modules/@libp2p/kad-dht/dist/test/providers.node.js
new file mode 100644
index 0000000..e434f62
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/providers.node.js
@@ -0,0 +1,53 @@
+/* eslint-env mocha */
+import os from 'os';
+import path from 'path';
+import { defaultLogger } from '@libp2p/logger';
+import { MemoryDatastore } from 'datastore-core/memory';
+import { LevelDatastore } from 'datastore-level';
+import { Providers } from '../src/providers.js';
+import { createPeerIds } from './utils/create-peer-id.js';
+import { createValues } from './utils/create-values.js';
+describe('Providers', () => {
+    let providers;
+    before(async function () {
+        this.timeout(10 * 1000);
+    });
+    afterEach(async () => {
+        await providers?.stop();
+    });
+    // slooow so only run when you need to
+    it.skip('many', async function () {
+        const p = path.join(os.tmpdir(), (Math.random() * 100).toString());
+        const store = new LevelDatastore(p);
+        await store.open();
+        providers = new Providers({
+            datastore: new MemoryDatastore(),
+            logger: defaultLogger()
+        }, {
+            cacheSize: 10
+        });
+        console.log('starting'); // eslint-disable-line no-console
+        const [createdValues, createdPeers] = await Promise.all([
+            createValues(100),
+            createPeerIds(600)
+        ]);
+        console.log('got values and peers'); // eslint-disable-line no-console
+        const total = Date.now();
+        for (const v of createdValues) {
+            for (const p of createdPeers) {
+                await providers.addProvider(v.cid, p);
+            }
+        }
+        console.log('addProvider %s peers %s cids in %sms', createdPeers.length, createdValues.length, Date.now() - total); // eslint-disable-line no-console
+        console.log('starting profile with %s peers and %s cids', createdPeers.length, createdValues.length); // eslint-disable-line no-console
+        for (let i = 0; i < 3; i++) {
+            const start = Date.now();
+            for (const v of createdValues) {
+                await providers.getProviders(v.cid);
+                console.log('query %sms', (Date.now() - start)); // eslint-disable-line no-console
+            }
+        }
+        await store.close();
+    });
+});
+//# sourceMappingURL=providers.node.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/providers.node.js.map b/node_modules/@libp2p/kad-dht/dist/test/providers.node.js.map
new file mode 100644
index 0000000..81246fa
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/providers.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"providers.node.js","sourceRoot":"","sources":["../../test/providers.node.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/providers.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/providers.spec.d.ts
new file mode 100644
index 0000000..41a6c1d
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/providers.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=providers.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/providers.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/providers.spec.d.ts.map
new file mode 100644
index 0000000..d00b61b
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/providers.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"providers.spec.d.ts","sourceRoot":"","sources":["../../test/providers.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/providers.spec.js b/node_modules/@libp2p/kad-dht/dist/test/providers.spec.js
new file mode 100644
index 0000000..c3fcadc
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/providers.spec.js
@@ -0,0 +1,95 @@
+/* eslint-env mocha */
+import { defaultLogger } from '@libp2p/logger';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core/memory';
+import delay from 'delay';
+import { CID } from 'multiformats/cid';
+import { sha256 } from 'multiformats/hashes/sha2';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { Providers } from '../src/providers.js';
+import { createPeerIds } from './utils/create-peer-id.js';
+describe('Providers', () => {
+    let peers;
+    let providers;
+    before(async function () {
+        this.timeout(10 * 1000);
+        peers = await createPeerIds(3);
+    });
+    afterEach(async () => {
+        await providers?.stop();
+    });
+    it('simple add and get of providers', async () => {
+        providers = new Providers({
+            datastore: new MemoryDatastore(),
+            logger: defaultLogger()
+        });
+        const cid = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n');
+        await Promise.all([
+            providers.addProvider(cid, peers[0]),
+            providers.addProvider(cid, peers[1])
+        ]);
+        const provs = await providers.getProviders(cid);
+        const ids = new Set(provs.map((peerId) => peerId.toString()));
+        expect(ids.has(peers[0].toString())).to.be.eql(true);
+    });
+    it('duplicate add of provider is deduped', async () => {
+        providers = new Providers({
+            datastore: new MemoryDatastore(),
+            logger: defaultLogger()
+        });
+        const cid = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n');
+        await Promise.all([
+            providers.addProvider(cid, peers[0]),
+            providers.addProvider(cid, peers[0]),
+            providers.addProvider(cid, peers[1]),
+            providers.addProvider(cid, peers[1]),
+            providers.addProvider(cid, peers[1])
+        ]);
+        const provs = await providers.getProviders(cid);
+        expect(provs).to.have.length(2);
+        const ids = new Set(provs.map((peerId) => peerId.toString()));
+        expect(ids.has(peers[0].toString())).to.be.eql(true);
+    });
+    it('more providers than space in the lru cache', async () => {
+        providers = new Providers({
+            datastore: new MemoryDatastore(),
+            logger: defaultLogger()
+        }, {
+            cacheSize: 10
+        });
+        const hashes = await Promise.all([...new Array(100)].map(async (i) => {
+            return sha256.digest(uint8ArrayFromString(`hello ${i}`));
+        }));
+        const cids = hashes.map((h) => CID.createV0(h));
+        await Promise.all(cids.map(async (cid) => { await providers.addProvider(cid, peers[0]); }));
+        const provs = await Promise.all(cids.map(async (cid) => providers.getProviders(cid)));
+        expect(provs).to.have.length(100);
+        for (const p of provs) {
+            expect(p[0].toString()).to.be.equal(peers[0].toString());
+        }
+    });
+    it('expires', async () => {
+        providers = new Providers({
+            datastore: new MemoryDatastore(),
+            logger: defaultLogger()
+        }, {
+            cleanupInterval: 100,
+            provideValidity: 200
+        });
+        await providers.start();
+        const cid = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n');
+        await Promise.all([
+            providers.addProvider(cid, peers[0]),
+            providers.addProvider(cid, peers[1])
+        ]);
+        const provs = await providers.getProviders(cid);
+        expect(provs).to.have.length(2);
+        expect(provs[0].toString()).to.be.equal(peers[0].toString());
+        expect(provs[1].toString()).to.be.deep.equal(peers[1].toString());
+        await delay(400);
+        const provsAfter = await providers.getProviders(cid);
+        expect(provsAfter).to.have.length(0);
+        await providers.stop();
+    });
+});
+//# sourceMappingURL=providers.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/providers.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/providers.spec.js.map
new file mode 100644
index 0000000..294d14c
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/providers.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"providers.spec.js","sourceRoot":"","sources":["../../test/providers.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.d.ts
new file mode 100644
index 0000000..9ded5b7
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=query-self.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.d.ts.map
new file mode 100644
index 0000000..06921bc
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"query-self.spec.d.ts","sourceRoot":"","sources":["../../test/query-self.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.js b/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.js
new file mode 100644
index 0000000..67a4965
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.js
@@ -0,0 +1,98 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import pDefer from 'p-defer';
+import { stubInterface } from 'sinon-ts';
+import { finalPeerEvent } from '../src/query/events.js';
+import { QuerySelf } from '../src/query-self.js';
+describe('Query Self', () => {
+    let peerId;
+    let querySelf;
+    let peerRouting;
+    let routingTable;
+    let initialQuerySelfHasRun;
+    beforeEach(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        initialQuerySelfHasRun = pDefer();
+        routingTable = stubInterface();
+        peerRouting = stubInterface();
+        const components = {
+            peerId,
+            logger: defaultLogger()
+        };
+        const init = {
+            lan: false,
+            peerRouting,
+            routingTable,
+            initialQuerySelfHasRun,
+            logPrefix: ''
+        };
+        querySelf = new QuerySelf(components, init);
+    });
+    afterEach(() => {
+        if (querySelf != null) {
+            querySelf.stop();
+        }
+    });
+    it('should not run if not started', async () => {
+        await querySelf.querySelf();
+        expect(peerRouting.getClosestPeers).to.have.property('callCount', 0);
+    });
+    it('should wait for routing table peers before running first query', async () => {
+        querySelf.start();
+        // @ts-expect-error read-only property
+        routingTable.size = 0;
+        const querySelfPromise = querySelf.querySelf();
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        let initialQuerySelfHasRunResolved = false;
+        void initialQuerySelfHasRun.promise.then(() => {
+            initialQuerySelfHasRunResolved = true;
+        });
+        // should have registered a peer:add listener
+        expect(routingTable.addEventListener).to.have.property('callCount', 2);
+        expect(routingTable.addEventListener.getCall(0)).to.have.nested.property('args[0]', 'peer:add');
+        // self query results
+        peerRouting.getClosestPeers.withArgs(peerId.toMultihash().bytes).returns(async function* () {
+            yield finalPeerEvent({
+                from: remotePeer,
+                peer: {
+                    id: remotePeer,
+                    multiaddrs: []
+                }
+            });
+        }());
+        // @ts-expect-error args[1] type could be an object
+        routingTable.addEventListener.getCall(0).args[1](new CustomEvent('peer:add', { detail: remotePeer }));
+        // self-query should complete
+        await querySelfPromise;
+        // should have resolved initial query self promise
+        expect(initialQuerySelfHasRunResolved).to.be.true();
+    });
+    it('should join an existing query promise and not run twise', async () => {
+        querySelf.start();
+        // @ts-expect-error read-only property
+        routingTable.size = 0;
+        const querySelfPromise1 = querySelf.querySelf();
+        const querySelfPromise2 = querySelf.querySelf();
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        // self query results
+        peerRouting.getClosestPeers.withArgs(peerId.toMultihash().bytes).returns(async function* () {
+            yield finalPeerEvent({
+                from: remotePeer,
+                peer: {
+                    id: remotePeer,
+                    multiaddrs: []
+                }
+            });
+        }());
+        // @ts-expect-error args[1] type could be an object
+        routingTable.addEventListener.getCall(0).args[1](new CustomEvent('peer:add', { detail: remotePeer }));
+        // both self-query promises should resolve
+        await Promise.all([querySelfPromise1, querySelfPromise2]);
+        // should only have made one query
+        expect(peerRouting.getClosestPeers).to.have.property('callCount', 1);
+    });
+});
+//# sourceMappingURL=query-self.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.js.map
new file mode 100644
index 0000000..bcc6419
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/query-self.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"query-self.spec.js","sourceRoot":"","sources":["../../test/query-self.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/query.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/query.spec.d.ts
new file mode 100644
index 0000000..2589074
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/query.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=query.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/query.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/query.spec.d.ts.map
new file mode 100644
index 0000000..79757af
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/query.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"query.spec.d.ts","sourceRoot":"","sources":["../../test/query.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/query.spec.js b/node_modules/@libp2p/kad-dht/dist/test/query.spec.js
new file mode 100644
index 0000000..9226692
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/query.spec.js
@@ -0,0 +1,816 @@
+/* eslint-env mocha */
+import { defaultLogger } from '@libp2p/logger';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import all from 'it-all';
+import drain from 'it-drain';
+import pDefer from 'p-defer';
+import { stubInterface } from 'sinon-ts';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { EventTypes } from '../src/index.js';
+import { MessageType } from '../src/message/dht.js';
+import { peerResponseEvent, valueEvent, queryErrorEvent } from '../src/query/events.js';
+import { QueryManager } from '../src/query/manager.js';
+import { convertBuffer } from '../src/utils.js';
+import { createPeerId, createPeerIds } from './utils/create-peer-id.js';
+import { sortClosestPeers } from './utils/sort-closest-peers.js';
+describe('QueryManager', () => {
+    let ourPeerId;
+    let peers;
+    let key;
+    let routingTable;
+    const defaultInit = () => {
+        const init = {
+            initialQuerySelfHasRun: pDefer(),
+            routingTable,
+            logPrefix: ''
+        };
+        init.initialQuerySelfHasRun.resolve();
+        return init;
+    };
+    function createTopology(opts) {
+        const topology = {};
+        Object.keys(opts).forEach(key => {
+            const id = parseInt(key);
+            const from = peers[id];
+            const config = opts[id];
+            let event;
+            if (config.value !== undefined) {
+                event = valueEvent({ from, value: config.value });
+            }
+            else if (config.error != null) {
+                event = queryErrorEvent({ from, error: config.error });
+            }
+            else {
+                event = peerResponseEvent({
+                    from,
+                    messageType: MessageType.GET_VALUE,
+                    closer: (config.closerPeers ?? []).map((id) => ({
+                        id: peers[id],
+                        multiaddrs: [],
+                        protocols: []
+                    }))
+                });
+            }
+            const entry = {
+                event
+            };
+            if (config.delay != null) {
+                entry.delay = config.delay;
+            }
+            topology[from.toString()] = entry;
+        });
+        return topology;
+    }
+    function createQueryFunction(topology) {
+        const queryFunc = async function* (context) {
+            const { peer } = context;
+            const res = topology[peer.toString()];
+            res.context = context;
+            if (res.delay != null) {
+                await delay(res.delay);
+            }
+            yield res.event;
+        };
+        return queryFunc;
+    }
+    before(async () => {
+        routingTable = stubInterface();
+        const unsortedPeers = await createPeerIds(39);
+        ourPeerId = await createPeerId();
+        key = (await createPeerId()).toMultihash().bytes;
+        // sort remaining peers by XOR distance to the key, low -> high
+        peers = await sortClosestPeers(unsortedPeers, await convertBuffer(key));
+    });
+    beforeEach(async () => {
+        routingTable.closestPeers.returns(peers);
+    });
+    it('does not run queries before start', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 1
+        });
+        // @ts-expect-error not enough params
+        await expect(all(manager.run())).to.eventually.be.rejectedWith(/not started/);
+    });
+    it('does not run queries after stop', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 1
+        });
+        await manager.start();
+        await manager.stop();
+        // @ts-expect-error not enough params
+        await expect(all(manager.run())).to.eventually.be.rejectedWith(/not started/);
+    });
+    it('should pass query context', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 1
+        });
+        await manager.start();
+        const queryFunc = async function* (context) {
+            expect(context).to.have.property('key').that.equalBytes(key);
+            expect(context).to.have.property('peer').that.deep.equals(peers[0]);
+            expect(context).to.have.property('signal').that.is.an.instanceOf(AbortSignal);
+            expect(context).to.have.property('pathIndex').that.equals(0);
+            expect(context).to.have.property('numPaths').that.equals(1);
+            yield valueEvent({
+                from: context.peer,
+                value: uint8ArrayFromString('cool')
+            });
+        };
+        const results = await all(manager.run(key, queryFunc));
+        expect(results).to.have.lengthOf(1);
+        // @ts-expect-error types are wrong
+        expect(results).to.deep.containSubset([{
+                value: uint8ArrayFromString('cool')
+            }]);
+        await manager.stop();
+    });
+    it('simple run - succeed finding value', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 1,
+            alpha: 1
+        });
+        await manager.start();
+        const peersQueried = [];
+        const queryFunc = async function* ({ peer, signal }) {
+            expect(signal).to.be.an.instanceOf(AbortSignal);
+            peersQueried.push(peer);
+            if (peersQueried.length === 1) {
+                // query more peers
+                yield peerResponseEvent({
+                    from: peer,
+                    messageType: MessageType.GET_VALUE,
+                    closer: peers.slice(0, 5).map(id => ({ id, multiaddrs: [], protocols: [] }))
+                });
+            }
+            else if (peersQueried.length === 6) {
+                // all peers queried, return result
+                yield valueEvent({
+                    from: peer,
+                    value: uint8ArrayFromString('cool')
+                });
+            }
+            else {
+                // a peer that cannot help in our query
+                yield peerResponseEvent({
+                    from: peer,
+                    messageType: MessageType.GET_VALUE
+                });
+            }
+        };
+        routingTable.closestPeers.returns([peers[7]]);
+        const results = await all(manager.run(key, queryFunc));
+        // e.g. our starting peer plus the 5x closerPeers returned n the first iteration
+        expect(results).to.have.lengthOf(6);
+        expect(results).to.containSubset([{
+                value: uint8ArrayFromString('cool')
+            }]);
+        // should be a result in there somewhere
+        await manager.stop();
+    });
+    it('simple run - fail to find value', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 1,
+            alpha: 1
+        });
+        await manager.start();
+        const peersQueried = [];
+        const queryFunc = async function* ({ peer }) {
+            peersQueried.push(peer);
+            if (peersQueried.length === 1) {
+                // query more peers
+                yield peerResponseEvent({
+                    from: peer,
+                    messageType: MessageType.GET_VALUE,
+                    closer: peers.slice(0, 5).map(id => ({ id, multiaddrs: [], protocols: [] }))
+                });
+            }
+            else {
+                // a peer that cannot help in our query
+                yield peerResponseEvent({
+                    from: peer,
+                    messageType: MessageType.GET_VALUE
+                });
+            }
+        };
+        routingTable.closestPeers.returns([peers[7]]);
+        const results = await all(manager.run(key, queryFunc));
+        // e.g. our starting peer plus the 5x closerPeers returned n the first iteration
+        expect(results).to.have.lengthOf(6);
+        // should not be a result in there
+        expect(results.find(res => res.name === 'VALUE')).to.not.be.ok();
+        await manager.stop();
+    });
+    it('should abort a query', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 2,
+            alpha: 1
+        });
+        await manager.start();
+        const deferred = pDefer();
+        const controller = new AbortController();
+        let aborted;
+        // 0 -> 10 -> 11 -> 12...
+        // 1 -> 20 -> 21 -> 22...
+        const topology = createTopology({
+            0: { closerPeers: [10] },
+            10: { closerPeers: [11] },
+            11: { closerPeers: [12] },
+            1: { closerPeers: [20] },
+            20: { closerPeers: [21] },
+            21: { closerPeers: [22] }
+        });
+        const queryFunc = async function* ({ peer, signal }) {
+            signal.addEventListener('abort', () => {
+                aborted = true;
+            });
+            deferred.resolve();
+            await delay(1000);
+            yield topology[peer.toString()].event;
+        };
+        // start the query
+        const queryPromise = all(manager.run(key, queryFunc, { signal: controller.signal }));
+        // wait for the query function to be invoked
+        await deferred.promise;
+        // abort the query
+        controller.abort();
+        // the should have been aborted
+        await expect(queryPromise).to.eventually.be.rejected()
+            .with.property('name', 'QueryAbortedError');
+        expect(aborted).to.be.true();
+        await manager.stop();
+    });
+    it('should allow a sub-query to timeout without aborting the whole query', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 2,
+            alpha: 2
+        });
+        await manager.start();
+        // 2 -> 1 -> 0
+        // 4 -> 3 -> 0
+        const topology = createTopology({
+            0: { value: uint8ArrayFromString('true') },
+            1: { delay: 1000, closerPeers: [0] },
+            2: { delay: 1000, closerPeers: [1] },
+            3: { delay: 10, closerPeers: [0] },
+            4: { delay: 10, closerPeers: [3] }
+        });
+        const queryFunc = async function* ({ peer, signal }) {
+            let aborted = false;
+            signal.addEventListener('abort', () => {
+                aborted = true;
+            });
+            const res = topology[peer.toString()];
+            if (res.delay != null) {
+                await delay(res.delay);
+            }
+            if (aborted) {
+                throw new Error('Aborted by signal');
+            }
+            yield res.event;
+        };
+        routingTable.closestPeers.returns([peers[2], peers[4]]);
+        const result = await all(manager.run(key, queryFunc, { queryFuncTimeout: 500 }));
+        // should have traversed through the three nodes to the value and the one that timed out
+        expect(result).to.have.lengthOf(4);
+        expect(result).to.have.deep.nested.property('[2].value', uint8ArrayFromString('true'));
+        expect(result).to.have.nested.property('[3].error.message', 'Aborted by signal');
+        await manager.stop();
+    });
+    it('does not return an error if only some queries error', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 10
+        });
+        await manager.start();
+        const queryFunc = async function* ({ peer, pathIndex }) {
+            if (pathIndex % 2 === 0) {
+                yield queryErrorEvent({
+                    from: peer,
+                    error: new Error('Urk!')
+                });
+            }
+            else {
+                yield peerResponseEvent({ from: peer, messageType: MessageType.GET_VALUE });
+            }
+        };
+        const results = await all(manager.run(key, queryFunc));
+        // didn't add any extra peers during the query
+        expect(results).to.have.lengthOf(manager.disjointPaths);
+        // should not be a result in there
+        expect(results.find(res => res.name === 'VALUE')).to.not.be.ok();
+        // half of the results should have the error property
+        expect(results.reduce((acc, curr) => {
+            if (curr.name === 'QUERY_ERROR') {
+                return acc + 1;
+            }
+            return acc;
+        }, 0)).to.equal(5);
+        await manager.stop();
+    });
+    it('returns empty run if initial peer list is empty', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 10
+        });
+        await manager.start();
+        const queryFunc = async function* ({ peer }) {
+            yield valueEvent({ from: peer, value: uint8ArrayFromString('cool') });
+        };
+        routingTable.closestPeers.returns([]);
+        const results = await all(manager.run(key, queryFunc));
+        expect(results).to.have.lengthOf(0);
+        await manager.stop();
+    });
+    it('should query closer peers first', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 1,
+            alpha: 1
+        });
+        await manager.start();
+        // 9 -> 8 -> 7 -> 6 -> 5 -> 0
+        //  \-> 4 -> 3 -> 2 -> 1 -> 0     <-- should take this branch first
+        const topology = createTopology({
+            9: { closerPeers: [8, 4] },
+            8: { closerPeers: [7] },
+            7: { closerPeers: [6] },
+            6: { closerPeers: [5] },
+            5: { closerPeers: [0] },
+            4: { closerPeers: [3] },
+            3: { closerPeers: [2] },
+            2: { closerPeers: [1] },
+            1: { closerPeers: [0] },
+            0: { value: uint8ArrayFromString('hello world') }
+        });
+        routingTable.closestPeers.returns([peers[9]]);
+        const results = await all(manager.run(key, createQueryFunction(topology)));
+        const traversedPeers = results
+            .map(event => {
+            if (event.type !== EventTypes.PEER_RESPONSE && event.type !== EventTypes.VALUE) {
+                throw new Error(`Unexpected query event type ${event.type}`);
+            }
+            return event.from;
+        });
+        expect(traversedPeers).to.deep.equal([
+            peers[9],
+            peers[4],
+            peers[3],
+            peers[2],
+            peers[1],
+            peers[0],
+            peers[8],
+            peers[7],
+            peers[6],
+            peers[5]
+        ]);
+        await manager.stop();
+    });
+    it('should stop when passing through the same node twice', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 20,
+            alpha: 1
+        });
+        await manager.start();
+        const topology = createTopology({
+            6: { closerPeers: [2] },
+            5: { closerPeers: [4] },
+            4: { closerPeers: [3] },
+            3: { closerPeers: [2] },
+            2: { closerPeers: [1] },
+            1: { closerPeers: [0] },
+            0: { value: uint8ArrayFromString('hello world') }
+        });
+        routingTable.closestPeers.returns([peers[6], peers[5]]);
+        const results = await all(manager.run(key, createQueryFunction(topology)));
+        const traversedPeers = results
+            .map(event => {
+            if (event.type !== EventTypes.PEER_RESPONSE && event.type !== EventTypes.VALUE) {
+                throw new Error(`Unexpected query event type ${event.type}`);
+            }
+            return event.from;
+        });
+        expect(traversedPeers).lengthOf(7);
+        await manager.stop();
+    });
+    it('only closerPeers', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 1,
+            alpha: 1
+        });
+        await manager.start();
+        const queryFunc = async function* ({ peer }) {
+            yield peerResponseEvent({
+                from: peer,
+                messageType: MessageType.GET_VALUE,
+                closer: [{
+                        id: peers[2],
+                        multiaddrs: []
+                    }]
+            });
+        };
+        routingTable.closestPeers.returns([peers[3]]);
+        const results = await all(manager.run(key, queryFunc));
+        expect(results).to.have.lengthOf(2);
+        expect(results).to.have.deep.nested.property('[0].closer[0].id', peers[2]);
+        expect(results).to.have.deep.nested.property('[1].closer[0].id', peers[2]);
+        await manager.stop();
+    });
+    it('only closerPeers concurrent', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 3
+        });
+        await manager.start();
+        //  9 -> 2
+        //  8 -> 6 -> 4
+        //       5 -> 3
+        //  7 -> 1 -> 0
+        const topology = createTopology({
+            0: { closerPeers: [] },
+            1: { closerPeers: [0] },
+            2: { closerPeers: [] },
+            3: { closerPeers: [] },
+            4: { closerPeers: [] },
+            5: { closerPeers: [3] },
+            6: { closerPeers: [4, 5] },
+            7: { closerPeers: [1] },
+            8: { closerPeers: [6] },
+            9: { closerPeers: [2] }
+        });
+        routingTable.closestPeers.returns([peers[9], peers[8], peers[7]]);
+        const results = await all(manager.run(key, createQueryFunction(topology)));
+        // Should visit all peers
+        expect(results).to.have.lengthOf(10);
+        await manager.stop();
+    });
+    it('queries stop after shutdown', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 1,
+            alpha: 1
+        });
+        await manager.start();
+        // 3 -> 2 -> 1 -> 0
+        const topology = createTopology({
+            0: { closerPeers: [] },
+            // Should not reach here because query gets shut down
+            1: { closerPeers: [0] },
+            2: { closerPeers: [1] },
+            3: { closerPeers: [2] }
+        });
+        const visited = [];
+        const queryFunc = async function* ({ peer }) {
+            visited.push(peer);
+            const getResult = async () => {
+                const res = topology[peer.toString()];
+                // this delay is necessary so `dhtA.stop` has time to stop the
+                // requests before they all complete
+                await delay(100);
+                return res.event;
+            };
+            // Shut down after visiting peers[2]
+            if (peer === peers[2]) {
+                await manager.stop();
+                yield getResult();
+            }
+            yield getResult();
+        };
+        // shutdown will cause the query to stop early but without an error
+        routingTable.closestPeers.returns([peers[3]]);
+        await drain(manager.run(key, queryFunc));
+        // Should only visit peers up to the point where we shut down
+        expect(visited).to.have.lengthOf(2);
+        expect(visited).to.deep.include(peers[3]);
+        expect(visited).to.deep.include(peers[2]);
+    });
+    it('disjoint path values', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 2
+        });
+        await manager.start();
+        const values = ['v0', 'v1'].map((str) => uint8ArrayFromString(str));
+        // 2 -> 1 -> 0 (v0)
+        // 4 -> 3 (v1)
+        const topology = createTopology({
+            0: { value: values[0] },
+            // Top level node
+            1: { closerPeers: [0] },
+            2: { closerPeers: [1] },
+            3: { value: values[1] },
+            4: { closerPeers: [3] }
+        });
+        routingTable.closestPeers.returns([peers[2], peers[4]]);
+        const results = await all(manager.run(key, createQueryFunction(topology)));
+        // visited all the nodes
+        expect(results).to.have.lengthOf(5);
+        // found both values
+        // @ts-expect-error types are wrong
+        expect(results).to.deep.containSubset([{
+                value: values[0]
+            }]);
+        // @ts-expect-error types are wrong
+        expect(results).to.deep.containSubset([{
+                value: values[1]
+            }]);
+        await manager.stop();
+    });
+    it('disjoint path continue other paths after error on one path', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 2
+        });
+        await manager.start();
+        // 2 -> 1 (delay) -> 0 [pathComplete]
+        // 5 -> 4 [error] -> 3
+        const topology = createTopology({
+            0: { value: uint8ArrayFromString('true') },
+            // This query has a delay which means it only returns after the other
+            // path has already returned an error
+            1: { delay: 100, closerPeers: [0] },
+            2: { closerPeers: [1] },
+            3: { value: uint8ArrayFromString('false') },
+            // Return an error at this point
+            4: { closerPeers: [3], error: new Error('Nooo!') },
+            5: { closerPeers: [4] }
+        });
+        routingTable.closestPeers.returns([peers[2], peers[5]]);
+        const results = await all(manager.run(key, createQueryFunction(topology)));
+        // @ts-expect-error types are wrong
+        expect(results).to.deep.containSubset([{
+                value: uint8ArrayFromString('true')
+            }]);
+        // @ts-expect-error types are wrong
+        expect(results).to.not.deep.containSubset([{
+                value: uint8ArrayFromString('false')
+            }]);
+        await manager.stop();
+    });
+    it('should allow the self-query query to run', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            initialQuerySelfHasRun: pDefer(),
+            routingTable,
+            logPrefix: ''
+        });
+        await manager.start();
+        const queryFunc = async function* ({ peer }) {
+            // yield query result
+            yield valueEvent({
+                from: peer,
+                value: uint8ArrayFromString('cool')
+            });
+        };
+        routingTable.closestPeers.returns([peers[7]]);
+        const results = await all(manager.run(key, queryFunc, {
+            // this bypasses awaiting on the initialQuerySelfHasRun deferred promise
+            isSelfQuery: true
+        }));
+        // should have the result
+        expect(results).to.containSubset([{
+                value: uint8ArrayFromString('cool')
+            }]);
+        await manager.stop();
+    });
+    it('should wait for the self-query query to run before running other queries', async () => {
+        const initialQuerySelfHasRun = pDefer();
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            initialQuerySelfHasRun,
+            alpha: 2,
+            routingTable,
+            logPrefix: ''
+        });
+        await manager.start();
+        let regularQueryTimeStarted = 0;
+        let selfQueryTimeStarted = Infinity;
+        routingTable.closestPeers.returns([peers[7]]);
+        // run a regular query and the self query together
+        await Promise.all([
+            all(manager.run(key, async function* ({ peer }) {
+                regularQueryTimeStarted = Date.now();
+                // yield query result
+                yield valueEvent({
+                    from: peer,
+                    value: uint8ArrayFromString('cool')
+                });
+            })),
+            all(manager.run(key, async function* ({ peer }) {
+                selfQueryTimeStarted = Date.now();
+                // make sure we take enough time so that the `regularQuery` time diff is big enough to measure
+                await delay(100);
+                // yield query result
+                yield valueEvent({
+                    from: peer,
+                    value: uint8ArrayFromString('it me')
+                });
+                // normally done by the QuerySelf component
+                initialQuerySelfHasRun.resolve();
+            }, {
+                // this bypasses awaiting on the initialQuerySelfHasRun deferred promise
+                isSelfQuery: true
+            }))
+        ]);
+        // should have started the regular query after the self query finished
+        expect(regularQueryTimeStarted).to.be.greaterThan(selfQueryTimeStarted);
+        await manager.stop();
+    });
+    it('should end paths when they have no closer peers to those already queried', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 1,
+            alpha: 1
+        });
+        await manager.start();
+        // 3 -> 2 -> 1 -> 4 -> 5 -> 6 // should stop at 1
+        const topology = createTopology({
+            1: { closerPeers: [4] },
+            2: { closerPeers: [1] },
+            3: { closerPeers: [2] },
+            4: { closerPeers: [5] },
+            5: { closerPeers: [6] },
+            6: {}
+        });
+        routingTable.closestPeers.returns([peers[3]]);
+        const results = await all(manager.run(key, createQueryFunction(topology)));
+        // should not have a value
+        expect(results.find(res => res.name === 'VALUE')).to.not.be.ok();
+        // should have traversed peers 3, 2 & 1
+        expect(results).to.containSubset([{
+                from: peers[3]
+            }, {
+                from: peers[2]
+            }, {
+                from: peers[1]
+            }]);
+        // should not have traversed peers 4, 5 & 6
+        expect(results).to.not.containSubset([{
+                from: peers[4]
+            }, {
+                from: peers[5]
+            }, {
+                from: peers[6]
+            }]);
+        await manager.stop();
+    });
+    it('should abort the query if we break out of the loop early', async () => {
+        const manager = new QueryManager({
+            peerId: ourPeerId,
+            logger: defaultLogger(),
+            connectionManager: stubInterface({
+                isDialable: async () => true
+            })
+        }, {
+            ...defaultInit(),
+            disjointPaths: 2
+        });
+        await manager.start();
+        // 1 -> 0 [pathComplete]
+        // 4 -> 3 [delay] -> 2 [pathComplete]
+        const topology = createTopology({
+            // quick value path
+            0: { delay: 10, value: uint8ArrayFromString('true') },
+            1: { closerPeers: [0] },
+            // slow value path
+            2: { value: uint8ArrayFromString('true') },
+            3: { delay: 1000, closerPeers: [2] },
+            4: { closerPeers: [3] }
+        });
+        routingTable.closestPeers.returns([peers[1], peers[4]]);
+        for await (const event of manager.run(key, createQueryFunction(topology))) {
+            if (event.name === 'VALUE') {
+                expect(event.from.toString()).to.equal(peers[0].toString());
+                // break out of loop early
+                break;
+            }
+        }
+        // should have aborted query on slow path
+        expect(topology[peers[3].toString()]).to.have.nested.property('context.signal.aborted', true);
+        // should not have visited the next peer on the slow path
+        expect(topology[peers[4].toString()]).to.not.have.property('context', true);
+        await manager.stop();
+    });
+});
+//# sourceMappingURL=query.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/query.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/query.spec.js.map
new file mode 100644
index 0000000..89c9972
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/query.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"query.spec.js","sourceRoot":"","sources":["../../test/query.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,GAAG,MAAM,QAAQ,CAAA;AACxB,OAAO,KAAK,MAAM,UAAU,CAAA;AAC5B,OAAO,MAAM,MAAM,SAAS,CAAA;AAC5B,OAAO,EAAwB,aAAa,EAAE,MAAM,UAAU,CAAA;AAC9D,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAC5E,OAAO,EAAE,UAAU,EAAmB,MAAM,iBAAiB,CAAA;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAA;AACnD,OAAO,EACL,iBAAiB,EACjB,UAAU,EACV,eAAe,EAChB,MAAM,wBAAwB,CAAA;AAC/B,OAAO,EAAE,YAAY,EAAyB,MAAM,yBAAyB,CAAA;AAC7E,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAA;AAC/C,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAA;AACvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAA;AAgBhE,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,IAAI,SAAiB,CAAA;IACrB,IAAI,KAAe,CAAA;IACnB,IAAI,GAAe,CAAA;IACnB,IAAI,YAA2C,CAAA;IAE/C,MAAM,WAAW,GAAG,GAAqB,EAAE;QACzC,MAAM,IAAI,GAAqB;YAC7B,sBAAsB,EAAE,MAAM,EAAO;YACrC,YAAY;YACZ,SAAS,EAAE,EAAE;SACd,CAAA;QAED,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,CAAA;QAErC,OAAO,IAAI,CAAA;IACb,CAAC,CAAA;IAED,SAAS,cAAc,CAAE,IAAmG;QAC1H,MAAM,QAAQ,GAAa,EAAE,CAAA;QAE7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC9B,MAAM,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAA;YACxB,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC,CAAA;YACtB,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,CAAA;YAEvB,IAAI,KAAiB,CAAA;YAErB,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;gBAC/B,KAAK,GAAG,UAAU,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAA;YACnD,CAAC;iBAAM,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;gBAChC,KAAK,GAAG,eAAe,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAA;YACxD,CAAC;iBAAM,CAAC;gBACN,KAAK,GAAG,iBAAiB,CAAC;oBACxB,IAAI;oBACJ,WAAW,EAAE,WAAW,CAAC,SAAS;oBAClC,MAAM,EAAE,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;wBAC9C,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC;wBACb,UAAU,EAAE,EAAE;wBACd,SAAS,EAAE,EAAE;qBACd,CAAC,CAAC;iBACJ,CAAC,CAAA;YACJ,CAAC;YAED,MAAM,KAAK,GAAkB;gBAC3B,KAAK;aACN,CAAA;YAED,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;gBACzB,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA;YAC5B,CAAC;YAED,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,KAAK,CAAA;QACnC,CAAC,CAAC,CAAA;QAEF,OAAO,QAAQ,CAAA;IACjB,CAAC;IAED,SAAS,mBAAmB,CAAE,QAAkB;QAC9C,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,OAAO;YACpD,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAA;YAExB,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;YACrC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAA;YAErB,IAAI,GAAG,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;gBACtB,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;YACxB,CAAC;YAED,MAAM,GAAG,CAAC,KAAK,CAAA;QACjB,CAAC,CAAA;QAED,OAAO,SAAS,CAAA;IAClB,CAAC;IAED,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,YAAY,GAAG,aAAa,EAAgB,CAAA;QAE5C,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,EAAE,CAAC,CAAA;QAC7C,SAAS,GAAG,MAAM,YAAY,EAAE,CAAA;QAChC,GAAG,GAAG,CAAC,MAAM,YAAY,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAA;QAEhD,+DAA+D;QAC/D,KAAK,GAAG,MAAM,gBAAgB,CAAC,aAAa,EAAE,MAAM,aAAa,CAAC,GAAG,CAAC,CAAC,CAAA;IACzE,CAAC,CAAC,CAAA;IAEF,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;SACjB,CAAC,CAAA;QAEF,qCAAqC;QACrC,MAAM,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,CAAA;IAC/E,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;SACjB,CAAC,CAAA;QAEF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QACrB,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;QAEpB,qCAAqC;QACrC,MAAM,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,CAAA;IAC/E,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;SACjB,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,OAAO;YACpD,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;YAC5D,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;YACnE,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAA;YAC7E,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YAC5D,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YAE3D,MAAM,UAAU,CAAC;gBACf,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC;aACpC,CAAC,CAAA;QACJ,CAAC,CAAA;QAED,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAA;QAEtD,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QACnC,mCAAmC;QACnC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACrC,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC;aACpC,CAAC,CAAC,CAAA;QAEH,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC;SACT,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,YAAY,GAAa,EAAE,CAAA;QAEjC,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YAC7D,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAA;YAC/C,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAEvB,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC9B,mBAAmB;gBACnB,MAAM,iBAAiB,CAAC;oBACtB,IAAI,EAAE,IAAI;oBACV,WAAW,EAAE,WAAW,CAAC,SAAS;oBAClC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC;iBAC7E,CAAC,CAAA;YACJ,CAAC;iBAAM,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACrC,mCAAmC;gBACnC,MAAM,UAAU,CAAC;oBACf,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC;iBACpC,CAAC,CAAA;YACJ,CAAC;iBAAM,CAAC;gBACN,uCAAuC;gBACvC,MAAM,iBAAiB,CAAC;oBACtB,IAAI,EAAE,IAAI;oBACV,WAAW,EAAE,WAAW,CAAC,SAAS;iBACnC,CAAC,CAAA;YACJ,CAAC;QACH,CAAC,CAAA;QAED,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC7C,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAA;QAEtD,gFAAgF;QAChF,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAEnC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;gBAChC,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC;aACpC,CAAC,CAAC,CAAA;QACH,wCAAwC;QAExC,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC;SACT,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,YAAY,GAAa,EAAE,CAAA;QAEjC,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE;YACrD,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAEvB,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC9B,mBAAmB;gBACnB,MAAM,iBAAiB,CAAC;oBACtB,IAAI,EAAE,IAAI;oBACV,WAAW,EAAE,WAAW,CAAC,SAAS;oBAClC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC;iBAC7E,CAAC,CAAA;YACJ,CAAC;iBAAM,CAAC;gBACN,uCAAuC;gBACvC,MAAM,iBAAiB,CAAC;oBACtB,IAAI,EAAE,IAAI;oBACV,WAAW,EAAE,WAAW,CAAC,SAAS;iBACnC,CAAC,CAAA;YACJ,CAAC;QACH,CAAC,CAAA;QAED,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC7C,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAA;QAEtD,gFAAgF;QAChF,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QACnC,kCAAkC;QAClC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;QAEhE,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC;SACT,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAA;QACzB,MAAM,UAAU,GAAG,IAAI,eAAe,EAAE,CAAA;QACxC,IAAI,OAAO,CAAA;QAEX,yBAAyB;QACzB,yBAAyB;QACzB,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE;YACxB,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE;YACzB,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE;YACzB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE;YACxB,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE;YACzB,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE;SAC1B,CAAC,CAAA;QAEF,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YAC7D,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACpC,OAAO,GAAG,IAAI,CAAA;YAChB,CAAC,CAAC,CAAA;YAEF,QAAQ,CAAC,OAAO,EAAE,CAAA;YAElB,MAAM,KAAK,CAAC,IAAI,CAAC,CAAA;YAEjB,MAAM,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAA;QACvC,CAAC,CAAA;QAED,kBAAkB;QAClB,MAAM,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;QAEpF,4CAA4C;QAC5C,MAAM,QAAQ,CAAC,OAAO,CAAA;QAEtB,kBAAkB;QAClB,UAAU,CAAC,KAAK,EAAE,CAAA;QAElB,+BAA+B;QAC/B,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;aACnD,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAA;QAE7C,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAE5B,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sEAAsE,EAAE,KAAK,IAAI,EAAE;QACpF,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC;SACT,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,cAAc;QACd,cAAc;QACd,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,CAAC,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC,EAAE;YAC1C,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACpC,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACpC,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YAClC,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;SACnC,CAAC,CAAA;QAEF,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YAC7D,IAAI,OAAO,GAAG,KAAK,CAAA;YAEnB,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACpC,OAAO,GAAG,IAAI,CAAA;YAChB,CAAC,CAAC,CAAA;YAEF,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;YAErC,IAAI,GAAG,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;gBACtB,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;YACxB,CAAC;YAED,IAAI,OAAO,EAAE,CAAC;gBACZ,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAA;YACtC,CAAC;YAED,MAAM,GAAG,CAAC,KAAK,CAAA;QACjB,CAAC,CAAA;QAED,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACvD,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;QAEhF,wFAAwF;QACxF,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAClC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAA;QACtF,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAAmB,EAAE,mBAAmB,CAAC,CAAA;QAEhF,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,EAAE;SAClB,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAChE,IAAI,SAAS,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;gBACxB,MAAM,eAAe,CAAC;oBACpB,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC;iBACzB,CAAC,CAAA;YACJ,CAAC;iBAAM,CAAC;gBACN,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,CAAC,CAAA;YAC7E,CAAC;QACH,CAAC,CAAA;QAED,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAA;QAEtD,8CAA8C;QAC9C,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;QACvD,kCAAkC;QAClC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;QAChE,qDAAqD;QACrD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;YAClC,IAAI,IAAI,CAAC,IAAI,KAAK,aAAa,EAAE,CAAC;gBAChC,OAAO,GAAG,GAAG,CAAC,CAAA;YAChB,CAAC;YAED,OAAO,GAAG,CAAA;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QAElB,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,EAAE;SAClB,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE;YACrD,MAAM,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;QACvE,CAAC,CAAA;QAED,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QACrC,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAA;QAEtD,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAEnC,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC;SACT,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,6BAA6B;QAC7B,mEAAmE;QACnE,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YAC1B,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,aAAa,CAAC,EAAE;SAClD,CAAC,CAAA;QAEF,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC7C,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAC1E,MAAM,cAAc,GAAG,OAAO;aAC3B,GAAG,CAAC,KAAK,CAAC,EAAE;YACX,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,aAAa,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,KAAK,EAAE,CAAC;gBAC/E,MAAM,IAAI,KAAK,CAAC,+BAA+B,KAAK,CAAC,IAAI,EAAE,CAAC,CAAA;YAC9D,CAAC;YAED,OAAO,KAAK,CAAC,IAAI,CAAA;QACnB,CAAC,CAAC,CAAA;QAEJ,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;YACnC,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;SACT,CAAC,CAAA;QAEF,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;QACpE,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,EAAE;YACjB,KAAK,EAAE,CAAC;SACT,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,aAAa,CAAC,EAAE;SAClD,CAAC,CAAA;QAEF,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACvD,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAC1E,MAAM,cAAc,GAAG,OAAO;aAC3B,GAAG,CAAC,KAAK,CAAC,EAAE;YACX,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,aAAa,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,KAAK,EAAE,CAAC;gBAC/E,MAAM,IAAI,KAAK,CAAC,+BAA+B,KAAK,CAAC,IAAI,EAAE,CAAC,CAAA;YAC9D,CAAC;YAED,OAAO,KAAK,CAAC,IAAI,CAAA;QACnB,CAAC,CAAC,CAAA;QAEJ,MAAM,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAElC,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC;SACT,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE;YACrD,MAAM,iBAAiB,CAAC;gBACtB,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,WAAW,CAAC,SAAS;gBAClC,MAAM,EAAE,CAAC;wBACP,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;wBACZ,UAAU,EAAE,EAAE;qBACf,CAAC;aACH,CAAC,CAAA;QACJ,CAAC,CAAA;QAED,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC7C,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAA;QAEtD,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QACnC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QAC1E,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QAE1E,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;SACjB,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,UAAU;QACV,eAAe;QACf,eAAe;QACf,eAAe;QACf,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE;YACtB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE;YACtB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE;YACtB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE;YACtB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YAC1B,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;SACxB,CAAC,CAAA;QAEF,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACjE,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE1E,yBAAyB;QACzB,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;QAEpC,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC;SACT,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,mBAAmB;QACnB,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE;YACtB,qDAAqD;YACrD,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;SACxB,CAAC,CAAA;QAEF,MAAM,OAAO,GAAa,EAAE,CAAA;QAE5B,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE;YACrD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAElB,MAAM,SAAS,GAAG,KAAK,IAAyB,EAAE;gBAChD,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;gBACrC,8DAA8D;gBAC9D,oCAAoC;gBACpC,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA;gBAEhB,OAAO,GAAG,CAAC,KAAK,CAAA;YAClB,CAAC,CAAA;YAED,oCAAoC;YACpC,IAAI,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;gBAEpB,MAAM,SAAS,EAAE,CAAA;YACnB,CAAC;YAED,MAAM,SAAS,EAAE,CAAA;QACnB,CAAC,CAAA;QAED,mEAAmE;QACnE,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC7C,MAAM,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAA;QAExC,6DAA6D;QAC7D,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QACnC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QACzC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;IAC3C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;SACjB,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAA;QAEnE,mBAAmB;QACnB,cAAc;QACd,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE;YACvB,iBAAiB;YACjB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;SACxB,CAAC,CAAA;QAEF,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACvD,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE1E,wBAAwB;QACxB,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAEnC,oBAAoB;QACpB,mCAAmC;QACnC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACrC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;aACjB,CAAC,CAAC,CAAA;QACH,mCAAmC;QACnC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACrC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;aACjB,CAAC,CAAC,CAAA;QAEH,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;SACjB,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,qCAAqC;QACrC,sBAAsB;QACtB,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,CAAC,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC,EAAE;YAC1C,qEAAqE;YACrE,qCAAqC;YACrC,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACnC,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,OAAO,CAAC,EAAE;YAC3C,gCAAgC;YAChC,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;YAClD,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;SACxB,CAAC,CAAA;QAEF,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACvD,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE1E,mCAAmC;QACnC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACrC,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC;aACpC,CAAC,CAAC,CAAA;QACH,mCAAmC;QACnC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACzC,KAAK,EAAE,oBAAoB,CAAC,OAAO,CAAC;aACrC,CAAC,CAAC,CAAA;QAEH,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,sBAAsB,EAAE,MAAM,EAAO;YACrC,YAAY;YACZ,SAAS,EAAE,EAAE;SACd,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,MAAM,SAAS,GAAc,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE;YACrD,qBAAqB;YACrB,MAAM,UAAU,CAAC;gBACf,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC;aACpC,CAAC,CAAA;QACJ,CAAC,CAAA;QAED,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC7C,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,EAAE;YACpD,wEAAwE;YACxE,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC,CAAA;QAEH,yBAAyB;QACzB,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;gBAChC,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC;aACpC,CAAC,CAAC,CAAA;QAEH,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0EAA0E,EAAE,KAAK,IAAI,EAAE;QACxF,MAAM,sBAAsB,GAAG,MAAM,EAAO,CAAA;QAE5C,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,sBAAsB;YACtB,KAAK,EAAE,CAAC;YACR,YAAY;YACZ,SAAS,EAAE,EAAE;SACd,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,IAAI,uBAAuB,GAAW,CAAC,CAAA;QACvC,IAAI,oBAAoB,GAAW,QAAQ,CAAA;QAE3C,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAE7C,kDAAkD;QAClD,MAAM,OAAO,CAAC,GAAG,CAAC;YAChB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE;gBAC7C,uBAAuB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;gBAEpC,qBAAqB;gBACrB,MAAM,UAAU,CAAC;oBACf,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC;iBACpC,CAAC,CAAA;YACJ,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,SAAU,CAAC,EAAE,EAAE,IAAI,EAAE;gBAC7C,oBAAoB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;gBAEjC,8FAA8F;gBAC9F,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA;gBAEhB,qBAAqB;gBACrB,MAAM,UAAU,CAAC;oBACf,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,oBAAoB,CAAC,OAAO,CAAC;iBACrC,CAAC,CAAA;gBAEF,2CAA2C;gBAC3C,sBAAsB,CAAC,OAAO,EAAE,CAAA;YAClC,CAAC,EAAE;gBACD,wEAAwE;gBACxE,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;SACJ,CAAC,CAAA;QAEF,sEAAsE;QACtE,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAA;QAEvE,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0EAA0E,EAAE,KAAK,IAAI,EAAE;QACxF,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC;SACT,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,iDAAiD;QACjD,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,EAAE,EAAE;SACN,CAAC,CAAA;QAEF,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC7C,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAE1E,0BAA0B;QAC1B,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;QAEhE,uCAAuC;QACvC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;gBAChC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;aACf,EAAE;gBACD,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;aACf,EAAE;gBACD,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;aACf,CAAC,CAAC,CAAA;QAEH,2CAA2C;QAC3C,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBACpC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;aACf,EAAE;gBACD,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;aACf,EAAE;gBACD,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;aACf,CAAC,CAAC,CAAA;QAEH,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0DAA0D,EAAE,KAAK,IAAI,EAAE;QACxE,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC;YAC/B,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,aAAa,EAAE;YACvB,iBAAiB,EAAE,aAAa,CAAoB;gBAClD,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;aAC7B,CAAC;SACH,EAAE;YACD,GAAG,WAAW,EAAE;YAChB,aAAa,EAAE,CAAC;SACjB,CAAC,CAAA;QACF,MAAM,OAAO,CAAC,KAAK,EAAE,CAAA;QAErB,wBAAwB;QACxB,qCAAqC;QACrC,MAAM,QAAQ,GAAG,cAAc,CAAC;YAC9B,mBAAmB;YACnB,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC,EAAE;YACrD,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACvB,kBAAkB;YAClB,CAAC,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC,EAAE;YAC1C,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YACpC,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;SACxB,CAAC,CAAA;QAEF,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAEvD,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;YAC1E,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;gBAC3B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAA;gBAE3D,0BAA0B;gBAC1B,MAAK;YACP,CAAC;QACH,CAAC;QAED,yCAAyC;QACzC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAA;QAE7F,yDAAyD;QACzD,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;QAE3E,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.d.ts
new file mode 100644
index 0000000..eaebdc1
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=selection.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.d.ts.map
new file mode 100644
index 0000000..f60c45c
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"selection.spec.d.ts","sourceRoot":"","sources":["../../../test/record/selection.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.js b/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.js
new file mode 100644
index 0000000..c1450ca
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.js
@@ -0,0 +1,40 @@
+/* eslint max-nested-callbacks: ["error", 8] */
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import * as selection from '../../src/record/selectors.js';
+const records = [new Uint8Array(), uint8ArrayFromString('hello')];
+describe('selection', () => {
+    describe('bestRecord', () => {
+        it('throws no records given when no records received', () => {
+            expect(() => selection.bestRecord({}, uint8ArrayFromString('/'), [])).to.throw().with.property('name', 'InvalidParametersError');
+        });
+        it('throws on missing selector in the record key', () => {
+            expect(() => selection.bestRecord({}, uint8ArrayFromString('/no-selector/key-value'), records)).to.throw().with.property('name', 'MissingSelectorError');
+        });
+        it('throws on unknown key prefix', () => {
+            expect(
+            // @ts-expect-error invalid input
+            () => selection.bestRecord({ world() { } }, uint8ArrayFromString('/world'), records)).to.throw().with.property('name', 'InvalidParametersError');
+        });
+        it('returns the index from the matching selector', () => {
+            const selectors = {
+                hello(k, recs) {
+                    expect(k).to.be.eql(uint8ArrayFromString('/hello/world'));
+                    expect(recs).to.be.eql(records);
+                    return 1;
+                }
+            };
+            expect(selection.bestRecord(selectors, uint8ArrayFromString('/hello/world'), records)).to.equal(1);
+        });
+    });
+    describe('selectors', () => {
+        it('public key', () => {
+            expect(selection.selectors.pk(uint8ArrayFromString('/hello/world'), records)).to.equal(0);
+        });
+        it('returns the first record when there is only one to select', () => {
+            expect(selection.selectors.pk(uint8ArrayFromString('/hello/world'), [records[0]])).to.equal(0);
+        });
+    });
+});
+//# sourceMappingURL=selection.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.js.map
new file mode 100644
index 0000000..6d463dc
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/record/selection.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"selection.spec.js","sourceRoot":"","sources":["../../../test/record/selection.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.d.ts
new file mode 100644
index 0000000..aa6d3ed
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=validator.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.d.ts.map
new file mode 100644
index 0000000..5793222
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"validator.spec.d.ts","sourceRoot":"","sources":["../../../test/record/validator.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.js b/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.js
new file mode 100644
index 0000000..3c8c042
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.js
@@ -0,0 +1,102 @@
+/* eslint max-nested-callbacks: ["error", 8] */
+/* eslint-env mocha */
+import { generateKeyPair, publicKeyFromProtobuf, publicKeyToProtobuf } from '@libp2p/crypto/keys';
+import { Libp2pRecord } from '@libp2p/record';
+import { expect } from 'aegir/chai';
+import { concat as uint8ArrayConcat } from 'uint8arrays/concat';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import * as validator from '../../src/record/validators.js';
+import * as fixture from '../fixtures/record/go-key-records.js';
+const generateCases = (hash) => {
+    return {
+        valid: {
+            publicKey: [
+                Uint8Array.of(...uint8ArrayFromString('/pk/'), ...hash)
+            ]
+        },
+        invalid: {
+            publicKey: [
+                uint8ArrayFromString('/pk/'),
+                Uint8Array.of(...uint8ArrayFromString('/pk/'), ...uint8ArrayFromString('random')),
+                hash,
+                // @ts-expect-error invalid input
+                'not a buffer'
+            ]
+        }
+    };
+};
+describe('validator', () => {
+    let key;
+    let hash;
+    let cases;
+    before(async () => {
+        key = await generateKeyPair('RSA', 1024);
+        hash = key.publicKey.toMultihash().bytes;
+        cases = generateCases(hash);
+    });
+    describe('verifyRecord', () => {
+        it('calls matching validator', async () => {
+            const k = uint8ArrayFromString('/hello/you');
+            const rec = new Libp2pRecord(k, uint8ArrayFromString('world'), new Date());
+            const validators = {
+                async hello(key, value) {
+                    expect(key).to.eql(k);
+                    expect(value).to.eql(uint8ArrayFromString('world'));
+                }
+            };
+            await validator.verifyRecord(validators, rec);
+        });
+        it('calls not matching any validator', async () => {
+            const k = uint8ArrayFromString('/hallo/you');
+            const rec = new Libp2pRecord(k, uint8ArrayFromString('world'), new Date());
+            const validators = {
+                async hello(key, value) {
+                    expect(key).to.eql(k);
+                    expect(value).to.eql(uint8ArrayFromString('world'));
+                }
+            };
+            await expect(validator.verifyRecord(validators, rec))
+                .to.eventually.rejected.with.property('name', 'InvalidParametersError');
+        });
+    });
+    describe('validators', () => {
+        it('exports pk', () => {
+            expect(validator.validators).to.have.keys(['pk']);
+        });
+        describe('public key', () => {
+            it('exports func', () => {
+                const pk = validator.validators.pk;
+                expect(pk).to.be.a('function');
+            });
+            it('does not error on valid record', async () => {
+                return Promise.all(cases.valid.publicKey.map(async (k) => {
+                    await validator.validators.pk(k, publicKeyToProtobuf(key.publicKey));
+                }));
+            });
+            it('throws on invalid records', async () => {
+                return Promise.all(cases.invalid.publicKey.map(async (data) => {
+                    try {
+                        //
+                        await validator.validators.pk(data, publicKeyToProtobuf(key.publicKey));
+                    }
+                    catch (err) {
+                        expect(err).to.have.property('name', 'InvalidParametersError');
+                        return;
+                    }
+                    expect.fail('did not throw an InvalidParametersError');
+                }));
+            });
+        });
+    });
+    describe('go interop', () => {
+        it('record with key from from go', async () => {
+            const pubKey = publicKeyFromProtobuf(fixture.publicKey);
+            const k = uint8ArrayConcat([
+                uint8ArrayFromString('/pk/'),
+                pubKey.toMultihash().bytes
+            ]);
+            await validator.validators.pk(k, fixture.publicKey);
+        });
+    });
+});
+//# sourceMappingURL=validator.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.js.map
new file mode 100644
index 0000000..3b5ab86
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/record/validator.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"validator.spec.js","sourceRoot":"","sources":["../../../test/record/validator.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.d.ts
new file mode 100644
index 0000000..79d34a5
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=routing-table.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.d.ts.map
new file mode 100644
index 0000000..dd89042
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"routing-table.spec.d.ts","sourceRoot":"","sources":["../../test/routing-table.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.js b/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.js
new file mode 100644
index 0000000..d8d11a8
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.js
@@ -0,0 +1,266 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter, stop, start } from '@libp2p/interface';
+import { mockConnectionManager } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { PeerSet } from '@libp2p/peer-collections';
+import { peerIdFromString, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core';
+import all from 'it-all';
+import drain from 'it-drain';
+import { pipe } from 'it-pipe';
+import random from 'lodash.random';
+import { pEvent } from 'p-event';
+import pWaitFor from 'p-wait-for';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { Uint8ArrayList } from 'uint8arraylist';
+import { PROTOCOL } from '../src/constants.js';
+import { Message, MessageType } from '../src/message/dht.js';
+import { KAD_CLOSE_TAG_NAME, KAD_CLOSE_TAG_VALUE, KBUCKET_SIZE, RoutingTable } from '../src/routing-table/index.js';
+import * as kadUtils from '../src/utils.js';
+import { createPeerId, createPeerIds } from './utils/create-peer-id.js';
+import { sortClosestPeers } from './utils/sort-closest-peers.js';
+describe('Routing Table', () => {
+    let table;
+    let components;
+    beforeEach(async function () {
+        this.timeout(20 * 1000);
+        const events = new TypedEventEmitter();
+        components = {
+            peerId: await createPeerId(),
+            connectionManager: stubInterface(),
+            peerStore: stubInterface(),
+            logger: defaultLogger()
+        };
+        components.connectionManager = mockConnectionManager({
+            ...components,
+            registrar: stubInterface(),
+            events
+        });
+        components.peerStore = persistentPeerStore({
+            ...components,
+            datastore: new MemoryDatastore(),
+            events
+        });
+        table = new RoutingTable(components, {
+            logPrefix: '',
+            protocol: PROTOCOL
+        });
+        await start(table);
+    });
+    afterEach(async () => {
+        await stop(table);
+    });
+    it('add', async function () {
+        this.timeout(20 * 1000);
+        const ids = await createPeerIds(20);
+        await Promise.all(Array.from({ length: 1000 }).map(async () => { await table.add(ids[random(ids.length - 1)]); }));
+        await Promise.all(Array.from({ length: 20 }).map(async () => {
+            const id = ids[random(ids.length - 1)];
+            const key = await kadUtils.convertPeerId(id);
+            expect(table.closestPeers(key, 5).length)
+                .to.be.above(0);
+        }));
+    });
+    it('emits peer:add event', async () => {
+        const id = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const eventPromise = pEvent(table, 'peer:add');
+        await table.add(id);
+        const event = await eventPromise;
+        expect(event.detail.toString()).to.equal(id.toString());
+    });
+    it('remove', async function () {
+        const peers = await createPeerIds(10);
+        await Promise.all(peers.map(async (peer) => { await table.add(peer); }));
+        const key = await kadUtils.convertPeerId(peers[2]);
+        expect(table.closestPeers(key, 10)).to.have.length(10);
+        await expect(table.find(peers[5])).to.eventually.be.ok();
+        expect(table.size).to.equal(10);
+        await table.remove(peers[5]);
+        await expect(table.find(peers[5])).to.eventually.be.undefined();
+        expect(table.size).to.equal(9);
+    });
+    it('emits peer:remove event', async () => {
+        const id = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const eventPromise = pEvent(table, 'peer:remove');
+        await table.add(id);
+        await table.remove(id);
+        const event = await eventPromise;
+        expect(event.detail.toString()).to.equal(id.toString());
+    });
+    it('closestPeer', async function () {
+        this.timeout(10 * 1000);
+        const peers = await createPeerIds(4);
+        await Promise.all(peers.map(async (peer) => { await table.add(peer); }));
+        const id = peers[2];
+        const key = await kadUtils.convertPeerId(id);
+        expect(table.closestPeer(key)).to.eql(id);
+    });
+    it('closestPeers', async function () {
+        this.timeout(20 * 1000);
+        const peers = await createPeerIds(18);
+        await Promise.all(peers.map(async (peer) => { await table.add(peer); }));
+        const key = await kadUtils.convertPeerId(peers[2]);
+        expect(table.closestPeers(key, 15)).to.have.length(15);
+    });
+    it('favours old peers that respond to pings', async () => {
+        const peerIds = [
+            peerIdFromString('QmYobx1VAHP7Mi88LcDvLeQoWcc1Aa2rynYHpdEPBqHZi5'),
+            peerIdFromString('QmYobx1VAHP7Mi88LcDvLeQoWcc1Aa2rynYHpdEPBqHZi6')
+        ];
+        const oldPeer = {
+            kadId: await kadUtils.convertPeerId(peerIds[0]),
+            peerId: peerIds[0]
+        };
+        const newPeer = {
+            kadId: await kadUtils.convertPeerId(peerIds[1]),
+            peerId: peerIds[1]
+        };
+        if (table.kb == null) {
+            throw new Error('kbucket not defined');
+        }
+        // add the old peer
+        table.kb.add(oldPeer);
+        const stream = stubInterface({
+            source: (async function* () {
+                yield new Uint8ArrayList(Uint8Array.from([2]), Message.encode({
+                    type: MessageType.PING
+                }));
+            })(),
+            sink: async function (source) {
+                await drain(source);
+            }
+        });
+        // simulate connection succeeding
+        const newStreamStub = sinon.stub().withArgs(PROTOCOL).resolves(stream);
+        const openConnectionStub = sinon.stub().withArgs(oldPeer.peerId).resolves({
+            newStream: newStreamStub
+        });
+        components.connectionManager.openConnection = openConnectionStub;
+        await table._onPing(new CustomEvent('ping', { detail: { oldContacts: [oldPeer], newContact: newPeer } }));
+        expect(openConnectionStub.calledOnce).to.be.true();
+        expect(openConnectionStub.calledWith(oldPeer.peerId)).to.be.true();
+        expect(newStreamStub.callCount).to.equal(1);
+        expect(newStreamStub.calledWith(PROTOCOL)).to.be.true();
+        // did not add the new peer
+        expect(table.kb.get(newPeer.kadId)).to.be.undefined();
+        // kept the old peer
+        expect(table.kb.get(oldPeer.kadId)).to.not.be.undefined();
+    });
+    it('evicts oldest peer that does not respond to ping', async () => {
+        const peerIds = [
+            peerIdFromString('QmYobx1VAHP7Mi88LcDvLeQoWcc1Aa2rynYHpdEPBqHZi5'),
+            peerIdFromString('QmYobx1VAHP7Mi88LcDvLeQoWcc1Aa2rynYHpdEPBqHZi6')
+        ];
+        const oldPeer = {
+            kadId: await kadUtils.convertPeerId(peerIds[0]),
+            peerId: peerIds[0]
+        };
+        const newPeer = {
+            kadId: await kadUtils.convertPeerId(peerIds[1]),
+            peerId: peerIds[1]
+        };
+        // libp2p fails to dial the old peer
+        const openConnectionStub = sinon.stub().withArgs(oldPeer.peerId).rejects(new Error('Could not dial peer'));
+        components.connectionManager.openConnection = openConnectionStub;
+        if (table.kb == null) {
+            throw new Error('kbucket not defined');
+        }
+        // add the old peer
+        table.kb.add(oldPeer);
+        await table._onPing(new CustomEvent('ping', { detail: { oldContacts: [oldPeer], newContact: newPeer } }));
+        await table.pingQueue.onIdle();
+        expect(openConnectionStub.callCount).to.equal(1);
+        expect(openConnectionStub.calledWith(oldPeer.peerId)).to.be.true();
+        // added the new peer
+        expect(table.kb.get(newPeer.kadId)).to.not.be.undefined();
+        // evicted the old peer
+        expect(table.kb.get(oldPeer.kadId)).to.be.undefined();
+    });
+    it('tags newly found kad-close peers', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const tagPeerSpy = sinon.spy(components.peerStore, 'merge');
+        await table.add(remotePeer);
+        expect(tagPeerSpy.callCount).to.equal(0, 'did not debounce call to peerStore.tagPeer');
+        await pWaitFor(() => {
+            return tagPeerSpy.callCount === 1;
+        });
+        expect(tagPeerSpy.callCount).to.equal(1, 'did not tag kad-close peer');
+        expect(tagPeerSpy.getCall(0).args[0].toString()).to.equal(remotePeer.toString());
+        expect(tagPeerSpy.getCall(0).args[1].tags).to.deep.equal({
+            [KAD_CLOSE_TAG_NAME]: {
+                value: KAD_CLOSE_TAG_VALUE
+            }
+        });
+    });
+    it('removes tags from kad-close peers when closer peers are found', async () => {
+        async function getTaggedPeers() {
+            return new PeerSet(await pipe(await components.peerStore.all(), async function* (source) {
+                for await (const peer of source) {
+                    const peerData = await components.peerStore.get(peer.id);
+                    if (peerData.tags.has(KAD_CLOSE_TAG_NAME)) {
+                        yield peer.id;
+                    }
+                }
+            }, async (source) => all(source)));
+        }
+        const tagPeerSpy = sinon.spy(components.peerStore, 'merge');
+        const localNodeId = await kadUtils.convertPeerId(components.peerId);
+        const sortedPeerList = await sortClosestPeers(await createPeerIds(KBUCKET_SIZE + 1), localNodeId);
+        // sort list furthest -> closest
+        sortedPeerList.reverse();
+        // fill the table up to the first kbucket size
+        for (let i = 0; i < KBUCKET_SIZE; i++) {
+            await table.add(sortedPeerList[i]);
+        }
+        // should have all added contacts in the root kbucket
+        expect(table.kb?.count()).to.equal(KBUCKET_SIZE, 'did not fill kbuckets');
+        expect(table.kb?.root).to.have.property('peers').with.lengthOf(KBUCKET_SIZE, 'split root kbucket when we should not have');
+        expect(table.kb?.root).to.not.have.property('left', 'split root kbucket when we should not have');
+        expect(table.kb?.root).to.not.have.property('right', 'split root kbucket when we should not have');
+        await pWaitFor(() => {
+            return tagPeerSpy.callCount === KBUCKET_SIZE;
+        });
+        // make sure we tagged all of the peers as kad-close
+        const taggedPeers = await getTaggedPeers();
+        expect(taggedPeers.difference(new PeerSet(sortedPeerList.slice(0, sortedPeerList.length - 1)))).to.have.property('size', 0);
+        tagPeerSpy.resetHistory();
+        // add a node that is closer than any added so far
+        await table.add(sortedPeerList[sortedPeerList.length - 1]);
+        expect(table.kb?.count()).to.equal(KBUCKET_SIZE + 1, 'did not fill kbuckets');
+        expect(table.kb?.root).to.have.property('left').that.is.not.null('did not split root kbucket when we should have');
+        expect(table.kb?.root).to.have.property('right').that.is.not.null('did not split root kbucket when we should have');
+        // wait for tag new peer and untag old peer
+        await pWaitFor(() => {
+            return tagPeerSpy.callCount === 2;
+        });
+        // should have updated list of tagged peers
+        const finalTaggedPeers = await getTaggedPeers();
+        expect(finalTaggedPeers.difference(new PeerSet(sortedPeerList.slice(1)))).to.have.property('size', 0);
+    });
+    it('adds peerstore peers to the routing table on startup', async () => {
+        const peer1 = stubInterface({
+            id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            protocols: [
+                PROTOCOL
+            ]
+        });
+        const peer2 = stubInterface({
+            id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            protocols: [
+                '/ipfs/id/1.0.0'
+            ]
+        });
+        await expect(table.find(peer1.id)).to.eventually.be.undefined();
+        await expect(table.find(peer2.id)).to.eventually.be.undefined();
+        await stop(table);
+        components.peerStore.all = async () => [peer1, peer2];
+        await start(table);
+        await expect(table.find(peer1.id)).to.eventually.be.ok();
+        await expect(table.find(peer2.id)).to.eventually.be.undefined();
+    });
+});
+//# sourceMappingURL=routing-table.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.js.map
new file mode 100644
index 0000000..908a1a8
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/routing-table.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"routing-table.spec.js","sourceRoot":"","sources":["../../test/routing-table.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.d.ts
new file mode 100644
index 0000000..50b3e13
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=add-provider.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.d.ts.map
new file mode 100644
index 0000000..656552e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"add-provider.spec.d.ts","sourceRoot":"","sources":["../../../../test/rpc/handlers/add-provider.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.js b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.js
new file mode 100644
index 0000000..f113179
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.js
@@ -0,0 +1,91 @@
+/* eslint-env mocha */
+import { defaultLogger } from '@libp2p/logger';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { MessageType } from '../../../src/message/dht.js';
+import { Providers } from '../../../src/providers.js';
+import { AddProviderHandler } from '../../../src/rpc/handlers/add-provider.js';
+import { createPeerIds } from '../../utils/create-peer-id.js';
+import { createValues } from '../../utils/create-values.js';
+describe('rpc - handlers - AddProvider', () => {
+    let peerIds;
+    let values;
+    let handler;
+    let providers;
+    before(async () => {
+        [peerIds, values] = await Promise.all([
+            createPeerIds(3),
+            createValues(2)
+        ]);
+    });
+    beforeEach(async () => {
+        const datastore = new MemoryDatastore();
+        providers = new Providers({
+            datastore,
+            logger: defaultLogger()
+        });
+        handler = new AddProviderHandler({
+            logger: defaultLogger()
+        }, {
+            providers,
+            logPrefix: ''
+        });
+    });
+    describe('invalid messages', () => {
+        const tests = [{
+                message: {
+                    type: MessageType.ADD_PROVIDER,
+                    key: new Uint8Array(0),
+                    closer: [],
+                    providers: []
+                },
+                error: 'InvalidMessageError'
+            }, {
+                message: {
+                    type: MessageType.ADD_PROVIDER,
+                    key: uint8ArrayFromString('hello world'),
+                    closer: [],
+                    providers: []
+                },
+                error: 'InvalidMessageError'
+            }];
+        tests.forEach((t) => {
+            it(t.error.toString(), async () => {
+                try {
+                    await handler.handle(peerIds[0], t.message);
+                }
+                catch (err) {
+                    expect(err).to.exist();
+                    expect(err).to.have.property('name', t.error);
+                    return;
+                }
+                throw new Error();
+            });
+        });
+    });
+    it('ignore providers that do not match the sender', async () => {
+        const cid = values[0].cid;
+        const msg = {
+            type: MessageType.ADD_PROVIDER,
+            key: cid.bytes,
+            closer: [],
+            providers: []
+        };
+        const ma1 = multiaddr('/ip4/127.0.0.1/tcp/1234');
+        const ma2 = multiaddr('/ip4/127.0.0.1/tcp/2345');
+        msg.providers = [{
+                id: peerIds[0].toMultihash().bytes,
+                multiaddrs: [ma1.bytes]
+            }, {
+                id: peerIds[1].toMultihash().bytes,
+                multiaddrs: [ma2.bytes]
+            }];
+        await handler.handle(peerIds[0], msg);
+        const provs = await providers.getProviders(cid);
+        expect(provs).to.have.length(1);
+        expect(provs[0].toString()).to.equal(peerIds[0].toString());
+    });
+});
+//# sourceMappingURL=add-provider.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.js.map
new file mode 100644
index 0000000..a1f70ba
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/add-provider.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"add-provider.spec.js","sourceRoot":"","sources":["../../../../test/rpc/handlers/add-provider.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.d.ts
new file mode 100644
index 0000000..6d10a4e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=find-node.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.d.ts.map
new file mode 100644
index 0000000..801c03e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"find-node.spec.d.ts","sourceRoot":"","sources":["../../../../test/rpc/handlers/find-node.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.js b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.js
new file mode 100644
index 0000000..a86343c
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.js
@@ -0,0 +1,181 @@
+/* eslint-env mocha */
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromMultihash } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import * as Digest from 'multiformats/hashes/digest';
+import Sinon, {} from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { MessageType } from '../../../src/message/dht.js';
+import { PeerRouting } from '../../../src/peer-routing/index.js';
+import { FindNodeHandler } from '../../../src/rpc/handlers/find-node.js';
+import { passthroughMapper, removePrivateAddressesMapper, removePublicAddressesMapper } from '../../../src/utils.js';
+import { createPeerId } from '../../utils/create-peer-id.js';
+const T = MessageType.FIND_NODE;
+describe('rpc - handlers - FindNode', () => {
+    let peerId;
+    let sourcePeer;
+    let targetPeer;
+    let handler;
+    let peerRouting;
+    let addressManager;
+    beforeEach(async () => {
+        peerId = await createPeerId();
+        sourcePeer = await createPeerId();
+        targetPeer = await createPeerId();
+        peerRouting = Sinon.createStubInstance(PeerRouting);
+        addressManager = stubInterface();
+        handler = new FindNodeHandler({
+            peerId,
+            addressManager,
+            logger: defaultLogger()
+        }, {
+            peerRouting,
+            logPrefix: '',
+            peerInfoMapper: passthroughMapper
+        });
+    });
+    it('returns nodes close to self and includes self, if asked for self', async () => {
+        const msg = {
+            type: T,
+            key: peerId.toMultihash().bytes,
+            closer: [],
+            providers: []
+        };
+        addressManager.getAddresses.returns([
+            multiaddr('/ip4/127.0.0.1/tcp/4002'),
+            multiaddr('/ip4/192.168.1.5/tcp/4002'),
+            multiaddr('/ip4/221.4.67.0/tcp/4002')
+        ]);
+        peerRouting.getCloserPeersOffline
+            .withArgs(peerId.toMultihash().bytes, peerId)
+            .resolves([{
+                id: targetPeer, // closer peer
+                multiaddrs: [
+                    multiaddr('/ip4/127.0.0.1/tcp/4002'),
+                    multiaddr('/ip4/192.168.1.5/tcp/4002'),
+                    multiaddr('/ip4/221.4.67.0/tcp/4002')
+                ]
+            }]);
+        const response = await handler.handle(peerId, msg);
+        if (response == null) {
+            throw new Error('No response received from handler');
+        }
+        expect(response.closer).to.have.length(2);
+        const peer = response.closer[0];
+        expect(peerIdFromMultihash(Digest.decode(peer.id)).toString()).to.equal(targetPeer.toString());
+        expect(peer.multiaddrs).to.not.be.empty();
+        const self = response.closer[1];
+        expect(peerIdFromMultihash(Digest.decode(self.id)).toString()).to.equal(peerId.toString());
+    });
+    it('returns closer peers', async () => {
+        const msg = {
+            type: T,
+            key: targetPeer.toMultihash().bytes,
+            closer: [],
+            providers: []
+        };
+        peerRouting.getCloserPeersOffline
+            .withArgs(targetPeer.toMultihash().bytes, sourcePeer)
+            .resolves([{
+                id: targetPeer,
+                multiaddrs: [
+                    multiaddr('/ip4/127.0.0.1/tcp/4002'),
+                    multiaddr('/ip4/192.168.1.5/tcp/4002'),
+                    multiaddr('/ip4/221.4.67.0/tcp/4002')
+                ]
+            }]);
+        const response = await handler.handle(sourcePeer, msg);
+        if (response == null) {
+            throw new Error('No response received from handler');
+        }
+        expect(response.closer).to.have.length(1);
+        const peer = response.closer[0];
+        expect(peerIdFromMultihash(Digest.decode(peer.id)).toString()).to.equal(targetPeer.toString());
+        expect(peer.multiaddrs).to.not.be.empty();
+    });
+    it('handles no peers found', async () => {
+        const msg = {
+            type: T,
+            key: targetPeer.toMultihash().bytes,
+            closer: [],
+            providers: []
+        };
+        peerRouting.getCloserPeersOffline.resolves([]);
+        const response = await handler.handle(sourcePeer, msg);
+        expect(response).to.have.property('closer').that.is.empty();
+    });
+    it('returns only lan addresses', async () => {
+        const msg = {
+            type: T,
+            key: targetPeer.toMultihash().bytes,
+            closer: [],
+            providers: []
+        };
+        peerRouting.getCloserPeersOffline
+            .withArgs(targetPeer.toMultihash().bytes, sourcePeer)
+            .resolves([{
+                id: targetPeer,
+                multiaddrs: [
+                    multiaddr('/ip4/127.0.0.1/tcp/4002'),
+                    multiaddr('/ip4/192.168.1.5/tcp/4002'),
+                    multiaddr('/ip4/221.4.67.0/tcp/4002')
+                ]
+            }]);
+        handler = new FindNodeHandler({
+            peerId,
+            addressManager,
+            logger: defaultLogger()
+        }, {
+            peerRouting,
+            logPrefix: '',
+            peerInfoMapper: removePublicAddressesMapper
+        });
+        const response = await handler.handle(sourcePeer, msg);
+        if (response == null) {
+            throw new Error('No response received from handler');
+        }
+        expect(response.closer).to.have.length(1);
+        const peer = response.closer[0];
+        expect(peerIdFromMultihash(Digest.decode(peer.id)).toString()).to.equal(targetPeer.toString());
+        expect(peer.multiaddrs.map(ma => multiaddr(ma).toString())).to.include('/ip4/192.168.1.5/tcp/4002');
+        expect(peer.multiaddrs.map(ma => multiaddr(ma).toString())).to.not.include('/ip4/221.4.67.0/tcp/4002');
+    });
+    it('returns only wan addresses', async () => {
+        const msg = {
+            type: T,
+            key: targetPeer.toMultihash().bytes,
+            closer: [],
+            providers: []
+        };
+        peerRouting.getCloserPeersOffline
+            .withArgs(targetPeer.toMultihash().bytes, sourcePeer)
+            .resolves([{
+                id: targetPeer,
+                multiaddrs: [
+                    multiaddr('/ip4/127.0.0.1/tcp/4002'),
+                    multiaddr('/ip4/192.168.1.5/tcp/4002'),
+                    multiaddr('/ip4/221.4.67.0/tcp/4002')
+                ]
+            }]);
+        handler = new FindNodeHandler({
+            peerId,
+            addressManager,
+            logger: defaultLogger()
+        }, {
+            peerRouting,
+            logPrefix: '',
+            peerInfoMapper: removePrivateAddressesMapper
+        });
+        const response = await handler.handle(sourcePeer, msg);
+        if (response == null) {
+            throw new Error('No response received from handler');
+        }
+        expect(response.closer).to.have.length(1);
+        const peer = response.closer[0];
+        expect(peerIdFromMultihash(Digest.decode(peer.id)).toString()).to.equal(targetPeer.toString());
+        expect(peer.multiaddrs.map(ma => multiaddr(ma).toString())).to.not.include('/ip4/192.168.1.5/tcp/4002');
+        expect(peer.multiaddrs.map(ma => multiaddr(ma).toString())).to.include('/ip4/221.4.67.0/tcp/4002');
+    });
+});
+//# sourceMappingURL=find-node.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.js.map
new file mode 100644
index 0000000..8da108d
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/find-node.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"find-node.spec.js","sourceRoot":"","sources":["../../../../test/rpc/handlers/find-node.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.d.ts
new file mode 100644
index 0000000..6376bc1
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=get-providers.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.d.ts.map
new file mode 100644
index 0000000..52dadbc
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-providers.spec.d.ts","sourceRoot":"","sources":["../../../../test/rpc/handlers/get-providers.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.js b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.js
new file mode 100644
index 0000000..cd6feac
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.js
@@ -0,0 +1,108 @@
+/* eslint-env mocha */
+import { TypedEventEmitter } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromMultihash } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core';
+import * as Digest from 'multiformats/hashes/digest';
+import Sinon, {} from 'sinon';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { MessageType } from '../../../src/message/dht.js';
+import { PeerRouting } from '../../../src/peer-routing/index.js';
+import { Providers } from '../../../src/providers.js';
+import { GetProvidersHandler } from '../../../src/rpc/handlers/get-providers.js';
+import { passthroughMapper } from '../../../src/utils.js';
+import { createPeerId } from '../../utils/create-peer-id.js';
+import { createValues } from '../../utils/create-values.js';
+const T = MessageType.GET_PROVIDERS;
+describe('rpc - handlers - GetProviders', () => {
+    let peerId;
+    let sourcePeer;
+    let closerPeer;
+    let providerPeer;
+    let peerStore;
+    let providers;
+    let peerRouting;
+    let handler;
+    let values;
+    beforeEach(async () => {
+        peerId = await createPeerId();
+        sourcePeer = await createPeerId();
+        closerPeer = await createPeerId();
+        providerPeer = await createPeerId();
+        values = await createValues(1);
+        peerRouting = Sinon.createStubInstance(PeerRouting);
+        providers = Sinon.createStubInstance(Providers);
+        peerStore = persistentPeerStore({
+            peerId,
+            datastore: new MemoryDatastore(),
+            events: new TypedEventEmitter(),
+            logger: defaultLogger()
+        });
+        const components = {
+            peerStore,
+            logger: defaultLogger()
+        };
+        handler = new GetProvidersHandler(components, {
+            peerRouting,
+            providers,
+            logPrefix: '',
+            peerInfoMapper: passthroughMapper
+        });
+    });
+    it('errors with an invalid key ', async () => {
+        const msg = {
+            type: T,
+            key: uint8ArrayFromString('hello'),
+            closer: [],
+            providers: []
+        };
+        await expect(handler.handle(sourcePeer, msg)).to.eventually.be.rejected
+            .with.property('name', 'InvalidMessageError');
+    });
+    it('responds with providers and closer peers', async () => {
+        const v = values[0];
+        const msg = {
+            type: T,
+            key: v.cid.bytes,
+            closer: [],
+            providers: []
+        };
+        const closer = [{
+                id: closerPeer,
+                multiaddrs: [
+                    multiaddr('/ip4/127.0.0.1/tcp/4002'),
+                    multiaddr('/ip4/192.168.2.6/tcp/4002'),
+                    multiaddr('/ip4/21.31.57.23/tcp/4002')
+                ]
+            }];
+        const provider = [{
+                id: providerPeer,
+                multiaddrs: [
+                    multiaddr('/ip4/127.0.0.1/tcp/4002'),
+                    multiaddr('/ip4/192.168.1.5/tcp/4002'),
+                    multiaddr('/ip4/135.4.67.0/tcp/4002')
+                ]
+            }];
+        providers.getProviders.withArgs(v.cid).resolves([providerPeer]);
+        peerRouting.getCloserPeersOffline.withArgs(msg.key, sourcePeer).resolves(closer);
+        await peerStore.merge(providerPeer, {
+            multiaddrs: provider[0].multiaddrs
+        });
+        await peerStore.merge(closerPeer, {
+            multiaddrs: closer[0].multiaddrs
+        });
+        const response = await handler.handle(sourcePeer, msg);
+        if (response == null) {
+            throw new Error('No response received from handler');
+        }
+        expect(response.key).to.be.eql(v.cid.bytes);
+        expect(response.providers).to.have.lengthOf(1);
+        expect(peerIdFromMultihash(Digest.decode(response.providers[0].id)).toString()).to.equal(provider[0].id.toString());
+        expect(response.closer).to.have.lengthOf(1);
+        expect(peerIdFromMultihash(Digest.decode(response.closer[0].id)).toString()).to.equal(closer[0].id.toString());
+    });
+});
+//# sourceMappingURL=get-providers.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.js.map
new file mode 100644
index 0000000..7ff7bfc
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-providers.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-providers.spec.js","sourceRoot":"","sources":["../../../../test/rpc/handlers/get-providers.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.d.ts
new file mode 100644
index 0000000..ddc80b0
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=get-value.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.d.ts.map
new file mode 100644
index 0000000..aa17461
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-value.spec.d.ts","sourceRoot":"","sources":["../../../../test/rpc/handlers/get-value.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.js b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.js
new file mode 100644
index 0000000..1841ceb
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.js
@@ -0,0 +1,149 @@
+/* eslint-env mocha */
+import { publicKeyToProtobuf } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { Libp2pRecord } from '@libp2p/record';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core';
+import Sinon from 'sinon';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { MessageType } from '../../../src/message/dht.js';
+import { PeerRouting } from '../../../src/peer-routing/index.js';
+import { GetValueHandler } from '../../../src/rpc/handlers/get-value.js';
+import * as utils from '../../../src/utils.js';
+import { createPeerId } from '../../utils/create-peer-id.js';
+const T = MessageType.GET_VALUE;
+describe('rpc - handlers - GetValue', () => {
+    let peerId;
+    let sourcePeer;
+    let closerPeer;
+    let targetPeer;
+    let handler;
+    let peerRouting;
+    let peerStore;
+    let datastore;
+    beforeEach(async () => {
+        peerId = await createPeerId();
+        sourcePeer = await createPeerId();
+        closerPeer = await createPeerId();
+        targetPeer = await createPeerId();
+        peerRouting = Sinon.createStubInstance(PeerRouting);
+        datastore = new MemoryDatastore();
+        peerStore = persistentPeerStore({
+            peerId,
+            datastore,
+            events: new TypedEventEmitter(),
+            logger: defaultLogger()
+        });
+        const components = {
+            datastore,
+            peerStore,
+            logger: defaultLogger()
+        };
+        handler = new GetValueHandler(components, {
+            peerRouting,
+            logPrefix: ''
+        });
+    });
+    it('errors when missing key', async () => {
+        const msg = {
+            type: T,
+            key: new Uint8Array(0),
+            closer: [],
+            providers: []
+        };
+        try {
+            await handler.handle(sourcePeer, msg);
+        }
+        catch (err) {
+            expect(err.name).to.equal('InvalidMessageError');
+            return;
+        }
+        throw new Error('should error when missing key');
+    });
+    it('responds with a local value', async () => {
+        const key = uint8ArrayFromString('hello');
+        const value = uint8ArrayFromString('world');
+        const record = new Libp2pRecord(key, value, new Date());
+        await datastore.put(utils.bufferToRecordKey(key), record.serialize().subarray());
+        const msg = {
+            type: T,
+            key,
+            closer: [],
+            providers: []
+        };
+        peerRouting.getCloserPeersOffline.withArgs(msg.key, sourcePeer).resolves([]);
+        const response = await handler.handle(sourcePeer, msg);
+        if (response == null) {
+            throw new Error('No response received from handler');
+        }
+        if (response.record == null) {
+            throw new Error('No record returned');
+        }
+        const responseRecord = Libp2pRecord.deserialize(response.record);
+        expect(responseRecord).to.have.property('key').that.equalBytes(key);
+        expect(responseRecord).to.have.property('value').that.equalBytes(value);
+    });
+    it('responds with closer peers returned from the dht', async () => {
+        const key = uint8ArrayFromString('hello');
+        peerRouting.getCloserPeersOffline.withArgs(key, sourcePeer)
+            .resolves([{
+                id: closerPeer,
+                multiaddrs: []
+            }]);
+        const msg = {
+            type: T,
+            key,
+            closer: [],
+            providers: []
+        };
+        const response = await handler.handle(sourcePeer, msg);
+        if (response == null) {
+            throw new Error('No response received from handler');
+        }
+        expect(response).to.have.nested.property('closer[0].id').that.deep.equals(closerPeer.toMultihash().bytes);
+    });
+    describe('public key', () => {
+        it('peer in peerstore', async () => {
+            const key = utils.keyForPublicKey(targetPeer);
+            const msg = {
+                type: T,
+                key,
+                closer: [],
+                providers: []
+            };
+            if (targetPeer.publicKey == null) {
+                throw new Error('targetPeer had no public key');
+            }
+            await peerStore.merge(targetPeer, {
+                publicKey: targetPeer.publicKey
+            });
+            const response = await handler.handle(sourcePeer, msg);
+            if (response == null) {
+                throw new Error('No response received from handler');
+            }
+            if (response.record == null) {
+                throw new Error('No record returned');
+            }
+            const responseRecord = Libp2pRecord.deserialize(response.record);
+            expect(responseRecord).to.have.property('value').that.equalBytes(publicKeyToProtobuf(targetPeer.publicKey));
+        });
+        it('peer not in peerstore', async () => {
+            const key = utils.keyForPublicKey(targetPeer);
+            const msg = {
+                type: T,
+                key,
+                closer: [],
+                providers: []
+            };
+            peerRouting.getCloserPeersOffline.resolves([]);
+            const response = await handler.handle(sourcePeer, msg);
+            if (response == null) {
+                throw new Error('No response received from handler');
+            }
+            expect(response.record).to.not.be.ok();
+        });
+    });
+});
+//# sourceMappingURL=get-value.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.js.map
new file mode 100644
index 0000000..0bc6491
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/get-value.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-value.spec.js","sourceRoot":"","sources":["../../../../test/rpc/handlers/get-value.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.d.ts
new file mode 100644
index 0000000..8f2d056
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=ping.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.d.ts.map
new file mode 100644
index 0000000..b16987a
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ping.spec.d.ts","sourceRoot":"","sources":["../../../../test/rpc/handlers/ping.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.js b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.js
new file mode 100644
index 0000000..404ea94
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.js
@@ -0,0 +1,33 @@
+/* eslint-env mocha */
+import { defaultLogger } from '@libp2p/logger';
+import { expect } from 'aegir/chai';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { MessageType } from '../../../src/message/dht.js';
+import { PingHandler } from '../../../src/rpc/handlers/ping.js';
+import { createPeerId } from '../../utils/create-peer-id.js';
+const T = MessageType.PING;
+describe('rpc - handlers - Ping', () => {
+    let sourcePeer;
+    let handler;
+    beforeEach(async () => {
+        sourcePeer = await createPeerId();
+    });
+    beforeEach(async () => {
+        handler = new PingHandler({
+            logger: defaultLogger()
+        }, {
+            logPrefix: ''
+        });
+    });
+    it('replies with the same message', async () => {
+        const msg = {
+            type: T,
+            key: uint8ArrayFromString('hello'),
+            closer: [],
+            providers: []
+        };
+        const response = await handler.handle(sourcePeer, msg);
+        expect(response).to.be.deep.equal(msg);
+    });
+});
+//# sourceMappingURL=ping.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.js.map
new file mode 100644
index 0000000..fe65a68
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/ping.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ping.spec.js","sourceRoot":"","sources":["../../../../test/rpc/handlers/ping.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAC5E,OAAO,EAAgB,WAAW,EAAE,MAAM,6BAA6B,CAAA;AACvE,OAAO,EAAE,WAAW,EAAE,MAAM,mCAAmC,CAAA;AAC/D,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAA;AAI5D,MAAM,CAAC,GAAG,WAAW,CAAC,IAAI,CAAA;AAE1B,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,IAAI,UAAkB,CAAA;IACtB,IAAI,OAA0B,CAAA;IAE9B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,UAAU,GAAG,MAAM,YAAY,EAAE,CAAA;IACnC,CAAC,CAAC,CAAA;IAEF,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,IAAI,WAAW,CAAC;YACxB,MAAM,EAAE,aAAa,EAAE;SACxB,EAAE;YACD,SAAS,EAAE,EAAE;SACd,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,GAAG,GAAY;YACnB,IAAI,EAAE,CAAC;YACP,GAAG,EAAE,oBAAoB,CAAC,OAAO,CAAC;YAClC,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,EAAE;SACd,CAAA;QACD,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;QAEtD,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACxC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.d.ts b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.d.ts
new file mode 100644
index 0000000..d92e91b
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=put-value.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.d.ts.map
new file mode 100644
index 0000000..9621cda
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"put-value.spec.d.ts","sourceRoot":"","sources":["../../../../test/rpc/handlers/put-value.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.js b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.js
new file mode 100644
index 0000000..f67a454
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.js
@@ -0,0 +1,72 @@
+/* eslint-env mocha */
+/* eslint max-nested-callbacks: ["error", 8] */
+import { defaultLogger } from '@libp2p/logger';
+import { Libp2pRecord } from '@libp2p/record';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core';
+import delay from 'delay';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { MessageType } from '../../../src/message/dht.js';
+import { PutValueHandler } from '../../../src/rpc/handlers/put-value.js';
+import * as utils from '../../../src/utils.js';
+import { createPeerId } from '../../utils/create-peer-id.js';
+const T = MessageType.PUT_VALUE;
+describe('rpc - handlers - PutValue', () => {
+    let sourcePeer;
+    let handler;
+    let datastore;
+    let validators;
+    beforeEach(async () => {
+        sourcePeer = await createPeerId();
+        datastore = new MemoryDatastore();
+        validators = {};
+        const components = {
+            datastore,
+            logger: defaultLogger()
+        };
+        handler = new PutValueHandler(components, {
+            validators,
+            logPrefix: ''
+        });
+    });
+    it('errors on missing record', async () => {
+        const msg = {
+            type: T,
+            key: uint8ArrayFromString('hello'),
+            closer: [],
+            providers: []
+        };
+        try {
+            await handler.handle(sourcePeer, msg);
+        }
+        catch (err) {
+            expect(err.name).to.equal('InvalidMessageError');
+            return;
+        }
+        throw new Error('should error on missing record');
+    });
+    it('stores the record in the datastore', async () => {
+        const msg = {
+            type: T,
+            key: uint8ArrayFromString('/val/hello'),
+            closer: [],
+            providers: []
+        };
+        const record = new Libp2pRecord(uint8ArrayFromString('hello'), uint8ArrayFromString('world'), new Date());
+        msg.record = record.serialize();
+        validators.val = async () => { };
+        const response = await handler.handle(sourcePeer, msg);
+        expect(response).to.deep.equal(msg);
+        const key = utils.bufferToRecordKey(uint8ArrayFromString('hello'));
+        const res = await datastore.get(key);
+        const rec = Libp2pRecord.deserialize(res);
+        expect(rec).to.have.property('key').eql(uint8ArrayFromString('hello'));
+        if (rec.timeReceived == null) {
+            throw new Error('Libp2pRecord timeReceived not set');
+        }
+        // make sure some time has passed
+        await delay(10);
+        expect(rec.timeReceived.getTime()).to.be.lessThan(Date.now());
+    });
+});
+//# sourceMappingURL=put-value.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.js.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.js.map
new file mode 100644
index 0000000..fe9c314
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/handlers/put-value.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"put-value.spec.js","sourceRoot":"","sources":["../../../../test/rpc/handlers/put-value.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.d.ts b/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.d.ts
new file mode 100644
index 0000000..9586729
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.d.ts.map
new file mode 100644
index 0000000..f8cca7a
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.node.d.ts","sourceRoot":"","sources":["../../../test/rpc/index.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.js b/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.js
new file mode 100644
index 0000000..a3136a3
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.js
@@ -0,0 +1,90 @@
+/* eslint-env mocha */
+import { TypedEventEmitter, start } from '@libp2p/interface';
+import { mockStream } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core';
+import all from 'it-all';
+import * as lp from 'it-length-prefixed';
+import map from 'it-map';
+import { pipe } from 'it-pipe';
+import pDefer from 'p-defer';
+import Sinon, {} from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { Uint8ArrayList } from 'uint8arraylist';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { Message, MessageType } from '../../src/message/dht.js';
+import { PeerRouting } from '../../src/peer-routing/index.js';
+import { Providers } from '../../src/providers.js';
+import { RoutingTable } from '../../src/routing-table/index.js';
+import { RPC } from '../../src/rpc/index.js';
+import { passthroughMapper } from '../../src/utils.js';
+import { createPeerId } from '../utils/create-peer-id.js';
+describe('rpc', () => {
+    let peerId;
+    let rpc;
+    let providers;
+    let peerRouting;
+    let validators;
+    let datastore;
+    let routingTable;
+    beforeEach(async () => {
+        peerId = await createPeerId();
+        datastore = new MemoryDatastore();
+        const components = {
+            peerId,
+            datastore,
+            peerStore: stubInterface(),
+            addressManager: stubInterface(),
+            logger: defaultLogger()
+        };
+        components.peerStore = persistentPeerStore({
+            ...components,
+            events: new TypedEventEmitter()
+        });
+        await start(...Object.values(components));
+        providers = Sinon.createStubInstance(Providers);
+        peerRouting = Sinon.createStubInstance(PeerRouting);
+        routingTable = Sinon.createStubInstance(RoutingTable);
+        validators = {};
+        rpc = new RPC(components, {
+            routingTable,
+            providers,
+            peerRouting,
+            validators,
+            logPrefix: '',
+            peerInfoMapper: passthroughMapper
+        });
+    });
+    it('calls back with the response', async () => {
+        const defer = pDefer();
+        const msg = {
+            type: MessageType.GET_VALUE,
+            key: uint8ArrayFromString('hello')
+        };
+        const validateMessage = (res) => {
+            const msg = Message.decode(res[0]);
+            expect(msg).to.have.property('key').eql(uint8ArrayFromString('hello'));
+            expect(msg).to.have.property('closer').eql([]);
+            defer.resolve();
+        };
+        peerRouting.getCloserPeersOffline.resolves([]);
+        const source = pipe([Message.encode(msg)], (source) => lp.encode(source), source => map(source, arr => new Uint8ArrayList(arr)), (source) => all(source));
+        const duplexStream = {
+            source: (async function* () {
+                yield* source;
+            })(),
+            sink: async (source) => {
+                const res = await pipe(source, (source) => lp.decode(source), async (source) => all(source));
+                validateMessage(res);
+            }
+        };
+        rpc.onIncomingStream({
+            stream: mockStream(duplexStream),
+            connection: stubInterface()
+        });
+        await defer.promise;
+    });
+});
+//# sourceMappingURL=index.node.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.js.map b/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.js.map
new file mode 100644
index 0000000..794d175
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/rpc/index.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.node.js","sourceRoot":"","sources":["../../../test/rpc/index.node.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.d.ts b/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.d.ts
new file mode 100644
index 0000000..250882e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.d.ts
@@ -0,0 +1,13 @@
+import type { PeerId, PrivateKey } from '@libp2p/interface';
+export type PeerIdWithPrivateKey = PeerId & {
+    privateKey: PrivateKey;
+};
+/**
+ * Creates multiple PeerIds
+ */
+export declare function createPeerIds(length: number): Promise<PeerIdWithPrivateKey[]>;
+/**
+ * Creates a PeerId
+ */
+export declare function createPeerId(): Promise<PeerIdWithPrivateKey>;
+//# sourceMappingURL=create-peer-id.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.d.ts.map
new file mode 100644
index 0000000..9f3b40a
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"create-peer-id.d.ts","sourceRoot":"","sources":["../../../test/utils/create-peer-id.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAE3D,MAAM,MAAM,oBAAoB,GAAG,MAAM,GAAG;IAC1C,UAAU,EAAE,UAAU,CAAA;CACvB,CAAA;AAED;;GAEG;AACH,wBAAsB,aAAa,CAAE,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,oBAAoB,EAAE,CAAC,CAUpF;AAED;;GAEG;AACH,wBAAsB,YAAY,IAAK,OAAO,CAAC,oBAAoB,CAAC,CAInE"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.js b/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.js
new file mode 100644
index 0000000..14e7957
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.js
@@ -0,0 +1,21 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+/**
+ * Creates multiple PeerIds
+ */
+export async function createPeerIds(length) {
+    return Promise.all(new Array(length).fill(0).map(async () => {
+        const privateKey = await generateKeyPair('Ed25519');
+        const peerId = peerIdFromPrivateKey(privateKey);
+        peerId.privateKey = privateKey;
+        return peerId;
+    }));
+}
+/**
+ * Creates a PeerId
+ */
+export async function createPeerId() {
+    const ids = await createPeerIds(1);
+    return ids[0];
+}
+//# sourceMappingURL=create-peer-id.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.js.map b/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.js.map
new file mode 100644
index 0000000..81a03cd
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/create-peer-id.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"create-peer-id.js","sourceRoot":"","sources":["../../../test/utils/create-peer-id.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AAOtD;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,aAAa,CAAE,MAAc;IACjD,OAAO,OAAO,CAAC,GAAG,CAChB,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;QACvC,MAAM,UAAU,GAAG,MAAM,eAAe,CAAC,SAAS,CAAC,CAAA;QACnD,MAAM,MAAM,GAAG,oBAAoB,CAAC,UAAU,CAAoC,CAAA;QAClF,MAAM,CAAC,UAAU,GAAG,UAAU,CAAA;QAE9B,OAAO,MAAM,CAAA;IACf,CAAC,CAAC,CACH,CAAA;AACH,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,YAAY;IAChC,MAAM,GAAG,GAAG,MAAM,aAAa,CAAC,CAAC,CAAC,CAAA;IAElC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAA;AACf,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.d.ts b/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.d.ts
new file mode 100644
index 0000000..d89a2b9
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.d.ts
@@ -0,0 +1,7 @@
+import { CID } from 'multiformats/cid';
+export interface Value {
+    cid: CID;
+    value: Uint8Array;
+}
+export declare function createValues(length: number): Promise<Value[]>;
+//# sourceMappingURL=create-values.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.d.ts.map
new file mode 100644
index 0000000..dd5589e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"create-values.d.ts","sourceRoot":"","sources":["../../../test/utils/create-values.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AAItC,MAAM,WAAW,KAAK;IACpB,GAAG,EAAE,GAAG,CAAA;IACR,KAAK,EAAE,UAAU,CAAA;CAClB;AAED,wBAAsB,YAAY,CAAE,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,CAWpE"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.js b/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.js
new file mode 100644
index 0000000..aaae4b8
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.js
@@ -0,0 +1,15 @@
+import { randomBytes } from '@libp2p/crypto';
+import { CID } from 'multiformats/cid';
+import * as raw from 'multiformats/codecs/raw';
+import { sha256 } from 'multiformats/hashes/sha2';
+export async function createValues(length) {
+    return Promise.all(Array.from({ length }).map(async () => {
+        const bytes = randomBytes(32);
+        const h = await sha256.digest(bytes);
+        return {
+            cid: CID.createV1(raw.code, h),
+            value: bytes
+        };
+    }));
+}
+//# sourceMappingURL=create-values.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.js.map b/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.js.map
new file mode 100644
index 0000000..05ce14e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/create-values.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"create-values.js","sourceRoot":"","sources":["../../../test/utils/create-values.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AAC5C,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AACtC,OAAO,KAAK,GAAG,MAAM,yBAAyB,CAAA;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAA;AAOjD,MAAM,CAAC,KAAK,UAAU,YAAY,CAAE,MAAc;IAChD,OAAO,OAAO,CAAC,GAAG,CAChB,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;QACpC,MAAM,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC,CAAA;QAC7B,MAAM,CAAC,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QACpC,OAAO;YACL,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;YAC9B,KAAK,EAAE,KAAK;SACb,CAAA;IACH,CAAC,CAAC,CACH,CAAA;AACH,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/index.d.ts b/node_modules/@libp2p/kad-dht/dist/test/utils/index.d.ts
new file mode 100644
index 0000000..a267294
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/index.d.ts
@@ -0,0 +1,6 @@
+import type { PeerId } from '@libp2p/interface';
+/**
+ * Count how many peers are in b but are not in a
+ */
+export declare function countDiffPeers(a: PeerId[], b: PeerId[]): number;
+//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/index.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/utils/index.d.ts.map
new file mode 100644
index 0000000..d7c753e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../test/utils/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAE/C;;GAEG;AACH,wBAAgB,cAAc,CAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,MAAM,CAKhE"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/index.js b/node_modules/@libp2p/kad-dht/dist/test/utils/index.js
new file mode 100644
index 0000000..0f1d9e6
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/index.js
@@ -0,0 +1,9 @@
+/**
+ * Count how many peers are in b but are not in a
+ */
+export function countDiffPeers(a, b) {
+    const s = new Set();
+    a.forEach((p) => s.add(p.toString()));
+    return b.filter((p) => !s.has(p.toString())).length;
+}
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/index.js.map b/node_modules/@libp2p/kad-dht/dist/test/utils/index.js.map
new file mode 100644
index 0000000..2eb099d
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../test/utils/index.ts"],"names":[],"mappings":"AAEA;;GAEG;AACH,MAAM,UAAU,cAAc,CAAE,CAAW,EAAE,CAAW;IACtD,MAAM,CAAC,GAAG,IAAI,GAAG,EAAE,CAAA;IACnB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAErC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,MAAM,CAAA;AACrD,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.d.ts b/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.d.ts
new file mode 100644
index 0000000..9996d55
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.d.ts
@@ -0,0 +1,6 @@
+import type { PeerIdWithPrivateKey } from './create-peer-id.js';
+/**
+ * Sort peers by distance to the given `kadId`
+ */
+export declare function sortClosestPeers(peers: PeerIdWithPrivateKey[], kadId: Uint8Array): Promise<PeerIdWithPrivateKey[]>;
+//# sourceMappingURL=sort-closest-peers.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.d.ts.map
new file mode 100644
index 0000000..c2626e6
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"sort-closest-peers.d.ts","sourceRoot":"","sources":["../../../test/utils/sort-closest-peers.ts"],"names":[],"mappings":"AAKA,OAAO,KAAK,EAAE,oBAAoB,EAAE,MAAM,qBAAqB,CAAA;AAE/D;;GAEG;AACH,wBAAsB,gBAAgB,CAAE,KAAK,EAAE,oBAAoB,EAAE,EAAE,KAAK,EAAE,UAAU,GAAG,OAAO,CAAC,oBAAoB,EAAE,CAAC,CAiBzH"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.js b/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.js
new file mode 100644
index 0000000..13044eb
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.js
@@ -0,0 +1,23 @@
+import all from 'it-all';
+import map from 'it-map';
+import { xor as uint8ArrayXor } from 'uint8arrays/xor';
+import { xorCompare as uint8ArrayXorCompare } from 'uint8arrays/xor-compare';
+import { convertPeerId } from '../../src/utils.js';
+/**
+ * Sort peers by distance to the given `kadId`
+ */
+export async function sortClosestPeers(peers, kadId) {
+    const distances = await all(map(peers, async (peer) => {
+        const id = await convertPeerId(peer);
+        return {
+            peer,
+            distance: uint8ArrayXor(id, kadId)
+        };
+    }));
+    return distances
+        .sort((a, b) => {
+        return uint8ArrayXorCompare(a.distance, b.distance);
+    })
+        .map((d) => d.peer);
+}
+//# sourceMappingURL=sort-closest-peers.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.js.map b/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.js.map
new file mode 100644
index 0000000..04a1c2e
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/sort-closest-peers.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"sort-closest-peers.js","sourceRoot":"","sources":["../../../test/utils/sort-closest-peers.ts"],"names":[],"mappings":"AAAA,OAAO,GAAG,MAAM,QAAQ,CAAA;AACxB,OAAO,GAAG,MAAM,QAAQ,CAAA;AACxB,OAAO,EAAE,GAAG,IAAI,aAAa,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAC5E,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAA;AAGlD;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAE,KAA6B,EAAE,KAAiB;IACtF,MAAM,SAAS,GAAG,MAAM,GAAG,CACzB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;QACxB,MAAM,EAAE,GAAG,MAAM,aAAa,CAAC,IAAI,CAAC,CAAA;QAEpC,OAAO;YACL,IAAI;YACJ,QAAQ,EAAE,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;SACnC,CAAA;IACH,CAAC,CAAC,CACH,CAAA;IAED,OAAO,SAAS;SACb,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QACb,OAAO,oBAAoB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAA;IACrD,CAAC,CAAC;SACD,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;AACvB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.d.ts b/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.d.ts
new file mode 100644
index 0000000..3760203
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.d.ts
@@ -0,0 +1,10 @@
+import { type KadDHTInit } from '../../src/index.js';
+import { KadDHT as KadDHTClass } from '../../src/kad-dht.js';
+export declare class TestDHT {
+    private readonly peers;
+    constructor();
+    spawn(options?: Partial<KadDHTInit>, autoStart?: boolean): Promise<KadDHTClass>;
+    connect(dhtA: KadDHTClass, dhtB: KadDHTClass): Promise<void>;
+    teardown(): Promise<void>;
+}
+//# sourceMappingURL=test-dht.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.d.ts.map b/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.d.ts.map
new file mode 100644
index 0000000..b5231e5
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"test-dht.d.ts","sourceRoot":"","sources":["../../../test/utils/test-dht.ts"],"names":[],"mappings":"AAYA,OAAO,EAAsC,KAAK,UAAU,EAAE,MAAM,oBAAoB,CAAA;AACxF,OAAO,EAAE,MAAM,IAAI,WAAW,EAAE,MAAM,sBAAsB,CAAA;AAI5D,qBAAa,OAAO;IAClB,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAoD;;IAMpE,KAAK,CAAE,OAAO,GAAE,OAAO,CAAC,UAAU,CAAM,EAAE,SAAS,UAAO,GAAG,OAAO,CAAC,WAAW,CAAC;IAyFjF,OAAO,CAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;IA6D7D,QAAQ,IAAK,OAAO,CAAC,IAAI,CAAC;CAQjC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.js b/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.js
new file mode 100644
index 0000000..8d18fa7
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.js
@@ -0,0 +1,144 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter, start, stop } from '@libp2p/interface';
+import { mockRegistrar, mockConnectionManager, mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { multiaddr } from '@multiformats/multiaddr';
+import { MemoryDatastore } from 'datastore-core/memory';
+import delay from 'delay';
+import pRetry from 'p-retry';
+import { stubInterface } from 'sinon-ts';
+import { PROTOCOL } from '../../src/constants.js';
+import {} from '../../src/index.js';
+import { KadDHT as KadDHTClass } from '../../src/kad-dht.js';
+export class TestDHT {
+    peers;
+    constructor() {
+        this.peers = new Map();
+    }
+    async spawn(options = {}, autoStart = true) {
+        const events = new TypedEventEmitter();
+        const privateKey = await generateKeyPair('Ed25519');
+        const peerId = peerIdFromPrivateKey(privateKey);
+        const components = {
+            peerId,
+            privateKey,
+            datastore: new MemoryDatastore(),
+            registrar: mockRegistrar(),
+            // connectionGater: mockConnectionGater(),
+            addressManager: stubInterface(),
+            peerStore: stubInterface(),
+            connectionManager: stubInterface(),
+            events,
+            logger: defaultLogger()
+        };
+        components.connectionManager = mockConnectionManager({
+            ...components,
+            events
+        });
+        components.peerStore = persistentPeerStore({
+            ...components,
+            events
+        });
+        await start(...Object.values(components));
+        mockNetwork.addNode({
+            ...components,
+            events
+        });
+        const addressManager = stubInterface();
+        addressManager.getAddresses.returns([
+            multiaddr(`/ip4/127.0.0.1/tcp/4002/p2p/${components.peerId.toString()}`),
+            multiaddr(`/ip4/192.168.1.1/tcp/4002/p2p/${components.peerId.toString()}`),
+            multiaddr(`/ip4/85.3.31.0/tcp/4002/p2p/${components.peerId.toString()}`)
+        ]);
+        components.addressManager = addressManager;
+        const opts = {
+            validators: {
+                async v() {
+                },
+                async v2() {
+                }
+            },
+            selectors: {
+                v: () => 0
+            },
+            querySelfInterval: 600000,
+            initialQuerySelfInterval: 600000,
+            allowQueryWithZeroPeers: true,
+            clientMode: false,
+            ...options
+        };
+        const dht = new KadDHTClass(components, opts);
+        // simulate libp2p._onDiscoveryPeer
+        dht.addEventListener('peer', (evt) => {
+            const peerData = evt.detail;
+            if (components.peerId.equals(peerData.id)) {
+                return;
+            }
+            void components.peerStore.merge(peerData.id, {
+                multiaddrs: peerData.multiaddrs
+            });
+        });
+        if (autoStart) {
+            await start(dht);
+        }
+        this.peers.set(components.peerId.toString(), {
+            dht,
+            registrar: components.registrar
+        });
+        return dht;
+    }
+    async connect(dhtA, dhtB) {
+        await dhtA.components.peerStore.merge(dhtB.components.peerId, {
+            multiaddrs: dhtB.components.addressManager.getAddresses()
+        });
+        await dhtB.components.peerStore.merge(dhtA.components.peerId, {
+            multiaddrs: dhtA.components.addressManager.getAddresses()
+        });
+        const connection = await dhtA.components.connectionManager.openConnection(dhtB.components.peerId);
+        // simulate identify
+        dhtA.components.registrar.getTopologies(PROTOCOL).forEach(topology => {
+            topology.onConnect?.(dhtB.components.peerId, connection);
+        });
+        dhtB.components.registrar.getTopologies(PROTOCOL).forEach(topology => {
+            const conn = dhtB.components.connectionManager.getConnections(dhtA.components.peerId);
+            topology.onConnect?.(dhtA.components.peerId, conn[0]);
+        });
+        // wait for peers to appear in each others' routing tables
+        await checkConnected(dhtA, dhtB);
+        async function checkConnected(a, b) {
+            const routingTableChecks = [];
+            if (b.getMode() === 'server') {
+                routingTableChecks.push(async () => {
+                    const match = await a.routingTable.find(b.components.peerId);
+                    if (match == null) {
+                        await delay(100);
+                        throw new Error('not found');
+                    }
+                    return match;
+                });
+            }
+            if (a.getMode() === 'server') {
+                routingTableChecks.push(async () => {
+                    const match = await b.routingTable.find(a.components.peerId);
+                    if (match == null) {
+                        await delay(100);
+                        throw new Error('not found');
+                    }
+                    return match;
+                });
+            }
+            // Check routing tables
+            return Promise.all(routingTableChecks
+                .map(async (check) => pRetry(check, { retries: 50 })));
+        }
+    }
+    async teardown() {
+        await Promise.all(Array.from(this.peers.entries()).map(async ([_, { dht }]) => {
+            await stop(dht);
+        }));
+        this.peers.clear();
+    }
+}
+//# sourceMappingURL=test-dht.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.js.map b/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.js.map
new file mode 100644
index 0000000..e2f6424
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/test/utils/test-dht.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"test-dht.js","sourceRoot":"","sources":["../../../test/utils/test-dht.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/tsconfig.tsbuildinfo b/node_modules/@libp2p/kad-dht/dist/tsconfig.tsbuildinfo
new file mode 100644
index 0000000..9a520c4
--- /dev/null
+++ b/node_modules/@libp2p/kad-dht/dist/tsconfig.tsbuildinfo
@@ -0,0 +1 @@
+{"program":{"fileNames":["../../../node_modules/typescript/lib/lib.es5.d.ts","../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../node_modules/typescript/lib/lib.es2021.d.ts","../../../node_modules/typescript/lib/lib.es2022.d.ts","../../../node_modules/typescript/lib/lib.es2023.d.ts","../../../node_modules/typescript/lib/lib.dom.d.ts","../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../node_modules/typescript/lib/lib.webworker.d.ts","../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../node_modules/typescript/lib/lib.es2021.promise.d.ts","../../../node_modules/typescript/lib/lib.es2021.string.d.ts","../../../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../../node_modules/typescript/lib/lib.es2021.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.array.d.ts","../../../node_modules/typescript/lib/lib.es2022.error.d.ts","../../../node_modules/typescript/lib/lib.es2022.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.object.d.ts","../../../node_modules/typescript/lib/lib.es2022.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2022.string.d.ts","../../../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2023.array.d.ts","../../../node_modules/typescript/lib/lib.es2023.collection.d.ts","../../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../src/constants.ts","../src/errors.ts","../../../node_modules/multiformats/dist/src/bases/interface.d.ts","../../../node_modules/multiformats/dist/src/block/interface.d.ts","../../../node_modules/multiformats/dist/src/hashes/interface.d.ts","../../../node_modules/multiformats/dist/src/link/interface.d.ts","../../../node_modules/multiformats/dist/src/cid.d.ts","../../../node_modules/uint8arraylist/dist/src/index.d.ts","../../interface/dist/src/keys/index.d.ts","../../interface/dist/src/peer-id/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/protocols-table.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/index.d.ts","../../../node_modules/progress-events/dist/src/index.d.ts","../../../node_modules/@multiformats/dns/dist/src/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/dnsaddr.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/index.d.ts","../../../node_modules/it-stream-types/dist/src/index.d.ts","../../interface/dist/src/connection/index.d.ts","../../interface/dist/src/peer-info/index.d.ts","../../interface/dist/src/content-routing/index.d.ts","../../interface/dist/src/event-target.d.ts","../../interface/dist/src/metrics/index.d.ts","../../interface/dist/src/peer-routing/index.d.ts","../../interface/dist/src/peer-store/index.d.ts","../../interface/dist/src/startable.d.ts","../../interface/dist/src/stream-handler/index.d.ts","../../interface/dist/src/topology/index.d.ts","../../interface/dist/src/stream-muxer/index.d.ts","../../interface/dist/src/transport/index.d.ts","../../interface/dist/src/connection-encrypter/index.d.ts","../../interface/dist/src/connection-gater/index.d.ts","../../interface/dist/src/peer-discovery/index.d.ts","../../interface/dist/src/peer-store/tags.d.ts","../../../node_modules/it-pushable/dist/src/index.d.ts","../../interface/dist/src/pubsub/index.d.ts","../../interface/dist/src/record/index.d.ts","../../interface/dist/src/errors.d.ts","../../../node_modules/@types/node/assert.d.ts","../../../node_modules/@types/node/assert/strict.d.ts","../../../node_modules/buffer/index.d.ts","../../../node_modules/undici-types/header.d.ts","../../../node_modules/undici-types/readable.d.ts","../../../node_modules/undici-types/file.d.ts","../../../node_modules/undici-types/fetch.d.ts","../../../node_modules/undici-types/formdata.d.ts","../../../node_modules/undici-types/connector.d.ts","../../../node_modules/undici-types/client.d.ts","../../../node_modules/undici-types/errors.d.ts","../../../node_modules/undici-types/dispatcher.d.ts","../../../node_modules/undici-types/global-dispatcher.d.ts","../../../node_modules/undici-types/global-origin.d.ts","../../../node_modules/undici-types/pool-stats.d.ts","../../../node_modules/undici-types/pool.d.ts","../../../node_modules/undici-types/handlers.d.ts","../../../node_modules/undici-types/balanced-pool.d.ts","../../../node_modules/undici-types/agent.d.ts","../../../node_modules/undici-types/mock-interceptor.d.ts","../../../node_modules/undici-types/mock-agent.d.ts","../../../node_modules/undici-types/mock-client.d.ts","../../../node_modules/undici-types/mock-pool.d.ts","../../../node_modules/undici-types/mock-errors.d.ts","../../../node_modules/undici-types/proxy-agent.d.ts","../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../node_modules/undici-types/retry-handler.d.ts","../../../node_modules/undici-types/retry-agent.d.ts","../../../node_modules/undici-types/api.d.ts","../../../node_modules/undici-types/interceptors.d.ts","../../../node_modules/undici-types/util.d.ts","../../../node_modules/undici-types/cookies.d.ts","../../../node_modules/undici-types/patch.d.ts","../../../node_modules/undici-types/websocket.d.ts","../../../node_modules/undici-types/eventsource.d.ts","../../../node_modules/undici-types/filereader.d.ts","../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../node_modules/undici-types/content-type.d.ts","../../../node_modules/undici-types/cache.d.ts","../../../node_modules/undici-types/index.d.ts","../../../node_modules/@types/node/globals.d.ts","../../../node_modules/@types/node/async_hooks.d.ts","../../../node_modules/@types/node/buffer.d.ts","../../../node_modules/@types/node/child_process.d.ts","../../../node_modules/@types/node/cluster.d.ts","../../../node_modules/@types/node/console.d.ts","../../../node_modules/@types/node/constants.d.ts","../../../node_modules/@types/node/crypto.d.ts","../../../node_modules/@types/node/dgram.d.ts","../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../node_modules/@types/node/dns.d.ts","../../../node_modules/@types/node/dns/promises.d.ts","../../../node_modules/@types/node/domain.d.ts","../../../node_modules/@types/node/dom-events.d.ts","../../../node_modules/@types/node/events.d.ts","../../../node_modules/@types/node/fs.d.ts","../../../node_modules/@types/node/fs/promises.d.ts","../../../node_modules/@types/node/http.d.ts","../../../node_modules/@types/node/http2.d.ts","../../../node_modules/@types/node/https.d.ts","../../../node_modules/@types/node/inspector.d.ts","../../../node_modules/@types/node/module.d.ts","../../../node_modules/@types/node/net.d.ts","../../../node_modules/@types/node/os.d.ts","../../../node_modules/@types/node/path.d.ts","../../../node_modules/@types/node/perf_hooks.d.ts","../../../node_modules/@types/node/process.d.ts","../../../node_modules/@types/node/punycode.d.ts","../../../node_modules/@types/node/querystring.d.ts","../../../node_modules/@types/node/readline.d.ts","../../../node_modules/@types/node/readline/promises.d.ts","../../../node_modules/@types/node/repl.d.ts","../../../node_modules/@types/node/sea.d.ts","../../../node_modules/@types/node/stream.d.ts","../../../node_modules/@types/node/stream/promises.d.ts","../../../node_modules/@types/node/stream/consumers.d.ts","../../../node_modules/@types/node/stream/web.d.ts","../../../node_modules/@types/node/string_decoder.d.ts","../../../node_modules/@types/node/test.d.ts","../../../node_modules/@types/node/timers.d.ts","../../../node_modules/@types/node/timers/promises.d.ts","../../../node_modules/@types/node/tls.d.ts","../../../node_modules/@types/node/trace_events.d.ts","../../../node_modules/@types/node/tty.d.ts","../../../node_modules/@types/node/url.d.ts","../../../node_modules/@types/node/util.d.ts","../../../node_modules/@types/node/v8.d.ts","../../../node_modules/@types/node/vm.d.ts","../../../node_modules/@types/node/wasi.d.ts","../../../node_modules/@types/node/worker_threads.d.ts","../../../node_modules/@types/node/zlib.d.ts","../../../node_modules/@types/node/globals.global.d.ts","../../../node_modules/@types/node/index.d.ts","../../interface/dist/src/events.d.ts","../../interface/dist/src/index.d.ts","../../../node_modules/it-drain/dist/src/index.d.ts","../../../node_modules/p-defer/index.d.ts","../../../node_modules/protons-runtime/dist/src/codec.d.ts","../../../node_modules/protons-runtime/dist/src/decode.d.ts","../../../node_modules/protons-runtime/dist/src/encode.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/enum.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/message.d.ts","../../../node_modules/protons-runtime/dist/src/utils/reader.d.ts","../../../node_modules/protons-runtime/dist/src/utils/writer.d.ts","../../../node_modules/protons-runtime/dist/src/index.d.ts","../../record/dist/src/record.d.ts","../../record/dist/src/index.d.ts","../../../node_modules/it-map/dist/src/index.d.ts","../../../node_modules/it-parallel/dist/src/index.d.ts","../../../node_modules/it-pipe/dist/src/index.d.ts","../../../node_modules/uint8arrays/dist/src/equals.d.ts","../../../node_modules/uint8arrays/dist/src/alloc.d.ts","../src/message/dht.ts","../src/query/events.ts","../../../node_modules/multiformats/dist/src/codecs/interface.d.ts","../../../node_modules/multiformats/dist/src/codecs/json.d.ts","../../../node_modules/multiformats/dist/src/codecs/raw.d.ts","../../../node_modules/multiformats/dist/src/bytes.d.ts","../../../node_modules/multiformats/dist/src/hashes/digest.d.ts","../../../node_modules/multiformats/dist/src/hashes/hasher.d.ts","../../../node_modules/multiformats/dist/src/varint.d.ts","../../../node_modules/multiformats/dist/src/interface.d.ts","../../../node_modules/multiformats/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/bases/base.d.ts","../../../node_modules/multiformats/dist/src/basics.d.ts","../../../node_modules/uint8arrays/dist/src/util/bases.d.ts","../../../node_modules/uint8arrays/dist/src/to-string.d.ts","../src/record/selectors.ts","../../crypto/dist/src/keys/interface.d.ts","../../crypto/dist/src/keys/ecdh/index.d.ts","../../crypto/dist/src/keys/key-stretcher.d.ts","../../crypto/dist/src/keys/index.d.ts","../src/record/validators.ts","../../peer-id/dist/src/index.d.ts","../../utils/dist/src/private-ip.d.ts","../../../node_modules/interface-datastore/dist/src/key.d.ts","../../../node_modules/multiformats/dist/src/hashes/sha2.d.ts","../../../node_modules/uint8arrays/dist/src/concat.d.ts","../../../node_modules/uint8arrays/dist/src/from-string.d.ts","../src/utils.ts","../../../node_modules/any-signal/dist/src/index.d.ts","../../utils/dist/src/adaptive-timeout.d.ts","../../../node_modules/it-byte-stream/dist/src/index.d.ts","../../../node_modules/it-length-prefixed-stream/dist/src/index.d.ts","../../../node_modules/it-protobuf-stream/dist/src/index.d.ts","../src/message/utils.ts","../src/network.ts","../../../node_modules/uint8arrays/dist/src/xor.d.ts","../../../node_modules/uint8arrays/dist/src/xor-compare.d.ts","../src/peer-list/peer-distance-list.ts","../../peer-collections/dist/src/map.d.ts","../../peer-collections/dist/src/set.d.ts","../../peer-collections/dist/src/list.d.ts","../../peer-collections/dist/src/filter.d.ts","../../peer-collections/dist/src/tracked-map.d.ts","../../peer-collections/dist/src/tracked-set.d.ts","../../peer-collections/dist/src/tracked-list.d.ts","../../peer-collections/dist/src/index.d.ts","../../../node_modules/it-merge/dist/src/index.d.ts","../../../node_modules/race-signal/dist/src/index.d.ts","../../utils/dist/src/queue/recipient.d.ts","../../utils/dist/src/queue/job.d.ts","../../utils/dist/src/queue/index.d.ts","../src/query/types.ts","../../interface-internal/dist/src/address-manager/index.d.ts","../../interface-internal/dist/src/connection-manager/index.d.ts","../../interface-internal/dist/src/random-walk/index.d.ts","../../interface-internal/dist/src/record/index.d.ts","../../interface-internal/dist/src/registrar/index.d.ts","../../interface-internal/dist/src/transport-manager/index.d.ts","../../interface-internal/dist/src/index.d.ts","../src/query/query-path.ts","../../utils/dist/src/peer-queue.d.ts","../src/routing-table/k-bucket.ts","../src/routing-table/index.ts","../src/query/manager.ts","../src/peer-routing/index.ts","../src/content-fetching/index.ts","../../../node_modules/hashlru/index.d.ts","../../../node_modules/eventemitter3/index.d.ts","../../../node_modules/p-queue/dist/queue.d.ts","../../../node_modules/p-queue/dist/options.d.ts","../../../node_modules/p-queue/dist/priority-queue.d.ts","../../../node_modules/p-queue/dist/index.d.ts","../../../node_modules/uint8-varint/dist/src/index.d.ts","../../../node_modules/interface-store/dist/src/errors.d.ts","../../../node_modules/interface-store/dist/src/index.d.ts","../../../node_modules/interface-datastore/dist/src/index.d.ts","../src/providers.ts","../src/content-routing/index.ts","../../../node_modules/it-length/dist/src/index.d.ts","../../../node_modules/it-take/dist/src/index.d.ts","../../../node_modules/p-timeout/index.d.ts","../../../node_modules/p-event/index.d.ts","../src/query-self.ts","../../crypto/dist/src/hmac/index.d.ts","../../crypto/dist/src/pbkdf2.d.ts","../../crypto/dist/src/random-bytes.d.ts","../../crypto/dist/src/index.d.ts","../src/routing-table/generated-prefix-list.ts","../src/routing-table/refresh.ts","../../../node_modules/it-length-prefixed/dist/src/encode.d.ts","../../../node_modules/it-reader/dist/src/index.d.ts","../../../node_modules/it-length-prefixed/dist/src/decode.d.ts","../../../node_modules/it-length-prefixed/dist/src/index.d.ts","../src/rpc/handlers/add-provider.ts","../../../node_modules/uint8arrays/dist/src/index.d.ts","../src/rpc/handlers/find-node.ts","../src/rpc/handlers/get-providers.ts","../src/rpc/handlers/get-value.ts","../src/rpc/handlers/ping.ts","../src/rpc/handlers/put-value.ts","../src/rpc/index.ts","../src/topology-listener.ts","../src/kad-dht.ts","../src/index.ts","../src/peer-list/index.ts","../src/routing-table/generated-prefix-list-browser.ts","../../../node_modules/@types/chai/index.d.ts","../../../node_modules/@types/chai-as-promised/index.d.ts","../../../node_modules/chai-parentheses/index.d.ts","../../../node_modules/@types/chai-subset/index.d.ts","../../../node_modules/chai-bites/index.d.ts","../../../node_modules/@types/chai-string/index.d.ts","../../../node_modules/aegir/dist/utils/chai.d.ts","../../../node_modules/delay/index.d.ts","../../interface-compliance-tests/dist/src/mocks/connection-gater.d.ts","../../interface-compliance-tests/dist/src/mocks/connection-manager.d.ts","../../interface-compliance-tests/dist/src/mocks/connection.d.ts","../../interface-compliance-tests/dist/src/mocks/multiaddr-connection.d.ts","../../logger/dist/src/index.d.ts","../../utils/dist/src/abstract-stream.d.ts","../../interface-compliance-tests/dist/src/mocks/muxer.d.ts","../../interface-compliance-tests/dist/src/mocks/registrar.d.ts","../../interface-compliance-tests/dist/src/mocks/upgrader.d.ts","../../interface-compliance-tests/dist/src/mocks/duplex.d.ts","../../interface-compliance-tests/dist/src/mocks/metrics.d.ts","../../interface-compliance-tests/dist/src/mocks/index.d.ts","../../peer-store/dist/src/index.d.ts","../../../node_modules/datastore-core/dist/src/base.d.ts","../../../node_modules/datastore-core/dist/src/memory.d.ts","../../../node_modules/@types/retry/index.d.ts","../../../node_modules/p-retry/index.d.ts","../../../node_modules/@types/sinonjs__fake-timers/index.d.ts","../../../node_modules/@types/sinon/index.d.ts","../../../node_modules/sinon-ts/dist/src/index.d.ts","../test/utils/test-dht.ts","../test/enable-server-mode.spec.ts","../../../node_modules/it-all/dist/src/index.d.ts","../../../node_modules/it-filter/dist/src/index.d.ts","../../../node_modules/it-last/dist/src/index.d.ts","../test/utils/create-peer-id.ts","../test/utils/create-values.ts","../test/utils/index.ts","../test/utils/sort-closest-peers.ts","../test/kad-dht.spec.ts","../test/kad-utils.spec.ts","../../interface-compliance-tests/dist/src/matchers.d.ts","../../../node_modules/datastore-core/dist/src/shard.d.ts","../../../node_modules/datastore-core/dist/src/keytransform.d.ts","../../../node_modules/datastore-core/dist/src/sharding.d.ts","../../../node_modules/datastore-core/dist/src/mount.d.ts","../../../node_modules/datastore-core/dist/src/tiered.d.ts","../../../node_modules/datastore-core/dist/src/namespace.d.ts","../../../node_modules/datastore-core/dist/src/index.d.ts","../../../node_modules/it-pair/dist/src/duplex.d.ts","../test/libp2p-routing.spec.ts","../../../node_modules/@types/lodash/common/common.d.ts","../../../node_modules/@types/lodash/common/array.d.ts","../../../node_modules/@types/lodash/common/collection.d.ts","../../../node_modules/@types/lodash/common/date.d.ts","../../../node_modules/@types/lodash/common/function.d.ts","../../../node_modules/@types/lodash/common/lang.d.ts","../../../node_modules/@types/lodash/common/math.d.ts","../../../node_modules/@types/lodash/common/number.d.ts","../../../node_modules/@types/lodash/common/object.d.ts","../../../node_modules/@types/lodash/common/seq.d.ts","../../../node_modules/@types/lodash/common/string.d.ts","../../../node_modules/@types/lodash/common/util.d.ts","../../../node_modules/@types/lodash/index.d.ts","../../../node_modules/@types/lodash.range/index.d.ts","../test/message.node.ts","../../../node_modules/@types/lodash.random/index.d.ts","../test/message.spec.ts","../test/multiple-nodes.spec.ts","../test/network.spec.ts","../test/peer-distance-list.spec.ts","../test/peer-list.spec.ts","../../../node_modules/level-supports/index.d.ts","../../../node_modules/level-transcoder/lib/formats.d.ts","../../../node_modules/level-transcoder/lib/encoding.d.ts","../../../node_modules/level-transcoder/index.d.ts","../../../node_modules/abstract-level/types/abstract-sublevel.d.ts","../../../node_modules/abstract-level/types/interfaces.d.ts","../../../node_modules/abstract-level/types/abstract-chained-batch.d.ts","../../../node_modules/abstract-level/types/abstract-iterator.d.ts","../../../node_modules/abstract-level/types/abstract-level.d.ts","../../../node_modules/abstract-level/index.d.ts","../../../node_modules/classic-level/index.d.ts","../../../node_modules/browser-level/index.d.ts","../../../node_modules/level/index.d.ts","../../../node_modules/datastore-level/dist/src/index.d.ts","../test/providers.node.ts","../test/providers.spec.ts","../test/query-self.spec.ts","../test/query.spec.ts","../../../node_modules/p-wait-for/index.d.ts","../test/routing-table.spec.ts","../../../node_modules/multiformats/dist/src/bases/base64.d.ts","../test/fixtures/record/go-key-records.ts","../node_modules/execa/types/utils.d.ts","../node_modules/execa/types/transform/normalize.d.ts","../node_modules/execa/types/stdio/type.d.ts","../node_modules/execa/types/ipc.d.ts","../node_modules/execa/types/arguments/fd-options.d.ts","../node_modules/execa/types/arguments/specific.d.ts","../node_modules/execa/types/return/final-error.d.ts","../node_modules/execa/types/stdio/array.d.ts","../node_modules/execa/types/stdio/option.d.ts","../node_modules/execa/types/transform/object-mode.d.ts","../node_modules/execa/types/stdio/direction.d.ts","../node_modules/execa/types/return/ignore.d.ts","../node_modules/execa/types/arguments/encoding-option.d.ts","../node_modules/execa/types/return/result-stdout.d.ts","../node_modules/execa/types/return/result-all.d.ts","../node_modules/execa/types/return/result-stdio.d.ts","../node_modules/execa/types/return/result-ipc.d.ts","../node_modules/execa/types/return/result.d.ts","../node_modules/execa/types/verbose.d.ts","../node_modules/execa/types/arguments/options.d.ts","../node_modules/execa/types/methods/template.d.ts","../node_modules/execa/types/pipe.d.ts","../node_modules/execa/types/convert.d.ts","../node_modules/execa/types/subprocess/stdout.d.ts","../node_modules/execa/types/subprocess/stdio.d.ts","../node_modules/execa/types/subprocess/all.d.ts","../node_modules/execa/types/subprocess/subprocess.d.ts","../node_modules/execa/types/methods/main-async.d.ts","../node_modules/execa/types/methods/main-sync.d.ts","../node_modules/execa/types/methods/command.d.ts","../node_modules/execa/types/methods/script.d.ts","../node_modules/execa/types/methods/node.d.ts","../node_modules/execa/index.d.ts","../../../node_modules/@types/which/index.d.ts","../test/generate-peers/generate-peers.node.ts","../test/record/selection.spec.ts","../test/record/validator.spec.ts","../test/rpc/index.node.ts","../test/rpc/handlers/add-provider.spec.ts","../test/rpc/handlers/find-node.spec.ts","../test/rpc/handlers/get-providers.spec.ts","../test/rpc/handlers/get-value.spec.ts","../test/rpc/handlers/ping.spec.ts","../test/rpc/handlers/put-value.spec.ts","../../../node_modules/keyv/src/index.d.ts","../../../node_modules/@types/http-cache-semantics/index.d.ts","../../../node_modules/@types/responselike/index.d.ts","../../../node_modules/@types/cacheable-request/index.d.ts","../../../node_modules/@types/ms/index.d.ts","../../../node_modules/@types/debug/index.d.ts","../../../node_modules/@types/dns-packet/index.d.ts","../../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../../node_modules/@types/istanbul-lib-report/index.d.ts","../../../node_modules/@types/istanbul-reports/index.d.ts","../../../node_modules/@types/json-schema/index.d.ts","../../../node_modules/@types/json5/index.d.ts","../../../node_modules/@types/keyv/index.d.ts","../../../node_modules/@types/linkify-it/build/index.cjs.d.ts","../../../node_modules/@types/linkify-it/index.d.ts","../../../node_modules/@types/mdurl/build/index.cjs.d.ts","../../../node_modules/@types/mdurl/index.d.ts","../../../node_modules/@types/markdown-it/dist/index.cjs.d.ts","../../../node_modules/@types/markdown-it/index.d.ts","../../../node_modules/@types/unist/index.d.ts","../../../node_modules/@types/mdast/index.d.ts","../../../node_modules/@types/minimatch/index.d.ts","../../../node_modules/@types/minimist/index.d.ts","../../../node_modules/@types/mocha/index.d.ts","../../../node_modules/@types/multicast-dns/index.d.ts","../../../node_modules/@types/murmurhash3js-revisited/index.d.ts","../../../node_modules/@types/netmask/index.d.ts","../../../node_modules/@types/node-forge/index.d.ts","../../../node_modules/@types/normalize-package-data/index.d.ts","../../../node_modules/@types/parse-json/index.d.ts","../../../node_modules/@types/semver/classes/semver.d.ts","../../../node_modules/@types/semver/functions/parse.d.ts","../../../node_modules/@types/semver/functions/valid.d.ts","../../../node_modules/@types/semver/functions/clean.d.ts","../../../node_modules/@types/semver/functions/inc.d.ts","../../../node_modules/@types/semver/functions/diff.d.ts","../../../node_modules/@types/semver/functions/major.d.ts","../../../node_modules/@types/semver/functions/minor.d.ts","../../../node_modules/@types/semver/functions/patch.d.ts","../../../node_modules/@types/semver/functions/prerelease.d.ts","../../../node_modules/@types/semver/functions/compare.d.ts","../../../node_modules/@types/semver/functions/rcompare.d.ts","../../../node_modules/@types/semver/functions/compare-loose.d.ts","../../../node_modules/@types/semver/functions/compare-build.d.ts","../../../node_modules/@types/semver/functions/sort.d.ts","../../../node_modules/@types/semver/functions/rsort.d.ts","../../../node_modules/@types/semver/functions/gt.d.ts","../../../node_modules/@types/semver/functions/lt.d.ts","../../../node_modules/@types/semver/functions/eq.d.ts","../../../node_modules/@types/semver/functions/neq.d.ts","../../../node_modules/@types/semver/functions/gte.d.ts","../../../node_modules/@types/semver/functions/lte.d.ts","../../../node_modules/@types/semver/functions/cmp.d.ts","../../../node_modules/@types/semver/functions/coerce.d.ts","../../../node_modules/@types/semver/classes/comparator.d.ts","../../../node_modules/@types/semver/classes/range.d.ts","../../../node_modules/@types/semver/functions/satisfies.d.ts","../../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../../node_modules/@types/semver/ranges/min-version.d.ts","../../../node_modules/@types/semver/ranges/valid.d.ts","../../../node_modules/@types/semver/ranges/outside.d.ts","../../../node_modules/@types/semver/ranges/gtr.d.ts","../../../node_modules/@types/semver/ranges/ltr.d.ts","../../../node_modules/@types/semver/ranges/intersects.d.ts","../../../node_modules/@types/semver/ranges/simplify.d.ts","../../../node_modules/@types/semver/ranges/subset.d.ts","../../../node_modules/@types/semver/internals/identifiers.d.ts","../../../node_modules/@types/semver/index.d.ts","../../../node_modules/@types/stack-utils/index.d.ts","../../../node_modules/@types/strip-bom/index.d.ts","../../../node_modules/@types/strip-json-comments/index.d.ts","../../../node_modules/@types/tdigest/index.d.ts","../../../node_modules/@types/ws/index.d.ts","../../../node_modules/@types/xsalsa20/index.d.ts","../../../node_modules/@types/yargs-parser/index.d.ts","../../../node_modules/@types/yargs/index.d.ts","../../../node_modules/@types/yauzl/index.d.ts"],"fileInfos":[{"version":"824cb491a40f7e8fdeb56f1df5edf91b23f3e3ee6b4cde84d4a99be32338faee","affectsGlobalScope":true},"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","5514e54f17d6d74ecefedc73c504eadffdeda79c7ea205cf9febead32d45c4bc","1c0cdb8dc619bc549c3e5020643e7cf7ae7940058e8c7e5aefa5871b6d86f44b",{"version":"87d693a4920d794a73384b3c779cadcb8548ac6945aa7a925832fe2418c9527a","affectsGlobalScope":true},{"version":"76f838d5d49b65de83bc345c04aa54c62a3cfdb72a477dc0c0fce89a30596c30","affectsGlobalScope":true},{"version":"db88e2781075c7bca86634724f38a132de718ddf3a470a3a2cdb182f4364af9e","affectsGlobalScope":true},{"version":"138fb588d26538783b78d1e3b2c2cc12d55840b97bf5e08bca7f7a174fbe2f17","affectsGlobalScope":true},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true},{"version":"bc47685641087c015972a3f072480889f0d6c65515f12bd85222f49a98952ed7","affectsGlobalScope":true},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true},{"version":"6fc23bb8c3965964be8c597310a2878b53a0306edb71d4b5a4dfe760186bcc01","affectsGlobalScope":true},{"version":"ea011c76963fb15ef1cdd7ce6a6808b46322c527de2077b6cfdf23ae6f5f9ec7","affectsGlobalScope":true},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true},{"version":"bb42a7797d996412ecdc5b2787720de477103a0b2e53058569069a0e2bae6c7e","affectsGlobalScope":true},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true},{"version":"b541a838a13f9234aba650a825393ffc2292dc0fc87681a5d81ef0c96d281e7a","affectsGlobalScope":true},{"version":"b20fe0eca9a4e405f1a5ae24a2b3290b37cf7f21eba6cbe4fc3fab979237d4f3","affectsGlobalScope":true},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true},{"version":"49ed889be54031e1044af0ad2c603d627b8bda8b50c1a68435fe85583901d072","affectsGlobalScope":true},{"version":"e93d098658ce4f0c8a0779e6cab91d0259efb88a318137f686ad76f8410ca270","affectsGlobalScope":true},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true},{"version":"5e07ed3809d48205d5b985642a59f2eba47c402374a7cf8006b686f79efadcbd","affectsGlobalScope":true},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true},{"version":"8073890e29d2f46fdbc19b8d6d2eb9ea58db9a2052f8640af20baff9afbc8640","affectsGlobalScope":true},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true},{"version":"51e547984877a62227042850456de71a5c45e7fe86b7c975c6e68896c86fa23b","affectsGlobalScope":true},{"version":"956d27abdea9652e8368ce029bb1e0b9174e9678a273529f426df4b3d90abd60","affectsGlobalScope":true},{"version":"4fa6ed14e98aa80b91f61b9805c653ee82af3502dc21c9da5268d3857772ca05","affectsGlobalScope":true},{"version":"e6633e05da3ff36e6da2ec170d0d03ccf33de50ca4dc6f5aeecb572cedd162fb","affectsGlobalScope":true},{"version":"d8670852241d4c6e03f2b89d67497a4bbefe29ecaa5a444e2c11a9b05e6fccc6","affectsGlobalScope":true},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true},{"version":"caccc56c72713969e1cfe5c3d44e5bab151544d9d2b373d7dbe5a1e4166652be","affectsGlobalScope":true},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true},{"version":"50d53ccd31f6667aff66e3d62adf948879a3a16f05d89882d1188084ee415bbc","affectsGlobalScope":true},{"version":"08a58483392df5fcc1db57d782e87734f77ae9eab42516028acbfe46f29a3ef7","affectsGlobalScope":true},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true},{"version":"13f6e6380c78e15e140243dc4be2fa546c287c6d61f4729bc2dd7cf449605471","affectsGlobalScope":true},{"version":"33358442698bb565130f52ba79bfd3d4d484ac85fe33f3cb1759c54d18201393","affectsGlobalScope":true},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true},{"version":"e7310881e20ded7219ed112f374544cc3a5d012c57ad9b5e844fc90b9551c91c","signature":"01301f68959d84ae340dacb2d16e01b56c4293d017f96a15eaa43f6b7e8367cc"},{"version":"a41e712bd87304c6eef87beda18391907e87c504079587e7c618896563305e26","signature":"25845cba606e8ed19b9eb078bf4a96e49110dfc1605e268c064193698b40c809"},"4a3605bef1a5ef29fd5a1696dd95b0b4e2259e2d07a4d88fac79f3a9765c44a2","370079895f1acdd4bb5194a403c85bf60cfbb2654bced9430a6c7210e7246be8","90240231e730deed31569f6c686766a538e4a024bbc33ea1738fe924f477ba61","552223520e823223ee13c5764e9b69b1819c985818a8bcda435d8d1dbd909bee","49b7c3ddd683c09aa437dd92681699387441f522524b14d2331ce494a9bf2f27","d35b5db21a04a45ae6323c4d4b25acc983dfe2870fc670fd05249eb19d839a5e","ca9a05720907ecf989983efa8f02e456604161a17730e58cc599a852fd6a02a2","51720c0374406647b50f84f24c7b623f1d01e1955f7e929da7c5c0629b4390ad","5212dd78d1d63ab33332c8846a0ea5ce248159e74033cde16de48373036b4704","954b3c04ee9f94ca1e262f3e5a6e833b0da0066514b3d4b97b92b7f0c85f8700","a2fc9ce1ae5bed7068d701d8aeebf13321de0f42c217dc2e10f1622dcaa53a7f","8e81f220cb935d551e88cff11541d5e89d3a3494a52fe6247e98016a9dbd4c2d","6b2576a04253626ba41b7dc7ec5977bec07f3b6952b16249d9fa8a3a0d79901c","9de17491f2bfbccea92500e174079d53bdedae34dbebe5d4a12a06ab09814710","e88481085a8576fa52efc913e631c1a833d16179486469b8538d8c4fab2f7381","aec68502c8f4ffaecb4440b37363473582fec0bfee4fb8668a87daa7f700f708","d71577e78c7a4257074aaf82f595724175210c89e8b467ef82f949a6cbd891bc","cf548af8b03cbbc79fdc4f357b5560f618c6d2f68c8688e6eb759c3c11d962c3","c84146dbc9d2e5f43d2cbf15485a4eabf90219dbb66c0d481f20f12d3851bffc","323aa55bca8a32c4b48353f48683bdc02aca0d985757f86f7610bb6bcd719561","99c24f331c9f4e75a779b9a988e942442db3cf29923ceb820d3bdd4ed1edfef2","25b1f20d5868ef9ef18132f7dd76b40b7038688ff7c56c58930537a8dff9f231","4105fa0ecfaffb578c8051c3de22e8c984191aac8de14641ee99beed9c5e5bd9","3a476c8989ff0b66a14f3b0dc1ef590d8ee2ea6fcc80e0c49cd447acd397dd28","8c92080253bac0506d82b83d555a029582595f0944abb349954ea732322baa5c","45d4c8d63a67224af62bebff18da32bb2817e306c9fd9e5d1dac6ef8d2da7ead","230eb449f719119cab1728252f20ecdd36d7a20cef659e4a51ada1a232a8aaad","2b83c561e623b28a06f15e44b02ccbc7b4ec388c8ffb8646132487a1fd7c99c4","c1c7b50665ce0b8aa4b95f3843167ac7ac25d1f724d77c2a07b597abb9cf394c","1bf687d978bdd6d5aff10b9eb0ff0695179f8594d4446946fd0182d6d25fa433","ec26029e3a4eccf8ee79d5c76093fbe928cedc83d813fca9be4f055d61530013","e0ff6a627dfbfb9d32e49f34879a763680e37758c509ddd809cb316b96f34390","2113d72680c7ddad6d3b6f70a29432a35c074c94ec6823a7c16ccd69847d965c","c8ffd61bf2db2e7bccb996dd70c9499805cb338f1b1c781987e38ba99dd5b296","55e5a976b594dc02f054860fb59a5299872a5b3c8c90e96733a5c9c9d4ed1fb8","fac83d4c6898d5bf90c508cc84409ded40fdc14611cf42d7fb750fb2c7847979","d012f94950fd654771664f96132a11fcaacde6226ac421516ec5aff3ef25b449","4f1eb6b9c2b666278e09019281953fc4ecadad3b2ba2781b2602445743eaaeca","75848e9f0cfb046e64bc8610b0b07e97288d340196a2d5bc6bcbf01e595a81d9","2db0dd3aaa2ed285950273ce96ae8a450b45423aa9da2d10e194570f1233fa6b","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","4967529644e391115ca5592184d4b63980569adf60ee685f968fd59ab1557188","5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","4d2b0eb911816f66abe4970898f97a2cfc902bcd743cbfa5017fad79f7ef90d8","bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","e53a3c2a9f624d90f24bf4588aacd223e7bec1b9d0d479b68d2f4a9e6011147f","24b8685c62562f5d98615c5a0c1d05f297cf5065f15246edfe99e81ec4c0e011","93507c745e8f29090efb99399c3f77bec07db17acd75634249dc92f961573387","339dc5265ee5ed92e536a93a04c4ebbc2128f45eeec6ed29f379e0085283542c","4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107",{"version":"c75ac0682b74face8d051331544f633445f5d203dc773d579fa109a7cbee9f06","affectsGlobalScope":true},"3d77c73be94570813f8cadd1f05ebc3dc5e2e4fdefe4d340ca20cd018724ee36",{"version":"e8dbde089a4b9d5b2124764ebbcfe577ffcb3a1df5cfb512a504c708ddfc7262","affectsGlobalScope":true},"62f1c00d3d246e0e3cf0224f91e122d560428ec1ccc36bb51d4574a84f1dbad0","53f0960fdcc53d097918adfd8861ffbe0db989c56ffc16c052197bf115da5ed6",{"version":"662163e5327f260b23ca0a1a1ad8a74078aabb587c904fcb5ef518986987eaff","affectsGlobalScope":true},"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb",{"version":"f85c06e750743acf31f0cfd3be284a364d469761649e29547d0dd6be48875150","affectsGlobalScope":true},"b0c0d1d13be149f790a75b381b413490f98558649428bb916fd2d71a3f47a134","3c884d9d9ec454bdf0d5a0b8465bf8297d2caa4d853851d92cc417ac6f30b969","0364f8bb461d6e84252412d4e5590feda4eb582f77d47f7a024a7a9ff105dfdc","5433f7f77cd1fd53f45bd82445a4e437b2f6a72a32070e907530a4fea56c30c8","d0ca5d7df114035258a9d01165be309371fcccf0cccd9d57b1453204686d1ed0",{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true},{"version":"9a30b7fefd7f8abbca4828d481c61c18e40fe5ff107e113b1c1fcd2c8dcf2743","affectsGlobalScope":true},"173b6275a81ebdb283b180654890f46516c21199734fed01a773b1c168b8c45c","304f66274aa8119e8d65a49b1cff84cbf803def6afe1b2cc987386e9a9890e22","1b9adafe8a7fefaeaf9099a0e06f602903f6268438147b843a33a5233ac71745","98273274f2dbb79b0b2009b20f74eca4a7146a3447c912d580cd5d2d94a7ae30","c933f7ba4b201c98b14275fd11a14abb950178afd2074703250fe3654fc10cd2","dccdf1677e531e33f8ac961a68bc537418c9a414797c1ea7e91307501cdc3f5e",{"version":"ea455cc68871b049bcecd9f56d4cf27b852d6dafd5e3b54468ca87cc11604e4d","affectsGlobalScope":true},"8f5814f29dbaf8bacd1764aebdf1c8a6eb86381f6a188ddbac0fcbaab855ce52","a63d03de72adfb91777784015bd3b4125abd2f5ef867fc5a13920b5649e8f52b","d20e003f3d518a7c1f749dbe27c6ab5e3be7b3c905a48361b04a9557de4a6900",{"version":"452e8a437aa57fe832dece2a5d3ea8dd0ab1de03ca778d09798c56ece0a29e80","affectsGlobalScope":true},{"version":"a20f1e119615bf7632729fd89b6c0b5ffdc2df3b512d6304146294528e3ebe19","affectsGlobalScope":true},"575fb200043b11b464db8e42cc64379c5fd322b6d787638e005b5ee98a64486d","6de2f225d942562733e231a695534b30039bdf1875b377bb7255881f0df8ede8","56249fd3ef1f6b90888e606f4ea648c43978ef43a7263aafad64f8d83cd3b8aa","139ad1dc93a503da85b7a0d5f615bddbae61ad796bc68fedd049150db67a1e26","7b166975fdbd3b37afb64707b98bca88e46577bbc6c59871f9383a7df2daacd1","9eece5e586312581ccd106d4853e861aaaa1a39f8e3ea672b8c3847eedd12f6e","81505c54d7cad0009352eaa21bd923ab7cdee7ec3405357a54d9a5da033a2084","269929a24b2816343a178008ac9ae9248304d92a8ba8e233055e0ed6dbe6ef71","93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633",{"version":"73aa178e8fb1449ef3666093d8dca25f96302a80ee45f8ff027df8e4792bf9fd","affectsGlobalScope":true},"2ee1645e0df9d84467cfe1d67b0ad3003c2f387de55874d565094464ee6f2927",{"version":"fdedf82878e4c744bc2a1c1e802ae407d63474da51f14a54babe039018e53d8f","affectsGlobalScope":true},{"version":"9cf780e96b687e4bdfd1907ed26a688c18b89797490a00598fa8b8ab683335dd","affectsGlobalScope":true},"98e00f3613402504bc2a2c9a621800ab48e0a463d1eed062208a4ae98ad8f84c","9ae88ce9f73446c24b2d2452e993b676da1b31fca5ceb7276e7f36279f693ed1","e49d7625faff2a7842e4e7b9b197f972633fca685afcf6b4403400c97d087c36","b82c38abc53922b1b3670c3af6f333c21b735722a8f156e7d357a2da7c53a0a0",{"version":"b423f53647708043299ded4daa68d95c967a2ac30aa1437adc4442129d7d0a6c","affectsGlobalScope":true},{"version":"21fcdcb618236f0feaca7e511e2da10c19970f86e09c934cef2d45b340ad92b5","affectsGlobalScope":true},"4f0fc7b7f54422bd97cfaf558ddb4bca86893839367b746a8f86b60ac7619673","4cdd8b6b51599180a387cc7c1c50f49eca5ce06595d781638fd0216520d98246","d91a7d8b5655c42986f1bdfe2105c4408f472831c8f20cf11a8c3345b6b56c8c",{"version":"8704423bf338bff381ebc951ed819935d0252d90cd6de7dffe5b0a5debb65d07","affectsGlobalScope":true},"b33379077284c9e55d2410d814b71b15522c5f71f9e93e15a8c3c41d463b00f6",{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true},"a42be67ed1ddaec743582f41fc219db96a1b69719fccac6d1464321178d610fc","cb25d3de15c4f5590256242ebd721e0e89bdb9a34d9c40993eba8f7aae6ccb0e","5463c98206a890ea7a759fbcc97b0c042ab1a740b3e24037f7fbf40bae70a3c5","687ec53a7422d8cf80477fffa82a2db211f724039267931642befcd4907aec26","68f02ba57c531227ef5804dd57f2e940b10c544c96dadd3c0ef958ba4b6fdbc1","6d268309f0e15dd820b2df9806234166554cb4e2fe00d11737adcb4e5489f700","58cf96187feb10cc8ad3bb080871cd30888ef63bc5db131f11458850ef8f6245","9102986ff52326a2016e8cddc1cf3092f0808ac916dcc8dc2d2c7195cd181987","fa82b7b22d9df87323e31e9e2ad75911028f3e544647fd212424b3c4452fee3f","01f20dac9dc14f0d306e5d1215c5c1c3b4d1805905e60ae92fabac4031eae7da","9ceec2a882368c0160a8a3879aa0efce0fb985751fc23ff6191006030969cfa4","cad5d6451789234434c28dd2d6a8267b0d64c479b1ad267321faa31ba90d570b","6516fc98fa10b0cb22c7e332bacea4a7ea80257e113f6cdddd924d03bfde218e","1834770fc1d5e5240fe8f3de72205c9e79b1c321224fb4af8bd2529202a6960c","3b1901191af5f232f0a950a914649749c3447c445cae6b896e74fe987b379701","bcc66913f07d898149b4bb118d1b04c4925f0d61dceeecc65ef5bb58b5004d4c","16d2f9cb00807e9b65a3d22a3ed27bad7499679fd0308b086f15c04ad8ecaa89","56558ae167446acf230ea2cc072a835309a37ae63d286b484308afd8c504c2d6","66336b5a5d5e897e932cbf1e306ff8ac8a9929971409a8049c8c8a249cd8b57c","c33b700f5d0797c331e08b29f8440204e19cf035555ea9111321f881f1b4702a",{"version":"099da90b86b34bb993397653e830f9fe888b83e9c41f6de5974e54134c68e949","signature":"c49dcfd6e190f207124ca9841a6549368f828c0e1bf4c1a9722fba3a590de180"},{"version":"f6eab38e877e68526dd0c89d302655a72ceb72fa3d90d064ddcc3df815c3b571","signature":"f94c40334983c43ad5e2bedb23cef7d691c8dd85b9a8a63b5cecc82562a1f5a5"},"1447d46bff9e7c5c77da14515a7456ea5e919ce6e28f5e6746edf99818e4be47","ba3f6f0ee47f46cdce55620aec5726de80e92a930982634afe9918c114c38f0b","6f38045547cdfd54ec19abcd943cace72c775fde739c5e0e1d917cf3030c16b5","929fc31f7523aaa1d19735b77e637af06e58d76007648ec088ecfbec1521cbfe","3d0e04c8ca3f41da5f3d689500d9c4aeb54a1c59764d66d58f0e579b9af720e5","a6eb23f2a83113ce0ab7203bfda2be0888720f8d694a20abaef83b9f62832061","363dca5004ac5a3d9c2bba12812b97a64461911762f0b8f9320a8856ec53bcad","557b8c7481296f4b7ed362320f3bbb40bb87404edf880c81224f365a8d1e17f3","283ed3d075bf7d3e8793f63b2a52f475ed84d95b7b6351c5d5bcc6c49d4b845b","6544dab49004fecb69a4ef775e9ad2773a6148b1f9bfd9b75508e3afa11f5d35","b499490bd2f0d602501eb24d4e91ccb2d7fdfd24acb86889d74d5f16ac15c4ca","e2dd36a524ea5b13de1ed104ede9cea79696588175c1df1940d6a29113a4aee0","a878d4c7237a7af50e96534295fcf723134d70cbb1e9bfd8365266b912aee6ec",{"version":"1df2baf4d7dc858857501ddf86119311749e6720eaa4db07b5412386c35d1894","signature":"ec38c94271a2e8d9ba538254a58778286e0e9b75489110c93b7fed7096440d7e"},"7a6f74294b8fb90f5e3832be21e25898dd81b2a1adc36dda6929813ba4135311","3f1370424c252aed11747282fc619f04497e426f63917bf2182fd46d51adc58a","5d40e6a7071d0d1e6e558e17214ff786ecb3ea73e31b25a88c2cbe2435fa1252","1e75b52eae196e444c69710711ea2cb64838b178db183f7b1281c1b7f6f8ef78",{"version":"4c60fb95e9267cecb93bcfc0cf2f2e901d1ae6b91bcd42f417f4acd5c716ec9d","signature":"430e492ea0928bbde31753c14168731c06b83f6fa444954f4775e48c3ac0957d"},"5bccd6ffc11fed820a432ac819200e6af38f8c3625e6eae0cf0f07ca85856392","4c5adbe8fbc482c38f2eca46983bbd573c052d321f17ee937868699aed7e08a8","a1f708ddf34053065f8f53682123421af299cee37ae110a86ba07851adf940da","130e4655e30a6d7a8004566642e24bf3016b5e5a2e5dcd72c0a61b663f7df711","2e34b7e7c07624978db18b34c8a528928a7c24bc4b047add3e9d90bdc49e267f","ac63a01fcac70315fc9b416e9a57e568b18032c7cfcaa314e1751f03ef71286f",{"version":"338967909350c2968096f089c4b5e86b98f7d2e873e8541128477b023ec910d6","signature":"8f2e9c9b0ec9099a01a58da98d02411cf4985a8450dbf8c7e997a4463ad7e0c4"},"ca027df9fd496a200d99ca0db4b0077463ce4926a6c8e05cfae522c5971ccbc0","e043a9288022e8d802117e5e9e718443296f9c69a5eab7ed89b2fb76128a0140","4729c40012c9b4ae235cdeb76bc9cf5c127e09eb08ecf5b1b51b8d03d58e5555","38aaec0cd25bec1bec8511430fcfc6a7ce53ec44fa7e4e68717c551d0c786ef0","ec6adf14f44d63199b70a1117f13d380dfd0b1e1f0a6357b0ecf04cf0c56ab68",{"version":"f9c231275d06001204a7cfe8a8848e4f2d9d64e7d695a191c5065113314eac09","signature":"e51bfcc2c6b8da0588c7b6c0e850cca21bae617ae64571dff120b1a0f232c881"},{"version":"7a96877e014a0ae21f2bbc3aef4ac18057b25cacd52eeba30fdef1fc2ab697b5","signature":"51eea7b57eb4be4513bbaab93d89af4005ae3f606926fe12255c0278c8b5b573"},"08b634d3e78745ac0b698d371908f2d93e2eb3d4c245ddd203e6e096d900f47e","8bece683252f61492ebb0adff155af7c302426d42d7d8f3c03c0d363e43aec62",{"version":"8bdce56b6ba49ca4104a82d9de9a672d8acf3bea302043588c4ef8aa107ae9d3","signature":"bb6ef3d0741fd0db1163f85bc7ec139e1a98974b6febf9792a148d13a75d15ea"},"63007f1618ada5041fb3b47630b64a9987d268bf740dd72334c38b5d23f5239b","3395f90467d2bb9db039a5c22ed6659ca2ff6f0b4f7ee5f223b0f77288f54ea7","20df2907d398e369d49e8906d6e0f096c465501e9ceff9d61293bf0f4e9020f1","302aa8248dab7c689c103162e542224aa7f3b0db46e29d0fb468fac721cf1c41","2dda4c8b032feaef160074bdc73cffe28516b420ec6cb697732c02ad75cd65f7","5fde0e81ce573a8774e3017c80147470dbb453cdffc861c81f466bc6ce0cb3a6","9686a908777c5aa687eb342e2764237ba8fbf6e878d51a1f258b4cf437862bfe","d8dd09519d9bea7a7c4b658cb20c459bfdf19656b250275b1bf22fa6c3f70679","ebc51770c27d90812d97af081e035c941e7ce706a909c838e759b6d605967f83","4f995212d227171f1d5c1e57a749b8a8383867f4c01b6492cceb0da9fc784c98","d84174912accc090e9b061b36101f8401add7f486ee532f45d298fb8e550dcb8","f0e9c96fe0af329a25c943d4a19fc3f6d2430914f49a83d1666cbaace3e41a7a","fe56be56cbb42589717961f30320ec0fef09d558354968d74cb0e2be11405816",{"version":"fac210d20dbd20e504aa0ca852054fde66f897428360e35412c2e028c107e1a6","signature":"9a26f753c03e472022e95044a061ec8217fb987a485e944411fc6d2e6b1c82f6"},"af89ab13b40dd28cd91818fc6329914d2b9663591831f032ff0f0cb4a028d4a5","03c98c0f1ac51d8ccfac7e265cbd9f53b236a332b27adcb9a0f7be9583dabb58","da98d8109f379be48d459a6821ebd7cc728af62557e1c44f864e04360686af93","ef6e6d838cc600162626a53167046484f38e9a4bab9454e72350bed76c497228","26c9f388d17515a3d01b831708765c1cfd9a5b9e209c05c17c527087e6b4b41f","c8b50ecedc9ff1b0e83c96f0a334d022874199f7c2d00d182ca6672176b0ea9d","b66ede73039e8751e06e3cab843e5a4265c1124a3285c3d854092c37a966b1f5",{"version":"0b1e17c83f0fde0c2f18777289aba48607b428b8b2c798bf912585488b9ae401","signature":"e0478d3cb71e13f8c334e887830bb1aeb8807cc8db5526ec9a23a34ba2713f6b"},"28a9532c090eea9406b31cb032f44a069f4e396a4b5ca3cf5905b0ff81692073",{"version":"8694862a82d98a2bfa6912106ca19def02d93388f78cf7e67d621db3daa46557","signature":"5bc7a0ad1c2b6a2cf5e5d86b3e04d6940c7f54290e1a7e8dcaf1fe06e9050df5"},{"version":"20af8f1ec1a798edc3f3ab0b72f6415a9f92e2a3201b5d7861811bf0a4668d86","signature":"e9f9ca38fabec6226a3f97ce38a661d44245dc9f74520ee1ed5991dd48703287"},{"version":"734aea65dc882b4c37a7411470fb737e332fff135c8f1f4156d3a0abd351b75f","signature":"adffecbeba36a1bcd9f2c066e14d22745c30bb430b85d57810bc9a564d815232"},{"version":"009a5adf1e0b84f92f3f5d90ca943526f46b8450c16fd6d6d9aa8d4ccfd25df4","signature":"2f71276e20365aa359ba384d6a679322dc4a2b08ea8370db44973df948f2f5de"},{"version":"d20821a0134841f8483a9d8305a26602882d125f00e0f8aa672d7c4520d9e7ff","signature":"75d0ef313166a932e2d98ff3b562e6a624bc91cfbec6236e204fe30283eeab3c"},"028e2ac188f5c820ff68ec61ab50418bf4386bc96d1ce4a657795f6581b49123","27679e96d1bd38c5938178aaf4abe8627493090b63d6bae2ce8436e6a87ebe4d","136f00f14878a614113b221f2797dd7f5a7fb2220f95cbbbc390a85675f991c0","b04de4c5a5e9e0cc6b6b3d99b0e046705d9226fc384cb89c73014b2be4a84417","af4eea486904e256eb4e3a79c21355b9b065298952e9f2a0a921e8d75168f4a7","1841e57d29c33dd1798d82ceca05b7a95430b7976f14dabd4bcf81f6d114f235","ae2a310ab4b32eaffee7b6cbc95aa74d00c319429b6e092bcebec94f465d73b4","406ad29837d74e2ec97cdd8bba6295b6c984c1793d287c77fd1bb9ac9ff105cc","749effab6d7e72df8d126868c82b8166cdde84d48453e44f65cbad42ad900b06","11705a4aad6e2e724b82ffee6c4fa271d798f0fb68806ace4b1c425c266f8d98",{"version":"eec7c29e2e3e04dd728199f7fd061e5c37dfd5c3b086ff25b59b54c83525e102","signature":"b81972aff48d9f08543cb19cc5d73f50eb9901d25daecabc46a53866f99d27b2"},{"version":"480045afd06496d7cd964f82fb6afa812a4309ef3bce5453ba03082df70f266c","signature":"933453376097bcf7fe619779777af0dea0b12f9a9c34172a467691f7e79f6422"},"1a46a23eb6dc1f23e57b3db445bd8ba08116a9815e8b8c52f1d88421fd0a5141","72322a0b1586d3de59d3c5edc9eacf34480d1bb20d6de633fb63044de9682401","91764b36fe5e1c5d688f5f90eeea47703a059ab9a81bf80f7bbc9b04507b7bd3","115327b8e1f68c03004d841b83e332ed16b8f48af59ac00f38313887d7ec2920",{"version":"0b261fe72838b8df75975c3bded7d40ee25dad58fa2f543d7a0153cb32309706","signature":"dc6e9c138234a80b9e431deef17b0c1b1a14b2f9c85082e3880084e8176f7557"},"18e2ed308bb90cde2d3d2b4ed6de12abe41b6f73e321616176b7f258de3c2774","60cbc38a9b402c14c388a7254781752b279017b3adeb94b840dcbf4872a6a410","3d2ec84143e6462a786b5d9ecf06f4f6f67a59a1f16c5a3a5e41721ba8478b7f","96b8f393e636547f0477e387138cd7ca9a7c556343b89f446cfc5672dee5e643",{"version":"f40c9b4ee5c8c9784e7116e8e823311e818941b2b5a7d860edb639681e6cf72f","signature":"b5fbd4a31ff69fd6f558b66aa2fecb3093b118cbee31592e0979ca5fe97ebac9"},{"version":"70ed6bcd17eb98bbcc647b06cd722fbaa86bf0adcba43e532b02df5e81840a2e","signature":"067a68cacae7e0359a4f6bba8b0495d85bc1c648fcc9b8af4bc61f9d836b7fa0"},"f30cfcfff28ee8f87563225b47239bb07b9b11edd09dda0ea6499b18cca1a30e","0edb8a97ead1fefd337458449050857e80740e31a3f76cffa656262f4e651a50","6d2d14bb016a70a5ee1afb1cc7718d4369fb645979c725454c688f791ac7218f","8d7622e53b676dfd20828ba435649c217a5d9dee9cdc3713ee808fa2140513da",{"version":"4e39ded14e613e1b17ffdc8718cbd504fe45825f68a8494c62b4e3ae1da578f3","signature":"8bb62050217120ecacda1fa01a1d852d0294e686b526957704cf564c59d17bd3"},"ab56400db2546e60bd37b8755fdca82c6783a6332195c054b9d6f57025607e1b",{"version":"37bd32aef914e528f8c97491888066abb53175bd2f70bfd756b06bd543c071c2","signature":"7bc1fe93d0a92cf3b4f12529beae9f33d0dcacfbd55e5bdbc5046008aaec17f3"},{"version":"f033cb0162c87b26c74cf59527b7c74833f6137e309a803ba7d2695fac53b0b1","signature":"60d07342c651b05f549231ab82b9d23882f648b76fb390a2024db84837bbba62"},{"version":"17eae2f699cd1e742bf32210633e8f8f2b9fd850f616bc1bf2eaf95fb494ab75","signature":"845ef94c653b73d2aa042b65e393bbc14cbb39e7e18684164868822e73866854"},{"version":"cd861d403ee4e050f97fca8e482e80b9e25107398694b892c3b430f34b69cf93","signature":"f89c83616068830d65c10b34702607f88483c6411095ad487b20889dbf844c81"},{"version":"c2b0f6ac58633a9e8aaf4cbe4ebf1eef550b53d66a4b323ba318354b1b128a62","signature":"e2741151a3939a46f3574932490264032bdaded9929ec3176b51e960e9978d0c"},{"version":"df349454568493201364198456baaea82126c58a15a447481a2031522dc665b5","signature":"66f5b9f42edc76609ed0cf73cac4d494668dc601fe13057cc4c581736ae07bf4"},{"version":"c8a7b6d260f76729ad4ab27a7ecb59673fc8bc119ffc7c00e7713becb7cd45b7","signature":"18d3d19d969bd329f3012140349f8c490f7f03dc24e0cb9ef222ac35830259df"},{"version":"e87b9669e7d161c88a2f7f4a04c3053b2e20b893a6088f76cd08048bb1387a25","signature":"992222e24f7f2239fc9a27a0a7d5855314d7ee033763572e93570863b0d8e619"},{"version":"54024ceca6aa07030c7c09c2cfd5b74c908a017010ecc9c0aa46059de30402a5","signature":"3836fa88e83d71ab0c6aa0ec4fd1a0184d2e7bff62bf2169fbbfd674b1ad1576"},{"version":"7b72468f065d3cce568214385dbc5b8897786b2cf3d5b016f2a48a9d502f8d16","signature":"4a51f2b59cd58a3d8e8ce469cad7a868c646ad161fddca59fd2e4116f98b3e4b"},{"version":"c2632c8978aa3f58e02dd1149a1f39aeb3639c0d565d1aa020df01347f484e44","signature":"b5fbd4a31ff69fd6f558b66aa2fecb3093b118cbee31592e0979ca5fe97ebac9"},{"version":"6a9eb9c5d3f7474937973fe4b0a9e53025634c2e39118eda436d89f3e9df976f","affectsGlobalScope":true},{"version":"86e56d97b13ef0a58bc9c59aee782ae7d47d63802b5b32129ec5e5d62c20dbfa","affectsGlobalScope":true},{"version":"c1f79c6d85cd84518fd7349588b3c61bdc189f58e3866f925cbf4631c81e31f9","affectsGlobalScope":true},{"version":"54db406753da16e177f094aa66da79840f447de6d87ddd1543a80c9418c52545","affectsGlobalScope":true},{"version":"42f28f4cfca4a70bd89c1d55d76c7978275030b894f6793f36890265c11a83a4","affectsGlobalScope":true},{"version":"7cf1027da9599f056355b46bbea31dbf7f715f797dffb9cbb3402d4490c503e5","affectsGlobalScope":true},"96dbd0787b57ae02981d26d5f2441f0f8444fb46d7578c56527eab89cff13a7d","27573b15894c6311146838fa3b45786bacc013a4bca6c84adc1b11a4e7c8a4c0","1f63ac6272e4d2d43cb25552b4ed8a89ffc86244ea655f685e8e3685433c7b23","064056137306dc32a88c020d9458913482f96076bccdbc404eae7c085058ce42","094be99dc9410d3cb517ba523ae031864c5e258a3904ed8058773672768c2c6c","fafe1e5b2114bc57a6da341cad2bb44298543caa3fd7680e6bb0f29215048aa2","841f7ca2af7f4d9cca1f9fa2288a4849fc9d49ca15b47336892efd06a14dd1d8","4f5ce1915e34f5b360495c87e410b72cdf1e9c2c92b805f6f63ba93eb162e08f","3439a0999ac6ad470f814394edb401d2a8b932234b4cafe304a53ab25c5a6619","5ad6d882be6f8e602795bc0bd0fac7806b16ba7715be494fe0279e2c5e3e23c0","596ab45ef67fa8dae4996a2a61dc5055ae2b3dc5102cf3b43ee7965a7088943b","a3f9f52ce73700565c8d9ba2aa75823ab8fc8e7258a27ecb828cd4257b8f918d","5f4884638ab10b753ec0c7406916fc746bb99cc0044b9a4a67b2006b7e57e8af","e9783ee473a21d5e8b12ca7dd1f22f0a657e5cb0bb9cd0186da5efa90d4a7cbd","5e2fec9c89491e38ba2c78e6b4383540bc60dc24def61aa325cb726b497ebd85","8b1b666fe96fd9e713f1279a3e446f16ee824f46ca0c2c075e4e89f0b1258e6c","6aecbb60c2216da24acb86490f7c6270a820fd85424c8a509e3d284aa47f7a56","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","3725da27619321470183eb7dd61190b139e5bcc4cf9366d6d828906a76e31742","7d2a0ba1297be385a89b5515b88cd31b4a1eeef5236f710166dc1b36b1741e1b","8e87660f5170c195ade218937e360484775be6a4e75a098665d9ba5a2e4cdc15","8d16e3ff29dd0650435766702b01c2f7e9d1f289a48fcbf8e93687d6ecf33f26",{"version":"7a0a27a1628a893278b168f5f7adc0bdce58c35f9b48601626d77d005d4045d4","signature":"15f8790f42c77b1bab1c736f1f75a04cf8eb55e0b323ecfbf742792f6939add6"},{"version":"a4523fba2cc649715c966b4b7b28ac04c658bb797b1e714d8bdd45a693e1dc79","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"5ccc3c7f73ef48c223635cd4506f21133560de7abc4c09c623327bb1b54386dc","3ce6e8574f6052b14dabacbf4fbf202def94373909428cd482aa42a674733325","05da30afdd3f7df77f5c0b06a6d009c78d9b1e97a10c8dc100ceb8473f1ba80e",{"version":"97d707a3e9fde236d62d672699125afb6ebde5e04c7bb051479362a114e6df8a","signature":"1bbcfb5906e550c7608b4249d30e5988c651f971f303db3c8a00dae8be8329dc"},{"version":"d7e94ecadbf5e05bb5130e4cf2d37fea7caeed84986d4879ee80a33358dec949","signature":"46a868101e9205f5e86f3e49a091e7410b5681e359bf5ed0cc633242753c56b5"},{"version":"2c9e4ca2648930aacf70ee1cd7ccba4c5a3526c2bfda6567a02674390988cb30","signature":"a4edb68d05d9e9c5681530ede9cf7e4d1bfb32466fdd030481b5ca50396beae4"},{"version":"dedcd11570891423acfe65edab7de4dcfb9d52c47cee4087a014a6dcd8650f2b","signature":"79c99dbdd5858db08083bd7a0454f581fe8bb97efb7c2f7efc482a80c28692a3"},{"version":"70e448b1b09c50a8d9e60998cb04cc490e3dd8f22a0007f3288608f74dae8f36","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"1f39b83e9ccc4ed9439adc30500a24a5ae480ed2ec3124f4664e473d868f4f0b","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"d5e5cc8638a383690c2916be246d31e0c6c3ffd5dd59b55f236bbf56bdcbd5c0","7c59943d77166c1aecd731af8683a7b5a0984e1bc0427fa35be504d77c41fdcd","d357e56d630bcd0f63cfc678e306702555b4f791c2d8e07f037de39171be4cd3","c7ab5bd8603f3d24c94a95b780fb3bac66e45212fb304495f205b53dc2a9808b","a93ae01c9ed49ba423599144ffa3cd520db83e53b32471865905a65113bb3e59","6088973936033e869d3616b63d25c15363862b491f46af77d40a5215ee8cc1a8","9a4b7c467be504c4500cf6e54b0a3b8afdfbe0ed2c1da640202f44a7cef721b2","5cf9f5e95313f8ad7c507e9f109ab749f8033cbf0be469d19975b501489ee4f5","b1129d7c114eba7c7b155dc809d6371ef86a0738f7ca93b3efef9b796d6168d9",{"version":"ee156a813cda6fca1936ad02339642d668f0f941eb82f4f3e744713c784fa26f","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"4992e90e1ccc4f69f46e40f067d90b4a1d943ca9eb8e2054661bab13b7496ecb","458111fc89d11d2151277c822dfdc1a28fa5b6b2493cf942e37d4cd0a6ee5f22","da2b6356b84a40111aaecb18304ea4e4fcb43d70efb1c13ca7d7a906445ee0d3","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","aa2c18a1b5a086bbcaae10a4efba409cc95ba7287d8cf8f2591b53704fea3dea","6f294731b495c65ecf46a5694f0082954b961cf05463bea823f8014098eaffa0","0aaef8cded245bf5036a7a40b65622dd6c4da71f7a35343112edbe112b348a1e","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","bdf0ed7d9ebae6175a5d1b4ec4065d07f8099379370a804b1faff05004dc387d","7c14ccd2eaa82619fffc1bfa877eb68a012e9fb723d07ee98db451fadb618906","5256ff2882306972c3eeae034d8e553a60d930f3e44d22189c54248232258438","df996e25faa505f85aeb294d15ebe61b399cf1d1e49959cdfaf2cc0815c203f9","4f6a12044ee6f458db11964153830abbc499e73d065c51c329ec97407f4b13dd","dae5c8e0ca15779492744cb4071c5b3c94c2121940fbaefb43ca9a045557a0c9",{"version":"835a0aff3ec2599c399d11d786d886012a00a287030d345696c4e02fdcd8d1ef","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"13e834b958fe7e9010d2161497f98916974a0618be7a773281a253a948da8b0d",{"version":"89360f743f9ce1368c823f508da663c5728275395072ded9e2e82c6692844acc","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e190e6a368c488a990f6144086b5bd1e5daaba0d48627573c027ffaa134f9008","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"4702eba441539371f6c117a57708621605e563dc59d28bb6fc5330374f638359","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"067c8c968b4c5f9807e77c62254e4e8996411593ac8d174d28af5ab425dedd08","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"77cfee87a0cc466097f405ad8f58d30ea0d5e57e320b52f3e8dc7cbc0af461ad","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"f3f04d04e25a346d5f73ce82455f162e67c7e115fb778c1e5f2ef08b63f1ddac","52328c3007eeaafb49547f3f173ac32ef1fe5056ed7bdec6b2161a39eeb447f8","71467c8ff9c557e4153c9fbb460664b3d31bad8ed9af4f51e034a39d5c801c12","60fd28020637ded5268c9d13cbade5784a1d030b7d067e05c1d942741ec166f0","2898eca3529b853a43efa6c497e68c4f66626d5d5fc2e66f4394b6a47116a769","5618b093069f986ca24f79d68935c904cbf0bd1b80ce2c897eef229a3437d9b1","439a98cdf44295aca4c9040616891b15497bf58a56158463fc066e46c52763f1","f82f810c7475bc3a268f1acd24ac055471a3855a33499fe010d5f93af6bdea69","bac89909f734baf6e352bb1c2f81a1b39701eb1adac53e3a233547ca30ffa855","8de261cd51779db0fe6c4f7955e42c2a48523b7d08c8421c96bc5db557ddb5cb","252347fca40a26314a5aa82d0e0b59616732f4a8ae367f2dae02b5bb27bcc20d","da0e97090a6bbd464050e531c722b0a2fef50fcffb62d87f033ac6e49875eaf9","32211ed0a6d30bce26a8b87a6c21be35b41e4fa103d2627213a282ef758e6852","507bc718651d168196aad54efc3393940f6fe32c2b0a171f3852d2cbd5a92851",{"version":"d82d549c58acf200c4c61d163a177e49dfe2723daadbe67c0f295d1dd2ee6e29","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"381cf183ed6d6e277a455352d37dcc237c29bd031514029f08336c959de8f2f1","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e5538d147f0005ed44390f1fc43e190a30bf4b950c3727adc639e20b1a2ed31a","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"70940378d50eb59249b8bc2fbeeb0402dbcd3e6b63cda40e81c48af7973aa474","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"adb5ad16c19ff8dbfa9daa3a7dc8e1b039c381a2b94383144a53368681ad8ca0",{"version":"1934d739cda7abd89b0c29c7c41270b1d68d7a83abe0b6b6d3a02f244219a239","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"7783c20210ca970f8d127d92a1c27f05e3982268445188ab5861e2d0ee2d23f3",{"version":"986fbbff523a7d0f53681f49d9bfcdde3ec2a07bff36a59d3f865c89b74a80ef","signature":"e1690bdd336f07b63205a91e3a42e442de6abbe8d5042dbab5ebf4348c457c2f"},"6b1d838981b5606f4c958d98800e318314e71f0dd1d087196350d189362b69c9","eecab4c87fadc3a8c5fa35f659a4f5c480208ab80f0f36d9761c2bb427908fcb","2c2b75ab03381c9467181a87ceb2a2a121502f409292d5332b8765c424400d68","73465f19e61e23f551639909f94147b4211e1331d3699bce6fcc972203423b20","929746f886d166cee5d20d109e816f527c709a00cc90c8fd7c52c66e72e31805","9ffa740c1a384e68eca1c3e530ee6911ed42fbc0010570d2effb375eaaa4dceb","6f2cc41dae1386fc57a4980d3aba6115e879479821ea78a2d4e3a3c2fd5cb786","bd236ec30223eaced7fed2c84ffc5933ad23061314c4b9874d4d7c88f2d841f4","97adcdc3cd8c7fbcaf7e1f60a4ea05972da21b0e0b1ef71ab96c20c9c65ffe88","3dcf393cb7c87561367ae539f1462b15b48af0bac86cb6892bbf6c617e9e1872","86413ef25968db827f5d8ca68a3ae8a7fd91f8cbe4f654053ff32454b3f6e2e8","3ef8337f4df30d8d6978651ae95632bb7dd229ac4dfa7006c2aa4e2006ea6453","09e0d46e3d2fcc6c5d7a2afbd1a22809dafd50f1f3f8b1d2e327ed21c7c6fa5f","ac5b06a39925ae9c5344c84e2e24d7b61c22b4176fcbb96de5f8e45986f2331e","d829826b1dc3a0d84174e03b009afe4677e36a84904863f6318b7243c3644b44","c61e4cede8cf73fb4dbff3cad8fd57902eab1ebc62f20d9aeb105c3257f5a906","ebdf90aea74d99b9fc1a639433c3458604b5db3571b7954b8317dd1a1fa71bdd","9c1de355ef73132bba24da0e616cb67867e4b7f85689bd95b9638395cbb81a6d","46c4ec0878833d2ae63e24e2389a8145babdcab72297e18581af97d7e62c0511","df92b0948e17e54e60e2b7bbc525d06b35d404a1a3c1ea48e4071262002f7d3d","7c9e187838a0e665cac719dc03b215dfc29da9caa30af79a78531e7256a1d6d2","1eb292fabe901c9fa80732c87cf7b42b5f790f5af48bc36d8371272fa80427f2","c34decddf18283ad1811981c06a07208aaef29010c55a7b810ba5c96e3d89a6b","694adea51eea8d8981ce771b52c5e5a2d524886e6397fc9431424325ecf42eb1","15036d0d6ec1d21354542a670696edea4a344baeed6718cb553aa8fe619e8069","3c6ce563b69aa0a196f2373c5ee96472ca1aeb232a9611981bdff9b3bc48e02a","45a6de331708ab2a4f98fbb5d68d0a91b887802d277b37573a26ecb0036f1e7e","8743f6147ba8d5e9cff0076f0a016d183df75a0796c25e096ee3fa19d06acfc5","812651dab7b19c7fe9cfea34fdb7a059093aff0c1cfa5dbfe979b57e7d7627ab","e329923a93fce350f89d04facf9053fa20b789cae18fe3340527ccd9a61275ed","a008ee16379994ecad644e0e543bcd0ec790fc51e9ee2632008f241872cbcfce","3cf28c9c5653662986136d2ffb17e5e1ea6d933aaee20ec64de184b19284ffda","3d25e4112b03e9a3549ab85ff56e3f2d7264f74dcf5308549c81609c31ab2aa3","d9a256f69f3956993e65efd88336644be8f8dd36d149e859c14704ef6c6c0eec",{"version":"c2313accf19066c7654337fbe1af5fe3aac04fb758bc2bccc7032673a98e4d82","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"61af7663fdb7204fabeb78d2a4d8fc6b9e81e27cf1a7c0f4ba832840b9ad16e4","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"3dce43a76889f034c76cee8f279b8d2c993da51ea46be381222a1551e70fe7e5","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"417e2fe76b0ccec888fee80601f940acf80c7400a0ef3df9a1c42477fef12990","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"f9539387a4ab387aa855672d9ede95a504b095cfb229bf1aedc5a31975de8b5e","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"7370eca2e662defc5780f550e2901329760c8a58d6337acb30528b9fe8a40b51","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"c475e8800d3cd85d2b1979b9edb26052c2a1c091d6edd6dbf55abe259142602a","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e9edc1f2cde7bf056178459d6504be53661aa3b687d8df3db9ad9b83d8a4b66d","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"2a95151c1bd3abf006c32aba3bcc6cc6e8c75c723f576f532171bfc5e39739c5","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"dbcca5c47b33964e32f43de6e9894d126cb9862b1a903e8c06bfb2296ff51e04","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"42baf4ca38c38deaf411ea73f37bc39ff56c6e5c761a968b64ac1b25c92b5cd8","d7dbe0ad36bdca8a6ecf143422a48e72cc8927bab7b23a1a2485c2f78a7022c6","8718fa41d7cf4aa91de4e8f164c90f88e0bf343aa92a1b9b725a9c675c64e16b","f992cd6cc0bcbaa4e6c810468c90f2d8595f8c6c3cf050c806397d3de8585562","68cc8d6fcc2f270d7108f02f3ebc59480a54615be3e09a47e14527f349e9d53e","3eb11dbf3489064a47a2e1cf9d261b1f100ef0b3b50ffca6c44dd99d6dd81ac1","bc222163edcb8df6ba9b506d053d6c5afcae50e85695151cf4636a3107deaba9","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","fec943fdb3275eb6e006b35e04a8e2e99e9adf3f4b969ddf15315ac7575a93e4","742f21debb3937c3839a63245648238555bdab1ea095d43fd10c88a64029bf76","7cfdf3b9a5ba934a058bfc9390c074104dc7223b7e3c16fd5335206d789bc3d3","0944f27ebff4b20646b71e7e3faaaae50a6debd40bc63e225de1320dd15c5795","5d30565583300c9256072a013ac0318cc603ff769b4c5cafc222394ea93963e1","8a7219b41d3c1c93f3f3b779146f313efade2404eeece88dcd366df7e2364977","a109c4289d59d9019cfe1eeab506fe57817ee549499b02a83a7e9d3bdf662d63","89121c1bf2990f5219bfd802a3e7fc557de447c62058d6af68d6b6348d64499a","d4a22007b481fe2a2e6bfd3a42c00cd62d41edb36d30fc4697df2692e9891fc8","8841e2aa774b89bd23302dede20663306dc1b9902431ac64b24be8b8d0e3f649","fbca5ffaebf282ec3cdac47b0d1d4a138a8b0bb32105251a38acb235087d3318",{"version":"c67a7b7eec0175ea53343429d32897fcad406c663ba4b775eab8be8164bff91c","affectsGlobalScope":true},"62a8effc4dd17bbc2c05927b4ca5f67e73fdb458e203b128c041d0d70ffa6b55","cb482592bfcbdfcefa8d155590399e8bff66277e60e17bfada7c2f31322e7b87","d3213ac97e906cb1a935cf80061aacdb05a943a4d0316b469ab44565c34147f2","8b5402ae709d042c3530ed3506c135a967159f42aed3221267e70c5b7240b577","22293bd6fa12747929f8dfca3ec1684a3fe08638aa18023dd286ab337e88a592","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","7d8ddf0f021c53099e34ee831a06c394d50371816caa98684812f089b4c6b3d4","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","4006c872e38a2c4e09c593bc0cdd32b7b4f5c4843910bea0def631c483fff6c5","ab6aa3a65d473871ee093e3b7b71ed0f9c69e07d1d4295f45c9efd91a771241d","41392155643024553ab15aa2074c7ed144958cbfe941aefcdfad119492985885","9a2eaab4e54953c6b2ba21f7ac4c2593859da03917011c10a2acd8864e38e7b2","5aac5efd20619b522faeeb0badf250834850c605ad8c5fb91c6502a54057f413","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","74d5a87c3616cd5d8691059d531504403aa857e09cbaecb1c64dfb9ace0db185"],"root":[65,66,218,219,233,238,245,251,252,255,269,277,[279,283],294,295,300,305,306,311,[313,323],352,353,[357,362],372,387,[389,393],[408,411],413,415,[450,459]],"options":{"allowJs":true,"checkJs":true,"composite":true,"declaration":true,"declarationMap":true,"emitDeclarationOnly":false,"esModuleInterop":true,"module":7,"noEmitOnError":true,"outDir":"./","removeComments":false,"skipLibCheck":true,"sourceMap":true,"strict":true,"stripInternal":true,"target":9},"fileIdsList":[[78,79],[78],[76,77,80],[84],[75,80,82,83],[80,82,84],[81,84],[160,163,190,198,460,461,462],[324],[464],[198],[467],[468],[160,198],[473],[385],[373,375,376,377,378,379,380,381,382,383,384,385],[373,374,376,377,378,379,380,381,382,383,384,385],[374,375,376,377,378,379,380,381,382,383,384,385],[373,374,375,377,378,379,380,381,382,383,384,385],[373,374,375,376,378,379,380,381,382,383,384,385],[373,374,375,376,377,379,380,381,382,383,384,385],[373,374,375,376,377,378,380,381,382,383,384,385],[373,374,375,376,377,378,379,381,382,383,384,385],[373,374,375,376,377,378,379,380,382,383,384,385],[373,374,375,376,377,378,379,380,381,383,384,385],[373,374,375,376,377,378,379,380,381,382,384,385],[373,374,375,376,377,378,379,380,381,382,383,385],[373,374,375,376,377,378,379,380,381,382,383,384],[474,476],[477],[479],[475],[154,160,198,466],[106],[147],[148,153,182],[149,154,160,161,168,179,190],[149,150,160,168],[151,191],[152,153,161,169],[153,179,187],[154,156,160,168],[147,155],[156,157],[160],[158,160],[147,160],[160,161,162,179,190],[160,161,162,175,179,182],[145,195],[156,160,163,168,179,190],[160,161,163,164,168,179,187,190],[163,165,179,187,190],[106,107,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],[160,166],[167,190,195],[156,160,168,179],[169],[170],[147,171],[106,107,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],[173],[174],[160,175,176],[175,177,191,193],[148,160,179,180,181,182],[148,179,181],[179,180],[182],[183],[106,179],[160,185,186],[185,186],[153,168,179,187],[188],[168,189],[148,163,174,190],[153,191],[179,192],[167,193],[194],[148,153,160,162,171,179,190,193,195],[179,196],[163,179,198],[490,529],[490,514,529],[529],[490],[490,515,529],[490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528],[515,529],[349],[160,163,165,179,187,190,196,198],[536],[160,179,198],[397,398,399,400,401,402],[397,398,399],[397,399],[160,394,397,398,399,400,401],[397,402],[324,325,326,327,328,329],[403],[324,325],[292,293],[293,345,346,364,365,366,367,368,369],[292,293,345,370],[241,292,293,345],[292,293,345],[292,293,365],[293,370],[293,370,406],[241,292],[232],[291],[72,85],[72,85,248],[72,85,308,310],[72,85,310],[72,307,309],[85],[72,85,249],[396],[395],[403,404,405],[67],[229],[221,222,228,229],[70,71],[70],[68],[220],[69],[69,224],[225],[71,223,224,225,226,227],[67,68,69,70,220],[67,68,69],[298],[285,286,287,288],[286],[286,287],[347],[210],[203],[72,203],[203,204,205,206,207,208,209],[72,210],[350],[72],[231],[216,231,253],[228,230],[117,121,190],[117,179,190],[112],[114,117,187,190],[168,187],[112,198],[114,117,168,190],[109,110,113,116,148,160,179,190],[117,124],[109,115],[117,138,139],[113,117,148,182,190,198],[148,198],[138,148,198],[111,112,198],[117],[111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144],[117,132],[117,124,125],[115,117,125,126],[116],[109,112,117],[117,121,125,126],[121],[115,117,120,190],[109,114,117,124],[148,179],[112,117,138,148,195,198],[237,301,302,303],[234],[200,228,234,235,236],[84,200,350],[200],[84,200,276],[72,85,200,276],[332,333,334,335,338,339,340,341,342],[72,84,85,200],[102,200,337],[200,276],[79,84,200,263],[270,271,272,273,274,275],[72,200],[79,84,200],[72,74,85,86,200],[74,84,86],[72,74,84,85,200],[71,87,200],[73,74,79,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,199],[69,71,72],[86],[87,89],[69,71,73],[74,84],[74,87,200],[73,74,84],[72,73,74,86,89,102],[72,73],[72,85,86,200],[74,86],[79,84,86,89,96,200],[418,419,422,433,434,435,436,442,443,444,445,446,447],[169,179,416,418,419,421,428,434],[420],[420,428,435],[435],[433,435,436,442],[435,436,442],[433,435,436],[433],[420,433,435,436,442],[433,435],[418,421,424,426,435],[421,425,427,429,435],[419,421,435],[423,429,435],[421,425,427,428,435],[169,416,422,429,430,431,432,435],[418,435],[416,418,424,435],[418,423,435],[179,182,416,417],[179,427,435],[423,435,439],[179,426,427,435],[149,169,179,419,433,435,437,438,439,440,441],[179,182,416],[417,418,424,435],[421,433,435],[65,66,200,212,213,214,215,216,218,219,233,238,245,252,269,281,282,321],[65,71,84,200,213,214,215,218,219,251,252,263,269,280,281,282,294,321],[71,79,200,212,218,245,247,276,293,294,320],[65,71,200,201,202,233,238,245,252,280,281,282,283,294,295,300,306,318,319,321],[72,210,217],[84,200,218,224,239],[200,212,218,219,247,250,251,321],[200,245,253,254],[66,200,212,218,219,232,237,238,239,245,252,255,269,280,281,321],[65,200,228,232,239,241,284,289,290,293],[65,200,202,215,246,280,282,296,297,299],[79,200,212,321],[65,200,202,232,245,246,263,264,265,269,276,277,280,321],[66,200,219,245,246,253,254,263,268,269,276,321],[200,321],[66,200,232,321],[200,212,216,232,237,321],[200,218,245,250,263,276,278,279],[200,213,232,253,255,280],[65,200,224,239,242,253,280,282,296,304,305],[71,84,200,218,224,239,294,318],[84,200,218,276,282,312,318,321],[71,84,200,218,282,294,318,321],[65,200,212,218,237,245,282,293,318],[200,218,318],[200,212,218,238,245,293,318,321],[200,215,218,276,280,282,294,310,311,313,314,315,316,317,321],[65,84,200,212,224,232,239,240,241,242,243,244],[84,330,331,352],[414],[170,190,200,232,237,239,245,276,280,306,330,336,351,448,449],[65,71,200,201,212,213,215,216,219,224,239,244,245,320,321,330,331,350,352,354,355,356,357,358,359,360],[84,232,243,244,245,330,357],[71,84,200,202,213,218,245,250,276,293,321,330,336,351,354,357,360,363,370,371],[161,170,200,212,218,224,239,330,386],[84,212,218,237,239,244,251,330,388],[201,244,320,330,352,356],[72,84,85,200,202,218,244,310,320,330,343,352,354],[239,245,255,330],[200,322,330,357],[169,170,294,336,346,357,358,407],[71,200,242,244,294,330,331,336,346,357],[200,202,219,237,239,280,282,300,330,336,351],[200,201,202,218,219,244,245,269,276,280,281,321,330,331,336,351,354,357,360],[233,244,321,330],[200,212,237,238,243,244,321,330,415],[65,72,200,201,215,218,237,239,245,263,276,280,299,330,336,343,344,350,351,354,357,360,370,388,412],[84,200,218,228,244,294,311,318,330,336,357,358,370],[84,200,218,224,239,245,276,282,313,318,330,336,350,351,357],[84,200,218,224,239,244,245,282,294,314,330,336,344,350,357,358,370],[200,212,218,237,244,245,282,293,315,330,336,344,350,357,370],[200,218,244,316,318,330,336,357],[200,212,218,244,245,293,317,321,330,331,336,357,370],[72,85,200,202,213,215,218,244,245,276,280,282,293,294,310,318,321,330,336,343,344,350,351,354,357,370],[200,237,239],[71,222,242,304],[213,245,253,254,354,357],[65,84,200,237,239,276,320,321,331,336,343,344,346,348,351],[256,257,258,259,260,261,262],[200,258],[200,256],[200,257],[69,71,200],[84,200,293],[72,211],[72,85,200,336],[200,246],[200,267,268],[200,266,267],[200,266,268],[202],[200,212,252,281,282,321],[71,84,200,252,280,281,282,294,321],[71,79,200,212,218,245,247,276,293,294],[71,200,252,280,282,294,321],[200,218],[200,218,247,321],[200,252,280,281,321],[200,228,293],[200,202,280,282],[200,202,269,276,280,321],[200,263,269,276,321],[321],[212,321],[200,276,278,279],[200,280,282],[200,218,294,318],[200,218,276,282,318,321],[84,200,218,282,294,318,321],[200,212,218,282,293,318],[200,218,293,318,321],[200,218,276,280,282,294,313,314,315,317,321],[84,200,241],[71],[357],[320,321]],"referencedMap":[[80,1],[77,2],[76,2],[78,3],[83,4],[84,5],[75,4],[81,6],[82,7],[463,8],[325,9],[329,9],[327,9],[465,10],[466,11],[468,12],[469,13],[472,14],[474,15],[388,16],[386,16],[374,17],[375,18],[373,19],[376,20],[377,21],[378,22],[379,23],[380,24],[381,25],[382,26],[383,27],[384,28],[385,29],[477,30],[478,31],[480,32],[476,33],[484,34],[487,11],[106,35],[107,35],[147,36],[148,37],[149,38],[150,39],[151,40],[152,41],[153,42],[154,43],[155,44],[156,45],[157,45],[159,46],[158,47],[160,48],[161,49],[162,50],[146,51],[163,52],[164,53],[165,54],[198,55],[166,56],[167,57],[168,58],[169,59],[170,60],[171,61],[172,62],[173,63],[174,64],[175,65],[176,65],[177,66],[179,67],[181,68],[180,69],[182,70],[183,71],[184,72],[185,73],[186,74],[187,75],[188,76],[189,77],[190,78],[191,79],[192,80],[193,81],[194,82],[195,83],[196,84],[462,85],[514,86],[515,87],[490,88],[493,88],[512,86],[513,86],[503,86],[502,89],[500,86],[495,86],[508,86],[506,86],[510,86],[494,86],[507,86],[511,86],[496,86],[497,86],[509,86],[491,86],[498,86],[499,86],[501,86],[505,86],[516,90],[504,86],[492,86],[529,91],[523,90],[525,92],[524,90],[517,90],[518,90],[520,90],[522,90],[526,92],[527,92],[519,92],[521,92],[350,93],[534,94],[535,11],[537,95],[538,96],[403,97],[400,98],[401,99],[402,100],[398,101],[330,102],[405,103],[328,9],[326,104],[404,103],[345,105],[370,106],[365,107],[346,108],[367,109],[369,110],[364,111],[366,107],[368,109],[407,112],[293,113],[241,114],[292,115],[248,116],[249,117],[309,118],[307,119],[310,120],[371,121],[215,121],[250,122],[308,116],[460,46],[397,123],[396,124],[395,123],[406,125],[229,126],[414,127],[230,128],[68,129],[71,130],[220,131],[221,132],[222,132],[224,133],[225,134],[242,135],[228,136],[227,137],[70,138],[299,139],[289,140],[287,141],[288,142],[348,143],[412,139],[203,144],[206,145],[207,145],[204,146],[205,145],[210,147],[208,148],[209,144],[351,149],[290,150],[244,151],[312,152],[232,151],[231,153],[124,154],[134,155],[123,154],[144,156],[115,157],[114,158],[143,11],[137,159],[142,160],[117,161],[131,162],[116,163],[140,164],[112,165],[111,166],[141,167],[113,168],[118,169],[122,169],[145,170],[135,171],[126,172],[127,173],[129,174],[125,175],[128,176],[138,11],[120,177],[121,178],[130,179],[110,180],[133,171],[132,169],[139,181],[304,182],[235,183],[237,184],[236,183],[363,185],[332,186],[333,187],[334,188],[341,116],[343,189],[342,186],[335,190],[338,191],[339,192],[340,192],[270,4],[271,193],[276,194],[272,186],[273,195],[274,186],[275,196],[98,197],[99,198],[86,199],[88,200],[199,14],[200,201],[73,202],[90,203],[100,204],[74,205],[87,206],[91,207],[92,208],[103,209],[104,210],[94,203],[96,211],[95,212],[97,213],[448,214],[435,215],[421,216],[438,217],[419,218],[445,219],[443,220],[444,221],[447,220],[446,219],[436,222],[437,223],[422,224],[427,225],[430,226],[432,227],[431,228],[429,229],[433,230],[423,231],[426,232],[424,233],[418,234],[441,235],[440,236],[439,237],[442,238],[417,239],[425,240],[434,241],[283,242],[295,243],[321,244],[320,245],[218,246],[251,247],[252,248],[322,186],[255,249],[282,250],[294,251],[300,252],[219,253],[281,254],[277,255],[269,256],[233,257],[238,258],[280,259],[279,260],[306,261],[311,262],[313,263],[314,264],[315,265],[316,266],[317,267],[318,268],[319,256],[245,269],[353,270],[415,271],[450,272],[361,273],[362,274],[372,275],[387,276],[389,277],[390,278],[391,279],[392,280],[393,281],[408,282],[409,283],[410,284],[411,285],[451,286],[452,287],[413,288],[454,289],[455,290],[456,291],[457,292],[458,293],[459,294],[453,295],[357,296],[358,297],[359,186],[360,298],[352,299],[336,186],[259,186],[263,300],[258,186],[256,186],[257,186],[262,301],[260,302],[261,303],[239,304],[344,305],[212,306],[211,148],[337,307],[247,308],[278,309],[268,310],[267,311],[266,312]],"exportedModulesMap":[[80,1],[77,2],[76,2],[78,3],[83,4],[84,5],[75,4],[81,6],[82,7],[463,8],[325,9],[329,9],[327,9],[465,10],[466,11],[468,12],[469,13],[472,14],[474,15],[388,16],[386,16],[374,17],[375,18],[373,19],[376,20],[377,21],[378,22],[379,23],[380,24],[381,25],[382,26],[383,27],[384,28],[385,29],[477,30],[478,31],[480,32],[476,33],[484,34],[487,11],[106,35],[107,35],[147,36],[148,37],[149,38],[150,39],[151,40],[152,41],[153,42],[154,43],[155,44],[156,45],[157,45],[159,46],[158,47],[160,48],[161,49],[162,50],[146,51],[163,52],[164,53],[165,54],[198,55],[166,56],[167,57],[168,58],[169,59],[170,60],[171,61],[172,62],[173,63],[174,64],[175,65],[176,65],[177,66],[179,67],[181,68],[180,69],[182,70],[183,71],[184,72],[185,73],[186,74],[187,75],[188,76],[189,77],[190,78],[191,79],[192,80],[193,81],[194,82],[195,83],[196,84],[462,85],[514,86],[515,87],[490,88],[493,88],[512,86],[513,86],[503,86],[502,89],[500,86],[495,86],[508,86],[506,86],[510,86],[494,86],[507,86],[511,86],[496,86],[497,86],[509,86],[491,86],[498,86],[499,86],[501,86],[505,86],[516,90],[504,86],[492,86],[529,91],[523,90],[525,92],[524,90],[517,90],[518,90],[520,90],[522,90],[526,92],[527,92],[519,92],[521,92],[350,93],[534,94],[535,11],[537,95],[538,96],[403,97],[400,98],[401,99],[402,100],[398,101],[330,102],[405,103],[328,9],[326,104],[404,103],[345,105],[370,106],[365,107],[346,108],[367,109],[369,110],[364,111],[366,107],[368,109],[407,112],[293,113],[241,114],[292,115],[248,116],[249,117],[309,118],[307,119],[310,120],[371,121],[215,121],[250,122],[308,116],[460,46],[397,123],[396,124],[395,123],[406,125],[229,126],[414,127],[230,128],[68,129],[71,130],[220,131],[221,132],[222,132],[224,133],[225,134],[242,135],[228,136],[227,137],[70,138],[299,139],[289,140],[287,141],[288,142],[348,143],[412,139],[203,144],[206,145],[207,145],[204,146],[205,145],[210,147],[208,148],[209,144],[351,149],[290,150],[244,151],[312,152],[232,151],[231,153],[124,154],[134,155],[123,154],[144,156],[115,157],[114,158],[143,11],[137,159],[142,160],[117,161],[131,162],[116,163],[140,164],[112,165],[111,166],[141,167],[113,168],[118,169],[122,169],[145,170],[135,171],[126,172],[127,173],[129,174],[125,175],[128,176],[138,11],[120,177],[121,178],[130,179],[110,180],[133,171],[132,169],[139,181],[304,182],[235,183],[237,184],[236,183],[363,185],[332,186],[333,187],[334,188],[341,116],[343,189],[342,186],[335,190],[338,191],[339,192],[340,192],[270,4],[271,193],[276,194],[272,186],[273,195],[274,186],[275,196],[98,197],[99,198],[86,199],[88,200],[199,14],[200,201],[73,202],[90,203],[100,204],[74,205],[87,206],[91,207],[92,208],[103,209],[104,210],[94,203],[96,211],[95,212],[97,213],[448,214],[435,215],[421,216],[438,217],[419,218],[445,219],[443,220],[444,221],[447,220],[446,219],[436,222],[437,223],[422,224],[427,225],[430,226],[432,227],[431,228],[429,229],[433,230],[423,231],[426,232],[424,233],[418,234],[441,235],[440,236],[439,237],[442,238],[417,239],[425,240],[434,241],[283,313],[295,314],[321,315],[320,316],[218,148],[251,317],[252,318],[322,186],[255,186],[282,319],[294,320],[300,321],[219,253],[281,322],[277,323],[269,256],[233,324],[238,325],[280,326],[279,186],[306,327],[311,328],[313,329],[314,330],[315,331],[316,266],[317,332],[318,333],[319,256],[245,334],[357,186],[358,335],[359,186],[360,336],[352,337],[336,186],[259,186],[263,300],[258,186],[256,186],[257,186],[262,301],[260,302],[261,303],[239,304],[344,305],[212,306],[211,148],[337,307],[247,308],[278,309],[268,310],[267,311],[266,312]],"semanticDiagnosticsPerFile":[80,77,76,78,83,84,75,81,82,463,325,329,327,324,465,466,461,467,468,469,470,471,472,473,474,388,386,374,375,373,376,377,378,379,380,381,382,383,384,385,477,478,480,475,476,481,482,483,464,484,485,486,487,106,107,147,148,149,150,151,152,153,154,155,156,157,159,158,160,161,162,146,197,163,164,165,198,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,488,489,462,347,514,515,490,493,512,513,503,502,500,495,508,506,510,494,507,511,496,497,509,491,498,499,501,505,516,504,492,529,528,523,525,524,517,518,520,522,526,527,519,521,350,349,530,531,532,533,479,449,534,535,536,537,538,403,400,401,402,398,399,330,246,405,108,328,326,404,345,370,365,346,367,369,364,366,368,407,331,285,284,293,241,291,292,354,248,201,355,356,249,309,307,310,296,213,264,371,214,215,250,102,308,85,297,460,394,397,396,395,406,229,414,67,230,68,223,71,220,221,222,224,225,69,242,228,227,70,226,202,299,289,287,288,286,348,298,412,79,203,206,207,204,205,210,208,209,265,351,63,64,11,12,15,14,2,16,17,18,19,20,21,22,23,3,24,4,25,29,26,27,28,30,31,32,5,33,34,35,36,6,40,37,38,39,41,7,42,47,48,43,44,45,46,8,52,49,50,51,53,9,54,55,56,59,57,58,60,61,10,1,62,13,290,72,217,243,216,244,312,232,231,254,253,124,134,123,144,115,114,143,137,142,117,131,116,140,112,111,141,113,118,119,122,109,145,135,126,127,129,125,128,138,120,121,130,110,133,132,136,139,301,304,235,237,234,236,302,303,363,332,333,334,341,343,342,335,338,339,340,270,271,276,272,273,274,275,98,99,86,88,105,89,199,200,73,90,100,74,87,91,92,101,103,104,93,94,96,95,97,448,428,420,435,421,438,419,445,443,444,447,446,436,437,422,427,430,432,431,429,433,423,426,424,418,441,440,439,442,417,425,416,434,65,283,295,66,321,320,218,251,252,322,255,282,294,300,219,281,277,269,233,238,323,305,280,279,306,311,313,314,315,316,317,318,319,245,353,415,450,361,362,372,387,389,390,391,392,393,408,409,410,411,451,452,413,454,455,456,457,458,459,453,357,358,359,360,352,336,259,263,258,256,257,262,260,261,239,344,212,211,337,247,278,240,268,267,266],"latestChangedDtsFile":"./src/rpc/index.d.ts"},"version":"5.4.5"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/dist/typedoc-urls.json b/node_modules/@libp2p/kad-dht/dist/typedoc-urls.json
deleted file mode 100644
index dfae7ed..0000000
--- a/node_modules/@libp2p/kad-dht/dist/typedoc-urls.json
+++ /dev/null
@@ -1,56 +0,0 @@
-{
-  "codec": "https://libp2p.github.io/js-libp2p/functions/_libp2p_kad_dht.MessageType.codec.html",
-  "EventTypes": "https://libp2p.github.io/js-libp2p/enums/_libp2p_kad_dht.EventTypes.html",
-  ".:EventTypes": "https://libp2p.github.io/js-libp2p/enums/_libp2p_kad_dht.EventTypes.html",
-  "MessageType": "https://libp2p.github.io/js-libp2p/enums/_libp2p_kad_dht.MessageType-1.html",
-  "AddPeerEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.AddPeerEvent.html",
-  ".:AddPeerEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.AddPeerEvent.html",
-  "DHTRecord": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.DHTRecord.html",
-  ".:DHTRecord": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.DHTRecord.html",
-  "DialPeerEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.DialPeerEvent.html",
-  ".:DialPeerEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.DialPeerEvent.html",
-  "FinalPeerEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.FinalPeerEvent.html",
-  ".:FinalPeerEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.FinalPeerEvent.html",
-  "KadDHT": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.KadDHT.html",
-  ".:KadDHT": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.KadDHT.html",
-  "KadDHTComponents": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.KadDHTComponents.html",
-  ".:KadDHTComponents": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.KadDHTComponents.html",
-  "KadDHTInit": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.KadDHTInit.html",
-  ".:KadDHTInit": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.KadDHTInit.html",
-  "PeerInfoMapper": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.PeerInfoMapper.html",
-  ".:PeerInfoMapper": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.PeerInfoMapper.html",
-  "PeerResponseEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.PeerResponseEvent.html",
-  ".:PeerResponseEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.PeerResponseEvent.html",
-  "ProviderEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.ProviderEvent.html",
-  ".:ProviderEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.ProviderEvent.html",
-  "ProvidersInit": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.ProvidersInit.html",
-  "QueryErrorEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.QueryErrorEvent.html",
-  ".:QueryErrorEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.QueryErrorEvent.html",
-  "RoutingTable": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.RoutingTable.html",
-  ".:RoutingTable": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.RoutingTable.html",
-  "SelectFn": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.SelectFn.html",
-  ".:SelectFn": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.SelectFn.html",
-  "SendQueryEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.SendQueryEvent.html",
-  ".:SendQueryEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.SendQueryEvent.html",
-  "SingleKadDHT": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.SingleKadDHT.html",
-  ".:SingleKadDHT": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.SingleKadDHT.html",
-  "ValidateFn": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.ValidateFn.html",
-  ".:ValidateFn": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.ValidateFn.html",
-  "ValueEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.ValueEvent.html",
-  ".:ValueEvent": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_kad_dht.ValueEvent.html",
-  "DHTProgressEvents": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.DHTProgressEvents.html",
-  ".:DHTProgressEvents": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.DHTProgressEvents.html",
-  "MessageName": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.MessageName.html",
-  ".:MessageName": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.MessageName.html",
-  "QueryEvent": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.QueryEvent.html",
-  ".:QueryEvent": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.QueryEvent.html",
-  "Selectors": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.Selectors.html",
-  ".:Selectors": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.Selectors.html",
-  "Validators": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.Validators.html",
-  ".:Validators": "https://libp2p.github.io/js-libp2p/types/_libp2p_kad_dht.Validators.html",
-  "kadDHT": "https://libp2p.github.io/js-libp2p/functions/_libp2p_kad_dht.kadDHT-1.html",
-  ".:kadDHT": "https://libp2p.github.io/js-libp2p/functions/_libp2p_kad_dht.kadDHT-1.html",
-  "passthroughMapper": "https://libp2p.github.io/js-libp2p/functions/_libp2p_kad_dht.passthroughMapper.html",
-  "removePrivateAddressesMapper": "https://libp2p.github.io/js-libp2p/functions/_libp2p_kad_dht.removePrivateAddressesMapper.html",
-  "removePublicAddressesMapper": "https://libp2p.github.io/js-libp2p/functions/_libp2p_kad_dht.removePublicAddressesMapper.html"
-}
\ No newline at end of file
diff --git a/node_modules/@libp2p/kad-dht/src/kad-dht.ts b/node_modules/@libp2p/kad-dht/src/kad-dht.ts
index 0cccaaf..3e0fd6c 100644
--- a/node_modules/@libp2p/kad-dht/src/kad-dht.ts
+++ b/node_modules/@libp2p/kad-dht/src/kad-dht.ts
@@ -333,12 +333,12 @@ export class KadDHT extends TypedEventEmitter<PeerDiscoveryEvents> implements Ka
   }
 
   async onPeerConnect (peerData: PeerInfo): Promise<void> {
-    this.log('peer %p connected', peerData.id)
+    this.log.trace('peer %p connected', peerData.id)
 
     peerData = this.peerInfoMapper(peerData)
 
     if (peerData.multiaddrs.length === 0) {
-      this.log('ignoring %p as there were no valid addresses in %s after filtering', peerData.id, peerData.multiaddrs.map(addr => addr.toString()))
+      this.log.trace('ignoring %p as there were no valid addresses in %s after filtering', peerData.id, peerData.multiaddrs.map(addr => addr.toString()))
       return
     }
 
@@ -367,11 +367,15 @@ export class KadDHT extends TypedEventEmitter<PeerDiscoveryEvents> implements Ka
    * If 'server' this node will respond to DHT queries, if 'client' this node will not
    */
   async setMode (mode: 'client' | 'server'): Promise<void> {
-    await this.components.registrar.unhandle(this.protocol)
+    if (mode === this.getMode()) {
+      this.log('already in %s mode', mode)
+      return
+    }
 
     if (mode === 'client') {
       this.log('enabling client mode')
       this.clientMode = true
+      await this.components.registrar.unhandle(this.protocol)
     } else {
       this.log('enabling server mode')
       this.clientMode = false
diff --git a/node_modules/@libp2p/kad-dht/src/network.ts b/node_modules/@libp2p/kad-dht/src/network.ts
index 025e77c..fa77977 100644
--- a/node_modules/@libp2p/kad-dht/src/network.ts
+++ b/node_modules/@libp2p/kad-dht/src/network.ts
@@ -122,7 +122,13 @@ export class Network extends TypedEventEmitter<NetworkEvents> implements Startab
       }, options)
     } catch (err: any) {
       stream?.abort(err)
-      this.log.error('could not send %s to %p', msg.type, to, err)
+
+      // only log if the incoming signal was not aborted - this means we were
+      // no longer interested in the query result
+      if (options.signal?.aborted !== true) {
+        this.log.error('could not send %s to %p - %e', msg.type, to, err)
+      }
+
       yield queryErrorEvent({ from: to, error: err }, options)
     } finally {
       this.timeout.cleanUp(signal)
diff --git a/node_modules/@libp2p/kad-dht/src/query/query-path.ts b/node_modules/@libp2p/kad-dht/src/query/query-path.ts
index 7b36e4d..0570988 100644
--- a/node_modules/@libp2p/kad-dht/src/query/query-path.ts
+++ b/node_modules/@libp2p/kad-dht/src/query/query-path.ts
@@ -135,7 +135,7 @@ export async function * queryPath (options: QueryPathOptions): AsyncGenerator<Qu
           if (event.name === 'PEER_RESPONSE') {
             for (const closerPeer of event.closer) {
               if (peersSeen.has(closerPeer.id)) { // eslint-disable-line max-depth
-                log('already seen %p in query', closerPeer.id)
+                log.trace('already seen %p in query', closerPeer.id)
                 continue
               }
 
@@ -154,7 +154,7 @@ export async function * queryPath (options: QueryPathOptions): AsyncGenerator<Qu
 
               // only continue query if closer peer is actually closer
               if (uint8ArrayXorCompare(closerPeerXor, peerXor) !== -1) { // eslint-disable-line max-depth
-                log('skipping %p as they are not closer to %b than %p', closerPeer.id, key, peer)
+                log.trace('skipping %p as they are not closer to %b than %p', closerPeer.id, key, peer)
                 continue
               }
 
diff --git a/node_modules/@libp2p/kad-dht/src/routing-table/index.ts b/node_modules/@libp2p/kad-dht/src/routing-table/index.ts
index defa270..fdff2dc 100644
--- a/node_modules/@libp2p/kad-dht/src/routing-table/index.ts
+++ b/node_modules/@libp2p/kad-dht/src/routing-table/index.ts
@@ -346,7 +346,7 @@ export class RoutingTable extends TypedEventEmitter<RoutingTableEvents> implemen
 
     this.kb.add({ kadId, peerId })
 
-    this.log('added %p with kad id %b', peerId, kadId)
+    this.log.trace('added %p with kad id %b', peerId, kadId)
 
     this.updateMetrics()
   }
diff --git a/node_modules/@libp2p/kad-dht/src/rpc/handlers/add-provider.ts b/node_modules/@libp2p/kad-dht/src/rpc/handlers/add-provider.ts
index ae7a20a..5002921 100644
--- a/node_modules/@libp2p/kad-dht/src/rpc/handlers/add-provider.ts
+++ b/node_modules/@libp2p/kad-dht/src/rpc/handlers/add-provider.ts
@@ -27,8 +27,6 @@ export class AddProviderHandler implements DHTMessageHandler {
   }
 
   async handle (peerId: PeerId, msg: Message): Promise<Message | undefined> {
-    this.log('start')
-
     if (msg.key == null || msg.key.length === 0) {
       throw new InvalidMessageError('Missing key')
     }
@@ -45,6 +43,8 @@ export class AddProviderHandler implements DHTMessageHandler {
       this.log.error('no providers found in message')
     }
 
+    this.log('%p asked us to store provider record for for %c', peerId, cid)
+
     await Promise.all(
       msg.providers.map(async (pi) => {
         // Ignore providers not from the originator
diff --git a/node_modules/@libp2p/kad-dht/src/rpc/index.ts b/node_modules/@libp2p/kad-dht/src/rpc/index.ts
index 4f5c85a..72b4020 100644
--- a/node_modules/@libp2p/kad-dht/src/rpc/index.ts
+++ b/node_modules/@libp2p/kad-dht/src/rpc/index.ts
@@ -11,7 +11,7 @@ import type { PeerInfoMapper, Validators } from '../index.js'
 import type { PeerRouting } from '../peer-routing'
 import type { Providers } from '../providers'
 import type { RoutingTable } from '../routing-table'
-import type { Logger, PeerId } from '@libp2p/interface'
+import type { CounterGroup, Logger, Metrics, PeerId } from '@libp2p/interface'
 import type { IncomingStreamData } from '@libp2p/interface-internal'
 
 export interface DHTMessageHandler {
@@ -28,16 +28,24 @@ export interface RPCInit {
 }
 
 export interface RPCComponents extends GetValueHandlerComponents, PutValueHandlerComponents, FindNodeHandlerComponents, GetProvidersHandlerComponents {
-
+  metrics?: Metrics
 }
 
 export class RPC {
   private readonly handlers: Record<string, DHTMessageHandler>
   private readonly routingTable: RoutingTable
   private readonly log: Logger
+  private readonly metrics: {
+    operations?: CounterGroup
+    errors?: CounterGroup
+  }
 
   constructor (components: RPCComponents, init: RPCInit) {
     const { providers, peerRouting, validators, logPrefix, peerInfoMapper } = init
+    this.metrics = {
+      operations: components.metrics?.registerCounterGroup(`${logPrefix.replaceAll(':', '_')}_inbound_rpc_requests_total`),
+      errors: components.metrics?.registerCounterGroup(`${logPrefix.replaceAll(':', '_')}_inbound_rpc_errors_total`)
+    }
 
     this.log = components.logger.forComponent(`${logPrefix}:rpc`)
     this.routingTable = init.routingTable
@@ -69,7 +77,17 @@ export class RPC {
       return
     }
 
-    return handler.handle(peerId, msg)
+    try {
+      this.metrics.operations?.increment({
+        [msg.type]: true
+      })
+
+      return await handler.handle(peerId, msg)
+    } catch {
+      this.metrics.errors?.increment({
+        [msg.type]: true
+      })
+    }
   }
 
   /**
