diff --git a/node_modules/@libp2p/tls/dist/src/index.d.ts b/node_modules/@libp2p/tls/dist/src/index.d.ts
index c5a79e0..0e7e144 100644
--- a/node_modules/@libp2p/tls/dist/src/index.d.ts
+++ b/node_modules/@libp2p/tls/dist/src/index.d.ts
@@ -17,11 +17,13 @@
  * })
  * ```
  */
-import type { ComponentLogger, ConnectionEncrypter, PrivateKey } from '@libp2p/interface';
+import type { ComponentLogger, ConnectionEncrypter, Metrics, PrivateKey, Upgrader } from '@libp2p/interface';
 export declare const PROTOCOL = "/tls/1.0.0";
 export interface TLSComponents {
     privateKey: PrivateKey;
     logger: ComponentLogger;
+    upgrader: Upgrader;
+    metrics?: Metrics;
 }
 export declare function tls(): (components: TLSComponents) => ConnectionEncrypter;
 //# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/src/index.d.ts.map b/node_modules/@libp2p/tls/dist/src/index.d.ts.map
index 767a856..063e5dd 100644
--- a/node_modules/@libp2p/tls/dist/src/index.d.ts.map
+++ b/node_modules/@libp2p/tls/dist/src/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;GAkBG;AAGH,OAAO,KAAK,EAAE,eAAe,EAAE,mBAAmB,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAEzF,eAAO,MAAM,QAAQ,eAAe,CAAA;AAEpC,MAAM,WAAW,aAAa;IAC5B,UAAU,EAAE,UAAU,CAAA;IACtB,MAAM,EAAE,eAAe,CAAA;CACxB;AAED,wBAAgB,GAAG,IAAK,CAAC,UAAU,EAAE,aAAa,KAAK,mBAAmB,CAEzE"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;GAkBG;AAGH,OAAO,KAAK,EAAE,eAAe,EAAE,mBAAmB,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAE5G,eAAO,MAAM,QAAQ,eAAe,CAAA;AAEpC,MAAM,WAAW,aAAa;IAC5B,UAAU,EAAE,UAAU,CAAA;IACtB,MAAM,EAAE,eAAe,CAAA;IACvB,QAAQ,EAAE,QAAQ,CAAA;IAClB,OAAO,CAAC,EAAE,OAAO,CAAA;CAClB;AAED,wBAAgB,GAAG,IAAK,CAAC,UAAU,EAAE,aAAa,KAAK,mBAAmB,CAEzE"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/src/index.js.map b/node_modules/@libp2p/tls/dist/src/index.js.map
index 0964b1b..ec2a3ee 100644
--- a/node_modules/@libp2p/tls/dist/src/index.js.map
+++ b/node_modules/@libp2p/tls/dist/src/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;GAkBG;AAEH,OAAO,EAAE,GAAG,EAAE,MAAM,UAAU,CAAA;AAG9B,MAAM,CAAC,MAAM,QAAQ,GAAG,YAAY,CAAA;AAOpC,MAAM,UAAU,GAAG;IACjB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAA;AAC5C,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;GAkBG;AAEH,OAAO,EAAE,GAAG,EAAE,MAAM,UAAU,CAAA;AAG9B,MAAM,CAAC,MAAM,QAAQ,GAAG,YAAY,CAAA;AASpC,MAAM,UAAU,GAAG;IACjB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAA;AAC5C,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/src/tls.d.ts b/node_modules/@libp2p/tls/dist/src/tls.d.ts
index c8edd27..f61aa57 100644
--- a/node_modules/@libp2p/tls/dist/src/tls.d.ts
+++ b/node_modules/@libp2p/tls/dist/src/tls.d.ts
@@ -19,21 +19,21 @@
  */
 import { serviceCapabilities } from '@libp2p/interface';
 import type { TLSComponents } from './index.js';
-import type { MultiaddrConnection, ConnectionEncrypter, SecuredConnection, SecureConnectionOptions } from '@libp2p/interface';
-import type { Duplex } from 'it-stream-types';
+import type { MultiaddrConnection, ConnectionEncrypter, SecuredConnection, SecureConnectionOptions, ClosableDuplex } from '@libp2p/interface';
 import type { Uint8ArrayList } from 'uint8arraylist';
 export declare class TLS implements ConnectionEncrypter {
     protocol: string;
     private readonly log;
-    private readonly privateKey;
+    private readonly components;
+    private readonly metrics;
     constructor(components: TLSComponents);
     readonly [Symbol.toStringTag] = "@libp2p/tls";
     readonly [serviceCapabilities]: string[];
-    secureInbound<Stream extends Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection>(conn: Stream, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>>;
-    secureOutbound<Stream extends Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection>(conn: Stream, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>>;
+    secureInbound<Stream extends ClosableDuplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection>(conn: Stream, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>>;
+    secureOutbound<Stream extends ClosableDuplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection>(conn: Stream, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>>;
     /**
      * Encrypt connection
      */
-    _encrypt<Stream extends Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection>(conn: Stream, isServer: boolean, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>>;
+    _encrypt<Stream extends ClosableDuplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection>(conn: Stream, isServer: boolean, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>>;
 }
 //# sourceMappingURL=tls.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/src/tls.d.ts.map b/node_modules/@libp2p/tls/dist/src/tls.d.ts.map
index e04e546..bc23731 100644
--- a/node_modules/@libp2p/tls/dist/src/tls.d.ts.map
+++ b/node_modules/@libp2p/tls/dist/src/tls.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"tls.d.ts","sourceRoot":"","sources":["../../src/tls.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;GAkBG;AAGH,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAA;AAIvD,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,YAAY,CAAA;AAC/C,OAAO,KAAK,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,iBAAiB,EAAU,uBAAuB,EAAc,MAAM,mBAAmB,CAAA;AACjJ,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAA;AAC7C,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAA;AAEpD,qBAAa,GAAI,YAAW,mBAAmB;IACtC,QAAQ,EAAE,MAAM,CAAW;IAClC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;IAC5B,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAY;gBAE1B,UAAU,EAAE,aAAa;IAKtC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,iBAAgB;IAE7C,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAE,MAAM,EAAE,CAEvC;IAEK,aAAa,CAAE,MAAM,SAAS,MAAM,CAAC,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,mBAAmB,EAAG,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,uBAAuB,GAAG,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAI9L,cAAc,CAAE,MAAM,SAAS,MAAM,CAAC,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,mBAAmB,EAAG,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,uBAAuB,GAAG,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAIrM;;OAEG;IACG,QAAQ,CAAE,MAAM,SAAS,MAAM,CAAC,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,mBAAmB,EAAG,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,uBAAuB,GAAG,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;CAkEnN"}
\ No newline at end of file
+{"version":3,"file":"tls.d.ts","sourceRoot":"","sources":["../../src/tls.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;GAkBG;AAGH,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAA;AAIvD,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,YAAY,CAAA;AAC/C,OAAO,KAAK,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,iBAAiB,EAAU,uBAAuB,EAAoC,cAAc,EAAE,MAAM,mBAAmB,CAAA;AACvL,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAA;AAEpD,qBAAa,GAAI,YAAW,mBAAmB;IACtC,QAAQ,EAAE,MAAM,CAAW;IAClC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;IAC5B,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAe;IAC1C,OAAO,CAAC,QAAQ,CAAC,OAAO,CASvB;gBAEY,UAAU,EAAE,aAAa;IA2BtC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,iBAAgB;IAE7C,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAE,MAAM,EAAE,CAEvC;IAEK,aAAa,CAAE,MAAM,SAAS,cAAc,CAAC,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,mBAAmB,EAAG,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,uBAAuB,GAAG,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAItM,cAAc,CAAE,MAAM,SAAS,cAAc,CAAC,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,mBAAmB,EAAG,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,uBAAuB,GAAG,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAI7M;;OAEG;IACG,QAAQ,CAAE,MAAM,SAAS,cAAc,CAAC,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,mBAAmB,EAAG,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,uBAAuB,GAAG,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;CAmH3N"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/src/tls.js b/node_modules/@libp2p/tls/dist/src/tls.js
index 2544962..aafbbde 100644
--- a/node_modules/@libp2p/tls/dist/src/tls.js
+++ b/node_modules/@libp2p/tls/dist/src/tls.js
@@ -25,10 +25,33 @@ import { PROTOCOL } from './index.js';
 export class TLS {
     protocol = PROTOCOL;
     log;
-    privateKey;
+    components;
+    metrics;
     constructor(components) {
         this.log = components.logger.forComponent('libp2p:tls');
-        this.privateKey = components.privateKey;
+        this.components = components;
+        this.metrics = {
+            server: {
+                events: components.metrics?.registerCounterGroup('libp2p_tls_server_events_total', {
+                    label: 'event',
+                    help: 'Total count of TLS connection encryption events by type'
+                }),
+                errors: components.metrics?.registerCounterGroup('libp2p_tls_server_errors_total', {
+                    label: 'event',
+                    help: 'Total count of TLS connection encryption errors by type'
+                })
+            },
+            client: {
+                events: components.metrics?.registerCounterGroup('libp2p_tls_server_events_total', {
+                    label: 'event',
+                    help: 'Total count of TLS connection encryption events by type'
+                }),
+                errors: components.metrics?.registerCounterGroup('libp2p_tls_server_errors_total', {
+                    label: 'event',
+                    help: 'Total count of TLS connection encryption errors by type'
+                })
+            }
+        };
     }
     [Symbol.toStringTag] = '@libp2p/tls';
     [serviceCapabilities] = [
@@ -44,14 +67,28 @@ export class TLS {
      * Encrypt connection
      */
     async _encrypt(conn, isServer, options) {
+        let streamMuxer;
         const opts = {
-            ...await generateCertificate(this.privateKey),
+            ...await generateCertificate(this.components.privateKey),
             isServer,
             // require TLS 1.3 or later
             minVersion: 'TLSv1.3',
             maxVersion: 'TLSv1.3',
             // accept self-signed certificates
-            rejectUnauthorized: false
+            rejectUnauthorized: false,
+            // early negotiation of muxer via ALPN protocols
+            ALPNProtocols: [
+                ...this.components.upgrader.getStreamMuxers().keys()
+            ],
+            ALPNCallback: ({ servername, protocols }) => {
+                this.log('received server name %s and protocols %s', servername, protocols);
+                for (const protocol of protocols) {
+                    streamMuxer = this.components.upgrader.getStreamMuxers().get(protocol);
+                    if (streamMuxer != null) {
+                        return protocol;
+                    }
+                }
+            }
         };
         let socket;
         if (isServer) {
@@ -69,9 +106,13 @@ export class TLS {
         }
         return new Promise((resolve, reject) => {
             options?.signal?.addEventListener('abort', () => {
-                const err = new HandshakeTimeoutError();
-                socket.destroy(err);
-                reject(err);
+                this.metrics[isServer ? 'server' : 'client'].events?.increment({
+                    abort: true
+                });
+                this.metrics[isServer ? 'server' : 'client'].errors?.increment({
+                    encrypt_abort: true
+                });
+                socket.emit('error', new HandshakeTimeoutError());
             });
             const verifyRemote = () => {
                 const remote = socket.getPeerCertificate();
@@ -83,24 +124,50 @@ export class TLS {
                         conn: {
                             ...conn,
                             ...streamToIt(socket)
-                        }
+                        },
+                        streamMuxer
                     });
                 })
                     .catch((err) => {
-                    reject(err);
+                    this.metrics[isServer ? 'server' : 'client'].errors?.increment({
+                        verify_peer_certificate: true
+                    });
+                    socket.emit('error', err);
                 });
             };
             socket.on('error', (err) => {
+                this.log.error('error encrypting %s connection - %e', isServer ? 'server' : 'client', err);
+                if (err.name !== 'HandshakeTimeoutError') {
+                    this.metrics[isServer ? 'server' : 'client'].events?.increment({
+                        error: true
+                    });
+                }
+                socket.destroy(err);
+                conn.abort(err);
                 reject(err);
             });
             socket.once('secure', () => {
                 this.log('verifying remote certificate');
+                this.metrics[isServer ? 'server' : 'client'].events?.increment({
+                    secure: true
+                });
                 verifyRemote();
             });
-        })
-            .catch(err => {
-            socket.destroy(err);
-            throw err;
+            socket.on('connect', () => {
+                this.metrics[isServer ? 'server' : 'client'].events?.increment({
+                    connect: true
+                });
+            });
+            socket.on('close', () => {
+                this.metrics[isServer ? 'server' : 'client'].events?.increment({
+                    close: true
+                });
+            });
+            socket.on('end', () => {
+                this.metrics[isServer ? 'server' : 'client'].events?.increment({
+                    end: true
+                });
+            });
         });
     }
 }
diff --git a/node_modules/@libp2p/tls/dist/src/tls.js.map b/node_modules/@libp2p/tls/dist/src/tls.js.map
index 34f70e0..b631926 100644
--- a/node_modules/@libp2p/tls/dist/src/tls.js.map
+++ b/node_modules/@libp2p/tls/dist/src/tls.js.map
@@ -1 +1 @@
-{"version":3,"file":"tls.js","sourceRoot":"","sources":["../../src/tls.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"tls.js","sourceRoot":"","sources":["../../src/tls.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.d.ts b/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.d.ts
new file mode 100644
index 0000000..49cd7e1
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.d.ts
@@ -0,0 +1,15 @@
+import type { PeerId } from '@libp2p/interface';
+export interface Certificate {
+    cert: Uint8Array;
+    peerId: PeerId;
+}
+export declare const validEd25519Certificate: Certificate;
+export declare const validECDSACertificate: Certificate;
+export declare const validSecp256k1Certificate: Certificate;
+/**
+ * This certificate has a mismatch between the Peer ID that it claims to
+ * authenticate vs the key that was used to sign it.
+ */
+export declare const wrongPeerIdInExtension: Certificate;
+export declare const invalidCertificateSignature: Certificate;
+//# sourceMappingURL=test-vectors.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.d.ts.map b/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.d.ts.map
new file mode 100644
index 0000000..0b2ec71
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"test-vectors.d.ts","sourceRoot":"","sources":["../../../test/fixtures/test-vectors.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAI/C,MAAM,WAAW,WAAW;IAC1B,IAAI,EAAE,UAAU,CAAA;IAChB,MAAM,EAAE,MAAM,CAAA;CACf;AAED,eAAO,MAAM,uBAAuB,EAAE,WAGrC,CAAA;AAED,eAAO,MAAM,qBAAqB,EAAE,WAGnC,CAAA;AAED,eAAO,MAAM,yBAAyB,EAAE,WAGvC,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,sBAAsB,EAAE,WAGpC,CAAA;AAED,eAAO,MAAM,2BAA2B,EAAE,WAGzC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.js b/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.js
new file mode 100644
index 0000000..7699686
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.js
@@ -0,0 +1,27 @@
+import { peerIdFromString } from '@libp2p/peer-id';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+export const validEd25519Certificate = {
+    cert: uint8ArrayFromString('308201773082011ea003020102020900f5bd0debaa597f52300a06082a8648ce3d04030230003020170d3735303130313030303030305a180f34303936303130313030303030305a30003059301306072a8648ce3d020106082a8648ce3d030107034200046bf9871220d71dcb3483ecdfcbfcc7c103f8509d0974b3c18ab1f1be1302d643103a08f7a7722c1b247ba3876fe2c59e26526f479d7718a85202ddbe47562358a37f307d307b060a2b0601040183a25a01010101ff046a30680424080112207fda21856709c5ae12fd6e8450623f15f11955d384212b89f56e7e136d2e17280440aaa6bffabe91b6f30c35e3aa4f94b1188fed96b0ffdd393f4c58c1c047854120e674ce64c788406d1c2c4b116581fd7411b309881c3c7f20b46e54c7e6fe7f0f300a06082a8648ce3d040302034700304402207d1a1dbd2bda235ff2ec87daf006f9b04ba076a5a5530180cd9c2e8f6399e09d0220458527178c7e77024601dbb1b256593e9b96d961b96349d1f560114f61a87595', 'base16'),
+    peerId: peerIdFromString('12D3KooWJRSrypvnpHgc6ZAgyCni4KcSmbV7uGRaMw5LgMKT18fq')
+};
+export const validECDSACertificate = {
+    cert: uint8ArrayFromString('308201c030820166a003020102020900eaf419a6e3edb4a6300a06082a8648ce3d04030230003020170d3735303130313030303030305a180f34303936303130313030303030305a30003059301306072a8648ce3d020106082a8648ce3d030107034200048dbf1116c7c608d6d5292bd826c3feb53483a89fce434bf64538a359c8e07538ff71f6766239be6a146dcc1a5f3bb934bcd4ae2ae1d4da28ac68b4a20593f06ba381c63081c33081c0060a2b0601040183a25a01010101ff0481ae3081ab045f0803125b3059301306072a8648ce3d020106082a8648ce3d0301070342000484b93fa456a74bd0153919f036db7bc63c802f055bc7023395d0203de718ee0fc7b570b767cdd858aca6c7c4113ff002e78bd2138ac1a3b26dde3519e06979ad04483046022100bc84014cea5a41feabdf4c161096564b9ccf4b62fbef4fe1cd382c84e11101780221009204f086a84cb8ed8a9ddd7868dc90c792ee434adf62c66f99a08a5eba11615b300a06082a8648ce3d0403020348003045022054b437be9a2edf591312d68ff24bf91367ad4143f76cf80b5658f232ade820da022100e23b48de9df9c25d4c83ddddf75d2676f0b9318ee2a6c88a736d85eab94a912f', 'base16'),
+    peerId: peerIdFromString('QmZcrvr3r4S3QvwFdae3c2EWTfo792Y14UpzCZurhmiWeX')
+};
+export const validSecp256k1Certificate = {
+    cert: uint8ArrayFromString('3082018230820128a003020102020900f3b305f55622cfdf300a06082a8648ce3d04030230003020170d3735303130313030303030305a180f34303936303130313030303030305a30003059301306072a8648ce3d020106082a8648ce3d0301070342000458f7e9581748ff9bdd933b655cc0e5552a1248f840658cc221dec2186b5a2fe4641b86ab7590a3422cdbb1000cf97662f27e5910d7569f22feed8829c8b52e0fa38188308185308182060a2b0601040183a25a01010101ff0471306f042508021221026b053094d1112bce799dc8026040ae6d4eb574157929f1598172061f753d9b1b04463044022040712707e97794c478d93989aaa28ae1f71c03af524a8a4bd2d98424948a782302207b61b7f074b696a25fb9e0059141a811cccc4cc28042d9301b9b2a4015e87470300a06082a8648ce3d04030203480030450220143ae4d86fdc8675d2480bb6912eca5e39165df7f572d836aa2f2d6acfab13f8022100831d1979a98f0c4a6fb5069ca374de92f1a1205c962a6d90ad3d7554cb7d9df4', 'base16'),
+    peerId: peerIdFromString('16Uiu2HAm2dSCBFxuge46aEt7U1oejtYuBUZXxASHqmcfVmk4gsbx')
+};
+/**
+ * This certificate has a mismatch between the Peer ID that it claims to
+ * authenticate vs the key that was used to sign it.
+ */
+export const wrongPeerIdInExtension = {
+    cert: uint8ArrayFromString('308201773082011da003020102020830a73c5d896a1109300a06082a8648ce3d04030230003020170d3735303130313030303030305a180f34303936303130313030303030305a30003059301306072a8648ce3d020106082a8648ce3d03010703420004bbe62df9a7c1c46b7f1f21d556deec5382a36df146fb29c7f1240e60d7d5328570e3b71d99602b77a65c9b3655f62837f8d66b59f1763b8c9beba3be07778043a37f307d307b060a2b0601040183a25a01010101ff046a3068042408011220ec8094573afb9728088860864f7bcea2d4fd412fef09a8e2d24d482377c20db60440ecabae8354afa2f0af4b8d2ad871e865cb5a7c0c8d3dbdbf42de577f92461a0ebb0a28703e33581af7d2a4f2270fc37aec6261fcc95f8af08f3f4806581c730a300a06082a8648ce3d040302034800304502202dfb17a6fa0f94ee0e2e6a3b9fb6e986f311dee27392058016464bd130930a61022100ba4b937a11c8d3172b81e7cd04aedb79b978c4379c2b5b24d565dd5d67d3cb3c', 'base16'),
+    peerId: peerIdFromString('12D3KooWJRSrypvnpHgc6ZAgyCni4KcSmbV7uGRaMw5LgMKT18fq')
+};
+export const invalidCertificateSignature = {
+    cert: uint8ArrayFromString('3082017d30820122a00302010202093313170a3499a20688300a06082a8648ce3d04030230003024170d3234303132363037323035305a181332313234303130323038323035302e3233325a30003059301306072a8648ce3d020106082a8648ce3d0301070342000499afee204e3f901f69d39339c87f492a8b933ba15a13100f221acb8338ce89a12b3561519e6a374ebce7e3272490b5ccdcaa4b49d98e96bce04f5a940d5dbeb9a37f307d307b060a2b0601040183a25a01010101ff046a30680424080112201542e8da12b6fe72772fa0e1d398c83ed8ad299ecfc992eff0fe8df0474d21810440e5cc3303e3e638d1a65d5020e28f22ca18c9b7aeda2d387604e1e0956dc48a8e0c77dda1468a4fbfefc40b0950838df1913360b2116f0a3e5b8bb67ba2f12c0e300a06082a8648ce3d040302034900304602210091b23a558ef1e058ddc5b014c3233837ad62c19c3089d8f1c9c73e4924b64d3a022100b06e96e0d7717fae95f111111c17cb705644437aa20a12345672f14ef048d3d5', 'base16'),
+    peerId: peerIdFromString('12D3KooWBFMuUoW6WRHGfnQBDFuq8YgEM3X1SWYQdAmj6B2XwaNk')
+};
+//# sourceMappingURL=test-vectors.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.js.map b/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.js.map
new file mode 100644
index 0000000..5060416
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/fixtures/test-vectors.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"test-vectors.js","sourceRoot":"","sources":["../../../test/fixtures/test-vectors.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAA;AAClD,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAU5E,MAAM,CAAC,MAAM,uBAAuB,GAAgB;IAClD,IAAI,EAAE,oBAAoB,CAAC,wvBAAwvB,EAAE,QAAQ,CAAC;IAC9xB,MAAM,EAAE,gBAAgB,CAAC,sDAAsD,CAAC;CACjF,CAAA;AAED,MAAM,CAAC,MAAM,qBAAqB,GAAgB;IAChD,IAAI,EAAE,oBAAoB,CAAC,04BAA04B,EAAE,QAAQ,CAAC;IACh7B,MAAM,EAAE,gBAAgB,CAAC,gDAAgD,CAAC;CAC3E,CAAA;AAED,MAAM,CAAC,MAAM,yBAAyB,GAAgB;IACpD,IAAI,EAAE,oBAAoB,CAAC,8wBAA8wB,EAAE,QAAQ,CAAC;IACpzB,MAAM,EAAE,gBAAgB,CAAC,uDAAuD,CAAC;CAClF,CAAA;AAED;;;GAGG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAgB;IACjD,IAAI,EAAE,oBAAoB,CAAC,wvBAAwvB,EAAE,QAAQ,CAAC;IAC9xB,MAAM,EAAE,gBAAgB,CAAC,sDAAsD,CAAC;CACjF,CAAA;AAED,MAAM,CAAC,MAAM,2BAA2B,GAAgB;IACtD,IAAI,EAAE,oBAAoB,CAAC,owBAAowB,EAAE,QAAQ,CAAC;IAC1yB,MAAM,EAAE,gBAAgB,CAAC,sDAAsD,CAAC;CACjF,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/index.spec.d.ts b/node_modules/@libp2p/tls/dist/test/index.spec.d.ts
new file mode 100644
index 0000000..b37c2d2
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/index.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/index.spec.d.ts.map b/node_modules/@libp2p/tls/dist/test/index.spec.d.ts.map
new file mode 100644
index 0000000..5c89780
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/index.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.d.ts","sourceRoot":"","sources":["../../test/index.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/index.spec.js b/node_modules/@libp2p/tls/dist/test/index.spec.js
new file mode 100644
index 0000000..b21d62c
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/index.spec.js
@@ -0,0 +1,82 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromMultihash, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import { duplexPair } from 'it-pair/duplex';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { tls } from '../src/index.js';
+describe('tls', () => {
+    let localPeer;
+    let remotePeer;
+    let wrongPeer;
+    let encrypter;
+    beforeEach(async () => {
+        [remotePeer, wrongPeer] = await Promise.all([
+            peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            peerIdFromPrivateKey(await generateKeyPair('Ed25519'))
+        ]);
+        const localKeyPair = await generateKeyPair('Ed25519');
+        localPeer = peerIdFromPrivateKey(localKeyPair);
+        encrypter = tls()({
+            privateKey: localKeyPair,
+            logger: defaultLogger(),
+            upgrader: stubInterface({
+                getStreamMuxers() {
+                    return new Map([['/test/muxer', stubInterface()]]);
+                }
+            })
+        });
+    });
+    afterEach(() => {
+        sinon.restore();
+    });
+    it('should verify the public key and id match', async () => {
+        const [inbound, outbound] = duplexPair();
+        await Promise.all([
+            encrypter.secureInbound(stubInterface({
+                ...inbound
+            }), {
+                remotePeer
+            }),
+            encrypter.secureOutbound(stubInterface({
+                ...outbound
+            }), {
+                remotePeer: wrongPeer
+            })
+        ]).then(() => expect.fail('should have failed'), (err) => {
+            expect(err).to.exist();
+            expect(err).to.have.property('name', 'UnexpectedPeerError');
+        });
+    });
+    it('should fail if the peer does not provide its public key', async () => {
+        const keyPair = await generateKeyPair('RSA', 512);
+        const peer = peerIdFromPrivateKey(keyPair);
+        remotePeer = peerIdFromMultihash(peer.toMultihash());
+        encrypter = tls()({
+            privateKey: keyPair,
+            logger: defaultLogger(),
+            upgrader: stubInterface({
+                getStreamMuxers() {
+                    return new Map([['/test/muxer', stubInterface()]]);
+                }
+            })
+        });
+        const [inbound, outbound] = duplexPair();
+        await expect(Promise.all([
+            encrypter.secureInbound(stubInterface({
+                ...inbound
+            }), {
+                remotePeer
+            }),
+            encrypter.secureOutbound(stubInterface({
+                ...outbound
+            }), {
+                remotePeer: localPeer
+            })
+        ]))
+            .to.eventually.be.rejected.with.property('name', 'UnexpectedPeerError');
+    });
+});
+//# sourceMappingURL=index.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/index.spec.js.map b/node_modules/@libp2p/tls/dist/test/index.spec.js.map
new file mode 100644
index 0000000..1c2e0d7
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/index.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../test/index.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/utils.spec.d.ts b/node_modules/@libp2p/tls/dist/test/utils.spec.d.ts
new file mode 100644
index 0000000..defd4da
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/utils.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=utils.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/utils.spec.d.ts.map b/node_modules/@libp2p/tls/dist/test/utils.spec.d.ts.map
new file mode 100644
index 0000000..8f252e3
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/utils.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.spec.d.ts","sourceRoot":"","sources":["../../test/utils.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/utils.spec.js b/node_modules/@libp2p/tls/dist/test/utils.spec.js
new file mode 100644
index 0000000..d83ab6b
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/utils.spec.js
@@ -0,0 +1,66 @@
+import { logger } from '@libp2p/logger';
+import { Crypto } from '@peculiar/webcrypto';
+import * as x509 from '@peculiar/x509';
+import { expect } from 'aegir/chai';
+import { verifyPeerCertificate } from '../src/utils.js';
+import * as testVectors from './fixtures/test-vectors.js';
+const crypto = new Crypto();
+x509.cryptoProvider.set(crypto);
+describe('utils', () => {
+    // unsupported key type
+    it.skip('should verify correct ECDSA certificate', async () => {
+        const peerId = await verifyPeerCertificate(testVectors.validECDSACertificate.cert);
+        expect(peerId.toString()).to.equal(testVectors.validECDSACertificate.peerId.toString());
+    });
+    it('should verify correct Ed25519 certificate', async () => {
+        const peerId = await verifyPeerCertificate(testVectors.validEd25519Certificate.cert);
+        expect(peerId.toString()).to.equal(testVectors.validEd25519Certificate.peerId.toString());
+    });
+    it('should verify correct Secp256k1 certificate', async () => {
+        const peerId = await verifyPeerCertificate(testVectors.validSecp256k1Certificate.cert);
+        expect(peerId.toString()).to.equal(testVectors.validSecp256k1Certificate.peerId.toString());
+    });
+    it('should reject certificate with a the wrong peer id in the extension', async () => {
+        await expect(verifyPeerCertificate(testVectors.wrongPeerIdInExtension.cert, undefined, logger('libp2p'))).to.eventually.be.rejected
+            .with.property('name', 'InvalidCryptoExchangeError');
+    });
+    it('should reject certificate with invalid self signature', async () => {
+        await expect(verifyPeerCertificate(testVectors.invalidCertificateSignature.cert, undefined, logger('libp2p'))).to.eventually.be.rejected
+            .with.property('name', 'InvalidCryptoExchangeError');
+    });
+    it('should reject certificate with a chain', async () => {
+        const alg = {
+            name: 'ECDSA',
+            namedCurve: 'P-256',
+            hash: 'SHA-256'
+        };
+        const rootKeys = await crypto.subtle.generateKey(alg, false, ['sign', 'verify']);
+        const rootCert = await x509.X509CertificateGenerator.createSelfSigned({
+            serialNumber: '01',
+            name: 'CN=Certificates-R-us',
+            notBefore: new Date('1970/01/01'),
+            notAfter: new Date('3070/01/01'),
+            signingAlgorithm: alg,
+            keys: rootKeys,
+            extensions: [
+                new x509.BasicConstraintsExtension(true, 2, true),
+                new x509.ExtendedKeyUsageExtension(['1.2.3.4.5.6.7', '2.3.4.5.6.7.8'], true),
+                new x509.KeyUsagesExtension(x509.KeyUsageFlags.keyCertSign | x509.KeyUsageFlags.cRLSign, true),
+                await x509.SubjectKeyIdentifierExtension.create(rootKeys.publicKey)
+            ]
+        });
+        const cert = await x509.X509CertificateGenerator.create({
+            publicKey: rootKeys.publicKey,
+            signingKey: rootKeys.privateKey,
+            subject: '',
+            issuer: rootCert.subject,
+            serialNumber: '02',
+            notBefore: new Date('1970/01/01'),
+            notAfter: new Date('3070/01/01'),
+            signingAlgorithm: alg
+        });
+        await expect(verifyPeerCertificate(new Uint8Array(cert.rawData), undefined, logger('libp2p'))).to.eventually.be.rejected
+            .with.property('name', 'InvalidCryptoExchangeError');
+    });
+});
+//# sourceMappingURL=utils.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/test/utils.spec.js.map b/node_modules/@libp2p/tls/dist/test/utils.spec.js.map
new file mode 100644
index 0000000..93e8bb0
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/test/utils.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.spec.js","sourceRoot":"","sources":["../../test/utils.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAA;AACvC,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAA;AAC5C,OAAO,KAAK,IAAI,MAAM,gBAAgB,CAAA;AACtC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,qBAAqB,EAAE,MAAM,iBAAiB,CAAA;AACvD,OAAO,KAAK,WAAW,MAAM,4BAA4B,CAAA;AAEzD,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAA;AAC3B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AAE/B,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;IACrB,uBAAuB;IACvB,EAAE,CAAC,IAAI,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAA;QAElF,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;IACzF,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAA;QAEpF,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,uBAAuB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;IAC3F,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAA;QAEtF,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,yBAAyB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;IAC7F,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qEAAqE,EAAE,KAAK,IAAI,EAAE;QACnF,MAAM,MAAM,CAAC,qBAAqB,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ;aAChI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,4BAA4B,CAAC,CAAA;IACxD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,MAAM,CAAC,qBAAqB,CAAC,WAAW,CAAC,2BAA2B,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ;aACrI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,4BAA4B,CAAC,CAAA;IACxD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,GAAG,GAAG;YACV,IAAI,EAAE,OAAO;YACb,UAAU,EAAE,OAAO;YACnB,IAAI,EAAE,SAAS;SAChB,CAAA;QACD,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAA;QAChF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC;YACpE,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,sBAAsB;YAC5B,SAAS,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;YACjC,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;YAChC,gBAAgB,EAAE,GAAG;YACrB,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE;gBACV,IAAI,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC;gBACjD,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,eAAe,EAAE,eAAe,CAAC,EAAE,IAAI,CAAC;gBAC5E,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC;gBAC9F,MAAM,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;aACpE;SACF,CAAC,CAAA;QAEF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC;YACtD,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,QAAQ,CAAC,OAAO;YACxB,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;YACjC,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;YAChC,gBAAgB,EAAE,GAAG;SACtB,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,qBAAqB,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ;aACrH,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,4BAA4B,CAAC,CAAA;IACxD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/tsconfig.tsbuildinfo b/node_modules/@libp2p/tls/dist/tsconfig.tsbuildinfo
new file mode 100644
index 0000000..867cb45
--- /dev/null
+++ b/node_modules/@libp2p/tls/dist/tsconfig.tsbuildinfo
@@ -0,0 +1 @@
+{"program":{"fileNames":["../../../node_modules/typescript/lib/lib.es5.d.ts","../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../node_modules/typescript/lib/lib.es2021.d.ts","../../../node_modules/typescript/lib/lib.es2022.d.ts","../../../node_modules/typescript/lib/lib.es2023.d.ts","../../../node_modules/typescript/lib/lib.dom.d.ts","../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../node_modules/typescript/lib/lib.webworker.d.ts","../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../node_modules/typescript/lib/lib.es2021.promise.d.ts","../../../node_modules/typescript/lib/lib.es2021.string.d.ts","../../../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../../node_modules/typescript/lib/lib.es2021.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.array.d.ts","../../../node_modules/typescript/lib/lib.es2022.error.d.ts","../../../node_modules/typescript/lib/lib.es2022.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.object.d.ts","../../../node_modules/typescript/lib/lib.es2022.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2022.string.d.ts","../../../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2023.array.d.ts","../../../node_modules/typescript/lib/lib.es2023.collection.d.ts","../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../src/errors.ts","../../../node_modules/multiformats/dist/src/bases/interface.d.ts","../../../node_modules/multiformats/dist/src/block/interface.d.ts","../../../node_modules/multiformats/dist/src/hashes/interface.d.ts","../../../node_modules/multiformats/dist/src/link/interface.d.ts","../../../node_modules/multiformats/dist/src/cid.d.ts","../../../node_modules/uint8arraylist/dist/src/index.d.ts","../../interface/dist/src/keys.d.ts","../../interface/dist/src/peer-id.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/protocols-table.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/index.d.ts","../../../node_modules/progress-events/dist/src/index.d.ts","../../../node_modules/@multiformats/dns/dist/src/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/dnsaddr.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/index.d.ts","../../../node_modules/it-stream-types/dist/src/index.d.ts","../../interface/dist/src/connection.d.ts","../../interface/dist/src/peer-info.d.ts","../../interface/dist/src/content-routing.d.ts","../../interface/dist/src/event-target.d.ts","../../interface/dist/src/metrics.d.ts","../../interface/dist/src/peer-routing.d.ts","../../interface/dist/src/peer-store.d.ts","../../interface/dist/src/startable.d.ts","../../interface/dist/src/stream-handler.d.ts","../../interface/dist/src/topology.d.ts","../../interface/dist/src/stream-muxer.d.ts","../../interface/dist/src/transport.d.ts","../../interface/dist/src/connection-encrypter.d.ts","../../interface/dist/src/connection-gater.d.ts","../../interface/dist/src/peer-discovery.d.ts","../../../node_modules/it-pushable/dist/src/index.d.ts","../../interface/dist/src/pubsub.d.ts","../../interface/dist/src/record.d.ts","../../interface/dist/src/errors.d.ts","../../../node_modules/@types/node/compatibility/disposable.d.ts","../../../node_modules/@types/node/compatibility/indexable.d.ts","../../../node_modules/@types/node/compatibility/iterators.d.ts","../../../node_modules/@types/node/compatibility/index.d.ts","../../../node_modules/@types/node/ts5.6/globals.typedarray.d.ts","../../../node_modules/@types/node/ts5.6/buffer.buffer.d.ts","../../../node_modules/buffer/index.d.ts","../../../node_modules/undici-types/header.d.ts","../../../node_modules/undici-types/readable.d.ts","../../../node_modules/undici-types/file.d.ts","../../../node_modules/undici-types/fetch.d.ts","../../../node_modules/undici-types/formdata.d.ts","../../../node_modules/undici-types/connector.d.ts","../../../node_modules/undici-types/client.d.ts","../../../node_modules/undici-types/errors.d.ts","../../../node_modules/undici-types/dispatcher.d.ts","../../../node_modules/undici-types/global-dispatcher.d.ts","../../../node_modules/undici-types/global-origin.d.ts","../../../node_modules/undici-types/pool-stats.d.ts","../../../node_modules/undici-types/pool.d.ts","../../../node_modules/undici-types/handlers.d.ts","../../../node_modules/undici-types/balanced-pool.d.ts","../../../node_modules/undici-types/agent.d.ts","../../../node_modules/undici-types/mock-interceptor.d.ts","../../../node_modules/undici-types/mock-agent.d.ts","../../../node_modules/undici-types/mock-client.d.ts","../../../node_modules/undici-types/mock-pool.d.ts","../../../node_modules/undici-types/mock-errors.d.ts","../../../node_modules/undici-types/proxy-agent.d.ts","../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../node_modules/undici-types/retry-handler.d.ts","../../../node_modules/undici-types/retry-agent.d.ts","../../../node_modules/undici-types/api.d.ts","../../../node_modules/undici-types/interceptors.d.ts","../../../node_modules/undici-types/util.d.ts","../../../node_modules/undici-types/cookies.d.ts","../../../node_modules/undici-types/patch.d.ts","../../../node_modules/undici-types/websocket.d.ts","../../../node_modules/undici-types/eventsource.d.ts","../../../node_modules/undici-types/filereader.d.ts","../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../node_modules/undici-types/content-type.d.ts","../../../node_modules/undici-types/cache.d.ts","../../../node_modules/undici-types/index.d.ts","../../../node_modules/@types/node/globals.d.ts","../../../node_modules/@types/node/assert.d.ts","../../../node_modules/@types/node/assert/strict.d.ts","../../../node_modules/@types/node/async_hooks.d.ts","../../../node_modules/@types/node/buffer.d.ts","../../../node_modules/@types/node/child_process.d.ts","../../../node_modules/@types/node/cluster.d.ts","../../../node_modules/@types/node/console.d.ts","../../../node_modules/@types/node/constants.d.ts","../../../node_modules/@types/node/crypto.d.ts","../../../node_modules/@types/node/dgram.d.ts","../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../node_modules/@types/node/dns.d.ts","../../../node_modules/@types/node/dns/promises.d.ts","../../../node_modules/@types/node/domain.d.ts","../../../node_modules/@types/node/dom-events.d.ts","../../../node_modules/@types/node/events.d.ts","../../../node_modules/@types/node/fs.d.ts","../../../node_modules/@types/node/fs/promises.d.ts","../../../node_modules/@types/node/http.d.ts","../../../node_modules/@types/node/http2.d.ts","../../../node_modules/@types/node/https.d.ts","../../../node_modules/@types/node/inspector.d.ts","../../../node_modules/@types/node/module.d.ts","../../../node_modules/@types/node/net.d.ts","../../../node_modules/@types/node/os.d.ts","../../../node_modules/@types/node/path.d.ts","../../../node_modules/@types/node/perf_hooks.d.ts","../../../node_modules/@types/node/process.d.ts","../../../node_modules/@types/node/punycode.d.ts","../../../node_modules/@types/node/querystring.d.ts","../../../node_modules/@types/node/readline.d.ts","../../../node_modules/@types/node/readline/promises.d.ts","../../../node_modules/@types/node/repl.d.ts","../../../node_modules/@types/node/sea.d.ts","../../../node_modules/@types/node/sqlite.d.ts","../../../node_modules/@types/node/stream.d.ts","../../../node_modules/@types/node/stream/promises.d.ts","../../../node_modules/@types/node/stream/consumers.d.ts","../../../node_modules/@types/node/stream/web.d.ts","../../../node_modules/@types/node/string_decoder.d.ts","../../../node_modules/@types/node/test.d.ts","../../../node_modules/@types/node/timers.d.ts","../../../node_modules/@types/node/timers/promises.d.ts","../../../node_modules/@types/node/tls.d.ts","../../../node_modules/@types/node/trace_events.d.ts","../../../node_modules/@types/node/tty.d.ts","../../../node_modules/@types/node/url.d.ts","../../../node_modules/@types/node/util.d.ts","../../../node_modules/@types/node/v8.d.ts","../../../node_modules/@types/node/vm.d.ts","../../../node_modules/@types/node/wasi.d.ts","../../../node_modules/@types/node/worker_threads.d.ts","../../../node_modules/@types/node/zlib.d.ts","../../../node_modules/@types/node/ts5.6/index.d.ts","../../interface/dist/src/events.d.ts","../../interface/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/bytes.d.ts","../../../node_modules/multiformats/dist/src/hashes/digest.d.ts","../../../node_modules/multiformats/dist/src/hashes/hasher.d.ts","../../../node_modules/multiformats/dist/src/varint.d.ts","../../../node_modules/multiformats/dist/src/codecs/interface.d.ts","../../../node_modules/multiformats/dist/src/interface.d.ts","../../../node_modules/multiformats/dist/src/index.d.ts","../../crypto/dist/src/keys/interface.d.ts","../../crypto/dist/src/keys/ecdh/index.d.ts","../../crypto/dist/src/keys/key-stretcher.d.ts","../../crypto/dist/src/keys/index.d.ts","../../peer-id/dist/src/index.d.ts","../../../node_modules/pvtsutils/build/index.d.ts","../../../node_modules/asn1js/build/index.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/types.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/enums.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/types/bit_string.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/types/octet_string.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/types/index.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/converters.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/decorators.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/parser.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/serializer.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/errors/schema_validation.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/errors/index.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/objects.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/convert.d.ts","../../../node_modules/@peculiar/asn1-schema/build/types/index.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/name.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/general_name.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/authority_information_access.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/types.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/authority_key_identifier.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/basic_constraints.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/general_names.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/certificate_issuer.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/certificate_policies.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/crl_number.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/crl_delta_indicator.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/crl_distribution_points.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/crl_freshest.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/crl_issuing_distribution_point.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/crl_reason.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/extended_key_usage.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/inhibit_any_policy.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/invalidity_date.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/issuer_alternative_name.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/key_usage.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/name_constraints.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/policy_constraints.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/policy_mappings.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/subject_alternative_name.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/attribute.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/subject_directory_attributes.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/subject_key_identifier.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/private_key_usage_period.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/entrust_version_info.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/subject_info_access.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extensions/index.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/algorithm_identifier.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/subject_public_key_info.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/time.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/validity.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/extension.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/tbs_certificate.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/certificate.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/tbs_cert_list.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/certificate_list.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/object_identifiers.d.ts","../../../node_modules/@peculiar/asn1-x509/build/types/index.d.ts","../../../node_modules/@peculiar/webcrypto/index.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/parameters/rsaes_oaep.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/parameters/rsassa_pss.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/parameters/rsassa_pkcs1_v1_5.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/parameters/index.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/algorithms.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/object_identifiers.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/other_prime_info.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/rsa_private_key.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/rsa_public_key.d.ts","../../../node_modules/@peculiar/asn1-rsa/build/types/index.d.ts","../../../node_modules/@peculiar/asn1-csr/build/types/attributes.d.ts","../../../node_modules/@peculiar/asn1-csr/build/types/certification_request_info.d.ts","../../../node_modules/@peculiar/asn1-csr/build/types/certification_request.d.ts","../../../node_modules/@peculiar/asn1-csr/build/types/index.d.ts","../../../node_modules/@peculiar/x509/build/index.d.ts","../../../node_modules/uint8arrays/dist/src/concat.d.ts","../../../node_modules/multiformats/dist/src/codecs/json.d.ts","../../../node_modules/multiformats/dist/src/codecs/raw.d.ts","../../../node_modules/multiformats/dist/src/bases/base.d.ts","../../../node_modules/multiformats/dist/src/basics.d.ts","../../../node_modules/uint8arrays/dist/src/util/bases.d.ts","../../../node_modules/uint8arrays/dist/src/from-string.d.ts","../../../node_modules/uint8arrays/dist/src/to-string.d.ts","../../../node_modules/protons-runtime/dist/src/codec.d.ts","../../../node_modules/protons-runtime/dist/src/decode.d.ts","../../../node_modules/protons-runtime/dist/src/encode.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/enum.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/message.d.ts","../../../node_modules/protons-runtime/dist/src/utils/reader.d.ts","../../../node_modules/protons-runtime/dist/src/utils/writer.d.ts","../../../node_modules/protons-runtime/dist/src/index.d.ts","../src/pb/index.ts","../src/utils.ts","../src/tls.ts","../src/index.ts","../src/tls.browser.ts","../../logger/dist/src/index.d.ts","../../../node_modules/@types/chai/index.d.ts","../../../node_modules/@types/chai-as-promised/index.d.ts","../../../node_modules/chai-parentheses/index.d.ts","../../../node_modules/@types/chai-subset/index.d.ts","../../../node_modules/chai-bites/index.d.ts","../../../node_modules/@types/chai-string/index.d.ts","../../../node_modules/aegir/dist/utils/chai.d.ts","../../../node_modules/it-pair/dist/src/duplex.d.ts","../../../node_modules/@types/sinonjs__fake-timers/index.d.ts","../../../node_modules/@types/sinon/index.d.ts","../../../node_modules/sinon-ts/dist/src/index.d.ts","../test/index.spec.ts","../test/fixtures/test-vectors.ts","../test/utils.spec.ts","../../../node_modules/@babel/types/lib/index.d.ts","../../../node_modules/@types/babel__generator/index.d.ts","../../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../../node_modules/@types/babel__template/index.d.ts","../../../node_modules/@types/babel__traverse/index.d.ts","../../../node_modules/@types/babel__core/index.d.ts","../../../node_modules/keyv/src/index.d.ts","../../../node_modules/@types/http-cache-semantics/index.d.ts","../../../node_modules/@types/responselike/index.d.ts","../../../node_modules/@types/cacheable-request/index.d.ts","../../../node_modules/@types/ms/index.d.ts","../../../node_modules/@types/debug/index.d.ts","../../../node_modules/@types/dns-packet/index.d.ts","../../../node_modules/@types/graceful-fs/index.d.ts","../../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../../node_modules/@types/istanbul-lib-report/index.d.ts","../../../node_modules/@types/istanbul-reports/index.d.ts","../../../node_modules/@types/json-schema/index.d.ts","../../../node_modules/@types/json5/index.d.ts","../../../node_modules/@types/keyv/index.d.ts","../../../node_modules/@types/linkify-it/build/index.cjs.d.ts","../../../node_modules/@types/linkify-it/index.d.ts","../../../node_modules/@types/lodash/common/common.d.ts","../../../node_modules/@types/lodash/common/array.d.ts","../../../node_modules/@types/lodash/common/collection.d.ts","../../../node_modules/@types/lodash/common/date.d.ts","../../../node_modules/@types/lodash/common/function.d.ts","../../../node_modules/@types/lodash/common/lang.d.ts","../../../node_modules/@types/lodash/common/math.d.ts","../../../node_modules/@types/lodash/common/number.d.ts","../../../node_modules/@types/lodash/common/object.d.ts","../../../node_modules/@types/lodash/common/seq.d.ts","../../../node_modules/@types/lodash/common/string.d.ts","../../../node_modules/@types/lodash/common/util.d.ts","../../../node_modules/@types/lodash/index.d.ts","../../../node_modules/@types/lodash.random/index.d.ts","../../../node_modules/@types/lodash.range/index.d.ts","../../../node_modules/@types/mdurl/build/index.cjs.d.ts","../../../node_modules/@types/mdurl/index.d.ts","../../../node_modules/@types/markdown-it/dist/index.cjs.d.ts","../../../node_modules/@types/markdown-it/index.d.ts","../../../node_modules/@types/unist/index.d.ts","../../../node_modules/@types/mdast/index.d.ts","../../../node_modules/@types/minimatch/index.d.ts","../../../node_modules/@types/minimist/index.d.ts","../../../node_modules/@types/mocha/index.d.ts","../../../node_modules/@types/multicast-dns/index.d.ts","../../../node_modules/@types/netmask/index.d.ts","../../../node_modules/@types/node-forge/index.d.ts","../../../node_modules/@types/normalize-package-data/index.d.ts","../../../node_modules/@types/parse-json/index.d.ts","../../../node_modules/@types/retry/index.d.ts","../../../node_modules/@types/semver/classes/semver.d.ts","../../../node_modules/@types/semver/functions/parse.d.ts","../../../node_modules/@types/semver/functions/valid.d.ts","../../../node_modules/@types/semver/functions/clean.d.ts","../../../node_modules/@types/semver/functions/inc.d.ts","../../../node_modules/@types/semver/functions/diff.d.ts","../../../node_modules/@types/semver/functions/major.d.ts","../../../node_modules/@types/semver/functions/minor.d.ts","../../../node_modules/@types/semver/functions/patch.d.ts","../../../node_modules/@types/semver/functions/prerelease.d.ts","../../../node_modules/@types/semver/functions/compare.d.ts","../../../node_modules/@types/semver/functions/rcompare.d.ts","../../../node_modules/@types/semver/functions/compare-loose.d.ts","../../../node_modules/@types/semver/functions/compare-build.d.ts","../../../node_modules/@types/semver/functions/sort.d.ts","../../../node_modules/@types/semver/functions/rsort.d.ts","../../../node_modules/@types/semver/functions/gt.d.ts","../../../node_modules/@types/semver/functions/lt.d.ts","../../../node_modules/@types/semver/functions/eq.d.ts","../../../node_modules/@types/semver/functions/neq.d.ts","../../../node_modules/@types/semver/functions/gte.d.ts","../../../node_modules/@types/semver/functions/lte.d.ts","../../../node_modules/@types/semver/functions/cmp.d.ts","../../../node_modules/@types/semver/functions/coerce.d.ts","../../../node_modules/@types/semver/classes/comparator.d.ts","../../../node_modules/@types/semver/classes/range.d.ts","../../../node_modules/@types/semver/functions/satisfies.d.ts","../../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../../node_modules/@types/semver/ranges/min-version.d.ts","../../../node_modules/@types/semver/ranges/valid.d.ts","../../../node_modules/@types/semver/ranges/outside.d.ts","../../../node_modules/@types/semver/ranges/gtr.d.ts","../../../node_modules/@types/semver/ranges/ltr.d.ts","../../../node_modules/@types/semver/ranges/intersects.d.ts","../../../node_modules/@types/semver/ranges/simplify.d.ts","../../../node_modules/@types/semver/ranges/subset.d.ts","../../../node_modules/@types/semver/internals/identifiers.d.ts","../../../node_modules/@types/semver/index.d.ts","../../../node_modules/@types/stack-utils/index.d.ts","../../../node_modules/@types/strip-bom/index.d.ts","../../../node_modules/@types/strip-json-comments/index.d.ts","../../../node_modules/@types/tdigest/index.d.ts","../../../node_modules/@types/which/index.d.ts","../../../node_modules/@types/ws/index.d.ts","../../../node_modules/@types/xsalsa20/index.d.ts","../../../node_modules/@types/yargs-parser/index.d.ts","../../../node_modules/@types/yargs/index.d.ts","../../../node_modules/@types/yauzl/index.d.ts"],"fileInfos":[{"version":"824cb491a40f7e8fdeb56f1df5edf91b23f3e3ee6b4cde84d4a99be32338faee","affectsGlobalScope":true},"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","5514e54f17d6d74ecefedc73c504eadffdeda79c7ea205cf9febead32d45c4bc","1c0cdb8dc619bc549c3e5020643e7cf7ae7940058e8c7e5aefa5871b6d86f44b",{"version":"87d693a4920d794a73384b3c779cadcb8548ac6945aa7a925832fe2418c9527a","affectsGlobalScope":true},{"version":"76f838d5d49b65de83bc345c04aa54c62a3cfdb72a477dc0c0fce89a30596c30","affectsGlobalScope":true},{"version":"db88e2781075c7bca86634724f38a132de718ddf3a470a3a2cdb182f4364af9e","affectsGlobalScope":true},{"version":"138fb588d26538783b78d1e3b2c2cc12d55840b97bf5e08bca7f7a174fbe2f17","affectsGlobalScope":true},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true},{"version":"bc47685641087c015972a3f072480889f0d6c65515f12bd85222f49a98952ed7","affectsGlobalScope":true},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true},{"version":"6fc23bb8c3965964be8c597310a2878b53a0306edb71d4b5a4dfe760186bcc01","affectsGlobalScope":true},{"version":"ea011c76963fb15ef1cdd7ce6a6808b46322c527de2077b6cfdf23ae6f5f9ec7","affectsGlobalScope":true},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true},{"version":"bb42a7797d996412ecdc5b2787720de477103a0b2e53058569069a0e2bae6c7e","affectsGlobalScope":true},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true},{"version":"b541a838a13f9234aba650a825393ffc2292dc0fc87681a5d81ef0c96d281e7a","affectsGlobalScope":true},{"version":"b20fe0eca9a4e405f1a5ae24a2b3290b37cf7f21eba6cbe4fc3fab979237d4f3","affectsGlobalScope":true},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true},{"version":"49ed889be54031e1044af0ad2c603d627b8bda8b50c1a68435fe85583901d072","affectsGlobalScope":true},{"version":"e93d098658ce4f0c8a0779e6cab91d0259efb88a318137f686ad76f8410ca270","affectsGlobalScope":true},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true},{"version":"5e07ed3809d48205d5b985642a59f2eba47c402374a7cf8006b686f79efadcbd","affectsGlobalScope":true},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true},{"version":"8073890e29d2f46fdbc19b8d6d2eb9ea58db9a2052f8640af20baff9afbc8640","affectsGlobalScope":true},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true},{"version":"51e547984877a62227042850456de71a5c45e7fe86b7c975c6e68896c86fa23b","affectsGlobalScope":true},{"version":"956d27abdea9652e8368ce029bb1e0b9174e9678a273529f426df4b3d90abd60","affectsGlobalScope":true},{"version":"4fa6ed14e98aa80b91f61b9805c653ee82af3502dc21c9da5268d3857772ca05","affectsGlobalScope":true},{"version":"e6633e05da3ff36e6da2ec170d0d03ccf33de50ca4dc6f5aeecb572cedd162fb","affectsGlobalScope":true},{"version":"d8670852241d4c6e03f2b89d67497a4bbefe29ecaa5a444e2c11a9b05e6fccc6","affectsGlobalScope":true},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true},{"version":"caccc56c72713969e1cfe5c3d44e5bab151544d9d2b373d7dbe5a1e4166652be","affectsGlobalScope":true},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true},{"version":"50d53ccd31f6667aff66e3d62adf948879a3a16f05d89882d1188084ee415bbc","affectsGlobalScope":true},{"version":"08a58483392df5fcc1db57d782e87734f77ae9eab42516028acbfe46f29a3ef7","affectsGlobalScope":true},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true},{"version":"33358442698bb565130f52ba79bfd3d4d484ac85fe33f3cb1759c54d18201393","affectsGlobalScope":true},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true},{"version":"63a8e69b5da45fa8a4605330d85ce99dd995d49be068869841c9c88b928fad8d","signature":"4fd8fa01907c16f6aaf2069b8be4da648a484e031f8e93c449a358501f7b6160"},"4a3605bef1a5ef29fd5a1696dd95b0b4e2259e2d07a4d88fac79f3a9765c44a2","370079895f1acdd4bb5194a403c85bf60cfbb2654bced9430a6c7210e7246be8","90240231e730deed31569f6c686766a538e4a024bbc33ea1738fe924f477ba61","552223520e823223ee13c5764e9b69b1819c985818a8bcda435d8d1dbd909bee","49b7c3ddd683c09aa437dd92681699387441f522524b14d2331ce494a9bf2f27","d35b5db21a04a45ae6323c4d4b25acc983dfe2870fc670fd05249eb19d839a5e","ae34b0761f88cf20e922e338970944f0e3abf193cfd4c5589bb03dddd3ca6fc0","72b129e625a479942a4f9e8a1bc12c45c09bbbf6ebae147418584441eb9fba18","5212dd78d1d63ab33332c8846a0ea5ce248159e74033cde16de48373036b4704","954b3c04ee9f94ca1e262f3e5a6e833b0da0066514b3d4b97b92b7f0c85f8700","a2fc9ce1ae5bed7068d701d8aeebf13321de0f42c217dc2e10f1622dcaa53a7f","8e81f220cb935d551e88cff11541d5e89d3a3494a52fe6247e98016a9dbd4c2d","6b2576a04253626ba41b7dc7ec5977bec07f3b6952b16249d9fa8a3a0d79901c","9de17491f2bfbccea92500e174079d53bdedae34dbebe5d4a12a06ab09814710","e88481085a8576fa52efc913e631c1a833d16179486469b8538d8c4fab2f7381","cc8c0bbe9fa2399c83e9f5492f82c55fe184380a371dd6fa462586c6563b054b","d71577e78c7a4257074aaf82f595724175210c89e8b467ef82f949a6cbd891bc","52e78315d331eeec07e0fabb68af969e7cdb28eafeeda17fca75897764a53f0b","c84146dbc9d2e5f43d2cbf15485a4eabf90219dbb66c0d481f20f12d3851bffc","0e60facf95fee2b8f31c3ec2c6c6ce109a66efed595573ca5d421b7b6c9c3a2c","c7bdf13966d47b3b3cf9de4ce1647184717579990cc7143602f02ab224e9bfc6","1caea122dbc7febedf852183deb445487389b9e5a45f7d882514d0b265a96b5d","4105fa0ecfaffb578c8051c3de22e8c984191aac8de14641ee99beed9c5e5bd9","2c19a03df944b85c8c7a77d1f2b1e77d5b26b50bde7e57debb6c1ed785e92f18","1bbbb729d5e059dd824378618907b92dab35947f0a76ecb538891b4d9f5cc0a7","b04614c3b8ee002251cd53eab5360ad5f4826b647ff7471880622862d5edc6d1","87bf184334d223bd9bfa40396fbf691a293107450007937da6939be5ff6f26c7","76b9fa1e321d1a3df90391e97234009ab3a36e55965a53a74038949994b8fb23","203ec8a834b94ec13b9ef098b53024571e1870435d766b9d3614de00591d97a4","44fa41130045a0256c73b8f94d0885d1a170063b543ddf7324293b21af4b18b6","e366f299ffda4f8edc5505de39658396ed0854d2de1588ae94ad5ffc11505ae9","b03970cda480a5f25fed4b7dc4e7cc3bb489543009ec6fd0a7b565fd718a9161","89346453b46aeb38468711a4880156f29b1eea4eab823bd53802965b3d3fc27d","b3817c7c3c5bb0e9b7eda3c5db73195f953b2369da71e2807218a86075ca31e5","fac83d4c6898d5bf90c508cc84409ded40fdc14611cf42d7fb750fb2c7847979","f08fe1c58de495300c4770cc782f7f1253db35942680427000bcc582b6adedf7","87294fac7de723d78ac6572f168446d0df2698259e7d88526493046df05cc103","75848e9f0cfb046e64bc8610b0b07e97288d340196a2d5bc6bcbf01e595a81d9",{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a",{"version":"613b21ccdf3be6329d56e6caa13b258c842edf8377be7bc9f014ed14cdcfc308","affectsGlobalScope":true},{"version":"2d1319e6b5d0efd8c5eae07eb864a00102151e8b9afddd2d45db52e9aae002c4","affectsGlobalScope":true},"4967529644e391115ca5592184d4b63980569adf60ee685f968fd59ab1557188","5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107",{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true},"4f0539c58717cbc8b73acb29f9e992ab5ff20adba5f9b57130691c7f9b186a4d","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0",{"version":"53eac70430b30089a3a1959d8306b0f9cfaf0de75224b68ef25243e0b5ad1ca3","affectsGlobalScope":true},"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7",{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true},"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb",{"version":"86956cc2eb9dd371d6fab493d326a574afedebf76eef3fa7833b8e0d9b52d6f1","affectsGlobalScope":true},"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393",{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true},"1ff5a53a58e756d2661b73ba60ffe274231a4432d21f7a2d0d9e4f6aa99f4283","1e289f30a48126935a5d408a91129a13a59c9b0f8c007a816f9f16ef821e144e","2ea254f944dfe131df1264d1fb96e4b1f7d110195b21f1f5dbb68fdd394e5518","5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6",{"version":"b11cb909327c874a4e81bfb390bf0d231e5bf9439052689ab80ba8afa50da17b","affectsGlobalScope":true},"23459c1915878a7c1e86e8bdb9c187cddd3aea105b8b1dfce512f093c969bc7e","b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0",{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true},{"version":"5f6f1d54779d0b9ed152b0516b0958cd34889764c1190434bbf18e7a8bb884cd","affectsGlobalScope":true},"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","f7b1df115dbd1b8522cba4f404a9f4fdcd5169e2137129187ffeee9d287e4fd1","b52d379b4939681f3781d1cfd5b2c3cbb35e7e76f2425172e165782f8a08228c","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633",{"version":"745c4240220559bd340c8aeb6e3c5270a709d3565e934dc22a69c304703956bc","affectsGlobalScope":true},"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada",{"version":"993985beef40c7d113f6dd8f0ba26eed63028b691fbfeb6a5b63f26408dd2c6d","affectsGlobalScope":true},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true},"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4",{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true},{"version":"cb094bb347d7df3380299eb69836c2c8758626ecf45917577707c03cf816b6f4","affectsGlobalScope":true},"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","b02784111b3fc9c38590cd4339ff8718f9329a6f4d3fd66e9744a1dcd1d7e191","ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a",{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true},"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","171fd8807643c46a9d17e843959abdf10480d57d60d38d061fb44a4c8d4a8cc4","05f95704d66f66f9368dc98d2da27016ed24ed11d521be55e32d167b88bc56fa","22672b675a503d25f875fe89500c7817e491b7a1d8fdedf3af06487333c372c4","929fc31f7523aaa1d19735b77e637af06e58d76007648ec088ecfbec1521cbfe","3d0e04c8ca3f41da5f3d689500d9c4aeb54a1c59764d66d58f0e579b9af720e5","a6eb23f2a83113ce0ab7203bfda2be0888720f8d694a20abaef83b9f62832061","363dca5004ac5a3d9c2bba12812b97a64461911762f0b8f9320a8856ec53bcad","1447d46bff9e7c5c77da14515a7456ea5e919ce6e28f5e6746edf99818e4be47","557b8c7481296f4b7ed362320f3bbb40bb87404edf880c81224f365a8d1e17f3","283ed3d075bf7d3e8793f63b2a52f475ed84d95b7b6351c5d5bcc6c49d4b845b","7a6f74294b8fb90f5e3832be21e25898dd81b2a1adc36dda6929813ba4135311","3f1370424c252aed11747282fc619f04497e426f63917bf2182fd46d51adc58a","5d40e6a7071d0d1e6e558e17214ff786ecb3ea73e31b25a88c2cbe2435fa1252","63af39c32770e76461a821b811cffda4589dccf43a80e0a8bf8c001fbf859e44","bba09f0aea6126a8437dd7ee4ae0e54da0ebe6ef5b48c336689b9041b3161f67","2c38c5a35abace8b5753d25ad432308250cdd13137ce787fc83a72f58bb2b295","93c4ac34d56bf2680d729ce053ee25593de4b0f64c19e1e348e3d273cd56eb47","1e75426f50206d6051bd026569a111b03068331cf4d1e065a124944710881ff3","1e3e86472f8b5f42f9b64836bcdf9de1123dfde416b87e601a578cabd8f01de0","72882059930c7d48883c3c4e5e086afa9b950e68b4b56266820974e1e365113a","c417a2ce04187b1721e111de8795421e2da7654a9b233df2da78f975eeda0b52","9b40e7713a003bd280fb0a325e2987bb75673853ef31b066b3da497a557a59d4","ce1e3bd9aa61997b6840a9afafc5e7d83532a10869b47d4b452f43b4e6806845","50d7fbc05e393d75c702a273514b55078642aa5b11696d303ddd7d1b7df65f90","0d89f0288c3544fd4dac63e02d09c517a0510860aca3c831996e6399c6d5a959","a2d1b96aa2b1b123796e8efccd0150a9efd61d0e2907d5fc6cffbdbdf2af29c3","e52bd78483827df2147cd92105a52436f5a73540b7b239467229c027558a0a11","01ec723a92332b93d1612d7644b7ec73a6d0b4a16ef854e970189aed79f2a1c3","0143fe5d5217789b61e8e117bd45dce463fb938b67c55cd5d033a7644c09b949","a64856c125f9caa1e4a9c5faa74b033ef5755d7d38b42f3a45dd9353ec831828","a3427c5d31b60052fe2b3beb4cf3cd359c1040f27cf52705ea14ee7b26f7a29c","483a4152349e90ddb11e4b31a66e54cdf06e198bb1c7da78f34f475f0d795699","e2046af06918f93517b7e51df90aa70d69c1381d6bdd0314b6602f492068c1c0","27a99622f9eeefcac5f074d910105377709f325b807d42ccd42de16e192c8d1c","6d3706a72d51cc7a76f9acf2754eb2f5a54543b8183a2edb9a66a13dc341afb8","3686372948a5b78e835d693e5bdd758cdfeeba573f4ce0c7ae787880c76a7ef4","0df559ee55ba86cbc54eda355e46e9470a4e58733aa7e087a182cceea3b91f13","4766fb2bd69e49be6b2638ea95e8ff7e9a4dc075810757a74751643112e369fd","b7950197509bc2906caa33efd53ffcdf3fdc5c527876b0a975ac81c1fc5d1778","7cd94e98a681e17c2245abf76413a28a722e729dea5d0284ebbe2b9d791cd7f9","a48473b998c2c3e5703b78b9ee6b42c7b22debbacaedd30a050338ea77731614","65b03686081016814ca314b59b43b0982830a345eabe6e26054d8f3326699e7b","fd17a2088ae71c52fe7700789c0b64bd9b96d1926ece1e2a9ca12550bcbadd93","ebe2e704fd46d33079ac752073e13bca3892fc9c2311f0984c98cb30dc9f4748","2f2ae8b91233abc4787b657ddfbdf617b9dd0eb1b75a54eceec26b9105951fc5","c23a29b90abc77fc56c31632732dbabd10b20a2e41d9b7c127a60720b4b50073","ec5cf79ea791f335a8c53fd9cf0a6cee834537ef5a818f4b3957fd932ed5263a","50b5babc3f31df0b6c6ec7b26e30fa59576531c2ef996452de009011336d1c65","cccdd1fef21b344361fc612c1c6392d4c03a6a884464c7165856105f6615cf0b","51690f7c594878319bf01227ea0cbd7ce78f30d86b86ce9898d022783988ac86","925c869ff56857119378ba7b967a90d9ecf93de61854f3d9dfd9943eb6f3c061","a90e4524ac03a0228280eaccdd43648e33f014d35a6c754074bc695cbfc5461d","6fd50c8aa5567e452e9a716604ff334e5cad73d862f8cce7c83930299f6f5c5c","e1f57d4bbb6ea0901b2abd1f90c181c8859ef04ffca6734aaf53f164aa109b93","66af8067cebdb9197c541ebe55029648e05a4b6f583e48c7cda88baefbdc855b","8b68073e1b6389f61ab7e5fcdc34bc29493ca0426cc0feb1a75900466c463e1a","02d196e7b8cf9fbca9d2af0f6691aafab020730379d3f9c423cdb4dc8fc6b3fb","3ce3cc603029c7aedbd123751bc20cc130f44db5b00e47d68c7469bcc8c6ab76","04fa773741a17791d35ad960e2799e85914c6f8d828ba6287e8099d701b00390","35acc11bb8a4804cdef1328ba1f6bc701582baeadf2857b54cb386b30b5cded0","57d67140e5ca4bfe922c4e5fb366fa24858a17eee380ef8e99718544a99119c8","cdd8bbe8685b4b181a1e8ee5ac04141096ee32f747d39c01a173df516c9700a4","56e6b86fe7a2546ff3c2839f0dc6694922ee3f0135443da82a444182764a53e1","cf9f362d20cb6552cf94915ba5d5974bfea62fd157ed53d6f9526b5f00244ec2","f43142161178a862dac3a97b0a7410062b20199e4f6935f2d820acc92227b838","169cc5d130357dc39f499eafc67bb1f3eee0437405ac0a31d2f5bc7634777035","ac9c649a3d8faddc431ee3f126697c75fedc22f9e5a4a58c3fda22153afae933","8c1225225ea73e32de5f1d65ab1e77679ec375cb429e580e6447f4a7ec77d472","570363e5fc7446e5b3d5315442e59df20383faad9816fad59af5335e460952af","cdadd0939407311eba1c3d6790c12fd35e9dc29a6e6720e3b53cec727b45c7f1","3977d5629818b2fdbe7b6e49dbe9bd785eee68d3c359861b2d707696ad2b49af","f309d5777c84030f72f5b3e2dc047e3357e5b3c5f02ce95062133c2dfe2c57cd","440f12b508c646dd5819a984dec7d3e07ae0528876ec3b7d9a958964ef156340","5811b8db345ec95d3e9872ae16076505a20477b060ed2ba2fa8fbd0c09390680","8476f4079a80bdd76cc1181842de97cbad393688c57d0e0e0e56ab1081bfe4ca","02c4616c31591b9d5ce03f3b2a4a9986523ba07c328b2479af2dc347cf8d2127","e24eae504fa4a72b04810b19e5e53d1ab1fb4f6f4ce3201ea26ce2adef2fb005","8ee823b923b39c9b1d14f81be99cbbfc95130fc603d188f9b9c684e489de8e16","1b9dcdfbc034d053e1de9620429e21a47e61065862ba17a2adcdbe9455b2043b","e31d185c0b9abbda0ddb125673bf6b2e47e1f6463e4a74b39cda23d41d1449ab","c8a785e8b2918c793742b26a8db55b9989dbe2f40de4ada4bd224cab87375a1f","698eb0ae1f1256651ac594eb08f4e99b8075b37ea128937290918076ce6894c4","d6c4a650b3f8fdd6f807ef88815758d2f94903b5880b7935af600e5aec92a641","90440e10256bceb078d15e70805b7796e1e02518e04b1ccde88d27c09452c301","aa3a0b9cbc7032e64043dc9966daba70b43bf8c9c607e6482918091568eef543","c74176a64f8967ccd361a91937f504b1340f48f557c5ea2d4f37bd601ce966e9","6e645ecfaf055877067f39a21e590291680b1d1e06c0256fa50e2fe0dc0e29b2","d7beb7af56d8c7a86aceb947e7a7bed40359113b69976621478fc005faf75d28","954e242fc996765844366307161d41a9410dc3f7ce9ebcde93f3e9a718ea0692","2e34b7e7c07624978db18b34c8a528928a7c24bc4b047add3e9d90bdc49e267f","ba3f6f0ee47f46cdce55620aec5726de80e92a930982634afe9918c114c38f0b","6f38045547cdfd54ec19abcd943cace72c775fde739c5e0e1d917cf3030c16b5","6544dab49004fecb69a4ef775e9ad2773a6148b1f9bfd9b75508e3afa11f5d35","b499490bd2f0d602501eb24d4e91ccb2d7fdfd24acb86889d74d5f16ac15c4ca","e2dd36a524ea5b13de1ed104ede9cea79696588175c1df1940d6a29113a4aee0","ac63a01fcac70315fc9b416e9a57e568b18032c7cfcaa314e1751f03ef71286f","a878d4c7237a7af50e96534295fcf723134d70cbb1e9bfd8365266b912aee6ec","6d268309f0e15dd820b2df9806234166554cb4e2fe00d11737adcb4e5489f700","58cf96187feb10cc8ad3bb080871cd30888ef63bc5db131f11458850ef8f6245","9102986ff52326a2016e8cddc1cf3092f0808ac916dcc8dc2d2c7195cd181987","fa82b7b22d9df87323e31e9e2ad75911028f3e544647fd212424b3c4452fee3f","01f20dac9dc14f0d306e5d1215c5c1c3b4d1805905e60ae92fabac4031eae7da","9ceec2a882368c0160a8a3879aa0efce0fb985751fc23ff6191006030969cfa4","cad5d6451789234434c28dd2d6a8267b0d64c479b1ad267321faa31ba90d570b","6516fc98fa10b0cb22c7e332bacea4a7ea80257e113f6cdddd924d03bfde218e",{"version":"e8ba45b95ff0c329bc94a7c2d15f006de2a53e7c1ccd065523b71999c053bb45","signature":"a4ff39b3bfd2c6936c165e26f61d652714838bc832449c692391f67b255f2c7d"},{"version":"c1ae74923f075b07e6e449b38be906f5212b71ef651fca8a7fed1d5df3a90c87","signature":"ada24ff010d10707eaaab92ea23a5b135b172959dc785a9be4893fb28e7f654a"},{"version":"e068322d2b659a2228a2b156c393fc23906f68cd07aedc2777895d6792ca3bdc","signature":"232d7f02a93aac1a284e85af3915a04b5e98970c5d6dcf5c840b5e0935c1cde8"},{"version":"a04e050a80ac41edce5e3720ac63b5ffde0c06dcfe4cded047bfd81cc318a436","signature":"660531e44d8593bef72fe42f865ae5a2526c92339852b1ffbc70a7c264988c4d"},{"version":"6c01e0ed937061e11861352247e3059996e738572f1b523db05369ebdc943036","signature":"ed1e67399255c850659d2f88349baac37ad11a36f0d7619e54eb472e18aa3431"},"3d53e5e411caeb49b5238ee5675b305745157bff28c26afd81c6a3ee8694fa83",{"version":"eef204f061321360559bd19235ea32a9d55b3ec22a362cc78d14ef50d4db4490","affectsGlobalScope":true},{"version":"86e56d97b13ef0a58bc9c59aee782ae7d47d63802b5b32129ec5e5d62c20dbfa","affectsGlobalScope":true},{"version":"c1f79c6d85cd84518fd7349588b3c61bdc189f58e3866f925cbf4631c81e31f9","affectsGlobalScope":true},{"version":"54db406753da16e177f094aa66da79840f447de6d87ddd1543a80c9418c52545","affectsGlobalScope":true},{"version":"42f28f4cfca4a70bd89c1d55d76c7978275030b894f6793f36890265c11a83a4","affectsGlobalScope":true},{"version":"7cf1027da9599f056355b46bbea31dbf7f715f797dffb9cbb3402d4490c503e5","affectsGlobalScope":true},"96dbd0787b57ae02981d26d5f2441f0f8444fb46d7578c56527eab89cff13a7d","b1129d7c114eba7c7b155dc809d6371ef86a0738f7ca93b3efef9b796d6168d9","7d2a0ba1297be385a89b5515b88cd31b4a1eeef5236f710166dc1b36b1741e1b","6175dda01fddf3684d6261d97d169d86b024eceb2cc20041936c068789230f8f","8d16e3ff29dd0650435766702b01c2f7e9d1f289a48fcbf8e93687d6ecf33f26",{"version":"b44364b86abbab0c1468350cabab8552ba6cab01ce1a74272004b32460dd50df","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"7753f89494a355e41bae9431cfbdbfc16e7ca504e096691d25dfad32efd42792","signature":"7a4601f2516d0f7cb5900a982d4d9f815b1f288cde90de0cae97312ca97cba19"},{"version":"e8d5e4828efacc9b271280610217cb5ee305465dacf81d3f2a689d58d9217349","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"8d27e5f73b75340198b2df36f39326f693743e64006bd7b88a925a5f285df628","2c8e55457aaf4902941dfdba4061935922e8ee6e120539c9801cd7b400fae050","1c2cd862994b1fbed3cde0d1e8de47835ff112d197a3debfddf7b2ee3b2c52bc","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","9e0cf651e8e2c5b9bebbabdff2f7c6f8cedd91b1d9afcc0a854cdff053a88f1b","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","42baf4ca38c38deaf411ea73f37bc39ff56c6e5c761a968b64ac1b25c92b5cd8","d7dbe0ad36bdca8a6ecf143422a48e72cc8927bab7b23a1a2485c2f78a7022c6","8718fa41d7cf4aa91de4e8f164c90f88e0bf343aa92a1b9b725a9c675c64e16b","f992cd6cc0bcbaa4e6c810468c90f2d8595f8c6c3cf050c806397d3de8585562","fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","3eb11dbf3489064a47a2e1cf9d261b1f100ef0b3b50ffca6c44dd99d6dd81ac1","bc222163edcb8df6ba9b506d053d6c5afcae50e85695151cf4636a3107deaba9","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","fec943fdb3275eb6e006b35e04a8e2e99e9adf3f4b969ddf15315ac7575a93e4","742f21debb3937c3839a63245648238555bdab1ea095d43fd10c88a64029bf76","7cfdf3b9a5ba934a058bfc9390c074104dc7223b7e3c16fd5335206d789bc3d3","7220461ab7f6d600b313ce621346c315c3a0ebc65b5c6f268488c5c55b68d319","f90d4c1ae3af9afb35920b984ba3e41bdd43f0dc7bae890b89fbd52b978f0cac","fcf79300e5257a23ed3bacaa6861d7c645139c6f7ece134d15e6669447e5e6db","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","aa2c18a1b5a086bbcaae10a4efba409cc95ba7287d8cf8f2591b53704fea3dea","b88749bdb18fc1398370e33aa72bc4f88274118f4960e61ce26605f9b33c5ba2","0aaef8cded245bf5036a7a40b65622dd6c4da71f7a35343112edbe112b348a1e","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","a873c50d3e47c21aa09fbe1e2023d9a44efb07cc0cb8c72f418bf301b0771fd3","7c14ccd2eaa82619fffc1bfa877eb68a012e9fb723d07ee98db451fadb618906","288d992cd0d35fd4bb5a0f23df62114b8bfbc53e55b96a4ad00dde7e6fb72e31","df996e25faa505f85aeb294d15ebe61b399cf1d1e49959cdfaf2cc0815c203f9","4f6a12044ee6f458db11964153830abbc499e73d065c51c329ec97407f4b13dd","13e834b958fe7e9010d2161497f98916974a0618be7a773281a253a948da8b0d","dae5c8e0ca15779492744cb4071c5b3c94c2121940fbaefb43ca9a045557a0c9","0944f27ebff4b20646b71e7e3faaaae50a6debd40bc63e225de1320dd15c5795","5d30565583300c9256072a013ac0318cc603ff769b4c5cafc222394ea93963e1","8a7219b41d3c1c93f3f3b779146f313efade2404eeece88dcd366df7e2364977","a109c4289d59d9019cfe1eeab506fe57817ee549499b02a83a7e9d3bdf662d63","89121c1bf2990f5219bfd802a3e7fc557de447c62058d6af68d6b6348d64499a","d4a22007b481fe2a2e6bfd3a42c00cd62d41edb36d30fc4697df2692e9891fc8","8841e2aa774b89bd23302dede20663306dc1b9902431ac64b24be8b8d0e3f649","fbca5ffaebf282ec3cdac47b0d1d4a138a8b0bb32105251a38acb235087d3318",{"version":"29f72ec1289ae3aeda78bf14b38086d3d803262ac13904b400422941a26a3636","affectsGlobalScope":true},"62a8effc4dd17bbc2c05927b4ca5f67e73fdb458e203b128c041d0d70ffa6b55","d3213ac97e906cb1a935cf80061aacdb05a943a4d0316b469ab44565c34147f2","8b5402ae709d042c3530ed3506c135a967159f42aed3221267e70c5b7240b577","22293bd6fa12747929f8dfca3ec1684a3fe08638aa18023dd286ab337e88a592","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","7d8ddf0f021c53099e34ee831a06c394d50371816caa98684812f089b4c6b3d4","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","4006c872e38a2c4e09c593bc0cdd32b7b4f5c4843910bea0def631c483fff6c5","ab6aa3a65d473871ee093e3b7b71ed0f9c69e07d1d4295f45c9efd91a771241d","41392155643024553ab15aa2074c7ed144958cbfe941aefcdfad119492985885","d9a256f69f3956993e65efd88336644be8f8dd36d149e859c14704ef6c6c0eec","eb15edfcef078300657e1d5d678e1944b3518c2dd8f26792fdba2fe29f73d32b","5aac5efd20619b522faeeb0badf250834850c605ad8c5fb91c6502a54057f413","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","74d5a87c3616cd5d8691059d531504403aa857e09cbaecb1c64dfb9ace0db185"],"root":[64,[306,310],[323,325]],"options":{"allowJs":true,"checkJs":true,"composite":true,"declaration":true,"declarationMap":true,"emitDeclarationOnly":false,"esModuleInterop":true,"module":7,"noEmitOnError":true,"outDir":"./","removeComments":false,"skipLibCheck":true,"sourceMap":true,"strict":true,"stripInternal":true,"target":9},"fileIdsList":[[108,151,326],[108,151],[76,77,108,151],[76,108,151],[74,75,78,108,151],[82,108,151],[73,78,80,81,108,151],[78,80,82,108,151],[79,82,108,151],[108,151,231,273],[108,151,273,286],[108,151,273,285],[108,151,285,286,287],[108,151,273],[108,151,278,279,280,281,282,283],[108,151,231],[108,151,275,276,277],[108,151,281],[108,151,216,218],[108,151,217,218,219,222],[108,151,218,219],[108,151,227],[108,151,218,219,222,223,224,225,226,228,229,230],[108,151,216,217,218],[108,151,217],[108,151,220,221],[108,151,263,268],[108,151,263,270],[108,151,231,233],[108,151,231,233,235],[108,151,233,238],[108,151,241],[108,151,231,232,233],[108,151,243],[108,151,234,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261],[108,151,231,240],[108,151,231,256],[108,151,231,234],[108,151,236],[108,151,231,232],[108,151,232,233,235,238,256,262,263,264,265,266,267,268,269,270,271,272],[108,151,263],[108,151,232,235,263,265,267],[108,151,232,235,263,264,266,267],[108,151,265],[108,151,216,273,284,288],[108,151,326,327,328,329,330],[108,151,326,328],[108,151,163,166,194,201,332,333,334],[108,151,312],[108,151,336],[108,151,201],[108,151,164,201],[108,151,340],[108,151,341],[108,151,163,201],[108,151,346],[108,151,360],[108,151,348,350,351,352,353,354,355,356,357,358,359,360],[108,151,348,349,351,352,353,354,355,356,357,358,359,360],[108,151,349,350,351,352,353,354,355,356,357,358,359,360],[108,151,348,349,350,352,353,354,355,356,357,358,359,360],[108,151,348,349,350,351,353,354,355,356,357,358,359,360],[108,151,348,349,350,351,352,354,355,356,357,358,359,360],[108,151,348,349,350,351,352,353,355,356,357,358,359,360],[108,151,348,349,350,351,352,353,354,356,357,358,359,360],[108,151,348,349,350,351,352,353,354,355,357,358,359,360],[108,151,348,349,350,351,352,353,354,355,356,358,359,360],[108,151,348,349,350,351,352,353,354,355,356,357,359,360],[108,151,348,349,350,351,352,353,354,355,356,357,358,360],[108,151,348,349,350,351,352,353,354,355,356,357,358,359],[108,151,347,364],[108,151,365],[108,151,367],[108,151,363],[108,151,157,163,201,338],[108,148,151],[108,150,151],[108,151,156,186],[108,151,152,157,163,164,171,183,194],[108,151,152,153,163,171],[103,104,105,108,151],[108,151,154,195],[108,151,155,156,164,172],[108,151,156,183,191],[108,151,157,159,163,171],[108,150,151,158],[108,151,159,160],[108,151,163],[108,151,161,163],[108,150,151,163],[108,151,163,164,165,183,194],[108,151,163,164,165,178,183,186],[108,146,151,199],[108,146,151,159,163,166,171,183,194],[108,151,163,164,166,167,171,183,191,194],[108,151,166,168,183,191,194],[108,151,163,169],[108,151,170,194],[108,151,159,163,171,183],[108,151,172],[108,151,173],[108,150,151,174],[108,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],[108,151,176],[108,151,177],[108,151,163,178,179],[108,151,178,180,195,197],[108,151,163,183,184,185,186],[108,151,183,185],[108,151,183,184],[108,151,186],[108,151,187],[108,148,151,183],[108,151,163,189,190],[108,151,189,190],[108,151,156,171,183,191],[108,151,192],[151],[106,107,108,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],[108,151,171,193],[108,151,166,177,194],[108,151,156,195],[108,151,183,196],[108,151,170,197],[108,151,198],[108,151,156,163,165,174,183,194,197,199],[108,151,183,200],[108,151,166,183,201],[108,151,378,417],[108,151,378,402,417],[108,151,417],[108,151,378],[108,151,378,403,417],[108,151,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416],[108,151,403,417],[108,151,320],[108,151,163,166,168,183,191,194,200,201],[108,151,425],[108,151,163,183,201],[108,151,312,313,314,315,316,317],[108,151,216],[108,151,312,313],[83,108,151],[65,108,151],[108,151,210,291,292,293],[68,69,108,151],[68,108,151],[66,108,151],[108,151,208],[67,108,151],[67,108,151,205],[69,108,151,204,205,206,207,209],[65,66,67,68,108,151,208],[65,66,67,108,151],[108,151,305],[108,151,298],[70,108,151,298],[108,151,298,299,300,301,302,303,304],[70,108,151,305],[108,151,321],[108,151,295],[108,151,210,294],[108,118,122,151,194],[108,118,151,183,194],[108,113,151],[108,115,118,151,191,194],[108,151,171,191],[108,113,151,201],[108,115,118,151,171,194],[108,110,111,114,117,151,163,183,194],[108,118,125,151],[108,110,116,151],[108,118,139,140,151],[108,114,118,151,186,194,201],[108,139,151,201],[108,112,113,151,201],[108,118,151],[108,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,151],[108,118,133,151],[108,118,125,126,151],[108,116,118,126,127,151],[108,117,151],[108,110,113,118,151],[108,118,122,126,127,151],[108,122,151],[108,116,118,121,151,194],[108,110,115,118,125,151],[108,151,183],[108,113,118,139,151,199,201],[108,151,203,308],[70,83,108,151,203,309],[64,70,108,151,191,203,307,309],[64,70,83,99,108,151,183,203,214,215,217,231,273,274,289,290,296,297,306],[108,151,203,215,296],[70,108,151,203,214,215,309,311,318,319,321,322],[108,151,274,289,307,311,318,324],[108,151,211],[108,151,203,205,210,211,212,213],[70,72,84,108,151,203],[72,82,84,108,151],[70,72,82,83,108,151,203],[69,85,108,151,203],[71,72,77,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,108,151,202],[67,69,70,108,151],[84,108,151],[85,87,108,151],[67,69,71,108,151],[72,82,108,151],[72,85,108,151,203],[71,72,82,108,151],[70,71,72,84,87,99,108,151],[70,71,108,151],[70,83,84,108,151,203],[72,84,108,151],[77,82,84,87,94,108,151,203],[108,151,203],[67,69,108,151,203],[203],[70,305],[70,83,203],[70,203,309],[70,83,183,203]],"referencedMap":[[328,1],[326,2],[78,3],[75,4],[74,4],[76,5],[81,6],[82,7],[73,6],[79,8],[80,9],[285,10],[287,11],[286,12],[288,13],[279,14],[284,15],[280,2],[281,16],[278,17],[275,14],[277,10],[276,14],[282,18],[283,2],[230,19],[223,20],[224,21],[219,2],[228,22],[227,2],[231,23],[229,2],[225,24],[226,25],[218,25],[220,24],[222,26],[221,24],[263,2],[256,2],[269,27],[271,28],[267,16],[234,29],[236,30],[237,2],[239,31],[240,16],[242,32],[243,33],[244,34],[245,34],[241,2],[246,2],[260,16],[247,16],[262,35],[248,2],[249,2],[250,31],[251,16],[252,29],[253,2],[254,36],[259,2],[255,31],[257,37],[261,38],[258,39],[233,40],[238,29],[273,41],[232,16],[272,2],[264,42],[270,43],[268,44],[265,2],[235,2],[266,45],[274,2],[289,46],[331,47],[327,1],[329,48],[330,1],[335,49],[313,50],[317,50],[315,50],[312,2],[337,51],[338,52],[339,53],[333,2],[340,2],[341,54],[342,55],[343,2],[344,2],[345,56],[346,2],[347,57],[361,58],[362,58],[349,59],[350,60],[348,61],[351,62],[352,63],[353,64],[354,65],[355,66],[356,67],[357,68],[358,69],[359,70],[360,71],[365,72],[366,73],[368,74],[363,2],[364,75],[369,2],[370,2],[371,2],[336,2],[372,76],[373,2],[374,52],[148,77],[149,77],[150,78],[151,79],[152,80],[153,81],[103,2],[106,82],[104,2],[105,2],[154,83],[155,84],[156,85],[157,86],[158,87],[159,88],[160,88],[162,89],[161,90],[163,91],[164,92],[165,93],[147,94],[166,95],[167,96],[168,97],[169,98],[170,99],[171,100],[172,101],[173,102],[174,103],[175,104],[176,105],[177,106],[178,107],[179,107],[180,108],[181,2],[182,2],[183,109],[185,110],[184,111],[186,112],[187,113],[188,114],[189,115],[190,116],[191,117],[192,118],[108,119],[107,2],[201,120],[193,121],[194,122],[195,123],[196,124],[197,125],[198,126],[199,127],[200,128],[375,2],[376,2],[334,129],[377,2],[402,130],[403,131],[378,132],[381,132],[400,130],[401,130],[391,130],[390,133],[388,130],[383,130],[396,130],[394,130],[398,130],[382,130],[395,130],[399,130],[384,130],[385,130],[397,130],[379,130],[386,130],[387,130],[389,130],[393,130],[404,134],[392,130],[380,130],[417,135],[416,2],[411,134],[413,136],[412,134],[405,134],[406,134],[408,134],[410,134],[414,136],[415,136],[407,136],[409,136],[321,137],[320,2],[418,2],[419,2],[420,2],[421,2],[367,2],[422,2],[423,138],[424,52],[425,2],[426,139],[427,140],[318,141],[217,142],[109,2],[316,50],[314,143],[319,144],[99,2],[83,2],[332,89],[293,145],[65,2],[294,146],[66,147],[204,2],[69,148],[208,149],[291,150],[292,150],[205,151],[206,152],[67,2],[210,153],[209,154],[68,155],[207,2],[77,2],[298,156],[301,157],[302,157],[299,158],[300,157],[305,159],[303,160],[304,156],[216,2],[322,161],[62,2],[63,2],[11,2],[12,2],[15,2],[14,2],[2,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[23,2],[3,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[8,2],[52,2],[49,2],[50,2],[51,2],[53,2],[9,2],[54,2],[55,2],[56,2],[59,2],[57,2],[58,2],[60,2],[61,2],[10,2],[1,2],[13,2],[70,2],[290,2],[296,162],[297,162],[295,163],[125,164],[135,165],[124,164],[145,166],[116,167],[115,168],[144,52],[138,169],[143,170],[118,171],[132,172],[117,173],[141,174],[113,175],[112,52],[142,176],[114,177],[119,178],[120,2],[123,178],[110,2],[146,179],[136,180],[127,181],[128,182],[130,183],[126,184],[129,185],[139,52],[121,186],[122,187],[131,188],[111,189],[134,180],[133,178],[137,2],[140,190],[64,2],[309,191],[306,160],[310,192],[308,193],[307,194],[324,195],[323,196],[325,197],[212,198],[214,199],[211,2],[213,198],[96,200],[97,201],[84,202],[86,203],[102,2],[87,2],[202,56],[203,204],[71,205],[88,206],[98,207],[72,208],[85,209],[89,210],[90,211],[100,212],[101,213],[91,2],[92,206],[94,214],[93,215],[95,216],[311,217],[215,218]],"exportedModulesMap":[[328,1],[326,2],[78,3],[75,4],[74,4],[76,5],[81,6],[82,7],[73,6],[79,8],[80,9],[285,10],[287,11],[286,12],[288,13],[279,14],[284,15],[280,2],[281,16],[278,17],[275,14],[277,10],[276,14],[282,18],[283,2],[230,19],[223,20],[224,21],[219,2],[228,22],[227,2],[231,23],[229,2],[225,24],[226,25],[218,25],[220,24],[222,26],[221,24],[263,2],[256,2],[269,27],[271,28],[267,16],[234,29],[236,30],[237,2],[239,31],[240,16],[242,32],[243,33],[244,34],[245,34],[241,2],[246,2],[260,16],[247,16],[262,35],[248,2],[249,2],[250,31],[251,16],[252,29],[253,2],[254,36],[259,2],[255,31],[257,37],[261,38],[258,39],[233,40],[238,29],[273,41],[232,16],[272,2],[264,42],[270,43],[268,44],[265,2],[235,2],[266,45],[274,2],[289,46],[331,47],[327,1],[329,48],[330,1],[335,49],[313,50],[317,50],[315,50],[312,2],[337,51],[338,52],[339,53],[333,2],[340,2],[341,54],[342,55],[343,2],[344,2],[345,56],[346,2],[347,57],[361,58],[362,58],[349,59],[350,60],[348,61],[351,62],[352,63],[353,64],[354,65],[355,66],[356,67],[357,68],[358,69],[359,70],[360,71],[365,72],[366,73],[368,74],[363,2],[364,75],[369,2],[370,2],[371,2],[336,2],[372,76],[373,2],[374,52],[148,77],[149,77],[150,78],[151,79],[152,80],[153,81],[103,2],[106,82],[104,2],[105,2],[154,83],[155,84],[156,85],[157,86],[158,87],[159,88],[160,88],[162,89],[161,90],[163,91],[164,92],[165,93],[147,94],[166,95],[167,96],[168,97],[169,98],[170,99],[171,100],[172,101],[173,102],[174,103],[175,104],[176,105],[177,106],[178,107],[179,107],[180,108],[181,2],[182,2],[183,109],[185,110],[184,111],[186,112],[187,113],[188,114],[189,115],[190,116],[191,117],[192,118],[108,119],[107,2],[201,120],[193,121],[194,122],[195,123],[196,124],[197,125],[198,126],[199,127],[200,128],[375,2],[376,2],[334,129],[377,2],[402,130],[403,131],[378,132],[381,132],[400,130],[401,130],[391,130],[390,133],[388,130],[383,130],[396,130],[394,130],[398,130],[382,130],[395,130],[399,130],[384,130],[385,130],[397,130],[379,130],[386,130],[387,130],[389,130],[393,130],[404,134],[392,130],[380,130],[417,135],[416,2],[411,134],[413,136],[412,134],[405,134],[406,134],[408,134],[410,134],[414,136],[415,136],[407,136],[409,136],[321,137],[320,2],[418,2],[419,2],[420,2],[421,2],[367,2],[422,2],[423,138],[424,52],[425,2],[426,139],[427,140],[318,141],[217,142],[109,2],[316,50],[314,143],[319,144],[99,2],[83,2],[332,89],[293,145],[65,2],[294,146],[66,147],[204,2],[69,148],[208,149],[291,150],[292,150],[205,151],[206,152],[67,2],[210,153],[209,154],[68,155],[207,2],[77,2],[298,156],[301,157],[302,157],[299,158],[300,157],[305,159],[303,160],[304,156],[216,2],[322,161],[62,2],[63,2],[11,2],[12,2],[15,2],[14,2],[2,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[23,2],[3,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[8,2],[52,2],[49,2],[50,2],[51,2],[53,2],[9,2],[54,2],[55,2],[56,2],[59,2],[57,2],[58,2],[60,2],[61,2],[10,2],[1,2],[13,2],[70,2],[290,2],[296,162],[297,162],[295,163],[125,164],[135,165],[124,164],[145,166],[116,167],[115,168],[144,52],[138,169],[143,170],[118,171],[132,172],[117,173],[141,174],[113,175],[112,52],[142,176],[114,177],[119,178],[120,2],[123,178],[110,2],[146,179],[136,180],[127,181],[128,182],[130,183],[126,184],[129,185],[139,52],[121,186],[122,187],[131,188],[111,189],[134,180],[133,178],[137,2],[140,190],[309,219],[306,220],[310,221],[308,222],[307,223],[324,219],[212,198],[214,199],[211,2],[213,198],[96,200],[97,201],[84,202],[86,203],[102,2],[87,2],[202,56],[203,204],[71,205],[88,206],[98,207],[72,208],[85,209],[89,210],[90,211],[100,212],[101,213],[91,2],[92,206],[94,214],[93,215],[95,216],[311,217],[215,218]],"semanticDiagnosticsPerFile":[328,326,78,75,74,76,81,82,73,79,80,285,287,286,288,279,284,280,281,278,275,277,276,282,283,230,223,224,219,228,227,231,229,225,226,218,220,222,221,263,256,269,271,267,234,236,237,239,240,242,243,244,245,241,246,260,247,262,248,249,250,251,252,253,254,259,255,257,261,258,233,238,273,232,272,264,270,268,265,235,266,274,289,331,327,329,330,335,313,317,315,312,337,338,339,333,340,341,342,343,344,345,346,347,361,362,349,350,348,351,352,353,354,355,356,357,358,359,360,365,366,368,363,364,369,370,371,336,372,373,374,148,149,150,151,152,153,103,106,104,105,154,155,156,157,158,159,160,162,161,163,164,165,147,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,184,186,187,188,189,190,191,192,108,107,201,193,194,195,196,197,198,199,200,375,376,334,377,402,403,378,381,400,401,391,390,388,383,396,394,398,382,395,399,384,385,397,379,386,387,389,393,404,392,380,417,416,411,413,412,405,406,408,410,414,415,407,409,321,320,418,419,420,421,367,422,423,424,425,426,427,318,217,109,316,314,319,99,83,332,293,65,294,66,204,69,208,291,292,205,206,67,210,209,68,207,77,298,301,302,299,300,305,303,304,216,322,62,63,11,12,15,14,2,16,17,18,19,20,21,22,23,3,24,4,25,29,26,27,28,30,31,32,5,33,34,35,36,6,40,37,38,39,41,7,42,47,48,43,44,45,46,8,52,49,50,51,53,9,54,55,56,59,57,58,60,61,10,1,13,70,290,296,297,295,125,135,124,145,116,115,144,138,143,118,132,117,141,113,112,142,114,119,120,123,110,146,136,127,128,130,126,129,139,121,122,131,111,134,133,137,140,64,309,306,310,308,307,324,323,325,212,214,211,213,96,97,84,86,102,87,202,203,71,88,98,72,85,89,90,100,101,91,92,94,93,95,311,215],"latestChangedDtsFile":"./src/tls.d.ts"},"version":"5.4.5"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/dist/typedoc-urls.json b/node_modules/@libp2p/tls/dist/typedoc-urls.json
deleted file mode 100644
index 1bdb3a0..0000000
--- a/node_modules/@libp2p/tls/dist/typedoc-urls.json
+++ /dev/null
@@ -1,8 +0,0 @@
-{
-  "TLSComponents": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tls.TLSComponents.html",
-  ".:TLSComponents": "https://libp2p.github.io/js-libp2p/interfaces/_libp2p_tls.TLSComponents.html",
-  "PROTOCOL": "https://libp2p.github.io/js-libp2p/variables/_libp2p_tls.PROTOCOL.html",
-  ".:PROTOCOL": "https://libp2p.github.io/js-libp2p/variables/_libp2p_tls.PROTOCOL.html",
-  "tls": "https://libp2p.github.io/js-libp2p/functions/_libp2p_tls.tls.html",
-  ".:tls": "https://libp2p.github.io/js-libp2p/functions/_libp2p_tls.tls.html"
-}
\ No newline at end of file
diff --git a/node_modules/@libp2p/tls/src/index.ts b/node_modules/@libp2p/tls/src/index.ts
index 8269cb4..220b7a1 100644
--- a/node_modules/@libp2p/tls/src/index.ts
+++ b/node_modules/@libp2p/tls/src/index.ts
@@ -19,13 +19,15 @@
  */
 
 import { TLS } from './tls.js'
-import type { ComponentLogger, ConnectionEncrypter, PrivateKey } from '@libp2p/interface'
+import type { ComponentLogger, ConnectionEncrypter, Metrics, PrivateKey, Upgrader } from '@libp2p/interface'
 
 export const PROTOCOL = '/tls/1.0.0'
 
 export interface TLSComponents {
   privateKey: PrivateKey
   logger: ComponentLogger
+  upgrader: Upgrader
+  metrics?: Metrics
 }
 
 export function tls (): (components: TLSComponents) => ConnectionEncrypter {
diff --git a/node_modules/@libp2p/tls/src/tls.ts b/node_modules/@libp2p/tls/src/tls.ts
index e2de04e..1dbe23b 100644
--- a/node_modules/@libp2p/tls/src/tls.ts
+++ b/node_modules/@libp2p/tls/src/tls.ts
@@ -24,18 +24,49 @@ import { HandshakeTimeoutError } from './errors.js'
 import { generateCertificate, verifyPeerCertificate, itToStream, streamToIt } from './utils.js'
 import { PROTOCOL } from './index.js'
 import type { TLSComponents } from './index.js'
-import type { MultiaddrConnection, ConnectionEncrypter, SecuredConnection, Logger, SecureConnectionOptions, PrivateKey } from '@libp2p/interface'
-import type { Duplex } from 'it-stream-types'
+import type { MultiaddrConnection, ConnectionEncrypter, SecuredConnection, Logger, SecureConnectionOptions, CounterGroup, StreamMuxerFactory, ClosableDuplex } from '@libp2p/interface'
 import type { Uint8ArrayList } from 'uint8arraylist'
 
 export class TLS implements ConnectionEncrypter {
   public protocol: string = PROTOCOL
   private readonly log: Logger
-  private readonly privateKey: PrivateKey
+  private readonly components: TLSComponents
+  private readonly metrics: {
+    server: {
+      events?: CounterGroup
+      errors?: CounterGroup
+    }
+    client: {
+      events?: CounterGroup
+      errors?: CounterGroup
+    }
+  }
 
   constructor (components: TLSComponents) {
     this.log = components.logger.forComponent('libp2p:tls')
-    this.privateKey = components.privateKey
+    this.components = components
+    this.metrics = {
+      server: {
+        events: components.metrics?.registerCounterGroup('libp2p_tls_server_events_total', {
+          label: 'event',
+          help: 'Total count of TLS connection encryption events by type'
+        }),
+        errors: components.metrics?.registerCounterGroup('libp2p_tls_server_errors_total', {
+          label: 'event',
+          help: 'Total count of TLS connection encryption errors by type'
+        })
+      },
+      client: {
+        events: components.metrics?.registerCounterGroup('libp2p_tls_server_events_total', {
+          label: 'event',
+          help: 'Total count of TLS connection encryption events by type'
+        }),
+        errors: components.metrics?.registerCounterGroup('libp2p_tls_server_errors_total', {
+          label: 'event',
+          help: 'Total count of TLS connection encryption errors by type'
+        })
+      }
+    }
   }
 
   readonly [Symbol.toStringTag] = '@libp2p/tls'
@@ -44,26 +75,43 @@ export class TLS implements ConnectionEncrypter {
     '@libp2p/connection-encryption'
   ]
 
-  async secureInbound <Stream extends Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection> (conn: Stream, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>> {
+  async secureInbound <Stream extends ClosableDuplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection> (conn: Stream, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>> {
     return this._encrypt(conn, true, options)
   }
 
-  async secureOutbound <Stream extends Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection> (conn: Stream, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>> {
+  async secureOutbound <Stream extends ClosableDuplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection> (conn: Stream, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>> {
     return this._encrypt(conn, false, options)
   }
 
   /**
    * Encrypt connection
    */
-  async _encrypt <Stream extends Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection> (conn: Stream, isServer: boolean, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>> {
+  async _encrypt <Stream extends ClosableDuplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection> (conn: Stream, isServer: boolean, options?: SecureConnectionOptions): Promise<SecuredConnection<Stream>> {
+    let streamMuxer: StreamMuxerFactory | undefined
     const opts: TLSSocketOptions = {
-      ...await generateCertificate(this.privateKey),
+      ...await generateCertificate(this.components.privateKey),
       isServer,
       // require TLS 1.3 or later
       minVersion: 'TLSv1.3',
       maxVersion: 'TLSv1.3',
       // accept self-signed certificates
-      rejectUnauthorized: false
+      rejectUnauthorized: false,
+
+      // early negotiation of muxer via ALPN protocols
+      ALPNProtocols: [
+        ...this.components.upgrader.getStreamMuxers().keys()
+      ],
+      ALPNCallback: ({ servername, protocols }) => {
+        this.log('received server name %s and protocols %s', servername, protocols)
+
+        for (const protocol of protocols) {
+          streamMuxer = this.components.upgrader.getStreamMuxers().get(protocol)
+
+          if (streamMuxer != null) {
+            return protocol
+          }
+        }
+      }
     }
 
     let socket: TLSSocket
@@ -83,9 +131,13 @@ export class TLS implements ConnectionEncrypter {
 
     return new Promise<SecuredConnection<Stream>>((resolve, reject) => {
       options?.signal?.addEventListener('abort', () => {
-        const err = new HandshakeTimeoutError()
-        socket.destroy(err)
-        reject(err)
+        this.metrics[isServer ? 'server' : 'client'].events?.increment({
+          abort: true
+        })
+        this.metrics[isServer ? 'server' : 'client'].errors?.increment({
+          encrypt_abort: true
+        })
+        socket.emit('error', new HandshakeTimeoutError())
       })
 
       const verifyRemote = (): void => {
@@ -100,25 +152,53 @@ export class TLS implements ConnectionEncrypter {
               conn: {
                 ...conn,
                 ...streamToIt(socket)
-              }
+              },
+              streamMuxer
             })
           })
           .catch((err: Error) => {
-            reject(err)
+            this.metrics[isServer ? 'server' : 'client'].errors?.increment({
+              verify_peer_certificate: true
+            })
+            socket.emit('error', err)
           })
       }
 
       socket.on('error', (err: Error) => {
+        this.log.error('error encrypting %s connection - %e', isServer ? 'server' : 'client', err)
+
+        if (err.name !== 'HandshakeTimeoutError') {
+          this.metrics[isServer ? 'server' : 'client'].events?.increment({
+            error: true
+          })
+        }
+
+        socket.destroy(err)
+        conn.abort(err)
         reject(err)
       })
       socket.once('secure', () => {
         this.log('verifying remote certificate')
+        this.metrics[isServer ? 'server' : 'client'].events?.increment({
+          secure: true
+        })
         verifyRemote()
       })
-    })
-      .catch(err => {
-        socket.destroy(err)
-        throw err
+      socket.on('connect', () => {
+        this.metrics[isServer ? 'server' : 'client'].events?.increment({
+          connect: true
+        })
+      })
+      socket.on('close', () => {
+        this.metrics[isServer ? 'server' : 'client'].events?.increment({
+          close: true
+        })
       })
+      socket.on('end', () => {
+        this.metrics[isServer ? 'server' : 'client'].events?.increment({
+          end: true
+        })
+      })
+    })
   }
 }
