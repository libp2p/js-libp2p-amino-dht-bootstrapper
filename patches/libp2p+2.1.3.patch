diff --git a/node_modules/libp2p/dist/index.min.js b/node_modules/libp2p/dist/index.min.js
index 855b053..e038992 100644
--- a/node_modules/libp2p/dist/index.min.js
+++ b/node_modules/libp2p/dist/index.min.js
@@ -1,22 +1,22 @@
 (function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2P = factory()}(typeof self !== 'undefined' ? self : this, function () {
-"use strict";var Libp2P=(()=>{var Gp=Object.create;var Lo=Object.defineProperty;var Wp=Object.getOwnPropertyDescriptor;var jp=Object.getOwnPropertyNames;var Zp=Object.getPrototypeOf,Xp=Object.prototype.hasOwnProperty;var Qe=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Re=(r,e)=>{for(var t in e)Lo(r,t,{get:e[t],enumerable:!0})},Ru=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of jp(e))!Xp.call(r,o)&&o!==t&&Lo(r,o,{get:()=>e[o],enumerable:!(n=Wp(e,o))||n.enumerable});return r};var ar=(r,e,t)=>(t=r!=null?Gp(Zp(r)):{},Ru(e||!r||!r.__esModule?Lo(t,"default",{value:r,enumerable:!0}):t,r)),Yp=r=>Ru(Lo({},"__esModule",{value:!0}),r);var Of=Qe(Xr=>{"use strict";var b0="[object ArrayBuffer]",Ct=class r{static isArrayBuffer(e){return Object.prototype.toString.call(e)===b0}static toArrayBuffer(e){return this.isArrayBuffer(e)?e:e.byteLength===e.buffer.byteLength||e.byteOffset===0&&e.byteLength===e.buffer.byteLength?e.buffer:this.toUint8Array(e.buffer).slice(e.byteOffset,e.byteOffset+e.byteLength).buffer}static toUint8Array(e){return this.toView(e,Uint8Array)}static toView(e,t){if(e.constructor===t)return e;if(this.isArrayBuffer(e))return new t(e);if(this.isArrayBufferView(e))return new t(e.buffer,e.byteOffset,e.byteLength);throw new TypeError("The provided value is not of type '(ArrayBuffer or ArrayBufferView)'")}static isBufferSource(e){return this.isArrayBufferView(e)||this.isArrayBuffer(e)}static isArrayBufferView(e){return ArrayBuffer.isView(e)||e&&this.isArrayBuffer(e.buffer)}static isEqual(e,t){let n=r.toUint8Array(e),o=r.toUint8Array(t);if(n.length!==o.byteLength)return!1;for(let s=0;s<n.length;s++)if(n[s]!==o[s])return!1;return!0}static concat(...e){let t;Array.isArray(e[0])&&!(e[1]instanceof Function)||Array.isArray(e[0])&&e[1]instanceof Function?t=e[0]:e[e.length-1]instanceof Function?t=e.slice(0,e.length-1):t=e;let n=0;for(let i of t)n+=i.byteLength;let o=new Uint8Array(n),s=0;for(let i of t){let a=this.toUint8Array(i);o.set(a,s),s+=a.length}return e[e.length-1]instanceof Function?this.toView(o,e[e.length-1]):o.buffer}},qc="string",x0=/^[0-9a-f]+$/i,v0=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,E0=/^[a-zA-Z0-9-_]+$/,cs=class{static fromString(e){let t=unescape(encodeURIComponent(e)),n=new Uint8Array(t.length);for(let o=0;o<t.length;o++)n[o]=t.charCodeAt(o);return n.buffer}static toString(e){let t=Ct.toUint8Array(e),n="";for(let s=0;s<t.length;s++)n+=String.fromCharCode(t[s]);return decodeURIComponent(escape(n))}},Ze=class{static toString(e,t=!1){let n=Ct.toArrayBuffer(e),o=new DataView(n),s="";for(let i=0;i<n.byteLength;i+=2){let a=o.getUint16(i,t);s+=String.fromCharCode(a)}return s}static fromString(e,t=!1){let n=new ArrayBuffer(e.length*2),o=new DataView(n);for(let s=0;s<e.length;s++)o.setUint16(s*2,e.charCodeAt(s),t);return n}},ls=class r{static isHex(e){return typeof e===qc&&x0.test(e)}static isBase64(e){return typeof e===qc&&v0.test(e)}static isBase64Url(e){return typeof e===qc&&E0.test(e)}static ToString(e,t="utf8"){let n=Ct.toUint8Array(e);switch(t.toLowerCase()){case"utf8":return this.ToUtf8String(n);case"binary":return this.ToBinary(n);case"hex":return this.ToHex(n);case"base64":return this.ToBase64(n);case"base64url":return this.ToBase64Url(n);case"utf16le":return Ze.toString(n,!0);case"utf16":case"utf16be":return Ze.toString(n);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromString(e,t="utf8"){if(!e)return new ArrayBuffer(0);switch(t.toLowerCase()){case"utf8":return this.FromUtf8String(e);case"binary":return this.FromBinary(e);case"hex":return this.FromHex(e);case"base64":return this.FromBase64(e);case"base64url":return this.FromBase64Url(e);case"utf16le":return Ze.fromString(e,!0);case"utf16":case"utf16be":return Ze.fromString(e);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToBase64(e){let t=Ct.toUint8Array(e);if(typeof btoa<"u"){let n=this.ToString(t,"binary");return btoa(n)}else return Buffer.from(t).toString("base64")}static FromBase64(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isBase64(t))throw new TypeError("Argument 'base64Text' is not Base64 encoded");return typeof atob<"u"?this.FromBinary(atob(t)):new Uint8Array(Buffer.from(t,"base64")).buffer}static FromBase64Url(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isBase64Url(t))throw new TypeError("Argument 'base64url' is not Base64Url encoded");return this.FromBase64(this.Base64Padding(t.replace(/\-/g,"+").replace(/\_/g,"/")))}static ToBase64Url(e){return this.ToBase64(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")}static FromUtf8String(e,t=r.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.FromBinary(e);case"utf8":return cs.fromString(e);case"utf16":case"utf16be":return Ze.fromString(e);case"utf16le":case"usc2":return Ze.fromString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToUtf8String(e,t=r.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.ToBinary(e);case"utf8":return cs.toString(e);case"utf16":case"utf16be":return Ze.toString(e);case"utf16le":case"usc2":return Ze.toString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromBinary(e){let t=e.length,n=new Uint8Array(t);for(let o=0;o<t;o++)n[o]=e.charCodeAt(o);return n.buffer}static ToBinary(e){let t=Ct.toUint8Array(e),n="";for(let o=0;o<t.length;o++)n+=String.fromCharCode(t[o]);return n}static ToHex(e){let t=Ct.toUint8Array(e),n="",o=t.length;for(let s=0;s<o;s++){let i=t[s];i<16&&(n+="0"),n+=i.toString(16)}return n}static FromHex(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isHex(t))throw new TypeError("Argument 'hexString' is not HEX encoded");t.length%2&&(t=`0${t}`);let n=new Uint8Array(t.length/2);for(let o=0;o<t.length;o=o+2){let s=t.slice(o,o+2);n[o/2]=parseInt(s,16)}return n.buffer}static ToUtf16String(e,t=!1){return Ze.toString(e,t)}static FromUtf16String(e,t=!1){return Ze.fromString(e,t)}static Base64Padding(e){let t=4-e.length%4;if(t<4)for(let n=0;n<t;n++)e+="=";return e}static formatString(e){return e?.replace(/[\n\r\t ]/g,"")||""}};ls.DEFAULT_UTF8_ENCODING="utf8";function A0(r,...e){let t=arguments[0];for(let n=1;n<arguments.length;n++){let o=arguments[n];for(let s in o)t[s]=o[s]}return t}function S0(...r){let e=r.map(o=>o.byteLength).reduce((o,s)=>o+s),t=new Uint8Array(e),n=0;return r.map(o=>new Uint8Array(o)).forEach(o=>{for(let s of o)t[n++]=s}),t.buffer}function _0(r,e){if(!(r&&e)||r.byteLength!==e.byteLength)return!1;let t=new Uint8Array(r),n=new Uint8Array(e);for(let o=0;o<r.byteLength;o++)if(t[o]!==n[o])return!1;return!0}Xr.BufferSourceConverter=Ct;Xr.Convert=ls;Xr.assign=A0;Xr.combine=S0;Xr.isEqual=_0});var wd=Qe(uo=>{(function(){var r,e,t,n,o,s,i,a;a=function(c){var u,f,l,d;return u=(c&255<<24)>>>24,f=(c&255<<16)>>>16,l=(c&65280)>>>8,d=c&255,[u,f,l,d].join(".")},i=function(c){var u,f,l,d,h,p;for(u=[],l=d=0;d<=3&&c.length!==0;l=++d){if(l>0){if(c[0]!==".")throw new Error("Invalid IP");c=c.substring(1)}p=e(c),h=p[0],f=p[1],c=c.substring(f),u.push(h)}if(c.length!==0)throw new Error("Invalid IP");switch(u.length){case 1:if(u[0]>4294967295)throw new Error("Invalid IP");return u[0]>>>0;case 2:if(u[0]>255||u[1]>16777215)throw new Error("Invalid IP");return(u[0]<<24|u[1])>>>0;case 3:if(u[0]>255||u[1]>255||u[2]>65535)throw new Error("Invalid IP");return(u[0]<<24|u[1]<<16|u[2])>>>0;case 4:if(u[0]>255||u[1]>255||u[2]>255||u[3]>255)throw new Error("Invalid IP");return(u[0]<<24|u[1]<<16|u[2]<<8|u[3])>>>0;default:throw new Error("Invalid IP")}},t=function(c){return c.charCodeAt(0)},n=t("0"),s=t("a"),o=t("A"),e=function(c){var u,f,l,d,h;for(d=0,u=10,f="9",l=0,c.length>1&&c[l]==="0"&&(c[l+1]==="x"||c[l+1]==="X"?(l+=2,u=16):"0"<=c[l+1]&&c[l+1]<="9"&&(l++,u=8,f="7")),h=l;l<c.length;){if("0"<=c[l]&&c[l]<=f)d=d*u+(t(c[l])-n)>>>0;else if(u===16)if("a"<=c[l]&&c[l]<="f")d=d*u+(10+t(c[l])-s)>>>0;else if("A"<=c[l]&&c[l]<="F")d=d*u+(10+t(c[l])-o)>>>0;else break;else break;if(d>4294967295)throw new Error("too large");l++}if(l===h)throw new Error("empty octet");return[d,l]},r=function(){function c(u,f){var l,d,h,p;if(typeof u!="string")throw new Error("Missing `net' parameter");if(f||(p=u.split("/",2),u=p[0],f=p[1]),f||(f=32),typeof f=="string"&&f.indexOf(".")>-1){try{this.maskLong=i(f)}catch(m){throw l=m,new Error("Invalid mask: "+f)}for(d=h=32;h>=0;d=--h)if(this.maskLong===4294967295<<32-d>>>0){this.bitmask=d;break}}else if(f||f===0)this.bitmask=parseInt(f,10),this.maskLong=0,this.bitmask>0&&(this.maskLong=4294967295<<32-this.bitmask>>>0);else throw new Error("Invalid mask: empty");try{this.netLong=(i(u)&this.maskLong)>>>0}catch(m){throw l=m,new Error("Invalid net address: "+u)}if(!(this.bitmask<=32))throw new Error("Invalid mask for ip4: "+f);this.size=Math.pow(2,32-this.bitmask),this.base=a(this.netLong),this.mask=a(this.maskLong),this.hostmask=a(~this.maskLong),this.first=this.bitmask<=30?a(this.netLong+1):this.base,this.last=this.bitmask<=30?a(this.netLong+this.size-2):a(this.netLong+this.size-1),this.broadcast=this.bitmask<=30?a(this.netLong+this.size-1):void 0}return c.prototype.contains=function(u){return typeof u=="string"&&(u.indexOf("/")>0||u.split(".").length!==4)&&(u=new c(u)),u instanceof c?this.contains(u.base)&&this.contains(u.broadcast||u.last):(i(u)&this.maskLong)>>>0===(this.netLong&this.maskLong)>>>0},c.prototype.next=function(u){return u==null&&(u=1),new c(a(this.netLong+this.size*u),this.mask)},c.prototype.forEach=function(u){var f,l,d;for(d=i(this.first),l=i(this.last),f=0;d<=l;)u(a(d),d,f),f++,d++},c.prototype.toString=function(){return this.base+"/"+this.bitmask},c}(),uo.ip2long=i,uo.long2ip=a,uo.Netmask=r}).call(uo)});var vd=Qe((uS,Cl)=>{"use strict";var Ty=Object.prototype.hasOwnProperty,Ve="~";function fo(){}Object.create&&(fo.prototype=Object.create(null),new fo().__proto__||(Ve=!1));function Ly(r,e,t){this.fn=r,this.context=e,this.once=t||!1}function xd(r,e,t,n,o){if(typeof t!="function")throw new TypeError("The listener must be a function");var s=new Ly(t,n||r,o),i=Ve?Ve+e:e;return r._events[i]?r._events[i].fn?r._events[i]=[r._events[i],s]:r._events[i].push(s):(r._events[i]=s,r._eventsCount++),r}function hi(r,e){--r._eventsCount===0?r._events=new fo:delete r._events[e]}function Ne(){this._events=new fo,this._eventsCount=0}Ne.prototype.eventNames=function(){var e=[],t,n;if(this._eventsCount===0)return e;for(n in t=this._events)Ty.call(t,n)&&e.push(Ve?n.slice(1):n);return Object.getOwnPropertySymbols?e.concat(Object.getOwnPropertySymbols(t)):e};Ne.prototype.listeners=function(e){var t=Ve?Ve+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var o=0,s=n.length,i=new Array(s);o<s;o++)i[o]=n[o].fn;return i};Ne.prototype.listenerCount=function(e){var t=Ve?Ve+e:e,n=this._events[t];return n?n.fn?1:n.length:0};Ne.prototype.emit=function(e,t,n,o,s,i){var a=Ve?Ve+e:e;if(!this._events[a])return!1;var c=this._events[a],u=arguments.length,f,l;if(c.fn){switch(c.once&&this.removeListener(e,c.fn,void 0,!0),u){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,t),!0;case 3:return c.fn.call(c.context,t,n),!0;case 4:return c.fn.call(c.context,t,n,o),!0;case 5:return c.fn.call(c.context,t,n,o,s),!0;case 6:return c.fn.call(c.context,t,n,o,s,i),!0}for(l=1,f=new Array(u-1);l<u;l++)f[l-1]=arguments[l];c.fn.apply(c.context,f)}else{var d=c.length,h;for(l=0;l<d;l++)switch(c[l].once&&this.removeListener(e,c[l].fn,void 0,!0),u){case 1:c[l].fn.call(c[l].context);break;case 2:c[l].fn.call(c[l].context,t);break;case 3:c[l].fn.call(c[l].context,t,n);break;case 4:c[l].fn.call(c[l].context,t,n,o);break;default:if(!f)for(h=1,f=new Array(u-1);h<u;h++)f[h-1]=arguments[h];c[l].fn.apply(c[l].context,f)}}return!0};Ne.prototype.on=function(e,t,n){return xd(this,e,t,n,!1)};Ne.prototype.once=function(e,t,n){return xd(this,e,t,n,!0)};Ne.prototype.removeListener=function(e,t,n,o){var s=Ve?Ve+e:e;if(!this._events[s])return this;if(!t)return hi(this,s),this;var i=this._events[s];if(i.fn)i.fn===t&&(!o||i.once)&&(!n||i.context===n)&&hi(this,s);else{for(var a=0,c=[],u=i.length;a<u;a++)(i[a].fn!==t||o&&!i[a].once||n&&i[a].context!==n)&&c.push(i[a]);c.length?this._events[s]=c.length===1?c[0]:c:hi(this,s)}return this};Ne.prototype.removeAllListeners=function(e){var t;return e?(t=Ve?Ve+e:e,this._events[t]&&hi(this,t)):(this._events=new fo,this._eventsCount=0),this};Ne.prototype.off=Ne.prototype.removeListener;Ne.prototype.addListener=Ne.prototype.on;Ne.prefixed=Ve;Ne.EventEmitter=Ne;typeof Cl<"u"&&(Cl.exports=Ne)});var Bd=Qe((PS,_d)=>{_d.exports=function(r){if(!r)throw Error("hashlru must have a max value, of type number, greater than 0");var e=0,t=Object.create(null),n=Object.create(null);function o(s,i){t[s]=i,e++,e>=r&&(e=0,n=t,t=Object.create(null))}return{has:function(s){return t[s]!==void 0||n[s]!==void 0},remove:function(s){t[s]!==void 0&&(t[s]=void 0),n[s]!==void 0&&(n[s]=void 0)},get:function(s){var i=t[s];if(i!==void 0)return i;if((i=n[s])!==void 0)return o(s,i),i},set:function(s,i){t[s]!==void 0?t[s]=i:o(s,i)},clear:function(){t=Object.create(null),n=Object.create(null)}}}});var Ld=Qe((XS,Td)=>{"use strict";Td.exports=r=>{if(Object.prototype.toString.call(r)!=="[object Object]")return!1;let e=Object.getPrototypeOf(r);return e===null||e===Object.prototype}});var Ud=Qe((Dd,Md)=>{"use strict";var gi=Ld(),{hasOwnProperty:Pd}=Object.prototype,{propertyIsEnumerable:My}=Object,hn=(r,e,t)=>Object.defineProperty(r,e,{value:t,writable:!0,enumerable:!0,configurable:!0}),Uy=Dd,Nd={concatArrays:!1,ignoreUndefined:!1},yi=r=>{let e=[];for(let t in r)Pd.call(r,t)&&e.push(t);if(Object.getOwnPropertySymbols){let t=Object.getOwnPropertySymbols(r);for(let n of t)My.call(r,n)&&e.push(n)}return e};function dn(r){return Array.isArray(r)?Oy(r):gi(r)?Fy(r):r}function Oy(r){let e=r.slice(0,0);return yi(r).forEach(t=>{hn(e,t,dn(r[t]))}),e}function Fy(r){let e=Object.getPrototypeOf(r)===null?Object.create(null):{};return yi(r).forEach(t=>{hn(e,t,dn(r[t]))}),e}var Rd=(r,e,t,n)=>(t.forEach(o=>{typeof e[o]>"u"&&n.ignoreUndefined||(o in r&&r[o]!==Object.getPrototypeOf(r)?hn(r,o,Ul(r[o],e[o],n)):hn(r,o,dn(e[o])))}),r),Vy=(r,e,t)=>{let n=r.slice(0,0),o=0;return[r,e].forEach(s=>{let i=[];for(let a=0;a<s.length;a++)Pd.call(s,a)&&(i.push(String(a)),s===r?hn(n,o++,s[a]):hn(n,o++,dn(s[a])));n=Rd(n,s,yi(s).filter(a=>!i.includes(a)),t)}),n};function Ul(r,e,t){return t.concatArrays&&Array.isArray(r)&&Array.isArray(e)?Vy(r,e,t):!gi(e)||!gi(r)?dn(e):Rd(r,e,yi(e),t)}Md.exports=function(...r){let e=Ul(dn(Nd),this!==Uy&&this||{},Nd),t={_:{}};for(let n of r)if(n!==void 0){if(!gi(n))throw new TypeError("`"+n+"` is not an Option Object");t=Ul(t,{_:n},e)}return t._}});var Hd=Qe((go,Si)=>{(function(r,e){"use strict";var t={version:"3.0.0",x86:{},x64:{},inputValidation:!0};function n(h){if(!Array.isArray(h)&&!ArrayBuffer.isView(h))return!1;for(var p=0;p<h.length;p++)if(!Number.isInteger(h[p])||h[p]<0||h[p]>255)return!1;return!0}function o(h,p){return(h&65535)*p+(((h>>>16)*p&65535)<<16)}function s(h,p){return h<<p|h>>>32-p}function i(h){return h^=h>>>16,h=o(h,2246822507),h^=h>>>13,h=o(h,3266489909),h^=h>>>16,h}function a(h,p){h=[h[0]>>>16,h[0]&65535,h[1]>>>16,h[1]&65535],p=[p[0]>>>16,p[0]&65535,p[1]>>>16,p[1]&65535];var m=[0,0,0,0];return m[3]+=h[3]+p[3],m[2]+=m[3]>>>16,m[3]&=65535,m[2]+=h[2]+p[2],m[1]+=m[2]>>>16,m[2]&=65535,m[1]+=h[1]+p[1],m[0]+=m[1]>>>16,m[1]&=65535,m[0]+=h[0]+p[0],m[0]&=65535,[m[0]<<16|m[1],m[2]<<16|m[3]]}function c(h,p){h=[h[0]>>>16,h[0]&65535,h[1]>>>16,h[1]&65535],p=[p[0]>>>16,p[0]&65535,p[1]>>>16,p[1]&65535];var m=[0,0,0,0];return m[3]+=h[3]*p[3],m[2]+=m[3]>>>16,m[3]&=65535,m[2]+=h[2]*p[3],m[1]+=m[2]>>>16,m[2]&=65535,m[2]+=h[3]*p[2],m[1]+=m[2]>>>16,m[2]&=65535,m[1]+=h[1]*p[3],m[0]+=m[1]>>>16,m[1]&=65535,m[1]+=h[2]*p[2],m[0]+=m[1]>>>16,m[1]&=65535,m[1]+=h[3]*p[1],m[0]+=m[1]>>>16,m[1]&=65535,m[0]+=h[0]*p[3]+h[1]*p[2]+h[2]*p[1]+h[3]*p[0],m[0]&=65535,[m[0]<<16|m[1],m[2]<<16|m[3]]}function u(h,p){return p%=64,p===32?[h[1],h[0]]:p<32?[h[0]<<p|h[1]>>>32-p,h[1]<<p|h[0]>>>32-p]:(p-=32,[h[1]<<p|h[0]>>>32-p,h[0]<<p|h[1]>>>32-p])}function f(h,p){return p%=64,p===0?h:p<32?[h[0]<<p|h[1]>>>32-p,h[1]<<p]:[h[1]<<p-32,0]}function l(h,p){return[h[0]^p[0],h[1]^p[1]]}function d(h){return h=l(h,[0,h[0]>>>1]),h=c(h,[4283543511,3981806797]),h=l(h,[0,h[0]>>>1]),h=c(h,[3301882366,444984403]),h=l(h,[0,h[0]>>>1]),h}t.x86.hash32=function(h,p){if(t.inputValidation&&!n(h))return e;p=p||0;for(var m=h.length%4,g=h.length-m,y=p,b=0,w=3432918353,x=461845907,A=0;A<g;A=A+4)b=h[A]|h[A+1]<<8|h[A+2]<<16|h[A+3]<<24,b=o(b,w),b=s(b,15),b=o(b,x),y^=b,y=s(y,13),y=o(y,5)+3864292196;switch(b=0,m){case 3:b^=h[A+2]<<16;case 2:b^=h[A+1]<<8;case 1:b^=h[A],b=o(b,w),b=s(b,15),b=o(b,x),y^=b}return y^=h.length,y=i(y),y>>>0},t.x86.hash128=function(h,p){if(t.inputValidation&&!n(h))return e;p=p||0;for(var m=h.length%16,g=h.length-m,y=p,b=p,w=p,x=p,A=0,_=0,v=0,B=0,T=597399067,te=2869860233,V=951274213,F=2716044179,R=0;R<g;R=R+16)A=h[R]|h[R+1]<<8|h[R+2]<<16|h[R+3]<<24,_=h[R+4]|h[R+5]<<8|h[R+6]<<16|h[R+7]<<24,v=h[R+8]|h[R+9]<<8|h[R+10]<<16|h[R+11]<<24,B=h[R+12]|h[R+13]<<8|h[R+14]<<16|h[R+15]<<24,A=o(A,T),A=s(A,15),A=o(A,te),y^=A,y=s(y,19),y+=b,y=o(y,5)+1444728091,_=o(_,te),_=s(_,16),_=o(_,V),b^=_,b=s(b,17),b+=w,b=o(b,5)+197830471,v=o(v,V),v=s(v,17),v=o(v,F),w^=v,w=s(w,15),w+=x,w=o(w,5)+2530024501,B=o(B,F),B=s(B,18),B=o(B,T),x^=B,x=s(x,13),x+=y,x=o(x,5)+850148119;switch(A=0,_=0,v=0,B=0,m){case 15:B^=h[R+14]<<16;case 14:B^=h[R+13]<<8;case 13:B^=h[R+12],B=o(B,F),B=s(B,18),B=o(B,T),x^=B;case 12:v^=h[R+11]<<24;case 11:v^=h[R+10]<<16;case 10:v^=h[R+9]<<8;case 9:v^=h[R+8],v=o(v,V),v=s(v,17),v=o(v,F),w^=v;case 8:_^=h[R+7]<<24;case 7:_^=h[R+6]<<16;case 6:_^=h[R+5]<<8;case 5:_^=h[R+4],_=o(_,te),_=s(_,16),_=o(_,V),b^=_;case 4:A^=h[R+3]<<24;case 3:A^=h[R+2]<<16;case 2:A^=h[R+1]<<8;case 1:A^=h[R],A=o(A,T),A=s(A,15),A=o(A,te),y^=A}return y^=h.length,b^=h.length,w^=h.length,x^=h.length,y+=b,y+=w,y+=x,b+=y,w+=y,x+=y,y=i(y),b=i(b),w=i(w),x=i(x),y+=b,y+=w,y+=x,b+=y,w+=y,x+=y,("00000000"+(y>>>0).toString(16)).slice(-8)+("00000000"+(b>>>0).toString(16)).slice(-8)+("00000000"+(w>>>0).toString(16)).slice(-8)+("00000000"+(x>>>0).toString(16)).slice(-8)},t.x64.hash128=function(h,p){if(t.inputValidation&&!n(h))return e;p=p||0;for(var m=h.length%16,g=h.length-m,y=[0,p],b=[0,p],w=[0,0],x=[0,0],A=[2277735313,289559509],_=[1291169091,658871167],v=0;v<g;v=v+16)w=[h[v+4]|h[v+5]<<8|h[v+6]<<16|h[v+7]<<24,h[v]|h[v+1]<<8|h[v+2]<<16|h[v+3]<<24],x=[h[v+12]|h[v+13]<<8|h[v+14]<<16|h[v+15]<<24,h[v+8]|h[v+9]<<8|h[v+10]<<16|h[v+11]<<24],w=c(w,A),w=u(w,31),w=c(w,_),y=l(y,w),y=u(y,27),y=a(y,b),y=a(c(y,[0,5]),[0,1390208809]),x=c(x,_),x=u(x,33),x=c(x,A),b=l(b,x),b=u(b,31),b=a(b,y),b=a(c(b,[0,5]),[0,944331445]);switch(w=[0,0],x=[0,0],m){case 15:x=l(x,f([0,h[v+14]],48));case 14:x=l(x,f([0,h[v+13]],40));case 13:x=l(x,f([0,h[v+12]],32));case 12:x=l(x,f([0,h[v+11]],24));case 11:x=l(x,f([0,h[v+10]],16));case 10:x=l(x,f([0,h[v+9]],8));case 9:x=l(x,[0,h[v+8]]),x=c(x,_),x=u(x,33),x=c(x,A),b=l(b,x);case 8:w=l(w,f([0,h[v+7]],56));case 7:w=l(w,f([0,h[v+6]],48));case 6:w=l(w,f([0,h[v+5]],40));case 5:w=l(w,f([0,h[v+4]],32));case 4:w=l(w,f([0,h[v+3]],24));case 3:w=l(w,f([0,h[v+2]],16));case 2:w=l(w,f([0,h[v+1]],8));case 1:w=l(w,[0,h[v]]),w=c(w,A),w=u(w,31),w=c(w,_),y=l(y,w)}return y=l(y,[0,h.length]),b=l(b,[0,h.length]),y=a(y,b),b=a(b,y),y=d(y),b=d(b),y=a(y,b),b=a(b,y),("00000000"+(y[0]>>>0).toString(16)).slice(-8)+("00000000"+(y[1]>>>0).toString(16)).slice(-8)+("00000000"+(b[0]>>>0).toString(16)).slice(-8)+("00000000"+(b[1]>>>0).toString(16)).slice(-8)},typeof go<"u"?(typeof Si<"u"&&Si.exports&&(go=Si.exports=t),go.murmurHash3=t):typeof define=="function"&&define.amd?define([],function(){return t}):(t._murmurHash3=r.murmurHash3,t.noConflict=function(){return r.murmurHash3=t._murmurHash3,t._murmurHash3=e,t.noConflict=e,t},r.murmurHash3=t)})(go)});var Kd=Qe((_8,$d)=>{$d.exports=Hd()});var Ap=Qe((lB,Ep)=>{function Je(r,e){typeof e=="boolean"&&(e={forever:e}),this._originalTimeouts=JSON.parse(JSON.stringify(r)),this._timeouts=r,this._options=e||{},this._maxRetryTime=e&&e.maxRetryTime||1/0,this._fn=null,this._errors=[],this._attempts=1,this._operationTimeout=null,this._operationTimeoutCb=null,this._timeout=null,this._operationStart=null,this._timer=null,this._options.forever&&(this._cachedTimeouts=this._timeouts.slice(0))}Ep.exports=Je;Je.prototype.reset=function(){this._attempts=1,this._timeouts=this._originalTimeouts.slice(0)};Je.prototype.stop=function(){this._timeout&&clearTimeout(this._timeout),this._timer&&clearTimeout(this._timer),this._timeouts=[],this._cachedTimeouts=null};Je.prototype.retry=function(r){if(this._timeout&&clearTimeout(this._timeout),!r)return!1;var e=new Date().getTime();if(r&&e-this._operationStart>=this._maxRetryTime)return this._errors.push(r),this._errors.unshift(new Error("RetryOperation timeout occurred")),!1;this._errors.push(r);var t=this._timeouts.shift();if(t===void 0)if(this._cachedTimeouts)this._errors.splice(0,this._errors.length-1),t=this._cachedTimeouts.slice(-1);else return!1;var n=this;return this._timer=setTimeout(function(){n._attempts++,n._operationTimeoutCb&&(n._timeout=setTimeout(function(){n._operationTimeoutCb(n._attempts)},n._operationTimeout),n._options.unref&&n._timeout.unref()),n._fn(n._attempts)},t),this._options.unref&&this._timer.unref(),!0};Je.prototype.attempt=function(r,e){this._fn=r,e&&(e.timeout&&(this._operationTimeout=e.timeout),e.cb&&(this._operationTimeoutCb=e.cb));var t=this;this._operationTimeoutCb&&(this._timeout=setTimeout(function(){t._operationTimeoutCb()},t._operationTimeout)),this._operationStart=new Date().getTime(),this._fn(this._attempts)};Je.prototype.try=function(r){console.log("Using RetryOperation.try() is deprecated"),this.attempt(r)};Je.prototype.start=function(r){console.log("Using RetryOperation.start() is deprecated"),this.attempt(r)};Je.prototype.start=Je.prototype.try;Je.prototype.errors=function(){return this._errors};Je.prototype.attempts=function(){return this._attempts};Je.prototype.mainError=function(){if(this._errors.length===0)return null;for(var r={},e=null,t=0,n=0;n<this._errors.length;n++){var o=this._errors[n],s=o.message,i=(r[s]||0)+1;r[s]=i,i>=t&&(e=o,t=i)}return e}});var Sp=Qe(Lr=>{var Hw=Ap();Lr.operation=function(r){var e=Lr.timeouts(r);return new Hw(e,{forever:r&&(r.forever||r.retries===1/0),unref:r&&r.unref,maxRetryTime:r&&r.maxRetryTime})};Lr.timeouts=function(r){if(r instanceof Array)return[].concat(r);var e={retries:10,factor:2,minTimeout:1*1e3,maxTimeout:1/0,randomize:!1};for(var t in r)e[t]=r[t];if(e.minTimeout>e.maxTimeout)throw new Error("minTimeout is greater than maxTimeout");for(var n=[],o=0;o<e.retries;o++)n.push(this.createTimeout(o,e));return r&&r.forever&&!n.length&&n.push(this.createTimeout(o,e)),n.sort(function(s,i){return s-i}),n};Lr.createTimeout=function(r,e){var t=e.randomize?Math.random()+1:1,n=Math.round(t*Math.max(e.minTimeout,1)*Math.pow(e.factor,r));return n=Math.min(n,e.maxTimeout),n};Lr.wrap=function(r,e,t){if(e instanceof Array&&(t=e,e=null),!t){t=[];for(var n in r)typeof r[n]=="function"&&t.push(n)}for(var o=0;o<t.length;o++){var s=t[o],i=r[s];r[s]=function(c){var u=Lr.operation(e),f=Array.prototype.slice.call(arguments,1),l=f.pop();f.push(function(d){u.retry(d)||(d&&(arguments[0]=u.mainError()),l.apply(this,arguments))}),u.attempt(function(){c.apply(r,f)})}.bind(r,i),r[s].options=e}}});var Bp=Qe((fB,_p)=>{_p.exports=Sp()});var gb={};Re(gb,{createLibp2p:()=>mb});var Du=Symbol.for("@libp2p/connection");var La=Symbol.for("@libp2p/content-routing");var Na=Symbol.for("@libp2p/peer-discovery");var No=Symbol.for("@libp2p/peer-id");function Po(r){return!!r?.[No]}var Pa=Symbol.for("@libp2p/peer-routing");var Ra="keep-alive";var Sb=Symbol.for("@libp2p/transport");var Ft;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(Ft||(Ft={}));var et=class extends Error{static name="AbortError";constructor(e="The operation was aborted"){super(e),this.name="AbortError"}};var D=class extends Error{static name="InvalidParametersError";constructor(e="Invalid parameters"){super(e),this.name="InvalidParametersError"}},Rr=class extends Error{static name="InvalidPublicKeyError";constructor(e="Invalid public key"){super(e),this.name="InvalidPublicKeyError"}},_n=class extends Error{static name="InvalidPrivateKeyError";constructor(e="Invalid private key"){super(e),this.name="InvalidPrivateKeyError"}};var Ro=class extends Error{static name="ConnectionClosingError";constructor(e="The connection is closing"){super(e),this.name="ConnectionClosingError"}},Do=class extends Error{static name="ConnectionClosedError";constructor(e="The connection is closed"){super(e),this.name="ConnectionClosedError"}};var Mo=class extends Error{static name="NotFoundError";constructor(e="Not found"){super(e),this.name="NotFoundError"}},Bn=class extends Error{static name="InvalidPeerIdError";constructor(e="Invalid PeerID"){super(e),this.name="InvalidPeerIdError"}},Vt=class extends Error{static name="InvalidMultiaddrError";constructor(e="Invalid multiaddr"){super(e),this.name="InvalidMultiaddrError"}},Uo=class extends Error{static name="InvalidCIDError";constructor(e="Invalid CID"){super(e),this.name="InvalidCIDError"}},Oo=class extends Error{static name="InvalidMultihashError";constructor(e="Invalid Multihash"){super(e),this.name="InvalidMultihashError"}},In=class extends Error{static name="UnsupportedProtocolError";constructor(e="Unsupported protocol error"){super(e),this.name="UnsupportedProtocolError"}},Fo=class extends Error{static name="InvalidMessageError";constructor(e="Invalid message"){super(e),this.name="InvalidMessageError"}};var Vo=class extends Error{static name="TimeoutError";constructor(e="Timed out"){super(e),this.name="TimeoutError"}},xt=class extends Error{static name="NotStartedError";constructor(e="Not started"){super(e),this.name="NotStartedError"}};var Dr=class extends Error{static name="DialError";constructor(e="Dial error"){super(e),this.name="DialError"}};var Mr=class extends Error{static name="LimitedConnectionError";constructor(e="Limited connection"){super(e),this.name="LimitedConnectionError"}},Ho=class extends Error{static name="TooManyInboundProtocolStreamsError";constructor(e="Too many inbound protocol streams"){super(e),this.name="TooManyInboundProtocolStreamsError"}},$o=class extends Error{static name="TooManyOutboundProtocolStreamsError";constructor(e="Too many outbound protocol streams"){super(e),this.name="TooManyOutboundProtocolStreamsError"}},Ht=class extends Error{static name="UnsupportedKeyTypeError";constructor(e="Unsupported key type"){super(e),this.name="UnsupportedKeyTypeError"}};var ee=(r,...e)=>{try{[...e]}catch{}};var vt=class extends EventTarget{#e=new Map;constructor(){super(),ee(1/0,this)}listenerCount(e){let t=this.#e.get(e);return t==null?0:t.length}addEventListener(e,t,n){super.addEventListener(e,t,n);let o=this.#e.get(e);o==null&&(o=[],this.#e.set(e,o)),o.push({callback:t,once:(n!==!0&&n!==!1&&n?.once)??!1})}removeEventListener(e,t,n){super.removeEventListener(e.toString(),t??null,n);let o=this.#e.get(e);o!=null&&(o=o.filter(({callback:s})=>s!==t),this.#e.set(e,o))}dispatchEvent(e){let t=super.dispatchEvent(e),n=this.#e.get(e.type);return n==null||(n=n.filter(({once:o})=>!o),this.#e.set(e.type,n)),t}safeDispatchEvent(e,t={}){return this.dispatchEvent(new CustomEvent(e,t))}};function Ko(r){return r!=null&&typeof r.start=="function"&&typeof r.stop=="function"}async function Mu(...r){let e=[];for(let t of r)Ko(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStart!=null&&await t.beforeStart()})),await Promise.all(e.map(async t=>{await t.start()})),await Promise.all(e.map(async t=>{t.afterStart!=null&&await t.afterStart()}))}async function Uu(...r){let e=[];for(let t of r)Ko(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStop!=null&&await t.beforeStop()})),await Promise.all(e.map(async t=>{await t.stop()})),await Promise.all(e.map(async t=>{t.afterStop!=null&&await t.afterStop()}))}var kn=Symbol.for("@libp2p/service-capabilities"),Da=Symbol.for("@libp2p/service-dependencies");var Va={};Re(Va,{base58btc:()=>W,base58flickr:()=>nm});var ex=new Uint8Array(0);function Ou(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function Et(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function Fu(r){return new TextEncoder().encode(r)}function Vu(r){return new TextDecoder().decode(r)}function Jp(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var o=0;o<r.length;o++){var s=r.charAt(o),i=s.charCodeAt(0);if(t[i]!==255)throw new TypeError(s+" is ambiguous");t[i]=o}var a=r.length,c=r.charAt(0),u=Math.log(a)/Math.log(256),f=Math.log(256)/Math.log(a);function l(p){if(p instanceof Uint8Array||(ArrayBuffer.isView(p)?p=new Uint8Array(p.buffer,p.byteOffset,p.byteLength):Array.isArray(p)&&(p=Uint8Array.from(p))),!(p instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(p.length===0)return"";for(var m=0,g=0,y=0,b=p.length;y!==b&&p[y]===0;)y++,m++;for(var w=(b-y)*f+1>>>0,x=new Uint8Array(w);y!==b;){for(var A=p[y],_=0,v=w-1;(A!==0||_<g)&&v!==-1;v--,_++)A+=256*x[v]>>>0,x[v]=A%a>>>0,A=A/a>>>0;if(A!==0)throw new Error("Non-zero carry");g=_,y++}for(var B=w-g;B!==w&&x[B]===0;)B++;for(var T=c.repeat(m);B<w;++B)T+=r.charAt(x[B]);return T}function d(p){if(typeof p!="string")throw new TypeError("Expected String");if(p.length===0)return new Uint8Array;var m=0;if(p[m]!==" "){for(var g=0,y=0;p[m]===c;)g++,m++;for(var b=(p.length-m)*u+1>>>0,w=new Uint8Array(b);p[m];){var x=t[p.charCodeAt(m)];if(x===255)return;for(var A=0,_=b-1;(x!==0||A<y)&&_!==-1;_--,A++)x+=a*w[_]>>>0,w[_]=x%256>>>0,x=x/256>>>0;if(x!==0)throw new Error("Non-zero carry");y=A,m++}if(p[m]!==" "){for(var v=b-y;v!==b&&w[v]===0;)v++;for(var B=new Uint8Array(g+(b-v)),T=g;v!==b;)B[T++]=w[v++];return B}}}function h(p){var m=d(p);if(m)return m;throw new Error(`Non-${e} character`)}return{encode:l,decodeUnsafe:d,decode:h}}var Qp=Jp,em=Qp,$u=em;var Ma=class{name;prefix;baseEncode;constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},Ua=class{name;prefix;baseDecode;prefixCodePoint;constructor(e,t,n){this.name=e,this.prefix=t;let o=t.codePointAt(0);if(o===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=o,this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return Ku(this,e)}},Oa=class{decoders;constructor(e){this.decoders=e}or(e){return Ku(this,e)}decode(e){let t=e[0],n=this.decoders[t];if(n!=null)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Ku(r,e){return new Oa({...r.decoders??{[r.prefix]:r},...e.decoders??{[e.prefix]:e}})}var Fa=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(e,t,n,o){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=o,this.encoder=new Ma(e,t,n),this.decoder=new Ua(e,t,o)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};function Ur({name:r,prefix:e,encode:t,decode:n}){return new Fa(r,e,t,n)}function $t({name:r,prefix:e,alphabet:t}){let{encode:n,decode:o}=$u(t,r);return Ur({prefix:e,name:r,encode:n,decode:s=>Et(o(s))})}function tm(r,e,t,n){let o={};for(let f=0;f<e.length;++f)o[e[f]]=f;let s=r.length;for(;r[s-1]==="=";)--s;let i=new Uint8Array(s*t/8|0),a=0,c=0,u=0;for(let f=0;f<s;++f){let l=o[r[f]];if(l===void 0)throw new SyntaxError(`Non-${n} character`);c=c<<t|l,a+=t,a>=8&&(a-=8,i[u++]=255&c>>a)}if(a>=t||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return i}function rm(r,e,t){let n=e[e.length-1]==="=",o=(1<<t)-1,s="",i=0,a=0;for(let c=0;c<r.length;++c)for(a=a<<8|r[c],i+=8;i>t;)i-=t,s+=e[o&a>>i];if(i!==0&&(s+=e[o&a<<t-i]),n)for(;s.length*t&7;)s+="=";return s}function se({name:r,prefix:e,bitsPerChar:t,alphabet:n}){return Ur({prefix:e,name:r,encode(o){return rm(o,n,t)},decode(o){return tm(o,n,t,r)}})}var W=$t({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),nm=$t({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var Ha={};Re(Ha,{base32:()=>Ge,base32hex:()=>am,base32hexpad:()=>lm,base32hexpadupper:()=>um,base32hexupper:()=>cm,base32pad:()=>sm,base32padupper:()=>im,base32upper:()=>om,base32z:()=>fm});var Ge=se({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),om=se({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),sm=se({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),im=se({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),am=se({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),cm=se({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),lm=se({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),um=se({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),fm=se({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var $a={};Re($a,{base36:()=>Cn,base36upper:()=>hm});var Cn=$t({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),hm=$t({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var dm=Gu,qu=128,pm=127,mm=~pm,gm=Math.pow(2,31);function Gu(r,e,t){e=e||[],t=t||0;for(var n=t;r>=gm;)e[t++]=r&255|qu,r/=128;for(;r&mm;)e[t++]=r&255|qu,r>>>=7;return e[t]=r|0,Gu.bytes=t-n+1,e}var ym=Ka,wm=128,zu=127;function Ka(r,n){var t=0,n=n||0,o=0,s=n,i,a=r.length;do{if(s>=a)throw Ka.bytes=0,new RangeError("Could not decode varint");i=r[s++],t+=o<28?(i&zu)<<o:(i&zu)*Math.pow(2,o),o+=7}while(i>=wm);return Ka.bytes=s-n,t}var bm=Math.pow(2,7),xm=Math.pow(2,14),vm=Math.pow(2,21),Em=Math.pow(2,28),Am=Math.pow(2,35),Sm=Math.pow(2,42),_m=Math.pow(2,49),Bm=Math.pow(2,56),Im=Math.pow(2,63),km=function(r){return r<bm?1:r<xm?2:r<vm?3:r<Em?4:r<Am?5:r<Sm?6:r<_m?7:r<Bm?8:r<Im?9:10},Cm={encode:dm,decode:ym,encodingLength:km},Tm=Cm,Tn=Tm;function Ln(r,e=0){return[Tn.decode(r,e),Tn.decode.bytes]}function Or(r,e,t=0){return Tn.encode(r,e,t),e}function Fr(r){return Tn.encodingLength(r)}function tt(r,e){let t=e.byteLength,n=Fr(r),o=n+Fr(t),s=new Uint8Array(o+t);return Or(r,s,0),Or(t,s,n),s.set(e,o),new Vr(r,t,e,s)}function rt(r){let e=Et(r),[t,n]=Ln(e),[o,s]=Ln(e.subarray(n)),i=e.subarray(n+s);if(i.byteLength!==o)throw new Error("Incorrect length");return new Vr(t,o,i,e)}function Wu(r,e){if(r===e)return!0;{let t=e;return r.code===t.code&&r.size===t.size&&t.bytes instanceof Uint8Array&&Ou(r.bytes,t.bytes)}}var Vr=class{code;size;digest;bytes;constructor(e,t,n,o){this.code=e,this.size=t,this.digest=n,this.bytes=o}};function ju(r,e){let{bytes:t,version:n}=r;switch(n){case 0:return Nm(t,qa(r),e??W.encoder);default:return Pm(t,qa(r),e??Ge.encoder)}}var Zu=new WeakMap;function qa(r){let e=Zu.get(r);if(e==null){let t=new Map;return Zu.set(r,t),t}return e}var pe=class r{code;version;multihash;bytes;"/";constructor(e,t,n,o){this.code=t,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:e,multihash:t}=this;if(e!==Nn)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==Rm)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,n=tt(e,t);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return r.equals(this,e)}static equals(e,t){let n=t;return n!=null&&e.code===n.code&&e.version===n.version&&Wu(e.multihash,n.multihash)}toString(e){return ju(this,e)}toJSON(){return{"/":ju(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;let t=e;if(t instanceof r)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){let{version:n,code:o,multihash:s,bytes:i}=t;return new r(n,o,s,i??Xu(n,o,s.bytes))}else if(t[Dm]===!0){let{version:n,multihash:o,code:s}=t,i=rt(o);return r.create(n,s,i)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==Nn)throw new Error(`Version 0 CID must use dag-pb (code: ${Nn}) block encoding`);return new r(e,t,n,n.bytes)}case 1:{let o=Xu(e,t,n.bytes);return new r(e,t,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return r.create(0,Nn,e)}static createV1(e,t){return r.create(1,e,t)}static decode(e){let[t,n]=r.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=r.inspectBytes(e),n=t.size-t.multihashSize,o=Et(e.subarray(n,n+t.multihashSize));if(o.byteLength!==t.multihashSize)throw new Error("Incorrect length");let s=o.subarray(t.multihashSize-t.digestSize),i=new Vr(t.multihashCode,t.digestSize,s,o);return[t.version===0?r.createV0(i):r.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){let t=0,n=()=>{let[l,d]=Ln(e.subarray(t));return t+=d,l},o=n(),s=Nn;if(o===18?(o=0,t=0):s=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);let i=t,a=n(),c=n(),u=t+c,f=u-i;return{version:o,codec:s,multihashCode:a,digestSize:c,multihashSize:f,size:u}}static parse(e,t){let[n,o]=Lm(e,t),s=r.decode(o);if(s.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return qa(s).set(n,e),s}};function Lm(r,e){switch(r[0]){case"Q":{let t=e??W;return[W.prefix,t.decode(`${W.prefix}${r}`)]}case W.prefix:{let t=e??W;return[W.prefix,t.decode(r)]}case Ge.prefix:{let t=e??Ge;return[Ge.prefix,t.decode(r)]}case Cn.prefix:{let t=e??Cn;return[Cn.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}}function Nm(r,e,t){let{prefix:n}=t;if(n!==W.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let o=e.get(n);if(o==null){let s=t.encode(r).slice(1);return e.set(n,s),s}else return o}function Pm(r,e,t){let{prefix:n}=t,o=e.get(n);if(o==null){let s=t.encode(r);return e.set(n,s),s}else return o}var Nn=112,Rm=18;function Xu(r,e,t){let n=Fr(r),o=n+Fr(e),s=new Uint8Array(o+t.byteLength);return Or(r,s,0),Or(e,s,n),s.set(t,o),s}var Dm=Symbol.for("@ipld/js-cid/CID");var za={};Re(za,{identity:()=>St});var Yu=0,Mm="identity",Ju=Et;function Um(r){return tt(Yu,Ju(r))}var St={code:Yu,name:Mm,encode:Ju,digest:Um};function ie(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function Qu(r){if(!Number.isSafeInteger(r)||r<0)throw new Error(`positive integer expected, not ${r}`)}function Om(r){return r instanceof Uint8Array||r!=null&&typeof r=="object"&&r.constructor.name==="Uint8Array"}function Hr(r,...e){if(!Om(r))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(r.length))throw new Error(`Uint8Array expected of length ${e}, not of length=${r.length}`)}function ef(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");Qu(r.outputLen),Qu(r.blockLen)}function $r(r,e=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(e&&r.finished)throw new Error("Hash#digest() has already been called")}function tf(r,e){Hr(r);let t=e.outputLen;if(r.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}var cr=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;var zo=r=>new DataView(r.buffer,r.byteOffset,r.byteLength),nt=(r,e)=>r<<32-e|r>>>e;var Ax=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function rf(r){if(typeof r!="string")throw new Error(`utf8ToBytes expected string, got ${typeof r}`);return new Uint8Array(new TextEncoder().encode(r))}function Pn(r){return typeof r=="string"&&(r=rf(r)),Hr(r),r}function Ga(...r){let e=0;for(let n=0;n<r.length;n++){let o=r[n];Hr(o),e+=o.length}let t=new Uint8Array(e);for(let n=0,o=0;n<r.length;n++){let s=r[n];t.set(s,o),o+=s.length}return t}var Kr=class{clone(){return this._cloneInto()}},Sx={}.toString;function Go(r){let e=n=>r().update(Pn(n)).digest(),t=r();return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=()=>r(),e}function qr(r=32){if(cr&&typeof cr.getRandomValues=="function")return cr.getRandomValues(new Uint8Array(r));if(cr&&typeof cr.randomBytes=="function")return cr.randomBytes(r);throw new Error("crypto.getRandomValues must be defined")}function Fm(r,e,t,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(e,t,n);let o=BigInt(32),s=BigInt(4294967295),i=Number(t>>o&s),a=Number(t&s),c=n?4:0,u=n?0:4;r.setUint32(e+c,i,n),r.setUint32(e+u,a,n)}var nf=(r,e,t)=>r&e^~r&t,of=(r,e,t)=>r&e^r&t^e&t,zr=class extends Kr{constructor(e,t,n,o){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=o,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=zo(this.buffer)}update(e){$r(this);let{view:t,buffer:n,blockLen:o}=this;e=Pn(e);let s=e.length;for(let i=0;i<s;){let a=Math.min(o-this.pos,s-i);if(a===o){let c=zo(e);for(;o<=s-i;i+=o)this.process(c,i);continue}n.set(e.subarray(i,i+a),this.pos),this.pos+=a,i+=a,this.pos===o&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){$r(this),tf(e,this),this.finished=!0;let{buffer:t,view:n,blockLen:o,isLE:s}=this,{pos:i}=this;t[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>o-i&&(this.process(n,0),i=0);for(let l=i;l<o;l++)t[l]=0;Fm(n,o-8,BigInt(this.length*8),s),this.process(n,0);let a=zo(e),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let u=c/4,f=this.get();if(u>f.length)throw new Error("_sha2: outputLen bigger than state");for(let l=0;l<u;l++)a.setUint32(4*l,f[l],s)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());let{blockLen:t,buffer:n,length:o,finished:s,destroyed:i,pos:a}=this;return e.length=o,e.pos=a,e.finished=s,e.destroyed=i,o%t&&e.buffer.set(n),e}};var Wo=BigInt(4294967295),Wa=BigInt(32);function sf(r,e=!1){return e?{h:Number(r&Wo),l:Number(r>>Wa&Wo)}:{h:Number(r>>Wa&Wo)|0,l:Number(r&Wo)|0}}function Vm(r,e=!1){let t=new Uint32Array(r.length),n=new Uint32Array(r.length);for(let o=0;o<r.length;o++){let{h:s,l:i}=sf(r[o],e);[t[o],n[o]]=[s,i]}return[t,n]}var Hm=(r,e)=>BigInt(r>>>0)<<Wa|BigInt(e>>>0),$m=(r,e,t)=>r>>>t,Km=(r,e,t)=>r<<32-t|e>>>t,qm=(r,e,t)=>r>>>t|e<<32-t,zm=(r,e,t)=>r<<32-t|e>>>t,Gm=(r,e,t)=>r<<64-t|e>>>t-32,Wm=(r,e,t)=>r>>>t-32|e<<64-t,jm=(r,e)=>e,Zm=(r,e)=>r,Xm=(r,e,t)=>r<<t|e>>>32-t,Ym=(r,e,t)=>e<<t|r>>>32-t,Jm=(r,e,t)=>e<<t-32|r>>>64-t,Qm=(r,e,t)=>r<<t-32|e>>>64-t;function eg(r,e,t,n){let o=(e>>>0)+(n>>>0);return{h:r+t+(o/2**32|0)|0,l:o|0}}var tg=(r,e,t)=>(r>>>0)+(e>>>0)+(t>>>0),rg=(r,e,t,n)=>e+t+n+(r/2**32|0)|0,ng=(r,e,t,n)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0),og=(r,e,t,n,o)=>e+t+n+o+(r/2**32|0)|0,sg=(r,e,t,n,o)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0)+(o>>>0),ig=(r,e,t,n,o,s)=>e+t+n+o+s+(r/2**32|0)|0;var ag={fromBig:sf,split:Vm,toBig:Hm,shrSH:$m,shrSL:Km,rotrSH:qm,rotrSL:zm,rotrBH:Gm,rotrBL:Wm,rotr32H:jm,rotr32L:Zm,rotlSH:Xm,rotlSL:Ym,rotlBH:Jm,rotlBL:Qm,add:eg,add3L:tg,add3H:rg,add4L:ng,add4H:og,add5H:ig,add5L:sg},O=ag;var[cg,lg]=O.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(r=>BigInt(r))),Kt=new Uint32Array(80),qt=new Uint32Array(80),ja=class extends zr{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:e,Al:t,Bh:n,Bl:o,Ch:s,Cl:i,Dh:a,Dl:c,Eh:u,El:f,Fh:l,Fl:d,Gh:h,Gl:p,Hh:m,Hl:g}=this;return[e,t,n,o,s,i,a,c,u,f,l,d,h,p,m,g]}set(e,t,n,o,s,i,a,c,u,f,l,d,h,p,m,g){this.Ah=e|0,this.Al=t|0,this.Bh=n|0,this.Bl=o|0,this.Ch=s|0,this.Cl=i|0,this.Dh=a|0,this.Dl=c|0,this.Eh=u|0,this.El=f|0,this.Fh=l|0,this.Fl=d|0,this.Gh=h|0,this.Gl=p|0,this.Hh=m|0,this.Hl=g|0}process(e,t){for(let w=0;w<16;w++,t+=4)Kt[w]=e.getUint32(t),qt[w]=e.getUint32(t+=4);for(let w=16;w<80;w++){let x=Kt[w-15]|0,A=qt[w-15]|0,_=O.rotrSH(x,A,1)^O.rotrSH(x,A,8)^O.shrSH(x,A,7),v=O.rotrSL(x,A,1)^O.rotrSL(x,A,8)^O.shrSL(x,A,7),B=Kt[w-2]|0,T=qt[w-2]|0,te=O.rotrSH(B,T,19)^O.rotrBH(B,T,61)^O.shrSH(B,T,6),V=O.rotrSL(B,T,19)^O.rotrBL(B,T,61)^O.shrSL(B,T,6),F=O.add4L(v,V,qt[w-7],qt[w-16]),R=O.add4H(F,_,te,Kt[w-7],Kt[w-16]);Kt[w]=R|0,qt[w]=F|0}let{Ah:n,Al:o,Bh:s,Bl:i,Ch:a,Cl:c,Dh:u,Dl:f,Eh:l,El:d,Fh:h,Fl:p,Gh:m,Gl:g,Hh:y,Hl:b}=this;for(let w=0;w<80;w++){let x=O.rotrSH(l,d,14)^O.rotrSH(l,d,18)^O.rotrBH(l,d,41),A=O.rotrSL(l,d,14)^O.rotrSL(l,d,18)^O.rotrBL(l,d,41),_=l&h^~l&m,v=d&p^~d&g,B=O.add5L(b,A,v,lg[w],qt[w]),T=O.add5H(B,y,x,_,cg[w],Kt[w]),te=B|0,V=O.rotrSH(n,o,28)^O.rotrBH(n,o,34)^O.rotrBH(n,o,39),F=O.rotrSL(n,o,28)^O.rotrBL(n,o,34)^O.rotrBL(n,o,39),R=n&s^n&a^s&a,k=o&i^o&c^i&c;y=m|0,b=g|0,m=h|0,g=p|0,h=l|0,p=d|0,{h:l,l:d}=O.add(u|0,f|0,T|0,te|0),u=a|0,f=c|0,a=s|0,c=i|0,s=n|0,i=o|0;let L=O.add3L(te,F,k);n=O.add3H(L,T,V,R),o=L|0}({h:n,l:o}=O.add(this.Ah|0,this.Al|0,n|0,o|0)),{h:s,l:i}=O.add(this.Bh|0,this.Bl|0,s|0,i|0),{h:a,l:c}=O.add(this.Ch|0,this.Cl|0,a|0,c|0),{h:u,l:f}=O.add(this.Dh|0,this.Dl|0,u|0,f|0),{h:l,l:d}=O.add(this.Eh|0,this.El|0,l|0,d|0),{h,l:p}=O.add(this.Fh|0,this.Fl|0,h|0,p|0),{h:m,l:g}=O.add(this.Gh|0,this.Gl|0,m|0,g|0),{h:y,l:b}=O.add(this.Hh|0,this.Hl|0,y|0,b|0),this.set(n,o,s,i,a,c,u,f,l,d,h,p,m,g,y,b)}roundClean(){Kt.fill(0),qt.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};var af=Go(()=>new ja);var Zo={};Re(Zo,{aInRange:()=>$e,abool:()=>ot,abytes:()=>Gr,bitGet:()=>mg,bitLen:()=>Qa,bitMask:()=>Dn,bitSet:()=>gg,bytesToHex:()=>Bt,bytesToNumberBE:()=>It,bytesToNumberLE:()=>Gt,concatBytes:()=>kt,createHmacDrbg:()=>ec,ensureBytes:()=>ae,equalBytes:()=>dg,hexToBytes:()=>ur,hexToNumber:()=>Ja,inRange:()=>Rn,isBytes:()=>zt,memoized:()=>hr,notImplemented:()=>wg,numberToBytesBE:()=>Wt,numberToBytesLE:()=>fr,numberToHexUnpadded:()=>lr,numberToVarBytesBE:()=>hg,utf8ToBytes:()=>pg,validateObject:()=>ft});var Ya=BigInt(0),jo=BigInt(1),ug=BigInt(2);function zt(r){return r instanceof Uint8Array||r!=null&&typeof r=="object"&&r.constructor.name==="Uint8Array"}function Gr(r){if(!zt(r))throw new Error("Uint8Array expected")}function ot(r,e){if(typeof e!="boolean")throw new Error(`${r} must be valid boolean, got "${e}".`)}var fg=Array.from({length:256},(r,e)=>e.toString(16).padStart(2,"0"));function Bt(r){Gr(r);let e="";for(let t=0;t<r.length;t++)e+=fg[r[t]];return e}function lr(r){let e=r.toString(16);return e.length&1?`0${e}`:e}function Ja(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);return BigInt(r===""?"0":`0x${r}`)}var _t={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function cf(r){if(r>=_t._0&&r<=_t._9)return r-_t._0;if(r>=_t._A&&r<=_t._F)return r-(_t._A-10);if(r>=_t._a&&r<=_t._f)return r-(_t._a-10)}function ur(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);let e=r.length,t=e/2;if(e%2)throw new Error("padded hex string expected, got unpadded hex of length "+e);let n=new Uint8Array(t);for(let o=0,s=0;o<t;o++,s+=2){let i=cf(r.charCodeAt(s)),a=cf(r.charCodeAt(s+1));if(i===void 0||a===void 0){let c=r[s]+r[s+1];throw new Error('hex string expected, got non-hex character "'+c+'" at index '+s)}n[o]=i*16+a}return n}function It(r){return Ja(Bt(r))}function Gt(r){return Gr(r),Ja(Bt(Uint8Array.from(r).reverse()))}function Wt(r,e){return ur(r.toString(16).padStart(e*2,"0"))}function fr(r,e){return Wt(r,e).reverse()}function hg(r){return ur(lr(r))}function ae(r,e,t){let n;if(typeof e=="string")try{n=ur(e)}catch(s){throw new Error(`${r} must be valid hex string, got "${e}". Cause: ${s}`)}else if(zt(e))n=Uint8Array.from(e);else throw new Error(`${r} must be hex string or Uint8Array`);let o=n.length;if(typeof t=="number"&&o!==t)throw new Error(`${r} expected ${t} bytes, got ${o}`);return n}function kt(...r){let e=0;for(let n=0;n<r.length;n++){let o=r[n];Gr(o),e+=o.length}let t=new Uint8Array(e);for(let n=0,o=0;n<r.length;n++){let s=r[n];t.set(s,o),o+=s.length}return t}function dg(r,e){if(r.length!==e.length)return!1;let t=0;for(let n=0;n<r.length;n++)t|=r[n]^e[n];return t===0}function pg(r){if(typeof r!="string")throw new Error(`utf8ToBytes expected string, got ${typeof r}`);return new Uint8Array(new TextEncoder().encode(r))}var Za=r=>typeof r=="bigint"&&Ya<=r;function Rn(r,e,t){return Za(r)&&Za(e)&&Za(t)&&e<=r&&r<t}function $e(r,e,t,n){if(!Rn(e,t,n))throw new Error(`expected valid ${r}: ${t} <= n < ${n}, got ${typeof e} ${e}`)}function Qa(r){let e;for(e=0;r>Ya;r>>=jo,e+=1);return e}function mg(r,e){return r>>BigInt(e)&jo}function gg(r,e,t){return r|(t?jo:Ya)<<BigInt(e)}var Dn=r=>(ug<<BigInt(r-1))-jo,Xa=r=>new Uint8Array(r),lf=r=>Uint8Array.from(r);function ec(r,e,t){if(typeof r!="number"||r<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof t!="function")throw new Error("hmacFn must be a function");let n=Xa(r),o=Xa(r),s=0,i=()=>{n.fill(1),o.fill(0),s=0},a=(...l)=>t(o,n,...l),c=(l=Xa())=>{o=a(lf([0]),l),n=a(),l.length!==0&&(o=a(lf([1]),l),n=a())},u=()=>{if(s++>=1e3)throw new Error("drbg: tried 1000 values");let l=0,d=[];for(;l<e;){n=a();let h=n.slice();d.push(h),l+=n.length}return kt(...d)};return(l,d)=>{i(),c(l);let h;for(;!(h=d(u()));)c();return i(),h}}var yg={bigint:r=>typeof r=="bigint",function:r=>typeof r=="function",boolean:r=>typeof r=="boolean",string:r=>typeof r=="string",stringOrUint8Array:r=>typeof r=="string"||zt(r),isSafeInteger:r=>Number.isSafeInteger(r),array:r=>Array.isArray(r),field:(r,e)=>e.Fp.isValid(r),hash:r=>typeof r=="function"&&Number.isSafeInteger(r.outputLen)};function ft(r,e,t={}){let n=(o,s,i)=>{let a=yg[s];if(typeof a!="function")throw new Error(`Invalid validator "${s}", expected function`);let c=r[o];if(!(i&&c===void 0)&&!a(c,r))throw new Error(`Invalid param ${String(o)}=${c} (${typeof c}), expected ${s}`)};for(let[o,s]of Object.entries(e))n(o,s,!1);for(let[o,s]of Object.entries(t))n(o,s,!0);return r}var wg=()=>{throw new Error("not implemented")};function hr(r){let e=new WeakMap;return(t,...n)=>{let o=e.get(t);if(o!==void 0)return o;let s=r(t,...n);return e.set(t,s),s}}var me=BigInt(0),re=BigInt(1),dr=BigInt(2),bg=BigInt(3),tc=BigInt(4),uf=BigInt(5),ff=BigInt(8),xg=BigInt(9),vg=BigInt(16);function Y(r,e){let t=r%e;return t>=me?t:e+t}function Eg(r,e,t){if(t<=me||e<me)throw new Error("Expected power/modulo > 0");if(t===re)return me;let n=re;for(;e>me;)e&re&&(n=n*r%t),r=r*r%t,e>>=re;return n}function ne(r,e,t){let n=r;for(;e-- >me;)n*=n,n%=t;return n}function Xo(r,e){if(r===me||e<=me)throw new Error(`invert: expected positive integers, got n=${r} mod=${e}`);let t=Y(r,e),n=e,o=me,s=re,i=re,a=me;for(;t!==me;){let u=n/t,f=n%t,l=o-i*u,d=s-a*u;n=t,t=f,o=i,s=a,i=l,a=d}if(n!==re)throw new Error("invert: does not exist");return Y(o,e)}function Ag(r){let e=(r-re)/dr,t,n,o;for(t=r-re,n=0;t%dr===me;t/=dr,n++);for(o=dr;o<r&&Eg(o,e,r)!==r-re;o++);if(n===1){let i=(r+re)/tc;return function(c,u){let f=c.pow(u,i);if(!c.eql(c.sqr(f),u))throw new Error("Cannot find square root");return f}}let s=(t+re)/dr;return function(a,c){if(a.pow(c,e)===a.neg(a.ONE))throw new Error("Cannot find square root");let u=n,f=a.pow(a.mul(a.ONE,o),t),l=a.pow(c,s),d=a.pow(c,t);for(;!a.eql(d,a.ONE);){if(a.eql(d,a.ZERO))return a.ZERO;let h=1;for(let m=a.sqr(d);h<u&&!a.eql(m,a.ONE);h++)m=a.sqr(m);let p=a.pow(f,re<<BigInt(u-h-1));f=a.sqr(p),l=a.mul(l,p),d=a.mul(d,f),u=h}return l}}function Sg(r){if(r%tc===bg){let e=(r+re)/tc;return function(n,o){let s=n.pow(o,e);if(!n.eql(n.sqr(s),o))throw new Error("Cannot find square root");return s}}if(r%ff===uf){let e=(r-uf)/ff;return function(n,o){let s=n.mul(o,dr),i=n.pow(s,e),a=n.mul(o,i),c=n.mul(n.mul(a,dr),i),u=n.mul(a,n.sub(c,n.ONE));if(!n.eql(n.sqr(u),o))throw new Error("Cannot find square root");return u}}return r%vg,Ag(r)}var hf=(r,e)=>(Y(r,e)&re)===re,_g=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function rc(r){let e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},t=_g.reduce((n,o)=>(n[o]="function",n),e);return ft(r,t)}function Bg(r,e,t){if(t<me)throw new Error("Expected power > 0");if(t===me)return r.ONE;if(t===re)return e;let n=r.ONE,o=e;for(;t>me;)t&re&&(n=r.mul(n,o)),o=r.sqr(o),t>>=re;return n}function Ig(r,e){let t=new Array(e.length),n=e.reduce((s,i,a)=>r.is0(i)?s:(t[a]=s,r.mul(s,i)),r.ONE),o=r.inv(n);return e.reduceRight((s,i,a)=>r.is0(i)?s:(t[a]=r.mul(s,t[a]),r.mul(s,i)),o),t}function nc(r,e){let t=e!==void 0?e:r.toString(2).length,n=Math.ceil(t/8);return{nBitLength:t,nByteLength:n}}function jt(r,e,t=!1,n={}){if(r<=me)throw new Error(`Expected Field ORDER > 0, got ${r}`);let{nBitLength:o,nByteLength:s}=nc(r,e);if(s>2048)throw new Error("Field lengths over 2048 bytes are not supported");let i=Sg(r),a=Object.freeze({ORDER:r,BITS:o,BYTES:s,MASK:Dn(o),ZERO:me,ONE:re,create:c=>Y(c,r),isValid:c=>{if(typeof c!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof c}`);return me<=c&&c<r},is0:c=>c===me,isOdd:c=>(c&re)===re,neg:c=>Y(-c,r),eql:(c,u)=>c===u,sqr:c=>Y(c*c,r),add:(c,u)=>Y(c+u,r),sub:(c,u)=>Y(c-u,r),mul:(c,u)=>Y(c*u,r),pow:(c,u)=>Bg(a,c,u),div:(c,u)=>Y(c*Xo(u,r),r),sqrN:c=>c*c,addN:(c,u)=>c+u,subN:(c,u)=>c-u,mulN:(c,u)=>c*u,inv:c=>Xo(c,r),sqrt:n.sqrt||(c=>i(a,c)),invertBatch:c=>Ig(a,c),cmov:(c,u,f)=>f?u:c,toBytes:c=>t?fr(c,s):Wt(c,s),fromBytes:c=>{if(c.length!==s)throw new Error(`Fp.fromBytes: expected ${s}, got ${c.length}`);return t?Gt(c):It(c)}});return Object.freeze(a)}function df(r){if(typeof r!="bigint")throw new Error("field order must be bigint");let e=r.toString(2).length;return Math.ceil(e/8)}function oc(r){let e=df(r);return e+Math.ceil(e/2)}function pf(r,e,t=!1){let n=r.length,o=df(e),s=oc(e);if(n<16||n<s||n>1024)throw new Error(`expected ${s}-1024 bytes of input, got ${n}`);let i=t?It(r):Gt(r),a=Y(i,e-re)+re;return t?fr(a,o):Wt(a,o)}var Cg=BigInt(0),sc=BigInt(1),ic=new WeakMap,mf=new WeakMap;function Yo(r,e){let t=(s,i)=>{let a=i.negate();return s?a:i},n=s=>{if(!Number.isSafeInteger(s)||s<=0||s>e)throw new Error(`Wrong window size=${s}, should be [1..${e}]`)},o=s=>{n(s);let i=Math.ceil(e/s)+1,a=2**(s-1);return{windows:i,windowSize:a}};return{constTimeNegate:t,unsafeLadder(s,i){let a=r.ZERO,c=s;for(;i>Cg;)i&sc&&(a=a.add(c)),c=c.double(),i>>=sc;return a},precomputeWindow(s,i){let{windows:a,windowSize:c}=o(i),u=[],f=s,l=f;for(let d=0;d<a;d++){l=f,u.push(l);for(let h=1;h<c;h++)l=l.add(f),u.push(l);f=l.double()}return u},wNAF(s,i,a){let{windows:c,windowSize:u}=o(s),f=r.ZERO,l=r.BASE,d=BigInt(2**s-1),h=2**s,p=BigInt(s);for(let m=0;m<c;m++){let g=m*u,y=Number(a&d);a>>=p,y>u&&(y-=h,a+=sc);let b=g,w=g+Math.abs(y)-1,x=m%2!==0,A=y<0;y===0?l=l.add(t(x,i[b])):f=f.add(t(A,i[w]))}return{p:f,f:l}},wNAFCached(s,i,a){let c=mf.get(s)||1,u=ic.get(s);return u||(u=this.precomputeWindow(s,c),c!==1&&ic.set(s,a(u))),this.wNAF(c,u,i)},setWindowSize(s,i){n(i),mf.set(s,i),ic.delete(s)}}}function Jo(r,e,t,n){if(!Array.isArray(t)||!Array.isArray(n)||n.length!==t.length)throw new Error("arrays of points and scalars must have equal length");n.forEach((f,l)=>{if(!e.isValid(f))throw new Error(`wrong scalar at index ${l}`)}),t.forEach((f,l)=>{if(!(f instanceof r))throw new Error(`wrong point at index ${l}`)});let o=Qa(BigInt(t.length)),s=o>12?o-3:o>4?o-2:o?2:1,i=(1<<s)-1,a=new Array(i+1).fill(r.ZERO),c=Math.floor((e.BITS-1)/s)*s,u=r.ZERO;for(let f=c;f>=0;f-=s){a.fill(r.ZERO);for(let d=0;d<n.length;d++){let h=n[d],p=Number(h>>BigInt(f)&BigInt(i));a[p]=a[p].add(t[d])}let l=r.ZERO;for(let d=a.length-1,h=r.ZERO;d>0;d--)h=h.add(a[d]),l=l.add(h);if(u=u.add(l),f!==0)for(let d=0;d<s;d++)u=u.double()}return u}function Mn(r){return rc(r.Fp),ft(r,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...nc(r.n,r.nBitLength),...r,p:r.Fp.ORDER})}var st=BigInt(0),Ke=BigInt(1),Qo=BigInt(2),Tg=BigInt(8),Lg={zip215:!0};function Ng(r){let e=Mn(r);return ft(r,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function gf(r){let e=Ng(r),{Fp:t,n,prehash:o,hash:s,randomBytes:i,nByteLength:a,h:c}=e,u=Qo<<BigInt(a*8)-Ke,f=t.create,l=jt(e.n,e.nBitLength),d=e.uvRatio||((S,E)=>{try{return{isValid:!0,value:t.sqrt(S*t.inv(E))}}catch{return{isValid:!1,value:st}}}),h=e.adjustScalarBytes||(S=>S),p=e.domain||((S,E,I)=>{if(ot("phflag",I),E.length||I)throw new Error("Contexts/pre-hash are not supported");return S});function m(S,E){$e("coordinate "+S,E,st,u)}function g(S){if(!(S instanceof w))throw new Error("ExtendedPoint expected")}let y=hr((S,E)=>{let{ex:I,ey:N,ez:M}=S,U=S.is0();E==null&&(E=U?Tg:t.inv(M));let $=f(I*E),z=f(N*E),K=f(M*E);if(U)return{x:st,y:Ke};if(K!==Ke)throw new Error("invZ was invalid");return{x:$,y:z}}),b=hr(S=>{let{a:E,d:I}=e;if(S.is0())throw new Error("bad point: ZERO");let{ex:N,ey:M,ez:U,et:$}=S,z=f(N*N),K=f(M*M),X=f(U*U),Q=f(X*X),be=f(z*E),xe=f(X*f(be+K)),Ee=f(Q+f(I*f(z*K)));if(xe!==Ee)throw new Error("bad point: equation left != right (1)");let Pe=f(N*M),de=f(U*$);if(Pe!==de)throw new Error("bad point: equation left != right (2)");return!0});class w{constructor(E,I,N,M){this.ex=E,this.ey=I,this.ez=N,this.et=M,m("x",E),m("y",I),m("z",N),m("t",M),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(E){if(E instanceof w)throw new Error("extended point not allowed");let{x:I,y:N}=E||{};return m("x",I),m("y",N),new w(I,N,Ke,f(I*N))}static normalizeZ(E){let I=t.invertBatch(E.map(N=>N.ez));return E.map((N,M)=>N.toAffine(I[M])).map(w.fromAffine)}static msm(E,I){return Jo(w,l,E,I)}_setWindowSize(E){_.setWindowSize(this,E)}assertValidity(){b(this)}equals(E){g(E);let{ex:I,ey:N,ez:M}=this,{ex:U,ey:$,ez:z}=E,K=f(I*z),X=f(U*M),Q=f(N*z),be=f($*M);return K===X&&Q===be}is0(){return this.equals(w.ZERO)}negate(){return new w(f(-this.ex),this.ey,this.ez,f(-this.et))}double(){let{a:E}=e,{ex:I,ey:N,ez:M}=this,U=f(I*I),$=f(N*N),z=f(Qo*f(M*M)),K=f(E*U),X=I+N,Q=f(f(X*X)-U-$),be=K+$,xe=be-z,Ee=K-$,Pe=f(Q*xe),de=f(be*Ee),He=f(Q*Ee),bt=f(xe*be);return new w(Pe,de,bt,He)}add(E){g(E);let{a:I,d:N}=e,{ex:M,ey:U,ez:$,et:z}=this,{ex:K,ey:X,ez:Q,et:be}=E;if(I===BigInt(-1)){let Iu=f((U-M)*(X+K)),ku=f((U+M)*(X-K)),Ta=f(ku-Iu);if(Ta===st)return this.double();let Cu=f($*Qo*be),Tu=f(z*Qo*Q),Lu=Tu+Cu,Nu=ku+Iu,Pu=Tu-Cu,$p=f(Lu*Ta),Kp=f(Nu*Pu),qp=f(Lu*Pu),zp=f(Ta*Nu);return new w($p,Kp,zp,qp)}let xe=f(M*K),Ee=f(U*X),Pe=f(z*N*be),de=f($*Q),He=f((M+U)*(K+X)-xe-Ee),bt=de-Pe,An=de+Pe,Sn=f(Ee-I*xe),Op=f(He*bt),Fp=f(An*Sn),Vp=f(He*Sn),Hp=f(bt*An);return new w(Op,Fp,Hp,Vp)}subtract(E){return this.add(E.negate())}wNAF(E){return _.wNAFCached(this,E,w.normalizeZ)}multiply(E){let I=E;$e("scalar",I,Ke,n);let{p:N,f:M}=this.wNAF(I);return w.normalizeZ([N,M])[0]}multiplyUnsafe(E){let I=E;return $e("scalar",I,st,n),I===st?A:this.equals(A)||I===Ke?this:this.equals(x)?this.wNAF(I).p:_.unsafeLadder(this,I)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}isTorsionFree(){return _.unsafeLadder(this,n).is0()}toAffine(E){return y(this,E)}clearCofactor(){let{h:E}=e;return E===Ke?this:this.multiplyUnsafe(E)}static fromHex(E,I=!1){let{d:N,a:M}=e,U=t.BYTES;E=ae("pointHex",E,U),ot("zip215",I);let $=E.slice(),z=E[U-1];$[U-1]=z&-129;let K=Gt($),X=I?u:t.ORDER;$e("pointHex.y",K,st,X);let Q=f(K*K),be=f(Q-Ke),xe=f(N*Q-M),{isValid:Ee,value:Pe}=d(be,xe);if(!Ee)throw new Error("Point.fromHex: invalid y coordinate");let de=(Pe&Ke)===Ke,He=(z&128)!==0;if(!I&&Pe===st&&He)throw new Error("Point.fromHex: x=0 and x_0=1");return He!==de&&(Pe=f(-Pe)),w.fromAffine({x:Pe,y:K})}static fromPrivateKey(E){return T(E).point}toRawBytes(){let{x:E,y:I}=this.toAffine(),N=fr(I,t.BYTES);return N[N.length-1]|=E&Ke?128:0,N}toHex(){return Bt(this.toRawBytes())}}w.BASE=new w(e.Gx,e.Gy,Ke,f(e.Gx*e.Gy)),w.ZERO=new w(st,Ke,Ke,st);let{BASE:x,ZERO:A}=w,_=Yo(w,a*8);function v(S){return Y(S,n)}function B(S){return v(Gt(S))}function T(S){let E=a;S=ae("private key",S,E);let I=ae("hashed private key",s(S),2*E),N=h(I.slice(0,E)),M=I.slice(E,2*E),U=B(N),$=x.multiply(U),z=$.toRawBytes();return{head:N,prefix:M,scalar:U,point:$,pointBytes:z}}function te(S){return T(S).pointBytes}function V(S=new Uint8Array,...E){let I=kt(...E);return B(s(p(I,ae("context",S),!!o)))}function F(S,E,I={}){S=ae("message",S),o&&(S=o(S));let{prefix:N,scalar:M,pointBytes:U}=T(E),$=V(I.context,N,S),z=x.multiply($).toRawBytes(),K=V(I.context,z,U,S),X=v($+K*M);$e("signature.s",X,st,n);let Q=kt(z,fr(X,t.BYTES));return ae("result",Q,a*2)}let R=Lg;function k(S,E,I,N=R){let{context:M,zip215:U}=N,$=t.BYTES;S=ae("signature",S,2*$),E=ae("message",E),U!==void 0&&ot("zip215",U),o&&(E=o(E));let z=Gt(S.slice($,2*$)),K,X,Q;try{K=w.fromHex(I,U),X=w.fromHex(S.slice(0,$),U),Q=x.multiplyUnsafe(z)}catch{return!1}if(!U&&K.isSmallOrder())return!1;let be=V(M,X.toRawBytes(),K.toRawBytes(),E);return X.add(K.multiplyUnsafe(be)).subtract(Q).clearCofactor().equals(w.ZERO)}return x._setWindowSize(8),{CURVE:e,getPublicKey:te,sign:F,verify:k,ExtendedPoint:w,utils:{getExtendedPublicKey:T,randomPrivateKey:()=>i(t.BYTES),precompute(S=8,E=w.BASE){return E._setWindowSize(S),E.multiply(BigInt(3)),E}}}}var ac=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),yf=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),Wx=BigInt(0),Pg=BigInt(1),wf=BigInt(2),jx=BigInt(3),Rg=BigInt(5),Dg=BigInt(8);function Mg(r){let e=BigInt(10),t=BigInt(20),n=BigInt(40),o=BigInt(80),s=ac,a=r*r%s*r%s,c=ne(a,wf,s)*a%s,u=ne(c,Pg,s)*r%s,f=ne(u,Rg,s)*u%s,l=ne(f,e,s)*f%s,d=ne(l,t,s)*l%s,h=ne(d,n,s)*d%s,p=ne(h,o,s)*h%s,m=ne(p,o,s)*h%s,g=ne(m,e,s)*f%s;return{pow_p_5_8:ne(g,wf,s)*r%s,b2:a}}function Ug(r){return r[0]&=248,r[31]&=127,r[31]|=64,r}function Og(r,e){let t=ac,n=Y(e*e*e,t),o=Y(n*n*e,t),s=Mg(r*o).pow_p_5_8,i=Y(r*n*s,t),a=Y(e*i*i,t),c=i,u=Y(i*yf,t),f=a===r,l=a===Y(-r,t),d=a===Y(-r*yf,t);return f&&(i=c),(l||d)&&(i=u),hf(i,t)&&(i=Y(-i,t)),{isValid:f||l,value:i}}var Fg=jt(ac,void 0,!0),Vg={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:Fg,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:Dg,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:af,randomBytes:qr,adjustScalarBytes:Ug,uvRatio:Og},Un=gf(Vg);var es=32,ts=64,cc=32;function bf(){let r=Un.utils.randomPrivateKey(),e=Un.getPublicKey(r);return{privateKey:Hg(r,e),publicKey:e}}function xf(r,e){let t=r.subarray(0,cc);return Un.sign(e instanceof Uint8Array?e:e.subarray(),t)}function vf(r,e,t){return Un.verify(e,t instanceof Uint8Array?t:t.subarray(),r)}function Hg(r,e){let t=new Uint8Array(ts);for(let n=0;n<cc;n++)t[n]=r[n],t[cc+n]=e[n];return t}var On=class{type="Ed25519";raw;constructor(e){this.raw=ns(e,es)}toMultihash(){return St.digest(ht(this))}toCID(){return pe.createV1(114,this.toMultihash())}toString(){return W.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}verify(e,t){return vf(this.raw,t,e)}},rs=class{type="Ed25519";raw;publicKey;constructor(e,t){this.raw=ns(e,ts),this.publicKey=new On(t)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}sign(e){return xf(this.raw,e)}};function lc(r){return r=ns(r,es),new On(r)}async function Af(){let{privateKey:r,publicKey:e}=bf();return new rs(r,e)}function ns(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new D(`Key must be a Uint8Array of length ${e}, got ${r.length}`);return r}function ce(r=0){return new Uint8Array(r)}function Ie(r=0){return new Uint8Array(r)}var $g=Math.pow(2,7),Kg=Math.pow(2,14),qg=Math.pow(2,21),uc=Math.pow(2,28),fc=Math.pow(2,35),hc=Math.pow(2,42),dc=Math.pow(2,49),j=128,ke=127;function he(r){if(r<$g)return 1;if(r<Kg)return 2;if(r<qg)return 3;if(r<uc)return 4;if(r<fc)return 5;if(r<hc)return 6;if(r<dc)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function pc(r,e,t=0){switch(he(r)){case 8:e[t++]=r&255|j,r/=128;case 7:e[t++]=r&255|j,r/=128;case 6:e[t++]=r&255|j,r/=128;case 5:e[t++]=r&255|j,r/=128;case 4:e[t++]=r&255|j,r>>>=7;case 3:e[t++]=r&255|j,r>>>=7;case 2:e[t++]=r&255|j,r>>>=7;case 1:{e[t++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return e}function zg(r,e,t=0){switch(he(r)){case 8:e.set(t++,r&255|j),r/=128;case 7:e.set(t++,r&255|j),r/=128;case 6:e.set(t++,r&255|j),r/=128;case 5:e.set(t++,r&255|j),r/=128;case 4:e.set(t++,r&255|j),r>>>=7;case 3:e.set(t++,r&255|j),r>>>=7;case 2:e.set(t++,r&255|j),r>>>=7;case 1:{e.set(t++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return e}function mc(r,e){let t=r[e],n=0;if(n+=t&ke,t<j||(t=r[e+1],n+=(t&ke)<<7,t<j)||(t=r[e+2],n+=(t&ke)<<14,t<j)||(t=r[e+3],n+=(t&ke)<<21,t<j)||(t=r[e+4],n+=(t&ke)*uc,t<j)||(t=r[e+5],n+=(t&ke)*fc,t<j)||(t=r[e+6],n+=(t&ke)*hc,t<j)||(t=r[e+7],n+=(t&ke)*dc,t<j))return n;throw new RangeError("Could not decode varint")}function Gg(r,e){let t=r.get(e),n=0;if(n+=t&ke,t<j||(t=r.get(e+1),n+=(t&ke)<<7,t<j)||(t=r.get(e+2),n+=(t&ke)<<14,t<j)||(t=r.get(e+3),n+=(t&ke)<<21,t<j)||(t=r.get(e+4),n+=(t&ke)*uc,t<j)||(t=r.get(e+5),n+=(t&ke)*fc,t<j)||(t=r.get(e+6),n+=(t&ke)*hc,t<j)||(t=r.get(e+7),n+=(t&ke)*dc,t<j))return n;throw new RangeError("Could not decode varint")}function Ce(r,e,t=0){return e==null&&(e=Ie(he(r))),e instanceof Uint8Array?pc(r,e,t):zg(r,e,t)}function it(r,e=0){return r instanceof Uint8Array?mc(r,e):Gg(r,e)}var gc=new Float32Array([-0]),Zt=new Uint8Array(gc.buffer);function Sf(r,e,t){gc[0]=r,e[t]=Zt[0],e[t+1]=Zt[1],e[t+2]=Zt[2],e[t+3]=Zt[3]}function _f(r,e){return Zt[0]=r[e],Zt[1]=r[e+1],Zt[2]=r[e+2],Zt[3]=r[e+3],gc[0]}var yc=new Float64Array([-0]),Te=new Uint8Array(yc.buffer);function Bf(r,e,t){yc[0]=r,e[t]=Te[0],e[t+1]=Te[1],e[t+2]=Te[2],e[t+3]=Te[3],e[t+4]=Te[4],e[t+5]=Te[5],e[t+6]=Te[6],e[t+7]=Te[7]}function If(r,e){return Te[0]=r[e],Te[1]=r[e+1],Te[2]=r[e+2],Te[3]=r[e+3],Te[4]=r[e+4],Te[5]=r[e+5],Te[6]=r[e+6],Te[7]=r[e+7],yc[0]}var Wg=BigInt(Number.MAX_SAFE_INTEGER),jg=BigInt(Number.MIN_SAFE_INTEGER),We=class r{lo;hi;constructor(e,t){this.lo=e|0,this.hi=t|0}toNumber(e=!1){if(!e&&this.hi>>>31>0){let t=~this.lo+1>>>0,n=~this.hi>>>0;return t===0&&(n=n+1>>>0),-(t+n*4294967296)}return this.lo+this.hi*4294967296}toBigInt(e=!1){if(e)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let t=~this.lo+1>>>0,n=~this.hi>>>0;return t===0&&(n=n+1>>>0),-(BigInt(t)+(BigInt(n)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(e=!1){return this.toBigInt(e).toString()}zzEncode(){let e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this}zzDecode(){let e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this}length(){let e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return n===0?t===0?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:n<128?9:10}static fromBigInt(e){if(e===0n)return mr;if(e<Wg&&e>jg)return this.fromNumber(Number(e));let t=e<0n;t&&(e=-e);let n=e>>32n,o=e-(n<<32n);return t&&(n=~n|0n,o=~o|0n,++o>kf&&(o=0n,++n>kf&&(n=0n))),new r(Number(o),Number(n))}static fromNumber(e){if(e===0)return mr;let t=e<0;t&&(e=-e);let n=e>>>0,o=(e-n)/4294967296>>>0;return t&&(o=~o>>>0,n=~n>>>0,++n>4294967295&&(n=0,++o>4294967295&&(o=0))),new r(n,o)}static from(e){return typeof e=="number"?r.fromNumber(e):typeof e=="bigint"?r.fromBigInt(e):typeof e=="string"?r.fromBigInt(BigInt(e)):e.low!=null||e.high!=null?new r(e.low>>>0,e.high>>>0):mr}},mr=new We(0,0);mr.toBigInt=function(){return 0n};mr.zzEncode=mr.zzDecode=function(){return this};mr.length=function(){return 1};var kf=4294967296n;function Cf(r){let e=0,t=0;for(let n=0;n<r.length;++n)t=r.charCodeAt(n),t<128?e+=1:t<2048?e+=2:(t&64512)===55296&&(r.charCodeAt(n+1)&64512)===56320?(++n,e+=4):e+=3;return e}function Tf(r,e,t){if(t-e<1)return"";let o,s=[],i=0,a;for(;e<t;)a=r[e++],a<128?s[i++]=a:a>191&&a<224?s[i++]=(a&31)<<6|r[e++]&63:a>239&&a<365?(a=((a&7)<<18|(r[e++]&63)<<12|(r[e++]&63)<<6|r[e++]&63)-65536,s[i++]=55296+(a>>10),s[i++]=56320+(a&1023)):s[i++]=(a&15)<<12|(r[e++]&63)<<6|r[e++]&63,i>8191&&((o??(o=[])).push(String.fromCharCode.apply(String,s)),i=0);return o!=null?(i>0&&o.push(String.fromCharCode.apply(String,s.slice(0,i))),o.join("")):String.fromCharCode.apply(String,s.slice(0,i))}function wc(r,e,t){let n=t,o,s;for(let i=0;i<r.length;++i)o=r.charCodeAt(i),o<128?e[t++]=o:o<2048?(e[t++]=o>>6|192,e[t++]=o&63|128):(o&64512)===55296&&((s=r.charCodeAt(i+1))&64512)===56320?(o=65536+((o&1023)<<10)+(s&1023),++i,e[t++]=o>>18|240,e[t++]=o>>12&63|128,e[t++]=o>>6&63|128,e[t++]=o&63|128):(e[t++]=o>>12|224,e[t++]=o>>6&63|128,e[t++]=o&63|128);return t-n}function at(r,e){return RangeError(`index out of range: ${r.pos} + ${e??1} > ${r.len}`)}function os(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}var bc=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(e){this.buf=e,this.pos=0,this.len=e.length}uint32(){let e=4294967295;if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,at(this,10);return e}int32(){return this.uint32()|0}sint32(){let e=this.uint32();return e>>>1^-(e&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw at(this,4);return os(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw at(this,4);return os(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw at(this,4);let e=_f(this.buf,this.pos);return this.pos+=4,e}double(){if(this.pos+8>this.len)throw at(this,4);let e=If(this.buf,this.pos);return this.pos+=8,e}bytes(){let e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw at(this,e);return this.pos+=e,t===n?new Uint8Array(0):this.buf.subarray(t,n)}string(){let e=this.bytes();return Tf(e,0,e.length)}skip(e){if(typeof e=="number"){if(this.pos+e>this.len)throw at(this,e);this.pos+=e}else do if(this.pos>=this.len)throw at(this);while(this.buf[this.pos++]&128);return this}skipType(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(e=this.uint32()&7)!==4;)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${e} at offset ${this.pos}`)}return this}readLongVarint(){let e=new We(0,0),t=0;if(this.len-this.pos>4){for(;t<4;++t)if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(this.buf[this.pos]&127)<<28)>>>0,e.hi=(e.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return e;t=0}else{for(;t<3;++t){if(this.pos>=this.len)throw at(this);if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(this.buf[this.pos++]&127)<<t*7)>>>0,e}if(this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw at(this);if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw at(this,8);let e=os(this.buf,this.pos+=4),t=os(this.buf,this.pos+=4);return new We(e,t)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let e=mc(this.buf,this.pos);return this.pos+=he(e),e}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function xc(r){return new bc(r instanceof Uint8Array?r:r.subarray())}function De(r,e,t){let n=xc(r);return e.decode(n,void 0,t)}var vc={};Re(vc,{base10:()=>Zg});var Zg=$t({prefix:"9",name:"base10",alphabet:"0123456789"});var Ec={};Re(Ec,{base16:()=>Xg,base16upper:()=>Yg});var Xg=se({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Yg=se({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Ac={};Re(Ac,{base2:()=>Jg});var Jg=se({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Sc={};Re(Sc,{base256emoji:()=>n0});var Nf=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),Qg=Nf.reduce((r,e,t)=>(r[t]=e,r),[]),e0=Nf.reduce((r,e,t)=>{let n=e.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${e}`);return r[n]=t,r},[]);function t0(r){return r.reduce((e,t)=>(e+=Qg[t],e),"")}function r0(r){let e=[];for(let t of r){let n=t.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${t}`);let o=e0[n];if(o==null)throw new Error(`Non-base256emoji character: ${t}`);e.push(o)}return new Uint8Array(e)}var n0=Ur({prefix:"\u{1F680}",name:"base256emoji",encode:t0,decode:r0});var Ic={};Re(Ic,{base64:()=>_c,base64pad:()=>o0,base64url:()=>Bc,base64urlpad:()=>s0});var _c=se({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),o0=se({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Bc=se({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),s0=se({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var kc={};Re(kc,{base8:()=>i0});var i0=se({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var Cc={};Re(Cc,{identity:()=>a0});var a0=Ur({prefix:"\0",name:"identity",encode:r=>Vu(r),decode:r=>Fu(r)});var I1=new TextEncoder,k1=new TextDecoder;var Nc={};Re(Nc,{sha256:()=>Wr,sha512:()=>u0});function Lc({name:r,code:e,encode:t}){return new Tc(r,e,t)}var Tc=class{name;code;encode;constructor(e,t,n){this.name=e,this.code=t,this.encode=n}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?tt(this.code,t):t.then(n=>tt(this.code,n))}else throw Error("Unknown type, must be binary type")}};function Rf(r){return async e=>new Uint8Array(await crypto.subtle.digest(r,e))}var Wr=Lc({name:"sha2-256",code:18,encode:Rf("SHA-256")}),u0=Lc({name:"sha2-512",code:19,encode:Rf("SHA-512")});var Fn={...Cc,...Ac,...kc,...vc,...Ec,...Ha,...$a,...Va,...Ic,...Sc},V1={...Nc,...za};function Mf(r,e,t,n){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:n}}}var Df=Mf("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),Pc=Mf("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);let e=Ie(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),f0={utf8:Df,"utf-8":Df,hex:Fn.base16,latin1:Pc,ascii:Pc,binary:Pc,...Fn},ss=f0;function P(r,e="utf8"){let t=ss[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.decoder.decode(`${t.prefix}${r}`)}function Rc(r){let e=r??8192,t=e>>>1,n,o=e;return function(i){if(i<1||i>t)return Ie(i);o+i>e&&(n=Ie(e),o=0);let a=n.subarray(o,o+=i);return o&7&&(o=(o|7)+1),a}}var gr=class{fn;len;next;val;constructor(e,t,n){this.fn=e,this.len=t,this.next=void 0,this.val=n}};function Dc(){}var Uc=class{head;tail;len;next;constructor(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}},h0=Rc();function d0(r){return globalThis.Buffer!=null?Ie(r):h0(r)}var Hn=class{len;head;tail;states;constructor(){this.len=0,this.head=new gr(Dc,0,0),this.tail=this.head,this.states=null}_push(e,t,n){return this.tail=this.tail.next=new gr(e,t,n),this.len+=t,this}uint32(e){return this.len+=(this.tail=this.tail.next=new Oc((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this}int32(e){return e<0?this._push(is,10,We.fromNumber(e)):this.uint32(e)}sint32(e){return this.uint32((e<<1^e>>31)>>>0)}uint64(e){let t=We.fromBigInt(e);return this._push(is,t.length(),t)}uint64Number(e){return this._push(pc,he(e),e)}uint64String(e){return this.uint64(BigInt(e))}int64(e){return this.uint64(e)}int64Number(e){return this.uint64Number(e)}int64String(e){return this.uint64String(e)}sint64(e){let t=We.fromBigInt(e).zzEncode();return this._push(is,t.length(),t)}sint64Number(e){let t=We.fromNumber(e).zzEncode();return this._push(is,t.length(),t)}sint64String(e){return this.sint64(BigInt(e))}bool(e){return this._push(Mc,1,e?1:0)}fixed32(e){return this._push(Vn,4,e>>>0)}sfixed32(e){return this.fixed32(e)}fixed64(e){let t=We.fromBigInt(e);return this._push(Vn,4,t.lo)._push(Vn,4,t.hi)}fixed64Number(e){let t=We.fromNumber(e);return this._push(Vn,4,t.lo)._push(Vn,4,t.hi)}fixed64String(e){return this.fixed64(BigInt(e))}sfixed64(e){return this.fixed64(e)}sfixed64Number(e){return this.fixed64Number(e)}sfixed64String(e){return this.fixed64String(e)}float(e){return this._push(Sf,4,e)}double(e){return this._push(Bf,8,e)}bytes(e){let t=e.length>>>0;return t===0?this._push(Mc,1,0):this.uint32(t)._push(m0,t,e)}string(e){let t=Cf(e);return t!==0?this.uint32(t)._push(wc,t,e):this._push(Mc,1,0)}fork(){return this.states=new Uc(this),this.head=this.tail=new gr(Dc,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new gr(Dc,0,0),this.len=0),this}ldelim(){let e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n!==0&&(this.tail.next=e.next,this.tail=t,this.len+=n),this}finish(){let e=this.head.next,t=d0(this.len),n=0;for(;e!=null;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t}};function Mc(r,e,t){e[t]=r&255}function p0(r,e,t){for(;r>127;)e[t++]=r&127|128,r>>>=7;e[t]=r}var Oc=class extends gr{next;constructor(e,t){super(p0,e,t),this.next=void 0}};function is(r,e,t){for(;r.hi!==0;)e[t++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[t++]=r.lo&127|128,r.lo=r.lo>>>7;e[t++]=r.lo}function Vn(r,e,t){e[t]=r&255,e[t+1]=r>>>8&255,e[t+2]=r>>>16&255,e[t+3]=r>>>24}function m0(r,e,t){e.set(r,t)}globalThis.Buffer!=null&&(Hn.prototype.bytes=function(r){let e=r.length>>>0;return this.uint32(e),e>0&&this._push(g0,e,r),this},Hn.prototype.string=function(r){let e=globalThis.Buffer.byteLength(r);return this.uint32(e),e>0&&this._push(y0,e,r),this});function g0(r,e,t){e.set(r,t)}function y0(r,e,t){r.length<40?wc(r,e,t):e.utf8Write!=null?e.utf8Write(r,t):e.set(P(r),t)}function Fc(){return new Hn}function Me(r,e){let t=Fc();return e.encode(r,t,{lengthDelimited:!1}),t.finish()}var jr;(function(r){r[r.VARINT=0]="VARINT",r[r.BIT64=1]="BIT64",r[r.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",r[r.START_GROUP=3]="START_GROUP",r[r.END_GROUP=4]="END_GROUP",r[r.BIT32=5]="BIT32"})(jr||(jr={}));function as(r,e,t,n){return{name:r,type:e,encode:t,decode:n}}function Vc(r){function e(o){if(r[o.toString()]==null)throw new Error("Invalid enum value");return r[o]}let t=function(s,i){let a=e(s);i.int32(a)},n=function(s){let i=s.int32();return e(i)};return as("enum",jr.VARINT,t,n)}function Ue(r,e){return as("message",jr.LENGTH_DELIMITED,r,e)}var yr=class extends Error{code="ERR_MAX_LENGTH";name="MaxLengthError"},$n=class extends Error{code="ERR_MAX_SIZE";name="MaxSizeError"};var ge;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.secp256k1="secp256k1"})(ge||(ge={}));var Hc;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.secp256k1=2]="secp256k1"})(Hc||(Hc={}));(function(r){r.codec=()=>Vc(Hc)})(ge||(ge={}));var dt;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),ge.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.Type=ge.codec().decode(t);break}case 2:{s.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})(dt||(dt={}));var $c;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),ge.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.Type=ge.codec().decode(t);break}case 2:{s.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})($c||($c={}));var Qn={};Re(Qn,{MAX_RSA_KEY_SIZE:()=>Js,generateRSAKeyPair:()=>Qc,jwkToJWKKeyPair:()=>Ph,jwkToPkcs1:()=>P0,jwkToPkix:()=>Yc,jwkToRSAPrivateKey:()=>Nh,pkcs1ToJwk:()=>Ch,pkcs1ToRSAPrivateKey:()=>Lh,pkixToJwk:()=>Th,pkixToRSAPublicKey:()=>Jc});var w0=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Xt=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Yt=new Uint32Array(64),Kc=class extends zr{constructor(){super(64,32,8,!1),this.A=Xt[0]|0,this.B=Xt[1]|0,this.C=Xt[2]|0,this.D=Xt[3]|0,this.E=Xt[4]|0,this.F=Xt[5]|0,this.G=Xt[6]|0,this.H=Xt[7]|0}get(){let{A:e,B:t,C:n,D:o,E:s,F:i,G:a,H:c}=this;return[e,t,n,o,s,i,a,c]}set(e,t,n,o,s,i,a,c){this.A=e|0,this.B=t|0,this.C=n|0,this.D=o|0,this.E=s|0,this.F=i|0,this.G=a|0,this.H=c|0}process(e,t){for(let l=0;l<16;l++,t+=4)Yt[l]=e.getUint32(t,!1);for(let l=16;l<64;l++){let d=Yt[l-15],h=Yt[l-2],p=nt(d,7)^nt(d,18)^d>>>3,m=nt(h,17)^nt(h,19)^h>>>10;Yt[l]=m+Yt[l-7]+p+Yt[l-16]|0}let{A:n,B:o,C:s,D:i,E:a,F:c,G:u,H:f}=this;for(let l=0;l<64;l++){let d=nt(a,6)^nt(a,11)^nt(a,25),h=f+d+nf(a,c,u)+w0[l]+Yt[l]|0,m=(nt(n,2)^nt(n,13)^nt(n,22))+of(n,o,s)|0;f=u,u=c,c=a,a=i+h|0,i=s,s=o,o=n,n=h+m|0}n=n+this.A|0,o=o+this.B|0,s=s+this.C|0,i=i+this.D|0,a=a+this.E|0,c=c+this.F|0,u=u+this.G|0,f=f+this.H|0,this.set(n,o,s,i,a,c,u,f)}roundClean(){Yt.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};var Zr=Go(()=>new Kc);var q=ar(Of());function wr(r,e){let t=0;if(r.length===1)return r[0];for(let n=r.length-1;n>=0;n--)t+=r[r.length-1-n]*Math.pow(2,e*n);return t}function Jt(r,e,t=-1){let n=t,o=r,s=0,i=Math.pow(2,e);for(let a=1;a<8;a++){if(r<i){let c;if(n<0)c=new ArrayBuffer(a),s=a;else{if(n<a)return new ArrayBuffer(0);c=new ArrayBuffer(n),s=n}let u=new Uint8Array(c);for(let f=a-1;f>=0;f--){let l=Math.pow(2,f*e);u[s-f-1]=Math.floor(o/l),o-=u[s-f-1]*l}return c}i*=Math.pow(2,e)}return new ArrayBuffer(0)}function us(...r){let e=0,t=0;for(let s of r)e+=s.length;let n=new ArrayBuffer(e),o=new Uint8Array(n);for(let s of r)o.set(s,t),t+=s.length;return o}function zc(){let r=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){let a=r[0]===255&&r[1]&128,c=r[0]===0&&(r[1]&128)===0;(a||c)&&this.warnings.push("Needlessly long format")}let e=new ArrayBuffer(this.valueHex.byteLength),t=new Uint8Array(e);for(let a=0;a<this.valueHex.byteLength;a++)t[a]=0;t[0]=r[0]&128;let n=wr(t,8),o=new ArrayBuffer(this.valueHex.byteLength),s=new Uint8Array(o);for(let a=0;a<this.valueHex.byteLength;a++)s[a]=r[a];return s[0]&=127,wr(s,8)-n}function Ff(r){let e=r<0?r*-1:r,t=128;for(let n=1;n<8;n++){if(e<=t){if(r<0){let i=t-e,a=Jt(i,8,n),c=new Uint8Array(a);return c[0]|=128,a}let o=Jt(e,8,n),s=new Uint8Array(o);if(s[0]&128){let i=o.slice(0),a=new Uint8Array(i);o=new ArrayBuffer(o.byteLength+1),s=new Uint8Array(o);for(let c=0;c<i.byteLength;c++)s[c+1]=a[c];s[0]=0}return o}t*=Math.pow(2,8)}return new ArrayBuffer(0)}function Vf(r,e){if(r.byteLength!==e.byteLength)return!1;let t=new Uint8Array(r),n=new Uint8Array(e);for(let o=0;o<t.length;o++)if(t[o]!==n[o])return!1;return!0}function qe(r,e){let t=r.toString(10);if(e<t.length)return"";let n=e-t.length,o=new Array(n);for(let i=0;i<n;i++)o[i]="0";return o.join("").concat(t)}var vv=Math.log(2);function fs(){if(typeof BigInt>"u")throw new Error("BigInt is not defined. Your environment doesn't implement BigInt.")}function Gc(r){let e=0,t=0;for(let o=0;o<r.length;o++){let s=r[o];e+=s.byteLength}let n=new Uint8Array(e);for(let o=0;o<r.length;o++){let s=r[o];n.set(new Uint8Array(s),t),t+=s.byteLength}return n.buffer}function Pt(r,e,t,n){return e instanceof Uint8Array?e.byteLength?t<0?(r.error="Wrong parameter: inputOffset less than zero",!1):n<0?(r.error="Wrong parameter: inputLength less than zero",!1):e.byteLength-t-n<0?(r.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1):!0:(r.error="Wrong parameter: inputBuffer has zero length",!1):(r.error="Wrong parameter: inputBuffer must be 'Uint8Array'",!1)}var qn=class{constructor(){this.items=[]}write(e){this.items.push(e)}final(){return Gc(this.items)}},Kn=[new Uint8Array([1])],Hf="0123456789";var en="",ct=new ArrayBuffer(0),Wc=new Uint8Array(0),zn="EndOfContent",Kf="OCTET STRING",qf="BIT STRING";function Rt(r){var e;return e=class extends r{constructor(...n){var o;super(...n);let s=n[0]||{};this.isHexOnly=(o=s.isHexOnly)!==null&&o!==void 0?o:!1,this.valueHexView=s.valueHex?q.BufferSourceConverter.toUint8Array(s.valueHex):Wc}get valueHex(){return this.valueHexView.slice().buffer}set valueHex(n){this.valueHexView=new Uint8Array(n)}fromBER(n,o,s){let i=n instanceof ArrayBuffer?new Uint8Array(n):n;if(!Pt(this,i,o,s))return-1;let a=o+s;return this.valueHexView=i.subarray(o,a),this.valueHexView.length?(this.blockLength=s,a):(this.warnings.push("Zero buffer length"),o)}toBER(n=!1){return this.isHexOnly?n?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.byteLength===this.valueHexView.buffer.byteLength?this.valueHexView.buffer:this.valueHexView.slice().buffer:(this.error="Flag 'isHexOnly' is not set, abort",ct)}toJSON(){return{...super.toJSON(),isHexOnly:this.isHexOnly,valueHex:q.Convert.ToHex(this.valueHexView)}}},e.NAME="hexBlock",e}var Tt=class{constructor({blockLength:e=0,error:t=en,warnings:n=[],valueBeforeDecode:o=Wc}={}){this.blockLength=e,this.error=t,this.warnings=n,this.valueBeforeDecodeView=q.BufferSourceConverter.toUint8Array(o)}static blockName(){return this.NAME}get valueBeforeDecode(){return this.valueBeforeDecodeView.slice().buffer}set valueBeforeDecode(e){this.valueBeforeDecodeView=new Uint8Array(e)}toJSON(){return{blockName:this.constructor.NAME,blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:q.Convert.ToHex(this.valueBeforeDecodeView)}}};Tt.NAME="baseBlock";var Le=class extends Tt{fromBER(e,t,n){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}toBER(e,t){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}};Le.NAME="valueBlock";var hs=class extends Rt(Tt){constructor({idBlock:e={}}={}){var t,n,o,s;super(),e?(this.isHexOnly=(t=e.isHexOnly)!==null&&t!==void 0?t:!1,this.valueHexView=e.valueHex?q.BufferSourceConverter.toUint8Array(e.valueHex):Wc,this.tagClass=(n=e.tagClass)!==null&&n!==void 0?n:-1,this.tagNumber=(o=e.tagNumber)!==null&&o!==void 0?o:-1,this.isConstructed=(s=e.isConstructed)!==null&&s!==void 0?s:!1):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}toBER(e=!1){let t=0;switch(this.tagClass){case 1:t|=0;break;case 2:t|=64;break;case 3:t|=128;break;case 4:t|=192;break;default:return this.error="Unknown tag class",ct}if(this.isConstructed&&(t|=32),this.tagNumber<31&&!this.isHexOnly){let o=new Uint8Array(1);if(!e){let s=this.tagNumber;s&=31,t|=s,o[0]=t}return o.buffer}if(!this.isHexOnly){let o=Jt(this.tagNumber,7),s=new Uint8Array(o),i=o.byteLength,a=new Uint8Array(i+1);if(a[0]=t|31,!e){for(let c=0;c<i-1;c++)a[c+1]=s[c]|128;a[i]=s[i-1]}return a.buffer}let n=new Uint8Array(this.valueHexView.byteLength+1);if(n[0]=t|31,!e){let o=this.valueHexView;for(let s=0;s<o.length-1;s++)n[s+1]=o[s]|128;n[this.valueHexView.byteLength]=o[o.length-1]}return n.buffer}fromBER(e,t,n){let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let s=o.subarray(t,t+n);if(s.length===0)return this.error="Zero buffer length",-1;switch(s[0]&192){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=(s[0]&32)===32,this.isHexOnly=!1;let a=s[0]&31;if(a!==31)this.tagNumber=a,this.blockLength=1;else{let c=1,u=this.valueHexView=new Uint8Array(255),f=255;for(;s[c]&128;){if(u[c-1]=s[c]&127,c++,c>=s.length)return this.error="End of input reached before message was fully decoded",-1;if(c===f){f+=255;let d=new Uint8Array(f);for(let h=0;h<u.length;h++)d[h]=u[h];u=this.valueHexView=new Uint8Array(f)}}this.blockLength=c+1,u[c-1]=s[c]&127;let l=new Uint8Array(c);for(let d=0;d<c;d++)l[d]=u[d];u=this.valueHexView=new Uint8Array(c),u.set(l),this.blockLength<=9?this.tagNumber=wr(u,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(this.tagClass===1&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 13:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){return{...super.toJSON(),tagClass:this.tagClass,tagNumber:this.tagNumber,isConstructed:this.isConstructed}}};hs.NAME="identificationBlock";var ds=class extends Tt{constructor({lenBlock:e={}}={}){var t,n,o;super(),this.isIndefiniteForm=(t=e.isIndefiniteForm)!==null&&t!==void 0?t:!1,this.longFormUsed=(n=e.longFormUsed)!==null&&n!==void 0?n:!1,this.length=(o=e.length)!==null&&o!==void 0?o:0}fromBER(e,t,n){let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let s=o.subarray(t,t+n);if(s.length===0)return this.error="Zero buffer length",-1;if(s[0]===255)return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=s[0]===128,this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(s[0]&128),this.longFormUsed===!1)return this.length=s[0],this.blockLength=1,t+this.blockLength;let i=s[0]&127;if(i>8)return this.error="Too big integer",-1;if(i+1>s.length)return this.error="End of input reached before message was fully decoded",-1;let a=t+1,c=o.subarray(a,a+i);return c[i-1]===0&&this.warnings.push("Needlessly long encoded length"),this.length=wr(c,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unnecessary usage of long length form"),this.blockLength=i+1,t+this.blockLength}toBER(e=!1){let t,n;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),e===!1&&(n=new Uint8Array(t),n[0]=128),t;if(this.longFormUsed){let o=Jt(this.length,8);if(o.byteLength>127)return this.error="Too big length",ct;if(t=new ArrayBuffer(o.byteLength+1),e)return t;let s=new Uint8Array(o);n=new Uint8Array(t),n[0]=o.byteLength|128;for(let i=0;i<o.byteLength;i++)n[i+1]=s[i];return t}return t=new ArrayBuffer(1),e===!1&&(n=new Uint8Array(t),n[0]=this.length),t}toJSON(){return{...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,longFormUsed:this.longFormUsed,length:this.length}}};ds.NAME="lengthBlock";var C={},Ae=class extends Tt{constructor({name:e=en,optional:t=!1,primitiveSchema:n,...o}={},s){super(o),this.name=e,this.optional=t,n&&(this.primitiveSchema=n),this.idBlock=new hs(o),this.lenBlock=new ds(o),this.valueBlock=s?new s(o):new Le(o)}fromBER(e,t,n){let o=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return o===-1?(this.error=this.valueBlock.error,o):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),o)}toBER(e,t){let n=t||new qn;t||zf(this);let o=this.idBlock.toBER(e);if(n.write(o),this.lenBlock.isIndefiniteForm)n.write(new Uint8Array([128]).buffer),this.valueBlock.toBER(e,n),n.write(new ArrayBuffer(2));else{let s=this.valueBlock.toBER(e);this.lenBlock.length=s.byteLength;let i=this.lenBlock.toBER(e);n.write(i),n.write(s)}return t?ct:n.final()}toJSON(){let e={...super.toJSON(),idBlock:this.idBlock.toJSON(),lenBlock:this.lenBlock.toJSON(),valueBlock:this.valueBlock.toJSON(),name:this.name,optional:this.optional};return this.primitiveSchema&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}toString(e="ascii"){return e==="ascii"?this.onAsciiEncoding():q.Convert.ToHex(this.toBER())}onAsciiEncoding(){return`${this.constructor.NAME} : ${q.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`}isEqual(e){if(this===e)return!0;if(!(e instanceof this.constructor))return!1;let t=this.toBER(),n=e.toBER();return Vf(t,n)}};Ae.NAME="BaseBlock";function zf(r){if(r instanceof C.Constructed)for(let e of r.valueBlock.value)zf(e)&&(r.lenBlock.isIndefiniteForm=!0);return!!r.lenBlock.isIndefiniteForm}var ps=class extends Ae{constructor({value:e=en,...t}={},n){super(t,n),e&&this.fromString(e)}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}fromBER(e,t,n){let o=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return o===-1?(this.error=this.valueBlock.error,o):(this.fromBuffer(this.valueBlock.valueHexView),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),o)}onAsciiEncoding(){return`${this.constructor.NAME} : '${this.valueBlock.value}'`}};ps.NAME="BaseStringBlock";var ms=class extends Rt(Le){constructor({isHexOnly:e=!0,...t}={}){super(t),this.isHexOnly=e}};ms.NAME="PrimitiveValueBlock";var Gf,gs=class extends Ae{constructor(e={}){super(e,ms),this.idBlock.isConstructed=!1}};Gf=gs;C.Primitive=Gf;gs.NAME="PRIMITIVE";function I0(r,e){if(r instanceof e)return r;let t=new e;return t.idBlock=r.idBlock,t.lenBlock=r.lenBlock,t.warnings=r.warnings,t.valueBeforeDecodeView=r.valueBeforeDecodeView,t}function Xs(r,e=0,t=r.length){let n=e,o=new Ae({},Le),s=new Tt;if(!Pt(s,r,e,t))return o.error=s.error,{offset:-1,result:o};if(!r.subarray(e,e+t).length)return o.error="Zero buffer length",{offset:-1,result:o};let a=o.idBlock.fromBER(r,e,t);if(o.idBlock.warnings.length&&o.warnings.concat(o.idBlock.warnings),a===-1)return o.error=o.idBlock.error,{offset:-1,result:o};if(e=a,t-=o.idBlock.blockLength,a=o.lenBlock.fromBER(r,e,t),o.lenBlock.warnings.length&&o.warnings.concat(o.lenBlock.warnings),a===-1)return o.error=o.lenBlock.error,{offset:-1,result:o};if(e=a,t-=o.lenBlock.blockLength,!o.idBlock.isConstructed&&o.lenBlock.isIndefiniteForm)return o.error="Indefinite length form used for primitive encoding form",{offset:-1,result:o};let c=Ae;switch(o.idBlock.tagClass){case 1:if(o.idBlock.tagNumber>=37&&o.idBlock.isHexOnly===!1)return o.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:o};switch(o.idBlock.tagNumber){case 0:if(o.idBlock.isConstructed&&o.lenBlock.length>0)return o.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:o};c=C.EndOfContent;break;case 1:c=C.Boolean;break;case 2:c=C.Integer;break;case 3:c=C.BitString;break;case 4:c=C.OctetString;break;case 5:c=C.Null;break;case 6:c=C.ObjectIdentifier;break;case 10:c=C.Enumerated;break;case 12:c=C.Utf8String;break;case 13:c=C.RelativeObjectIdentifier;break;case 14:c=C.TIME;break;case 15:return o.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:o};case 16:c=C.Sequence;break;case 17:c=C.Set;break;case 18:c=C.NumericString;break;case 19:c=C.PrintableString;break;case 20:c=C.TeletexString;break;case 21:c=C.VideotexString;break;case 22:c=C.IA5String;break;case 23:c=C.UTCTime;break;case 24:c=C.GeneralizedTime;break;case 25:c=C.GraphicString;break;case 26:c=C.VisibleString;break;case 27:c=C.GeneralString;break;case 28:c=C.UniversalString;break;case 29:c=C.CharacterString;break;case 30:c=C.BmpString;break;case 31:c=C.DATE;break;case 32:c=C.TimeOfDay;break;case 33:c=C.DateTime;break;case 34:c=C.Duration;break;default:{let u=o.idBlock.isConstructed?new C.Constructed:new C.Primitive;u.idBlock=o.idBlock,u.lenBlock=o.lenBlock,u.warnings=o.warnings,o=u}}break;case 2:case 3:case 4:default:c=o.idBlock.isConstructed?C.Constructed:C.Primitive}return o=I0(o,c),a=o.fromBER(r,e,o.lenBlock.isIndefiniteForm?t:o.lenBlock.length),o.valueBeforeDecodeView=r.subarray(n,n+o.blockLength),{offset:a,result:o}}function jc(r){if(!r.byteLength){let e=new Ae({},Le);return e.error="Input buffer has zero length",{offset:-1,result:e}}return Xs(q.BufferSourceConverter.toUint8Array(r).slice(),0,r.byteLength)}function k0(r,e){return r?1:e}var pt=class extends Le{constructor({value:e=[],isIndefiniteForm:t=!1,...n}={}){super(n),this.value=e,this.isIndefiniteForm=t}fromBER(e,t,n){let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;if(this.valueBeforeDecodeView=o.subarray(t,t+n),this.valueBeforeDecodeView.length===0)return this.warnings.push("Zero buffer length"),t;let s=t;for(;k0(this.isIndefiniteForm,n)>0;){let i=Xs(o,s,n);if(i.offset===-1)return this.error=i.result.error,this.warnings.concat(i.result.warnings),-1;if(s=i.offset,this.blockLength+=i.result.blockLength,n-=i.result.blockLength,this.value.push(i.result),this.isIndefiniteForm&&i.result.constructor.NAME===zn)break}return this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.NAME===zn?this.value.pop():this.warnings.push("No EndOfContent block encoded")),s}toBER(e,t){let n=t||new qn;for(let o=0;o<this.value.length;o++)this.value[o].toBER(e,n);return t?ct:n.final()}toJSON(){let e={...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,value:[]};for(let t of this.value)e.value.push(t.toJSON());return e}};pt.NAME="ConstructedValueBlock";var Wf,Qt=class extends Ae{constructor(e={}){super(e,pt),this.idBlock.isConstructed=!0}fromBER(e,t,n){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;let o=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return o===-1?(this.error=this.valueBlock.error,o):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),o)}onAsciiEncoding(){let e=[];for(let n of this.valueBlock.value)e.push(n.toString("ascii").split(`
+"use strict";var Libp2P=(()=>{var Gp=Object.create;var No=Object.defineProperty;var Wp=Object.getOwnPropertyDescriptor;var jp=Object.getOwnPropertyNames;var Zp=Object.getPrototypeOf,Xp=Object.prototype.hasOwnProperty;var Qe=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Re=(r,e)=>{for(var t in e)No(r,t,{get:e[t],enumerable:!0})},Ru=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of jp(e))!Xp.call(r,o)&&o!==t&&No(r,o,{get:()=>e[o],enumerable:!(n=Wp(e,o))||n.enumerable});return r};var ar=(r,e,t)=>(t=r!=null?Gp(Zp(r)):{},Ru(e||!r||!r.__esModule?No(t,"default",{value:r,enumerable:!0}):t,r)),Yp=r=>Ru(No({},"__esModule",{value:!0}),r);var Of=Qe(Jr=>{"use strict";var b0="[object ArrayBuffer]",kt=class r{static isArrayBuffer(e){return Object.prototype.toString.call(e)===b0}static toArrayBuffer(e){return this.isArrayBuffer(e)?e:e.byteLength===e.buffer.byteLength||e.byteOffset===0&&e.byteLength===e.buffer.byteLength?e.buffer:this.toUint8Array(e.buffer).slice(e.byteOffset,e.byteOffset+e.byteLength).buffer}static toUint8Array(e){return this.toView(e,Uint8Array)}static toView(e,t){if(e.constructor===t)return e;if(this.isArrayBuffer(e))return new t(e);if(this.isArrayBufferView(e))return new t(e.buffer,e.byteOffset,e.byteLength);throw new TypeError("The provided value is not of type '(ArrayBuffer or ArrayBufferView)'")}static isBufferSource(e){return this.isArrayBufferView(e)||this.isArrayBuffer(e)}static isArrayBufferView(e){return ArrayBuffer.isView(e)||e&&this.isArrayBuffer(e.buffer)}static isEqual(e,t){let n=r.toUint8Array(e),o=r.toUint8Array(t);if(n.length!==o.byteLength)return!1;for(let s=0;s<n.length;s++)if(n[s]!==o[s])return!1;return!0}static concat(...e){let t;Array.isArray(e[0])&&!(e[1]instanceof Function)||Array.isArray(e[0])&&e[1]instanceof Function?t=e[0]:e[e.length-1]instanceof Function?t=e.slice(0,e.length-1):t=e;let n=0;for(let i of t)n+=i.byteLength;let o=new Uint8Array(n),s=0;for(let i of t){let a=this.toUint8Array(i);o.set(a,s),s+=a.length}return e[e.length-1]instanceof Function?this.toView(o,e[e.length-1]):o.buffer}},qc="string",x0=/^[0-9a-f]+$/i,v0=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,E0=/^[a-zA-Z0-9-_]+$/,cs=class{static fromString(e){let t=unescape(encodeURIComponent(e)),n=new Uint8Array(t.length);for(let o=0;o<t.length;o++)n[o]=t.charCodeAt(o);return n.buffer}static toString(e){let t=kt.toUint8Array(e),n="";for(let s=0;s<t.length;s++)n+=String.fromCharCode(t[s]);return decodeURIComponent(escape(n))}},Ze=class{static toString(e,t=!1){let n=kt.toArrayBuffer(e),o=new DataView(n),s="";for(let i=0;i<n.byteLength;i+=2){let a=o.getUint16(i,t);s+=String.fromCharCode(a)}return s}static fromString(e,t=!1){let n=new ArrayBuffer(e.length*2),o=new DataView(n);for(let s=0;s<e.length;s++)o.setUint16(s*2,e.charCodeAt(s),t);return n}},ls=class r{static isHex(e){return typeof e===qc&&x0.test(e)}static isBase64(e){return typeof e===qc&&v0.test(e)}static isBase64Url(e){return typeof e===qc&&E0.test(e)}static ToString(e,t="utf8"){let n=kt.toUint8Array(e);switch(t.toLowerCase()){case"utf8":return this.ToUtf8String(n);case"binary":return this.ToBinary(n);case"hex":return this.ToHex(n);case"base64":return this.ToBase64(n);case"base64url":return this.ToBase64Url(n);case"utf16le":return Ze.toString(n,!0);case"utf16":case"utf16be":return Ze.toString(n);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromString(e,t="utf8"){if(!e)return new ArrayBuffer(0);switch(t.toLowerCase()){case"utf8":return this.FromUtf8String(e);case"binary":return this.FromBinary(e);case"hex":return this.FromHex(e);case"base64":return this.FromBase64(e);case"base64url":return this.FromBase64Url(e);case"utf16le":return Ze.fromString(e,!0);case"utf16":case"utf16be":return Ze.fromString(e);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToBase64(e){let t=kt.toUint8Array(e);if(typeof btoa<"u"){let n=this.ToString(t,"binary");return btoa(n)}else return Buffer.from(t).toString("base64")}static FromBase64(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isBase64(t))throw new TypeError("Argument 'base64Text' is not Base64 encoded");return typeof atob<"u"?this.FromBinary(atob(t)):new Uint8Array(Buffer.from(t,"base64")).buffer}static FromBase64Url(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isBase64Url(t))throw new TypeError("Argument 'base64url' is not Base64Url encoded");return this.FromBase64(this.Base64Padding(t.replace(/\-/g,"+").replace(/\_/g,"/")))}static ToBase64Url(e){return this.ToBase64(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")}static FromUtf8String(e,t=r.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.FromBinary(e);case"utf8":return cs.fromString(e);case"utf16":case"utf16be":return Ze.fromString(e);case"utf16le":case"usc2":return Ze.fromString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToUtf8String(e,t=r.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.ToBinary(e);case"utf8":return cs.toString(e);case"utf16":case"utf16be":return Ze.toString(e);case"utf16le":case"usc2":return Ze.toString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromBinary(e){let t=e.length,n=new Uint8Array(t);for(let o=0;o<t;o++)n[o]=e.charCodeAt(o);return n.buffer}static ToBinary(e){let t=kt.toUint8Array(e),n="";for(let o=0;o<t.length;o++)n+=String.fromCharCode(t[o]);return n}static ToHex(e){let t=kt.toUint8Array(e),n="",o=t.length;for(let s=0;s<o;s++){let i=t[s];i<16&&(n+="0"),n+=i.toString(16)}return n}static FromHex(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!r.isHex(t))throw new TypeError("Argument 'hexString' is not HEX encoded");t.length%2&&(t=`0${t}`);let n=new Uint8Array(t.length/2);for(let o=0;o<t.length;o=o+2){let s=t.slice(o,o+2);n[o/2]=parseInt(s,16)}return n.buffer}static ToUtf16String(e,t=!1){return Ze.toString(e,t)}static FromUtf16String(e,t=!1){return Ze.fromString(e,t)}static Base64Padding(e){let t=4-e.length%4;if(t<4)for(let n=0;n<t;n++)e+="=";return e}static formatString(e){return e?.replace(/[\n\r\t ]/g,"")||""}};ls.DEFAULT_UTF8_ENCODING="utf8";function A0(r,...e){let t=arguments[0];for(let n=1;n<arguments.length;n++){let o=arguments[n];for(let s in o)t[s]=o[s]}return t}function S0(...r){let e=r.map(o=>o.byteLength).reduce((o,s)=>o+s),t=new Uint8Array(e),n=0;return r.map(o=>new Uint8Array(o)).forEach(o=>{for(let s of o)t[n++]=s}),t.buffer}function _0(r,e){if(!(r&&e)||r.byteLength!==e.byteLength)return!1;let t=new Uint8Array(r),n=new Uint8Array(e);for(let o=0;o<r.byteLength;o++)if(t[o]!==n[o])return!1;return!0}Jr.BufferSourceConverter=kt;Jr.Convert=ls;Jr.assign=A0;Jr.combine=S0;Jr.isEqual=_0});var wd=Qe(fo=>{(function(){var r,e,t,n,o,s,i,a;a=function(c){var u,f,l,d;return u=(c&255<<24)>>>24,f=(c&255<<16)>>>16,l=(c&65280)>>>8,d=c&255,[u,f,l,d].join(".")},i=function(c){var u,f,l,d,h,p;for(u=[],l=d=0;d<=3&&c.length!==0;l=++d){if(l>0){if(c[0]!==".")throw new Error("Invalid IP");c=c.substring(1)}p=e(c),h=p[0],f=p[1],c=c.substring(f),u.push(h)}if(c.length!==0)throw new Error("Invalid IP");switch(u.length){case 1:if(u[0]>4294967295)throw new Error("Invalid IP");return u[0]>>>0;case 2:if(u[0]>255||u[1]>16777215)throw new Error("Invalid IP");return(u[0]<<24|u[1])>>>0;case 3:if(u[0]>255||u[1]>255||u[2]>65535)throw new Error("Invalid IP");return(u[0]<<24|u[1]<<16|u[2])>>>0;case 4:if(u[0]>255||u[1]>255||u[2]>255||u[3]>255)throw new Error("Invalid IP");return(u[0]<<24|u[1]<<16|u[2]<<8|u[3])>>>0;default:throw new Error("Invalid IP")}},t=function(c){return c.charCodeAt(0)},n=t("0"),s=t("a"),o=t("A"),e=function(c){var u,f,l,d,h;for(d=0,u=10,f="9",l=0,c.length>1&&c[l]==="0"&&(c[l+1]==="x"||c[l+1]==="X"?(l+=2,u=16):"0"<=c[l+1]&&c[l+1]<="9"&&(l++,u=8,f="7")),h=l;l<c.length;){if("0"<=c[l]&&c[l]<=f)d=d*u+(t(c[l])-n)>>>0;else if(u===16)if("a"<=c[l]&&c[l]<="f")d=d*u+(10+t(c[l])-s)>>>0;else if("A"<=c[l]&&c[l]<="F")d=d*u+(10+t(c[l])-o)>>>0;else break;else break;if(d>4294967295)throw new Error("too large");l++}if(l===h)throw new Error("empty octet");return[d,l]},r=function(){function c(u,f){var l,d,h,p;if(typeof u!="string")throw new Error("Missing `net' parameter");if(f||(p=u.split("/",2),u=p[0],f=p[1]),f||(f=32),typeof f=="string"&&f.indexOf(".")>-1){try{this.maskLong=i(f)}catch(m){throw l=m,new Error("Invalid mask: "+f)}for(d=h=32;h>=0;d=--h)if(this.maskLong===4294967295<<32-d>>>0){this.bitmask=d;break}}else if(f||f===0)this.bitmask=parseInt(f,10),this.maskLong=0,this.bitmask>0&&(this.maskLong=4294967295<<32-this.bitmask>>>0);else throw new Error("Invalid mask: empty");try{this.netLong=(i(u)&this.maskLong)>>>0}catch(m){throw l=m,new Error("Invalid net address: "+u)}if(!(this.bitmask<=32))throw new Error("Invalid mask for ip4: "+f);this.size=Math.pow(2,32-this.bitmask),this.base=a(this.netLong),this.mask=a(this.maskLong),this.hostmask=a(~this.maskLong),this.first=this.bitmask<=30?a(this.netLong+1):this.base,this.last=this.bitmask<=30?a(this.netLong+this.size-2):a(this.netLong+this.size-1),this.broadcast=this.bitmask<=30?a(this.netLong+this.size-1):void 0}return c.prototype.contains=function(u){return typeof u=="string"&&(u.indexOf("/")>0||u.split(".").length!==4)&&(u=new c(u)),u instanceof c?this.contains(u.base)&&this.contains(u.broadcast||u.last):(i(u)&this.maskLong)>>>0===(this.netLong&this.maskLong)>>>0},c.prototype.next=function(u){return u==null&&(u=1),new c(a(this.netLong+this.size*u),this.mask)},c.prototype.forEach=function(u){var f,l,d;for(d=i(this.first),l=i(this.last),f=0;d<=l;)u(a(d),d,f),f++,d++},c.prototype.toString=function(){return this.base+"/"+this.bitmask},c}(),fo.ip2long=i,fo.long2ip=a,fo.Netmask=r}).call(fo)});var vd=Qe((uS,kl)=>{"use strict";var Ty=Object.prototype.hasOwnProperty,Ve="~";function ho(){}Object.create&&(ho.prototype=Object.create(null),new ho().__proto__||(Ve=!1));function Ly(r,e,t){this.fn=r,this.context=e,this.once=t||!1}function xd(r,e,t,n,o){if(typeof t!="function")throw new TypeError("The listener must be a function");var s=new Ly(t,n||r,o),i=Ve?Ve+e:e;return r._events[i]?r._events[i].fn?r._events[i]=[r._events[i],s]:r._events[i].push(s):(r._events[i]=s,r._eventsCount++),r}function hi(r,e){--r._eventsCount===0?r._events=new ho:delete r._events[e]}function Ne(){this._events=new ho,this._eventsCount=0}Ne.prototype.eventNames=function(){var e=[],t,n;if(this._eventsCount===0)return e;for(n in t=this._events)Ty.call(t,n)&&e.push(Ve?n.slice(1):n);return Object.getOwnPropertySymbols?e.concat(Object.getOwnPropertySymbols(t)):e};Ne.prototype.listeners=function(e){var t=Ve?Ve+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var o=0,s=n.length,i=new Array(s);o<s;o++)i[o]=n[o].fn;return i};Ne.prototype.listenerCount=function(e){var t=Ve?Ve+e:e,n=this._events[t];return n?n.fn?1:n.length:0};Ne.prototype.emit=function(e,t,n,o,s,i){var a=Ve?Ve+e:e;if(!this._events[a])return!1;var c=this._events[a],u=arguments.length,f,l;if(c.fn){switch(c.once&&this.removeListener(e,c.fn,void 0,!0),u){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,t),!0;case 3:return c.fn.call(c.context,t,n),!0;case 4:return c.fn.call(c.context,t,n,o),!0;case 5:return c.fn.call(c.context,t,n,o,s),!0;case 6:return c.fn.call(c.context,t,n,o,s,i),!0}for(l=1,f=new Array(u-1);l<u;l++)f[l-1]=arguments[l];c.fn.apply(c.context,f)}else{var d=c.length,h;for(l=0;l<d;l++)switch(c[l].once&&this.removeListener(e,c[l].fn,void 0,!0),u){case 1:c[l].fn.call(c[l].context);break;case 2:c[l].fn.call(c[l].context,t);break;case 3:c[l].fn.call(c[l].context,t,n);break;case 4:c[l].fn.call(c[l].context,t,n,o);break;default:if(!f)for(h=1,f=new Array(u-1);h<u;h++)f[h-1]=arguments[h];c[l].fn.apply(c[l].context,f)}}return!0};Ne.prototype.on=function(e,t,n){return xd(this,e,t,n,!1)};Ne.prototype.once=function(e,t,n){return xd(this,e,t,n,!0)};Ne.prototype.removeListener=function(e,t,n,o){var s=Ve?Ve+e:e;if(!this._events[s])return this;if(!t)return hi(this,s),this;var i=this._events[s];if(i.fn)i.fn===t&&(!o||i.once)&&(!n||i.context===n)&&hi(this,s);else{for(var a=0,c=[],u=i.length;a<u;a++)(i[a].fn!==t||o&&!i[a].once||n&&i[a].context!==n)&&c.push(i[a]);c.length?this._events[s]=c.length===1?c[0]:c:hi(this,s)}return this};Ne.prototype.removeAllListeners=function(e){var t;return e?(t=Ve?Ve+e:e,this._events[t]&&hi(this,t)):(this._events=new ho,this._eventsCount=0),this};Ne.prototype.off=Ne.prototype.removeListener;Ne.prototype.addListener=Ne.prototype.on;Ne.prefixed=Ve;Ne.EventEmitter=Ne;typeof kl<"u"&&(kl.exports=Ne)});var Bd=Qe((PS,_d)=>{_d.exports=function(r){if(!r)throw Error("hashlru must have a max value, of type number, greater than 0");var e=0,t=Object.create(null),n=Object.create(null);function o(s,i){t[s]=i,e++,e>=r&&(e=0,n=t,t=Object.create(null))}return{has:function(s){return t[s]!==void 0||n[s]!==void 0},remove:function(s){t[s]!==void 0&&(t[s]=void 0),n[s]!==void 0&&(n[s]=void 0)},get:function(s){var i=t[s];if(i!==void 0)return i;if((i=n[s])!==void 0)return o(s,i),i},set:function(s,i){t[s]!==void 0?t[s]=i:o(s,i)},clear:function(){t=Object.create(null),n=Object.create(null)}}}});var Ld=Qe((XS,Td)=>{"use strict";Td.exports=r=>{if(Object.prototype.toString.call(r)!=="[object Object]")return!1;let e=Object.getPrototypeOf(r);return e===null||e===Object.prototype}});var Ud=Qe((Dd,Md)=>{"use strict";var gi=Ld(),{hasOwnProperty:Pd}=Object.prototype,{propertyIsEnumerable:My}=Object,pn=(r,e,t)=>Object.defineProperty(r,e,{value:t,writable:!0,enumerable:!0,configurable:!0}),Uy=Dd,Nd={concatArrays:!1,ignoreUndefined:!1},yi=r=>{let e=[];for(let t in r)Pd.call(r,t)&&e.push(t);if(Object.getOwnPropertySymbols){let t=Object.getOwnPropertySymbols(r);for(let n of t)My.call(r,n)&&e.push(n)}return e};function mn(r){return Array.isArray(r)?Oy(r):gi(r)?Fy(r):r}function Oy(r){let e=r.slice(0,0);return yi(r).forEach(t=>{pn(e,t,mn(r[t]))}),e}function Fy(r){let e=Object.getPrototypeOf(r)===null?Object.create(null):{};return yi(r).forEach(t=>{pn(e,t,mn(r[t]))}),e}var Rd=(r,e,t,n)=>(t.forEach(o=>{typeof e[o]>"u"&&n.ignoreUndefined||(o in r&&r[o]!==Object.getPrototypeOf(r)?pn(r,o,Ul(r[o],e[o],n)):pn(r,o,mn(e[o])))}),r),Vy=(r,e,t)=>{let n=r.slice(0,0),o=0;return[r,e].forEach(s=>{let i=[];for(let a=0;a<s.length;a++)Pd.call(s,a)&&(i.push(String(a)),s===r?pn(n,o++,s[a]):pn(n,o++,mn(s[a])));n=Rd(n,s,yi(s).filter(a=>!i.includes(a)),t)}),n};function Ul(r,e,t){return t.concatArrays&&Array.isArray(r)&&Array.isArray(e)?Vy(r,e,t):!gi(e)||!gi(r)?mn(e):Rd(r,e,yi(e),t)}Md.exports=function(...r){let e=Ul(mn(Nd),this!==Uy&&this||{},Nd),t={_:{}};for(let n of r)if(n!==void 0){if(!gi(n))throw new TypeError("`"+n+"` is not an Option Object");t=Ul(t,{_:n},e)}return t._}});var Hd=Qe((yo,Si)=>{(function(r,e){"use strict";var t={version:"3.0.0",x86:{},x64:{},inputValidation:!0};function n(h){if(!Array.isArray(h)&&!ArrayBuffer.isView(h))return!1;for(var p=0;p<h.length;p++)if(!Number.isInteger(h[p])||h[p]<0||h[p]>255)return!1;return!0}function o(h,p){return(h&65535)*p+(((h>>>16)*p&65535)<<16)}function s(h,p){return h<<p|h>>>32-p}function i(h){return h^=h>>>16,h=o(h,2246822507),h^=h>>>13,h=o(h,3266489909),h^=h>>>16,h}function a(h,p){h=[h[0]>>>16,h[0]&65535,h[1]>>>16,h[1]&65535],p=[p[0]>>>16,p[0]&65535,p[1]>>>16,p[1]&65535];var m=[0,0,0,0];return m[3]+=h[3]+p[3],m[2]+=m[3]>>>16,m[3]&=65535,m[2]+=h[2]+p[2],m[1]+=m[2]>>>16,m[2]&=65535,m[1]+=h[1]+p[1],m[0]+=m[1]>>>16,m[1]&=65535,m[0]+=h[0]+p[0],m[0]&=65535,[m[0]<<16|m[1],m[2]<<16|m[3]]}function c(h,p){h=[h[0]>>>16,h[0]&65535,h[1]>>>16,h[1]&65535],p=[p[0]>>>16,p[0]&65535,p[1]>>>16,p[1]&65535];var m=[0,0,0,0];return m[3]+=h[3]*p[3],m[2]+=m[3]>>>16,m[3]&=65535,m[2]+=h[2]*p[3],m[1]+=m[2]>>>16,m[2]&=65535,m[2]+=h[3]*p[2],m[1]+=m[2]>>>16,m[2]&=65535,m[1]+=h[1]*p[3],m[0]+=m[1]>>>16,m[1]&=65535,m[1]+=h[2]*p[2],m[0]+=m[1]>>>16,m[1]&=65535,m[1]+=h[3]*p[1],m[0]+=m[1]>>>16,m[1]&=65535,m[0]+=h[0]*p[3]+h[1]*p[2]+h[2]*p[1]+h[3]*p[0],m[0]&=65535,[m[0]<<16|m[1],m[2]<<16|m[3]]}function u(h,p){return p%=64,p===32?[h[1],h[0]]:p<32?[h[0]<<p|h[1]>>>32-p,h[1]<<p|h[0]>>>32-p]:(p-=32,[h[1]<<p|h[0]>>>32-p,h[0]<<p|h[1]>>>32-p])}function f(h,p){return p%=64,p===0?h:p<32?[h[0]<<p|h[1]>>>32-p,h[1]<<p]:[h[1]<<p-32,0]}function l(h,p){return[h[0]^p[0],h[1]^p[1]]}function d(h){return h=l(h,[0,h[0]>>>1]),h=c(h,[4283543511,3981806797]),h=l(h,[0,h[0]>>>1]),h=c(h,[3301882366,444984403]),h=l(h,[0,h[0]>>>1]),h}t.x86.hash32=function(h,p){if(t.inputValidation&&!n(h))return e;p=p||0;for(var m=h.length%4,g=h.length-m,y=p,b=0,w=3432918353,x=461845907,A=0;A<g;A=A+4)b=h[A]|h[A+1]<<8|h[A+2]<<16|h[A+3]<<24,b=o(b,w),b=s(b,15),b=o(b,x),y^=b,y=s(y,13),y=o(y,5)+3864292196;switch(b=0,m){case 3:b^=h[A+2]<<16;case 2:b^=h[A+1]<<8;case 1:b^=h[A],b=o(b,w),b=s(b,15),b=o(b,x),y^=b}return y^=h.length,y=i(y),y>>>0},t.x86.hash128=function(h,p){if(t.inputValidation&&!n(h))return e;p=p||0;for(var m=h.length%16,g=h.length-m,y=p,b=p,w=p,x=p,A=0,_=0,v=0,B=0,T=597399067,te=2869860233,V=951274213,F=2716044179,R=0;R<g;R=R+16)A=h[R]|h[R+1]<<8|h[R+2]<<16|h[R+3]<<24,_=h[R+4]|h[R+5]<<8|h[R+6]<<16|h[R+7]<<24,v=h[R+8]|h[R+9]<<8|h[R+10]<<16|h[R+11]<<24,B=h[R+12]|h[R+13]<<8|h[R+14]<<16|h[R+15]<<24,A=o(A,T),A=s(A,15),A=o(A,te),y^=A,y=s(y,19),y+=b,y=o(y,5)+1444728091,_=o(_,te),_=s(_,16),_=o(_,V),b^=_,b=s(b,17),b+=w,b=o(b,5)+197830471,v=o(v,V),v=s(v,17),v=o(v,F),w^=v,w=s(w,15),w+=x,w=o(w,5)+2530024501,B=o(B,F),B=s(B,18),B=o(B,T),x^=B,x=s(x,13),x+=y,x=o(x,5)+850148119;switch(A=0,_=0,v=0,B=0,m){case 15:B^=h[R+14]<<16;case 14:B^=h[R+13]<<8;case 13:B^=h[R+12],B=o(B,F),B=s(B,18),B=o(B,T),x^=B;case 12:v^=h[R+11]<<24;case 11:v^=h[R+10]<<16;case 10:v^=h[R+9]<<8;case 9:v^=h[R+8],v=o(v,V),v=s(v,17),v=o(v,F),w^=v;case 8:_^=h[R+7]<<24;case 7:_^=h[R+6]<<16;case 6:_^=h[R+5]<<8;case 5:_^=h[R+4],_=o(_,te),_=s(_,16),_=o(_,V),b^=_;case 4:A^=h[R+3]<<24;case 3:A^=h[R+2]<<16;case 2:A^=h[R+1]<<8;case 1:A^=h[R],A=o(A,T),A=s(A,15),A=o(A,te),y^=A}return y^=h.length,b^=h.length,w^=h.length,x^=h.length,y+=b,y+=w,y+=x,b+=y,w+=y,x+=y,y=i(y),b=i(b),w=i(w),x=i(x),y+=b,y+=w,y+=x,b+=y,w+=y,x+=y,("00000000"+(y>>>0).toString(16)).slice(-8)+("00000000"+(b>>>0).toString(16)).slice(-8)+("00000000"+(w>>>0).toString(16)).slice(-8)+("00000000"+(x>>>0).toString(16)).slice(-8)},t.x64.hash128=function(h,p){if(t.inputValidation&&!n(h))return e;p=p||0;for(var m=h.length%16,g=h.length-m,y=[0,p],b=[0,p],w=[0,0],x=[0,0],A=[2277735313,289559509],_=[1291169091,658871167],v=0;v<g;v=v+16)w=[h[v+4]|h[v+5]<<8|h[v+6]<<16|h[v+7]<<24,h[v]|h[v+1]<<8|h[v+2]<<16|h[v+3]<<24],x=[h[v+12]|h[v+13]<<8|h[v+14]<<16|h[v+15]<<24,h[v+8]|h[v+9]<<8|h[v+10]<<16|h[v+11]<<24],w=c(w,A),w=u(w,31),w=c(w,_),y=l(y,w),y=u(y,27),y=a(y,b),y=a(c(y,[0,5]),[0,1390208809]),x=c(x,_),x=u(x,33),x=c(x,A),b=l(b,x),b=u(b,31),b=a(b,y),b=a(c(b,[0,5]),[0,944331445]);switch(w=[0,0],x=[0,0],m){case 15:x=l(x,f([0,h[v+14]],48));case 14:x=l(x,f([0,h[v+13]],40));case 13:x=l(x,f([0,h[v+12]],32));case 12:x=l(x,f([0,h[v+11]],24));case 11:x=l(x,f([0,h[v+10]],16));case 10:x=l(x,f([0,h[v+9]],8));case 9:x=l(x,[0,h[v+8]]),x=c(x,_),x=u(x,33),x=c(x,A),b=l(b,x);case 8:w=l(w,f([0,h[v+7]],56));case 7:w=l(w,f([0,h[v+6]],48));case 6:w=l(w,f([0,h[v+5]],40));case 5:w=l(w,f([0,h[v+4]],32));case 4:w=l(w,f([0,h[v+3]],24));case 3:w=l(w,f([0,h[v+2]],16));case 2:w=l(w,f([0,h[v+1]],8));case 1:w=l(w,[0,h[v]]),w=c(w,A),w=u(w,31),w=c(w,_),y=l(y,w)}return y=l(y,[0,h.length]),b=l(b,[0,h.length]),y=a(y,b),b=a(b,y),y=d(y),b=d(b),y=a(y,b),b=a(b,y),("00000000"+(y[0]>>>0).toString(16)).slice(-8)+("00000000"+(y[1]>>>0).toString(16)).slice(-8)+("00000000"+(b[0]>>>0).toString(16)).slice(-8)+("00000000"+(b[1]>>>0).toString(16)).slice(-8)},typeof yo<"u"?(typeof Si<"u"&&Si.exports&&(yo=Si.exports=t),yo.murmurHash3=t):typeof define=="function"&&define.amd?define([],function(){return t}):(t._murmurHash3=r.murmurHash3,t.noConflict=function(){return r.murmurHash3=t._murmurHash3,t._murmurHash3=e,t.noConflict=e,t},r.murmurHash3=t)})(yo)});var Kd=Qe((_8,$d)=>{$d.exports=Hd()});var Ap=Qe((lB,Ep)=>{function Je(r,e){typeof e=="boolean"&&(e={forever:e}),this._originalTimeouts=JSON.parse(JSON.stringify(r)),this._timeouts=r,this._options=e||{},this._maxRetryTime=e&&e.maxRetryTime||1/0,this._fn=null,this._errors=[],this._attempts=1,this._operationTimeout=null,this._operationTimeoutCb=null,this._timeout=null,this._operationStart=null,this._timer=null,this._options.forever&&(this._cachedTimeouts=this._timeouts.slice(0))}Ep.exports=Je;Je.prototype.reset=function(){this._attempts=1,this._timeouts=this._originalTimeouts.slice(0)};Je.prototype.stop=function(){this._timeout&&clearTimeout(this._timeout),this._timer&&clearTimeout(this._timer),this._timeouts=[],this._cachedTimeouts=null};Je.prototype.retry=function(r){if(this._timeout&&clearTimeout(this._timeout),!r)return!1;var e=new Date().getTime();if(r&&e-this._operationStart>=this._maxRetryTime)return this._errors.push(r),this._errors.unshift(new Error("RetryOperation timeout occurred")),!1;this._errors.push(r);var t=this._timeouts.shift();if(t===void 0)if(this._cachedTimeouts)this._errors.splice(0,this._errors.length-1),t=this._cachedTimeouts.slice(-1);else return!1;var n=this;return this._timer=setTimeout(function(){n._attempts++,n._operationTimeoutCb&&(n._timeout=setTimeout(function(){n._operationTimeoutCb(n._attempts)},n._operationTimeout),n._options.unref&&n._timeout.unref()),n._fn(n._attempts)},t),this._options.unref&&this._timer.unref(),!0};Je.prototype.attempt=function(r,e){this._fn=r,e&&(e.timeout&&(this._operationTimeout=e.timeout),e.cb&&(this._operationTimeoutCb=e.cb));var t=this;this._operationTimeoutCb&&(this._timeout=setTimeout(function(){t._operationTimeoutCb()},t._operationTimeout)),this._operationStart=new Date().getTime(),this._fn(this._attempts)};Je.prototype.try=function(r){console.log("Using RetryOperation.try() is deprecated"),this.attempt(r)};Je.prototype.start=function(r){console.log("Using RetryOperation.start() is deprecated"),this.attempt(r)};Je.prototype.start=Je.prototype.try;Je.prototype.errors=function(){return this._errors};Je.prototype.attempts=function(){return this._attempts};Je.prototype.mainError=function(){if(this._errors.length===0)return null;for(var r={},e=null,t=0,n=0;n<this._errors.length;n++){var o=this._errors[n],s=o.message,i=(r[s]||0)+1;r[s]=i,i>=t&&(e=o,t=i)}return e}});var Sp=Qe(Lr=>{var Hw=Ap();Lr.operation=function(r){var e=Lr.timeouts(r);return new Hw(e,{forever:r&&(r.forever||r.retries===1/0),unref:r&&r.unref,maxRetryTime:r&&r.maxRetryTime})};Lr.timeouts=function(r){if(r instanceof Array)return[].concat(r);var e={retries:10,factor:2,minTimeout:1*1e3,maxTimeout:1/0,randomize:!1};for(var t in r)e[t]=r[t];if(e.minTimeout>e.maxTimeout)throw new Error("minTimeout is greater than maxTimeout");for(var n=[],o=0;o<e.retries;o++)n.push(this.createTimeout(o,e));return r&&r.forever&&!n.length&&n.push(this.createTimeout(o,e)),n.sort(function(s,i){return s-i}),n};Lr.createTimeout=function(r,e){var t=e.randomize?Math.random()+1:1,n=Math.round(t*Math.max(e.minTimeout,1)*Math.pow(e.factor,r));return n=Math.min(n,e.maxTimeout),n};Lr.wrap=function(r,e,t){if(e instanceof Array&&(t=e,e=null),!t){t=[];for(var n in r)typeof r[n]=="function"&&t.push(n)}for(var o=0;o<t.length;o++){var s=t[o],i=r[s];r[s]=function(c){var u=Lr.operation(e),f=Array.prototype.slice.call(arguments,1),l=f.pop();f.push(function(d){u.retry(d)||(d&&(arguments[0]=u.mainError()),l.apply(this,arguments))}),u.attempt(function(){c.apply(r,f)})}.bind(r,i),r[s].options=e}}});var Bp=Qe((fB,_p)=>{_p.exports=Sp()});var gb={};Re(gb,{createLibp2p:()=>mb});var Du=Symbol.for("@libp2p/connection");var La=Symbol.for("@libp2p/content-routing");var Na=Symbol.for("@libp2p/peer-discovery");var Po=Symbol.for("@libp2p/peer-id");function Ro(r){return!!r?.[Po]}var Pa=Symbol.for("@libp2p/peer-routing");var Ra="keep-alive";var Sb=Symbol.for("@libp2p/transport");var Ft;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(Ft||(Ft={}));var et=class extends Error{static name="AbortError";constructor(e="The operation was aborted"){super(e),this.name="AbortError"}};var D=class extends Error{static name="InvalidParametersError";constructor(e="Invalid parameters"){super(e),this.name="InvalidParametersError"}},Rr=class extends Error{static name="InvalidPublicKeyError";constructor(e="Invalid public key"){super(e),this.name="InvalidPublicKeyError"}},In=class extends Error{static name="InvalidPrivateKeyError";constructor(e="Invalid private key"){super(e),this.name="InvalidPrivateKeyError"}};var Do=class extends Error{static name="ConnectionClosingError";constructor(e="The connection is closing"){super(e),this.name="ConnectionClosingError"}},Dr=class extends Error{static name="ConnectionClosedError";constructor(e="The connection is closed"){super(e),this.name="ConnectionClosedError"}};var Mo=class extends Error{static name="NotFoundError";constructor(e="Not found"){super(e),this.name="NotFoundError"}},Mr=class extends Error{static name="InvalidPeerIdError";constructor(e="Invalid PeerID"){super(e),this.name="InvalidPeerIdError"}},Vt=class extends Error{static name="InvalidMultiaddrError";constructor(e="Invalid multiaddr"){super(e),this.name="InvalidMultiaddrError"}},Uo=class extends Error{static name="InvalidCIDError";constructor(e="Invalid CID"){super(e),this.name="InvalidCIDError"}},Oo=class extends Error{static name="InvalidMultihashError";constructor(e="Invalid Multihash"){super(e),this.name="InvalidMultihashError"}},Cn=class extends Error{static name="UnsupportedProtocolError";constructor(e="Unsupported protocol error"){super(e),this.name="UnsupportedProtocolError"}},Fo=class extends Error{static name="InvalidMessageError";constructor(e="Invalid message"){super(e),this.name="InvalidMessageError"}};var Vo=class extends Error{static name="TimeoutError";constructor(e="Timed out"){super(e),this.name="TimeoutError"}},xt=class extends Error{static name="NotStartedError";constructor(e="Not started"){super(e),this.name="NotStartedError"}};var Ur=class extends Error{static name="DialError";constructor(e="Dial error"){super(e),this.name="DialError"}};var Or=class extends Error{static name="LimitedConnectionError";constructor(e="Limited connection"){super(e),this.name="LimitedConnectionError"}},Ho=class extends Error{static name="TooManyInboundProtocolStreamsError";constructor(e="Too many inbound protocol streams"){super(e),this.name="TooManyInboundProtocolStreamsError"}},$o=class extends Error{static name="TooManyOutboundProtocolStreamsError";constructor(e="Too many outbound protocol streams"){super(e),this.name="TooManyOutboundProtocolStreamsError"}},Ht=class extends Error{static name="UnsupportedKeyTypeError";constructor(e="Unsupported key type"){super(e),this.name="UnsupportedKeyTypeError"}};var ee=(r,...e)=>{try{[...e]}catch{}};var vt=class extends EventTarget{#e=new Map;constructor(){super(),ee(1/0,this)}listenerCount(e){let t=this.#e.get(e);return t==null?0:t.length}addEventListener(e,t,n){super.addEventListener(e,t,n);let o=this.#e.get(e);o==null&&(o=[],this.#e.set(e,o)),o.push({callback:t,once:(n!==!0&&n!==!1&&n?.once)??!1})}removeEventListener(e,t,n){super.removeEventListener(e.toString(),t??null,n);let o=this.#e.get(e);o!=null&&(o=o.filter(({callback:s})=>s!==t),this.#e.set(e,o))}dispatchEvent(e){let t=super.dispatchEvent(e),n=this.#e.get(e.type);return n==null||(n=n.filter(({once:o})=>!o),this.#e.set(e.type,n)),t}safeDispatchEvent(e,t={}){return this.dispatchEvent(new CustomEvent(e,t))}};function Ko(r){return r!=null&&typeof r.start=="function"&&typeof r.stop=="function"}async function Mu(...r){let e=[];for(let t of r)Ko(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStart!=null&&await t.beforeStart()})),await Promise.all(e.map(async t=>{await t.start()})),await Promise.all(e.map(async t=>{t.afterStart!=null&&await t.afterStart()}))}async function Uu(...r){let e=[];for(let t of r)Ko(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStop!=null&&await t.beforeStop()})),await Promise.all(e.map(async t=>{await t.stop()})),await Promise.all(e.map(async t=>{t.afterStop!=null&&await t.afterStop()}))}var kn=Symbol.for("@libp2p/service-capabilities"),Da=Symbol.for("@libp2p/service-dependencies");var Va={};Re(Va,{base58btc:()=>W,base58flickr:()=>nm});var ex=new Uint8Array(0);function Ou(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function Et(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function Fu(r){return new TextEncoder().encode(r)}function Vu(r){return new TextDecoder().decode(r)}function Jp(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var o=0;o<r.length;o++){var s=r.charAt(o),i=s.charCodeAt(0);if(t[i]!==255)throw new TypeError(s+" is ambiguous");t[i]=o}var a=r.length,c=r.charAt(0),u=Math.log(a)/Math.log(256),f=Math.log(256)/Math.log(a);function l(p){if(p instanceof Uint8Array||(ArrayBuffer.isView(p)?p=new Uint8Array(p.buffer,p.byteOffset,p.byteLength):Array.isArray(p)&&(p=Uint8Array.from(p))),!(p instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(p.length===0)return"";for(var m=0,g=0,y=0,b=p.length;y!==b&&p[y]===0;)y++,m++;for(var w=(b-y)*f+1>>>0,x=new Uint8Array(w);y!==b;){for(var A=p[y],_=0,v=w-1;(A!==0||_<g)&&v!==-1;v--,_++)A+=256*x[v]>>>0,x[v]=A%a>>>0,A=A/a>>>0;if(A!==0)throw new Error("Non-zero carry");g=_,y++}for(var B=w-g;B!==w&&x[B]===0;)B++;for(var T=c.repeat(m);B<w;++B)T+=r.charAt(x[B]);return T}function d(p){if(typeof p!="string")throw new TypeError("Expected String");if(p.length===0)return new Uint8Array;var m=0;if(p[m]!==" "){for(var g=0,y=0;p[m]===c;)g++,m++;for(var b=(p.length-m)*u+1>>>0,w=new Uint8Array(b);p[m];){var x=t[p.charCodeAt(m)];if(x===255)return;for(var A=0,_=b-1;(x!==0||A<y)&&_!==-1;_--,A++)x+=a*w[_]>>>0,w[_]=x%256>>>0,x=x/256>>>0;if(x!==0)throw new Error("Non-zero carry");y=A,m++}if(p[m]!==" "){for(var v=b-y;v!==b&&w[v]===0;)v++;for(var B=new Uint8Array(g+(b-v)),T=g;v!==b;)B[T++]=w[v++];return B}}}function h(p){var m=d(p);if(m)return m;throw new Error(`Non-${e} character`)}return{encode:l,decodeUnsafe:d,decode:h}}var Qp=Jp,em=Qp,$u=em;var Ma=class{name;prefix;baseEncode;constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},Ua=class{name;prefix;baseDecode;prefixCodePoint;constructor(e,t,n){this.name=e,this.prefix=t;let o=t.codePointAt(0);if(o===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=o,this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return Ku(this,e)}},Oa=class{decoders;constructor(e){this.decoders=e}or(e){return Ku(this,e)}decode(e){let t=e[0],n=this.decoders[t];if(n!=null)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Ku(r,e){return new Oa({...r.decoders??{[r.prefix]:r},...e.decoders??{[e.prefix]:e}})}var Fa=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(e,t,n,o){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=o,this.encoder=new Ma(e,t,n),this.decoder=new Ua(e,t,o)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};function Fr({name:r,prefix:e,encode:t,decode:n}){return new Fa(r,e,t,n)}function $t({name:r,prefix:e,alphabet:t}){let{encode:n,decode:o}=$u(t,r);return Fr({prefix:e,name:r,encode:n,decode:s=>Et(o(s))})}function tm(r,e,t,n){let o={};for(let f=0;f<e.length;++f)o[e[f]]=f;let s=r.length;for(;r[s-1]==="=";)--s;let i=new Uint8Array(s*t/8|0),a=0,c=0,u=0;for(let f=0;f<s;++f){let l=o[r[f]];if(l===void 0)throw new SyntaxError(`Non-${n} character`);c=c<<t|l,a+=t,a>=8&&(a-=8,i[u++]=255&c>>a)}if(a>=t||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return i}function rm(r,e,t){let n=e[e.length-1]==="=",o=(1<<t)-1,s="",i=0,a=0;for(let c=0;c<r.length;++c)for(a=a<<8|r[c],i+=8;i>t;)i-=t,s+=e[o&a>>i];if(i!==0&&(s+=e[o&a<<t-i]),n)for(;s.length*t&7;)s+="=";return s}function se({name:r,prefix:e,bitsPerChar:t,alphabet:n}){return Fr({prefix:e,name:r,encode(o){return rm(o,n,t)},decode(o){return tm(o,n,t,r)}})}var W=$t({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),nm=$t({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var Ha={};Re(Ha,{base32:()=>ze,base32hex:()=>am,base32hexpad:()=>lm,base32hexpadupper:()=>um,base32hexupper:()=>cm,base32pad:()=>sm,base32padupper:()=>im,base32upper:()=>om,base32z:()=>fm});var ze=se({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),om=se({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),sm=se({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),im=se({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),am=se({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),cm=se({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),lm=se({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),um=se({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),fm=se({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var $a={};Re($a,{base36:()=>Tn,base36upper:()=>hm});var Tn=$t({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),hm=$t({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var dm=Gu,qu=128,pm=127,mm=~pm,gm=Math.pow(2,31);function Gu(r,e,t){e=e||[],t=t||0;for(var n=t;r>=gm;)e[t++]=r&255|qu,r/=128;for(;r&mm;)e[t++]=r&255|qu,r>>>=7;return e[t]=r|0,Gu.bytes=t-n+1,e}var ym=Ka,wm=128,zu=127;function Ka(r,n){var t=0,n=n||0,o=0,s=n,i,a=r.length;do{if(s>=a)throw Ka.bytes=0,new RangeError("Could not decode varint");i=r[s++],t+=o<28?(i&zu)<<o:(i&zu)*Math.pow(2,o),o+=7}while(i>=wm);return Ka.bytes=s-n,t}var bm=Math.pow(2,7),xm=Math.pow(2,14),vm=Math.pow(2,21),Em=Math.pow(2,28),Am=Math.pow(2,35),Sm=Math.pow(2,42),_m=Math.pow(2,49),Bm=Math.pow(2,56),Im=Math.pow(2,63),Cm=function(r){return r<bm?1:r<xm?2:r<vm?3:r<Em?4:r<Am?5:r<Sm?6:r<_m?7:r<Bm?8:r<Im?9:10},km={encode:dm,decode:ym,encodingLength:Cm},Tm=km,Ln=Tm;function Nn(r,e=0){return[Ln.decode(r,e),Ln.decode.bytes]}function Vr(r,e,t=0){return Ln.encode(r,e,t),e}function Hr(r){return Ln.encodingLength(r)}function tt(r,e){let t=e.byteLength,n=Hr(r),o=n+Hr(t),s=new Uint8Array(o+t);return Vr(r,s,0),Vr(t,s,n),s.set(e,o),new $r(r,t,e,s)}function rt(r){let e=Et(r),[t,n]=Nn(e),[o,s]=Nn(e.subarray(n)),i=e.subarray(n+s);if(i.byteLength!==o)throw new Error("Incorrect length");return new $r(t,o,i,e)}function Wu(r,e){if(r===e)return!0;{let t=e;return r.code===t.code&&r.size===t.size&&t.bytes instanceof Uint8Array&&Ou(r.bytes,t.bytes)}}var $r=class{code;size;digest;bytes;constructor(e,t,n,o){this.code=e,this.size=t,this.digest=n,this.bytes=o}};function ju(r,e){let{bytes:t,version:n}=r;switch(n){case 0:return Nm(t,qa(r),e??W.encoder);default:return Pm(t,qa(r),e??ze.encoder)}}var Zu=new WeakMap;function qa(r){let e=Zu.get(r);if(e==null){let t=new Map;return Zu.set(r,t),t}return e}var pe=class r{code;version;multihash;bytes;"/";constructor(e,t,n,o){this.code=t,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:e,multihash:t}=this;if(e!==Pn)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==Rm)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,n=tt(e,t);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return r.equals(this,e)}static equals(e,t){let n=t;return n!=null&&e.code===n.code&&e.version===n.version&&Wu(e.multihash,n.multihash)}toString(e){return ju(this,e)}toJSON(){return{"/":ju(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;let t=e;if(t instanceof r)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){let{version:n,code:o,multihash:s,bytes:i}=t;return new r(n,o,s,i??Xu(n,o,s.bytes))}else if(t[Dm]===!0){let{version:n,multihash:o,code:s}=t,i=rt(o);return r.create(n,s,i)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==Pn)throw new Error(`Version 0 CID must use dag-pb (code: ${Pn}) block encoding`);return new r(e,t,n,n.bytes)}case 1:{let o=Xu(e,t,n.bytes);return new r(e,t,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return r.create(0,Pn,e)}static createV1(e,t){return r.create(1,e,t)}static decode(e){let[t,n]=r.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=r.inspectBytes(e),n=t.size-t.multihashSize,o=Et(e.subarray(n,n+t.multihashSize));if(o.byteLength!==t.multihashSize)throw new Error("Incorrect length");let s=o.subarray(t.multihashSize-t.digestSize),i=new $r(t.multihashCode,t.digestSize,s,o);return[t.version===0?r.createV0(i):r.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){let t=0,n=()=>{let[l,d]=Nn(e.subarray(t));return t+=d,l},o=n(),s=Pn;if(o===18?(o=0,t=0):s=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);let i=t,a=n(),c=n(),u=t+c,f=u-i;return{version:o,codec:s,multihashCode:a,digestSize:c,multihashSize:f,size:u}}static parse(e,t){let[n,o]=Lm(e,t),s=r.decode(o);if(s.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return qa(s).set(n,e),s}};function Lm(r,e){switch(r[0]){case"Q":{let t=e??W;return[W.prefix,t.decode(`${W.prefix}${r}`)]}case W.prefix:{let t=e??W;return[W.prefix,t.decode(r)]}case ze.prefix:{let t=e??ze;return[ze.prefix,t.decode(r)]}case Tn.prefix:{let t=e??Tn;return[Tn.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}}function Nm(r,e,t){let{prefix:n}=t;if(n!==W.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let o=e.get(n);if(o==null){let s=t.encode(r).slice(1);return e.set(n,s),s}else return o}function Pm(r,e,t){let{prefix:n}=t,o=e.get(n);if(o==null){let s=t.encode(r);return e.set(n,s),s}else return o}var Pn=112,Rm=18;function Xu(r,e,t){let n=Hr(r),o=n+Hr(e),s=new Uint8Array(o+t.byteLength);return Vr(r,s,0),Vr(e,s,n),s.set(t,o),s}var Dm=Symbol.for("@ipld/js-cid/CID");var za={};Re(za,{identity:()=>St});var Yu=0,Mm="identity",Ju=Et;function Um(r){return tt(Yu,Ju(r))}var St={code:Yu,name:Mm,encode:Ju,digest:Um};function ie(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}function Qu(r){if(!Number.isSafeInteger(r)||r<0)throw new Error(`positive integer expected, not ${r}`)}function Om(r){return r instanceof Uint8Array||r!=null&&typeof r=="object"&&r.constructor.name==="Uint8Array"}function Kr(r,...e){if(!Om(r))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(r.length))throw new Error(`Uint8Array expected of length ${e}, not of length=${r.length}`)}function ef(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");Qu(r.outputLen),Qu(r.blockLen)}function qr(r,e=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(e&&r.finished)throw new Error("Hash#digest() has already been called")}function tf(r,e){Kr(r);let t=e.outputLen;if(r.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}var cr=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;var zo=r=>new DataView(r.buffer,r.byteOffset,r.byteLength),nt=(r,e)=>r<<32-e|r>>>e;var Ax=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function rf(r){if(typeof r!="string")throw new Error(`utf8ToBytes expected string, got ${typeof r}`);return new Uint8Array(new TextEncoder().encode(r))}function Rn(r){return typeof r=="string"&&(r=rf(r)),Kr(r),r}function Ga(...r){let e=0;for(let n=0;n<r.length;n++){let o=r[n];Kr(o),e+=o.length}let t=new Uint8Array(e);for(let n=0,o=0;n<r.length;n++){let s=r[n];t.set(s,o),o+=s.length}return t}var zr=class{clone(){return this._cloneInto()}},Sx={}.toString;function Go(r){let e=n=>r().update(Rn(n)).digest(),t=r();return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=()=>r(),e}function Gr(r=32){if(cr&&typeof cr.getRandomValues=="function")return cr.getRandomValues(new Uint8Array(r));if(cr&&typeof cr.randomBytes=="function")return cr.randomBytes(r);throw new Error("crypto.getRandomValues must be defined")}function Fm(r,e,t,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(e,t,n);let o=BigInt(32),s=BigInt(4294967295),i=Number(t>>o&s),a=Number(t&s),c=n?4:0,u=n?0:4;r.setUint32(e+c,i,n),r.setUint32(e+u,a,n)}var nf=(r,e,t)=>r&e^~r&t,of=(r,e,t)=>r&e^r&t^e&t,Wr=class extends zr{constructor(e,t,n,o){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=o,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=zo(this.buffer)}update(e){qr(this);let{view:t,buffer:n,blockLen:o}=this;e=Rn(e);let s=e.length;for(let i=0;i<s;){let a=Math.min(o-this.pos,s-i);if(a===o){let c=zo(e);for(;o<=s-i;i+=o)this.process(c,i);continue}n.set(e.subarray(i,i+a),this.pos),this.pos+=a,i+=a,this.pos===o&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){qr(this),tf(e,this),this.finished=!0;let{buffer:t,view:n,blockLen:o,isLE:s}=this,{pos:i}=this;t[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>o-i&&(this.process(n,0),i=0);for(let l=i;l<o;l++)t[l]=0;Fm(n,o-8,BigInt(this.length*8),s),this.process(n,0);let a=zo(e),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let u=c/4,f=this.get();if(u>f.length)throw new Error("_sha2: outputLen bigger than state");for(let l=0;l<u;l++)a.setUint32(4*l,f[l],s)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());let{blockLen:t,buffer:n,length:o,finished:s,destroyed:i,pos:a}=this;return e.length=o,e.pos=a,e.finished=s,e.destroyed=i,o%t&&e.buffer.set(n),e}};var Wo=BigInt(4294967295),Wa=BigInt(32);function sf(r,e=!1){return e?{h:Number(r&Wo),l:Number(r>>Wa&Wo)}:{h:Number(r>>Wa&Wo)|0,l:Number(r&Wo)|0}}function Vm(r,e=!1){let t=new Uint32Array(r.length),n=new Uint32Array(r.length);for(let o=0;o<r.length;o++){let{h:s,l:i}=sf(r[o],e);[t[o],n[o]]=[s,i]}return[t,n]}var Hm=(r,e)=>BigInt(r>>>0)<<Wa|BigInt(e>>>0),$m=(r,e,t)=>r>>>t,Km=(r,e,t)=>r<<32-t|e>>>t,qm=(r,e,t)=>r>>>t|e<<32-t,zm=(r,e,t)=>r<<32-t|e>>>t,Gm=(r,e,t)=>r<<64-t|e>>>t-32,Wm=(r,e,t)=>r>>>t-32|e<<64-t,jm=(r,e)=>e,Zm=(r,e)=>r,Xm=(r,e,t)=>r<<t|e>>>32-t,Ym=(r,e,t)=>e<<t|r>>>32-t,Jm=(r,e,t)=>e<<t-32|r>>>64-t,Qm=(r,e,t)=>r<<t-32|e>>>64-t;function eg(r,e,t,n){let o=(e>>>0)+(n>>>0);return{h:r+t+(o/2**32|0)|0,l:o|0}}var tg=(r,e,t)=>(r>>>0)+(e>>>0)+(t>>>0),rg=(r,e,t,n)=>e+t+n+(r/2**32|0)|0,ng=(r,e,t,n)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0),og=(r,e,t,n,o)=>e+t+n+o+(r/2**32|0)|0,sg=(r,e,t,n,o)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0)+(o>>>0),ig=(r,e,t,n,o,s)=>e+t+n+o+s+(r/2**32|0)|0;var ag={fromBig:sf,split:Vm,toBig:Hm,shrSH:$m,shrSL:Km,rotrSH:qm,rotrSL:zm,rotrBH:Gm,rotrBL:Wm,rotr32H:jm,rotr32L:Zm,rotlSH:Xm,rotlSL:Ym,rotlBH:Jm,rotlBL:Qm,add:eg,add3L:tg,add3H:rg,add4L:ng,add4H:og,add5H:ig,add5L:sg},O=ag;var[cg,lg]=O.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(r=>BigInt(r))),Kt=new Uint32Array(80),qt=new Uint32Array(80),ja=class extends Wr{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:e,Al:t,Bh:n,Bl:o,Ch:s,Cl:i,Dh:a,Dl:c,Eh:u,El:f,Fh:l,Fl:d,Gh:h,Gl:p,Hh:m,Hl:g}=this;return[e,t,n,o,s,i,a,c,u,f,l,d,h,p,m,g]}set(e,t,n,o,s,i,a,c,u,f,l,d,h,p,m,g){this.Ah=e|0,this.Al=t|0,this.Bh=n|0,this.Bl=o|0,this.Ch=s|0,this.Cl=i|0,this.Dh=a|0,this.Dl=c|0,this.Eh=u|0,this.El=f|0,this.Fh=l|0,this.Fl=d|0,this.Gh=h|0,this.Gl=p|0,this.Hh=m|0,this.Hl=g|0}process(e,t){for(let w=0;w<16;w++,t+=4)Kt[w]=e.getUint32(t),qt[w]=e.getUint32(t+=4);for(let w=16;w<80;w++){let x=Kt[w-15]|0,A=qt[w-15]|0,_=O.rotrSH(x,A,1)^O.rotrSH(x,A,8)^O.shrSH(x,A,7),v=O.rotrSL(x,A,1)^O.rotrSL(x,A,8)^O.shrSL(x,A,7),B=Kt[w-2]|0,T=qt[w-2]|0,te=O.rotrSH(B,T,19)^O.rotrBH(B,T,61)^O.shrSH(B,T,6),V=O.rotrSL(B,T,19)^O.rotrBL(B,T,61)^O.shrSL(B,T,6),F=O.add4L(v,V,qt[w-7],qt[w-16]),R=O.add4H(F,_,te,Kt[w-7],Kt[w-16]);Kt[w]=R|0,qt[w]=F|0}let{Ah:n,Al:o,Bh:s,Bl:i,Ch:a,Cl:c,Dh:u,Dl:f,Eh:l,El:d,Fh:h,Fl:p,Gh:m,Gl:g,Hh:y,Hl:b}=this;for(let w=0;w<80;w++){let x=O.rotrSH(l,d,14)^O.rotrSH(l,d,18)^O.rotrBH(l,d,41),A=O.rotrSL(l,d,14)^O.rotrSL(l,d,18)^O.rotrBL(l,d,41),_=l&h^~l&m,v=d&p^~d&g,B=O.add5L(b,A,v,lg[w],qt[w]),T=O.add5H(B,y,x,_,cg[w],Kt[w]),te=B|0,V=O.rotrSH(n,o,28)^O.rotrBH(n,o,34)^O.rotrBH(n,o,39),F=O.rotrSL(n,o,28)^O.rotrBL(n,o,34)^O.rotrBL(n,o,39),R=n&s^n&a^s&a,C=o&i^o&c^i&c;y=m|0,b=g|0,m=h|0,g=p|0,h=l|0,p=d|0,{h:l,l:d}=O.add(u|0,f|0,T|0,te|0),u=a|0,f=c|0,a=s|0,c=i|0,s=n|0,i=o|0;let L=O.add3L(te,F,C);n=O.add3H(L,T,V,R),o=L|0}({h:n,l:o}=O.add(this.Ah|0,this.Al|0,n|0,o|0)),{h:s,l:i}=O.add(this.Bh|0,this.Bl|0,s|0,i|0),{h:a,l:c}=O.add(this.Ch|0,this.Cl|0,a|0,c|0),{h:u,l:f}=O.add(this.Dh|0,this.Dl|0,u|0,f|0),{h:l,l:d}=O.add(this.Eh|0,this.El|0,l|0,d|0),{h,l:p}=O.add(this.Fh|0,this.Fl|0,h|0,p|0),{h:m,l:g}=O.add(this.Gh|0,this.Gl|0,m|0,g|0),{h:y,l:b}=O.add(this.Hh|0,this.Hl|0,y|0,b|0),this.set(n,o,s,i,a,c,u,f,l,d,h,p,m,g,y,b)}roundClean(){Kt.fill(0),qt.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};var af=Go(()=>new ja);var Zo={};Re(Zo,{aInRange:()=>$e,abool:()=>ot,abytes:()=>jr,bitGet:()=>mg,bitLen:()=>Qa,bitMask:()=>Mn,bitSet:()=>gg,bytesToHex:()=>Bt,bytesToNumberBE:()=>It,bytesToNumberLE:()=>Gt,concatBytes:()=>Ct,createHmacDrbg:()=>ec,ensureBytes:()=>ae,equalBytes:()=>dg,hexToBytes:()=>ur,hexToNumber:()=>Ja,inRange:()=>Dn,isBytes:()=>zt,memoized:()=>hr,notImplemented:()=>wg,numberToBytesBE:()=>Wt,numberToBytesLE:()=>fr,numberToHexUnpadded:()=>lr,numberToVarBytesBE:()=>hg,utf8ToBytes:()=>pg,validateObject:()=>ft});var Ya=BigInt(0),jo=BigInt(1),ug=BigInt(2);function zt(r){return r instanceof Uint8Array||r!=null&&typeof r=="object"&&r.constructor.name==="Uint8Array"}function jr(r){if(!zt(r))throw new Error("Uint8Array expected")}function ot(r,e){if(typeof e!="boolean")throw new Error(`${r} must be valid boolean, got "${e}".`)}var fg=Array.from({length:256},(r,e)=>e.toString(16).padStart(2,"0"));function Bt(r){jr(r);let e="";for(let t=0;t<r.length;t++)e+=fg[r[t]];return e}function lr(r){let e=r.toString(16);return e.length&1?`0${e}`:e}function Ja(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);return BigInt(r===""?"0":`0x${r}`)}var _t={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function cf(r){if(r>=_t._0&&r<=_t._9)return r-_t._0;if(r>=_t._A&&r<=_t._F)return r-(_t._A-10);if(r>=_t._a&&r<=_t._f)return r-(_t._a-10)}function ur(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);let e=r.length,t=e/2;if(e%2)throw new Error("padded hex string expected, got unpadded hex of length "+e);let n=new Uint8Array(t);for(let o=0,s=0;o<t;o++,s+=2){let i=cf(r.charCodeAt(s)),a=cf(r.charCodeAt(s+1));if(i===void 0||a===void 0){let c=r[s]+r[s+1];throw new Error('hex string expected, got non-hex character "'+c+'" at index '+s)}n[o]=i*16+a}return n}function It(r){return Ja(Bt(r))}function Gt(r){return jr(r),Ja(Bt(Uint8Array.from(r).reverse()))}function Wt(r,e){return ur(r.toString(16).padStart(e*2,"0"))}function fr(r,e){return Wt(r,e).reverse()}function hg(r){return ur(lr(r))}function ae(r,e,t){let n;if(typeof e=="string")try{n=ur(e)}catch(s){throw new Error(`${r} must be valid hex string, got "${e}". Cause: ${s}`)}else if(zt(e))n=Uint8Array.from(e);else throw new Error(`${r} must be hex string or Uint8Array`);let o=n.length;if(typeof t=="number"&&o!==t)throw new Error(`${r} expected ${t} bytes, got ${o}`);return n}function Ct(...r){let e=0;for(let n=0;n<r.length;n++){let o=r[n];jr(o),e+=o.length}let t=new Uint8Array(e);for(let n=0,o=0;n<r.length;n++){let s=r[n];t.set(s,o),o+=s.length}return t}function dg(r,e){if(r.length!==e.length)return!1;let t=0;for(let n=0;n<r.length;n++)t|=r[n]^e[n];return t===0}function pg(r){if(typeof r!="string")throw new Error(`utf8ToBytes expected string, got ${typeof r}`);return new Uint8Array(new TextEncoder().encode(r))}var Za=r=>typeof r=="bigint"&&Ya<=r;function Dn(r,e,t){return Za(r)&&Za(e)&&Za(t)&&e<=r&&r<t}function $e(r,e,t,n){if(!Dn(e,t,n))throw new Error(`expected valid ${r}: ${t} <= n < ${n}, got ${typeof e} ${e}`)}function Qa(r){let e;for(e=0;r>Ya;r>>=jo,e+=1);return e}function mg(r,e){return r>>BigInt(e)&jo}function gg(r,e,t){return r|(t?jo:Ya)<<BigInt(e)}var Mn=r=>(ug<<BigInt(r-1))-jo,Xa=r=>new Uint8Array(r),lf=r=>Uint8Array.from(r);function ec(r,e,t){if(typeof r!="number"||r<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof t!="function")throw new Error("hmacFn must be a function");let n=Xa(r),o=Xa(r),s=0,i=()=>{n.fill(1),o.fill(0),s=0},a=(...l)=>t(o,n,...l),c=(l=Xa())=>{o=a(lf([0]),l),n=a(),l.length!==0&&(o=a(lf([1]),l),n=a())},u=()=>{if(s++>=1e3)throw new Error("drbg: tried 1000 values");let l=0,d=[];for(;l<e;){n=a();let h=n.slice();d.push(h),l+=n.length}return Ct(...d)};return(l,d)=>{i(),c(l);let h;for(;!(h=d(u()));)c();return i(),h}}var yg={bigint:r=>typeof r=="bigint",function:r=>typeof r=="function",boolean:r=>typeof r=="boolean",string:r=>typeof r=="string",stringOrUint8Array:r=>typeof r=="string"||zt(r),isSafeInteger:r=>Number.isSafeInteger(r),array:r=>Array.isArray(r),field:(r,e)=>e.Fp.isValid(r),hash:r=>typeof r=="function"&&Number.isSafeInteger(r.outputLen)};function ft(r,e,t={}){let n=(o,s,i)=>{let a=yg[s];if(typeof a!="function")throw new Error(`Invalid validator "${s}", expected function`);let c=r[o];if(!(i&&c===void 0)&&!a(c,r))throw new Error(`Invalid param ${String(o)}=${c} (${typeof c}), expected ${s}`)};for(let[o,s]of Object.entries(e))n(o,s,!1);for(let[o,s]of Object.entries(t))n(o,s,!0);return r}var wg=()=>{throw new Error("not implemented")};function hr(r){let e=new WeakMap;return(t,...n)=>{let o=e.get(t);if(o!==void 0)return o;let s=r(t,...n);return e.set(t,s),s}}var me=BigInt(0),re=BigInt(1),dr=BigInt(2),bg=BigInt(3),tc=BigInt(4),uf=BigInt(5),ff=BigInt(8),xg=BigInt(9),vg=BigInt(16);function Y(r,e){let t=r%e;return t>=me?t:e+t}function Eg(r,e,t){if(t<=me||e<me)throw new Error("Expected power/modulo > 0");if(t===re)return me;let n=re;for(;e>me;)e&re&&(n=n*r%t),r=r*r%t,e>>=re;return n}function ne(r,e,t){let n=r;for(;e-- >me;)n*=n,n%=t;return n}function Xo(r,e){if(r===me||e<=me)throw new Error(`invert: expected positive integers, got n=${r} mod=${e}`);let t=Y(r,e),n=e,o=me,s=re,i=re,a=me;for(;t!==me;){let u=n/t,f=n%t,l=o-i*u,d=s-a*u;n=t,t=f,o=i,s=a,i=l,a=d}if(n!==re)throw new Error("invert: does not exist");return Y(o,e)}function Ag(r){let e=(r-re)/dr,t,n,o;for(t=r-re,n=0;t%dr===me;t/=dr,n++);for(o=dr;o<r&&Eg(o,e,r)!==r-re;o++);if(n===1){let i=(r+re)/tc;return function(c,u){let f=c.pow(u,i);if(!c.eql(c.sqr(f),u))throw new Error("Cannot find square root");return f}}let s=(t+re)/dr;return function(a,c){if(a.pow(c,e)===a.neg(a.ONE))throw new Error("Cannot find square root");let u=n,f=a.pow(a.mul(a.ONE,o),t),l=a.pow(c,s),d=a.pow(c,t);for(;!a.eql(d,a.ONE);){if(a.eql(d,a.ZERO))return a.ZERO;let h=1;for(let m=a.sqr(d);h<u&&!a.eql(m,a.ONE);h++)m=a.sqr(m);let p=a.pow(f,re<<BigInt(u-h-1));f=a.sqr(p),l=a.mul(l,p),d=a.mul(d,f),u=h}return l}}function Sg(r){if(r%tc===bg){let e=(r+re)/tc;return function(n,o){let s=n.pow(o,e);if(!n.eql(n.sqr(s),o))throw new Error("Cannot find square root");return s}}if(r%ff===uf){let e=(r-uf)/ff;return function(n,o){let s=n.mul(o,dr),i=n.pow(s,e),a=n.mul(o,i),c=n.mul(n.mul(a,dr),i),u=n.mul(a,n.sub(c,n.ONE));if(!n.eql(n.sqr(u),o))throw new Error("Cannot find square root");return u}}return r%vg,Ag(r)}var hf=(r,e)=>(Y(r,e)&re)===re,_g=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function rc(r){let e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},t=_g.reduce((n,o)=>(n[o]="function",n),e);return ft(r,t)}function Bg(r,e,t){if(t<me)throw new Error("Expected power > 0");if(t===me)return r.ONE;if(t===re)return e;let n=r.ONE,o=e;for(;t>me;)t&re&&(n=r.mul(n,o)),o=r.sqr(o),t>>=re;return n}function Ig(r,e){let t=new Array(e.length),n=e.reduce((s,i,a)=>r.is0(i)?s:(t[a]=s,r.mul(s,i)),r.ONE),o=r.inv(n);return e.reduceRight((s,i,a)=>r.is0(i)?s:(t[a]=r.mul(s,t[a]),r.mul(s,i)),o),t}function nc(r,e){let t=e!==void 0?e:r.toString(2).length,n=Math.ceil(t/8);return{nBitLength:t,nByteLength:n}}function jt(r,e,t=!1,n={}){if(r<=me)throw new Error(`Expected Field ORDER > 0, got ${r}`);let{nBitLength:o,nByteLength:s}=nc(r,e);if(s>2048)throw new Error("Field lengths over 2048 bytes are not supported");let i=Sg(r),a=Object.freeze({ORDER:r,BITS:o,BYTES:s,MASK:Mn(o),ZERO:me,ONE:re,create:c=>Y(c,r),isValid:c=>{if(typeof c!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof c}`);return me<=c&&c<r},is0:c=>c===me,isOdd:c=>(c&re)===re,neg:c=>Y(-c,r),eql:(c,u)=>c===u,sqr:c=>Y(c*c,r),add:(c,u)=>Y(c+u,r),sub:(c,u)=>Y(c-u,r),mul:(c,u)=>Y(c*u,r),pow:(c,u)=>Bg(a,c,u),div:(c,u)=>Y(c*Xo(u,r),r),sqrN:c=>c*c,addN:(c,u)=>c+u,subN:(c,u)=>c-u,mulN:(c,u)=>c*u,inv:c=>Xo(c,r),sqrt:n.sqrt||(c=>i(a,c)),invertBatch:c=>Ig(a,c),cmov:(c,u,f)=>f?u:c,toBytes:c=>t?fr(c,s):Wt(c,s),fromBytes:c=>{if(c.length!==s)throw new Error(`Fp.fromBytes: expected ${s}, got ${c.length}`);return t?Gt(c):It(c)}});return Object.freeze(a)}function df(r){if(typeof r!="bigint")throw new Error("field order must be bigint");let e=r.toString(2).length;return Math.ceil(e/8)}function oc(r){let e=df(r);return e+Math.ceil(e/2)}function pf(r,e,t=!1){let n=r.length,o=df(e),s=oc(e);if(n<16||n<s||n>1024)throw new Error(`expected ${s}-1024 bytes of input, got ${n}`);let i=t?It(r):Gt(r),a=Y(i,e-re)+re;return t?fr(a,o):Wt(a,o)}var kg=BigInt(0),sc=BigInt(1),ic=new WeakMap,mf=new WeakMap;function Yo(r,e){let t=(s,i)=>{let a=i.negate();return s?a:i},n=s=>{if(!Number.isSafeInteger(s)||s<=0||s>e)throw new Error(`Wrong window size=${s}, should be [1..${e}]`)},o=s=>{n(s);let i=Math.ceil(e/s)+1,a=2**(s-1);return{windows:i,windowSize:a}};return{constTimeNegate:t,unsafeLadder(s,i){let a=r.ZERO,c=s;for(;i>kg;)i&sc&&(a=a.add(c)),c=c.double(),i>>=sc;return a},precomputeWindow(s,i){let{windows:a,windowSize:c}=o(i),u=[],f=s,l=f;for(let d=0;d<a;d++){l=f,u.push(l);for(let h=1;h<c;h++)l=l.add(f),u.push(l);f=l.double()}return u},wNAF(s,i,a){let{windows:c,windowSize:u}=o(s),f=r.ZERO,l=r.BASE,d=BigInt(2**s-1),h=2**s,p=BigInt(s);for(let m=0;m<c;m++){let g=m*u,y=Number(a&d);a>>=p,y>u&&(y-=h,a+=sc);let b=g,w=g+Math.abs(y)-1,x=m%2!==0,A=y<0;y===0?l=l.add(t(x,i[b])):f=f.add(t(A,i[w]))}return{p:f,f:l}},wNAFCached(s,i,a){let c=mf.get(s)||1,u=ic.get(s);return u||(u=this.precomputeWindow(s,c),c!==1&&ic.set(s,a(u))),this.wNAF(c,u,i)},setWindowSize(s,i){n(i),mf.set(s,i),ic.delete(s)}}}function Jo(r,e,t,n){if(!Array.isArray(t)||!Array.isArray(n)||n.length!==t.length)throw new Error("arrays of points and scalars must have equal length");n.forEach((f,l)=>{if(!e.isValid(f))throw new Error(`wrong scalar at index ${l}`)}),t.forEach((f,l)=>{if(!(f instanceof r))throw new Error(`wrong point at index ${l}`)});let o=Qa(BigInt(t.length)),s=o>12?o-3:o>4?o-2:o?2:1,i=(1<<s)-1,a=new Array(i+1).fill(r.ZERO),c=Math.floor((e.BITS-1)/s)*s,u=r.ZERO;for(let f=c;f>=0;f-=s){a.fill(r.ZERO);for(let d=0;d<n.length;d++){let h=n[d],p=Number(h>>BigInt(f)&BigInt(i));a[p]=a[p].add(t[d])}let l=r.ZERO;for(let d=a.length-1,h=r.ZERO;d>0;d--)h=h.add(a[d]),l=l.add(h);if(u=u.add(l),f!==0)for(let d=0;d<s;d++)u=u.double()}return u}function Un(r){return rc(r.Fp),ft(r,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...nc(r.n,r.nBitLength),...r,p:r.Fp.ORDER})}var st=BigInt(0),Ke=BigInt(1),Qo=BigInt(2),Tg=BigInt(8),Lg={zip215:!0};function Ng(r){let e=Un(r);return ft(r,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function gf(r){let e=Ng(r),{Fp:t,n,prehash:o,hash:s,randomBytes:i,nByteLength:a,h:c}=e,u=Qo<<BigInt(a*8)-Ke,f=t.create,l=jt(e.n,e.nBitLength),d=e.uvRatio||((S,E)=>{try{return{isValid:!0,value:t.sqrt(S*t.inv(E))}}catch{return{isValid:!1,value:st}}}),h=e.adjustScalarBytes||(S=>S),p=e.domain||((S,E,I)=>{if(ot("phflag",I),E.length||I)throw new Error("Contexts/pre-hash are not supported");return S});function m(S,E){$e("coordinate "+S,E,st,u)}function g(S){if(!(S instanceof w))throw new Error("ExtendedPoint expected")}let y=hr((S,E)=>{let{ex:I,ey:N,ez:M}=S,U=S.is0();E==null&&(E=U?Tg:t.inv(M));let $=f(I*E),z=f(N*E),K=f(M*E);if(U)return{x:st,y:Ke};if(K!==Ke)throw new Error("invZ was invalid");return{x:$,y:z}}),b=hr(S=>{let{a:E,d:I}=e;if(S.is0())throw new Error("bad point: ZERO");let{ex:N,ey:M,ez:U,et:$}=S,z=f(N*N),K=f(M*M),X=f(U*U),Q=f(X*X),be=f(z*E),xe=f(X*f(be+K)),Ee=f(Q+f(I*f(z*K)));if(xe!==Ee)throw new Error("bad point: equation left != right (1)");let Pe=f(N*M),de=f(U*$);if(Pe!==de)throw new Error("bad point: equation left != right (2)");return!0});class w{constructor(E,I,N,M){this.ex=E,this.ey=I,this.ez=N,this.et=M,m("x",E),m("y",I),m("z",N),m("t",M),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(E){if(E instanceof w)throw new Error("extended point not allowed");let{x:I,y:N}=E||{};return m("x",I),m("y",N),new w(I,N,Ke,f(I*N))}static normalizeZ(E){let I=t.invertBatch(E.map(N=>N.ez));return E.map((N,M)=>N.toAffine(I[M])).map(w.fromAffine)}static msm(E,I){return Jo(w,l,E,I)}_setWindowSize(E){_.setWindowSize(this,E)}assertValidity(){b(this)}equals(E){g(E);let{ex:I,ey:N,ez:M}=this,{ex:U,ey:$,ez:z}=E,K=f(I*z),X=f(U*M),Q=f(N*z),be=f($*M);return K===X&&Q===be}is0(){return this.equals(w.ZERO)}negate(){return new w(f(-this.ex),this.ey,this.ez,f(-this.et))}double(){let{a:E}=e,{ex:I,ey:N,ez:M}=this,U=f(I*I),$=f(N*N),z=f(Qo*f(M*M)),K=f(E*U),X=I+N,Q=f(f(X*X)-U-$),be=K+$,xe=be-z,Ee=K-$,Pe=f(Q*xe),de=f(be*Ee),He=f(Q*Ee),bt=f(xe*be);return new w(Pe,de,bt,He)}add(E){g(E);let{a:I,d:N}=e,{ex:M,ey:U,ez:$,et:z}=this,{ex:K,ey:X,ez:Q,et:be}=E;if(I===BigInt(-1)){let Iu=f((U-M)*(X+K)),Cu=f((U+M)*(X-K)),Ta=f(Cu-Iu);if(Ta===st)return this.double();let ku=f($*Qo*be),Tu=f(z*Qo*Q),Lu=Tu+ku,Nu=Cu+Iu,Pu=Tu-ku,$p=f(Lu*Ta),Kp=f(Nu*Pu),qp=f(Lu*Pu),zp=f(Ta*Nu);return new w($p,Kp,zp,qp)}let xe=f(M*K),Ee=f(U*X),Pe=f(z*N*be),de=f($*Q),He=f((M+U)*(K+X)-xe-Ee),bt=de-Pe,_n=de+Pe,Bn=f(Ee-I*xe),Op=f(He*bt),Fp=f(_n*Bn),Vp=f(He*Bn),Hp=f(bt*_n);return new w(Op,Fp,Hp,Vp)}subtract(E){return this.add(E.negate())}wNAF(E){return _.wNAFCached(this,E,w.normalizeZ)}multiply(E){let I=E;$e("scalar",I,Ke,n);let{p:N,f:M}=this.wNAF(I);return w.normalizeZ([N,M])[0]}multiplyUnsafe(E){let I=E;return $e("scalar",I,st,n),I===st?A:this.equals(A)||I===Ke?this:this.equals(x)?this.wNAF(I).p:_.unsafeLadder(this,I)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}isTorsionFree(){return _.unsafeLadder(this,n).is0()}toAffine(E){return y(this,E)}clearCofactor(){let{h:E}=e;return E===Ke?this:this.multiplyUnsafe(E)}static fromHex(E,I=!1){let{d:N,a:M}=e,U=t.BYTES;E=ae("pointHex",E,U),ot("zip215",I);let $=E.slice(),z=E[U-1];$[U-1]=z&-129;let K=Gt($),X=I?u:t.ORDER;$e("pointHex.y",K,st,X);let Q=f(K*K),be=f(Q-Ke),xe=f(N*Q-M),{isValid:Ee,value:Pe}=d(be,xe);if(!Ee)throw new Error("Point.fromHex: invalid y coordinate");let de=(Pe&Ke)===Ke,He=(z&128)!==0;if(!I&&Pe===st&&He)throw new Error("Point.fromHex: x=0 and x_0=1");return He!==de&&(Pe=f(-Pe)),w.fromAffine({x:Pe,y:K})}static fromPrivateKey(E){return T(E).point}toRawBytes(){let{x:E,y:I}=this.toAffine(),N=fr(I,t.BYTES);return N[N.length-1]|=E&Ke?128:0,N}toHex(){return Bt(this.toRawBytes())}}w.BASE=new w(e.Gx,e.Gy,Ke,f(e.Gx*e.Gy)),w.ZERO=new w(st,Ke,Ke,st);let{BASE:x,ZERO:A}=w,_=Yo(w,a*8);function v(S){return Y(S,n)}function B(S){return v(Gt(S))}function T(S){let E=a;S=ae("private key",S,E);let I=ae("hashed private key",s(S),2*E),N=h(I.slice(0,E)),M=I.slice(E,2*E),U=B(N),$=x.multiply(U),z=$.toRawBytes();return{head:N,prefix:M,scalar:U,point:$,pointBytes:z}}function te(S){return T(S).pointBytes}function V(S=new Uint8Array,...E){let I=Ct(...E);return B(s(p(I,ae("context",S),!!o)))}function F(S,E,I={}){S=ae("message",S),o&&(S=o(S));let{prefix:N,scalar:M,pointBytes:U}=T(E),$=V(I.context,N,S),z=x.multiply($).toRawBytes(),K=V(I.context,z,U,S),X=v($+K*M);$e("signature.s",X,st,n);let Q=Ct(z,fr(X,t.BYTES));return ae("result",Q,a*2)}let R=Lg;function C(S,E,I,N=R){let{context:M,zip215:U}=N,$=t.BYTES;S=ae("signature",S,2*$),E=ae("message",E),U!==void 0&&ot("zip215",U),o&&(E=o(E));let z=Gt(S.slice($,2*$)),K,X,Q;try{K=w.fromHex(I,U),X=w.fromHex(S.slice(0,$),U),Q=x.multiplyUnsafe(z)}catch{return!1}if(!U&&K.isSmallOrder())return!1;let be=V(M,X.toRawBytes(),K.toRawBytes(),E);return X.add(K.multiplyUnsafe(be)).subtract(Q).clearCofactor().equals(w.ZERO)}return x._setWindowSize(8),{CURVE:e,getPublicKey:te,sign:F,verify:C,ExtendedPoint:w,utils:{getExtendedPublicKey:T,randomPrivateKey:()=>i(t.BYTES),precompute(S=8,E=w.BASE){return E._setWindowSize(S),E.multiply(BigInt(3)),E}}}}var ac=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),yf=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),Wx=BigInt(0),Pg=BigInt(1),wf=BigInt(2),jx=BigInt(3),Rg=BigInt(5),Dg=BigInt(8);function Mg(r){let e=BigInt(10),t=BigInt(20),n=BigInt(40),o=BigInt(80),s=ac,a=r*r%s*r%s,c=ne(a,wf,s)*a%s,u=ne(c,Pg,s)*r%s,f=ne(u,Rg,s)*u%s,l=ne(f,e,s)*f%s,d=ne(l,t,s)*l%s,h=ne(d,n,s)*d%s,p=ne(h,o,s)*h%s,m=ne(p,o,s)*h%s,g=ne(m,e,s)*f%s;return{pow_p_5_8:ne(g,wf,s)*r%s,b2:a}}function Ug(r){return r[0]&=248,r[31]&=127,r[31]|=64,r}function Og(r,e){let t=ac,n=Y(e*e*e,t),o=Y(n*n*e,t),s=Mg(r*o).pow_p_5_8,i=Y(r*n*s,t),a=Y(e*i*i,t),c=i,u=Y(i*yf,t),f=a===r,l=a===Y(-r,t),d=a===Y(-r*yf,t);return f&&(i=c),(l||d)&&(i=u),hf(i,t)&&(i=Y(-i,t)),{isValid:f||l,value:i}}var Fg=jt(ac,void 0,!0),Vg={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:Fg,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:Dg,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:af,randomBytes:Gr,adjustScalarBytes:Ug,uvRatio:Og},On=gf(Vg);var es=32,ts=64,cc=32;function bf(){let r=On.utils.randomPrivateKey(),e=On.getPublicKey(r);return{privateKey:Hg(r,e),publicKey:e}}function xf(r,e){let t=r.subarray(0,cc);return On.sign(e instanceof Uint8Array?e:e.subarray(),t)}function vf(r,e,t){return On.verify(e,t instanceof Uint8Array?t:t.subarray(),r)}function Hg(r,e){let t=new Uint8Array(ts);for(let n=0;n<cc;n++)t[n]=r[n],t[cc+n]=e[n];return t}var Fn=class{type="Ed25519";raw;constructor(e){this.raw=ns(e,es)}toMultihash(){return St.digest(ht(this))}toCID(){return pe.createV1(114,this.toMultihash())}toString(){return W.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}verify(e,t){return vf(this.raw,t,e)}},rs=class{type="Ed25519";raw;publicKey;constructor(e,t){this.raw=ns(e,ts),this.publicKey=new Fn(t)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}sign(e){return xf(this.raw,e)}};function lc(r){return r=ns(r,es),new Fn(r)}async function Af(){let{privateKey:r,publicKey:e}=bf();return new rs(r,e)}function ns(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new D(`Key must be a Uint8Array of length ${e}, got ${r.length}`);return r}function ce(r=0){return new Uint8Array(r)}function Ie(r=0){return new Uint8Array(r)}var $g=Math.pow(2,7),Kg=Math.pow(2,14),qg=Math.pow(2,21),uc=Math.pow(2,28),fc=Math.pow(2,35),hc=Math.pow(2,42),dc=Math.pow(2,49),j=128,Ce=127;function he(r){if(r<$g)return 1;if(r<Kg)return 2;if(r<qg)return 3;if(r<uc)return 4;if(r<fc)return 5;if(r<hc)return 6;if(r<dc)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function pc(r,e,t=0){switch(he(r)){case 8:e[t++]=r&255|j,r/=128;case 7:e[t++]=r&255|j,r/=128;case 6:e[t++]=r&255|j,r/=128;case 5:e[t++]=r&255|j,r/=128;case 4:e[t++]=r&255|j,r>>>=7;case 3:e[t++]=r&255|j,r>>>=7;case 2:e[t++]=r&255|j,r>>>=7;case 1:{e[t++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return e}function zg(r,e,t=0){switch(he(r)){case 8:e.set(t++,r&255|j),r/=128;case 7:e.set(t++,r&255|j),r/=128;case 6:e.set(t++,r&255|j),r/=128;case 5:e.set(t++,r&255|j),r/=128;case 4:e.set(t++,r&255|j),r>>>=7;case 3:e.set(t++,r&255|j),r>>>=7;case 2:e.set(t++,r&255|j),r>>>=7;case 1:{e.set(t++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return e}function mc(r,e){let t=r[e],n=0;if(n+=t&Ce,t<j||(t=r[e+1],n+=(t&Ce)<<7,t<j)||(t=r[e+2],n+=(t&Ce)<<14,t<j)||(t=r[e+3],n+=(t&Ce)<<21,t<j)||(t=r[e+4],n+=(t&Ce)*uc,t<j)||(t=r[e+5],n+=(t&Ce)*fc,t<j)||(t=r[e+6],n+=(t&Ce)*hc,t<j)||(t=r[e+7],n+=(t&Ce)*dc,t<j))return n;throw new RangeError("Could not decode varint")}function Gg(r,e){let t=r.get(e),n=0;if(n+=t&Ce,t<j||(t=r.get(e+1),n+=(t&Ce)<<7,t<j)||(t=r.get(e+2),n+=(t&Ce)<<14,t<j)||(t=r.get(e+3),n+=(t&Ce)<<21,t<j)||(t=r.get(e+4),n+=(t&Ce)*uc,t<j)||(t=r.get(e+5),n+=(t&Ce)*fc,t<j)||(t=r.get(e+6),n+=(t&Ce)*hc,t<j)||(t=r.get(e+7),n+=(t&Ce)*dc,t<j))return n;throw new RangeError("Could not decode varint")}function ke(r,e,t=0){return e==null&&(e=Ie(he(r))),e instanceof Uint8Array?pc(r,e,t):zg(r,e,t)}function it(r,e=0){return r instanceof Uint8Array?mc(r,e):Gg(r,e)}var gc=new Float32Array([-0]),Zt=new Uint8Array(gc.buffer);function Sf(r,e,t){gc[0]=r,e[t]=Zt[0],e[t+1]=Zt[1],e[t+2]=Zt[2],e[t+3]=Zt[3]}function _f(r,e){return Zt[0]=r[e],Zt[1]=r[e+1],Zt[2]=r[e+2],Zt[3]=r[e+3],gc[0]}var yc=new Float64Array([-0]),Te=new Uint8Array(yc.buffer);function Bf(r,e,t){yc[0]=r,e[t]=Te[0],e[t+1]=Te[1],e[t+2]=Te[2],e[t+3]=Te[3],e[t+4]=Te[4],e[t+5]=Te[5],e[t+6]=Te[6],e[t+7]=Te[7]}function If(r,e){return Te[0]=r[e],Te[1]=r[e+1],Te[2]=r[e+2],Te[3]=r[e+3],Te[4]=r[e+4],Te[5]=r[e+5],Te[6]=r[e+6],Te[7]=r[e+7],yc[0]}var Wg=BigInt(Number.MAX_SAFE_INTEGER),jg=BigInt(Number.MIN_SAFE_INTEGER),Ge=class r{lo;hi;constructor(e,t){this.lo=e|0,this.hi=t|0}toNumber(e=!1){if(!e&&this.hi>>>31>0){let t=~this.lo+1>>>0,n=~this.hi>>>0;return t===0&&(n=n+1>>>0),-(t+n*4294967296)}return this.lo+this.hi*4294967296}toBigInt(e=!1){if(e)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let t=~this.lo+1>>>0,n=~this.hi>>>0;return t===0&&(n=n+1>>>0),-(BigInt(t)+(BigInt(n)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(e=!1){return this.toBigInt(e).toString()}zzEncode(){let e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this}zzDecode(){let e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this}length(){let e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return n===0?t===0?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:n<128?9:10}static fromBigInt(e){if(e===0n)return mr;if(e<Wg&&e>jg)return this.fromNumber(Number(e));let t=e<0n;t&&(e=-e);let n=e>>32n,o=e-(n<<32n);return t&&(n=~n|0n,o=~o|0n,++o>Cf&&(o=0n,++n>Cf&&(n=0n))),new r(Number(o),Number(n))}static fromNumber(e){if(e===0)return mr;let t=e<0;t&&(e=-e);let n=e>>>0,o=(e-n)/4294967296>>>0;return t&&(o=~o>>>0,n=~n>>>0,++n>4294967295&&(n=0,++o>4294967295&&(o=0))),new r(n,o)}static from(e){return typeof e=="number"?r.fromNumber(e):typeof e=="bigint"?r.fromBigInt(e):typeof e=="string"?r.fromBigInt(BigInt(e)):e.low!=null||e.high!=null?new r(e.low>>>0,e.high>>>0):mr}},mr=new Ge(0,0);mr.toBigInt=function(){return 0n};mr.zzEncode=mr.zzDecode=function(){return this};mr.length=function(){return 1};var Cf=4294967296n;function kf(r){let e=0,t=0;for(let n=0;n<r.length;++n)t=r.charCodeAt(n),t<128?e+=1:t<2048?e+=2:(t&64512)===55296&&(r.charCodeAt(n+1)&64512)===56320?(++n,e+=4):e+=3;return e}function Tf(r,e,t){if(t-e<1)return"";let o,s=[],i=0,a;for(;e<t;)a=r[e++],a<128?s[i++]=a:a>191&&a<224?s[i++]=(a&31)<<6|r[e++]&63:a>239&&a<365?(a=((a&7)<<18|(r[e++]&63)<<12|(r[e++]&63)<<6|r[e++]&63)-65536,s[i++]=55296+(a>>10),s[i++]=56320+(a&1023)):s[i++]=(a&15)<<12|(r[e++]&63)<<6|r[e++]&63,i>8191&&((o??(o=[])).push(String.fromCharCode.apply(String,s)),i=0);return o!=null?(i>0&&o.push(String.fromCharCode.apply(String,s.slice(0,i))),o.join("")):String.fromCharCode.apply(String,s.slice(0,i))}function wc(r,e,t){let n=t,o,s;for(let i=0;i<r.length;++i)o=r.charCodeAt(i),o<128?e[t++]=o:o<2048?(e[t++]=o>>6|192,e[t++]=o&63|128):(o&64512)===55296&&((s=r.charCodeAt(i+1))&64512)===56320?(o=65536+((o&1023)<<10)+(s&1023),++i,e[t++]=o>>18|240,e[t++]=o>>12&63|128,e[t++]=o>>6&63|128,e[t++]=o&63|128):(e[t++]=o>>12|224,e[t++]=o>>6&63|128,e[t++]=o&63|128);return t-n}function at(r,e){return RangeError(`index out of range: ${r.pos} + ${e??1} > ${r.len}`)}function os(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}var bc=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(e){this.buf=e,this.pos=0,this.len=e.length}uint32(){let e=4294967295;if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,at(this,10);return e}int32(){return this.uint32()|0}sint32(){let e=this.uint32();return e>>>1^-(e&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw at(this,4);return os(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw at(this,4);return os(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw at(this,4);let e=_f(this.buf,this.pos);return this.pos+=4,e}double(){if(this.pos+8>this.len)throw at(this,4);let e=If(this.buf,this.pos);return this.pos+=8,e}bytes(){let e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw at(this,e);return this.pos+=e,t===n?new Uint8Array(0):this.buf.subarray(t,n)}string(){let e=this.bytes();return Tf(e,0,e.length)}skip(e){if(typeof e=="number"){if(this.pos+e>this.len)throw at(this,e);this.pos+=e}else do if(this.pos>=this.len)throw at(this);while(this.buf[this.pos++]&128);return this}skipType(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(e=this.uint32()&7)!==4;)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${e} at offset ${this.pos}`)}return this}readLongVarint(){let e=new Ge(0,0),t=0;if(this.len-this.pos>4){for(;t<4;++t)if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(this.buf[this.pos]&127)<<28)>>>0,e.hi=(e.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return e;t=0}else{for(;t<3;++t){if(this.pos>=this.len)throw at(this);if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(this.buf[this.pos++]&127)<<t*7)>>>0,e}if(this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw at(this);if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw at(this,8);let e=os(this.buf,this.pos+=4),t=os(this.buf,this.pos+=4);return new Ge(e,t)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let e=mc(this.buf,this.pos);return this.pos+=he(e),e}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function xc(r){return new bc(r instanceof Uint8Array?r:r.subarray())}function De(r,e,t){let n=xc(r);return e.decode(n,void 0,t)}var vc={};Re(vc,{base10:()=>Zg});var Zg=$t({prefix:"9",name:"base10",alphabet:"0123456789"});var Ec={};Re(Ec,{base16:()=>Xg,base16upper:()=>Yg});var Xg=se({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Yg=se({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Ac={};Re(Ac,{base2:()=>Jg});var Jg=se({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Sc={};Re(Sc,{base256emoji:()=>n0});var Nf=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),Qg=Nf.reduce((r,e,t)=>(r[t]=e,r),[]),e0=Nf.reduce((r,e,t)=>{let n=e.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${e}`);return r[n]=t,r},[]);function t0(r){return r.reduce((e,t)=>(e+=Qg[t],e),"")}function r0(r){let e=[];for(let t of r){let n=t.codePointAt(0);if(n==null)throw new Error(`Invalid character: ${t}`);let o=e0[n];if(o==null)throw new Error(`Non-base256emoji character: ${t}`);e.push(o)}return new Uint8Array(e)}var n0=Fr({prefix:"\u{1F680}",name:"base256emoji",encode:t0,decode:r0});var Ic={};Re(Ic,{base64:()=>_c,base64pad:()=>o0,base64url:()=>Bc,base64urlpad:()=>s0});var _c=se({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),o0=se({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Bc=se({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),s0=se({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var Cc={};Re(Cc,{base8:()=>i0});var i0=se({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var kc={};Re(kc,{identity:()=>a0});var a0=Fr({prefix:"\0",name:"identity",encode:r=>Vu(r),decode:r=>Fu(r)});var I1=new TextEncoder,C1=new TextDecoder;var Nc={};Re(Nc,{sha256:()=>Zr,sha512:()=>u0});function Lc({name:r,code:e,encode:t}){return new Tc(r,e,t)}var Tc=class{name;code;encode;constructor(e,t,n){this.name=e,this.code=t,this.encode=n}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?tt(this.code,t):t.then(n=>tt(this.code,n))}else throw Error("Unknown type, must be binary type")}};function Rf(r){return async e=>new Uint8Array(await crypto.subtle.digest(r,e))}var Zr=Lc({name:"sha2-256",code:18,encode:Rf("SHA-256")}),u0=Lc({name:"sha2-512",code:19,encode:Rf("SHA-512")});var Vn={...kc,...Ac,...Cc,...vc,...Ec,...Ha,...$a,...Va,...Ic,...Sc},V1={...Nc,...za};function Mf(r,e,t,n){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:n}}}var Df=Mf("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),Pc=Mf("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);let e=Ie(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),f0={utf8:Df,"utf-8":Df,hex:Vn.base16,latin1:Pc,ascii:Pc,binary:Pc,...Vn},ss=f0;function P(r,e="utf8"){let t=ss[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.decoder.decode(`${t.prefix}${r}`)}function Rc(r){let e=r??8192,t=e>>>1,n,o=e;return function(i){if(i<1||i>t)return Ie(i);o+i>e&&(n=Ie(e),o=0);let a=n.subarray(o,o+=i);return o&7&&(o=(o|7)+1),a}}var gr=class{fn;len;next;val;constructor(e,t,n){this.fn=e,this.len=t,this.next=void 0,this.val=n}};function Dc(){}var Uc=class{head;tail;len;next;constructor(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}},h0=Rc();function d0(r){return globalThis.Buffer!=null?Ie(r):h0(r)}var $n=class{len;head;tail;states;constructor(){this.len=0,this.head=new gr(Dc,0,0),this.tail=this.head,this.states=null}_push(e,t,n){return this.tail=this.tail.next=new gr(e,t,n),this.len+=t,this}uint32(e){return this.len+=(this.tail=this.tail.next=new Oc((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this}int32(e){return e<0?this._push(is,10,Ge.fromNumber(e)):this.uint32(e)}sint32(e){return this.uint32((e<<1^e>>31)>>>0)}uint64(e){let t=Ge.fromBigInt(e);return this._push(is,t.length(),t)}uint64Number(e){return this._push(pc,he(e),e)}uint64String(e){return this.uint64(BigInt(e))}int64(e){return this.uint64(e)}int64Number(e){return this.uint64Number(e)}int64String(e){return this.uint64String(e)}sint64(e){let t=Ge.fromBigInt(e).zzEncode();return this._push(is,t.length(),t)}sint64Number(e){let t=Ge.fromNumber(e).zzEncode();return this._push(is,t.length(),t)}sint64String(e){return this.sint64(BigInt(e))}bool(e){return this._push(Mc,1,e?1:0)}fixed32(e){return this._push(Hn,4,e>>>0)}sfixed32(e){return this.fixed32(e)}fixed64(e){let t=Ge.fromBigInt(e);return this._push(Hn,4,t.lo)._push(Hn,4,t.hi)}fixed64Number(e){let t=Ge.fromNumber(e);return this._push(Hn,4,t.lo)._push(Hn,4,t.hi)}fixed64String(e){return this.fixed64(BigInt(e))}sfixed64(e){return this.fixed64(e)}sfixed64Number(e){return this.fixed64Number(e)}sfixed64String(e){return this.fixed64String(e)}float(e){return this._push(Sf,4,e)}double(e){return this._push(Bf,8,e)}bytes(e){let t=e.length>>>0;return t===0?this._push(Mc,1,0):this.uint32(t)._push(m0,t,e)}string(e){let t=kf(e);return t!==0?this.uint32(t)._push(wc,t,e):this._push(Mc,1,0)}fork(){return this.states=new Uc(this),this.head=this.tail=new gr(Dc,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new gr(Dc,0,0),this.len=0),this}ldelim(){let e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n!==0&&(this.tail.next=e.next,this.tail=t,this.len+=n),this}finish(){let e=this.head.next,t=d0(this.len),n=0;for(;e!=null;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t}};function Mc(r,e,t){e[t]=r&255}function p0(r,e,t){for(;r>127;)e[t++]=r&127|128,r>>>=7;e[t]=r}var Oc=class extends gr{next;constructor(e,t){super(p0,e,t),this.next=void 0}};function is(r,e,t){for(;r.hi!==0;)e[t++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[t++]=r.lo&127|128,r.lo=r.lo>>>7;e[t++]=r.lo}function Hn(r,e,t){e[t]=r&255,e[t+1]=r>>>8&255,e[t+2]=r>>>16&255,e[t+3]=r>>>24}function m0(r,e,t){e.set(r,t)}globalThis.Buffer!=null&&($n.prototype.bytes=function(r){let e=r.length>>>0;return this.uint32(e),e>0&&this._push(g0,e,r),this},$n.prototype.string=function(r){let e=globalThis.Buffer.byteLength(r);return this.uint32(e),e>0&&this._push(y0,e,r),this});function g0(r,e,t){e.set(r,t)}function y0(r,e,t){r.length<40?wc(r,e,t):e.utf8Write!=null?e.utf8Write(r,t):e.set(P(r),t)}function Fc(){return new $n}function Me(r,e){let t=Fc();return e.encode(r,t,{lengthDelimited:!1}),t.finish()}var Xr;(function(r){r[r.VARINT=0]="VARINT",r[r.BIT64=1]="BIT64",r[r.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",r[r.START_GROUP=3]="START_GROUP",r[r.END_GROUP=4]="END_GROUP",r[r.BIT32=5]="BIT32"})(Xr||(Xr={}));function as(r,e,t,n){return{name:r,type:e,encode:t,decode:n}}function Vc(r){function e(o){if(r[o.toString()]==null)throw new Error("Invalid enum value");return r[o]}let t=function(s,i){let a=e(s);i.int32(a)},n=function(s){let i=s.int32();return e(i)};return as("enum",Xr.VARINT,t,n)}function Ue(r,e){return as("message",Xr.LENGTH_DELIMITED,r,e)}var yr=class extends Error{code="ERR_MAX_LENGTH";name="MaxLengthError"},Kn=class extends Error{code="ERR_MAX_SIZE";name="MaxSizeError"};var ge;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.secp256k1="secp256k1"})(ge||(ge={}));var Hc;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.secp256k1=2]="secp256k1"})(Hc||(Hc={}));(function(r){r.codec=()=>Vc(Hc)})(ge||(ge={}));var dt;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),ge.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.Type=ge.codec().decode(t);break}case 2:{s.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})(dt||(dt={}));var $c;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),ge.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.Type=ge.codec().decode(t);break}case 2:{s.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})($c||($c={}));var eo={};Re(eo,{MAX_RSA_KEY_SIZE:()=>Js,generateRSAKeyPair:()=>Qc,jwkToJWKKeyPair:()=>Ph,jwkToPkcs1:()=>P0,jwkToPkix:()=>Yc,jwkToRSAPrivateKey:()=>Nh,pkcs1ToJwk:()=>kh,pkcs1ToRSAPrivateKey:()=>Lh,pkixToJwk:()=>Th,pkixToRSAPublicKey:()=>Jc});var w0=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Xt=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Yt=new Uint32Array(64),Kc=class extends Wr{constructor(){super(64,32,8,!1),this.A=Xt[0]|0,this.B=Xt[1]|0,this.C=Xt[2]|0,this.D=Xt[3]|0,this.E=Xt[4]|0,this.F=Xt[5]|0,this.G=Xt[6]|0,this.H=Xt[7]|0}get(){let{A:e,B:t,C:n,D:o,E:s,F:i,G:a,H:c}=this;return[e,t,n,o,s,i,a,c]}set(e,t,n,o,s,i,a,c){this.A=e|0,this.B=t|0,this.C=n|0,this.D=o|0,this.E=s|0,this.F=i|0,this.G=a|0,this.H=c|0}process(e,t){for(let l=0;l<16;l++,t+=4)Yt[l]=e.getUint32(t,!1);for(let l=16;l<64;l++){let d=Yt[l-15],h=Yt[l-2],p=nt(d,7)^nt(d,18)^d>>>3,m=nt(h,17)^nt(h,19)^h>>>10;Yt[l]=m+Yt[l-7]+p+Yt[l-16]|0}let{A:n,B:o,C:s,D:i,E:a,F:c,G:u,H:f}=this;for(let l=0;l<64;l++){let d=nt(a,6)^nt(a,11)^nt(a,25),h=f+d+nf(a,c,u)+w0[l]+Yt[l]|0,m=(nt(n,2)^nt(n,13)^nt(n,22))+of(n,o,s)|0;f=u,u=c,c=a,a=i+h|0,i=s,s=o,o=n,n=h+m|0}n=n+this.A|0,o=o+this.B|0,s=s+this.C|0,i=i+this.D|0,a=a+this.E|0,c=c+this.F|0,u=u+this.G|0,f=f+this.H|0,this.set(n,o,s,i,a,c,u,f)}roundClean(){Yt.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};var Yr=Go(()=>new Kc);var q=ar(Of());function wr(r,e){let t=0;if(r.length===1)return r[0];for(let n=r.length-1;n>=0;n--)t+=r[r.length-1-n]*Math.pow(2,e*n);return t}function Jt(r,e,t=-1){let n=t,o=r,s=0,i=Math.pow(2,e);for(let a=1;a<8;a++){if(r<i){let c;if(n<0)c=new ArrayBuffer(a),s=a;else{if(n<a)return new ArrayBuffer(0);c=new ArrayBuffer(n),s=n}let u=new Uint8Array(c);for(let f=a-1;f>=0;f--){let l=Math.pow(2,f*e);u[s-f-1]=Math.floor(o/l),o-=u[s-f-1]*l}return c}i*=Math.pow(2,e)}return new ArrayBuffer(0)}function us(...r){let e=0,t=0;for(let s of r)e+=s.length;let n=new ArrayBuffer(e),o=new Uint8Array(n);for(let s of r)o.set(s,t),t+=s.length;return o}function zc(){let r=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){let a=r[0]===255&&r[1]&128,c=r[0]===0&&(r[1]&128)===0;(a||c)&&this.warnings.push("Needlessly long format")}let e=new ArrayBuffer(this.valueHex.byteLength),t=new Uint8Array(e);for(let a=0;a<this.valueHex.byteLength;a++)t[a]=0;t[0]=r[0]&128;let n=wr(t,8),o=new ArrayBuffer(this.valueHex.byteLength),s=new Uint8Array(o);for(let a=0;a<this.valueHex.byteLength;a++)s[a]=r[a];return s[0]&=127,wr(s,8)-n}function Ff(r){let e=r<0?r*-1:r,t=128;for(let n=1;n<8;n++){if(e<=t){if(r<0){let i=t-e,a=Jt(i,8,n),c=new Uint8Array(a);return c[0]|=128,a}let o=Jt(e,8,n),s=new Uint8Array(o);if(s[0]&128){let i=o.slice(0),a=new Uint8Array(i);o=new ArrayBuffer(o.byteLength+1),s=new Uint8Array(o);for(let c=0;c<i.byteLength;c++)s[c+1]=a[c];s[0]=0}return o}t*=Math.pow(2,8)}return new ArrayBuffer(0)}function Vf(r,e){if(r.byteLength!==e.byteLength)return!1;let t=new Uint8Array(r),n=new Uint8Array(e);for(let o=0;o<t.length;o++)if(t[o]!==n[o])return!1;return!0}function qe(r,e){let t=r.toString(10);if(e<t.length)return"";let n=e-t.length,o=new Array(n);for(let i=0;i<n;i++)o[i]="0";return o.join("").concat(t)}var vv=Math.log(2);function fs(){if(typeof BigInt>"u")throw new Error("BigInt is not defined. Your environment doesn't implement BigInt.")}function Gc(r){let e=0,t=0;for(let o=0;o<r.length;o++){let s=r[o];e+=s.byteLength}let n=new Uint8Array(e);for(let o=0;o<r.length;o++){let s=r[o];n.set(new Uint8Array(s),t),t+=s.byteLength}return n.buffer}function Pt(r,e,t,n){return e instanceof Uint8Array?e.byteLength?t<0?(r.error="Wrong parameter: inputOffset less than zero",!1):n<0?(r.error="Wrong parameter: inputLength less than zero",!1):e.byteLength-t-n<0?(r.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1):!0:(r.error="Wrong parameter: inputBuffer has zero length",!1):(r.error="Wrong parameter: inputBuffer must be 'Uint8Array'",!1)}var zn=class{constructor(){this.items=[]}write(e){this.items.push(e)}final(){return Gc(this.items)}},qn=[new Uint8Array([1])],Hf="0123456789";var rn="",ct=new ArrayBuffer(0),Wc=new Uint8Array(0),Gn="EndOfContent",Kf="OCTET STRING",qf="BIT STRING";function Rt(r){var e;return e=class extends r{constructor(...n){var o;super(...n);let s=n[0]||{};this.isHexOnly=(o=s.isHexOnly)!==null&&o!==void 0?o:!1,this.valueHexView=s.valueHex?q.BufferSourceConverter.toUint8Array(s.valueHex):Wc}get valueHex(){return this.valueHexView.slice().buffer}set valueHex(n){this.valueHexView=new Uint8Array(n)}fromBER(n,o,s){let i=n instanceof ArrayBuffer?new Uint8Array(n):n;if(!Pt(this,i,o,s))return-1;let a=o+s;return this.valueHexView=i.subarray(o,a),this.valueHexView.length?(this.blockLength=s,a):(this.warnings.push("Zero buffer length"),o)}toBER(n=!1){return this.isHexOnly?n?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.byteLength===this.valueHexView.buffer.byteLength?this.valueHexView.buffer:this.valueHexView.slice().buffer:(this.error="Flag 'isHexOnly' is not set, abort",ct)}toJSON(){return{...super.toJSON(),isHexOnly:this.isHexOnly,valueHex:q.Convert.ToHex(this.valueHexView)}}},e.NAME="hexBlock",e}var Tt=class{constructor({blockLength:e=0,error:t=rn,warnings:n=[],valueBeforeDecode:o=Wc}={}){this.blockLength=e,this.error=t,this.warnings=n,this.valueBeforeDecodeView=q.BufferSourceConverter.toUint8Array(o)}static blockName(){return this.NAME}get valueBeforeDecode(){return this.valueBeforeDecodeView.slice().buffer}set valueBeforeDecode(e){this.valueBeforeDecodeView=new Uint8Array(e)}toJSON(){return{blockName:this.constructor.NAME,blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:q.Convert.ToHex(this.valueBeforeDecodeView)}}};Tt.NAME="baseBlock";var Le=class extends Tt{fromBER(e,t,n){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}toBER(e,t){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}};Le.NAME="valueBlock";var hs=class extends Rt(Tt){constructor({idBlock:e={}}={}){var t,n,o,s;super(),e?(this.isHexOnly=(t=e.isHexOnly)!==null&&t!==void 0?t:!1,this.valueHexView=e.valueHex?q.BufferSourceConverter.toUint8Array(e.valueHex):Wc,this.tagClass=(n=e.tagClass)!==null&&n!==void 0?n:-1,this.tagNumber=(o=e.tagNumber)!==null&&o!==void 0?o:-1,this.isConstructed=(s=e.isConstructed)!==null&&s!==void 0?s:!1):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}toBER(e=!1){let t=0;switch(this.tagClass){case 1:t|=0;break;case 2:t|=64;break;case 3:t|=128;break;case 4:t|=192;break;default:return this.error="Unknown tag class",ct}if(this.isConstructed&&(t|=32),this.tagNumber<31&&!this.isHexOnly){let o=new Uint8Array(1);if(!e){let s=this.tagNumber;s&=31,t|=s,o[0]=t}return o.buffer}if(!this.isHexOnly){let o=Jt(this.tagNumber,7),s=new Uint8Array(o),i=o.byteLength,a=new Uint8Array(i+1);if(a[0]=t|31,!e){for(let c=0;c<i-1;c++)a[c+1]=s[c]|128;a[i]=s[i-1]}return a.buffer}let n=new Uint8Array(this.valueHexView.byteLength+1);if(n[0]=t|31,!e){let o=this.valueHexView;for(let s=0;s<o.length-1;s++)n[s+1]=o[s]|128;n[this.valueHexView.byteLength]=o[o.length-1]}return n.buffer}fromBER(e,t,n){let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let s=o.subarray(t,t+n);if(s.length===0)return this.error="Zero buffer length",-1;switch(s[0]&192){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=(s[0]&32)===32,this.isHexOnly=!1;let a=s[0]&31;if(a!==31)this.tagNumber=a,this.blockLength=1;else{let c=1,u=this.valueHexView=new Uint8Array(255),f=255;for(;s[c]&128;){if(u[c-1]=s[c]&127,c++,c>=s.length)return this.error="End of input reached before message was fully decoded",-1;if(c===f){f+=255;let d=new Uint8Array(f);for(let h=0;h<u.length;h++)d[h]=u[h];u=this.valueHexView=new Uint8Array(f)}}this.blockLength=c+1,u[c-1]=s[c]&127;let l=new Uint8Array(c);for(let d=0;d<c;d++)l[d]=u[d];u=this.valueHexView=new Uint8Array(c),u.set(l),this.blockLength<=9?this.tagNumber=wr(u,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(this.tagClass===1&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 13:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){return{...super.toJSON(),tagClass:this.tagClass,tagNumber:this.tagNumber,isConstructed:this.isConstructed}}};hs.NAME="identificationBlock";var ds=class extends Tt{constructor({lenBlock:e={}}={}){var t,n,o;super(),this.isIndefiniteForm=(t=e.isIndefiniteForm)!==null&&t!==void 0?t:!1,this.longFormUsed=(n=e.longFormUsed)!==null&&n!==void 0?n:!1,this.length=(o=e.length)!==null&&o!==void 0?o:0}fromBER(e,t,n){let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let s=o.subarray(t,t+n);if(s.length===0)return this.error="Zero buffer length",-1;if(s[0]===255)return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=s[0]===128,this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(s[0]&128),this.longFormUsed===!1)return this.length=s[0],this.blockLength=1,t+this.blockLength;let i=s[0]&127;if(i>8)return this.error="Too big integer",-1;if(i+1>s.length)return this.error="End of input reached before message was fully decoded",-1;let a=t+1,c=o.subarray(a,a+i);return c[i-1]===0&&this.warnings.push("Needlessly long encoded length"),this.length=wr(c,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unnecessary usage of long length form"),this.blockLength=i+1,t+this.blockLength}toBER(e=!1){let t,n;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),e===!1&&(n=new Uint8Array(t),n[0]=128),t;if(this.longFormUsed){let o=Jt(this.length,8);if(o.byteLength>127)return this.error="Too big length",ct;if(t=new ArrayBuffer(o.byteLength+1),e)return t;let s=new Uint8Array(o);n=new Uint8Array(t),n[0]=o.byteLength|128;for(let i=0;i<o.byteLength;i++)n[i+1]=s[i];return t}return t=new ArrayBuffer(1),e===!1&&(n=new Uint8Array(t),n[0]=this.length),t}toJSON(){return{...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,longFormUsed:this.longFormUsed,length:this.length}}};ds.NAME="lengthBlock";var k={},Ae=class extends Tt{constructor({name:e=rn,optional:t=!1,primitiveSchema:n,...o}={},s){super(o),this.name=e,this.optional=t,n&&(this.primitiveSchema=n),this.idBlock=new hs(o),this.lenBlock=new ds(o),this.valueBlock=s?new s(o):new Le(o)}fromBER(e,t,n){let o=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return o===-1?(this.error=this.valueBlock.error,o):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),o)}toBER(e,t){let n=t||new zn;t||zf(this);let o=this.idBlock.toBER(e);if(n.write(o),this.lenBlock.isIndefiniteForm)n.write(new Uint8Array([128]).buffer),this.valueBlock.toBER(e,n),n.write(new ArrayBuffer(2));else{let s=this.valueBlock.toBER(e);this.lenBlock.length=s.byteLength;let i=this.lenBlock.toBER(e);n.write(i),n.write(s)}return t?ct:n.final()}toJSON(){let e={...super.toJSON(),idBlock:this.idBlock.toJSON(),lenBlock:this.lenBlock.toJSON(),valueBlock:this.valueBlock.toJSON(),name:this.name,optional:this.optional};return this.primitiveSchema&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}toString(e="ascii"){return e==="ascii"?this.onAsciiEncoding():q.Convert.ToHex(this.toBER())}onAsciiEncoding(){return`${this.constructor.NAME} : ${q.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`}isEqual(e){if(this===e)return!0;if(!(e instanceof this.constructor))return!1;let t=this.toBER(),n=e.toBER();return Vf(t,n)}};Ae.NAME="BaseBlock";function zf(r){if(r instanceof k.Constructed)for(let e of r.valueBlock.value)zf(e)&&(r.lenBlock.isIndefiniteForm=!0);return!!r.lenBlock.isIndefiniteForm}var ps=class extends Ae{constructor({value:e=rn,...t}={},n){super(t,n),e&&this.fromString(e)}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}fromBER(e,t,n){let o=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return o===-1?(this.error=this.valueBlock.error,o):(this.fromBuffer(this.valueBlock.valueHexView),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),o)}onAsciiEncoding(){return`${this.constructor.NAME} : '${this.valueBlock.value}'`}};ps.NAME="BaseStringBlock";var ms=class extends Rt(Le){constructor({isHexOnly:e=!0,...t}={}){super(t),this.isHexOnly=e}};ms.NAME="PrimitiveValueBlock";var Gf,gs=class extends Ae{constructor(e={}){super(e,ms),this.idBlock.isConstructed=!1}};Gf=gs;k.Primitive=Gf;gs.NAME="PRIMITIVE";function I0(r,e){if(r instanceof e)return r;let t=new e;return t.idBlock=r.idBlock,t.lenBlock=r.lenBlock,t.warnings=r.warnings,t.valueBeforeDecodeView=r.valueBeforeDecodeView,t}function Xs(r,e=0,t=r.length){let n=e,o=new Ae({},Le),s=new Tt;if(!Pt(s,r,e,t))return o.error=s.error,{offset:-1,result:o};if(!r.subarray(e,e+t).length)return o.error="Zero buffer length",{offset:-1,result:o};let a=o.idBlock.fromBER(r,e,t);if(o.idBlock.warnings.length&&o.warnings.concat(o.idBlock.warnings),a===-1)return o.error=o.idBlock.error,{offset:-1,result:o};if(e=a,t-=o.idBlock.blockLength,a=o.lenBlock.fromBER(r,e,t),o.lenBlock.warnings.length&&o.warnings.concat(o.lenBlock.warnings),a===-1)return o.error=o.lenBlock.error,{offset:-1,result:o};if(e=a,t-=o.lenBlock.blockLength,!o.idBlock.isConstructed&&o.lenBlock.isIndefiniteForm)return o.error="Indefinite length form used for primitive encoding form",{offset:-1,result:o};let c=Ae;switch(o.idBlock.tagClass){case 1:if(o.idBlock.tagNumber>=37&&o.idBlock.isHexOnly===!1)return o.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:o};switch(o.idBlock.tagNumber){case 0:if(o.idBlock.isConstructed&&o.lenBlock.length>0)return o.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:o};c=k.EndOfContent;break;case 1:c=k.Boolean;break;case 2:c=k.Integer;break;case 3:c=k.BitString;break;case 4:c=k.OctetString;break;case 5:c=k.Null;break;case 6:c=k.ObjectIdentifier;break;case 10:c=k.Enumerated;break;case 12:c=k.Utf8String;break;case 13:c=k.RelativeObjectIdentifier;break;case 14:c=k.TIME;break;case 15:return o.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:o};case 16:c=k.Sequence;break;case 17:c=k.Set;break;case 18:c=k.NumericString;break;case 19:c=k.PrintableString;break;case 20:c=k.TeletexString;break;case 21:c=k.VideotexString;break;case 22:c=k.IA5String;break;case 23:c=k.UTCTime;break;case 24:c=k.GeneralizedTime;break;case 25:c=k.GraphicString;break;case 26:c=k.VisibleString;break;case 27:c=k.GeneralString;break;case 28:c=k.UniversalString;break;case 29:c=k.CharacterString;break;case 30:c=k.BmpString;break;case 31:c=k.DATE;break;case 32:c=k.TimeOfDay;break;case 33:c=k.DateTime;break;case 34:c=k.Duration;break;default:{let u=o.idBlock.isConstructed?new k.Constructed:new k.Primitive;u.idBlock=o.idBlock,u.lenBlock=o.lenBlock,u.warnings=o.warnings,o=u}}break;case 2:case 3:case 4:default:c=o.idBlock.isConstructed?k.Constructed:k.Primitive}return o=I0(o,c),a=o.fromBER(r,e,o.lenBlock.isIndefiniteForm?t:o.lenBlock.length),o.valueBeforeDecodeView=r.subarray(n,n+o.blockLength),{offset:a,result:o}}function jc(r){if(!r.byteLength){let e=new Ae({},Le);return e.error="Input buffer has zero length",{offset:-1,result:e}}return Xs(q.BufferSourceConverter.toUint8Array(r).slice(),0,r.byteLength)}function C0(r,e){return r?1:e}var pt=class extends Le{constructor({value:e=[],isIndefiniteForm:t=!1,...n}={}){super(n),this.value=e,this.isIndefiniteForm=t}fromBER(e,t,n){let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;if(this.valueBeforeDecodeView=o.subarray(t,t+n),this.valueBeforeDecodeView.length===0)return this.warnings.push("Zero buffer length"),t;let s=t;for(;C0(this.isIndefiniteForm,n)>0;){let i=Xs(o,s,n);if(i.offset===-1)return this.error=i.result.error,this.warnings.concat(i.result.warnings),-1;if(s=i.offset,this.blockLength+=i.result.blockLength,n-=i.result.blockLength,this.value.push(i.result),this.isIndefiniteForm&&i.result.constructor.NAME===Gn)break}return this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.NAME===Gn?this.value.pop():this.warnings.push("No EndOfContent block encoded")),s}toBER(e,t){let n=t||new zn;for(let o=0;o<this.value.length;o++)this.value[o].toBER(e,n);return t?ct:n.final()}toJSON(){let e={...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,value:[]};for(let t of this.value)e.value.push(t.toJSON());return e}};pt.NAME="ConstructedValueBlock";var Wf,Qt=class extends Ae{constructor(e={}){super(e,pt),this.idBlock.isConstructed=!0}fromBER(e,t,n){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;let o=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?n:this.lenBlock.length);return o===-1?(this.error=this.valueBlock.error,o):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),o)}onAsciiEncoding(){let e=[];for(let n of this.valueBlock.value)e.push(n.toString("ascii").split(`
 `).map(o=>`  ${o}`).join(`
 `));let t=this.idBlock.tagClass===3?`[${this.idBlock.tagNumber}]`:this.constructor.NAME;return e.length?`${t} :
 ${e.join(`
-`)}`:`${t} :`}};Wf=Qt;C.Constructed=Wf;Qt.NAME="CONSTRUCTED";var ys=class extends Le{fromBER(e,t,n){return t}toBER(e){return ct}};ys.override="EndOfContentValueBlock";var jf,ws=class extends Ae{constructor(e={}){super(e,ys),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}};jf=ws;C.EndOfContent=jf;ws.NAME=zn;var Zf,Yr=class extends Ae{constructor(e={}){super(e,Le),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}fromBER(e,t,n){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=n,t+n>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+n}toBER(e,t){let n=new ArrayBuffer(2);if(!e){let o=new Uint8Array(n);o[0]=5,o[1]=0}return t&&t.write(n),n}onAsciiEncoding(){return`${this.constructor.NAME}`}};Zf=Yr;C.Null=Zf;Yr.NAME="NULL";var bs=class extends Rt(Le){constructor({value:e,...t}={}){super(t),t.valueHex?this.valueHexView=q.BufferSourceConverter.toUint8Array(t.valueHex):this.valueHexView=new Uint8Array(1),e&&(this.value=e)}get value(){for(let e of this.valueHexView)if(e>0)return!0;return!1}set value(e){this.valueHexView[0]=e?255:0}fromBER(e,t,n){let o=q.BufferSourceConverter.toUint8Array(e);return Pt(this,o,t,n)?(this.valueHexView=o.subarray(t,t+n),n>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,zc.call(this),this.blockLength=n,t+n):-1}toBER(){return this.valueHexView.slice()}toJSON(){return{...super.toJSON(),value:this.value}}};bs.NAME="BooleanValueBlock";var Xf,xs=class extends Ae{constructor(e={}){super(e,bs),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.getValue}`}};Xf=xs;C.Boolean=Xf;xs.NAME="BOOLEAN";var vs=class extends Rt(pt){constructor({isConstructed:e=!1,...t}={}){super(t),this.isConstructed=e}fromBER(e,t,n){let o=0;if(this.isConstructed){if(this.isHexOnly=!1,o=pt.prototype.fromBER.call(this,e,t,n),o===-1)return o;for(let s=0;s<this.value.length;s++){let i=this.value[s].constructor.NAME;if(i===zn){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(i!==Kf)return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,o=super.fromBER(e,t,n),this.blockLength=n;return o}toBER(e,t){return this.isConstructed?pt.prototype.toBER.call(this,e,t):e?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),isConstructed:this.isConstructed}}};vs.NAME="OctetStringValueBlock";var Yf,Es=class r extends Ae{constructor({idBlock:e={},lenBlock:t={},...n}={}){var o,s;(o=n.isConstructed)!==null&&o!==void 0||(n.isConstructed=!!(!((s=n.value)===null||s===void 0)&&s.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},vs),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,n){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,n===0)return this.idBlock.error.length===0&&(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length===0&&(this.blockLength+=this.lenBlock.blockLength),t;if(!this.valueBlock.isConstructed){let s=(e instanceof ArrayBuffer?new Uint8Array(e):e).subarray(t,t+n);try{if(s.byteLength){let i=Xs(s,0,s.byteLength);i.offset!==-1&&i.offset===n&&(this.valueBlock.value=[i.result])}}catch{}}return super.fromBER(e,t,n)}onAsciiEncoding(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?Qt.prototype.onAsciiEncoding.call(this):`${this.constructor.NAME} : ${q.Convert.ToHex(this.valueBlock.valueHexView)}`}getValue(){if(!this.idBlock.isConstructed)return this.valueBlock.valueHexView.slice().buffer;let e=[];for(let t of this.valueBlock.value)t instanceof r&&e.push(t.valueBlock.valueHexView);return q.BufferSourceConverter.concat(e)}};Yf=Es;C.OctetString=Yf;Es.NAME=Kf;var As=class extends Rt(pt){constructor({unusedBits:e=0,isConstructed:t=!1,...n}={}){super(n),this.unusedBits=e,this.isConstructed=t,this.blockLength=this.valueHexView.byteLength}fromBER(e,t,n){if(!n)return t;let o=-1;if(this.isConstructed){if(o=pt.prototype.fromBER.call(this,e,t,n),o===-1)return o;for(let a of this.value){let c=a.constructor.NAME;if(c===zn){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(c!==qf)return this.error="BIT STRING may consists of BIT STRINGs only",-1;let u=a.valueBlock;if(this.unusedBits>0&&u.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;this.unusedBits=u.unusedBits}return o}let s=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let i=s.subarray(t,t+n);if(this.unusedBits=i[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){let a=i.subarray(1);try{if(a.byteLength){let c=Xs(a,0,a.byteLength);c.offset!==-1&&c.offset===n-1&&(this.value=[c.result])}}catch{}}return this.valueHexView=i.subarray(1),this.blockLength=i.length,t+n}toBER(e,t){if(this.isConstructed)return pt.prototype.toBER.call(this,e,t);if(e)return new ArrayBuffer(this.valueHexView.byteLength+1);if(!this.valueHexView.byteLength)return ct;let n=new Uint8Array(this.valueHexView.length+1);return n[0]=this.unusedBits,n.set(this.valueHexView,1),n.buffer}toJSON(){return{...super.toJSON(),unusedBits:this.unusedBits,isConstructed:this.isConstructed}}};As.NAME="BitStringValueBlock";var Jf,Jr=class extends Ae{constructor({idBlock:e={},lenBlock:t={},...n}={}){var o,s;(o=n.isConstructed)!==null&&o!==void 0||(n.isConstructed=!!(!((s=n.value)===null||s===void 0)&&s.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},As),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}fromBER(e,t,n){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,n)}onAsciiEncoding(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return Qt.prototype.onAsciiEncoding.call(this);{let e=[],t=this.valueBlock.valueHexView;for(let o of t)e.push(o.toString(2).padStart(8,"0"));let n=e.join("");return`${this.constructor.NAME} : ${n.substring(0,n.length-this.valueBlock.unusedBits)}`}}};Jf=Jr;C.BitString=Jf;Jr.NAME=qf;var Qf;function C0(r,e){let t=new Uint8Array([0]),n=new Uint8Array(r),o=new Uint8Array(e),s=n.slice(0),i=s.length-1,a=o.slice(0),c=a.length-1,u=0,f=c<i?i:c,l=0;for(let d=f;d>=0;d--,l++){switch(!0){case l<a.length:u=s[i-l]+a[c-l]+t[0];break;default:u=s[i-l]+t[0]}switch(t[0]=u/10,!0){case l>=s.length:s=us(new Uint8Array([u%10]),s);break;default:s[i-l]=u%10}}return t[0]>0&&(s=us(t,s)),s}function $f(r){if(r>=Kn.length)for(let e=Kn.length;e<=r;e++){let t=new Uint8Array([0]),n=Kn[e-1].slice(0);for(let o=n.length-1;o>=0;o--){let s=new Uint8Array([(n[o]<<1)+t[0]]);t[0]=s[0]/10,n[o]=s[0]%10}t[0]>0&&(n=us(t,n)),Kn.push(n)}return Kn[r]}function T0(r,e){let t=0,n=new Uint8Array(r),o=new Uint8Array(e),s=n.slice(0),i=s.length-1,a=o.slice(0),c=a.length-1,u,f=0;for(let l=c;l>=0;l--,f++)switch(u=s[i-f]-a[c-f]-t,!0){case u<0:t=1,s[i-f]=u+10;break;default:t=0,s[i-f]=u}if(t>0)for(let l=i-c+1;l>=0;l--,f++)if(u=s[i-f]-t,u<0)t=1,s[i-f]=u+10;else{t=0,s[i-f]=u;break}return s.slice()}var Gn=class extends Rt(Le){constructor({value:e,...t}={}){super(t),this._valueDec=0,t.valueHex&&this.setValueHex(),e!==void 0&&(this.valueDec=e)}setValueHex(){this.valueHexView.length>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,this.valueHexView.length>0&&(this._valueDec=zc.call(this)))}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this.valueHexView=new Uint8Array(Ff(e))}get valueDec(){return this._valueDec}fromDER(e,t,n,o=0){let s=this.fromBER(e,t,n);if(s===-1)return s;let i=this.valueHexView;return i[0]===0&&i[1]&128?this.valueHexView=i.subarray(1):o!==0&&i.length<o&&(o-i.length>1&&(o=i.length+1),this.valueHexView=i.subarray(o-i.length)),s}toDER(e=!1){let t=this.valueHexView;switch(!0){case(t[0]&128)!==0:{let n=new Uint8Array(this.valueHexView.length+1);n[0]=0,n.set(t,1),this.valueHexView=n}break;case(t[0]===0&&(t[1]&128)===0):this.valueHexView=this.valueHexView.subarray(1);break}return this.toBER(e)}fromBER(e,t,n){let o=super.fromBER(e,t,n);return o===-1||this.setValueHex(),o}toBER(e){return e?new ArrayBuffer(this.valueHexView.length):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}toString(){let e=this.valueHexView.length*8-1,t=new Uint8Array(this.valueHexView.length*8/3),n=0,o,s=this.valueHexView,i="",a=!1;for(let c=s.byteLength-1;c>=0;c--){o=s[c];for(let u=0;u<8;u++){if((o&1)===1)switch(n){case e:t=T0($f(n),t),i="-";break;default:t=C0(t,$f(n))}n++,o>>=1}}for(let c=0;c<t.length;c++)t[c]&&(a=!0),a&&(i+=Hf.charAt(t[c]));return a===!1&&(i+=Hf.charAt(0)),i}};Qf=Gn;Gn.NAME="IntegerValueBlock";Object.defineProperty(Qf.prototype,"valueHex",{set:function(r){this.valueHexView=new Uint8Array(r),this.setValueHex()},get:function(){return this.valueHexView.slice().buffer}});var eh,Se=class r extends Ae{constructor(e={}){super(e,Gn),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}toBigInt(){return fs(),BigInt(this.valueBlock.toString())}static fromBigInt(e){fs();let t=BigInt(e),n=new qn,o=t.toString(16).replace(/^-/,""),s=new Uint8Array(q.Convert.FromHex(o));if(t<0){let a=new Uint8Array(s.length+(s[0]&128?1:0));a[0]|=128;let u=BigInt(`0x${q.Convert.ToHex(a)}`)+t,f=q.BufferSourceConverter.toUint8Array(q.Convert.FromHex(u.toString(16)));f[0]|=128,n.write(f)}else s[0]&128&&n.write(new Uint8Array([0])),n.write(s);return new r({valueHex:n.final()})}convertToDER(){let e=new r({valueHex:this.valueBlock.valueHexView});return e.valueBlock.toDER(),e}convertFromDER(){return new r({valueHex:this.valueBlock.valueHexView[0]===0?this.valueBlock.valueHexView.subarray(1):this.valueBlock.valueHexView})}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()}`}};eh=Se;C.Integer=eh;Se.NAME="INTEGER";var th,Ss=class extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}};th=Ss;C.Enumerated=th;Ss.NAME="ENUMERATED";var Wn=class extends Rt(Le){constructor({valueDec:e=-1,isFirstSid:t=!1,...n}={}){super(n),this.valueDec=e,this.isFirstSid=t}fromBER(e,t,n){if(!n)return t;let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let s=o.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=s[a]&127,this.blockLength++,!!(s[a]&128));a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,s[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=wr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}set valueBigInt(e){fs();let t=BigInt(e).toString(2);for(;t.length%7;)t="0"+t;let n=new Uint8Array(t.length/7);for(let o=0;o<n.length;o++)n[o]=parseInt(t.slice(o*7,o*7+7),2)+(o+1<n.length?128:0);this.fromBER(n.buffer,0,n.length)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let o=this.valueHexView,s=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)s[i]=o[i]|128;return s[this.blockLength-1]=o[this.blockLength-1],s.buffer}let t=Jt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",ct;let n=new Uint8Array(t.byteLength);if(!e){let o=new Uint8Array(t),s=t.byteLength-1;for(let i=0;i<s;i++)n[i]=o[i]|128;n[s]=o[s]}return n}toString(){let e="";if(this.isHexOnly)e=q.Convert.ToHex(this.valueHexView);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec,isFirstSid:this.isFirstSid}}};Wn.NAME="sidBlock";var _s=class extends Le{constructor({value:e=en,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let o=t;for(;n>0;){let s=new Wn;if(o=s.fromBER(e,o,n),o===-1)return this.blockLength=0,this.error=s.error,o;this.value.length===0&&(s.isFirstSid=!0),this.blockLength+=s.blockLength,n-=s.blockLength,this.value.push(s)}return o}toBER(e){let t=[];for(let n=0;n<this.value.length;n++){let o=this.value[n].toBER(e);if(o.byteLength===0)return this.error=this.value[n].error,ct;t.push(o)}return Gc(t)}fromString(e){this.value=[];let t=0,n=0,o="",s=!1;do if(n=e.indexOf(".",t),n===-1?o=e.substring(t):o=e.substring(t,n),t=n+1,s){let i=this.value[0],a=0;switch(i.valueDec){case 0:break;case 1:a=40;break;case 2:a=80;break;default:this.value=[];return}let c=parseInt(o,10);if(isNaN(c))return;i.valueDec=c+a,s=!1}else{let i=new Wn;if(o>Number.MAX_SAFE_INTEGER){fs();let a=BigInt(o);i.valueBigInt=a}else if(i.valueDec=parseInt(o,10),isNaN(i.valueDec))return;this.value.length||(i.isFirstSid=!0,s=!0),this.value.push(i)}while(n!==-1)}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let o=this.value[n].toString();n!==0&&(e=`${e}.`),t?(o=`{${o}}`,this.value[n].isFirstSid?e=`2.{${o} - 80}`:e+=o):e+=o}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};_s.NAME="ObjectIdentifierValueBlock";var rh,Qr=class extends Ae{constructor(e={}){super(e,_s),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};rh=Qr;C.ObjectIdentifier=rh;Qr.NAME="OBJECT IDENTIFIER";var jn=class extends Rt(Tt){constructor({valueDec:e=0,...t}={}){super(t),this.valueDec=e}fromBER(e,t,n){if(n===0)return t;let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let s=o.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=s[a]&127,this.blockLength++,!!(s[a]&128));a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,s[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=wr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let o=this.valueHexView,s=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)s[i]=o[i]|128;return s[this.blockLength-1]=o[this.blockLength-1],s.buffer}let t=Jt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",ct;let n=new Uint8Array(t.byteLength);if(!e){let o=new Uint8Array(t),s=t.byteLength-1;for(let i=0;i<s;i++)n[i]=o[i]|128;n[s]=o[s]}return n.buffer}toString(){let e="";return this.isHexOnly?e=q.Convert.ToHex(this.valueHexView):e=this.valueDec.toString(),e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}};jn.NAME="relativeSidBlock";var Bs=class extends Le{constructor({value:e=en,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let o=t;for(;n>0;){let s=new jn;if(o=s.fromBER(e,o,n),o===-1)return this.blockLength=0,this.error=s.error,o;this.blockLength+=s.blockLength,n-=s.blockLength,this.value.push(s)}return o}toBER(e,t){let n=[];for(let o=0;o<this.value.length;o++){let s=this.value[o].toBER(e);if(s.byteLength===0)return this.error=this.value[o].error,ct;n.push(s)}return Gc(n)}fromString(e){this.value=[];let t=0,n=0,o="";do{n=e.indexOf(".",t),n===-1?o=e.substring(t):o=e.substring(t,n),t=n+1;let s=new jn;if(s.valueDec=parseInt(o,10),isNaN(s.valueDec))return!0;this.value.push(s)}while(n!==-1);return!0}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let o=this.value[n].toString();n!==0&&(e=`${e}.`),t&&(o=`{${o}}`),e+=o}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};Bs.NAME="RelativeObjectIdentifierValueBlock";var nh,Is=class extends Ae{constructor(e={}){super(e,Bs),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};nh=Is;C.RelativeObjectIdentifier=nh;Is.NAME="RelativeObjectIdentifier";var oh,Lt=class extends Qt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}};oh=Lt;C.Sequence=oh;Lt.NAME="SEQUENCE";var sh,ks=class extends Qt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}};sh=ks;C.Set=sh;ks.NAME="SET";var Cs=class extends Rt(Le){constructor({...e}={}){super(e),this.isHexOnly=!0,this.value=en}toJSON(){return{...super.toJSON(),value:this.value}}};Cs.NAME="StringValueBlock";var Ts=class extends Cs{};Ts.NAME="SimpleStringValueBlock";var Oe=class extends ps{constructor({...e}={}){super(e,Ts)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,q.BufferSourceConverter.toUint8Array(e))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t);for(let o=0;o<t;o++)n[o]=e.charCodeAt(o);this.valueBlock.value=e}};Oe.NAME="SIMPLE STRING";var Ls=class extends Oe{fromBuffer(e){this.valueBlock.valueHexView=q.BufferSourceConverter.toUint8Array(e);try{this.valueBlock.value=q.Convert.ToUtf8String(e)}catch(t){this.warnings.push(`Error during "decodeURIComponent": ${t}, using raw string`),this.valueBlock.value=q.Convert.ToBinary(e)}}fromString(e){this.valueBlock.valueHexView=new Uint8Array(q.Convert.FromUtf8String(e)),this.valueBlock.value=e}};Ls.NAME="Utf8StringValueBlock";var ih,Nt=class extends Ls{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}};ih=Nt;C.Utf8String=ih;Nt.NAME="UTF8String";var Ns=class extends Oe{fromBuffer(e){this.valueBlock.value=q.Convert.ToUtf16String(e),this.valueBlock.valueHexView=q.BufferSourceConverter.toUint8Array(e)}fromString(e){this.valueBlock.value=e,this.valueBlock.valueHexView=new Uint8Array(q.Convert.FromUtf16String(e))}};Ns.NAME="BmpStringValueBlock";var ah,Ps=class extends Ns{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}};ah=Ps;C.BmpString=ah;Ps.NAME="BMPString";var Rs=class extends Oe{fromBuffer(e){let t=ArrayBuffer.isView(e)?e.slice().buffer:e.slice(0),n=new Uint8Array(t);for(let o=0;o<n.length;o+=4)n[o]=n[o+3],n[o+1]=n[o+2],n[o+2]=0,n[o+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t*4);for(let o=0;o<t;o++){let s=Jt(e.charCodeAt(o),8),i=new Uint8Array(s);if(i.length>4)continue;let a=4-i.length;for(let c=i.length-1;c>=0;c--)n[o*4+c+a]=i[c]}this.valueBlock.value=e}};Rs.NAME="UniversalStringValueBlock";var ch,Ds=class extends Rs{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}};ch=Ds;C.UniversalString=ch;Ds.NAME="UniversalString";var lh,Ms=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}};lh=Ms;C.NumericString=lh;Ms.NAME="NumericString";var uh,Us=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}};uh=Us;C.PrintableString=uh;Us.NAME="PrintableString";var fh,Os=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}};fh=Os;C.TeletexString=fh;Os.NAME="TeletexString";var hh,Fs=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}};hh=Fs;C.VideotexString=hh;Fs.NAME="VideotexString";var dh,Vs=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}};dh=Vs;C.IA5String=dh;Vs.NAME="IA5String";var ph,Hs=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}};ph=Hs;C.GraphicString=ph;Hs.NAME="GraphicString";var mh,Zn=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}};mh=Zn;C.VisibleString=mh;Zn.NAME="VisibleString";var gh,$s=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}};gh=$s;C.GeneralString=gh;$s.NAME="GeneralString";var yh,Ks=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}};yh=Ks;C.CharacterString=yh;Ks.NAME="CharacterString";var wh,Xn=class extends Zn{constructor({value:e,valueDate:t,...n}={}){if(super(n),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,e){this.fromString(e),this.valueBlock.valueHexView=new Uint8Array(e.length);for(let o=0;o<e.length;o++)this.valueBlock.valueHexView[o]=e.charCodeAt(o)}t&&(this.fromDate(t),this.valueBlock.valueHexView=new Uint8Array(this.toBuffer())),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,q.BufferSourceConverter.toUint8Array(e)))}toBuffer(){let e=this.toString(),t=new ArrayBuffer(e.length),n=new Uint8Array(t);for(let o=0;o<e.length;o++)n[o]=e.charCodeAt(o);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){let n=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig.exec(e);if(n===null){this.error="Wrong input string for conversion";return}let o=parseInt(n[1],10);o>=50?this.year=1900+o:this.year=2e3+o,this.month=parseInt(n[2],10),this.day=parseInt(n[3],10),this.hour=parseInt(n[4],10),this.minute=parseInt(n[5],10),this.second=parseInt(n[6],10)}toString(e="iso"){if(e==="iso"){let t=new Array(7);return t[0]=qe(this.year<2e3?this.year-1900:this.year-2e3,2),t[1]=qe(this.month,2),t[2]=qe(this.day,2),t[3]=qe(this.hour,2),t[4]=qe(this.minute,2),t[5]=qe(this.second,2),t[6]="Z",t.join("")}return super.toString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.toDate().toISOString()}`}toJSON(){return{...super.toJSON(),year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second}}};wh=Xn;C.UTCTime=wh;Xn.NAME="UTCTime";var bh,qs=class extends Xn{constructor(e={}){var t;super(e),(t=this.millisecond)!==null&&t!==void 0||(this.millisecond=0),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromDate(e){super.fromDate(e),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t=!1,n="",o="",s=0,i,a=0,c=0;if(e[e.length-1]==="Z")n=e.substring(0,e.length-1),t=!0;else{let l=new Number(e[e.length-1]);if(isNaN(l.valueOf()))throw new Error("Wrong input string for conversion");n=e}if(t){if(n.indexOf("+")!==-1)throw new Error("Wrong input string for conversion");if(n.indexOf("-")!==-1)throw new Error("Wrong input string for conversion")}else{let l=1,d=n.indexOf("+"),h="";if(d===-1&&(d=n.indexOf("-"),l=-1),d!==-1){if(h=n.substring(d+1),n=n.substring(0,d),h.length!==2&&h.length!==4)throw new Error("Wrong input string for conversion");let p=parseInt(h.substring(0,2),10);if(isNaN(p.valueOf()))throw new Error("Wrong input string for conversion");if(a=l*p,h.length===4){if(p=parseInt(h.substring(2,4),10),isNaN(p.valueOf()))throw new Error("Wrong input string for conversion");c=l*p}}}let u=n.indexOf(".");if(u===-1&&(u=n.indexOf(",")),u!==-1){let l=new Number(`0${n.substring(u)}`);if(isNaN(l.valueOf()))throw new Error("Wrong input string for conversion");s=l.valueOf(),o=n.substring(0,u)}else o=n;switch(!0){case o.length===8:if(i=/(\d{4})(\d{2})(\d{2})/ig,u!==-1)throw new Error("Wrong input string for conversion");break;case o.length===10:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})/ig,u!==-1){let l=60*s;this.minute=Math.floor(l),l=60*(l-this.minute),this.second=Math.floor(l),l=1e3*(l-this.second),this.millisecond=Math.floor(l)}break;case o.length===12:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig,u!==-1){let l=60*s;this.second=Math.floor(l),l=1e3*(l-this.second),this.millisecond=Math.floor(l)}break;case o.length===14:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig,u!==-1){let l=1e3*s;this.millisecond=Math.floor(l)}break;default:throw new Error("Wrong input string for conversion")}let f=i.exec(o);if(f===null)throw new Error("Wrong input string for conversion");for(let l=1;l<f.length;l++)switch(l){case 1:this.year=parseInt(f[l],10);break;case 2:this.month=parseInt(f[l],10);break;case 3:this.day=parseInt(f[l],10);break;case 4:this.hour=parseInt(f[l],10)+a;break;case 5:this.minute=parseInt(f[l],10)+c;break;case 6:this.second=parseInt(f[l],10);break;default:throw new Error("Wrong input string for conversion")}if(t===!1){let l=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=l.getUTCFullYear(),this.month=l.getUTCMonth(),this.day=l.getUTCDay(),this.hour=l.getUTCHours(),this.minute=l.getUTCMinutes(),this.second=l.getUTCSeconds(),this.millisecond=l.getUTCMilliseconds()}}toString(e="iso"){if(e==="iso"){let t=[];return t.push(qe(this.year,4)),t.push(qe(this.month,2)),t.push(qe(this.day,2)),t.push(qe(this.hour,2)),t.push(qe(this.minute,2)),t.push(qe(this.second,2)),this.millisecond!==0&&(t.push("."),t.push(qe(this.millisecond,3))),t.push("Z"),t.join("")}return super.toString(e)}toJSON(){return{...super.toJSON(),millisecond:this.millisecond}}};bh=qs;C.GeneralizedTime=bh;qs.NAME="GeneralizedTime";var xh,zs=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}};xh=zs;C.DATE=xh;zs.NAME="DATE";var vh,Gs=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}};vh=Gs;C.TimeOfDay=vh;Gs.NAME="TimeOfDay";var Eh,Ws=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}};Eh=Ws;C.DateTime=Eh;Ws.NAME="DateTime";var Ah,js=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}};Ah=js;C.Duration=Ah;js.NAME="Duration";var Sh,Zs=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}};Sh=Zs;C.TIME=Sh;Zs.NAME="TIME";function H(r,e="utf8"){let t=ss[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.encoder.encode(r).substring(1)}function tn(r){if(isNaN(r)||r<=0)throw new D("random bytes length must be a Number bigger than 0");return qr(r)}var Yn=class extends Error{constructor(e="An error occurred while signing a message"){super(e),this.name="SigningError"}},Jn=class extends Error{constructor(e="An error occurred while verifying a message"){super(e),this.name="VerificationError"}},Ys=class extends Error{constructor(e="Missing Web Crypto API"){super(e),this.name="WebCryptoMissingError"}};var _h={get(r=globalThis){let e=r.crypto;if(e?.subtle==null)throw new Ys("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api");return e}};var er=_h;async function Bh(r){let e=await er.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await N0(e);return{privateKey:t[0],publicKey:t[1]}}async function Ih(r,e){let t=await er.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await er.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,e instanceof Uint8Array?e:e.subarray());return new Uint8Array(n,0,n.byteLength)}async function kh(r,e,t){let n=await er.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return er.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t instanceof Uint8Array?t:t.subarray())}async function N0(r){if(r.privateKey==null||r.publicKey==null)throw new D("Private and public key are required");return Promise.all([er.get().subtle.exportKey("jwk",r.privateKey),er.get().subtle.exportKey("jwk",r.publicKey)])}function Zc(r){if(r.kty!=="RSA")throw new D("invalid key type");if(r.n==null)throw new D("invalid key modulus");return P(r.n,"base64url").length*8}var rn=class{type="RSA";_key;_raw;_multihash;constructor(e,t){this._key=e,this._multihash=t}get raw(){return this._raw==null&&(this._raw=Qn.jwkToPkix(this._key)),this._raw}toMultihash(){return this._multihash}toCID(){return pe.createV1(114,this._multihash)}toString(){return W.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}verify(e,t){return kh(this._key,t,e)}},eo=class{type="RSA";_key;_raw;publicKey;constructor(e,t){this._key=e,this.publicKey=t}get raw(){return this._raw==null&&(this._raw=Qn.jwkToPkcs1(this._key)),this._raw}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}sign(e){return Ih(this._key,e)}};var Js=8192,Xc=18;function Ch(r){let{result:e}=jc(r),t=e.valueBlock.value;return{n:H(mt(t[1].toBigInt()),"base64url"),e:H(mt(t[2].toBigInt()),"base64url"),d:H(mt(t[3].toBigInt()),"base64url"),p:H(mt(t[4].toBigInt()),"base64url"),q:H(mt(t[5].toBigInt()),"base64url"),dp:H(mt(t[6].toBigInt()),"base64url"),dq:H(mt(t[7].toBigInt()),"base64url"),qi:H(mt(t[8].toBigInt()),"base64url"),kty:"RSA",alg:"RS256"}}function P0(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new D("JWK was missing components");let t=new Lt({value:[new Se({value:0}),Se.fromBigInt(gt(P(r.n,"base64url"))),Se.fromBigInt(gt(P(r.e,"base64url"))),Se.fromBigInt(gt(P(r.d,"base64url"))),Se.fromBigInt(gt(P(r.p,"base64url"))),Se.fromBigInt(gt(P(r.q,"base64url"))),Se.fromBigInt(gt(P(r.dp,"base64url"))),Se.fromBigInt(gt(P(r.dq,"base64url"))),Se.fromBigInt(gt(P(r.qi,"base64url")))]}).toBER();return new Uint8Array(t,0,t.byteLength)}function Th(r){let{result:e}=jc(r),t=e.valueBlock.value[1].valueBlock.value[0].valueBlock.value;return{kty:"RSA",n:H(mt(t[0].toBigInt()),"base64url"),e:H(mt(t[1].toBigInt()),"base64url")}}function Yc(r){if(r.n==null||r.e==null)throw new D("JWK was missing components");let t=new Lt({value:[new Lt({value:[new Qr({value:"1.2.840.113549.1.1.1"}),new Yr]}),new Jr({valueHex:new Lt({value:[Se.fromBigInt(gt(P(r.n,"base64url"))),Se.fromBigInt(gt(P(r.e,"base64url")))]}).toBER()})]}).toBER();return new Uint8Array(t,0,t.byteLength)}function mt(r){let e=r.toString(16);e.length%2>0&&(e=`0${e}`);let t=e.length/2,n=new Uint8Array(t),o=0,s=0;for(;o<t;)n[o]=parseInt(e.slice(s,s+2),16),o+=1,s+=2;return n}function gt(r){let e=[];return r.forEach(function(t){let n=t.toString(16);n.length%2>0&&(n=`0${n}`),e.push(n)}),BigInt("0x"+e.join(""))}function Lh(r){let e=Ch(r);return Nh(e)}function Jc(r){let e=Th(r);if(Zc(e)>Js)throw new Rr("Key size is too large");let t=Zr(dt.encode({Type:ge.RSA,Data:r})),n=tt(Xc,t);return new rn(e,n)}function Nh(r){if(Zc(r)>Js)throw new D("Key size is too large");let e=Ph(r),t=Zr(dt.encode({Type:ge.RSA,Data:Yc(e.publicKey)})),n=tt(Xc,t);return new eo(e.privateKey,new rn(e.publicKey,n))}async function Qc(r){if(r>Js)throw new D("Key size is too large");let e=await Bh(r),t=Zr(dt.encode({Type:ge.RSA,Data:Yc(e.publicKey)})),n=tt(Xc,t);return new eo(e.privateKey,new rn(e.publicKey,n))}function Ph(r){if(r==null)throw new D("Missing key parameter");return{privateKey:r,publicKey:{kty:r.kty,n:r.n,e:r.e}}}var Qs=class extends Kr{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,ef(e);let n=Pn(t);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let o=this.blockLen,s=new Uint8Array(o);s.set(n.length>o?e.create().update(n).digest():n);for(let i=0;i<s.length;i++)s[i]^=54;this.iHash.update(s),this.oHash=e.create();for(let i=0;i<s.length;i++)s[i]^=106;this.oHash.update(s),s.fill(0)}update(e){return $r(this),this.iHash.update(e),this}digestInto(e){$r(this),Hr(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:n,finished:o,destroyed:s,blockLen:i,outputLen:a}=this;return e=e,e.finished=o,e.destroyed=s,e.blockLen=i,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},el=(r,e,t)=>new Qs(r,e).update(t).digest();el.create=(r,e)=>new Qs(r,e);function Rh(r){r.lowS!==void 0&&ot("lowS",r.lowS),r.prehash!==void 0&&ot("prehash",r.prehash)}function R0(r){let e=Mn(r);ft(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:t,Fp:n,a:o}=e;if(t){if(!n.eql(o,n.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof t!="object"||typeof t.beta!="bigint"||typeof t.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}var{bytesToNumberBE:D0,hexToBytes:M0}=Zo,Dt={Err:class extends Error{constructor(e=""){super(e)}},_tlv:{encode:(r,e)=>{let{Err:t}=Dt;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length&1)throw new t("tlv.encode: unpadded data");let n=e.length/2,o=lr(n);if(o.length/2&128)throw new t("tlv.encode: long form length too big");let s=n>127?lr(o.length/2|128):"";return`${lr(r)}${s}${o}${e}`},decode(r,e){let{Err:t}=Dt,n=0;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length<2||e[n++]!==r)throw new t("tlv.decode: wrong tlv");let o=e[n++],s=!!(o&128),i=0;if(!s)i=o;else{let c=o&127;if(!c)throw new t("tlv.decode(long): indefinite length not supported");if(c>4)throw new t("tlv.decode(long): byte length is too big");let u=e.subarray(n,n+c);if(u.length!==c)throw new t("tlv.decode: length bytes not complete");if(u[0]===0)throw new t("tlv.decode(long): zero leftmost byte");for(let f of u)i=i<<8|f;if(n+=c,i<128)throw new t("tlv.decode(long): not minimal encoding")}let a=e.subarray(n,n+i);if(a.length!==i)throw new t("tlv.decode: wrong value length");return{v:a,l:e.subarray(n+i)}}},_int:{encode(r){let{Err:e}=Dt;if(r<Mt)throw new e("integer: negative integers are not allowed");let t=lr(r);if(Number.parseInt(t[0],16)&8&&(t="00"+t),t.length&1)throw new e("unexpected assertion");return t},decode(r){let{Err:e}=Dt;if(r[0]&128)throw new e("Invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("Invalid signature integer: unnecessary leading zero");return D0(r)}},toSig(r){let{Err:e,_int:t,_tlv:n}=Dt,o=typeof r=="string"?M0(r):r;Gr(o);let{v:s,l:i}=n.decode(48,o);if(i.length)throw new e("Invalid signature: left bytes after parsing");let{v:a,l:c}=n.decode(2,s),{v:u,l:f}=n.decode(2,c);if(f.length)throw new e("Invalid signature: left bytes after parsing");return{r:t.decode(a),s:t.decode(u)}},hexFromSig(r){let{_tlv:e,_int:t}=Dt,n=`${e.encode(2,t.encode(r.r))}${e.encode(2,t.encode(r.s))}`;return e.encode(48,n)}},Mt=BigInt(0),ve=BigInt(1),r2=BigInt(2),Dh=BigInt(3),n2=BigInt(4);function U0(r){let e=R0(r),{Fp:t}=e,n=jt(e.n,e.nBitLength),o=e.toBytes||((m,g,y)=>{let b=g.toAffine();return kt(Uint8Array.from([4]),t.toBytes(b.x),t.toBytes(b.y))}),s=e.fromBytes||(m=>{let g=m.subarray(1),y=t.fromBytes(g.subarray(0,t.BYTES)),b=t.fromBytes(g.subarray(t.BYTES,2*t.BYTES));return{x:y,y:b}});function i(m){let{a:g,b:y}=e,b=t.sqr(m),w=t.mul(b,m);return t.add(t.add(w,t.mul(m,g)),y)}if(!t.eql(t.sqr(e.Gy),i(e.Gx)))throw new Error("bad generator point: equation left != right");function a(m){return Rn(m,ve,e.n)}function c(m){let{allowedPrivateKeyLengths:g,nByteLength:y,wrapPrivateKey:b,n:w}=e;if(g&&typeof m!="bigint"){if(zt(m)&&(m=Bt(m)),typeof m!="string"||!g.includes(m.length))throw new Error("Invalid key");m=m.padStart(y*2,"0")}let x;try{x=typeof m=="bigint"?m:It(ae("private key",m,y))}catch{throw new Error(`private key must be ${y} bytes, hex or bigint, not ${typeof m}`)}return b&&(x=Y(x,w)),$e("private key",x,ve,w),x}function u(m){if(!(m instanceof d))throw new Error("ProjectivePoint expected")}let f=hr((m,g)=>{let{px:y,py:b,pz:w}=m;if(t.eql(w,t.ONE))return{x:y,y:b};let x=m.is0();g==null&&(g=x?t.ONE:t.inv(w));let A=t.mul(y,g),_=t.mul(b,g),v=t.mul(w,g);if(x)return{x:t.ZERO,y:t.ZERO};if(!t.eql(v,t.ONE))throw new Error("invZ was invalid");return{x:A,y:_}}),l=hr(m=>{if(m.is0()){if(e.allowInfinityPoint&&!t.is0(m.py))return;throw new Error("bad point: ZERO")}let{x:g,y}=m.toAffine();if(!t.isValid(g)||!t.isValid(y))throw new Error("bad point: x or y not FE");let b=t.sqr(y),w=i(g);if(!t.eql(b,w))throw new Error("bad point: equation left != right");if(!m.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class d{constructor(g,y,b){if(this.px=g,this.py=y,this.pz=b,g==null||!t.isValid(g))throw new Error("x required");if(y==null||!t.isValid(y))throw new Error("y required");if(b==null||!t.isValid(b))throw new Error("z required");Object.freeze(this)}static fromAffine(g){let{x:y,y:b}=g||{};if(!g||!t.isValid(y)||!t.isValid(b))throw new Error("invalid affine point");if(g instanceof d)throw new Error("projective point not allowed");let w=x=>t.eql(x,t.ZERO);return w(y)&&w(b)?d.ZERO:new d(y,b,t.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(g){let y=t.invertBatch(g.map(b=>b.pz));return g.map((b,w)=>b.toAffine(y[w])).map(d.fromAffine)}static fromHex(g){let y=d.fromAffine(s(ae("pointHex",g)));return y.assertValidity(),y}static fromPrivateKey(g){return d.BASE.multiply(c(g))}static msm(g,y){return Jo(d,n,g,y)}_setWindowSize(g){p.setWindowSize(this,g)}assertValidity(){l(this)}hasEvenY(){let{y:g}=this.toAffine();if(t.isOdd)return!t.isOdd(g);throw new Error("Field doesn't support isOdd")}equals(g){u(g);let{px:y,py:b,pz:w}=this,{px:x,py:A,pz:_}=g,v=t.eql(t.mul(y,_),t.mul(x,w)),B=t.eql(t.mul(b,_),t.mul(A,w));return v&&B}negate(){return new d(this.px,t.neg(this.py),this.pz)}double(){let{a:g,b:y}=e,b=t.mul(y,Dh),{px:w,py:x,pz:A}=this,_=t.ZERO,v=t.ZERO,B=t.ZERO,T=t.mul(w,w),te=t.mul(x,x),V=t.mul(A,A),F=t.mul(w,x);return F=t.add(F,F),B=t.mul(w,A),B=t.add(B,B),_=t.mul(g,B),v=t.mul(b,V),v=t.add(_,v),_=t.sub(te,v),v=t.add(te,v),v=t.mul(_,v),_=t.mul(F,_),B=t.mul(b,B),V=t.mul(g,V),F=t.sub(T,V),F=t.mul(g,F),F=t.add(F,B),B=t.add(T,T),T=t.add(B,T),T=t.add(T,V),T=t.mul(T,F),v=t.add(v,T),V=t.mul(x,A),V=t.add(V,V),T=t.mul(V,F),_=t.sub(_,T),B=t.mul(V,te),B=t.add(B,B),B=t.add(B,B),new d(_,v,B)}add(g){u(g);let{px:y,py:b,pz:w}=this,{px:x,py:A,pz:_}=g,v=t.ZERO,B=t.ZERO,T=t.ZERO,te=e.a,V=t.mul(e.b,Dh),F=t.mul(y,x),R=t.mul(b,A),k=t.mul(w,_),L=t.add(y,b),S=t.add(x,A);L=t.mul(L,S),S=t.add(F,R),L=t.sub(L,S),S=t.add(y,w);let E=t.add(x,_);return S=t.mul(S,E),E=t.add(F,k),S=t.sub(S,E),E=t.add(b,w),v=t.add(A,_),E=t.mul(E,v),v=t.add(R,k),E=t.sub(E,v),T=t.mul(te,S),v=t.mul(V,k),T=t.add(v,T),v=t.sub(R,T),T=t.add(R,T),B=t.mul(v,T),R=t.add(F,F),R=t.add(R,F),k=t.mul(te,k),S=t.mul(V,S),R=t.add(R,k),k=t.sub(F,k),k=t.mul(te,k),S=t.add(S,k),F=t.mul(R,S),B=t.add(B,F),F=t.mul(E,S),v=t.mul(L,v),v=t.sub(v,F),F=t.mul(L,R),T=t.mul(E,T),T=t.add(T,F),new d(v,B,T)}subtract(g){return this.add(g.negate())}is0(){return this.equals(d.ZERO)}wNAF(g){return p.wNAFCached(this,g,d.normalizeZ)}multiplyUnsafe(g){$e("scalar",g,Mt,e.n);let y=d.ZERO;if(g===Mt)return y;if(g===ve)return this;let{endo:b}=e;if(!b)return p.unsafeLadder(this,g);let{k1neg:w,k1:x,k2neg:A,k2:_}=b.splitScalar(g),v=y,B=y,T=this;for(;x>Mt||_>Mt;)x&ve&&(v=v.add(T)),_&ve&&(B=B.add(T)),T=T.double(),x>>=ve,_>>=ve;return w&&(v=v.negate()),A&&(B=B.negate()),B=new d(t.mul(B.px,b.beta),B.py,B.pz),v.add(B)}multiply(g){let{endo:y,n:b}=e;$e("scalar",g,ve,b);let w,x;if(y){let{k1neg:A,k1:_,k2neg:v,k2:B}=y.splitScalar(g),{p:T,f:te}=this.wNAF(_),{p:V,f:F}=this.wNAF(B);T=p.constTimeNegate(A,T),V=p.constTimeNegate(v,V),V=new d(t.mul(V.px,y.beta),V.py,V.pz),w=T.add(V),x=te.add(F)}else{let{p:A,f:_}=this.wNAF(g);w=A,x=_}return d.normalizeZ([w,x])[0]}multiplyAndAddUnsafe(g,y,b){let w=d.BASE,x=(_,v)=>v===Mt||v===ve||!_.equals(w)?_.multiplyUnsafe(v):_.multiply(v),A=x(this,y).add(x(g,b));return A.is0()?void 0:A}toAffine(g){return f(this,g)}isTorsionFree(){let{h:g,isTorsionFree:y}=e;if(g===ve)return!0;if(y)return y(d,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:g,clearCofactor:y}=e;return g===ve?this:y?y(d,this):this.multiplyUnsafe(e.h)}toRawBytes(g=!0){return ot("isCompressed",g),this.assertValidity(),o(d,this,g)}toHex(g=!0){return ot("isCompressed",g),Bt(this.toRawBytes(g))}}d.BASE=new d(e.Gx,e.Gy,t.ONE),d.ZERO=new d(t.ZERO,t.ONE,t.ZERO);let h=e.nBitLength,p=Yo(d,e.endo?Math.ceil(h/2):h);return{CURVE:e,ProjectivePoint:d,normPrivateKeyToScalar:c,weierstrassEquation:i,isWithinCurveOrder:a}}function O0(r){let e=Mn(r);return ft(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function Mh(r){let e=O0(r),{Fp:t,n}=e,o=t.BYTES+1,s=2*t.BYTES+1;function i(k){return Y(k,n)}function a(k){return Xo(k,n)}let{ProjectivePoint:c,normPrivateKeyToScalar:u,weierstrassEquation:f,isWithinCurveOrder:l}=U0({...e,toBytes(k,L,S){let E=L.toAffine(),I=t.toBytes(E.x),N=kt;return ot("isCompressed",S),S?N(Uint8Array.from([L.hasEvenY()?2:3]),I):N(Uint8Array.from([4]),I,t.toBytes(E.y))},fromBytes(k){let L=k.length,S=k[0],E=k.subarray(1);if(L===o&&(S===2||S===3)){let I=It(E);if(!Rn(I,ve,t.ORDER))throw new Error("Point is not on curve");let N=f(I),M;try{M=t.sqrt(N)}catch(z){let K=z instanceof Error?": "+z.message:"";throw new Error("Point is not on curve"+K)}let U=(M&ve)===ve;return(S&1)===1!==U&&(M=t.neg(M)),{x:I,y:M}}else if(L===s&&S===4){let I=t.fromBytes(E.subarray(0,t.BYTES)),N=t.fromBytes(E.subarray(t.BYTES,2*t.BYTES));return{x:I,y:N}}else throw new Error(`Point of length ${L} was invalid. Expected ${o} compressed bytes or ${s} uncompressed bytes`)}}),d=k=>Bt(Wt(k,e.nByteLength));function h(k){let L=n>>ve;return k>L}function p(k){return h(k)?i(-k):k}let m=(k,L,S)=>It(k.slice(L,S));class g{constructor(L,S,E){this.r=L,this.s=S,this.recovery=E,this.assertValidity()}static fromCompact(L){let S=e.nByteLength;return L=ae("compactSignature",L,S*2),new g(m(L,0,S),m(L,S,2*S))}static fromDER(L){let{r:S,s:E}=Dt.toSig(ae("DER",L));return new g(S,E)}assertValidity(){$e("r",this.r,ve,n),$e("s",this.s,ve,n)}addRecoveryBit(L){return new g(this.r,this.s,L)}recoverPublicKey(L){let{r:S,s:E,recovery:I}=this,N=_(ae("msgHash",L));if(I==null||![0,1,2,3].includes(I))throw new Error("recovery id invalid");let M=I===2||I===3?S+e.n:S;if(M>=t.ORDER)throw new Error("recovery id 2 or 3 invalid");let U=I&1?"03":"02",$=c.fromHex(U+d(M)),z=a(M),K=i(-N*z),X=i(E*z),Q=c.BASE.multiplyAndAddUnsafe($,K,X);if(!Q)throw new Error("point at infinify");return Q.assertValidity(),Q}hasHighS(){return h(this.s)}normalizeS(){return this.hasHighS()?new g(this.r,i(-this.s),this.recovery):this}toDERRawBytes(){return ur(this.toDERHex())}toDERHex(){return Dt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return ur(this.toCompactHex())}toCompactHex(){return d(this.r)+d(this.s)}}let y={isValidPrivateKey(k){try{return u(k),!0}catch{return!1}},normPrivateKeyToScalar:u,randomPrivateKey:()=>{let k=oc(e.n);return pf(e.randomBytes(k),e.n)},precompute(k=8,L=c.BASE){return L._setWindowSize(k),L.multiply(BigInt(3)),L}};function b(k,L=!0){return c.fromPrivateKey(k).toRawBytes(L)}function w(k){let L=zt(k),S=typeof k=="string",E=(L||S)&&k.length;return L?E===o||E===s:S?E===2*o||E===2*s:k instanceof c}function x(k,L,S=!0){if(w(k))throw new Error("first arg must be private key");if(!w(L))throw new Error("second arg must be public key");return c.fromHex(L).multiply(u(k)).toRawBytes(S)}let A=e.bits2int||function(k){let L=It(k),S=k.length*8-e.nBitLength;return S>0?L>>BigInt(S):L},_=e.bits2int_modN||function(k){return i(A(k))},v=Dn(e.nBitLength);function B(k){return $e(`num < 2^${e.nBitLength}`,k,Mt,v),Wt(k,e.nByteLength)}function T(k,L,S=te){if(["recovered","canonical"].some(xe=>xe in S))throw new Error("sign() legacy options not supported");let{hash:E,randomBytes:I}=e,{lowS:N,prehash:M,extraEntropy:U}=S;N==null&&(N=!0),k=ae("msgHash",k),Rh(S),M&&(k=ae("prehashed msgHash",E(k)));let $=_(k),z=u(L),K=[B(z),B($)];if(U!=null&&U!==!1){let xe=U===!0?I(t.BYTES):U;K.push(ae("extraEntropy",xe))}let X=kt(...K),Q=$;function be(xe){let Ee=A(xe);if(!l(Ee))return;let Pe=a(Ee),de=c.BASE.multiply(Ee).toAffine(),He=i(de.x);if(He===Mt)return;let bt=i(Pe*i(Q+He*z));if(bt===Mt)return;let An=(de.x===He?0:2)|Number(de.y&ve),Sn=bt;return N&&h(bt)&&(Sn=p(bt),An^=1),new g(He,Sn,An)}return{seed:X,k2sig:be}}let te={lowS:e.lowS,prehash:!1},V={lowS:e.lowS,prehash:!1};function F(k,L,S=te){let{seed:E,k2sig:I}=T(k,L,S),N=e;return ec(N.hash.outputLen,N.nByteLength,N.hmac)(E,I)}c.BASE._setWindowSize(8);function R(k,L,S,E=V){let I=k;if(L=ae("msgHash",L),S=ae("publicKey",S),"strict"in E)throw new Error("options.strict was renamed to lowS");Rh(E);let{lowS:N,prehash:M}=E,U,$;try{if(typeof I=="string"||zt(I))try{U=g.fromDER(I)}catch(de){if(!(de instanceof Dt.Err))throw de;U=g.fromCompact(I)}else if(typeof I=="object"&&typeof I.r=="bigint"&&typeof I.s=="bigint"){let{r:de,s:He}=I;U=new g(de,He)}else throw new Error("PARSE");$=c.fromHex(S)}catch(de){if(de.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(N&&U.hasHighS())return!1;M&&(L=e.hash(L));let{r:z,s:K}=U,X=_(L),Q=a(K),be=i(X*Q),xe=i(z*Q),Ee=c.BASE.multiplyAndAddUnsafe($,be,xe)?.toAffine();return Ee?i(Ee.x)===z:!1}return{CURVE:e,getPublicKey:b,getSharedSecret:x,sign:F,verify:R,ProjectivePoint:c,Signature:g,utils:y}}function F0(r){return{hash:r,hmac:(e,...t)=>el(r,e,Ga(...t)),randomBytes:qr}}function Uh(r,e){let t=n=>Mh({...r,...F0(n)});return Object.freeze({...t(e),create:t})}var Vh=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),Oh=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),V0=BigInt(1),tl=BigInt(2),Fh=(r,e)=>(r+e/tl)/e;function H0(r){let e=Vh,t=BigInt(3),n=BigInt(6),o=BigInt(11),s=BigInt(22),i=BigInt(23),a=BigInt(44),c=BigInt(88),u=r*r*r%e,f=u*u*r%e,l=ne(f,t,e)*f%e,d=ne(l,t,e)*f%e,h=ne(d,tl,e)*u%e,p=ne(h,o,e)*h%e,m=ne(p,s,e)*p%e,g=ne(m,a,e)*m%e,y=ne(g,c,e)*g%e,b=ne(y,a,e)*m%e,w=ne(b,t,e)*f%e,x=ne(w,i,e)*p%e,A=ne(x,n,e)*u%e,_=ne(A,tl,e);if(!rl.eql(rl.sqr(_),r))throw new Error("Cannot find square root");return _}var rl=jt(Vh,void 0,void 0,{sqrt:H0}),Xe=Uh({a:BigInt(0),b:BigInt(7),Fp:rl,n:Oh,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{let e=Oh,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-V0*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),s=t,i=BigInt("0x100000000000000000000000000000000"),a=Fh(s*r,e),c=Fh(-n*r,e),u=Y(r-a*t-c*o,e),f=Y(-a*n-c*s,e),l=u>i,d=f>i;if(l&&(u=e-u),d&&(f=e-f),u>i||f>i)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:l,k1:u,k2neg:d,k2:f}}}},Zr),h2=BigInt(0);var d2=Xe.ProjectivePoint;function Fe(r,e){e==null&&(e=r.reduce((o,s)=>o+s.length,0));let t=Ie(e),n=0;for(let o of r)t.set(o,n),n+=o.length;return t}function nl(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}function Hh(r,e){let t=Wr.digest(e instanceof Uint8Array?e:e.subarray());if(nl(t))return t.then(({digest:n})=>Xe.sign(n,r).toDERRawBytes()).catch(n=>{throw new Yn(String(n))});try{return Xe.sign(t.digest,r).toDERRawBytes()}catch(n){throw new Yn(String(n))}}function $h(r,e,t){let n=Wr.digest(t instanceof Uint8Array?t:t.subarray());if(nl(n))return n.then(({digest:o})=>Xe.verify(e,o,r)).catch(o=>{throw new Jn(String(o))});try{return Xe.verify(e,n.digest,r)}catch(o){throw new Jn(String(o))}}var to=class{type="secp256k1";raw;_key;constructor(e){this._key=zh(e),this.raw=Kh(this._key)}toMultihash(){return St.digest(ht(this))}toCID(){return pe.createV1(114,this.toMultihash())}toString(){return W.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}verify(e,t){return $h(this._key,t,e)}},ei=class{type="secp256k1";raw;publicKey;constructor(e,t){this.raw=qh(e),this.publicKey=new to(t??Gh(e))}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}sign(e){return Hh(this.raw,e)}};function ol(r){return new to(r)}async function Wh(){let r=$0();return new ei(r)}function Kh(r){return Xe.ProjectivePoint.fromHex(r).toRawBytes(!0)}function qh(r){try{return Xe.getPublicKey(r,!0),r}catch(e){throw new _n(String(e))}}function zh(r){try{return Xe.ProjectivePoint.fromHex(r),r}catch(e){throw new Rr(String(e))}}function Gh(r){try{return Xe.getPublicKey(r,!0)}catch(e){throw new _n(String(e))}}function $0(){return Xe.utils.randomPrivateKey()}async function jh(r,e){if(r==="Ed25519")return Af();if(r==="secp256k1")return Wh();if(r==="RSA")return Qc(e??2048);throw new Ht}function nn(r){let{Type:e,Data:t}=dt.decode(r),n=t??new Uint8Array;switch(e){case ge.RSA:return Jc(n);case ge.Ed25519:return lc(n);case ge.secp256k1:return ol(n);default:throw new Ht}}function Zh(r){let{Type:e,Data:t}=dt.decode(r.digest),n=t??new Uint8Array;switch(e){case ge.Ed25519:return lc(n);case ge.secp256k1:return ol(n);default:throw new Ht}}function ht(r){return dt.encode({Type:ge[r.type],Data:r.raw})}var Xh=Symbol.for("nodejs.util.inspect.custom"),K0=114,ro=class{type;multihash;publicKey;string;constructor(e){this.type=e.type,this.multihash=e.multihash,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[No]=!0;toString(){return this.string==null&&(this.string=W.encode(this.multihash.bytes).slice(1)),this.string}toMultihash(){return this.multihash}toCID(){return pe.createV1(K0,this.multihash)}toJSON(){return this.toString()}equals(e){if(e==null)return!1;if(e instanceof Uint8Array)return ie(this.multihash.bytes,e);if(typeof e=="string")return this.toString()===e;if(e?.toMultihash()?.bytes!=null)return ie(this.multihash.bytes,e.toMultihash().bytes);throw new Error("not valid Id")}[Xh](){return`PeerId(${this.toString()})`}},no=class extends ro{type="RSA";publicKey;constructor(e){super({...e,type:"RSA"}),this.publicKey=e.publicKey}},oo=class extends ro{type="Ed25519";publicKey;constructor(e){super({...e,type:"Ed25519"}),this.publicKey=e.publicKey}},so=class extends ro{type="secp256k1";publicKey;constructor(e){super({...e,type:"secp256k1"}),this.publicKey=e.publicKey}},q0=2336,io=class{type="url";multihash;publicKey;url;constructor(e){this.url=e.toString(),this.multihash=St.digest(P(this.url))}[Xh](){return`PeerId(${this.url})`}[No]=!0;toString(){return this.toCID().toString()}toMultihash(){return this.multihash}toCID(){return pe.createV1(q0,this.toMultihash())}toJSON(){return this.toString()}equals(e){return e==null?!1:(e instanceof Uint8Array&&(e=H(e)),e.toString()===this.toString())}};var z0=114,Yh=2336;function yt(r,e){let t;if(r.charAt(0)==="1"||r.charAt(0)==="Q")t=rt(W.decode(`z${r}`));else{if(e==null)throw new D('Please pass a multibase decoder for strings that do not start with "1" or "Q"');t=rt(e.decode(r))}return on(t)}function sl(r){if(r.type==="Ed25519")return new oo({multihash:r.toCID().multihash,publicKey:r});if(r.type==="secp256k1")return new so({multihash:r.toCID().multihash,publicKey:r});if(r.type==="RSA")return new no({multihash:r.toCID().multihash,publicKey:r});throw new Ht}function Jh(r){return sl(r.publicKey)}function on(r){if(W0(r))return new no({multihash:r});if(G0(r))try{let e=Zh(r);if(e.type==="Ed25519")return new oo({multihash:r,publicKey:e});if(e.type==="secp256k1")return new so({multihash:r,publicKey:e})}catch{let t=H(r.digest);return new io(new URL(t))}throw new Oo("Supplied PeerID Multihash is invalid")}function ti(r){if(r?.multihash==null||r.version==null||r.version===1&&r.code!==z0&&r.code!==Yh)throw new Uo("Supplied PeerID CID is invalid");if(r.code===Yh){let e=H(r.multihash.digest);return new io(new URL(e))}return on(r.multihash)}function G0(r){return r.code===St.code}function W0(r){return r.code===Wr.code}var ri=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,n=e();return n===void 0&&(this.index=t),n}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,n){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,t,n,o){return this.readAtomically(()=>{let s=0,i=0,a=this.peekChar();if(a===void 0)return;let c=a==="0",u=2**(8*o)-1;for(;;){let f=this.readAtomically(()=>{let l=this.readChar();if(l===void 0)return;let d=Number.parseInt(l,e);if(!Number.isNaN(d))return d});if(f===void 0)break;if(s*=e,s+=f,s>u||(i+=1,t!==void 0&&i>t))return}if(i!==0)return!n&&c&&i>1?void 0:s})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let n=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[t]=n}return e})}readIPv6Addr(){let e=t=>{for(let n=0;n<t.length/2;n++){let o=n*2;if(n<t.length-3){let i=this.readSeparator(":",n,()=>this.readIPv4Addr());if(i!==void 0)return t[o]=i[0],t[o+1]=i[1],t[o+2]=i[2],t[o+3]=i[3],[o+4,!0]}let s=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(s===void 0)return[o,!1];t[o]=s>>8,t[o+1]=s&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[n,o]=e(t);if(n===16)return t;if(o||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let s=new Uint8Array(14),i=16-(n+2),[a]=e(s.subarray(0,i));return t.set(s.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var Qh=45,j0=15,sn=new ri;function il(r){if(!(r.length>j0))return sn.new(r).parseWith(()=>sn.readIPv4Addr())}function al(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>Qh))return sn.new(r).parseWith(()=>sn.readIPv6Addr())}function ni(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>Qh))return sn.new(r).parseWith(()=>sn.readIPAddr())}function an(r){return!!il(r)}function cn(r){return!!al(r)}function oi(r){return!!ni(r)}var EE=parseInt("0xFFFF",16),AE=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);var rd=an,Q0=cn,cl=function(r){let e=0;if(r=r.toString().trim(),rd(r)){let t=new Uint8Array(e+4);return r.split(/\./g).forEach(n=>{t[e++]=parseInt(n,10)&255}),t}if(Q0(r)){let t=r.split(":",8),n;for(n=0;n<t.length;n++){let s=rd(t[n]),i;s&&(i=cl(t[n]),t[n]=H(i.slice(0,2),"base16")),i!=null&&++n<8&&t.splice(n,0,H(i.slice(2,4),"base16"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(n=0;n<t.length&&t[n]!=="";n++);let s=[n,1];for(n=9-t.length;n>0;n--)s.push("0");t.splice.apply(t,s)}let o=new Uint8Array(e+16);for(n=0;n<t.length;n++){let s=parseInt(t[n],16);o[e++]=s>>8&255,o[e++]=s&255}return o}throw new Error("invalid ip address")},nd=function(r,e=0,t){e=~~e,t=t??r.length-e;let n=new DataView(r.buffer);if(t===4){let o=[];for(let s=0;s<t;s++)o.push(r[e+s]);return o.join(".")}if(t===16){let o=[];for(let s=0;s<t;s+=2)o.push(n.getUint16(e+s).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var ln={},ll={},ty=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];ty.forEach(r=>{let e=ry(...r);ll[e.code]=e,ln[e.name]=e});function ry(r,e,t,n,o){return{code:r,size:e,name:t,resolvable:!!n,path:!!o}}function Z(r){if(typeof r=="number"){if(ll[r]!=null)return ll[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(ln[r]!=null)return ln[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var oA=Z("ip4"),sA=Z("ip6"),iA=Z("ipcidr");function dl(r,e){switch(Z(r).code){case 4:case 41:return oy(e);case 42:return hl(e);case 6:case 273:case 33:case 132:return id(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return hl(e);case 421:return cy(e);case 444:return sd(e);case 445:return sd(e);case 466:return ay(e);case 481:return globalThis.encodeURIComponent(hl(e));default:return H(e,"base16")}}function pl(r,e){switch(Z(r).code){case 4:return od(e);case 41:return od(e);case 42:return fl(e);case 6:case 273:case 33:case 132:return ml(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return fl(e);case 421:return sy(e);case 444:return ly(e);case 445:return uy(e);case 466:return iy(e);case 481:return fl(globalThis.decodeURIComponent(e));default:return P(e,"base16")}}var ul=Object.values(Fn).map(r=>r.decoder),ny=function(){let r=ul[0].or(ul[1]);return ul.slice(2).forEach(e=>r=r.or(e)),r}();function od(r){if(!oi(r))throw new Error("invalid ip address");return cl(r)}function oy(r){let e=nd(r,0,r.length);if(e==null)throw new Error("ipBuff is required");if(!oi(e))throw new Error("invalid ip address");return e}function ml(r){let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function id(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function fl(r){let e=P(r),t=Uint8Array.from(Ce(e.length));return Fe([t,e],t.length+e.length)}function hl(r){let e=it(r);if(r=r.slice(he(e)),r.length!==e)throw new Error("inconsistent lengths");return H(r)}function sy(r){let e;r[0]==="Q"||r[0]==="1"?e=rt(W.decode(`z${r}`)).bytes:e=pe.parse(r).multihash.bytes;let t=Uint8Array.from(Ce(e.length));return Fe([t,e],t.length+e.length)}function iy(r){let e=ny.decode(r),t=Uint8Array.from(Ce(e.length));return Fe([t,e],t.length+e.length)}function ay(r){let e=it(r),t=r.slice(he(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+H(t,"base64url")}function cy(r){let e=it(r),t=r.slice(he(e));if(t.length!==e)throw new Error("inconsistent lengths");return H(t,"base58btc")}function ly(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);let t=Ge.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=ml(n);return Fe([t,o],t.length+o.length)}function uy(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);let t=Ge.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=ml(n);return Fe([t,o],t.length+o.length)}function sd(r){let e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=H(e,"base32"),o=id(t);return`${n}:${o}`}function ad(r){r=gl(r);let e=[],t=[],n=null,o=r.split("/").slice(1);if(o.length===1&&o[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let s=0;s<o.length;s++){let i=o[s],a=Z(i);if(a.size===0){e.push([a.code]),t.push([a.code]);continue}if(s++,s>=o.length)throw ld("invalid address: "+r);if(a.path===!0){n=gl(o.slice(s).join("/")),e.push([a.code,pl(a.code,n)]),t.push([a.code,n]);break}let c=pl(a.code,o[s]);e.push([a.code,c]),t.push([a.code,dl(a.code,c)])}return{string:cd(t),bytes:wl(e),tuples:e,stringTuples:t,path:n}}function yl(r){let e=[],t=[],n=null,o=0;for(;o<r.length;){let s=it(r,o),i=he(s),a=Z(s),c=fy(a,r.slice(o+i));if(c===0){e.push([s]),t.push([s]),o+=i;continue}let u=r.slice(o+i,o+i+c);if(o+=c+i,o>r.length)throw ld("Invalid address Uint8Array: "+H(r,"base16"));e.push([s,u]);let f=dl(s,u);if(t.push([s,f]),a.path===!0){n=f;break}}return{bytes:Uint8Array.from(r),string:cd(t),tuples:e,stringTuples:t,path:n}}function cd(r){let e=[];return r.map(t=>{let n=Z(t[0]);return e.push(n.name),t.length>1&&t[1]!=null&&e.push(t[1]),null}),gl(e.join("/"))}function wl(r){return Fe(r.map(e=>{let t=Z(e[0]),n=Uint8Array.from(Ce(t.code));return e.length>1&&e[1]!=null&&(n=Fe([n,e[1]])),n}))}function fy(r,e){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let t=it(e instanceof Uint8Array?e:Uint8Array.from(e));return t+he(t)}}function gl(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}function ld(r){return new Error("Error parsing address: "+r)}var hy=Symbol.for("nodejs.util.inspect.custom"),xl=Symbol.for("@multiformats/js-multiaddr/multiaddr"),dy=[Z("dns").code,Z("dns4").code,Z("dns6").code,Z("dnsaddr").code],bl=class extends Error{constructor(e="No available resolver"){super(e),this.name="NoAvailableResolverError"}},si=class r{bytes;#e;#t;#s;#a;[xl]=!0;constructor(e){e==null&&(e="");let t;if(e instanceof Uint8Array)t=yl(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);t=ad(e)}else if(tr(e))t=yl(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=t.bytes,this.#e=t.string,this.#t=t.tuples,this.#s=t.stringTuples,this.#a=t.path}toString(){return this.#e}toJSON(){return this.toString()}toOptions(){let e,t,n,o,s="",i=Z("tcp"),a=Z("udp"),c=Z("ip4"),u=Z("ip6"),f=Z("dns6"),l=Z("ip6zone");for(let[h,p]of this.stringTuples())h===l.code&&(s=`%${p??""}`),dy.includes(h)&&(t=i.name,o=443,n=`${p??""}${s}`,e=h===f.code?6:4),(h===i.code||h===a.code)&&(t=Z(h).name,o=parseInt(p??"")),(h===c.code||h===u.code)&&(t=Z(h).name,n=`${p??""}${s}`,e=h===u.code?6:4);if(e==null||t==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:t,port:o}}protos(){return this.#t.map(([e])=>Object.assign({},Z(e)))}protoCodes(){return this.#t.map(([e])=>e)}protoNames(){return this.#t.map(([e])=>Z(e).name)}tuples(){return this.#t}stringTuples(){return this.#s}encapsulate(e){return e=new r(e),new r(this.toString()+e.toString())}decapsulate(e){let t=e.toString(),n=this.toString(),o=n.lastIndexOf(t);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new r(n.slice(0,o))}decapsulateCode(e){let t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new r(wl(t.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,o])=>{n===ln.p2p.code&&e.push([n,o]),n===ln["p2p-circuit"].code&&(e=[])});let t=e.pop();if(t?.[1]!=null){let n=t[1];return n[0]==="Q"||n[0]==="1"?H(W.decode(`z${n}`),"base58btc"):H(pe.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#a}equals(e){return ie(this.bytes,e.bytes)}async resolve(e){let t=this.protos().find(s=>s.resolvable);if(t==null)return[this];let n=un.get(t.name);if(n==null)throw new bl(`no available resolver for ${t.name}`);return(await n(this,e)).map(s=>oe(s))}nodeAddress(){let e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){let t=(e??this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}[hy](){return`Multiaddr(${this.#e})`}};var un=new Map;function tr(r){return!!r?.[xl]}function oe(r){return new si(r)}var py=r=>r.toString().split("/").slice(1),ao=r=>({match:e=>e.length<1?!1:r(e[0])?e.slice(1):!1,pattern:"fn"}),G=r=>({match:e=>ao(t=>t===r).match(e),pattern:r}),ci=()=>({match:r=>ao(e=>typeof e=="string").match(r),pattern:"{string}"}),li=()=>({match:r=>ao(e=>!isNaN(parseInt(e))).match(r),pattern:"{number}"}),_e=()=>({match:r=>{if(r.length<2||r[0]!=="p2p"&&r[0]!=="ipfs")return!1;if(r[1].startsWith("Q")||r[1].startsWith("1"))try{W.decode(`z${r[1]}`)}catch{return!1}else return!1;return r.slice(2)},pattern:"/p2p/{peerid}"}),ii=()=>({match:r=>{if(r.length<2||r[0]!=="certhash")return!1;try{Bc.decode(r[1])}catch{return!1}return r.slice(2)},pattern:"/certhash/{certhash}"}),ye=r=>({match:e=>{let t=r.match(e);return t===!1?e:t},pattern:`optional(${r.pattern})`}),Ye=(...r)=>({match:e=>{let t;for(let n of r){let o=n.match(e);o!==!1&&(t==null||o.length<t.length)&&(t=o)}return t??!1},pattern:`or(${r.map(e=>e.pattern).join(", ")})`}),J=(...r)=>({match:e=>{for(let t of r){let n=t.match(e);if(n===!1)return!1;e=n}return e},pattern:`and(${r.map(e=>e.pattern).join(", ")})`});function ue(...r){function e(o){let s=py(o);for(let i of r){let a=i.match(s);if(a===!1)return!1;s=a}return s}function t(o){return e(o)!==!1}function n(o){let s=e(o);return s===!1?!1:s.length===0}return{matches:t,exactMatch:n}}var El=J(G("dns4"),ci()),Al=J(G("dns6"),ci()),Sl=J(G("dnsaddr"),ci()),ud=J(G("dns"),ci()),RA=ue(El),DA=ue(Al),MA=ue(Sl),UA=ue(Ye(ud,Sl,El,Al)),fd=J(G("ip4"),ao(an)),hd=J(G("ip6"),ao(cn)),dd=Ye(fd,hd),wt=Ye(dd,ud,El,Al,Sl),OA=ue(wt),FA=ue(fd),VA=ue(hd),HA=ue(dd),_l=J(wt,G("tcp"),li()),co=J(wt,G("udp"),li()),$A=ue(_l),KA=ue(co),Bl=J(co,G("quic")),ui=J(co,G("quic-v1")),my=Ye(Bl,ui),qA=ue(Bl),zA=ue(ui),vl=Ye(wt,_l,co,Bl,ui),pd=Ye(J(vl,G("ws"),ye(_e()))),GA=ue(pd),md=Ye(J(vl,G("wss"),ye(_e())),J(vl,G("tls"),G("ws"),ye(_e()))),WA=ue(md),gd=J(co,G("webrtc-direct"),ye(ii()),ye(ii()),ye(_e())),jA=ue(gd),yd=J(ui,G("webtransport"),ye(ii()),ye(ii()),ye(_e())),ZA=ue(yd),ai=Ye(pd,md,J(_l,ye(_e())),J(my,ye(_e())),J(wt,ye(_e())),gd,yd,_e()),XA=ue(ai),gy=J(ai,G("p2p-circuit"),_e()),lo=ue(gy),yy=Ye(J(ai,G("p2p-circuit"),G("webrtc"),ye(_e())),J(ai,G("webrtc"),ye(_e())),G("webrtc")),YA=ue(yy),wy=Ye(J(wt,G("tcp"),li(),G("http"),ye(_e())),J(wt,G("http"),ye(_e()))),JA=ue(wy),by=Ye(J(wt,G("tcp"),Ye(J(G("443"),G("http")),J(li(),G("https"))),ye(_e())),J(wt,G("tls"),G("http"),ye(_e())),J(wt,G("https"),ye(_e()))),QA=ue(by);var bd=ar(wd(),1),xy=["0.0.0.0/8","10.0.0.0/8","100.64.0.0/10","127.0.0.0/8","169.254.0.0/16","172.16.0.0/12","192.0.0.0/24","192.0.0.0/29","192.0.0.8/32","192.0.0.9/32","192.0.0.10/32","192.0.0.170/32","192.0.0.171/32","192.0.2.0/24","192.31.196.0/24","192.52.193.0/24","192.88.99.0/24","192.168.0.0/16","192.175.48.0/24","198.18.0.0/15","198.51.100.0/24","203.0.113.0/24","240.0.0.0/4","255.255.255.255/32"],vy=xy.map(r=>new bd.Netmask(r));function Il(r){for(let e of vy)if(e.contains(r))return!0;return!1}function Ey(r){return/^::ffff:([0-9a-fA-F]{1,4}):([0-9a-fA-F]{1,4})$/.test(r)}function Ay(r){let e=r.split(":");if(e.length<2)return!1;let t=e[e.length-1].padStart(4,"0"),n=e[e.length-2].padStart(4,"0"),o=`${parseInt(n.substring(0,2),16)}.${parseInt(n.substring(2),16)}.${parseInt(t.substring(0,2),16)}.${parseInt(t.substring(2),16)}`;return Il(o)}function Sy(r){return/^::ffff:([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)}function _y(r){let e=r.split(":"),t=e[e.length-1];return Il(t)}function By(r){return/^::$/.test(r)||/^::1$/.test(r)||/^64:ff9b::([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)||/^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^f[c-d]([0-9a-fA-F]{2,2}):/i.test(r)||/^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(r)||/^ff([0-9a-fA-F]{2,2}):/i.test(r)}function fi(r){return an(r)?Il(r):Ey(r)?Ay(r):Sy(r)?_y(r):cn(r)?By(r):void 0}function kl(r){try{let{address:e}=r.nodeAddress();return!!fi(e)}catch{return!0}}function Iy(r,e){let t=kl(r.multiaddr),n=kl(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function ky(r,e){return r.isCertified&&!e.isCertified?-1:!r.isCertified&&e.isCertified?1:0}function Cy(r,e){let t=lo.exactMatch(r.multiaddr),n=lo.exactMatch(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function fn(r,e){let t=Iy(r,e);if(t!==0)return t;let n=Cy(r,e);return n!==0?n:ky(r,e)}var fe=class extends Event{type;detail;constructor(e,t){super(e),this.type=e,this.detail=t}};var Tl=ar(vd(),1);var ho=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},Ll=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}},Ed=r=>globalThis.DOMException===void 0?new Ll(r):new DOMException(r),Ad=r=>{let e=r.reason===void 0?Ed("This operation was aborted."):r.reason;return e instanceof Error?e:Ed(e)};function po(r,e){let{milliseconds:t,fallback:n,message:o,customTimers:s={setTimeout,clearTimeout}}=e,i,c=new Promise((u,f)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){let{signal:d}=e;d.aborted&&f(Ad(d)),d.addEventListener("abort",()=>{f(Ad(d))})}if(t===Number.POSITIVE_INFINITY){r.then(u,f);return}let l=new ho;i=s.setTimeout.call(void 0,()=>{if(n){try{u(n())}catch(d){f(d)}return}typeof r.cancel=="function"&&r.cancel(),o===!1?u():o instanceof Error?f(o):(l.message=o??`Promise timed out after ${t} milliseconds`,f(l))},t),(async()=>{try{u(await r)}catch(d){f(d)}})()}).finally(()=>{c.clear()});return c.clear=()=>{s.clearTimeout.call(void 0,i),i=void 0},c}function Nl(r,e,t){let n=0,o=r.length;for(;o>0;){let s=Math.trunc(o/2),i=n+s;t(r[i],e)<=0?(n=++i,o-=s+1):o=s}return n}var mo=class{#e=[];enqueue(e,t){t={priority:0,...t};let n={priority:t.priority,run:e};if(this.size&&this.#e[this.size-1].priority>=t.priority){this.#e.push(n);return}let o=Nl(this.#e,n,(s,i)=>i.priority-s.priority);this.#e.splice(o,0,n)}dequeue(){return this.#e.shift()?.run}filter(e){return this.#e.filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return this.#e.length}};var rr=class extends Tl.default{#e;#t;#s=0;#a;#c;#p=0;#n;#l;#r;#m;#o=0;#u;#i;#g;timeout;constructor(e){if(super(),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:mo,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${e.intervalCap?.toString()??""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${e.interval?.toString()??""}\` (${typeof e.interval})`);this.#e=e.carryoverConcurrencyCount,this.#t=e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,this.#a=e.intervalCap,this.#c=e.interval,this.#r=new e.queueClass,this.#m=e.queueClass,this.concurrency=e.concurrency,this.timeout=e.timeout,this.#g=e.throwOnTimeout===!0,this.#i=e.autoStart===!1}get#b(){return this.#t||this.#s<this.#a}get#x(){return this.#o<this.#u}#v(){this.#o--,this.#f(),this.emit("next")}#E(){this.#w(),this.#y(),this.#l=void 0}get#A(){let e=Date.now();if(this.#n===void 0){let t=this.#p-e;if(t<0)this.#s=this.#e?this.#o:0;else return this.#l===void 0&&(this.#l=setTimeout(()=>{this.#E()},t)),!0}return!1}#f(){if(this.#r.size===0)return this.#n&&clearInterval(this.#n),this.#n=void 0,this.emit("empty"),this.#o===0&&this.emit("idle"),!1;if(!this.#i){let e=!this.#A;if(this.#b&&this.#x){let t=this.#r.dequeue();return t?(this.emit("active"),t(),e&&this.#y(),!0):!1}}return!1}#y(){this.#t||this.#n!==void 0||(this.#n=setInterval(()=>{this.#w()},this.#c),this.#p=Date.now()+this.#c)}#w(){this.#s===0&&this.#o===0&&this.#n&&(clearInterval(this.#n),this.#n=void 0),this.#s=this.#e?this.#o:0,this.#h()}#h(){for(;this.#f(););}get concurrency(){return this.#u}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);this.#u=e,this.#h()}async#S(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(e.reason)},{once:!0})})}async add(e,t={}){return t={timeout:this.timeout,throwOnTimeout:this.#g,...t},new Promise((n,o)=>{this.#r.enqueue(async()=>{this.#o++,this.#s++;try{t.signal?.throwIfAborted();let s=e({signal:t.signal});t.timeout&&(s=po(Promise.resolve(s),{milliseconds:t.timeout})),t.signal&&(s=Promise.race([s,this.#S(t.signal)]));let i=await s;n(i),this.emit("completed",i)}catch(s){if(s instanceof ho&&!t.throwOnTimeout){n();return}o(s),this.emit("error",s)}finally{this.#v()}},t),this.emit("add"),this.#f()})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return this.#i?(this.#i=!1,this.#h(),this):this}pause(){this.#i=!0}clear(){this.#r=new this.#m}async onEmpty(){this.#r.size!==0&&await this.#d("empty")}async onSizeLessThan(e){this.#r.size<e||await this.#d("next",()=>this.#r.size<e)}async onIdle(){this.#o===0&&this.#r.size===0||await this.#d("idle")}async#d(e,t){return new Promise(n=>{let o=()=>{t&&!t()||(this.off(e,o),n())};this.on(e,o)})}get size(){return this.#r.size}sizeBy(e){return this.#r.filter(e).length}get pending(){return this.#o}get isPaused(){return this.#i}};function di(r){let e=[je.A];return r==null?e:Array.isArray(r)?r.length===0?e:r:[r]}var Pl=60;function pi(r){return{Status:r.Status??0,TC:r.TC??r.flag_tc??!1,RD:r.RD??r.flag_rd??!1,RA:r.RA??r.flag_ra??!1,AD:r.AD??r.flag_ad??!1,CD:r.CD??r.flag_cd??!1,Question:(r.Question??r.questions??[]).map(e=>({name:e.name,type:je[e.type]})),Answer:(r.Answer??r.answers??[]).map(e=>({name:e.name,type:je[e.type],TTL:e.TTL??e.ttl??Pl,data:e.data instanceof Uint8Array?H(e.data):e.data}))}}var Ny=4;function Rl(r,e={}){let t=new rr({concurrency:e.queryConcurrency??Ny});return async(n,o={})=>{let s=new URLSearchParams;s.set("name",n),di(o.types).forEach(a=>{s.append("type",je[a])}),o.onProgress?.(new fe("dns:query",{detail:n}));let i=await t.add(async()=>{let a=await fetch(`${r}?${s}`,{headers:{accept:"application/dns-json"},signal:o?.signal});if(a.status!==200)throw new Error(`Unexpected HTTP status: ${a.status} - ${a.statusText}`);let c=pi(await a.json());return o.onProgress?.(new fe("dns:response",{detail:c})),c},{signal:o.signal});if(i==null)throw new Error("No DNS response received");return i}}function Sd(){return[Rl("https://cloudflare-dns.com/dns-query"),Rl("https://dns.google/resolve")]}var Id=ar(Bd(),1);var Dl=class{lru;constructor(e){this.lru=(0,Id.default)(e)}get(e,t){let n=!0,o=[];for(let s of t){let i=this.getAnswers(e,s);if(i.length===0){n=!1;break}o.push(...i)}if(n)return pi({answers:o})}getAnswers(e,t){let n=`${e.toLowerCase()}-${t}`,o=this.lru.get(n);if(o!=null){let s=o.filter(i=>i.expires>Date.now()).map(({expires:i,value:a})=>({...a,TTL:Math.round((i-Date.now())/1e3),type:je[a.type]}));return s.length===0&&this.lru.remove(n),s}return[]}add(e,t){let n=`${e.toLowerCase()}-${t.type}`,o=this.lru.get(n)??[];o.push({expires:Date.now()+(t.TTL??Pl)*1e3,value:t}),this.lru.set(n,o)}remove(e,t){let n=`${e.toLowerCase()}-${t}`;this.lru.remove(n)}clear(){this.lru.clear()}};function kd(r){return new Dl(r)}var Py=1e3,mi=class{resolvers;cache;constructor(e){this.resolvers={},this.cache=kd(e.cacheSize??Py),Object.entries(e.resolvers??{}).forEach(([t,n])=>{Array.isArray(n)||(n=[n]),t.endsWith(".")||(t=`${t}.`),this.resolvers[t]=n}),this.resolvers["."]==null&&(this.resolvers["."]=Sd())}async query(e,t={}){let n=di(t.types),o=t.cached!==!1?this.cache.get(e,n):void 0;if(o!=null)return t.onProgress?.(new fe("dns:cache",{detail:o})),o;let s=`${e.split(".").pop()}.`,i=(this.resolvers[s]??this.resolvers["."]).sort(()=>Math.random()>.5?-1:1),a=[];for(let c of i){if(t.signal?.aborted===!0)break;try{let u=await c(e,{...t,types:n});for(let f of u.Answer)this.cache.add(e,f);return u}catch(u){a.push(u),t.onProgress?.(new fe("dns:error",{detail:u}))}}throw a.length===1?a[0]:new AggregateError(a,`DNS lookup of ${e} ${n} failed`)}};var je;(function(r){r[r.A=1]="A",r[r.CNAME=5]="CNAME",r[r.TXT=16]="TXT",r[r.AAAA=28]="AAAA"})(je||(je={}));function Cd(r={}){return new mi(r)}var Ry=32,{code:Dy}=Z("dnsaddr"),Ml=class extends Error{constructor(e="Max recursive depth reached"){super(e),this.name="RecursionLimitError"}},br=async function(e,t={}){let n=t.maxRecursiveDepth??Ry;if(n===0)throw new Ml("Max recursive depth reached");let[,o]=e.stringTuples().find(([u])=>u===Dy)??[],i=await(t?.dns??Cd()).query(`_dnsaddr.${o}`,{signal:t?.signal,types:[je.TXT]}),a=e.getPeerId(),c=[];for(let u of i.Answer){let f=u.data.replace(/["']/g,"").trim().split("=")[1];if(f==null||a!=null&&!f.includes(a))continue;let l=oe(f);if(f.startsWith("/dnsaddr")){let d=await l.resolve({...t,maxRecursiveDepth:n-1});c.push(...d.map(h=>h.toString()))}else c.push(l.toString())}return c};var Od=ar(Ud(),1),wi=Od.default;var Hy={addresses:{listen:[],announce:[],noAnnounce:[],announceFilter:r=>r},connectionManager:{resolvers:{dnsaddr:br},addressSorter:fn},transportManager:{faultTolerance:Ft.FATAL_ALL}};async function Fd(r){let e=wi(Hy,r);if(e.connectionProtector===null&&globalThis.process?.env?.LIBP2P_FORCE_PNET!=null)throw new D("Private network is enforced, but no protector was provided");return e}function $y(r,e){try{if(typeof r=="string"&&r.length>0)return Ky(r);if(typeof r=="number"&&isFinite(r))return e?.long?zy(r):qy(r);throw new Error("Value is not a string or number.")}catch(t){let n=Gy(t)?`${t.message}. value=${JSON.stringify(r)}`:"An unknown error has occured.";throw new Error(n)}}function Ky(r){if(r=String(r),r.length>100)throw new Error("Value exceeds the maximum length of 100 characters.");let e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(r);if(!e)return NaN;let t=parseFloat(e[1]),n=(e[2]||"ms").toLowerCase();switch(n){case"years":case"year":case"yrs":case"yr":case"y":return t*315576e5;case"weeks":case"week":case"w":return t*6048e5;case"days":case"day":case"d":return t*864e5;case"hours":case"hour":case"hrs":case"hr":case"h":return t*36e5;case"minutes":case"minute":case"mins":case"min":case"m":return t*6e4;case"seconds":case"second":case"secs":case"sec":case"s":return t*1e3;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t;default:throw new Error(`The unit ${n} was matched, but no matching case exists.`)}}var xi=$y;function qy(r){let e=Math.abs(r);return e>=864e5?`${Math.round(r/864e5)}d`:e>=36e5?`${Math.round(r/36e5)}h`:e>=6e4?`${Math.round(r/6e4)}m`:e>=1e3?`${Math.round(r/1e3)}s`:`${r}ms`}function zy(r){let e=Math.abs(r);return e>=864e5?bi(r,e,864e5,"day"):e>=36e5?bi(r,e,36e5,"hour"):e>=6e4?bi(r,e,6e4,"minute"):e>=1e3?bi(r,e,1e3,"second"):`${r} ms`}function bi(r,e,t,n){let o=e>=t*1.5;return`${Math.round(r/t)} ${n}${o?"s":""}`}function Gy(r){return typeof r=="object"&&r!==null&&"message"in r}function Ol(r){t.debug=t,t.default=t,t.coerce=c,t.disable=s,t.enable=o,t.enabled=i,t.humanize=xi,t.destroy=u,Object.keys(r).forEach(f=>{t[f]=r[f]}),t.names=[],t.skips=[],t.formatters={};function e(f){let l=0;for(let d=0;d<f.length;d++)l=(l<<5)-l+f.charCodeAt(d),l|=0;return t.colors[Math.abs(l)%t.colors.length]}t.selectColor=e;function t(f){let l,d=null,h,p;function m(...g){if(!m.enabled)return;let y=m,b=Number(new Date),w=b-(l||b);y.diff=w,y.prev=l,y.curr=b,l=b,g[0]=t.coerce(g[0]),typeof g[0]!="string"&&g.unshift("%O");let x=0;g[0]=g[0].replace(/%([a-zA-Z%])/g,(_,v)=>{if(_==="%%")return"%";x++;let B=t.formatters[v];if(typeof B=="function"){let T=g[x];_=B.call(y,T),g.splice(x,1),x--}return _}),t.formatArgs.call(y,g),(y.log||t.log).apply(y,g)}return m.namespace=f,m.useColors=t.useColors(),m.color=t.selectColor(f),m.extend=n,m.destroy=t.destroy,Object.defineProperty(m,"enabled",{enumerable:!0,configurable:!1,get:()=>d!==null?d:(h!==t.namespaces&&(h=t.namespaces,p=t.enabled(f)),p),set:g=>{d=g}}),typeof t.init=="function"&&t.init(m),m}function n(f,l){let d=t(this.namespace+(typeof l>"u"?":":l)+f);return d.log=this.log,d}function o(f){t.save(f),t.namespaces=f,t.names=[],t.skips=[];let l,d=(typeof f=="string"?f:"").split(/[\s,]+/),h=d.length;for(l=0;l<h;l++)d[l]&&(f=d[l].replace(/\*/g,".*?"),f[0]==="-"?t.skips.push(new RegExp("^"+f.substr(1)+"$")):t.names.push(new RegExp("^"+f+"$")))}function s(){let f=[...t.names.map(a),...t.skips.map(a).map(l=>"-"+l)].join(",");return t.enable(""),f}function i(f){if(f[f.length-1]==="*")return!0;let l,d;for(l=0,d=t.skips.length;l<d;l++)if(t.skips[l].test(f))return!1;for(l=0,d=t.names.length;l<d;l++)if(t.names[l].test(f))return!0;return!1}function a(f){return f.toString().substring(2,f.toString().length-2).replace(/\.\*\?$/,"*")}function c(f){return f instanceof Error?f.stack??f.message:f}function u(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return t.setupFormatters(t.formatters),t.enable(t.load()),t}var vi=Qy(),Wy=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function jy(){return typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/(edge|trident)\/(\d+)/)!=null?!1:typeof document<"u"&&document.documentElement?.style?.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/firefox\/(\d+)/)!=null&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/applewebkit\/(\d+)/)}function Zy(r){if(r[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+r[0]+(this.useColors?"%c ":" ")+"+"+xi(this.diff),!this.useColors)return;let e="color: "+this.color;r.splice(1,0,e,"color: inherit");let t=0,n=0;r[0].replace(/%[a-zA-Z%]/g,o=>{o!=="%%"&&(t++,o==="%c"&&(n=t))}),r.splice(n,0,e)}var Xy=console.debug??console.log??(()=>{});function Yy(r){try{r?vi?.setItem("debug",r):vi?.removeItem("debug")}catch{}}function Jy(){let r;try{r=vi?.getItem("debug")}catch{}return!r&&typeof process<"u"&&"env"in process&&(r=process.env.DEBUG),r}function Qy(){try{return localStorage}catch{}}function ew(r){r.j=function(e){try{return JSON.stringify(e)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}}var Vd=Ol({formatArgs:Zy,save:Yy,load:Jy,useColors:jy,setupFormatters:ew,colors:Wy,storage:vi,log:Xy});var ze=Vd;ze.formatters.b=r=>r==null?"undefined":W.baseEncode(r);ze.formatters.t=r=>r==null?"undefined":Ge.baseEncode(r);ze.formatters.m=r=>r==null?"undefined":_c.baseEncode(r);ze.formatters.p=r=>r==null?"undefined":r.toString();ze.formatters.c=r=>r==null?"undefined":r.toString();ze.formatters.k=r=>r==null?"undefined":r.toString();ze.formatters.a=r=>r==null?"undefined":r.toString();ze.formatters.e=r=>r==null?"undefined":r.stack??r.message;function tw(r){let e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=r,e.destroy=()=>!0,e.extend=()=>e,e}function Ei(){return{forComponent(r){return rw(r)}}}function rw(r){let e=tw(`${r}:trace`);return ze.enabled(`${r}:trace`)&&ze.names.map(t=>t.toString()).find(t=>t.includes(":trace"))!=null&&(e=ze(`${r}:trace`)),Object.assign(ze(r),{error:ze(`${r}:error`),trace:e})}function xr(r,e){let t={[Symbol.iterator]:()=>t,next:()=>{let n=r.next(),o=n.value;return n.done===!0||o==null?{done:!0,value:void 0}:{done:!1,value:e(o)}}};return t}function Ai(r){let e=rt(W.decode(`z${r}`));return on(e)}var lt=class{map;constructor(e){if(this.map=new Map,e!=null)for(let[t,n]of e.entries())this.map.set(t.toString(),{key:t,value:n})}[Symbol.iterator](){return this.entries()}clear(){this.map.clear()}delete(e){return this.map.delete(e.toString())}entries(){return xr(this.map.entries(),e=>[e[1].key,e[1].value])}forEach(e){this.map.forEach((t,n)=>{e(t.value,t.key,this)})}get(e){return this.map.get(e.toString())?.value}has(e){return this.map.has(e.toString())}set(e,t){this.map.set(e.toString(),{key:e,value:t})}keys(){return xr(this.map.values(),e=>e.key)}values(){return xr(this.map.values(),e=>e.value)}get size(){return this.map.size}};var vr=class r{set;constructor(e){if(this.set=new Set,e!=null)for(let t of e)this.set.add(t.toString())}get size(){return this.set.size}[Symbol.iterator](){return this.values()}add(e){this.set.add(e.toString())}clear(){this.set.clear()}delete(e){this.set.delete(e.toString())}entries(){return xr(this.set.entries(),e=>{let t=Ai(e[0]);return[t,t]})}forEach(e){this.set.forEach(t=>{let n=Ai(t);e(n,n,this)})}has(e){return this.set.has(e.toString())}values(){return xr(this.set.values(),e=>Ai(e))}intersection(e){let t=new r;for(let n of e)this.has(n)&&t.add(n);return t}difference(e){let t=new r;for(let n of this)e.has(n)||t.add(n);return t}union(e){let t=new r;for(let n of e)t.add(n);for(let n of this)t.add(n);return t}};var zd=Symbol.for("@achingbrain/uint8arraylist");function qd(r,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let t=0;for(let n of r){let o=t+n.byteLength;if(e<o)return{buf:n,index:e-t};t=o}throw new RangeError("index is out of bounds")}function _i(r){return!!r?.[zd]}var we=class r{bufs;length;[zd]=!0;constructor(...e){this.bufs=[],this.length=0,e.length>0&&this.appendAll(e)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...e){this.appendAll(e)}appendAll(e){let t=0;for(let n of e)if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.push(n);else if(_i(n))t+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}prepend(...e){this.prependAll(e)}prependAll(e){let t=0;for(let n of e.reverse())if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.unshift(n);else if(_i(n))t+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}get(e){let t=qd(this.bufs,e);return t.buf[t.index]}set(e,t){let n=qd(this.bufs,e);n.buf[n.index]=t}write(e,t=0){if(e instanceof Uint8Array)for(let n=0;n<e.length;n++)this.set(t+n,e[n]);else if(_i(e))for(let n=0;n<e.length;n++)this.set(t+n,e.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(e){if(e=Math.trunc(e),!(Number.isNaN(e)||e<=0)){if(e===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(e>=this.bufs[0].byteLength)e-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(e),this.length-=e;break}}}slice(e,t){let{bufs:n,length:o}=this._subList(e,t);return Fe(n,o)}subarray(e,t){let{bufs:n,length:o}=this._subList(e,t);return n.length===1?n[0]:Fe(n,o)}sublist(e,t){let{bufs:n,length:o}=this._subList(e,t),s=new r;return s.length=o,s.bufs=[...n],s}_subList(e,t){if(e=e??0,t=t??this.length,e<0&&(e=this.length+e),t<0&&(t=this.length+t),e<0||t>this.length)throw new RangeError("index is out of bounds");if(e===t)return{bufs:[],length:0};if(e===0&&t===this.length)return{bufs:this.bufs,length:this.length};let n=[],o=0;for(let s=0;s<this.bufs.length;s++){let i=this.bufs[s],a=o,c=a+i.byteLength;if(o=c,e>=c)continue;let u=e>=a&&e<c,f=t>a&&t<=c;if(u&&f){if(e===a&&t===c){n.push(i);break}let l=e-a;n.push(i.subarray(l,l+(t-e)));break}if(u){if(e===0){n.push(i);continue}n.push(i.subarray(e-a));continue}if(f){if(t===c){n.push(i);break}n.push(i.subarray(0,t-a));break}n.push(i)}return{bufs:n,length:t-e}}indexOf(e,t=0){if(!_i(e)&&!(e instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let n=e instanceof Uint8Array?e:e.subarray();if(t=Number(t??0),isNaN(t)&&(t=0),t<0&&(t=this.length+t),t<0&&(t=0),e.length===0)return t>this.length?this.length:t;let o=n.byteLength;if(o===0)throw new TypeError("search must be at least 1 byte long");let s=256,i=new Int32Array(s);for(let l=0;l<s;l++)i[l]=-1;for(let l=0;l<o;l++)i[n[l]]=l;let a=i,c=this.byteLength-n.byteLength,u=n.byteLength-1,f;for(let l=t;l<=c;l+=f){f=0;for(let d=u;d>=0;d--){let h=this.get(l+d);if(n[d]!==h){f=Math.max(1,d-a[h]);break}}if(f===0)return l}return-1}getInt8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getInt8(0)}setInt8(e,t){let n=Ie(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,t),this.write(n,e)}getInt16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,t)}setInt16(e,t,n){let o=ce(2);new DataView(o.buffer,o.byteOffset,o.byteLength).setInt16(0,t,n),this.write(o,e)}getInt32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,t)}setInt32(e,t,n){let o=ce(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setInt32(0,t,n),this.write(o,e)}getBigInt64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,t)}setBigInt64(e,t,n){let o=ce(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setBigInt64(0,t,n),this.write(o,e)}getUint8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getUint8(0)}setUint8(e,t){let n=Ie(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,t),this.write(n,e)}getUint16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,t)}setUint16(e,t,n){let o=ce(2);new DataView(o.buffer,o.byteOffset,o.byteLength).setUint16(0,t,n),this.write(o,e)}getUint32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,t)}setUint32(e,t,n){let o=ce(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setUint32(0,t,n),this.write(o,e)}getBigUint64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,t)}setBigUint64(e,t,n){let o=ce(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setBigUint64(0,t,n),this.write(o,e)}getFloat32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,t)}setFloat32(e,t,n){let o=ce(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setFloat32(0,t,n),this.write(o,e)}getFloat64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,t)}setFloat64(e,t,n){let o=ce(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setFloat64(0,t,n),this.write(o,e)}equals(e){if(e==null||!(e instanceof r)||e.bufs.length!==this.bufs.length)return!1;for(let t=0;t<this.bufs.length;t++)if(!ie(this.bufs[t],e.bufs[t]))return!1;return!0}static fromUint8Arrays(e,t){let n=new r;return n.bufs=e,t==null&&(t=e.reduce((o,s)=>o+s.byteLength,0)),n.length=t,n}};var Fl=64,ut=class{fp;h;seed;constructor(e,t,n,o=2){if(o>Fl)throw new TypeError("Invalid Fingerprint Size");let s=t.hashV(e,n),i=ce(o);for(let a=0;a<i.length;a++)i[a]=s[a];i.length===0&&(i[0]=7),this.fp=i,this.h=t,this.seed=n}hash(){return this.h.hash(this.fp,this.seed)}equals(e){return e?.fp instanceof Uint8Array?ie(this.fp,e.fp):!1}};function Er(r,e){return Math.floor(Math.random()*(e-r))+r}var Ar=class{contents;constructor(e){this.contents=new Array(e).fill(null)}has(e){if(!(e instanceof ut))throw new TypeError("Invalid Fingerprint");return this.contents.some(t=>e.equals(t))}add(e){if(!(e instanceof ut))throw new TypeError("Invalid Fingerprint");for(let t=0;t<this.contents.length;t++)if(this.contents[t]==null)return this.contents[t]=e,!0;return!0}swap(e){if(!(e instanceof ut))throw new TypeError("Invalid Fingerprint");let t=Er(0,this.contents.length-1),n=this.contents[t];return this.contents[t]=e,n}remove(e){if(!(e instanceof ut))throw new TypeError("Invalid Fingerprint");let t=this.contents.findIndex(n=>e.equals(n));return t>-1?(this.contents[t]=null,!0):!1}};var Vl={32:16777619n,64:1099511628211n,128:309485009821345068724781371n,256:374144419156711147060143317175368453031918731002211n,512:35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852759n,1024:5016456510113118655434598811035278955030765345404790744303017523831112055108147451509157692220295382716162651878526895249385292291816524375083746691371804094271873160484737966720260389217684476157468082573n},Gd={32:2166136261n,64:14695981039346656037n,128:144066263297769815596495629667062367629n,256:100029257958052580907070968620625704837092796014241193945225284501741471925557n,512:9659303129496669498009435400716310466090418745672637896108374329434462657994582932197716438449813051892206539805784495328239340083876191928701583869517785n,1024:14197795064947621068722070641403218320880622795441933960878474914617582723252296732303717722150864096521202355549365628174669108571814760471015076148029755969804077320157692458563003215304957150157403644460363550505412711285966361610267868082893823963790439336411086884584107735010676915n},Wd=new globalThis.TextEncoder;function nw(r,e){let t=Vl[e],n=Gd[e];for(let o=0;o<r.length;o++)n^=BigInt(r[o]),n=BigInt.asUintN(e,n*t);return n}function ow(r,e,t){if(t.length===0)throw new Error("The `utf8Buffer` option must have a length greater than zero");let n=Vl[e],o=Gd[e],s=r;for(;s.length>0;){let i=Wd.encodeInto(s,t);s=s.slice(i.read);for(let a=0;a<i.written;a++)o^=BigInt(t[a]),o=BigInt.asUintN(e,o*n)}return o}function Hl(r,{size:e=32,utf8Buffer:t}={}){if(!Vl[e])throw new Error("The `size` option must be one of 32, 64, 128, 256, 512, or 1024");if(typeof r=="string"){if(t)return ow(r,e,t);r=Wd.encode(r)}return nw(r,e)}var sw=ar(Kd(),1);var yo={hash:r=>Number(Hl(r,{size:32})),hashV:(r,e)=>iw(yo.hash(r,e))};function iw(r){let e=r.toString(16);return e.length%2===1&&(e=`0${e}`),P(e,"base16")}var aw=500,wo=class{bucketSize;filterSize;fingerprintSize;buckets;count;hash;seed;constructor(e){this.filterSize=e.filterSize,this.bucketSize=e.bucketSize??4,this.fingerprintSize=e.fingerprintSize??2,this.count=0,this.buckets=[],this.hash=e.hash??yo,this.seed=e.seed??Er(0,Math.pow(2,10))}add(e){typeof e=="string"&&(e=P(e));let t=new ut(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,o=(n^t.hash())%this.filterSize;if(this.buckets[n]==null&&(this.buckets[n]=new Ar(this.bucketSize)),this.buckets[o]==null&&(this.buckets[o]=new Ar(this.bucketSize)),this.buckets[n].add(t)||this.buckets[o].add(t))return this.count++,!0;let s=[n,o],i=s[Er(0,s.length-1)];this.buckets[i]==null&&(this.buckets[i]=new Ar(this.bucketSize));for(let a=0;a<aw;a++){let c=this.buckets[i].swap(t);if(c!=null&&(i=(i^c.hash())%this.filterSize,this.buckets[i]==null&&(this.buckets[i]=new Ar(this.bucketSize)),this.buckets[i].add(c)))return this.count++,!0}return!1}has(e){typeof e=="string"&&(e=P(e));let t=new ut(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,o=this.buckets[n]?.has(t)??!1;if(o)return o;let s=(n^t.hash())%this.filterSize;return this.buckets[s]?.has(t)??!1}remove(e){typeof e=="string"&&(e=P(e));let t=new ut(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,o=this.buckets[n]?.remove(t)??!1;if(o)return this.count--,o;let s=(n^t.hash())%this.filterSize,i=this.buckets[s]?.remove(t)??!1;return i&&this.count--,i}get reliable(){return Math.floor(100*(this.count/this.filterSize))<=90}},cw={1:.5,2:.84,4:.95,8:.98};function lw(r=.001){return r>.002?2:r>1e-5?4:8}function jd(r,e=.001){let t=lw(e),n=cw[t],o=Math.round(r/n),s=Math.min(Math.ceil(Math.log2(1/e)+Math.log2(2*t)),Fl);return{filterSize:o,bucketSize:t,fingerprintSize:s}}var Bi=class{filterSize;bucketSize;fingerprintSize;scale;filterSeries;hash;seed;constructor(e){this.bucketSize=e.bucketSize??4,this.filterSize=e.filterSize??(1<<18)/this.bucketSize,this.fingerprintSize=e.fingerprintSize??2,this.scale=e.scale??2,this.hash=e.hash??yo,this.seed=e.seed??Er(0,Math.pow(2,10)),this.filterSeries=[new wo({filterSize:this.filterSize,bucketSize:this.bucketSize,fingerprintSize:this.fingerprintSize,hash:this.hash,seed:this.seed})]}add(e){if(typeof e=="string"&&(e=P(e)),this.has(e))return!0;let t=this.filterSeries.find(n=>n.reliable);if(t==null){let n=this.filterSize*Math.pow(this.scale,this.filterSeries.length);t=new wo({filterSize:n,bucketSize:this.bucketSize,fingerprintSize:this.fingerprintSize,hash:this.hash,seed:this.seed}),this.filterSeries.push(t)}return t.add(e)}has(e){typeof e=="string"&&(e=P(e));for(let t=0;t<this.filterSeries.length;t++)if(this.filterSeries[t].has(e))return!0;return!1}remove(e){typeof e=="string"&&(e=P(e));for(let t=0;t<this.filterSeries.length;t++)if(this.filterSeries[t].remove(e))return!0;return!1}get count(){return this.filterSeries.reduce((e,t)=>e+t.count,0)}};function $l(r,e=.001,t){return new Bi({...jd(r,e),...t??{}})}var bo;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.publicKey!=null&&t.publicKey.byteLength>0&&(n.uint32(10),n.bytes(t.publicKey)),t.payloadType!=null&&t.payloadType.byteLength>0&&(n.uint32(18),n.bytes(t.payloadType)),t.payload!=null&&t.payload.byteLength>0&&(n.uint32(26),n.bytes(t.payload)),t.signature!=null&&t.signature.byteLength>0&&(n.uint32(42),n.bytes(t.signature)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={publicKey:ce(0),payloadType:ce(0),payload:ce(0),signature:ce(0)},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.publicKey=t.bytes();break}case 2:{s.payloadType=t.bytes();break}case 3:{s.payload=t.bytes();break}case 5:{s.signature=t.bytes();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})(bo||(bo={}));var Ii=class extends Error{constructor(e="Invalid signature"){super(e),this.name="InvalidSignatureError"}};var pn=class r{static createFromProtobuf=async e=>{let t=bo.decode(e),n=nn(t.publicKey);return new r({publicKey:n,payloadType:t.payloadType,payload:t.payload,signature:t.signature})};static seal=async(e,t)=>{if(t==null)throw new Error("Missing private key");let n=e.domain,o=e.codec,s=e.marshal(),i=Zd(n,o,s),a=await t.sign(i.subarray());return new r({publicKey:t.publicKey,payloadType:o,payload:s,signature:a})};static openAndCertify=async(e,t)=>{let n=await r.createFromProtobuf(e);if(!await n.validate(t))throw new Ii("Envelope signature is not valid for the given domain");return n};publicKey;payloadType;payload;signature;marshaled;constructor(e){let{publicKey:t,payloadType:n,payload:o,signature:s}=e;this.publicKey=t,this.payloadType=n,this.payload=o,this.signature=s}marshal(){return this.marshaled==null&&(this.marshaled=bo.encode({publicKey:ht(this.publicKey),payloadType:this.payloadType,payload:this.payload.subarray(),signature:this.signature})),this.marshaled}equals(e){return ie(this.marshal(),e.marshal())}async validate(e){let t=Zd(e,this.payloadType,this.payload);return this.publicKey.verify(t.subarray(),this.signature)}},Zd=(r,e,t)=>{let n=P(r),o=Ce(n.byteLength),s=Ce(e.length),i=Ce(t.length);return new we(o,n,s,e,i,t)};function Xd(r,e){let t=(n,o)=>n.toString().localeCompare(o.toString());return r.length!==e.length?!1:(e.sort(t),r.sort(t).every((n,o)=>e[o].equals(n)))}var Yd="libp2p-peer-record",Jd=Uint8Array.from([3,1]);var xo;(function(r){let e;(function(n){let o;n.codec=()=>(o==null&&(o=Ue((s,i,a={})=>{a.lengthDelimited!==!1&&i.fork(),s.multiaddr!=null&&s.multiaddr.byteLength>0&&(i.uint32(10),i.bytes(s.multiaddr)),a.lengthDelimited!==!1&&i.ldelim()},(s,i,a={})=>{let c={multiaddr:ce(0)},u=i==null?s.len:s.pos+i;for(;s.pos<u;){let f=s.uint32();switch(f>>>3){case 1:{c.multiaddr=s.bytes();break}default:{s.skipType(f&7);break}}}return c})),o),n.encode=s=>Me(s,n.codec()),n.decode=(s,i)=>De(s,n.codec(),i)})(e=r.AddressInfo||(r.AddressInfo={}));let t;r.codec=()=>(t==null&&(t=Ue((n,o,s={})=>{if(s.lengthDelimited!==!1&&o.fork(),n.peerId!=null&&n.peerId.byteLength>0&&(o.uint32(10),o.bytes(n.peerId)),n.seq!=null&&n.seq!==0n&&(o.uint32(16),o.uint64(n.seq)),n.addresses!=null)for(let i of n.addresses)o.uint32(26),r.AddressInfo.codec().encode(i,o);s.lengthDelimited!==!1&&o.ldelim()},(n,o,s={})=>{let i={peerId:ce(0),seq:0n,addresses:[]},a=o==null?n.len:n.pos+o;for(;n.pos<a;){let c=n.uint32();switch(c>>>3){case 1:{i.peerId=n.bytes();break}case 2:{i.seq=n.uint64();break}case 3:{if(s.limits?.addresses!=null&&i.addresses.length===s.limits.addresses)throw new yr('Decode error - map field "addresses" had too many elements');i.addresses.push(r.AddressInfo.codec().decode(n,n.uint32(),{limits:s.limits?.addresses$}));break}default:{n.skipType(c&7);break}}}return i})),t),r.encode=n=>Me(n,r.codec()),r.decode=(n,o)=>De(n,r.codec(),o)})(xo||(xo={}));var Sr=class r{static createFromProtobuf=e=>{let t=xo.decode(e),n=on(rt(t.peerId)),o=(t.addresses??[]).map(i=>oe(i.multiaddr)),s=t.seq;return new r({peerId:n,multiaddrs:o,seqNumber:s})};static DOMAIN=Yd;static CODEC=Jd;peerId;multiaddrs;seqNumber;domain=r.DOMAIN;codec=r.CODEC;marshaled;constructor(e){let{peerId:t,multiaddrs:n,seqNumber:o}=e;this.peerId=t,this.multiaddrs=n??[],this.seqNumber=o??BigInt(Date.now())}marshal(){return this.marshaled==null&&(this.marshaled=xo.encode({peerId:this.peerId.toMultihash().bytes,seq:BigInt(this.seqNumber),addresses:this.multiaddrs.map(e=>({multiaddr:e.bytes}))})),this.marshaled}equals(e){return!(!(e instanceof r)||!this.peerId.equals(e.peerId)||this.seqNumber!==e.seqNumber||!Xd(this.multiaddrs,e.multiaddrs))}};function uw(r){return r[Symbol.asyncIterator]!=null}function fw(r){if(uw(r))return(async()=>{let t=[];for await(let n of r)t.push(n);return t})();let e=[];for(let t of r)e.push(t);return e}var vo=fw;var nr={},mn=r=>{r.addEventListener("message",e=>{mn.dispatchEvent("message",r,e)}),r.port!=null&&r.port.addEventListener("message",e=>{mn.dispatchEvent("message",r,e)})};mn.addEventListener=(r,e)=>{nr[r]==null&&(nr[r]=[]),nr[r].push(e)};mn.removeEventListener=(r,e)=>{nr[r]!=null&&(nr[r]=nr[r].filter(t=>t===e))};mn.dispatchEvent=function(r,e,t){nr[r]!=null&&nr[r].forEach(n=>n(e,t))};var Kl=mn;var ql="lock:worker:request-read",zl="lock:worker:release-read",Gl="lock:master:grant-read",Wl="lock:worker:request-write",jl="lock:worker:release-write",Zl="lock:master:grant-write";var Qd=(r=21)=>Math.random().toString().substring(2);var ep=(r,e,t,n,o)=>(s,i)=>{if(i.data.type!==t)return;let a={type:i.data.type,name:i.data.name,identifier:i.data.identifier};r.dispatchEvent(new MessageEvent(e,{data:{name:a.name,handler:async()=>{s.postMessage({type:o,name:a.name,identifier:a.identifier}),await new Promise(c=>{let u=f=>{if(f==null||f.data==null)return;let l={type:f.data.type,name:f.data.name,identifier:f.data.identifier};l.type===n&&l.identifier===a.identifier&&(s.removeEventListener("message",u),c())};s.addEventListener("message",u)})}}}))},tp=(r,e,t,n)=>async()=>{let o=Qd();return globalThis.postMessage({type:e,identifier:o,name:r}),new Promise(s=>{let i=a=>{if(a==null||a.data==null)return;let c={type:a.data.type,identifier:a.data.identifier};c.type===t&&c.identifier===o&&(globalThis.removeEventListener("message",i),s(()=>{globalThis.postMessage({type:n,identifier:o,name:r})}))};globalThis.addEventListener("message",i)})},hw={singleProcess:!1},rp=r=>{if(r=Object.assign({},hw,r),!!globalThis.document||r.singleProcess){let t=new EventTarget;return Kl.addEventListener("message",ep(t,"requestReadLock",ql,zl,Gl)),Kl.addEventListener("message",ep(t,"requestWriteLock",Wl,jl,Zl)),t}return{isWorker:!0,readLock:t=>tp(t,ql,Gl,zl),writeLock:t=>tp(t,Wl,Zl,jl)}};var _r={},or;async function Xl(r,e){let t,n=new Promise(o=>{t=o});return r.add(async()=>po((async()=>{await new Promise(o=>{t(()=>{o()})})})(),{milliseconds:e.timeout})),n}var dw=(r,e)=>{if(or.isWorker===!0)return{readLock:or.readLock(r,e),writeLock:or.writeLock(r,e)};let t=new rr({concurrency:1}),n;return{async readLock(){if(n!=null)return Xl(n,e);n=new rr({concurrency:e.concurrency,autoStart:!1});let o=n,s=Xl(n,e);return t.add(async()=>{o.start(),await o.onIdle().then(()=>{n===o&&(n=null)})}),s},async writeLock(){return n=null,Xl(t,e)}}},pw={name:"lock",concurrency:1/0,timeout:846e5,singleProcess:!1};function Yl(r){let e=Object.assign({},pw,r);return or==null&&(or=rp(e),or.isWorker!==!0&&(or.addEventListener("requestReadLock",t=>{_r[t.data.name]!=null&&_r[t.data.name].readLock().then(async n=>t.data.handler().finally(()=>{n()}))}),or.addEventListener("requestWriteLock",async t=>{_r[t.data.name]!=null&&_r[t.data.name].writeLock().then(async n=>t.data.handler().finally(()=>{n()}))}))),_r[e.name]==null&&(_r[e.name]=dw(e.name,e)),_r[e.name]}var gn;(function(r){let e;(function(o){let s;o.codec=()=>(s==null&&(s=Ue((i,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),i.key!=null&&i.key!==""&&(a.uint32(10),a.string(i.key)),i.value!=null&&i.value.byteLength>0&&(a.uint32(18),a.bytes(i.value)),c.lengthDelimited!==!1&&a.ldelim()},(i,a,c={})=>{let u={key:"",value:ce(0)},f=a==null?i.len:i.pos+a;for(;i.pos<f;){let l=i.uint32();switch(l>>>3){case 1:{u.key=i.string();break}case 2:{u.value=i.bytes();break}default:{i.skipType(l&7);break}}}return u})),s),o.encode=i=>Me(i,o.codec()),o.decode=(i,a)=>De(i,o.codec(),a)})(e=r.Peer$metadataEntry||(r.Peer$metadataEntry={}));let t;(function(o){let s;o.codec=()=>(s==null&&(s=Ue((i,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),i.key!=null&&i.key!==""&&(a.uint32(10),a.string(i.key)),i.value!=null&&(a.uint32(18),Ci.codec().encode(i.value,a)),c.lengthDelimited!==!1&&a.ldelim()},(i,a,c={})=>{let u={key:""},f=a==null?i.len:i.pos+a;for(;i.pos<f;){let l=i.uint32();switch(l>>>3){case 1:{u.key=i.string();break}case 2:{u.value=Ci.codec().decode(i,i.uint32(),{limits:c.limits?.value});break}default:{i.skipType(l&7);break}}}return u})),s),o.encode=i=>Me(i,o.codec()),o.decode=(i,a)=>De(i,o.codec(),a)})(t=r.Peer$tagsEntry||(r.Peer$tagsEntry={}));let n;r.codec=()=>(n==null&&(n=Ue((o,s,i={})=>{if(i.lengthDelimited!==!1&&s.fork(),o.addresses!=null)for(let a of o.addresses)s.uint32(10),ki.codec().encode(a,s);if(o.protocols!=null)for(let a of o.protocols)s.uint32(18),s.string(a);if(o.publicKey!=null&&(s.uint32(34),s.bytes(o.publicKey)),o.peerRecordEnvelope!=null&&(s.uint32(42),s.bytes(o.peerRecordEnvelope)),o.metadata!=null&&o.metadata.size!==0)for(let[a,c]of o.metadata.entries())s.uint32(50),r.Peer$metadataEntry.codec().encode({key:a,value:c},s);if(o.tags!=null&&o.tags.size!==0)for(let[a,c]of o.tags.entries())s.uint32(58),r.Peer$tagsEntry.codec().encode({key:a,value:c},s);i.lengthDelimited!==!1&&s.ldelim()},(o,s,i={})=>{let a={addresses:[],protocols:[],metadata:new Map,tags:new Map},c=s==null?o.len:o.pos+s;for(;o.pos<c;){let u=o.uint32();switch(u>>>3){case 1:{if(i.limits?.addresses!=null&&a.addresses.length===i.limits.addresses)throw new yr('Decode error - map field "addresses" had too many elements');a.addresses.push(ki.codec().decode(o,o.uint32(),{limits:i.limits?.addresses$}));break}case 2:{if(i.limits?.protocols!=null&&a.protocols.length===i.limits.protocols)throw new yr('Decode error - map field "protocols" had too many elements');a.protocols.push(o.string());break}case 4:{a.publicKey=o.bytes();break}case 5:{a.peerRecordEnvelope=o.bytes();break}case 6:{if(i.limits?.metadata!=null&&a.metadata.size===i.limits.metadata)throw new $n('Decode error - map field "metadata" had too many elements');let f=r.Peer$metadataEntry.codec().decode(o,o.uint32());a.metadata.set(f.key,f.value);break}case 7:{if(i.limits?.tags!=null&&a.tags.size===i.limits.tags)throw new $n('Decode error - map field "tags" had too many elements');let f=r.Peer$tagsEntry.codec().decode(o,o.uint32(),{limits:{value:i.limits?.tags$value}});a.tags.set(f.key,f.value);break}default:{o.skipType(u&7);break}}}return a})),n),r.encode=o=>Me(o,r.codec()),r.decode=(o,s)=>De(o,r.codec(),s)})(gn||(gn={}));var ki;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.multiaddr!=null&&t.multiaddr.byteLength>0&&(n.uint32(10),n.bytes(t.multiaddr)),t.isCertified!=null&&(n.uint32(16),n.bool(t.isCertified)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={multiaddr:ce(0)},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.multiaddr=t.bytes();break}case 2:{s.isCertified=t.bool();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})(ki||(ki={}));var Ci;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.value!=null&&t.value!==0&&(n.uint32(8),n.uint32(t.value)),t.expiry!=null&&(n.uint32(16),n.uint64(t.expiry)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={value:0},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.value=t.uint32();break}case 2:{s.expiry=t.uint64();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})(Ci||(Ci={}));function yn(r,e){let t=gn.decode(e);if(t.publicKey!=null&&r.publicKey==null){let s=nn(t.publicKey);r=sl(s)}let n=new Map,o=BigInt(Date.now());for(let[s,i]of t.tags.entries())i.expiry!=null&&i.expiry<o||n.set(s,i);return{...t,id:r,addresses:t.addresses.map(({multiaddr:s,isCertified:i})=>({multiaddr:oe(s),isCertified:i??!1})),metadata:t.metadata,peerRecordEnvelope:t.peerRecordEnvelope??void 0,tags:n}}var Ut="/",np=new TextEncoder().encode(Ut),Ti=np[0],Br=class r{_buf;constructor(e,t){if(typeof e=="string")this._buf=P(e);else if(e instanceof Uint8Array)this._buf=e;else throw new Error("Invalid key, should be String of Uint8Array");if(t==null&&(t=!0),t&&this.clean(),this._buf.byteLength===0||this._buf[0]!==Ti)throw new Error("Invalid key")}toString(e="utf8"){return H(this._buf,e)}uint8Array(){return this._buf}get[Symbol.toStringTag](){return`Key(${this.toString()})`}static withNamespaces(e){return new r(e.join(Ut))}static random(){return new r(Math.random().toString().substring(2))}static asKey(e){return e instanceof Uint8Array||typeof e=="string"?new r(e):typeof e.uint8Array=="function"?new r(e.uint8Array()):null}clean(){if((this._buf==null||this._buf.byteLength===0)&&(this._buf=np),this._buf[0]!==Ti){let e=new Uint8Array(this._buf.byteLength+1);e.fill(Ti,0,1),e.set(this._buf,1),this._buf=e}for(;this._buf.byteLength>1&&this._buf[this._buf.byteLength-1]===Ti;)this._buf=this._buf.subarray(0,-1)}less(e){let t=this.list(),n=e.list();for(let o=0;o<t.length;o++){if(n.length<o+1)return!1;let s=t[o],i=n[o];if(s<i)return!0;if(s>i)return!1}return t.length<n.length}reverse(){return r.withNamespaces(this.list().slice().reverse())}namespaces(){return this.list()}baseNamespace(){let e=this.namespaces();return e[e.length-1]}list(){return this.toString().split(Ut).slice(1)}type(){return mw(this.baseNamespace())}name(){return gw(this.baseNamespace())}instance(e){return new r(this.toString()+":"+e)}path(){let e=this.parent().toString();return e.endsWith(Ut)||(e+=Ut),e+=this.type(),new r(e)}parent(){let e=this.list();return e.length===1?new r(Ut):new r(e.slice(0,-1).join(Ut))}child(e){return this.toString()===Ut?e:e.toString()===Ut?this:new r(this.toString()+e.toString(),!1)}isAncestorOf(e){return e.toString()===this.toString()?!1:e.toString().startsWith(this.toString())}isDecendantOf(e){return e.toString()===this.toString()?!1:this.toString().startsWith(e.toString())}isTopLevel(){return this.list().length===1}concat(...e){return r.withNamespaces([...this.namespaces(),...yw(e.map(t=>t.namespaces()))])}};function mw(r){let e=r.split(":");return e.length<2?"":e.slice(0,-1).join(":")}function gw(r){let e=r.split(":");return e[e.length-1]}function yw(r){return[].concat(...r)}var Jl="/peers/";function wn(r){if(!Po(r)||r.type==null)throw new D("Invalid PeerId");let e=r.toCID().toString();return new Br(`${Jl}${e}`)}async function op(r,e,t){let n=new Map;for(let o of t){if(o==null)continue;if(o.multiaddr instanceof Uint8Array&&(o.multiaddr=oe(o.multiaddr)),!tr(o.multiaddr))throw new D("Multiaddr was invalid");if(!await e(r,o.multiaddr))continue;let s=o.isCertified??!1,i=o.multiaddr.toString(),a=n.get(i);a!=null?o.isCertified=a.isCertified||s:n.set(i,{multiaddr:o.multiaddr,isCertified:s})}return[...n.values()].sort((o,s)=>o.multiaddr.toString().localeCompare(s.multiaddr.toString())).map(({isCertified:o,multiaddr:s})=>({isCertified:o,multiaddr:s.bytes}))}async function Ni(r,e,t,n){if(e==null)throw new D("Invalid PeerData");if(e.publicKey!=null&&r.publicKey!=null&&!e.publicKey.equals(r.publicKey))throw new D("publicKey bytes do not match peer id publicKey bytes");let o=n.existingPeer;if(o!=null&&!r.equals(o.id))throw new D("peer id did not match existing peer id");let s=o?.addresses??[],i=new Set(o?.protocols??[]),a=o?.metadata??new Map,c=o?.tags??new Map,u=o?.peerRecordEnvelope;if(t==="patch"){if((e.multiaddrs!=null||e.addresses!=null)&&(s=[],e.multiaddrs!=null&&s.push(...e.multiaddrs.map(d=>({isCertified:!1,multiaddr:d}))),e.addresses!=null&&s.push(...e.addresses)),e.protocols!=null&&(i=new Set(e.protocols)),e.metadata!=null){let d=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);a=Li(d,{validate:sp})}if(e.tags!=null){let d=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags);c=Li(d,{validate:ip,map:ap})}e.peerRecordEnvelope!=null&&(u=e.peerRecordEnvelope)}if(t==="merge"){if(e.multiaddrs!=null&&s.push(...e.multiaddrs.map(d=>({isCertified:!1,multiaddr:d}))),e.addresses!=null&&s.push(...e.addresses),e.protocols!=null&&(i=new Set([...i,...e.protocols])),e.metadata!=null){let d=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);for(let[h,p]of d)p==null?a.delete(h):a.set(h,p);a=Li([...a.entries()],{validate:sp})}if(e.tags!=null){let d=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags),h=new Map(c);for(let[p,m]of d)m==null?h.delete(p):h.set(p,m);c=Li([...h.entries()],{validate:ip,map:ap})}e.peerRecordEnvelope!=null&&(u=e.peerRecordEnvelope)}let f;o?.id.publicKey!=null?f=ht(o.id.publicKey):e.publicKey!=null?f=ht(e.publicKey):r.publicKey!=null&&(f=ht(r.publicKey));let l={addresses:await op(r,n.addressFilter??(async()=>!0),s),protocols:[...i.values()].sort((d,h)=>d.localeCompare(h)),metadata:a,tags:c,publicKey:f,peerRecordEnvelope:u};return r.type!=="RSA"&&delete l.publicKey,l}function Li(r,e){let t=new Map;for(let[n,o]of r)o!=null&&e.validate(n,o);for(let[n,o]of r.sort(([s],[i])=>s.localeCompare(i)))o!=null&&t.set(n,e.map?.(n,o)??o);return t}function sp(r,e){if(typeof r!="string")throw new D("Metadata key must be a string");if(!(e instanceof Uint8Array))throw new D("Metadata value must be a Uint8Array")}function ip(r,e){if(typeof r!="string")throw new D("Tag name must be a string");if(e.value!=null){if(parseInt(`${e.value}`,10)!==e.value)throw new D("Tag value must be an integer");if(e.value<0||e.value>100)throw new D("Tag value must be between 0-100")}if(e.ttl!=null){if(parseInt(`${e.ttl}`,10)!==e.ttl)throw new D("Tag ttl must be an integer");if(e.ttl<0)throw new D("Tag ttl must be between greater than 0")}}function ap(r,e){let t;return e.expiry!=null&&(t=e.expiry),e.ttl!=null&&(t=BigInt(Date.now()+Number(e.ttl))),{value:e.value??0,expiry:t}}function Pi(r,e,t){let n=r.toString().split("/")[2],o=pe.parse(n,Ge),s=ti(o),i=t.get(s);if(i!=null)return i;let a=yn(s,e);return t.set(s,a),a}function ww(r,e){return r==null?{}:{prefix:Jl,filters:(r.filters??[]).map(t=>({key:n,value:o})=>t(Pi(n,o,e))),orders:(r.orders??[]).map(t=>(n,o)=>t(Pi(n.key,n.value,e),Pi(o.key,o.value,e)))}}var Ri=class{peerId;datastore;lock;addressFilter;constructor(e,t={}){this.peerId=e.peerId,this.datastore=e.datastore,this.addressFilter=t.addressFilter,this.lock=Yl({name:"peer-store",singleProcess:!0})}async has(e){return this.datastore.has(wn(e))}async delete(e){if(this.peerId.equals(e))throw new D("Cannot delete self peer");await this.datastore.delete(wn(e))}async load(e){let t=await this.datastore.get(wn(e));return yn(e,t)}async save(e,t){let{existingBuf:n,existingPeer:o}=await this.#e(e),s=await Ni(e,t,"patch",{addressFilter:this.addressFilter});return this.#t(e,s,n,o)}async patch(e,t){let{existingBuf:n,existingPeer:o}=await this.#e(e),s=await Ni(e,t,"patch",{addressFilter:this.addressFilter,existingPeer:o});return this.#t(e,s,n,o)}async merge(e,t){let{existingBuf:n,existingPeer:o}=await this.#e(e),s=await Ni(e,t,"merge",{addressFilter:this.addressFilter,existingPeer:o});return this.#t(e,s,n,o)}async*all(e){let t=new lt;for await(let{key:n,value:o}of this.datastore.query(ww(e??{},t))){let s=Pi(n,o,t);s.id.equals(this.peerId)||(yield s)}}async#e(e){try{let t=await this.datastore.get(wn(e)),n=yn(e,t);return{existingBuf:t,existingPeer:n}}catch(t){if(t.name!=="NotFoundError")throw t}return{}}async#t(e,t,n,o){let s=gn.encode(t);return n!=null&&ie(s,n)?{peer:yn(e,s),previous:o,updated:!1}:(await this.datastore.put(wn(e),s),{peer:yn(e,s),previous:o,updated:!0})}};var Ql=class{store;events;peerId;log;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-store"),this.events=e.events,this.peerId=e.peerId,this.store=new Ri(e,t)}[Symbol.toStringTag]="@libp2p/peer-store";async forEach(e,t){this.log.trace("forEach await read lock");let n=await this.store.lock.readLock();this.log.trace("forEach got read lock");try{for await(let o of this.store.all(t))e(o)}finally{this.log.trace("forEach release read lock"),n()}}async all(e){this.log.trace("all await read lock");let t=await this.store.lock.readLock();this.log.trace("all got read lock");try{return await vo(this.store.all(e))}finally{this.log.trace("all release read lock"),t()}}async delete(e){this.log.trace("delete await write lock");let t=await this.store.lock.writeLock();this.log.trace("delete got write lock");try{await this.store.delete(e)}finally{this.log.trace("delete release write lock"),t()}}async has(e){this.log.trace("has await read lock");let t=await this.store.lock.readLock();this.log.trace("has got read lock");try{return await this.store.has(e)}finally{this.log.trace("has release read lock"),t()}}async get(e){this.log.trace("get await read lock");let t=await this.store.lock.readLock();this.log.trace("get got read lock");try{return await this.store.load(e)}finally{this.log.trace("get release read lock"),t()}}async save(e,t){this.log.trace("save await write lock");let n=await this.store.lock.writeLock();this.log.trace("save got write lock");try{let o=await this.store.save(e,t);return this.#e(e,o),o.peer}finally{this.log.trace("save release write lock"),n()}}async patch(e,t){this.log.trace("patch await write lock");let n=await this.store.lock.writeLock();this.log.trace("patch got write lock");try{let o=await this.store.patch(e,t);return this.#e(e,o),o.peer}finally{this.log.trace("patch release write lock"),n()}}async merge(e,t){this.log.trace("merge await write lock");let n=await this.store.lock.writeLock();this.log.trace("merge got write lock");try{let o=await this.store.merge(e,t);return this.#e(e,o),o.peer}finally{this.log.trace("merge release write lock"),n()}}async consumePeerRecord(e,t){let n=await pn.openAndCertify(e,Sr.DOMAIN),o=ti(n.publicKey.toCID());if(t?.equals(o)===!1)return this.log("envelope peer id was not the expected peer id - expected: %p received: %p",t,o),!1;let s=Sr.createFromProtobuf(n.payload),i;try{i=await this.get(o)}catch(a){if(a.name!=="NotFoundError")throw a}if(i?.peerRecordEnvelope!=null){let a=await pn.createFromProtobuf(i.peerRecordEnvelope),c=Sr.createFromProtobuf(a.payload);if(c.seqNumber>=s.seqNumber)return this.log("sequence number was lower or equal to existing sequence number - stored: %d received: %d",c.seqNumber,s.seqNumber),!1}return await this.patch(s.peerId,{peerRecordEnvelope:e,addresses:s.multiaddrs.map(a=>({isCertified:!0,multiaddr:a}))}),!0}#e(e,t){t.updated&&(this.peerId.equals(e)?this.events.safeDispatchEvent("self:peer:update",{detail:t}):this.events.safeDispatchEvent("peer:update",{detail:t}))}};function cp(r,e={}){return new Ql(r,e)}var Di=class r extends Error{static name="NotFoundError";static code="ERR_NOT_FOUND";name=r.name;code=r.code;constructor(e="Not Found"){super(e)}};function bw(r){return r[Symbol.asyncIterator]!=null}function xw(r){if(bw(r))return(async()=>{for await(let e of r);})();for(let e of r);}var eu=xw;function vw(r){let[e,t]=r[Symbol.asyncIterator]!=null?[r[Symbol.asyncIterator](),Symbol.asyncIterator]:[r[Symbol.iterator](),Symbol.iterator],n=[];return{peek:()=>e.next(),push:o=>{n.push(o)},next:()=>n.length>0?{done:!1,value:n.shift()}:e.next(),[t](){return this}}}var lp=vw;function Ew(r){return r[Symbol.asyncIterator]!=null}function Aw(r,e){let t=0;if(Ew(r))return async function*(){for await(let c of r)await e(c,t++)&&(yield c)}();let n=lp(r),{value:o,done:s}=n.next();if(s===!0)return function*(){}();let i=e(o,t++);if(typeof i.then=="function")return async function*(){await i&&(yield o);for await(let c of n)await e(c,t++)&&(yield c)}();let a=e;return function*(){i===!0&&(yield o);for(let c of n)a(c,t++)&&(yield c)}()}var Ir=Aw;function Sw(r){return r[Symbol.asyncIterator]!=null}function _w(r,e){return Sw(r)?async function*(){yield*(await vo(r)).sort(e)}():function*(){yield*vo(r).sort(e)}()}var tu=_w;function Bw(r){return r[Symbol.asyncIterator]!=null}function Iw(r,e){return Bw(r)?async function*(){let t=0;if(!(e<1)){for await(let n of r)if(yield n,t++,t===e)return}}():function*(){let t=0;if(!(e<1)){for(let n of r)if(yield n,t++,t===e)return}}()}var ru=Iw;var Mi=class{put(e,t,n){return Promise.reject(new Error(".put is not implemented"))}get(e,t){return Promise.reject(new Error(".get is not implemented"))}has(e,t){return Promise.reject(new Error(".has is not implemented"))}delete(e,t){return Promise.reject(new Error(".delete is not implemented"))}async*putMany(e,t={}){for await(let{key:n,value:o}of e)await this.put(n,o,t),yield n}async*getMany(e,t={}){for await(let n of e)yield{key:n,value:await this.get(n,t)}}async*deleteMany(e,t={}){for await(let n of e)await this.delete(n,t),yield n}batch(){let e=[],t=[];return{put(n,o){e.push({key:n,value:o})},delete(n){t.push(n)},commit:async n=>{await eu(this.putMany(e,n)),e=[],await eu(this.deleteMany(t,n)),t=[]}}}async*_all(e,t){throw new Error("._all is not implemented")}async*_allKeys(e,t){throw new Error("._allKeys is not implemented")}query(e,t){let n=this._all(e,t);if(e.prefix!=null){let o=e.prefix;n=Ir(n,s=>s.key.toString().startsWith(o))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((o,s)=>Ir(o,s),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,s)=>tu(o,s),n)),e.offset!=null){let o=0,s=e.offset;n=Ir(n,()=>o++>=s)}return e.limit!=null&&(n=ru(n,e.limit)),n}queryKeys(e,t){let n=this._allKeys(e,t);if(e.prefix!=null){let o=e.prefix;n=Ir(n,s=>s.toString().startsWith(o))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((o,s)=>Ir(o,s),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,s)=>tu(o,s),n)),e.offset!=null){let o=e.offset,s=0;n=Ir(n,()=>s++>=o)}return e.limit!=null&&(n=ru(n,e.limit)),n}};var Ui=class extends Mi{data;constructor(){super(),this.data=new Map}put(e,t){return this.data.set(e.toString(),t),e}get(e){let t=this.data.get(e.toString());if(t==null)throw new Di;return t}has(e){return this.data.has(e.toString())}delete(e){this.data.delete(e.toString())}*_all(){for(let[e,t]of this.data.entries())yield{key:new Br(e),value:t}}*_allKeys(){for(let e of this.data.keys())yield new Br(e)}};function up(r,e){let t;return function(){let n=function(){t=void 0,r()};clearTimeout(t),t=setTimeout(n,e)}}var kw=r=>r;function nu(r,e){let t=r.getPeerId();return t!=null&&yt(t).equals(e)&&(r=r.decapsulate(oe(`/p2p/${e.toString()}`))),r}var Oi=class{log;components;listen;announce;observed;announceFilter;constructor(e,t={}){let{listen:n=[],announce:o=[]}=t;this.components=e,this.log=e.logger.forComponent("libp2p:address-manager"),this.listen=n.map(s=>s.toString()),this.announce=new Set(o.map(s=>s.toString())),this.observed=new Map,this.announceFilter=t.announceFilter??kw,this._updatePeerStoreAddresses=up(this._updatePeerStoreAddresses.bind(this),1e3),e.events.addEventListener("transport:listening",()=>{this._updatePeerStoreAddresses()}),e.events.addEventListener("transport:close",()=>{this._updatePeerStoreAddresses()})}[Symbol.toStringTag]="@libp2p/address-manager";_updatePeerStoreAddresses(){let e=this.getAnnounceAddrs().concat(this.components.transportManager.getAddrs()).concat([...this.observed.entries()].filter(([t,n])=>n.confident).map(([t])=>oe(t))).map(t=>t.getPeerId()===this.components.peerId.toString()?t.decapsulate(`/p2p/${this.components.peerId.toString()}`):t);this.components.peerStore.patch(this.components.peerId,{multiaddrs:e}).catch(t=>{this.log.error("error updating addresses",t)})}getListenAddrs(){return Array.from(this.listen).map(e=>oe(e))}getAnnounceAddrs(){return Array.from(this.announce).map(e=>oe(e))}getObservedAddrs(){return Array.from(this.observed).map(([e])=>oe(e))}addObservedAddr(e){e=nu(e,this.components.peerId);let t=e.toString();this.observed.has(t)||this.observed.set(t,{confident:!1})}confirmObservedAddr(e){e=nu(e,this.components.peerId);let t=e.toString(),o=(this.observed.get(t)??{confident:!1}).confident;this.observed.set(t,{confident:!0}),o||this._updatePeerStoreAddresses()}removeObservedAddr(e){e=nu(e,this.components.peerId);let t=e.toString();this.observed.delete(t)}getAddresses(){let e=this.getAnnounceAddrs().map(n=>n.toString());e.length===0&&(e=this.components.transportManager.getAddrs().map(n=>n.toString())),e=e.concat(Array.from(this.observed).filter(([n,o])=>o.confident).map(([n])=>n));let t=new Set(e);return this.announceFilter(Array.from(t).map(n=>oe(n))).map(n=>n.protos().pop()?.path===!0||n.getPeerId()===this.components.peerId.toString()?n:n.encapsulate(`/p2p/${this.components.peerId.toString()}`))}};var fp;(function(r){r.NOT_STARTED_YET="The libp2p node is not started yet",r.NOT_FOUND="Not found"})(fp||(fp={}));var Fi=class extends Error{constructor(e="Missing service"){super(e),this.name="MissingServiceError"}},Vi=class extends Error{constructor(e="Unmet service dependencies"){super(e),this.name="UnmetServiceDependenciesError"}},Eo=class extends Error{constructor(e="No content routers available"){super(e),this.name="NoContentRoutersError"}},Ao=class extends Error{constructor(e="No peer routers available"){super(e),this.name="NoPeerRoutersError"}},Hi=class extends Error{constructor(e="Should not try to find self"){super(e),this.name="QueriedForSelfError"}},$i=class extends Error{constructor(e="Unhandled protocol error"){super(e),this.name="UnhandledProtocolError"}},Ki=class extends Error{constructor(e="Duplicate protocol handler error"){super(e),this.name="DuplicateProtocolHandlerError"}},So=class extends Error{constructor(e="Dial denied error"){super(e),this.name="DialDeniedError"}},kr=class extends Error{constructor(e="No valid addresses"){super(e),this.name="NoValidAddressesError"}},qi=class extends Error{constructor(e="Connection intercepted"){super(e),this.name="ConnectionInterceptedError"}},zi=class extends Error{constructor(e="Connection denied"){super(e),this.name="ConnectionDeniedError"}},Cr=class extends Error{constructor(e="Stream is not multiplexed"){super(e),this.name="MuxerUnavailableError"}},Tr=class extends Error{constructor(e="Encryption failed"){super(e),this.name="EncryptionFailedError"}},Gi=class extends Error{constructor(e="Transport unavailable"){super(e),this.name="TransportUnavailableError"}};var ou=class{components={};_started=!1;constructor(e={}){this.components={};for(let[t,n]of Object.entries(e))this.components[t]=n;this.components.logger==null&&(this.components.logger=Ei())}isStarted(){return this._started}async _invokeStartableMethod(e){await Promise.all(Object.values(this.components).filter(t=>Ko(t)).map(async t=>{await t[e]?.()}))}async beforeStart(){await this._invokeStartableMethod("beforeStart")}async start(){await this._invokeStartableMethod("start"),this._started=!0}async afterStart(){await this._invokeStartableMethod("afterStart")}async beforeStop(){await this._invokeStartableMethod("beforeStop")}async stop(){await this._invokeStartableMethod("stop"),this._started=!1}async afterStop(){await this._invokeStartableMethod("afterStop")}},Tw=["metrics","connectionProtector","dns"],Lw=["components","isStarted","beforeStart","start","afterStart","beforeStop","stop","afterStop","then","_invokeStartableMethod"];function hp(r={}){let e=new ou(r);return new Proxy(e,{get(n,o,s){if(typeof o=="string"&&!Lw.includes(o)){let i=e.components[o];if(i==null&&!Tw.includes(o))throw new Fi(`${o} not set`);return i}return Reflect.get(n,o,s)},set(n,o,s){return typeof o=="string"?e.components[o]=s:Reflect.set(n,o,s),!0}})}function dp(r){let e={};for(let t of Object.values(r.components))for(let n of Nw(t))e[n]=!0;for(let t of Object.values(r.components))for(let n of Pw(t))if(e[n]!==!0)throw new Vi(`Service "${Rw(t)}" required capability "${n}" but it was not provided by any component, you may need to add additional configuration when creating your node.`)}function Nw(r){return Array.isArray(r?.[kn])?r[kn]:[]}function Pw(r){return Array.isArray(r?.[Da])?r[Da]:[]}function Rw(r){return r?.[Symbol.toStringTag]??r?.toString()??"unknown"}function pp(r={}){return{denyDialPeer:async()=>!1,denyDialMultiaddr:async e=>{let t=e.stringTuples();return t[0][0]===4||t[0][0]===41?!!fi(`${t[0][1]}`):!1},denyInboundConnection:async()=>!1,denyOutboundConnection:async()=>!1,denyInboundEncryptedConnection:async()=>!1,denyOutboundEncryptedConnection:async()=>!1,denyInboundUpgradedConnection:async()=>!1,denyOutboundUpgradedConnection:async()=>!1,filterMultiaddrForPeer:async()=>!0,...r}}var mp=()=>{let r=new Error("Delay aborted");return r.name="AbortError",r},Dw=new WeakMap;function Mw({clearTimeout:r,setTimeout:e}={}){return(t,{value:n,signal:o}={})=>{if(o?.aborted)return Promise.reject(mp());let s,i,a,c=r??clearTimeout,u=()=>{c(s),a(mp())},f=()=>{o&&o.removeEventListener("abort",u)},l=new Promise((d,h)=>{i=()=>{f(),d(n)},a=h,s=(e??setTimeout)(i,t)});return o&&o.addEventListener("abort",u,{once:!0}),Dw.set(l,()=>{c(s),s=null,i()}),l}}var Uw=Mw(),gp=Uw;var Wi=class extends Error{remainingPoints;msBeforeNext;consumedPoints;isFirstInDuration;constructor(e="Rate limit exceeded",t){super(e),this.name="RateLimitError",this.remainingPoints=t.remainingPoints,this.msBeforeNext=t.msBeforeNext,this.consumedPoints=t.consumedPoints,this.isFirstInDuration=t.isFirstInDuration}};var ji=class{memoryStorage;points;duration;blockDuration;execEvenly;execEvenlyMinDelayMs;keyPrefix;constructor(e={}){this.points=e.points??4,this.duration=e.duration??1,this.blockDuration=e.blockDuration??0,this.execEvenly=e.execEvenly??!1,this.execEvenlyMinDelayMs=e.execEvenlyMinDelayMs??this.duration*1e3/this.points,this.keyPrefix=e.keyPrefix??"rlflx",this.memoryStorage=new su}async consume(e,t=1,n={}){let o=this.getKey(e),s=this._getKeySecDuration(n),i=this.memoryStorage.incrby(o,t,s);if(i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i.consumedPoints>this.points)throw this.blockDuration>0&&i.consumedPoints<=this.points+t&&(i=this.memoryStorage.set(o,i.consumedPoints,this.blockDuration)),new Wi("Rate limit exceeded",i);if(this.execEvenly&&i.msBeforeNext>0&&!i.isFirstInDuration){let a=Math.ceil(i.msBeforeNext/(i.remainingPoints+2));a<this.execEvenlyMinDelayMs&&(a=i.consumedPoints*this.execEvenlyMinDelayMs),await gp(a)}return i}penalty(e,t=1,n={}){let o=this.getKey(e),s=this._getKeySecDuration(n),i=this.memoryStorage.incrby(o,t,s);return i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i}reward(e,t=1,n={}){let o=this.getKey(e),s=this._getKeySecDuration(n),i=this.memoryStorage.incrby(o,-t,s);return i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i}block(e,t){let n=t*1e3,o=this.points+1;return this.memoryStorage.set(this.getKey(e),o,t),{remainingPoints:0,msBeforeNext:n===0?-1:n,consumedPoints:o,isFirstInDuration:!1}}set(e,t,n=0){let o=(n>=0?n:this.duration)*1e3;return this.memoryStorage.set(this.getKey(e),t,n),{remainingPoints:0,msBeforeNext:o===0?-1:o,consumedPoints:t,isFirstInDuration:!1}}get(e){let t=this.memoryStorage.get(this.getKey(e));return t!=null&&(t.remainingPoints=Math.max(this.points-t.consumedPoints,0)),t}delete(e){this.memoryStorage.delete(this.getKey(e))}_getKeySecDuration(e){return e?.customDuration!=null&&e.customDuration>=0?e.customDuration:this.duration}getKey(e){return this.keyPrefix.length>0?`${this.keyPrefix}:${e}`:e}parseKey(e){return e.substring(this.keyPrefix.length)}},su=class{storage;constructor(){this.storage=new Map}incrby(e,t,n){let o=this.storage.get(e);if(o!=null){let s=o.expiresAt!=null?o.expiresAt.getTime()-new Date().getTime():-1;return o.expiresAt==null||s>0?(o.value+=t,{remainingPoints:0,msBeforeNext:s,consumedPoints:o.value,isFirstInDuration:!1}):this.set(e,t,n)}return this.set(e,t,n)}set(e,t,n){let o=n*1e3,s=this.storage.get(e);s!=null&&clearTimeout(s.timeoutId);let i={value:t,expiresAt:o>0?new Date(Date.now()+o):void 0};return this.storage.set(e,i),o>0&&(i.timeoutId=setTimeout(()=>{this.storage.delete(e)},o),i.timeoutId.unref!=null&&i.timeoutId.unref()),{remainingPoints:0,msBeforeNext:o===0?-1:o,consumedPoints:i.value,isFirstInDuration:!0}}get(e){let t=this.storage.get(e);if(t!=null)return{remainingPoints:0,msBeforeNext:t.expiresAt!=null?t.expiresAt.getTime()-new Date().getTime():-1,consumedPoints:t.value,isFirstInDuration:!1}}delete(e){let t=this.storage.get(e);return t!=null?(t.timeoutId!=null&&clearTimeout(t.timeoutId),this.storage.delete(e),!0):!1}};function Zi(r){if(Po(r))return{peerId:r,multiaddrs:[]};Array.isArray(r)||(r=[r]);let e;if(r.length>0){let t=r[0].getPeerId();e=t==null?void 0:yt(t),r.forEach(n=>{if(!tr(n))throw new Vt("Invalid multiaddr");let o=n.getPeerId();if(o==null){if(e!=null)throw new D("Multiaddrs must all have the same peer id or have no peer id")}else{let s=yt(o);if(e?.equals(s)!==!0)throw new D("Multiaddrs must all have the same peer id or have no peer id")}})}return{peerId:e,multiaddrs:r}}var Ow=["/ipfs/id/1.0.0","/ipfs/id/push/1.0.0","/libp2p/autonat/1.0.0","/libp2p/dcutr"];async function yp(r,e){let t=r?.streams?.map(o=>o.protocol)??[],n=e?.closableProtocols??Ow;if(!(t.filter(o=>o!=null&&!n.includes(o)).length>0))try{await r?.close(e)}catch(o){r?.abort(o)}}var wp="last-dial-failure",bp="last-dial-success";var Xi=100,Yi=50;var xp={maxConnections:Xi,allow:[]},Ji=class{maxConnections;connectionManager;peerStore;allow;events;log;constructor(e,t={}){this.maxConnections=t.maxConnections??xp.maxConnections,this.allow=t.allow??xp.allow,this.connectionManager=e.connectionManager,this.peerStore=e.peerStore,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager:connection-pruner"),e.events.addEventListener("connection:open",()=>{this.maybePruneConnections().catch(n=>{this.log.error(n)})})}async maybePruneConnections(){let e=this.connectionManager.getConnections(),t=e.length;if(this.log("checking max connections limit %d/%d",t,this.maxConnections),t<=this.maxConnections)return;let n=new lt;for(let a of e){let c=a.remotePeer;if(!n.has(c)){n.set(c,0);try{let u=await this.peerStore.get(c);n.set(c,[...u.tags.values()].reduce((f,l)=>f+l.value,0))}catch(u){u.name!=="NotFoundError"&&this.log.error("error loading peer tags",u)}}}let o=this.sortConnections(e,n),s=Math.max(t-this.maxConnections,0),i=[];for(let a of o)if(this.log("too many connections open - closing a connection to %p",a.remotePeer),this.allow.some(u=>a.remoteAddr.toString().startsWith(u.toString()))||i.push(a),i.length===s)break;await Promise.all(i.map(async a=>{await yp(a,{signal:AbortSignal.timeout(1e3)})})),this.events.safeDispatchEvent("connection:prune",{detail:i})}sortConnections(e,t){return e.sort((n,o)=>{let s=n.timeline.open,i=o.timeline.open;return s<i?1:s>i?-1:0}).sort((n,o)=>n.direction==="outbound"&&o.direction==="inbound"?1:n.direction==="inbound"&&o.direction==="outbound"?-1:0).sort((n,o)=>n.streams.length>o.streams.length?1:n.streams.length<o.streams.length?-1:0).sort((n,o)=>{let s=t.get(n.remotePeer)??0,i=t.get(o.remotePeer)??0;return s>i?1:s<i?-1:0})}};function le(){let r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t}),r}var Qi=class{buffer;mask;top;btm;next;constructor(e){if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}},bn=class{size;hwm;head;tail;constructor(e={}){this.hwm=e.splitLimit??16,this.head=new Qi(this.hwm),this.tail=this.head,this.size=0}calculateSize(e){return e?.byteLength!=null?e.byteLength:1}push(e){if(e?.value!=null&&(this.size+=this.calculateSize(e.value)),!this.head.push(e)){let t=this.head;this.head=t.next=new Qi(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next!=null){let t=this.tail.next;this.tail.next=null,this.tail=t,e=this.tail.shift()}return e?.value!=null&&(this.size-=this.calculateSize(e.value)),e}isEmpty(){return this.head.isEmpty()}};var iu=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.code=t??"ABORT_ERR"}};function ea(r={}){return Fw(t=>{let n=t.shift();if(n==null)return{done:!0};if(n.error!=null)throw n.error;return{done:n.done===!0,value:n.value}},r)}function Fw(r,e){e=e??{};let t=e.onEnd,n=new bn,o,s,i,a=le(),c=async()=>{try{return n.isEmpty()?i?{done:!0}:await new Promise((g,y)=>{s=b=>{s=null,n.push(b);try{g(r(n))}catch(w){y(w)}return o}}):r(n)}finally{n.isEmpty()&&queueMicrotask(()=>{a.resolve(),a=le()})}},u=g=>s!=null?s(g):(n.push(g),o),f=g=>(n=new bn,s!=null?s({error:g}):(n.push({error:g}),o)),l=g=>{if(i)return o;if(e?.objectMode!==!0&&g?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return u({done:!1,value:g})},d=g=>i?o:(i=!0,g!=null?f(g):u({done:!0})),h=()=>(n=new bn,d(),{done:!0}),p=g=>(d(g),{done:!0});if(o={[Symbol.asyncIterator](){return this},next:c,return:h,throw:p,push:l,end:d,get readableLength(){return n.size},onEmpty:async g=>{let y=g?.signal;if(y?.throwIfAborted(),n.isEmpty())return;let b,w;y!=null&&(b=new Promise((x,A)=>{w=()=>{A(new iu)},y.addEventListener("abort",w)}));try{await Promise.race([a.promise,b])}finally{w!=null&&y!=null&&y?.removeEventListener("abort",w)}}},t==null)return o;let m=o;return o={[Symbol.asyncIterator](){return this},next(){return m.next()},throw(g){return m.throw(g),t!=null&&(t(g),t=void 0),{done:!0}},return(){return m.return(),t!=null&&(t(),t=void 0),{done:!0}},push:l,end(g){return m.end(g),t!=null&&(t(g),t=void 0),o},get readableLength(){return m.readableLength},onEmpty:g=>m.onEmpty(g)},o}var au=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=t??"ABORT_ERR"}};async function xn(r,e,t,n){let o=new au(n?.errorMessage,n?.errorCode);return t?.aborted===!0?Promise.reject(o):new Promise((s,i)=>{function a(){t?.removeEventListener("abort",f),r.removeEventListener(e,c),n?.errorEvent!=null&&r.removeEventListener(n.errorEvent,u)}let c=l=>{try{if(n?.filter?.(l)===!1)return}catch(d){a(),i(d);return}a(),s(l)},u=l=>{a(),i(l.detail)},f=()=>{a(),i(o)};t?.addEventListener("abort",f),r.addEventListener(e,c),n?.errorEvent!=null&&r.addEventListener(n.errorEvent,u)})}var ta=class extends Error{type;code;constructor(e,t,n){super(e??"The operation was aborted"),this.type="aborted",this.name=n??"AbortError",this.code=t??"ABORT_ERR"}};async function sr(r,e,t){if(e==null)return r;if(e.aborted)return Promise.reject(new ta(t?.errorMessage,t?.errorCode,t?.errorName));let n,o=new ta(t?.errorMessage,t?.errorCode,t?.errorName);try{return await Promise.race([r,new Promise((s,i)=>{n=()=>{i(o)},e.addEventListener("abort",n)})])}finally{n!=null&&e.removeEventListener("abort",n)}}var ra=class{deferred;signal;constructor(e){this.signal=e,this.deferred=le(),this.onAbort=this.onAbort.bind(this),this.signal?.addEventListener("abort",this.onAbort)}onAbort(){this.deferred.reject(this.signal?.reason??new et)}cleanup(){this.signal?.removeEventListener("abort",this.onAbort)}};function Vw(){return`${parseInt(String(Math.random()*1e9),10).toString()}${Date.now()}`}var na=class{id;fn;options;recipients;status;timeline;controller;constructor(e,t){this.id=Vw(),this.status="queued",this.fn=e,this.options=t,this.recipients=[],this.timeline={created:Date.now()},this.controller=new AbortController,ee(1/0,this.controller.signal),this.onAbort=this.onAbort.bind(this)}abort(e){this.controller.abort(e)}onAbort(){this.recipients.reduce((t,n)=>t&&n.signal?.aborted===!0,!0)&&(this.controller.abort(new et),this.cleanup())}async join(e={}){let t=new ra(e.signal);return this.recipients.push(t),e.signal?.addEventListener("abort",this.onAbort),t.deferred.promise}async run(){this.status="running",this.timeline.started=Date.now();try{this.controller.signal.throwIfAborted();let e=await sr(this.fn({...this.options??{},signal:this.controller.signal}),this.controller.signal);this.recipients.forEach(t=>{t.deferred.resolve(e)}),this.status="complete"}catch(e){this.recipients.forEach(t=>{t.deferred.reject(e)}),this.status="errored"}finally{this.timeline.finished=Date.now(),this.cleanup()}}cleanup(){this.recipients.forEach(e=>{e.cleanup(),e.signal?.removeEventListener("abort",this.onAbort)})}};var vn=class extends vt{concurrency;queue;pending;sort;constructor(e={}){super(),this.concurrency=e.concurrency??Number.POSITIVE_INFINITY,this.pending=0,e.metricName!=null&&e.metrics?.registerMetricGroup(e.metricName,{calculate:()=>({size:this.queue.length,running:this.pending,queued:this.queue.length-this.pending})}),this.sort=e.sort,this.queue=[]}tryToStartAnother(){if(this.size===0)return queueMicrotask(()=>{this.safeDispatchEvent("empty")}),this.running===0&&queueMicrotask(()=>{this.safeDispatchEvent("idle")}),!1;if(this.pending<this.concurrency){let e;for(let t of this.queue)if(t.status==="queued"){e=t;break}return e==null?!1:(this.safeDispatchEvent("active"),this.pending++,e.run().finally(()=>{for(let t=0;t<this.queue.length;t++)if(this.queue[t]===e){this.queue.splice(t,1);break}this.pending--,this.tryToStartAnother(),this.safeDispatchEvent("next")}),!0)}return!1}enqueue(e){this.queue.push(e),this.sort!=null&&this.queue.sort(this.sort)}async add(e,t){t?.signal?.throwIfAborted();let n=new na(e,t);return this.enqueue(n),this.safeDispatchEvent("add"),this.tryToStartAnother(),n.join(t).then(o=>(this.safeDispatchEvent("completed",{detail:o}),this.safeDispatchEvent("success",{detail:{job:n,result:o}}),o)).catch(o=>{if(n.status==="queued"){for(let s=0;s<this.queue.length;s++)if(this.queue[s]===n){this.queue.splice(s,1);break}}throw this.safeDispatchEvent("error",{detail:o}),this.safeDispatchEvent("failure",{detail:{job:n,error:o}}),o})}clear(){this.queue.splice(0,this.queue.length)}abort(){this.queue.forEach(e=>{e.abort(new et)}),this.clear()}async onEmpty(e){this.size!==0&&await xn(this,"empty",e?.signal)}async onSizeLessThan(e,t){this.size<e||await xn(this,"next",t?.signal,{filter:()=>this.size<e})}async onIdle(e){this.pending===0&&this.size===0||await xn(this,"idle",e?.signal)}get size(){return this.queue.length}get queued(){return this.queue.length-this.pending}get running(){return this.pending}async*toGenerator(e){e?.signal?.throwIfAborted();let t=ea({objectMode:!0}),n=c=>{c!=null?this.abort():this.clear(),t.end(c)},o=c=>{c.detail!=null&&t.push(c.detail)},s=c=>{n(c.detail)},i=()=>{n()},a=()=>{n(new et("Queue aborted"))};this.addEventListener("completed",o),this.addEventListener("error",s),this.addEventListener("idle",i),e?.signal?.addEventListener("abort",a);try{yield*t}finally{this.removeEventListener("completed",o),this.removeEventListener("error",s),this.removeEventListener("idle",i),e?.signal?.removeEventListener("abort",a),n()}}};var oa=class extends vn{constructor(e={}){super({...e,sort:(t,n)=>t.options.priority>n.options.priority?-1:t.options.priority<n.options.priority?1:0})}};function Ot(r){let e=new globalThis.AbortController;function t(){e.abort();for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}for(let s of r){if(s?.aborted===!0){t();break}s?.addEventListener!=null&&s.addEventListener("abort",t)}function n(){for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}let o=e.signal;return o.clear=n,o}async function vp(r,e){let t=!1;for(let o of un.keys())if(t=r.protoNames().includes(o),t)break;if(!t)return[r];let n=await r.resolve(e);return e.log("resolved %s to",r,n.map(o=>o.toString())),n}var _o={addressSorter:fn,maxParallelDials:Yi,maxDialQueueLength:500,maxPeerAddrsToDial:25,dialTimeout:5e3,resolvers:{dnsaddr:br}},sa=class{queue;components;addressSorter;maxPeerAddrsToDial;maxDialQueueLength;dialTimeout;shutDownController;connections;log;constructor(e,t={}){this.addressSorter=t.addressSorter??_o.addressSorter,this.maxPeerAddrsToDial=t.maxPeerAddrsToDial??_o.maxPeerAddrsToDial,this.maxDialQueueLength=t.maxDialQueueLength??_o.maxDialQueueLength,this.dialTimeout=t.dialTimeout??_o.dialTimeout,this.connections=t.connections??new lt,this.log=e.logger.forComponent("libp2p:connection-manager:dial-queue"),this.components=e,this.shutDownController=new AbortController,ee(1/0,this.shutDownController.signal);for(let[n,o]of Object.entries(t.resolvers??{}))un.set(n,o);this.queue=new oa({concurrency:t.maxParallelDials??_o.maxParallelDials,metricName:"libp2p_dial_queue",metrics:e.metrics}),this.queue.addEventListener("error",n=>{n.detail.name!==et.name&&this.log.error("error in dial queue - %e",n.detail)})}start(){this.shutDownController=new AbortController,ee(1/0,this.shutDownController.signal)}stop(){this.shutDownController.abort(),this.queue.abort()}async dial(e,t={}){let{peerId:n,multiaddrs:o}=Zi(e),s=Array.from(this.connections.values()).flat().find(a=>t.force===!0?!1:a.remotePeer.equals(n)?!0:o.find(c=>c.equals(a.remoteAddr)));if(s!=null)return this.log("already connected to %a",s.remoteAddr),t.onProgress?.(new fe("dial-queue:already-connected")),s;let i=this.queue.queue.find(a=>{if(n?.equals(a.options.peerId)===!0)return!0;let c=a.options.multiaddrs;if(c==null)return!1;for(let u of o)if(c.has(u.toString()))return!0;return!1});if(i!=null){this.log("joining existing dial target for %p",n);for(let a of o)i.options.multiaddrs.add(a.toString());return t.onProgress?.(new fe("dial-queue:already-in-dial-queue")),i.join(t)}if(this.queue.size>=this.maxDialQueueLength)throw new Dr("Dial queue is full");return this.log("creating dial target for %p",n,o.map(a=>a.toString())),t.onProgress?.(new fe("dial-queue:add-to-dial-queue")),this.queue.add(async a=>{a?.onProgress?.(new fe("dial-queue:start-dial"));let c=this.createDialAbortController(a?.signal),u;try{u=await this.calculateMultiaddrs(n,a?.multiaddrs,{...a,signal:c}),a?.onProgress?.(new fe("dial-queue:calculated-addresses",u)),u.map(({multiaddr:f})=>f.toString()).forEach(f=>{a?.multiaddrs.add(f)})}catch(f){throw c.clear(),f}try{let f=0,l=[];for(let d of u){if(f===this.maxPeerAddrsToDial)throw this.log("dialed maxPeerAddrsToDial (%d) addresses for %p, not trying any others",f,n),new Dr("Peer had more than maxPeerAddrsToDial");f++;try{let h=await this.components.transportManager.dial(d.multiaddr,{...a,signal:c});this.log("dial to %a succeeded",d.multiaddr);try{await this.components.peerStore.merge(h.remotePeer,{multiaddrs:[h.remoteAddr],metadata:{[bp]:P(Date.now().toString())}})}catch(p){this.log.error("could not update last dial failure key for %p",n,p)}return h}catch(h){if(this.log.error("dial failed to %a",d.multiaddr,h),n!=null)try{await this.components.peerStore.merge(n,{metadata:{[wp]:P(Date.now().toString())}})}catch(p){this.log.error("could not update last dial failure key for %p",n,p)}if(c.aborted)throw new Vo(h.message);l.push(h)}}throw l.length===1?l[0]:new AggregateError(l,"All multiaddr dials failed")}finally{c.clear()}},{peerId:n,priority:t.priority??fu,multiaddrs:new Set(o.map(a=>a.toString())),signal:t.signal,onProgress:t.onProgress})}createDialAbortController(e){let t=Ot([AbortSignal.timeout(this.dialTimeout),this.shutDownController.signal,e]);return ee(1/0,t),t}async calculateMultiaddrs(e,t=new Set,n={}){let o=[...t].map(l=>({multiaddr:oe(l),isCertified:!1}));if(e!=null){if(this.components.peerId.equals(e))throw new Dr("Tried to dial self");if(await this.components.connectionGater.denyDialPeer?.(e)===!0)throw new So("The dial request is blocked by gater.allowDialPeer");if(o.length===0){this.log("loading multiaddrs for %p",e);try{let l=await this.components.peerStore.get(e);o.push(...l.addresses),this.log("loaded multiaddrs for %p",e,o.map(({multiaddr:d})=>d.toString()))}catch(l){if(l.name!=="NotFoundError")throw l}}if(o.length===0){this.log("looking up multiaddrs for %p in the peer routing",e);try{let l=await this.components.peerRouting.findPeer(e);this.log("found multiaddrs for %p in the peer routing",e,o.map(({multiaddr:d})=>d.toString())),o.push(...l.multiaddrs.map(d=>({multiaddr:d,isCertified:!1})))}catch(l){l.name!=="NoPeerRoutersError"&&this.log.error("looking up multiaddrs for %p in the peer routing failed",e,l)}}}let s=(await Promise.all(o.map(async l=>{let d=await vp(l.multiaddr,{dns:this.components.dns,...n,log:this.log});return d.length===1&&d[0].equals(l.multiaddr)?l:d.map(h=>({multiaddr:h,isCertified:!1}))}))).flat();if(e!=null){let l=`/p2p/${e.toString()}`;s=s.map(d=>d.multiaddr.protos().pop()?.path===!0?d:d.multiaddr.getPeerId()==null?{multiaddr:d.multiaddr.encapsulate(l),isCertified:d.isCertified}:d)}let i=s.filter(l=>{if(this.components.transportManager.dialTransportForMultiaddr(l.multiaddr)==null)return!1;let d=l.multiaddr.getPeerId();return e!=null&&d!=null?e.equals(d):!0}),a=new Map;for(let l of i){let d=l.multiaddr.toString(),h=a.get(d);if(h!=null){h.isCertified=h.isCertified||l.isCertified||!1;continue}a.set(d,l)}let c=[...a.values()];if(c.length===0)throw new kr("The dial request has no valid addresses");let u=[];for(let l of c)this.components.connectionGater.denyDialMultiaddr!=null&&await this.components.connectionGater.denyDialMultiaddr(l.multiaddr)||u.push(l);let f=u.sort(this.addressSorter);if(f.length===0)throw new So("The connection gater denied all addresses in the dial request");return this.log.trace("addresses for %p before filtering",e??"unknown peer",s.map(({multiaddr:l})=>l.toString())),this.log.trace("addresses for %p after filtering",e??"unknown peer",f.map(({multiaddr:l})=>l.toString())),f}async isDialable(e,t={}){Array.isArray(e)||(e=[e]);try{let n=await this.calculateMultiaddrs(void 0,new Set(e.map(o=>o.toString())),t);return t.runOnLimitedConnection===!1?n.find(o=>!lo.matches(o.multiaddr))!=null:!0}catch(n){this.log.trace("error calculating if multiaddr(s) were dialable",n)}return!1}};var ia=class extends vn{has(e){return this.find(e)!=null}find(e){return this.queue.find(t=>e.equals(t.options.peerId))}};var kp=ar(Bp(),1);var $w=Object.prototype.toString,Kw=r=>$w.call(r)==="[object Error]",qw=new Set(["network error","Failed to fetch","NetworkError when attempting to fetch resource.","The Internet connection appears to be offline.","Load failed","Network request failed","fetch failed","terminated"]);function hu(r){return r&&Kw(r)&&r.name==="TypeError"&&typeof r.message=="string"?r.message==="Load failed"?r.stack===void 0:qw.has(r.message):!1}var du=class extends Error{constructor(e){super(),e instanceof Error?(this.originalError=e,{message:e}=e):(this.originalError=new Error(e),this.originalError.stack=this.stack),this.name="AbortError",this.message=e}},Ip=(r,e,t)=>{let n=t.retries-(e-1);return r.attemptNumber=e,r.retriesLeft=n,r};async function pu(r,e){return new Promise((t,n)=>{e={onFailedAttempt(){},retries:10,shouldRetry:()=>!0,...e};let o=kp.default.operation(e),s=()=>{o.stop(),n(e.signal?.reason)};e.signal&&!e.signal.aborted&&e.signal.addEventListener("abort",s,{once:!0});let i=()=>{e.signal?.removeEventListener("abort",s),o.stop()};o.attempt(async a=>{try{let c=await r(a);i(),t(c)}catch(c){try{if(!(c instanceof Error))throw new TypeError(`Non-error was thrown: "${c}". You should only throw errors.`);if(c instanceof du)throw c.originalError;if(c instanceof TypeError&&!hu(c))throw c;if(Ip(c,a,e),await e.shouldRetry(c)||(o.stop(),n(c)),await e.onFailedAttempt(c),!o.retry(c))throw o.mainError()}catch(u){Ip(u,a,e),i(),n(u)}}})})}var aa=class{log;queue;started;peerStore;retries;retryInterval;backoffFactor;connectionManager;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:reconnect-queue"),this.peerStore=e.peerStore,this.connectionManager=e.connectionManager,this.queue=new ia({concurrency:t.maxParallelReconnects??5,metricName:"libp2p_reconnect_queue",metrics:e.metrics}),this.started=!1,this.retries=t.retries??5,this.backoffFactor=t.backoffFactor,this.retryInterval=t.retryInterval,e.events.addEventListener("peer:disconnect",n=>{this.maybeReconnect(n.detail).catch(o=>{this.log.error("failed to maybe reconnect to %p",n.detail,o)})})}async maybeReconnect(e){!this.started||!(await this.peerStore.get(e)).tags.has(Ra)||this.queue.has(e)||this.queue.add(async n=>{await pu(async o=>{if(this.started)try{await this.connectionManager.openConnection(e,{signal:n?.signal})}catch(s){throw this.log("reconnecting to %p attempt %d of %d failed",e,o,this.retries,s),s}},{signal:n?.signal,retries:this.retries,factor:this.backoffFactor,minTimeout:this.retryInterval})},{peerId:e}).catch(n=>{this.log.error("failed to reconnect to %p",e,n)})}start(){this.started=!0}async afterStart(){Promise.resolve().then(async()=>{let e=await this.peerStore.all({filters:[t=>t.tags.has(Ra)]});await Promise.all(e.map(async t=>{await this.connectionManager.openConnection(t.id).catch(n=>{this.log.error(n)})}))}).catch(e=>{this.log.error(e)})}stop(){this.started=!1,this.queue.abort()}};var fu=50,mu={maxConnections:Xi,inboundConnectionThreshold:5,maxIncomingPendingConnections:10},ca=class{started;connections;allow;deny;maxIncomingPendingConnections;incomingPendingConnections;maxConnections;dialQueue;reconnectQueue;connectionPruner;inboundConnectionRateLimiter;peerStore;metrics;events;log;peerId;constructor(e,t={}){if(this.maxConnections=t.maxConnections??mu.maxConnections,this.maxConnections<1)throw new D("Connection Manager maxConnections must be greater than 0");this.connections=new lt,this.started=!1,this.peerId=e.peerId,this.peerStore=e.peerStore,this.metrics=e.metrics,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager"),this.onConnect=this.onConnect.bind(this),this.onDisconnect=this.onDisconnect.bind(this),this.events.addEventListener("connection:open",this.onConnect),this.events.addEventListener("connection:close",this.onDisconnect),this.allow=(t.allow??[]).map(n=>oe(n)),this.deny=(t.deny??[]).map(n=>oe(n)),this.incomingPendingConnections=0,this.maxIncomingPendingConnections=t.maxIncomingPendingConnections??mu.maxIncomingPendingConnections,this.inboundConnectionRateLimiter=new ji({points:t.inboundConnectionThreshold??mu.inboundConnectionThreshold,duration:1}),this.connectionPruner=new Ji({connectionManager:this,peerStore:e.peerStore,events:e.events,logger:e.logger},{maxConnections:this.maxConnections,allow:this.allow}),this.dialQueue=new sa(e,{addressSorter:t.addressSorter??fn,maxParallelDials:t.maxParallelDials??Yi,maxDialQueueLength:t.maxDialQueueLength??500,maxPeerAddrsToDial:t.maxPeerAddrsToDial??25,dialTimeout:t.dialTimeout??5e3,resolvers:t.resolvers??{dnsaddr:br},connections:this.connections}),this.reconnectQueue=new aa({events:e.events,peerStore:e.peerStore,logger:e.logger,connectionManager:this},{retries:t.reconnectRetries,retryInterval:t.reconnectRetryInterval,backoffFactor:t.reconnectBackoffFactor,maxParallelReconnects:t.maxParallelReconnects})}[Symbol.toStringTag]="@libp2p/connection-manager";isStarted(){return this.started}async start(){this.metrics?.registerMetricGroup("libp2p_connection_manager_connections",{calculate:()=>{let e={inbound:0,"inbound pending":this.incomingPendingConnections,outbound:0};for(let t of this.connections.values())for(let n of t)n.direction==="inbound"?e.inbound++:e.outbound++;return e}}),this.metrics?.registerMetricGroup("libp2p_protocol_streams_total",{label:"protocol",calculate:()=>{let e={};for(let t of this.connections.values())for(let n of t)for(let o of n.streams){let s=`${o.direction} ${o.protocol??"unnegotiated"}`;e[s]=(e[s]??0)+1}return e}}),this.metrics?.registerMetricGroup("libp2p_connection_manager_protocol_streams_per_connection_90th_percentile",{label:"protocol",calculate:()=>{let e={};for(let n of this.connections.values())for(let o of n){let s={};for(let i of o.streams){let a=`${i.direction} ${i.protocol??"unnegotiated"}`;s[a]=(s[a]??0)+1}for(let[i,a]of Object.entries(s))e[i]=e[i]??[],e[i].push(a)}let t={};for(let[n,o]of Object.entries(e)){o=o.sort((i,a)=>i-a);let s=Math.floor(o.length*.9);t[n]=o[s]}return t}}),await Mu(this.dialQueue,this.reconnectQueue),this.started=!0,this.log("started")}async stop(){await Uu(this.reconnectQueue,this.dialQueue);let e=[];for(let t of this.connections.values())for(let n of t)e.push((async()=>{try{await n.close()}catch(o){this.log.error(o)}})());this.log("closing %d connections",e.length),await Promise.all(e),this.connections.clear(),this.log("stopped")}onConnect(e){this._onConnect(e).catch(t=>{this.log.error(t)})}async _onConnect(e){let{detail:t}=e;if(!this.started){await t.close();return}let n=t.remotePeer,o=this.connections.get(n),s=!1;o!=null?o.push(t):(s=!0,this.connections.set(n,[t])),n.publicKey!=null&&n.type==="RSA"&&await this.peerStore.patch(n,{publicKey:n.publicKey}),s&&this.events.safeDispatchEvent("peer:connect",{detail:t.remotePeer})}onDisconnect(e){let{detail:t}=e;if(!this.started)return;let n=t.remotePeer,o=this.connections.get(n);o!=null&&o.length>1?(o=o.filter(s=>s.id!==t.id),this.connections.set(n,o)):o!=null&&(this.connections.delete(n),this.events.safeDispatchEvent("peer:disconnect",{detail:t.remotePeer}))}getConnections(e){if(e!=null)return this.connections.get(e)??[];let t=[];for(let n of this.connections.values())t=t.concat(n);return t}getConnectionsMap(){return this.connections}async openConnection(e,t={}){if(!this.isStarted())throw new xt("Not started");t.signal?.throwIfAborted();let{peerId:n}=Zi(e);if(this.peerId.equals(n))throw new Bn("Can not dial self");if(n!=null&&t.force!==!0){this.log("dial %p",n);let a=this.getConnections(n).find(c=>c.limits==null);if(a!=null)return this.log("had an existing non-limited connection to %p",n),t.onProgress?.(new fe("dial-queue:already-connected")),a}let o=await this.dialQueue.dial(e,{...t,priority:t.priority??fu});if(o.remotePeer.equals(this.peerId)){let a=new Bn("Can not dial self");throw o.abort(a),a}let s=this.connections.get(o.remotePeer);s==null&&(s=[],this.connections.set(o.remotePeer,s));let i=!1;for(let a of s)if(a.id===o.id&&(i=!0),t.force!==!0&&a.id!==o.id&&a.remoteAddr.equals(o.remoteAddr))return o.abort(new Vt("Duplicate multiaddr connection")),a;return i||s.push(o),o}async closeConnections(e,t={}){let n=this.connections.get(e)??[];await Promise.all(n.map(async o=>{try{await o.close(t)}catch(s){o.abort(s)}}))}async acceptIncomingConnection(e){if(this.deny.some(o=>e.remoteAddr.toString().startsWith(o.toString())))return this.log("connection from %a refused - connection remote address was in deny list",e.remoteAddr),!1;if(this.allow.some(o=>e.remoteAddr.toString().startsWith(o.toString())))return this.incomingPendingConnections++,!0;if(this.incomingPendingConnections===this.maxIncomingPendingConnections)return this.log("connection from %a refused - incomingPendingConnections exceeded by host",e.remoteAddr),!1;if(e.remoteAddr.isThinWaistAddress()){let o=e.remoteAddr.nodeAddress().address;try{await this.inboundConnectionRateLimiter.consume(o,1)}catch{return this.log("connection from %a refused - inboundConnectionThreshold exceeded by host %s",e.remoteAddr,o),!1}}return this.getConnections().length<this.maxConnections?(this.incomingPendingConnections++,!0):(this.log("connection from %a refused - maxConnections exceeded",e.remoteAddr),!1)}afterUpgradeInbound(){this.incomingPendingConnections--}getDialQueue(){let e={queued:"queued",running:"active",errored:"error",complete:"success"};return this.dialQueue.queue.queue.map(t=>({id:t.id,status:e[t.status],peerId:t.options.peerId,multiaddrs:[...t.options.multiaddrs].map(n=>oe(n))}))}async isDialable(e,t={}){return this.dialQueue.isDialable(e,t)}};var En=class{movingAverage;variance;deviation;forecast;timespan;previousTime;constructor(e){this.timespan=e,this.movingAverage=0,this.variance=0,this.deviation=0,this.forecast=0}alpha(e,t){return 1-Math.exp(-(e-t)/this.timespan)}push(e,t=Date.now()){if(this.previousTime!=null){let n=this.alpha(t,this.previousTime),o=e-this.movingAverage,s=n*o;this.movingAverage=n*e+(1-n)*this.movingAverage,this.variance=(1-n)*(this.variance+o*s),this.deviation=Math.sqrt(this.variance),this.forecast=this.movingAverage+n*o}else this.movingAverage=e;this.previousTime=t}};var Ww=1.2,jw=2,Zw=2e3,la=class{success;failure;next;metric;timeoutMultiplier;failureMultiplier;minTimeout;constructor(e={}){this.success=new En(e.interval??5e3),this.failure=new En(e.interval??5e3),this.next=new En(e.interval??5e3),this.failureMultiplier=e.failureMultiplier??jw,this.timeoutMultiplier=e.timeoutMultiplier??Ww,this.minTimeout=e.minTimeout??Zw,e.metricName!=null&&(this.metric=e.metrics?.registerMetricGroup(e.metricName))}getTimeoutSignal(e={}){let t=Math.max(Math.round(this.next.movingAverage*(e.timeoutFactor??this.timeoutMultiplier)),this.minTimeout),n=AbortSignal.timeout(t),o=Ot([e.signal,n]);return ee(1/0,o,n),o.start=Date.now(),o.timeout=t,o}cleanUp(e){let t=Date.now()-e.start;e.aborted?(this.failure.push(t),this.next.push(t*this.failureMultiplier),this.metric?.update({failureMovingAverage:this.failure.movingAverage,failureDeviation:this.failure.deviation,failureForecast:this.failure.forecast,failureVariance:this.failure.variance,failure:t})):(this.success.push(t),this.next.push(t),this.metric?.update({successMovingAverage:this.success.movingAverage,successDeviation:this.success.deviation,successForecast:this.success.forecast,successVariance:this.success.variance,success:t}))}};var gu=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=le(),this.haveNext=le()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let e=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=le(),e}async throw(e){return this.ended=!0,e!=null&&(this.haveNext.promise.catch(()=>{}),this.haveNext.reject(e)),{done:!0,value:void 0}}async return(){let e={done:!0,value:void 0};return await this._push(void 0),e}async push(e,t){await this._push(e,t)}async end(e,t){e!=null?await this.throw(e):await this._push(void 0,t)}async _push(e,t){if(e!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");for(;this.nextResult!=null;)await this.readNext.promise;e!=null?this.nextResult={done:!1,value:e}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=le(),await sr(this.readNext.promise,t?.signal,t)}};function Cp(){return new gu}var ua=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var yu=class extends Error{code;constructor(e,t){super(e),this.code=t}},wu=class extends yu{type;constructor(e){super(e,"ABORT_ERR"),this.type="aborted",this.name="AbortError"}};function fa(r,e){let t=Cp();r.sink(t).catch(async i=>{await t.end(i)}),r.sink=async i=>{for await(let a of i)await t.push(a);await t.end()};let n=r.source;r.source[Symbol.iterator]!=null?n=r.source[Symbol.iterator]():r.source[Symbol.asyncIterator]!=null&&(n=r.source[Symbol.asyncIterator]());let o=new we;return{read:async(i,a)=>{a?.signal?.throwIfAborted();let c,u=new Promise((f,l)=>{c=()=>{l(new wu("Read aborted"))},a?.signal?.addEventListener("abort",c)});try{if(i==null){let{done:l,value:d}=await Promise.race([n.next(),u]);return l===!0?new we:d}for(;o.byteLength<i;){let{value:l,done:d}=await Promise.race([n.next(),u]);if(d===!0)throw new ua("unexpected end of input");o.append(l)}let f=o.sublist(0,i);return o.consume(i),f}finally{c!=null&&a?.signal?.removeEventListener("abort",c)}},write:async(i,a)=>{a?.signal?.throwIfAborted(),i instanceof Uint8Array?await t.push(i,a):await t.push(i.subarray(),a)},unwrap:()=>{if(o.byteLength>0){let i=r.source;r.source=async function*(){e?.yieldBytes===!1?yield o:yield*o,yield*i}()}return r}}}var Xw=1e4,Yw="1.0.0",Jw="ping",Qw="ipfs",Tp=32,eb=!0,ha=class{protocol;components;log;heartbeatInterval;pingIntervalMs;abortController;timeout;abortConnectionOnPingFailure;constructor(e,t={}){this.components=e,this.protocol=`/${t.protocolPrefix??Qw}/${Jw}/${Yw}`,this.log=e.logger.forComponent("libp2p:connection-monitor"),this.pingIntervalMs=t.pingInterval??Xw,this.abortConnectionOnPingFailure=t.abortConnectionOnPingFailure??eb,this.timeout=new la({...t.pingTimeout??{},metrics:e.metrics,metricName:"libp2p_connection_monitor_ping_time_milliseconds"})}[Symbol.toStringTag]="@libp2p/connection-monitor";[kn]=["@libp2p/connection-monitor"];start(){this.abortController=new AbortController,ee(1/0,this.abortController.signal),this.heartbeatInterval=setInterval(()=>{this.components.connectionManager.getConnections().forEach(e=>{Promise.resolve().then(async()=>{let t=Date.now();try{let n=this.timeout.getTimeoutSignal({signal:this.abortController?.signal}),o=await e.newStream(this.protocol,{signal:n,runOnLimitedConnection:!0}),s=fa(o);t=Date.now(),await Promise.all([s.write(tn(Tp),{signal:n}),s.read(Tp,{signal:n})]),e.rtt=Date.now()-t,await s.unwrap().close({signal:n})}catch(n){if(n.name!=="UnsupportedProtocolError")throw n;e.rtt=(Date.now()-t)/2}}).catch(t=>{this.log.error("error during heartbeat",t),this.abortConnectionOnPingFailure?(this.log.error("aborting connection due to ping failure"),e.abort(t)):this.log("connection ping failed, but not aborting due to abortConnectionOnPingFailure flag")})})},this.pingIntervalMs)}stop(){this.abortController?.abort(),this.heartbeatInterval!=null&&clearInterval(this.heartbeatInterval)}};function tb(r){return r[Symbol.asyncIterator]!=null}function rb(...r){let e=[];for(let t of r)tb(t)||e.push(t);return e.length===r.length?function*(){for(let t of e)yield*t}():async function*(){let t=ea({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(r.map(async n=>{for await(let o of n)t.push(o)})),t.end()}catch(n){t.end(n)}}),yield*t}()}var Bo=rb;var da=class{routers;started;components;constructor(e,t){this.routers=t.routers??[],this.started=!1,this.components=e}[Symbol.toStringTag]="@libp2p/content-routing";isStarted(){return this.started}async start(){this.started=!0}async stop(){this.started=!1}async*findProviders(e,t={}){if(this.routers.length===0)throw new Eo("No content routers available");let n=this,o=new vr;for await(let s of Bo(...n.routers.map(i=>i.findProviders(e,t))))s!=null&&(s.multiaddrs.length>0&&await this.components.peerStore.merge(s.id,{multiaddrs:s.multiaddrs}),!o.has(s.id)&&(o.add(s.id),yield s))}async provide(e,t={}){if(this.routers.length===0)throw new Eo("No content routers available");await Promise.all(this.routers.map(async n=>{await n.provide(e,t)}))}async put(e,t,n){if(!this.isStarted())throw new xt;await Promise.all(this.routers.map(async o=>{await o.put(e,t,n)}))}async get(e,t){if(!this.isStarted())throw new xt;return Promise.any(this.routers.map(async n=>n.get(e,t)))}};var pa=globalThis.CustomEvent??Event;async function*bu(r,e={}){let t=e.concurrency??1/0;t<1&&(t=1/0);let n=e.ordered==null?!1:e.ordered,o=new EventTarget,s=[],i=le(),a=le(),c=!1,u,f=!1;o.addEventListener("task-complete",()=>{a.resolve()}),Promise.resolve().then(async()=>{try{for await(let p of r){if(s.length===t&&(i=le(),await i.promise),f)break;let m={done:!1};s.push(m),p().then(g=>{m.done=!0,m.ok=!0,m.value=g,o.dispatchEvent(new pa("task-complete"))},g=>{m.done=!0,m.err=g,o.dispatchEvent(new pa("task-complete"))})}c=!0,o.dispatchEvent(new pa("task-complete"))}catch(p){u=p,o.dispatchEvent(new pa("task-complete"))}});function l(){return n?s[0]?.done:!!s.find(p=>p.done)}function*d(){for(;s.length>0&&s[0].done;){let p=s[0];if(s.shift(),p.ok)yield p.value;else throw f=!0,i.resolve(),p.err;i.resolve()}}function*h(){for(;l();)for(let p=0;p<s.length;p++)if(s[p].done){let m=s[p];if(s.splice(p,1),p--,m.ok)yield m.value;else throw f=!0,i.resolve(),m.err;i.resolve()}}for(;;){if(l()||(a=le(),await a.promise),u!=null)throw u;if(n?yield*d():yield*h(),c&&s.length===0)break}}var ma=class{log;peerId;peerStore;routers;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-routing"),this.peerId=e.peerId,this.peerStore=e.peerStore,this.routers=t.routers??[]}[Symbol.toStringTag]="@libp2p/peer-routing";async findPeer(e,t){if(this.routers.length===0)throw new Ao("No peer routers available");if(e.toString()===this.peerId.toString())throw new Hi("Should not try to find self");let n=this,o=Bo(...this.routers.map(s=>async function*(){try{yield await s.findPeer(e,t)}catch(i){n.log.error(i)}}()));for await(let s of o)if(s!=null)return s.multiaddrs.length>0&&await this.peerStore.merge(s.id,{multiaddrs:s.multiaddrs}),s;throw new Mo}async*getClosestPeers(e,t={}){if(this.routers.length===0)throw new Ao("No peer routers available");let n=this,o=$l(1024);for await(let s of bu(async function*(){let i=Bo(...n.routers.map(a=>a.getClosestPeers(e,t)));for await(let a of i)yield async()=>{if(a.multiaddrs.length===0)try{a=await n.findPeer(a.id,{...t,useCache:!1})}catch(c){n.log.error("could not find peer multiaddrs",c);return}return a}}()))s!=null&&(s.multiaddrs.length>0&&await this.peerStore.merge(s.id,{multiaddrs:s.multiaddrs}),!o.has(s.id.toMultihash().bytes)&&(o.add(s.id.toMultihash().bytes),yield s))}};var ga=class extends vt{peerRouting;log;walking;walkers;shutdownController;walkController;needNext;constructor(e){super(),this.log=e.logger.forComponent("libp2p:random-walk"),this.peerRouting=e.peerRouting,this.walkers=0,this.walking=!1,this.shutdownController=new AbortController,ee(1/0,this.shutdownController.signal)}[Symbol.toStringTag]="@libp2p/random-walk";start(){this.shutdownController=new AbortController,ee(1/0,this.shutdownController.signal)}stop(){this.shutdownController.abort()}async*walk(e){this.walking||this.startWalk(),this.walkers++;let t=Ot([this.shutdownController.signal,e?.signal]);ee(1/0,t);try{for(;;)this.needNext?.resolve(),this.needNext=le(),yield(await xn(this,"walk:peer",t,{errorEvent:"walk:error"})).detail}finally{t.clear(),this.walkers--,this.walkers===0&&(this.walkController?.abort(),this.walkController=void 0)}}startWalk(){this.walking=!0,this.walkController=new AbortController,ee(1/0,this.walkController.signal);let e=Ot([this.walkController.signal,this.shutdownController.signal]);ee(1/0,e);let t=Date.now(),n=0;Promise.resolve().then(async()=>{for(this.log("start walk");this.walkers>0;)try{let o=tn(32),s=Date.now();for await(let i of this.peerRouting.getClosestPeers(o,{signal:e}))e.aborted&&this.log("aborting walk"),e.throwIfAborted(),this.log("found peer %p after %dms for %d walkers",i.id,Date.now()-s,this.walkers),n++,this.safeDispatchEvent("walk:peer",{detail:i}),this.walkers===1&&this.needNext!=null&&(this.log("wait for need next"),await sr(this.needNext.promise,e)),s=Date.now();this.log("walk iteration for %b and %d walkers finished, found %d peers",o,this.walkers,n)}catch(o){this.log.error("randomwalk errored",o),this.safeDispatchEvent("walk:error",{detail:o})}this.log("no walkers left, ended walk")}).catch(o=>{this.log.error("randomwalk errored",o)}).finally(()=>{this.log("finished walk, found %d peers after %dms",n,Date.now()-t),this.walking=!1})}};var xu=32,vu=64,ya=class{log;topologies;handlers;components;constructor(e){this.log=e.logger.forComponent("libp2p:registrar"),this.topologies=new Map,this.handlers=new Map,this.components=e,this._onDisconnect=this._onDisconnect.bind(this),this._onPeerUpdate=this._onPeerUpdate.bind(this),this._onPeerIdentify=this._onPeerIdentify.bind(this),this.components.events.addEventListener("peer:disconnect",this._onDisconnect),this.components.events.addEventListener("peer:update",this._onPeerUpdate),this.components.events.addEventListener("peer:identify",this._onPeerIdentify)}[Symbol.toStringTag]="@libp2p/registrar";getProtocols(){return Array.from(new Set([...this.handlers.keys()])).sort()}getHandler(e){let t=this.handlers.get(e);if(t==null)throw new $i(`No handler registered for protocol ${e}`);return t}getTopologies(e){let t=this.topologies.get(e);return t==null?[]:[...t.values()]}async handle(e,t,n){if(this.handlers.has(e))throw new Ki(`Handler already registered for protocol ${e}`);let o=wi.bind({ignoreUndefined:!0})({maxInboundStreams:xu,maxOutboundStreams:vu},n);this.handlers.set(e,{handler:t,options:o}),await this.components.peerStore.merge(this.components.peerId,{protocols:[e]})}async unhandle(e){(Array.isArray(e)?e:[e]).forEach(n=>{this.handlers.delete(n)}),await this.components.peerStore.patch(this.components.peerId,{protocols:this.getProtocols()})}async register(e,t){if(t==null)throw new D("invalid topology");let n=`${(Math.random()*1e9).toString(36)}${Date.now()}`,o=this.topologies.get(e);return o==null&&(o=new Map,this.topologies.set(e,o)),o.set(n,t),n}unregister(e){for(let[t,n]of this.topologies.entries())n.has(e)&&(n.delete(e),n.size===0&&this.topologies.delete(t))}_onDisconnect(e){let t=e.detail;this.components.peerStore.get(t).then(n=>{for(let o of n.protocols){let s=this.topologies.get(o);if(s!=null)for(let i of s.values())i.filter?.has(t)!==!1&&(i.filter?.remove(t),i.onDisconnect?.(t))}}).catch(n=>{n.name!=="NotFoundError"&&this.log.error("could not inform topologies of disconnecting peer %p",t,n)})}_onPeerUpdate(e){let{peer:t,previous:n}=e.detail,o=(n?.protocols??[]).filter(s=>!t.protocols.includes(s));for(let s of o){let i=this.topologies.get(s);if(i!=null)for(let a of i.values())a.filter?.has(t.id)!==!1&&(a.filter?.remove(t.id),a.onDisconnect?.(t.id))}}_onPeerIdentify(e){let t=e.detail.protocols,n=e.detail.connection,o=e.detail.peerId;for(let s of t){let i=this.topologies.get(s);if(i!=null)for(let a of i.values())n.limits!=null&&a.notifyOnLimitedConnection!==!0||a.filter?.has(o)!==!0&&(a.filter?.add(o),a.onConnect?.(o,n))}}};var Eu=class extends Map{metric;constructor(e){super();let{name:t,metrics:n}=e;this.metric=n.registerMetric(t),this.updateComponentMetric()}set(e,t){return super.set(e,t),this.updateComponentMetric(),this}delete(e){let t=super.delete(e);return this.updateComponentMetric(),t}clear(){super.clear(),this.updateComponentMetric()}updateComponentMetric(){this.metric.update(this.size)}};function Lp(r){let{name:e,metrics:t}=r,n;return t!=null?n=new Eu({name:e,metrics:t}):n=new Map,n}var wa=class{log;components;transports;listeners;faultTolerance;started;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:transports"),this.components=e,this.started=!1,this.transports=new Map,this.listeners=Lp({name:"libp2p_transport_manager_listeners",metrics:this.components.metrics}),this.faultTolerance=t.faultTolerance??Ft.FATAL_ALL}[Symbol.toStringTag]="@libp2p/transport-manager";add(e){let t=e[Symbol.toStringTag];if(t==null)throw new D("Transport must have a valid tag");if(this.transports.has(t))throw new D(`There is already a transport with the tag ${t}`);this.log("adding transport %s",t),this.transports.set(t,e),this.listeners.has(t)||this.listeners.set(t,[])}isStarted(){return this.started}start(){this.started=!0}async afterStart(){let e=this.components.addressManager.getListenAddrs();await this.listen(e)}async stop(){let e=[];for(let[t,n]of this.listeners)for(this.log("closing listeners for %s",t);n.length>0;){let o=n.pop();o!=null&&e.push(o.close())}await Promise.all(e),this.log("all listeners closed");for(let t of this.listeners.keys())this.listeners.set(t,[]);this.started=!1}async dial(e,t){let n=this.dialTransportForMultiaddr(e);if(n==null)throw new Gi(`No transport available for address ${String(e)}`);return t?.onProgress?.(new fe("transport-manager:selected-transport",n[Symbol.toStringTag])),n.dial(e,{...t,upgrader:this.components.upgrader})}getAddrs(){let e=[];for(let t of this.listeners.values())for(let n of t)e=[...e,...n.getAddrs()];return e}getTransports(){return Array.of(...this.transports.values())}getListeners(){return Array.of(...this.listeners.values()).flat()}dialTransportForMultiaddr(e){for(let t of this.transports.values())if(t.dialFilter([e]).length>0)return t}listenTransportForMultiaddr(e){for(let t of this.transports.values())if(t.listenFilter([e]).length>0)return t}async listen(e){if(!this.isStarted())throw new xt("Not started");if(e==null||e.length===0){this.log("no addresses were provided for listening, this node is dial only");return}let t=[];for(let[n,o]of this.transports.entries()){let s=o.listenFilter(e),i=[];for(let u of s){this.log("creating listener for %s on %a",n,u);let f=o.createListener({upgrader:this.components.upgrader}),l=this.listeners.get(n)??[];l==null&&(l=[],this.listeners.set(n,l)),l.push(f),f.addEventListener("listening",()=>{this.components.events.safeDispatchEvent("transport:listening",{detail:f})}),f.addEventListener("close",()=>{let d=l.findIndex(h=>h===f);l.splice(d,1),this.components.events.safeDispatchEvent("transport:close",{detail:f})}),i.push(f.listen(u))}if(i.length===0){t.push(n);continue}if((await Promise.allSettled(i)).find(u=>u.status==="fulfilled")==null&&this.faultTolerance!==Ft.NO_FATAL)throw new kr(`Transport (${n}) could not listen on any available address`)}if(t.length===this.transports.size){let n=`no valid addresses were provided for transports [${t.join(", ")}]`;if(this.faultTolerance===Ft.FATAL_ALL)throw new kr(n);this.log(`libp2p in dial mode only: ${n}`)}}async remove(e){let t=this.listeners.get(e)??[];this.log.trace("removing transport %s",e);let n=[];for(this.log.trace("closing listeners for %s",e);t.length>0;){let o=t.pop();o!=null&&n.push(o.close())}await Promise.all(n),this.transports.delete(e),this.listeners.delete(e)}async removeAll(){let e=[];for(let t of this.transports.keys())e.push(this.remove(t));await Promise.all(e)}};var Be="/multistream/1.0.0";var ba=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},xa=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},va=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"};function Io(r,e={}){let t=fa(r,e);e.maxDataLength!=null&&e.maxLengthLength==null&&(e.maxLengthLength=he(e.maxDataLength));let n=e?.lengthDecoder??it,o=e?.lengthEncoder??Ce;return{read:async i=>{let a=-1,c=new we;for(;;){c.append(await t.read(1,i));try{a=n(c)}catch(u){if(u instanceof RangeError)continue;throw u}if(a<0)throw new ba("Invalid message length");if(e?.maxLengthLength!=null&&c.byteLength>e.maxLengthLength)throw new va("message length length too long");if(a>-1)break}if(e?.maxDataLength!=null&&a>e.maxDataLength)throw new xa("message length too long");return t.read(a,i)},write:async(i,a)=>{await t.write(new we(o(i.byteLength),i),a)},writeV:async(i,a)=>{let c=new we(...i.flatMap(u=>[o(u.byteLength),u]));await t.write(c,a)},unwrap:()=>t.unwrap()}}var nb=P(`
-`);async function Nr(r,e,t){await r.write(e,t)}async function Np(r,e,t){await r.writeV(e,t)}async function ob(r,e){let t=await r.read(e);if(t.byteLength===0||t.get(t.byteLength-1)!==nb[0])throw e.log.error("Invalid mss message - missing newline",t),new Fo("Missing newline");return t.sublist(0,-1)}async function ir(r,e){let t=await ob(r,e);return H(t.subarray())}async function ko(r,e,t){if(e=Array.isArray(e)?[...e]:[e],e.length===1&&t.negotiateFully===!1)return sb(r,e[0],t);let n=Io(r,{...t,maxDataLength:1024}),o=e.shift();if(o==null)throw new Error("At least one protocol must be specified");t.log.trace('select: write ["%s", "%s"]',Be,o);let s=P(`${Be}
+`)}`:`${t} :`}};Wf=Qt;k.Constructed=Wf;Qt.NAME="CONSTRUCTED";var ys=class extends Le{fromBER(e,t,n){return t}toBER(e){return ct}};ys.override="EndOfContentValueBlock";var jf,ws=class extends Ae{constructor(e={}){super(e,ys),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}};jf=ws;k.EndOfContent=jf;ws.NAME=Gn;var Zf,Qr=class extends Ae{constructor(e={}){super(e,Le),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}fromBER(e,t,n){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=n,t+n>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+n}toBER(e,t){let n=new ArrayBuffer(2);if(!e){let o=new Uint8Array(n);o[0]=5,o[1]=0}return t&&t.write(n),n}onAsciiEncoding(){return`${this.constructor.NAME}`}};Zf=Qr;k.Null=Zf;Qr.NAME="NULL";var bs=class extends Rt(Le){constructor({value:e,...t}={}){super(t),t.valueHex?this.valueHexView=q.BufferSourceConverter.toUint8Array(t.valueHex):this.valueHexView=new Uint8Array(1),e&&(this.value=e)}get value(){for(let e of this.valueHexView)if(e>0)return!0;return!1}set value(e){this.valueHexView[0]=e?255:0}fromBER(e,t,n){let o=q.BufferSourceConverter.toUint8Array(e);return Pt(this,o,t,n)?(this.valueHexView=o.subarray(t,t+n),n>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,zc.call(this),this.blockLength=n,t+n):-1}toBER(){return this.valueHexView.slice()}toJSON(){return{...super.toJSON(),value:this.value}}};bs.NAME="BooleanValueBlock";var Xf,xs=class extends Ae{constructor(e={}){super(e,bs),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.getValue}`}};Xf=xs;k.Boolean=Xf;xs.NAME="BOOLEAN";var vs=class extends Rt(pt){constructor({isConstructed:e=!1,...t}={}){super(t),this.isConstructed=e}fromBER(e,t,n){let o=0;if(this.isConstructed){if(this.isHexOnly=!1,o=pt.prototype.fromBER.call(this,e,t,n),o===-1)return o;for(let s=0;s<this.value.length;s++){let i=this.value[s].constructor.NAME;if(i===Gn){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(i!==Kf)return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,o=super.fromBER(e,t,n),this.blockLength=n;return o}toBER(e,t){return this.isConstructed?pt.prototype.toBER.call(this,e,t):e?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),isConstructed:this.isConstructed}}};vs.NAME="OctetStringValueBlock";var Yf,Es=class r extends Ae{constructor({idBlock:e={},lenBlock:t={},...n}={}){var o,s;(o=n.isConstructed)!==null&&o!==void 0||(n.isConstructed=!!(!((s=n.value)===null||s===void 0)&&s.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},vs),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,n){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,n===0)return this.idBlock.error.length===0&&(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length===0&&(this.blockLength+=this.lenBlock.blockLength),t;if(!this.valueBlock.isConstructed){let s=(e instanceof ArrayBuffer?new Uint8Array(e):e).subarray(t,t+n);try{if(s.byteLength){let i=Xs(s,0,s.byteLength);i.offset!==-1&&i.offset===n&&(this.valueBlock.value=[i.result])}}catch{}}return super.fromBER(e,t,n)}onAsciiEncoding(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?Qt.prototype.onAsciiEncoding.call(this):`${this.constructor.NAME} : ${q.Convert.ToHex(this.valueBlock.valueHexView)}`}getValue(){if(!this.idBlock.isConstructed)return this.valueBlock.valueHexView.slice().buffer;let e=[];for(let t of this.valueBlock.value)t instanceof r&&e.push(t.valueBlock.valueHexView);return q.BufferSourceConverter.concat(e)}};Yf=Es;k.OctetString=Yf;Es.NAME=Kf;var As=class extends Rt(pt){constructor({unusedBits:e=0,isConstructed:t=!1,...n}={}){super(n),this.unusedBits=e,this.isConstructed=t,this.blockLength=this.valueHexView.byteLength}fromBER(e,t,n){if(!n)return t;let o=-1;if(this.isConstructed){if(o=pt.prototype.fromBER.call(this,e,t,n),o===-1)return o;for(let a of this.value){let c=a.constructor.NAME;if(c===Gn){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(c!==qf)return this.error="BIT STRING may consists of BIT STRINGs only",-1;let u=a.valueBlock;if(this.unusedBits>0&&u.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;this.unusedBits=u.unusedBits}return o}let s=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,s,t,n))return-1;let i=s.subarray(t,t+n);if(this.unusedBits=i[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){let a=i.subarray(1);try{if(a.byteLength){let c=Xs(a,0,a.byteLength);c.offset!==-1&&c.offset===n-1&&(this.value=[c.result])}}catch{}}return this.valueHexView=i.subarray(1),this.blockLength=i.length,t+n}toBER(e,t){if(this.isConstructed)return pt.prototype.toBER.call(this,e,t);if(e)return new ArrayBuffer(this.valueHexView.byteLength+1);if(!this.valueHexView.byteLength)return ct;let n=new Uint8Array(this.valueHexView.length+1);return n[0]=this.unusedBits,n.set(this.valueHexView,1),n.buffer}toJSON(){return{...super.toJSON(),unusedBits:this.unusedBits,isConstructed:this.isConstructed}}};As.NAME="BitStringValueBlock";var Jf,en=class extends Ae{constructor({idBlock:e={},lenBlock:t={},...n}={}){var o,s;(o=n.isConstructed)!==null&&o!==void 0||(n.isConstructed=!!(!((s=n.value)===null||s===void 0)&&s.length)),super({idBlock:{isConstructed:n.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!n.isIndefiniteForm},...n},As),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}fromBER(e,t,n){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,n)}onAsciiEncoding(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return Qt.prototype.onAsciiEncoding.call(this);{let e=[],t=this.valueBlock.valueHexView;for(let o of t)e.push(o.toString(2).padStart(8,"0"));let n=e.join("");return`${this.constructor.NAME} : ${n.substring(0,n.length-this.valueBlock.unusedBits)}`}}};Jf=en;k.BitString=Jf;en.NAME=qf;var Qf;function k0(r,e){let t=new Uint8Array([0]),n=new Uint8Array(r),o=new Uint8Array(e),s=n.slice(0),i=s.length-1,a=o.slice(0),c=a.length-1,u=0,f=c<i?i:c,l=0;for(let d=f;d>=0;d--,l++){switch(!0){case l<a.length:u=s[i-l]+a[c-l]+t[0];break;default:u=s[i-l]+t[0]}switch(t[0]=u/10,!0){case l>=s.length:s=us(new Uint8Array([u%10]),s);break;default:s[i-l]=u%10}}return t[0]>0&&(s=us(t,s)),s}function $f(r){if(r>=qn.length)for(let e=qn.length;e<=r;e++){let t=new Uint8Array([0]),n=qn[e-1].slice(0);for(let o=n.length-1;o>=0;o--){let s=new Uint8Array([(n[o]<<1)+t[0]]);t[0]=s[0]/10,n[o]=s[0]%10}t[0]>0&&(n=us(t,n)),qn.push(n)}return qn[r]}function T0(r,e){let t=0,n=new Uint8Array(r),o=new Uint8Array(e),s=n.slice(0),i=s.length-1,a=o.slice(0),c=a.length-1,u,f=0;for(let l=c;l>=0;l--,f++)switch(u=s[i-f]-a[c-f]-t,!0){case u<0:t=1,s[i-f]=u+10;break;default:t=0,s[i-f]=u}if(t>0)for(let l=i-c+1;l>=0;l--,f++)if(u=s[i-f]-t,u<0)t=1,s[i-f]=u+10;else{t=0,s[i-f]=u;break}return s.slice()}var Wn=class extends Rt(Le){constructor({value:e,...t}={}){super(t),this._valueDec=0,t.valueHex&&this.setValueHex(),e!==void 0&&(this.valueDec=e)}setValueHex(){this.valueHexView.length>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,this.valueHexView.length>0&&(this._valueDec=zc.call(this)))}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this.valueHexView=new Uint8Array(Ff(e))}get valueDec(){return this._valueDec}fromDER(e,t,n,o=0){let s=this.fromBER(e,t,n);if(s===-1)return s;let i=this.valueHexView;return i[0]===0&&i[1]&128?this.valueHexView=i.subarray(1):o!==0&&i.length<o&&(o-i.length>1&&(o=i.length+1),this.valueHexView=i.subarray(o-i.length)),s}toDER(e=!1){let t=this.valueHexView;switch(!0){case(t[0]&128)!==0:{let n=new Uint8Array(this.valueHexView.length+1);n[0]=0,n.set(t,1),this.valueHexView=n}break;case(t[0]===0&&(t[1]&128)===0):this.valueHexView=this.valueHexView.subarray(1);break}return this.toBER(e)}fromBER(e,t,n){let o=super.fromBER(e,t,n);return o===-1||this.setValueHex(),o}toBER(e){return e?new ArrayBuffer(this.valueHexView.length):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}toString(){let e=this.valueHexView.length*8-1,t=new Uint8Array(this.valueHexView.length*8/3),n=0,o,s=this.valueHexView,i="",a=!1;for(let c=s.byteLength-1;c>=0;c--){o=s[c];for(let u=0;u<8;u++){if((o&1)===1)switch(n){case e:t=T0($f(n),t),i="-";break;default:t=k0(t,$f(n))}n++,o>>=1}}for(let c=0;c<t.length;c++)t[c]&&(a=!0),a&&(i+=Hf.charAt(t[c]));return a===!1&&(i+=Hf.charAt(0)),i}};Qf=Wn;Wn.NAME="IntegerValueBlock";Object.defineProperty(Qf.prototype,"valueHex",{set:function(r){this.valueHexView=new Uint8Array(r),this.setValueHex()},get:function(){return this.valueHexView.slice().buffer}});var eh,Se=class r extends Ae{constructor(e={}){super(e,Wn),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}toBigInt(){return fs(),BigInt(this.valueBlock.toString())}static fromBigInt(e){fs();let t=BigInt(e),n=new zn,o=t.toString(16).replace(/^-/,""),s=new Uint8Array(q.Convert.FromHex(o));if(t<0){let a=new Uint8Array(s.length+(s[0]&128?1:0));a[0]|=128;let u=BigInt(`0x${q.Convert.ToHex(a)}`)+t,f=q.BufferSourceConverter.toUint8Array(q.Convert.FromHex(u.toString(16)));f[0]|=128,n.write(f)}else s[0]&128&&n.write(new Uint8Array([0])),n.write(s);return new r({valueHex:n.final()})}convertToDER(){let e=new r({valueHex:this.valueBlock.valueHexView});return e.valueBlock.toDER(),e}convertFromDER(){return new r({valueHex:this.valueBlock.valueHexView[0]===0?this.valueBlock.valueHexView.subarray(1):this.valueBlock.valueHexView})}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()}`}};eh=Se;k.Integer=eh;Se.NAME="INTEGER";var th,Ss=class extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}};th=Ss;k.Enumerated=th;Ss.NAME="ENUMERATED";var jn=class extends Rt(Le){constructor({valueDec:e=-1,isFirstSid:t=!1,...n}={}){super(n),this.valueDec=e,this.isFirstSid=t}fromBER(e,t,n){if(!n)return t;let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let s=o.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=s[a]&127,this.blockLength++,!!(s[a]&128));a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,s[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=wr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}set valueBigInt(e){fs();let t=BigInt(e).toString(2);for(;t.length%7;)t="0"+t;let n=new Uint8Array(t.length/7);for(let o=0;o<n.length;o++)n[o]=parseInt(t.slice(o*7,o*7+7),2)+(o+1<n.length?128:0);this.fromBER(n.buffer,0,n.length)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let o=this.valueHexView,s=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)s[i]=o[i]|128;return s[this.blockLength-1]=o[this.blockLength-1],s.buffer}let t=Jt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",ct;let n=new Uint8Array(t.byteLength);if(!e){let o=new Uint8Array(t),s=t.byteLength-1;for(let i=0;i<s;i++)n[i]=o[i]|128;n[s]=o[s]}return n}toString(){let e="";if(this.isHexOnly)e=q.Convert.ToHex(this.valueHexView);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec,isFirstSid:this.isFirstSid}}};jn.NAME="sidBlock";var _s=class extends Le{constructor({value:e=rn,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let o=t;for(;n>0;){let s=new jn;if(o=s.fromBER(e,o,n),o===-1)return this.blockLength=0,this.error=s.error,o;this.value.length===0&&(s.isFirstSid=!0),this.blockLength+=s.blockLength,n-=s.blockLength,this.value.push(s)}return o}toBER(e){let t=[];for(let n=0;n<this.value.length;n++){let o=this.value[n].toBER(e);if(o.byteLength===0)return this.error=this.value[n].error,ct;t.push(o)}return Gc(t)}fromString(e){this.value=[];let t=0,n=0,o="",s=!1;do if(n=e.indexOf(".",t),n===-1?o=e.substring(t):o=e.substring(t,n),t=n+1,s){let i=this.value[0],a=0;switch(i.valueDec){case 0:break;case 1:a=40;break;case 2:a=80;break;default:this.value=[];return}let c=parseInt(o,10);if(isNaN(c))return;i.valueDec=c+a,s=!1}else{let i=new jn;if(o>Number.MAX_SAFE_INTEGER){fs();let a=BigInt(o);i.valueBigInt=a}else if(i.valueDec=parseInt(o,10),isNaN(i.valueDec))return;this.value.length||(i.isFirstSid=!0,s=!0),this.value.push(i)}while(n!==-1)}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let o=this.value[n].toString();n!==0&&(e=`${e}.`),t?(o=`{${o}}`,this.value[n].isFirstSid?e=`2.{${o} - 80}`:e+=o):e+=o}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};_s.NAME="ObjectIdentifierValueBlock";var rh,tn=class extends Ae{constructor(e={}){super(e,_s),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};rh=tn;k.ObjectIdentifier=rh;tn.NAME="OBJECT IDENTIFIER";var Zn=class extends Rt(Tt){constructor({valueDec:e=0,...t}={}){super(t),this.valueDec=e}fromBER(e,t,n){if(n===0)return t;let o=q.BufferSourceConverter.toUint8Array(e);if(!Pt(this,o,t,n))return-1;let s=o.subarray(t,t+n);this.valueHexView=new Uint8Array(n);for(let a=0;a<n&&(this.valueHexView[a]=s[a]&127,this.blockLength++,!!(s[a]&128));a++);let i=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)i[a]=this.valueHexView[a];return this.valueHexView=i,s[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=wr(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let o=this.valueHexView,s=new Uint8Array(this.blockLength);for(let i=0;i<this.blockLength-1;i++)s[i]=o[i]|128;return s[this.blockLength-1]=o[this.blockLength-1],s.buffer}let t=Jt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",ct;let n=new Uint8Array(t.byteLength);if(!e){let o=new Uint8Array(t),s=t.byteLength-1;for(let i=0;i<s;i++)n[i]=o[i]|128;n[s]=o[s]}return n.buffer}toString(){let e="";return this.isHexOnly?e=q.Convert.ToHex(this.valueHexView):e=this.valueDec.toString(),e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}};Zn.NAME="relativeSidBlock";var Bs=class extends Le{constructor({value:e=rn,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,n){let o=t;for(;n>0;){let s=new Zn;if(o=s.fromBER(e,o,n),o===-1)return this.blockLength=0,this.error=s.error,o;this.blockLength+=s.blockLength,n-=s.blockLength,this.value.push(s)}return o}toBER(e,t){let n=[];for(let o=0;o<this.value.length;o++){let s=this.value[o].toBER(e);if(s.byteLength===0)return this.error=this.value[o].error,ct;n.push(s)}return Gc(n)}fromString(e){this.value=[];let t=0,n=0,o="";do{n=e.indexOf(".",t),n===-1?o=e.substring(t):o=e.substring(t,n),t=n+1;let s=new Zn;if(s.valueDec=parseInt(o,10),isNaN(s.valueDec))return!0;this.value.push(s)}while(n!==-1);return!0}toString(){let e="",t=!1;for(let n=0;n<this.value.length;n++){t=this.value[n].isHexOnly;let o=this.value[n].toString();n!==0&&(e=`${e}.`),t&&(o=`{${o}}`),e+=o}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};Bs.NAME="RelativeObjectIdentifierValueBlock";var nh,Is=class extends Ae{constructor(e={}){super(e,Bs),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};nh=Is;k.RelativeObjectIdentifier=nh;Is.NAME="RelativeObjectIdentifier";var oh,Lt=class extends Qt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}};oh=Lt;k.Sequence=oh;Lt.NAME="SEQUENCE";var sh,Cs=class extends Qt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}};sh=Cs;k.Set=sh;Cs.NAME="SET";var ks=class extends Rt(Le){constructor({...e}={}){super(e),this.isHexOnly=!0,this.value=rn}toJSON(){return{...super.toJSON(),value:this.value}}};ks.NAME="StringValueBlock";var Ts=class extends ks{};Ts.NAME="SimpleStringValueBlock";var Oe=class extends ps{constructor({...e}={}){super(e,Ts)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,q.BufferSourceConverter.toUint8Array(e))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t);for(let o=0;o<t;o++)n[o]=e.charCodeAt(o);this.valueBlock.value=e}};Oe.NAME="SIMPLE STRING";var Ls=class extends Oe{fromBuffer(e){this.valueBlock.valueHexView=q.BufferSourceConverter.toUint8Array(e);try{this.valueBlock.value=q.Convert.ToUtf8String(e)}catch(t){this.warnings.push(`Error during "decodeURIComponent": ${t}, using raw string`),this.valueBlock.value=q.Convert.ToBinary(e)}}fromString(e){this.valueBlock.valueHexView=new Uint8Array(q.Convert.FromUtf8String(e)),this.valueBlock.value=e}};Ls.NAME="Utf8StringValueBlock";var ih,Nt=class extends Ls{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}};ih=Nt;k.Utf8String=ih;Nt.NAME="UTF8String";var Ns=class extends Oe{fromBuffer(e){this.valueBlock.value=q.Convert.ToUtf16String(e),this.valueBlock.valueHexView=q.BufferSourceConverter.toUint8Array(e)}fromString(e){this.valueBlock.value=e,this.valueBlock.valueHexView=new Uint8Array(q.Convert.FromUtf16String(e))}};Ns.NAME="BmpStringValueBlock";var ah,Ps=class extends Ns{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}};ah=Ps;k.BmpString=ah;Ps.NAME="BMPString";var Rs=class extends Oe{fromBuffer(e){let t=ArrayBuffer.isView(e)?e.slice().buffer:e.slice(0),n=new Uint8Array(t);for(let o=0;o<n.length;o+=4)n[o]=n[o+3],n[o+1]=n[o+2],n[o+2]=0,n[o+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){let t=e.length,n=this.valueBlock.valueHexView=new Uint8Array(t*4);for(let o=0;o<t;o++){let s=Jt(e.charCodeAt(o),8),i=new Uint8Array(s);if(i.length>4)continue;let a=4-i.length;for(let c=i.length-1;c>=0;c--)n[o*4+c+a]=i[c]}this.valueBlock.value=e}};Rs.NAME="UniversalStringValueBlock";var ch,Ds=class extends Rs{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}};ch=Ds;k.UniversalString=ch;Ds.NAME="UniversalString";var lh,Ms=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}};lh=Ms;k.NumericString=lh;Ms.NAME="NumericString";var uh,Us=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}};uh=Us;k.PrintableString=uh;Us.NAME="PrintableString";var fh,Os=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}};fh=Os;k.TeletexString=fh;Os.NAME="TeletexString";var hh,Fs=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}};hh=Fs;k.VideotexString=hh;Fs.NAME="VideotexString";var dh,Vs=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}};dh=Vs;k.IA5String=dh;Vs.NAME="IA5String";var ph,Hs=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}};ph=Hs;k.GraphicString=ph;Hs.NAME="GraphicString";var mh,Xn=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}};mh=Xn;k.VisibleString=mh;Xn.NAME="VisibleString";var gh,$s=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}};gh=$s;k.GeneralString=gh;$s.NAME="GeneralString";var yh,Ks=class extends Oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}};yh=Ks;k.CharacterString=yh;Ks.NAME="CharacterString";var wh,Yn=class extends Xn{constructor({value:e,valueDate:t,...n}={}){if(super(n),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,e){this.fromString(e),this.valueBlock.valueHexView=new Uint8Array(e.length);for(let o=0;o<e.length;o++)this.valueBlock.valueHexView[o]=e.charCodeAt(o)}t&&(this.fromDate(t),this.valueBlock.valueHexView=new Uint8Array(this.toBuffer())),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,q.BufferSourceConverter.toUint8Array(e)))}toBuffer(){let e=this.toString(),t=new ArrayBuffer(e.length),n=new Uint8Array(t);for(let o=0;o<e.length;o++)n[o]=e.charCodeAt(o);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){let n=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig.exec(e);if(n===null){this.error="Wrong input string for conversion";return}let o=parseInt(n[1],10);o>=50?this.year=1900+o:this.year=2e3+o,this.month=parseInt(n[2],10),this.day=parseInt(n[3],10),this.hour=parseInt(n[4],10),this.minute=parseInt(n[5],10),this.second=parseInt(n[6],10)}toString(e="iso"){if(e==="iso"){let t=new Array(7);return t[0]=qe(this.year<2e3?this.year-1900:this.year-2e3,2),t[1]=qe(this.month,2),t[2]=qe(this.day,2),t[3]=qe(this.hour,2),t[4]=qe(this.minute,2),t[5]=qe(this.second,2),t[6]="Z",t.join("")}return super.toString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.toDate().toISOString()}`}toJSON(){return{...super.toJSON(),year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second}}};wh=Yn;k.UTCTime=wh;Yn.NAME="UTCTime";var bh,qs=class extends Yn{constructor(e={}){var t;super(e),(t=this.millisecond)!==null&&t!==void 0||(this.millisecond=0),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromDate(e){super.fromDate(e),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t=!1,n="",o="",s=0,i,a=0,c=0;if(e[e.length-1]==="Z")n=e.substring(0,e.length-1),t=!0;else{let l=new Number(e[e.length-1]);if(isNaN(l.valueOf()))throw new Error("Wrong input string for conversion");n=e}if(t){if(n.indexOf("+")!==-1)throw new Error("Wrong input string for conversion");if(n.indexOf("-")!==-1)throw new Error("Wrong input string for conversion")}else{let l=1,d=n.indexOf("+"),h="";if(d===-1&&(d=n.indexOf("-"),l=-1),d!==-1){if(h=n.substring(d+1),n=n.substring(0,d),h.length!==2&&h.length!==4)throw new Error("Wrong input string for conversion");let p=parseInt(h.substring(0,2),10);if(isNaN(p.valueOf()))throw new Error("Wrong input string for conversion");if(a=l*p,h.length===4){if(p=parseInt(h.substring(2,4),10),isNaN(p.valueOf()))throw new Error("Wrong input string for conversion");c=l*p}}}let u=n.indexOf(".");if(u===-1&&(u=n.indexOf(",")),u!==-1){let l=new Number(`0${n.substring(u)}`);if(isNaN(l.valueOf()))throw new Error("Wrong input string for conversion");s=l.valueOf(),o=n.substring(0,u)}else o=n;switch(!0){case o.length===8:if(i=/(\d{4})(\d{2})(\d{2})/ig,u!==-1)throw new Error("Wrong input string for conversion");break;case o.length===10:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})/ig,u!==-1){let l=60*s;this.minute=Math.floor(l),l=60*(l-this.minute),this.second=Math.floor(l),l=1e3*(l-this.second),this.millisecond=Math.floor(l)}break;case o.length===12:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig,u!==-1){let l=60*s;this.second=Math.floor(l),l=1e3*(l-this.second),this.millisecond=Math.floor(l)}break;case o.length===14:if(i=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig,u!==-1){let l=1e3*s;this.millisecond=Math.floor(l)}break;default:throw new Error("Wrong input string for conversion")}let f=i.exec(o);if(f===null)throw new Error("Wrong input string for conversion");for(let l=1;l<f.length;l++)switch(l){case 1:this.year=parseInt(f[l],10);break;case 2:this.month=parseInt(f[l],10);break;case 3:this.day=parseInt(f[l],10);break;case 4:this.hour=parseInt(f[l],10)+a;break;case 5:this.minute=parseInt(f[l],10)+c;break;case 6:this.second=parseInt(f[l],10);break;default:throw new Error("Wrong input string for conversion")}if(t===!1){let l=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=l.getUTCFullYear(),this.month=l.getUTCMonth(),this.day=l.getUTCDay(),this.hour=l.getUTCHours(),this.minute=l.getUTCMinutes(),this.second=l.getUTCSeconds(),this.millisecond=l.getUTCMilliseconds()}}toString(e="iso"){if(e==="iso"){let t=[];return t.push(qe(this.year,4)),t.push(qe(this.month,2)),t.push(qe(this.day,2)),t.push(qe(this.hour,2)),t.push(qe(this.minute,2)),t.push(qe(this.second,2)),this.millisecond!==0&&(t.push("."),t.push(qe(this.millisecond,3))),t.push("Z"),t.join("")}return super.toString(e)}toJSON(){return{...super.toJSON(),millisecond:this.millisecond}}};bh=qs;k.GeneralizedTime=bh;qs.NAME="GeneralizedTime";var xh,zs=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}};xh=zs;k.DATE=xh;zs.NAME="DATE";var vh,Gs=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}};vh=Gs;k.TimeOfDay=vh;Gs.NAME="TimeOfDay";var Eh,Ws=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}};Eh=Ws;k.DateTime=Eh;Ws.NAME="DateTime";var Ah,js=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}};Ah=js;k.Duration=Ah;js.NAME="Duration";var Sh,Zs=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}};Sh=Zs;k.TIME=Sh;Zs.NAME="TIME";function H(r,e="utf8"){let t=ss[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.encoder.encode(r).substring(1)}function nn(r){if(isNaN(r)||r<=0)throw new D("random bytes length must be a Number bigger than 0");return Gr(r)}var Jn=class extends Error{constructor(e="An error occurred while signing a message"){super(e),this.name="SigningError"}},Qn=class extends Error{constructor(e="An error occurred while verifying a message"){super(e),this.name="VerificationError"}},Ys=class extends Error{constructor(e="Missing Web Crypto API"){super(e),this.name="WebCryptoMissingError"}};var _h={get(r=globalThis){let e=r.crypto;if(e?.subtle==null)throw new Ys("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api");return e}};var er=_h;async function Bh(r){let e=await er.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await N0(e);return{privateKey:t[0],publicKey:t[1]}}async function Ih(r,e){let t=await er.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await er.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,e instanceof Uint8Array?e:e.subarray());return new Uint8Array(n,0,n.byteLength)}async function Ch(r,e,t){let n=await er.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return er.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t instanceof Uint8Array?t:t.subarray())}async function N0(r){if(r.privateKey==null||r.publicKey==null)throw new D("Private and public key are required");return Promise.all([er.get().subtle.exportKey("jwk",r.privateKey),er.get().subtle.exportKey("jwk",r.publicKey)])}function Zc(r){if(r.kty!=="RSA")throw new D("invalid key type");if(r.n==null)throw new D("invalid key modulus");return P(r.n,"base64url").length*8}var on=class{type="RSA";_key;_raw;_multihash;constructor(e,t){this._key=e,this._multihash=t}get raw(){return this._raw==null&&(this._raw=eo.jwkToPkix(this._key)),this._raw}toMultihash(){return this._multihash}toCID(){return pe.createV1(114,this._multihash)}toString(){return W.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}verify(e,t){return Ch(this._key,t,e)}},to=class{type="RSA";_key;_raw;publicKey;constructor(e,t){this._key=e,this.publicKey=t}get raw(){return this._raw==null&&(this._raw=eo.jwkToPkcs1(this._key)),this._raw}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}sign(e){return Ih(this._key,e)}};var Js=8192,Xc=18;function kh(r){let{result:e}=jc(r),t=e.valueBlock.value;return{n:H(mt(t[1].toBigInt()),"base64url"),e:H(mt(t[2].toBigInt()),"base64url"),d:H(mt(t[3].toBigInt()),"base64url"),p:H(mt(t[4].toBigInt()),"base64url"),q:H(mt(t[5].toBigInt()),"base64url"),dp:H(mt(t[6].toBigInt()),"base64url"),dq:H(mt(t[7].toBigInt()),"base64url"),qi:H(mt(t[8].toBigInt()),"base64url"),kty:"RSA",alg:"RS256"}}function P0(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new D("JWK was missing components");let t=new Lt({value:[new Se({value:0}),Se.fromBigInt(gt(P(r.n,"base64url"))),Se.fromBigInt(gt(P(r.e,"base64url"))),Se.fromBigInt(gt(P(r.d,"base64url"))),Se.fromBigInt(gt(P(r.p,"base64url"))),Se.fromBigInt(gt(P(r.q,"base64url"))),Se.fromBigInt(gt(P(r.dp,"base64url"))),Se.fromBigInt(gt(P(r.dq,"base64url"))),Se.fromBigInt(gt(P(r.qi,"base64url")))]}).toBER();return new Uint8Array(t,0,t.byteLength)}function Th(r){let{result:e}=jc(r),t=e.valueBlock.value[1].valueBlock.value[0].valueBlock.value;return{kty:"RSA",n:H(mt(t[0].toBigInt()),"base64url"),e:H(mt(t[1].toBigInt()),"base64url")}}function Yc(r){if(r.n==null||r.e==null)throw new D("JWK was missing components");let t=new Lt({value:[new Lt({value:[new tn({value:"1.2.840.113549.1.1.1"}),new Qr]}),new en({valueHex:new Lt({value:[Se.fromBigInt(gt(P(r.n,"base64url"))),Se.fromBigInt(gt(P(r.e,"base64url")))]}).toBER()})]}).toBER();return new Uint8Array(t,0,t.byteLength)}function mt(r){let e=r.toString(16);e.length%2>0&&(e=`0${e}`);let t=e.length/2,n=new Uint8Array(t),o=0,s=0;for(;o<t;)n[o]=parseInt(e.slice(s,s+2),16),o+=1,s+=2;return n}function gt(r){let e=[];return r.forEach(function(t){let n=t.toString(16);n.length%2>0&&(n=`0${n}`),e.push(n)}),BigInt("0x"+e.join(""))}function Lh(r){let e=kh(r);return Nh(e)}function Jc(r){let e=Th(r);if(Zc(e)>Js)throw new Rr("Key size is too large");let t=Yr(dt.encode({Type:ge.RSA,Data:r})),n=tt(Xc,t);return new on(e,n)}function Nh(r){if(Zc(r)>Js)throw new D("Key size is too large");let e=Ph(r),t=Yr(dt.encode({Type:ge.RSA,Data:Yc(e.publicKey)})),n=tt(Xc,t);return new to(e.privateKey,new on(e.publicKey,n))}async function Qc(r){if(r>Js)throw new D("Key size is too large");let e=await Bh(r),t=Yr(dt.encode({Type:ge.RSA,Data:Yc(e.publicKey)})),n=tt(Xc,t);return new to(e.privateKey,new on(e.publicKey,n))}function Ph(r){if(r==null)throw new D("Missing key parameter");return{privateKey:r,publicKey:{kty:r.kty,n:r.n,e:r.e}}}var Qs=class extends zr{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,ef(e);let n=Rn(t);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let o=this.blockLen,s=new Uint8Array(o);s.set(n.length>o?e.create().update(n).digest():n);for(let i=0;i<s.length;i++)s[i]^=54;this.iHash.update(s),this.oHash=e.create();for(let i=0;i<s.length;i++)s[i]^=106;this.oHash.update(s),s.fill(0)}update(e){return qr(this),this.iHash.update(e),this}digestInto(e){qr(this),Kr(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:n,finished:o,destroyed:s,blockLen:i,outputLen:a}=this;return e=e,e.finished=o,e.destroyed=s,e.blockLen=i,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},el=(r,e,t)=>new Qs(r,e).update(t).digest();el.create=(r,e)=>new Qs(r,e);function Rh(r){r.lowS!==void 0&&ot("lowS",r.lowS),r.prehash!==void 0&&ot("prehash",r.prehash)}function R0(r){let e=Un(r);ft(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:t,Fp:n,a:o}=e;if(t){if(!n.eql(o,n.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof t!="object"||typeof t.beta!="bigint"||typeof t.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}var{bytesToNumberBE:D0,hexToBytes:M0}=Zo,Dt={Err:class extends Error{constructor(e=""){super(e)}},_tlv:{encode:(r,e)=>{let{Err:t}=Dt;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length&1)throw new t("tlv.encode: unpadded data");let n=e.length/2,o=lr(n);if(o.length/2&128)throw new t("tlv.encode: long form length too big");let s=n>127?lr(o.length/2|128):"";return`${lr(r)}${s}${o}${e}`},decode(r,e){let{Err:t}=Dt,n=0;if(r<0||r>256)throw new t("tlv.encode: wrong tag");if(e.length<2||e[n++]!==r)throw new t("tlv.decode: wrong tlv");let o=e[n++],s=!!(o&128),i=0;if(!s)i=o;else{let c=o&127;if(!c)throw new t("tlv.decode(long): indefinite length not supported");if(c>4)throw new t("tlv.decode(long): byte length is too big");let u=e.subarray(n,n+c);if(u.length!==c)throw new t("tlv.decode: length bytes not complete");if(u[0]===0)throw new t("tlv.decode(long): zero leftmost byte");for(let f of u)i=i<<8|f;if(n+=c,i<128)throw new t("tlv.decode(long): not minimal encoding")}let a=e.subarray(n,n+i);if(a.length!==i)throw new t("tlv.decode: wrong value length");return{v:a,l:e.subarray(n+i)}}},_int:{encode(r){let{Err:e}=Dt;if(r<Mt)throw new e("integer: negative integers are not allowed");let t=lr(r);if(Number.parseInt(t[0],16)&8&&(t="00"+t),t.length&1)throw new e("unexpected assertion");return t},decode(r){let{Err:e}=Dt;if(r[0]&128)throw new e("Invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("Invalid signature integer: unnecessary leading zero");return D0(r)}},toSig(r){let{Err:e,_int:t,_tlv:n}=Dt,o=typeof r=="string"?M0(r):r;jr(o);let{v:s,l:i}=n.decode(48,o);if(i.length)throw new e("Invalid signature: left bytes after parsing");let{v:a,l:c}=n.decode(2,s),{v:u,l:f}=n.decode(2,c);if(f.length)throw new e("Invalid signature: left bytes after parsing");return{r:t.decode(a),s:t.decode(u)}},hexFromSig(r){let{_tlv:e,_int:t}=Dt,n=`${e.encode(2,t.encode(r.r))}${e.encode(2,t.encode(r.s))}`;return e.encode(48,n)}},Mt=BigInt(0),ve=BigInt(1),r2=BigInt(2),Dh=BigInt(3),n2=BigInt(4);function U0(r){let e=R0(r),{Fp:t}=e,n=jt(e.n,e.nBitLength),o=e.toBytes||((m,g,y)=>{let b=g.toAffine();return Ct(Uint8Array.from([4]),t.toBytes(b.x),t.toBytes(b.y))}),s=e.fromBytes||(m=>{let g=m.subarray(1),y=t.fromBytes(g.subarray(0,t.BYTES)),b=t.fromBytes(g.subarray(t.BYTES,2*t.BYTES));return{x:y,y:b}});function i(m){let{a:g,b:y}=e,b=t.sqr(m),w=t.mul(b,m);return t.add(t.add(w,t.mul(m,g)),y)}if(!t.eql(t.sqr(e.Gy),i(e.Gx)))throw new Error("bad generator point: equation left != right");function a(m){return Dn(m,ve,e.n)}function c(m){let{allowedPrivateKeyLengths:g,nByteLength:y,wrapPrivateKey:b,n:w}=e;if(g&&typeof m!="bigint"){if(zt(m)&&(m=Bt(m)),typeof m!="string"||!g.includes(m.length))throw new Error("Invalid key");m=m.padStart(y*2,"0")}let x;try{x=typeof m=="bigint"?m:It(ae("private key",m,y))}catch{throw new Error(`private key must be ${y} bytes, hex or bigint, not ${typeof m}`)}return b&&(x=Y(x,w)),$e("private key",x,ve,w),x}function u(m){if(!(m instanceof d))throw new Error("ProjectivePoint expected")}let f=hr((m,g)=>{let{px:y,py:b,pz:w}=m;if(t.eql(w,t.ONE))return{x:y,y:b};let x=m.is0();g==null&&(g=x?t.ONE:t.inv(w));let A=t.mul(y,g),_=t.mul(b,g),v=t.mul(w,g);if(x)return{x:t.ZERO,y:t.ZERO};if(!t.eql(v,t.ONE))throw new Error("invZ was invalid");return{x:A,y:_}}),l=hr(m=>{if(m.is0()){if(e.allowInfinityPoint&&!t.is0(m.py))return;throw new Error("bad point: ZERO")}let{x:g,y}=m.toAffine();if(!t.isValid(g)||!t.isValid(y))throw new Error("bad point: x or y not FE");let b=t.sqr(y),w=i(g);if(!t.eql(b,w))throw new Error("bad point: equation left != right");if(!m.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class d{constructor(g,y,b){if(this.px=g,this.py=y,this.pz=b,g==null||!t.isValid(g))throw new Error("x required");if(y==null||!t.isValid(y))throw new Error("y required");if(b==null||!t.isValid(b))throw new Error("z required");Object.freeze(this)}static fromAffine(g){let{x:y,y:b}=g||{};if(!g||!t.isValid(y)||!t.isValid(b))throw new Error("invalid affine point");if(g instanceof d)throw new Error("projective point not allowed");let w=x=>t.eql(x,t.ZERO);return w(y)&&w(b)?d.ZERO:new d(y,b,t.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(g){let y=t.invertBatch(g.map(b=>b.pz));return g.map((b,w)=>b.toAffine(y[w])).map(d.fromAffine)}static fromHex(g){let y=d.fromAffine(s(ae("pointHex",g)));return y.assertValidity(),y}static fromPrivateKey(g){return d.BASE.multiply(c(g))}static msm(g,y){return Jo(d,n,g,y)}_setWindowSize(g){p.setWindowSize(this,g)}assertValidity(){l(this)}hasEvenY(){let{y:g}=this.toAffine();if(t.isOdd)return!t.isOdd(g);throw new Error("Field doesn't support isOdd")}equals(g){u(g);let{px:y,py:b,pz:w}=this,{px:x,py:A,pz:_}=g,v=t.eql(t.mul(y,_),t.mul(x,w)),B=t.eql(t.mul(b,_),t.mul(A,w));return v&&B}negate(){return new d(this.px,t.neg(this.py),this.pz)}double(){let{a:g,b:y}=e,b=t.mul(y,Dh),{px:w,py:x,pz:A}=this,_=t.ZERO,v=t.ZERO,B=t.ZERO,T=t.mul(w,w),te=t.mul(x,x),V=t.mul(A,A),F=t.mul(w,x);return F=t.add(F,F),B=t.mul(w,A),B=t.add(B,B),_=t.mul(g,B),v=t.mul(b,V),v=t.add(_,v),_=t.sub(te,v),v=t.add(te,v),v=t.mul(_,v),_=t.mul(F,_),B=t.mul(b,B),V=t.mul(g,V),F=t.sub(T,V),F=t.mul(g,F),F=t.add(F,B),B=t.add(T,T),T=t.add(B,T),T=t.add(T,V),T=t.mul(T,F),v=t.add(v,T),V=t.mul(x,A),V=t.add(V,V),T=t.mul(V,F),_=t.sub(_,T),B=t.mul(V,te),B=t.add(B,B),B=t.add(B,B),new d(_,v,B)}add(g){u(g);let{px:y,py:b,pz:w}=this,{px:x,py:A,pz:_}=g,v=t.ZERO,B=t.ZERO,T=t.ZERO,te=e.a,V=t.mul(e.b,Dh),F=t.mul(y,x),R=t.mul(b,A),C=t.mul(w,_),L=t.add(y,b),S=t.add(x,A);L=t.mul(L,S),S=t.add(F,R),L=t.sub(L,S),S=t.add(y,w);let E=t.add(x,_);return S=t.mul(S,E),E=t.add(F,C),S=t.sub(S,E),E=t.add(b,w),v=t.add(A,_),E=t.mul(E,v),v=t.add(R,C),E=t.sub(E,v),T=t.mul(te,S),v=t.mul(V,C),T=t.add(v,T),v=t.sub(R,T),T=t.add(R,T),B=t.mul(v,T),R=t.add(F,F),R=t.add(R,F),C=t.mul(te,C),S=t.mul(V,S),R=t.add(R,C),C=t.sub(F,C),C=t.mul(te,C),S=t.add(S,C),F=t.mul(R,S),B=t.add(B,F),F=t.mul(E,S),v=t.mul(L,v),v=t.sub(v,F),F=t.mul(L,R),T=t.mul(E,T),T=t.add(T,F),new d(v,B,T)}subtract(g){return this.add(g.negate())}is0(){return this.equals(d.ZERO)}wNAF(g){return p.wNAFCached(this,g,d.normalizeZ)}multiplyUnsafe(g){$e("scalar",g,Mt,e.n);let y=d.ZERO;if(g===Mt)return y;if(g===ve)return this;let{endo:b}=e;if(!b)return p.unsafeLadder(this,g);let{k1neg:w,k1:x,k2neg:A,k2:_}=b.splitScalar(g),v=y,B=y,T=this;for(;x>Mt||_>Mt;)x&ve&&(v=v.add(T)),_&ve&&(B=B.add(T)),T=T.double(),x>>=ve,_>>=ve;return w&&(v=v.negate()),A&&(B=B.negate()),B=new d(t.mul(B.px,b.beta),B.py,B.pz),v.add(B)}multiply(g){let{endo:y,n:b}=e;$e("scalar",g,ve,b);let w,x;if(y){let{k1neg:A,k1:_,k2neg:v,k2:B}=y.splitScalar(g),{p:T,f:te}=this.wNAF(_),{p:V,f:F}=this.wNAF(B);T=p.constTimeNegate(A,T),V=p.constTimeNegate(v,V),V=new d(t.mul(V.px,y.beta),V.py,V.pz),w=T.add(V),x=te.add(F)}else{let{p:A,f:_}=this.wNAF(g);w=A,x=_}return d.normalizeZ([w,x])[0]}multiplyAndAddUnsafe(g,y,b){let w=d.BASE,x=(_,v)=>v===Mt||v===ve||!_.equals(w)?_.multiplyUnsafe(v):_.multiply(v),A=x(this,y).add(x(g,b));return A.is0()?void 0:A}toAffine(g){return f(this,g)}isTorsionFree(){let{h:g,isTorsionFree:y}=e;if(g===ve)return!0;if(y)return y(d,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:g,clearCofactor:y}=e;return g===ve?this:y?y(d,this):this.multiplyUnsafe(e.h)}toRawBytes(g=!0){return ot("isCompressed",g),this.assertValidity(),o(d,this,g)}toHex(g=!0){return ot("isCompressed",g),Bt(this.toRawBytes(g))}}d.BASE=new d(e.Gx,e.Gy,t.ONE),d.ZERO=new d(t.ZERO,t.ONE,t.ZERO);let h=e.nBitLength,p=Yo(d,e.endo?Math.ceil(h/2):h);return{CURVE:e,ProjectivePoint:d,normPrivateKeyToScalar:c,weierstrassEquation:i,isWithinCurveOrder:a}}function O0(r){let e=Un(r);return ft(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function Mh(r){let e=O0(r),{Fp:t,n}=e,o=t.BYTES+1,s=2*t.BYTES+1;function i(C){return Y(C,n)}function a(C){return Xo(C,n)}let{ProjectivePoint:c,normPrivateKeyToScalar:u,weierstrassEquation:f,isWithinCurveOrder:l}=U0({...e,toBytes(C,L,S){let E=L.toAffine(),I=t.toBytes(E.x),N=Ct;return ot("isCompressed",S),S?N(Uint8Array.from([L.hasEvenY()?2:3]),I):N(Uint8Array.from([4]),I,t.toBytes(E.y))},fromBytes(C){let L=C.length,S=C[0],E=C.subarray(1);if(L===o&&(S===2||S===3)){let I=It(E);if(!Dn(I,ve,t.ORDER))throw new Error("Point is not on curve");let N=f(I),M;try{M=t.sqrt(N)}catch(z){let K=z instanceof Error?": "+z.message:"";throw new Error("Point is not on curve"+K)}let U=(M&ve)===ve;return(S&1)===1!==U&&(M=t.neg(M)),{x:I,y:M}}else if(L===s&&S===4){let I=t.fromBytes(E.subarray(0,t.BYTES)),N=t.fromBytes(E.subarray(t.BYTES,2*t.BYTES));return{x:I,y:N}}else throw new Error(`Point of length ${L} was invalid. Expected ${o} compressed bytes or ${s} uncompressed bytes`)}}),d=C=>Bt(Wt(C,e.nByteLength));function h(C){let L=n>>ve;return C>L}function p(C){return h(C)?i(-C):C}let m=(C,L,S)=>It(C.slice(L,S));class g{constructor(L,S,E){this.r=L,this.s=S,this.recovery=E,this.assertValidity()}static fromCompact(L){let S=e.nByteLength;return L=ae("compactSignature",L,S*2),new g(m(L,0,S),m(L,S,2*S))}static fromDER(L){let{r:S,s:E}=Dt.toSig(ae("DER",L));return new g(S,E)}assertValidity(){$e("r",this.r,ve,n),$e("s",this.s,ve,n)}addRecoveryBit(L){return new g(this.r,this.s,L)}recoverPublicKey(L){let{r:S,s:E,recovery:I}=this,N=_(ae("msgHash",L));if(I==null||![0,1,2,3].includes(I))throw new Error("recovery id invalid");let M=I===2||I===3?S+e.n:S;if(M>=t.ORDER)throw new Error("recovery id 2 or 3 invalid");let U=I&1?"03":"02",$=c.fromHex(U+d(M)),z=a(M),K=i(-N*z),X=i(E*z),Q=c.BASE.multiplyAndAddUnsafe($,K,X);if(!Q)throw new Error("point at infinify");return Q.assertValidity(),Q}hasHighS(){return h(this.s)}normalizeS(){return this.hasHighS()?new g(this.r,i(-this.s),this.recovery):this}toDERRawBytes(){return ur(this.toDERHex())}toDERHex(){return Dt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return ur(this.toCompactHex())}toCompactHex(){return d(this.r)+d(this.s)}}let y={isValidPrivateKey(C){try{return u(C),!0}catch{return!1}},normPrivateKeyToScalar:u,randomPrivateKey:()=>{let C=oc(e.n);return pf(e.randomBytes(C),e.n)},precompute(C=8,L=c.BASE){return L._setWindowSize(C),L.multiply(BigInt(3)),L}};function b(C,L=!0){return c.fromPrivateKey(C).toRawBytes(L)}function w(C){let L=zt(C),S=typeof C=="string",E=(L||S)&&C.length;return L?E===o||E===s:S?E===2*o||E===2*s:C instanceof c}function x(C,L,S=!0){if(w(C))throw new Error("first arg must be private key");if(!w(L))throw new Error("second arg must be public key");return c.fromHex(L).multiply(u(C)).toRawBytes(S)}let A=e.bits2int||function(C){let L=It(C),S=C.length*8-e.nBitLength;return S>0?L>>BigInt(S):L},_=e.bits2int_modN||function(C){return i(A(C))},v=Mn(e.nBitLength);function B(C){return $e(`num < 2^${e.nBitLength}`,C,Mt,v),Wt(C,e.nByteLength)}function T(C,L,S=te){if(["recovered","canonical"].some(xe=>xe in S))throw new Error("sign() legacy options not supported");let{hash:E,randomBytes:I}=e,{lowS:N,prehash:M,extraEntropy:U}=S;N==null&&(N=!0),C=ae("msgHash",C),Rh(S),M&&(C=ae("prehashed msgHash",E(C)));let $=_(C),z=u(L),K=[B(z),B($)];if(U!=null&&U!==!1){let xe=U===!0?I(t.BYTES):U;K.push(ae("extraEntropy",xe))}let X=Ct(...K),Q=$;function be(xe){let Ee=A(xe);if(!l(Ee))return;let Pe=a(Ee),de=c.BASE.multiply(Ee).toAffine(),He=i(de.x);if(He===Mt)return;let bt=i(Pe*i(Q+He*z));if(bt===Mt)return;let _n=(de.x===He?0:2)|Number(de.y&ve),Bn=bt;return N&&h(bt)&&(Bn=p(bt),_n^=1),new g(He,Bn,_n)}return{seed:X,k2sig:be}}let te={lowS:e.lowS,prehash:!1},V={lowS:e.lowS,prehash:!1};function F(C,L,S=te){let{seed:E,k2sig:I}=T(C,L,S),N=e;return ec(N.hash.outputLen,N.nByteLength,N.hmac)(E,I)}c.BASE._setWindowSize(8);function R(C,L,S,E=V){let I=C;if(L=ae("msgHash",L),S=ae("publicKey",S),"strict"in E)throw new Error("options.strict was renamed to lowS");Rh(E);let{lowS:N,prehash:M}=E,U,$;try{if(typeof I=="string"||zt(I))try{U=g.fromDER(I)}catch(de){if(!(de instanceof Dt.Err))throw de;U=g.fromCompact(I)}else if(typeof I=="object"&&typeof I.r=="bigint"&&typeof I.s=="bigint"){let{r:de,s:He}=I;U=new g(de,He)}else throw new Error("PARSE");$=c.fromHex(S)}catch(de){if(de.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(N&&U.hasHighS())return!1;M&&(L=e.hash(L));let{r:z,s:K}=U,X=_(L),Q=a(K),be=i(X*Q),xe=i(z*Q),Ee=c.BASE.multiplyAndAddUnsafe($,be,xe)?.toAffine();return Ee?i(Ee.x)===z:!1}return{CURVE:e,getPublicKey:b,getSharedSecret:x,sign:F,verify:R,ProjectivePoint:c,Signature:g,utils:y}}function F0(r){return{hash:r,hmac:(e,...t)=>el(r,e,Ga(...t)),randomBytes:Gr}}function Uh(r,e){let t=n=>Mh({...r,...F0(n)});return Object.freeze({...t(e),create:t})}var Vh=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),Oh=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),V0=BigInt(1),tl=BigInt(2),Fh=(r,e)=>(r+e/tl)/e;function H0(r){let e=Vh,t=BigInt(3),n=BigInt(6),o=BigInt(11),s=BigInt(22),i=BigInt(23),a=BigInt(44),c=BigInt(88),u=r*r*r%e,f=u*u*r%e,l=ne(f,t,e)*f%e,d=ne(l,t,e)*f%e,h=ne(d,tl,e)*u%e,p=ne(h,o,e)*h%e,m=ne(p,s,e)*p%e,g=ne(m,a,e)*m%e,y=ne(g,c,e)*g%e,b=ne(y,a,e)*m%e,w=ne(b,t,e)*f%e,x=ne(w,i,e)*p%e,A=ne(x,n,e)*u%e,_=ne(A,tl,e);if(!rl.eql(rl.sqr(_),r))throw new Error("Cannot find square root");return _}var rl=jt(Vh,void 0,void 0,{sqrt:H0}),Xe=Uh({a:BigInt(0),b:BigInt(7),Fp:rl,n:Oh,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{let e=Oh,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-V0*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),s=t,i=BigInt("0x100000000000000000000000000000000"),a=Fh(s*r,e),c=Fh(-n*r,e),u=Y(r-a*t-c*o,e),f=Y(-a*n-c*s,e),l=u>i,d=f>i;if(l&&(u=e-u),d&&(f=e-f),u>i||f>i)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:l,k1:u,k2neg:d,k2:f}}}},Yr),h2=BigInt(0);var d2=Xe.ProjectivePoint;function Fe(r,e){e==null&&(e=r.reduce((o,s)=>o+s.length,0));let t=Ie(e),n=0;for(let o of r)t.set(o,n),n+=o.length;return t}function nl(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}function Hh(r,e){let t=Zr.digest(e instanceof Uint8Array?e:e.subarray());if(nl(t))return t.then(({digest:n})=>Xe.sign(n,r).toDERRawBytes()).catch(n=>{throw new Jn(String(n))});try{return Xe.sign(t.digest,r).toDERRawBytes()}catch(n){throw new Jn(String(n))}}function $h(r,e,t){let n=Zr.digest(t instanceof Uint8Array?t:t.subarray());if(nl(n))return n.then(({digest:o})=>Xe.verify(e,o,r)).catch(o=>{throw new Qn(String(o))});try{return Xe.verify(e,n.digest,r)}catch(o){throw new Qn(String(o))}}var ro=class{type="secp256k1";raw;_key;constructor(e){this._key=zh(e),this.raw=Kh(this._key)}toMultihash(){return St.digest(ht(this))}toCID(){return pe.createV1(114,this.toMultihash())}toString(){return W.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}verify(e,t){return $h(this._key,t,e)}},ei=class{type="secp256k1";raw;publicKey;constructor(e,t){this.raw=qh(e),this.publicKey=new ro(t??Gh(e))}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:ie(this.raw,e.raw)}sign(e){return Hh(this.raw,e)}};function ol(r){return new ro(r)}async function Wh(){let r=$0();return new ei(r)}function Kh(r){return Xe.ProjectivePoint.fromHex(r).toRawBytes(!0)}function qh(r){try{return Xe.getPublicKey(r,!0),r}catch(e){throw new In(String(e))}}function zh(r){try{return Xe.ProjectivePoint.fromHex(r),r}catch(e){throw new Rr(String(e))}}function Gh(r){try{return Xe.getPublicKey(r,!0)}catch(e){throw new In(String(e))}}function $0(){return Xe.utils.randomPrivateKey()}async function jh(r,e){if(r==="Ed25519")return Af();if(r==="secp256k1")return Wh();if(r==="RSA")return Qc(e??2048);throw new Ht}function sn(r){let{Type:e,Data:t}=dt.decode(r),n=t??new Uint8Array;switch(e){case ge.RSA:return Jc(n);case ge.Ed25519:return lc(n);case ge.secp256k1:return ol(n);default:throw new Ht}}function Zh(r){let{Type:e,Data:t}=dt.decode(r.digest),n=t??new Uint8Array;switch(e){case ge.Ed25519:return lc(n);case ge.secp256k1:return ol(n);default:throw new Ht}}function ht(r){return dt.encode({Type:ge[r.type],Data:r.raw})}var Xh=Symbol.for("nodejs.util.inspect.custom"),K0=114,no=class{type;multihash;publicKey;string;constructor(e){this.type=e.type,this.multihash=e.multihash,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[Po]=!0;toString(){return this.string==null&&(this.string=W.encode(this.multihash.bytes).slice(1)),this.string}toMultihash(){return this.multihash}toCID(){return pe.createV1(K0,this.multihash)}toJSON(){return this.toString()}equals(e){if(e==null)return!1;if(e instanceof Uint8Array)return ie(this.multihash.bytes,e);if(typeof e=="string")return this.toString()===e;if(e?.toMultihash()?.bytes!=null)return ie(this.multihash.bytes,e.toMultihash().bytes);throw new Error("not valid Id")}[Xh](){return`PeerId(${this.toString()})`}},oo=class extends no{type="RSA";publicKey;constructor(e){super({...e,type:"RSA"}),this.publicKey=e.publicKey}},so=class extends no{type="Ed25519";publicKey;constructor(e){super({...e,type:"Ed25519"}),this.publicKey=e.publicKey}},io=class extends no{type="secp256k1";publicKey;constructor(e){super({...e,type:"secp256k1"}),this.publicKey=e.publicKey}},q0=2336,ao=class{type="url";multihash;publicKey;url;constructor(e){this.url=e.toString(),this.multihash=St.digest(P(this.url))}[Xh](){return`PeerId(${this.url})`}[Po]=!0;toString(){return this.toCID().toString()}toMultihash(){return this.multihash}toCID(){return pe.createV1(q0,this.toMultihash())}toJSON(){return this.toString()}equals(e){return e==null?!1:(e instanceof Uint8Array&&(e=H(e)),e.toString()===this.toString())}};var z0=114,Yh=2336;function yt(r,e){let t;if(r.charAt(0)==="1"||r.charAt(0)==="Q")t=rt(W.decode(`z${r}`));else{if(e==null)throw new D('Please pass a multibase decoder for strings that do not start with "1" or "Q"');t=rt(e.decode(r))}return an(t)}function sl(r){if(r.type==="Ed25519")return new so({multihash:r.toCID().multihash,publicKey:r});if(r.type==="secp256k1")return new io({multihash:r.toCID().multihash,publicKey:r});if(r.type==="RSA")return new oo({multihash:r.toCID().multihash,publicKey:r});throw new Ht}function Jh(r){return sl(r.publicKey)}function an(r){if(W0(r))return new oo({multihash:r});if(G0(r))try{let e=Zh(r);if(e.type==="Ed25519")return new so({multihash:r,publicKey:e});if(e.type==="secp256k1")return new io({multihash:r,publicKey:e})}catch{let t=H(r.digest);return new ao(new URL(t))}throw new Oo("Supplied PeerID Multihash is invalid")}function ti(r){if(r?.multihash==null||r.version==null||r.version===1&&r.code!==z0&&r.code!==Yh)throw new Uo("Supplied PeerID CID is invalid");if(r.code===Yh){let e=H(r.multihash.digest);return new ao(new URL(e))}return an(r.multihash)}function G0(r){return r.code===St.code}function W0(r){return r.code===Zr.code}var ri=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,n=e();return n===void 0&&(this.index=t),n}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,n){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,t,n,o){return this.readAtomically(()=>{let s=0,i=0,a=this.peekChar();if(a===void 0)return;let c=a==="0",u=2**(8*o)-1;for(;;){let f=this.readAtomically(()=>{let l=this.readChar();if(l===void 0)return;let d=Number.parseInt(l,e);if(!Number.isNaN(d))return d});if(f===void 0)break;if(s*=e,s+=f,s>u||(i+=1,t!==void 0&&i>t))return}if(i!==0)return!n&&c&&i>1?void 0:s})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let n=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[t]=n}return e})}readIPv6Addr(){let e=t=>{for(let n=0;n<t.length/2;n++){let o=n*2;if(n<t.length-3){let i=this.readSeparator(":",n,()=>this.readIPv4Addr());if(i!==void 0)return t[o]=i[0],t[o+1]=i[1],t[o+2]=i[2],t[o+3]=i[3],[o+4,!0]}let s=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(s===void 0)return[o,!1];t[o]=s>>8,t[o+1]=s&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[n,o]=e(t);if(n===16)return t;if(o||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let s=new Uint8Array(14),i=16-(n+2),[a]=e(s.subarray(0,i));return t.set(s.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var Qh=45,j0=15,cn=new ri;function il(r){if(!(r.length>j0))return cn.new(r).parseWith(()=>cn.readIPv4Addr())}function al(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>Qh))return cn.new(r).parseWith(()=>cn.readIPv6Addr())}function ni(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>Qh))return cn.new(r).parseWith(()=>cn.readIPAddr())}function ln(r){return!!il(r)}function un(r){return!!al(r)}function oi(r){return!!ni(r)}var EE=parseInt("0xFFFF",16),AE=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);var rd=ln,Q0=un,cl=function(r){let e=0;if(r=r.toString().trim(),rd(r)){let t=new Uint8Array(e+4);return r.split(/\./g).forEach(n=>{t[e++]=parseInt(n,10)&255}),t}if(Q0(r)){let t=r.split(":",8),n;for(n=0;n<t.length;n++){let s=rd(t[n]),i;s&&(i=cl(t[n]),t[n]=H(i.slice(0,2),"base16")),i!=null&&++n<8&&t.splice(n,0,H(i.slice(2,4),"base16"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(n=0;n<t.length&&t[n]!=="";n++);let s=[n,1];for(n=9-t.length;n>0;n--)s.push("0");t.splice.apply(t,s)}let o=new Uint8Array(e+16);for(n=0;n<t.length;n++){let s=parseInt(t[n],16);o[e++]=s>>8&255,o[e++]=s&255}return o}throw new Error("invalid ip address")},nd=function(r,e=0,t){e=~~e,t=t??r.length-e;let n=new DataView(r.buffer);if(t===4){let o=[];for(let s=0;s<t;s++)o.push(r[e+s]);return o.join(".")}if(t===16){let o=[];for(let s=0;s<t;s+=2)o.push(n.getUint16(e+s).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var fn={},ll={},ty=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];ty.forEach(r=>{let e=ry(...r);ll[e.code]=e,fn[e.name]=e});function ry(r,e,t,n,o){return{code:r,size:e,name:t,resolvable:!!n,path:!!o}}function Z(r){if(typeof r=="number"){if(ll[r]!=null)return ll[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(fn[r]!=null)return fn[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var oA=Z("ip4"),sA=Z("ip6"),iA=Z("ipcidr");function dl(r,e){switch(Z(r).code){case 4:case 41:return oy(e);case 42:return hl(e);case 6:case 273:case 33:case 132:return id(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return hl(e);case 421:return cy(e);case 444:return sd(e);case 445:return sd(e);case 466:return ay(e);case 481:return globalThis.encodeURIComponent(hl(e));default:return H(e,"base16")}}function pl(r,e){switch(Z(r).code){case 4:return od(e);case 41:return od(e);case 42:return fl(e);case 6:case 273:case 33:case 132:return ml(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return fl(e);case 421:return sy(e);case 444:return ly(e);case 445:return uy(e);case 466:return iy(e);case 481:return fl(globalThis.decodeURIComponent(e));default:return P(e,"base16")}}var ul=Object.values(Vn).map(r=>r.decoder),ny=function(){let r=ul[0].or(ul[1]);return ul.slice(2).forEach(e=>r=r.or(e)),r}();function od(r){if(!oi(r))throw new Error("invalid ip address");return cl(r)}function oy(r){let e=nd(r,0,r.length);if(e==null)throw new Error("ipBuff is required");if(!oi(e))throw new Error("invalid ip address");return e}function ml(r){let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function id(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function fl(r){let e=P(r),t=Uint8Array.from(ke(e.length));return Fe([t,e],t.length+e.length)}function hl(r){let e=it(r);if(r=r.slice(he(e)),r.length!==e)throw new Error("inconsistent lengths");return H(r)}function sy(r){let e;r[0]==="Q"||r[0]==="1"?e=rt(W.decode(`z${r}`)).bytes:e=pe.parse(r).multihash.bytes;let t=Uint8Array.from(ke(e.length));return Fe([t,e],t.length+e.length)}function iy(r){let e=ny.decode(r),t=Uint8Array.from(ke(e.length));return Fe([t,e],t.length+e.length)}function ay(r){let e=it(r),t=r.slice(he(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+H(t,"base64url")}function cy(r){let e=it(r),t=r.slice(he(e));if(t.length!==e)throw new Error("inconsistent lengths");return H(t,"base58btc")}function ly(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);let t=ze.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=ml(n);return Fe([t,o],t.length+o.length)}function uy(r){let e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);let t=ze.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=ml(n);return Fe([t,o],t.length+o.length)}function sd(r){let e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=H(e,"base32"),o=id(t);return`${n}:${o}`}function ad(r){r=gl(r);let e=[],t=[],n=null,o=r.split("/").slice(1);if(o.length===1&&o[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let s=0;s<o.length;s++){let i=o[s],a=Z(i);if(a.size===0){e.push([a.code]),t.push([a.code]);continue}if(s++,s>=o.length)throw ld("invalid address: "+r);if(a.path===!0){n=gl(o.slice(s).join("/")),e.push([a.code,pl(a.code,n)]),t.push([a.code,n]);break}let c=pl(a.code,o[s]);e.push([a.code,c]),t.push([a.code,dl(a.code,c)])}return{string:cd(t),bytes:wl(e),tuples:e,stringTuples:t,path:n}}function yl(r){let e=[],t=[],n=null,o=0;for(;o<r.length;){let s=it(r,o),i=he(s),a=Z(s),c=fy(a,r.slice(o+i));if(c===0){e.push([s]),t.push([s]),o+=i;continue}let u=r.slice(o+i,o+i+c);if(o+=c+i,o>r.length)throw ld("Invalid address Uint8Array: "+H(r,"base16"));e.push([s,u]);let f=dl(s,u);if(t.push([s,f]),a.path===!0){n=f;break}}return{bytes:Uint8Array.from(r),string:cd(t),tuples:e,stringTuples:t,path:n}}function cd(r){let e=[];return r.map(t=>{let n=Z(t[0]);return e.push(n.name),t.length>1&&t[1]!=null&&e.push(t[1]),null}),gl(e.join("/"))}function wl(r){return Fe(r.map(e=>{let t=Z(e[0]),n=Uint8Array.from(ke(t.code));return e.length>1&&e[1]!=null&&(n=Fe([n,e[1]])),n}))}function fy(r,e){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let t=it(e instanceof Uint8Array?e:Uint8Array.from(e));return t+he(t)}}function gl(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}function ld(r){return new Error("Error parsing address: "+r)}var hy=Symbol.for("nodejs.util.inspect.custom"),xl=Symbol.for("@multiformats/js-multiaddr/multiaddr"),dy=[Z("dns").code,Z("dns4").code,Z("dns6").code,Z("dnsaddr").code],bl=class extends Error{constructor(e="No available resolver"){super(e),this.name="NoAvailableResolverError"}},si=class r{bytes;#e;#t;#s;#a;[xl]=!0;constructor(e){e==null&&(e="");let t;if(e instanceof Uint8Array)t=yl(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);t=ad(e)}else if(tr(e))t=yl(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=t.bytes,this.#e=t.string,this.#t=t.tuples,this.#s=t.stringTuples,this.#a=t.path}toString(){return this.#e}toJSON(){return this.toString()}toOptions(){let e,t,n,o,s="",i=Z("tcp"),a=Z("udp"),c=Z("ip4"),u=Z("ip6"),f=Z("dns6"),l=Z("ip6zone");for(let[h,p]of this.stringTuples())h===l.code&&(s=`%${p??""}`),dy.includes(h)&&(t=i.name,o=443,n=`${p??""}${s}`,e=h===f.code?6:4),(h===i.code||h===a.code)&&(t=Z(h).name,o=parseInt(p??"")),(h===c.code||h===u.code)&&(t=Z(h).name,n=`${p??""}${s}`,e=h===u.code?6:4);if(e==null||t==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:t,port:o}}protos(){return this.#t.map(([e])=>Object.assign({},Z(e)))}protoCodes(){return this.#t.map(([e])=>e)}protoNames(){return this.#t.map(([e])=>Z(e).name)}tuples(){return this.#t}stringTuples(){return this.#s}encapsulate(e){return e=new r(e),new r(this.toString()+e.toString())}decapsulate(e){let t=e.toString(),n=this.toString(),o=n.lastIndexOf(t);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new r(n.slice(0,o))}decapsulateCode(e){let t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new r(wl(t.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,o])=>{n===fn.p2p.code&&e.push([n,o]),n===fn["p2p-circuit"].code&&(e=[])});let t=e.pop();if(t?.[1]!=null){let n=t[1];return n[0]==="Q"||n[0]==="1"?H(W.decode(`z${n}`),"base58btc"):H(pe.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#a}equals(e){return ie(this.bytes,e.bytes)}async resolve(e){let t=this.protos().find(s=>s.resolvable);if(t==null)return[this];let n=hn.get(t.name);if(n==null)throw new bl(`no available resolver for ${t.name}`);return(await n(this,e)).map(s=>oe(s))}nodeAddress(){let e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){let t=(e??this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}[hy](){return`Multiaddr(${this.#e})`}};var hn=new Map;function tr(r){return!!r?.[xl]}function oe(r){return new si(r)}var py=r=>r.toString().split("/").slice(1),co=r=>({match:e=>e.length<1?!1:r(e[0])?e.slice(1):!1,pattern:"fn"}),G=r=>({match:e=>co(t=>t===r).match(e),pattern:r}),ci=()=>({match:r=>co(e=>typeof e=="string").match(r),pattern:"{string}"}),li=()=>({match:r=>co(e=>!isNaN(parseInt(e))).match(r),pattern:"{number}"}),_e=()=>({match:r=>{if(r.length<2||r[0]!=="p2p"&&r[0]!=="ipfs")return!1;if(r[1].startsWith("Q")||r[1].startsWith("1"))try{W.decode(`z${r[1]}`)}catch{return!1}else return!1;return r.slice(2)},pattern:"/p2p/{peerid}"}),ii=()=>({match:r=>{if(r.length<2||r[0]!=="certhash")return!1;try{Bc.decode(r[1])}catch{return!1}return r.slice(2)},pattern:"/certhash/{certhash}"}),ye=r=>({match:e=>{let t=r.match(e);return t===!1?e:t},pattern:`optional(${r.pattern})`}),Ye=(...r)=>({match:e=>{let t;for(let n of r){let o=n.match(e);o!==!1&&(t==null||o.length<t.length)&&(t=o)}return t??!1},pattern:`or(${r.map(e=>e.pattern).join(", ")})`}),J=(...r)=>({match:e=>{for(let t of r){let n=t.match(e);if(n===!1)return!1;e=n}return e},pattern:`and(${r.map(e=>e.pattern).join(", ")})`});function ue(...r){function e(o){let s=py(o);for(let i of r){let a=i.match(s);if(a===!1)return!1;s=a}return s}function t(o){return e(o)!==!1}function n(o){let s=e(o);return s===!1?!1:s.length===0}return{matches:t,exactMatch:n}}var El=J(G("dns4"),ci()),Al=J(G("dns6"),ci()),Sl=J(G("dnsaddr"),ci()),ud=J(G("dns"),ci()),RA=ue(El),DA=ue(Al),MA=ue(Sl),UA=ue(Ye(ud,Sl,El,Al)),fd=J(G("ip4"),co(ln)),hd=J(G("ip6"),co(un)),dd=Ye(fd,hd),wt=Ye(dd,ud,El,Al,Sl),OA=ue(wt),FA=ue(fd),VA=ue(hd),HA=ue(dd),_l=J(wt,G("tcp"),li()),lo=J(wt,G("udp"),li()),$A=ue(_l),KA=ue(lo),Bl=J(lo,G("quic")),ui=J(lo,G("quic-v1")),my=Ye(Bl,ui),qA=ue(Bl),zA=ue(ui),vl=Ye(wt,_l,lo,Bl,ui),pd=Ye(J(vl,G("ws"),ye(_e()))),GA=ue(pd),md=Ye(J(vl,G("wss"),ye(_e())),J(vl,G("tls"),G("ws"),ye(_e()))),WA=ue(md),gd=J(lo,G("webrtc-direct"),ye(ii()),ye(ii()),ye(_e())),jA=ue(gd),yd=J(ui,G("webtransport"),ye(ii()),ye(ii()),ye(_e())),ZA=ue(yd),ai=Ye(pd,md,J(_l,ye(_e())),J(my,ye(_e())),J(wt,ye(_e())),gd,yd,_e()),XA=ue(ai),gy=J(ai,G("p2p-circuit"),_e()),uo=ue(gy),yy=Ye(J(ai,G("p2p-circuit"),G("webrtc"),ye(_e())),J(ai,G("webrtc"),ye(_e())),G("webrtc")),YA=ue(yy),wy=Ye(J(wt,G("tcp"),li(),G("http"),ye(_e())),J(wt,G("http"),ye(_e()))),JA=ue(wy),by=Ye(J(wt,G("tcp"),Ye(J(G("443"),G("http")),J(li(),G("https"))),ye(_e())),J(wt,G("tls"),G("http"),ye(_e())),J(wt,G("https"),ye(_e()))),QA=ue(by);var bd=ar(wd(),1),xy=["0.0.0.0/8","10.0.0.0/8","100.64.0.0/10","127.0.0.0/8","169.254.0.0/16","172.16.0.0/12","192.0.0.0/24","192.0.0.0/29","192.0.0.8/32","192.0.0.9/32","192.0.0.10/32","192.0.0.170/32","192.0.0.171/32","192.0.2.0/24","192.31.196.0/24","192.52.193.0/24","192.88.99.0/24","192.168.0.0/16","192.175.48.0/24","198.18.0.0/15","198.51.100.0/24","203.0.113.0/24","240.0.0.0/4","255.255.255.255/32"],vy=xy.map(r=>new bd.Netmask(r));function Il(r){for(let e of vy)if(e.contains(r))return!0;return!1}function Ey(r){return/^::ffff:([0-9a-fA-F]{1,4}):([0-9a-fA-F]{1,4})$/.test(r)}function Ay(r){let e=r.split(":");if(e.length<2)return!1;let t=e[e.length-1].padStart(4,"0"),n=e[e.length-2].padStart(4,"0"),o=`${parseInt(n.substring(0,2),16)}.${parseInt(n.substring(2),16)}.${parseInt(t.substring(0,2),16)}.${parseInt(t.substring(2),16)}`;return Il(o)}function Sy(r){return/^::ffff:([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)}function _y(r){let e=r.split(":"),t=e[e.length-1];return Il(t)}function By(r){return/^::$/.test(r)||/^::1$/.test(r)||/^64:ff9b::([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)||/^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^f[c-d]([0-9a-fA-F]{2,2}):/i.test(r)||/^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(r)||/^ff([0-9a-fA-F]{2,2}):/i.test(r)}function fi(r){return ln(r)?Il(r):Ey(r)?Ay(r):Sy(r)?_y(r):un(r)?By(r):void 0}function Cl(r){try{let{address:e}=r.nodeAddress();return!!fi(e)}catch{return!0}}function Iy(r,e){let t=Cl(r.multiaddr),n=Cl(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function Cy(r,e){return r.isCertified&&!e.isCertified?-1:!r.isCertified&&e.isCertified?1:0}function ky(r,e){let t=uo.exactMatch(r.multiaddr),n=uo.exactMatch(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function dn(r,e){let t=Iy(r,e);if(t!==0)return t;let n=ky(r,e);return n!==0?n:Cy(r,e)}var fe=class extends Event{type;detail;constructor(e,t){super(e),this.type=e,this.detail=t}};var Tl=ar(vd(),1);var po=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},Ll=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}},Ed=r=>globalThis.DOMException===void 0?new Ll(r):new DOMException(r),Ad=r=>{let e=r.reason===void 0?Ed("This operation was aborted."):r.reason;return e instanceof Error?e:Ed(e)};function mo(r,e){let{milliseconds:t,fallback:n,message:o,customTimers:s={setTimeout,clearTimeout}}=e,i,c=new Promise((u,f)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){let{signal:d}=e;d.aborted&&f(Ad(d)),d.addEventListener("abort",()=>{f(Ad(d))})}if(t===Number.POSITIVE_INFINITY){r.then(u,f);return}let l=new po;i=s.setTimeout.call(void 0,()=>{if(n){try{u(n())}catch(d){f(d)}return}typeof r.cancel=="function"&&r.cancel(),o===!1?u():o instanceof Error?f(o):(l.message=o??`Promise timed out after ${t} milliseconds`,f(l))},t),(async()=>{try{u(await r)}catch(d){f(d)}})()}).finally(()=>{c.clear()});return c.clear=()=>{s.clearTimeout.call(void 0,i),i=void 0},c}function Nl(r,e,t){let n=0,o=r.length;for(;o>0;){let s=Math.trunc(o/2),i=n+s;t(r[i],e)<=0?(n=++i,o-=s+1):o=s}return n}var go=class{#e=[];enqueue(e,t){t={priority:0,...t};let n={priority:t.priority,run:e};if(this.size&&this.#e[this.size-1].priority>=t.priority){this.#e.push(n);return}let o=Nl(this.#e,n,(s,i)=>i.priority-s.priority);this.#e.splice(o,0,n)}dequeue(){return this.#e.shift()?.run}filter(e){return this.#e.filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return this.#e.length}};var rr=class extends Tl.default{#e;#t;#s=0;#a;#c;#p=0;#n;#l;#r;#m;#o=0;#u;#i;#g;timeout;constructor(e){if(super(),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:go,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${e.intervalCap?.toString()??""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${e.interval?.toString()??""}\` (${typeof e.interval})`);this.#e=e.carryoverConcurrencyCount,this.#t=e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,this.#a=e.intervalCap,this.#c=e.interval,this.#r=new e.queueClass,this.#m=e.queueClass,this.concurrency=e.concurrency,this.timeout=e.timeout,this.#g=e.throwOnTimeout===!0,this.#i=e.autoStart===!1}get#b(){return this.#t||this.#s<this.#a}get#x(){return this.#o<this.#u}#v(){this.#o--,this.#f(),this.emit("next")}#E(){this.#w(),this.#y(),this.#l=void 0}get#A(){let e=Date.now();if(this.#n===void 0){let t=this.#p-e;if(t<0)this.#s=this.#e?this.#o:0;else return this.#l===void 0&&(this.#l=setTimeout(()=>{this.#E()},t)),!0}return!1}#f(){if(this.#r.size===0)return this.#n&&clearInterval(this.#n),this.#n=void 0,this.emit("empty"),this.#o===0&&this.emit("idle"),!1;if(!this.#i){let e=!this.#A;if(this.#b&&this.#x){let t=this.#r.dequeue();return t?(this.emit("active"),t(),e&&this.#y(),!0):!1}}return!1}#y(){this.#t||this.#n!==void 0||(this.#n=setInterval(()=>{this.#w()},this.#c),this.#p=Date.now()+this.#c)}#w(){this.#s===0&&this.#o===0&&this.#n&&(clearInterval(this.#n),this.#n=void 0),this.#s=this.#e?this.#o:0,this.#h()}#h(){for(;this.#f(););}get concurrency(){return this.#u}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);this.#u=e,this.#h()}async#S(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(e.reason)},{once:!0})})}async add(e,t={}){return t={timeout:this.timeout,throwOnTimeout:this.#g,...t},new Promise((n,o)=>{this.#r.enqueue(async()=>{this.#o++,this.#s++;try{t.signal?.throwIfAborted();let s=e({signal:t.signal});t.timeout&&(s=mo(Promise.resolve(s),{milliseconds:t.timeout})),t.signal&&(s=Promise.race([s,this.#S(t.signal)]));let i=await s;n(i),this.emit("completed",i)}catch(s){if(s instanceof po&&!t.throwOnTimeout){n();return}o(s),this.emit("error",s)}finally{this.#v()}},t),this.emit("add"),this.#f()})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return this.#i?(this.#i=!1,this.#h(),this):this}pause(){this.#i=!0}clear(){this.#r=new this.#m}async onEmpty(){this.#r.size!==0&&await this.#d("empty")}async onSizeLessThan(e){this.#r.size<e||await this.#d("next",()=>this.#r.size<e)}async onIdle(){this.#o===0&&this.#r.size===0||await this.#d("idle")}async#d(e,t){return new Promise(n=>{let o=()=>{t&&!t()||(this.off(e,o),n())};this.on(e,o)})}get size(){return this.#r.size}sizeBy(e){return this.#r.filter(e).length}get pending(){return this.#o}get isPaused(){return this.#i}};function di(r){let e=[We.A];return r==null?e:Array.isArray(r)?r.length===0?e:r:[r]}var Pl=60;function pi(r){return{Status:r.Status??0,TC:r.TC??r.flag_tc??!1,RD:r.RD??r.flag_rd??!1,RA:r.RA??r.flag_ra??!1,AD:r.AD??r.flag_ad??!1,CD:r.CD??r.flag_cd??!1,Question:(r.Question??r.questions??[]).map(e=>({name:e.name,type:We[e.type]})),Answer:(r.Answer??r.answers??[]).map(e=>({name:e.name,type:We[e.type],TTL:e.TTL??e.ttl??Pl,data:e.data instanceof Uint8Array?H(e.data):e.data}))}}var Ny=4;function Rl(r,e={}){let t=new rr({concurrency:e.queryConcurrency??Ny});return async(n,o={})=>{let s=new URLSearchParams;s.set("name",n),di(o.types).forEach(a=>{s.append("type",We[a])}),o.onProgress?.(new fe("dns:query",{detail:n}));let i=await t.add(async()=>{let a=await fetch(`${r}?${s}`,{headers:{accept:"application/dns-json"},signal:o?.signal});if(a.status!==200)throw new Error(`Unexpected HTTP status: ${a.status} - ${a.statusText}`);let c=pi(await a.json());return o.onProgress?.(new fe("dns:response",{detail:c})),c},{signal:o.signal});if(i==null)throw new Error("No DNS response received");return i}}function Sd(){return[Rl("https://cloudflare-dns.com/dns-query"),Rl("https://dns.google/resolve")]}var Id=ar(Bd(),1);var Dl=class{lru;constructor(e){this.lru=(0,Id.default)(e)}get(e,t){let n=!0,o=[];for(let s of t){let i=this.getAnswers(e,s);if(i.length===0){n=!1;break}o.push(...i)}if(n)return pi({answers:o})}getAnswers(e,t){let n=`${e.toLowerCase()}-${t}`,o=this.lru.get(n);if(o!=null){let s=o.filter(i=>i.expires>Date.now()).map(({expires:i,value:a})=>({...a,TTL:Math.round((i-Date.now())/1e3),type:We[a.type]}));return s.length===0&&this.lru.remove(n),s}return[]}add(e,t){let n=`${e.toLowerCase()}-${t.type}`,o=this.lru.get(n)??[];o.push({expires:Date.now()+(t.TTL??Pl)*1e3,value:t}),this.lru.set(n,o)}remove(e,t){let n=`${e.toLowerCase()}-${t}`;this.lru.remove(n)}clear(){this.lru.clear()}};function Cd(r){return new Dl(r)}var Py=1e3,mi=class{resolvers;cache;constructor(e){this.resolvers={},this.cache=Cd(e.cacheSize??Py),Object.entries(e.resolvers??{}).forEach(([t,n])=>{Array.isArray(n)||(n=[n]),t.endsWith(".")||(t=`${t}.`),this.resolvers[t]=n}),this.resolvers["."]==null&&(this.resolvers["."]=Sd())}async query(e,t={}){let n=di(t.types),o=t.cached!==!1?this.cache.get(e,n):void 0;if(o!=null)return t.onProgress?.(new fe("dns:cache",{detail:o})),o;let s=`${e.split(".").pop()}.`,i=(this.resolvers[s]??this.resolvers["."]).sort(()=>Math.random()>.5?-1:1),a=[];for(let c of i){if(t.signal?.aborted===!0)break;try{let u=await c(e,{...t,types:n});for(let f of u.Answer)this.cache.add(e,f);return u}catch(u){a.push(u),t.onProgress?.(new fe("dns:error",{detail:u}))}}throw a.length===1?a[0]:new AggregateError(a,`DNS lookup of ${e} ${n} failed`)}};var We;(function(r){r[r.A=1]="A",r[r.CNAME=5]="CNAME",r[r.TXT=16]="TXT",r[r.AAAA=28]="AAAA"})(We||(We={}));function kd(r={}){return new mi(r)}var Ry=32,{code:Dy}=Z("dnsaddr"),Ml=class extends Error{constructor(e="Max recursive depth reached"){super(e),this.name="RecursionLimitError"}},br=async function(e,t={}){let n=t.maxRecursiveDepth??Ry;if(n===0)throw new Ml("Max recursive depth reached");let[,o]=e.stringTuples().find(([u])=>u===Dy)??[],i=await(t?.dns??kd()).query(`_dnsaddr.${o}`,{signal:t?.signal,types:[We.TXT]}),a=e.getPeerId(),c=[];for(let u of i.Answer){let f=u.data.replace(/["']/g,"").trim().split("=")[1];if(f==null||a!=null&&!f.includes(a))continue;let l=oe(f);if(f.startsWith("/dnsaddr")){let d=await l.resolve({...t,maxRecursiveDepth:n-1});c.push(...d.map(h=>h.toString()))}else c.push(l.toString())}return c};var Od=ar(Ud(),1),wi=Od.default;var Hy={addresses:{listen:[],announce:[],noAnnounce:[],announceFilter:r=>r},connectionManager:{resolvers:{dnsaddr:br},addressSorter:dn},transportManager:{faultTolerance:Ft.FATAL_ALL}};async function Fd(r){let e=wi(Hy,r);if(e.connectionProtector===null&&globalThis.process?.env?.LIBP2P_FORCE_PNET!=null)throw new D("Private network is enforced, but no protector was provided");return e}function $y(r,e){try{if(typeof r=="string"&&r.length>0)return Ky(r);if(typeof r=="number"&&isFinite(r))return e?.long?zy(r):qy(r);throw new Error("Value is not a string or number.")}catch(t){let n=Gy(t)?`${t.message}. value=${JSON.stringify(r)}`:"An unknown error has occured.";throw new Error(n)}}function Ky(r){if(r=String(r),r.length>100)throw new Error("Value exceeds the maximum length of 100 characters.");let e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(r);if(!e)return NaN;let t=parseFloat(e[1]),n=(e[2]||"ms").toLowerCase();switch(n){case"years":case"year":case"yrs":case"yr":case"y":return t*315576e5;case"weeks":case"week":case"w":return t*6048e5;case"days":case"day":case"d":return t*864e5;case"hours":case"hour":case"hrs":case"hr":case"h":return t*36e5;case"minutes":case"minute":case"mins":case"min":case"m":return t*6e4;case"seconds":case"second":case"secs":case"sec":case"s":return t*1e3;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t;default:throw new Error(`The unit ${n} was matched, but no matching case exists.`)}}var xi=$y;function qy(r){let e=Math.abs(r);return e>=864e5?`${Math.round(r/864e5)}d`:e>=36e5?`${Math.round(r/36e5)}h`:e>=6e4?`${Math.round(r/6e4)}m`:e>=1e3?`${Math.round(r/1e3)}s`:`${r}ms`}function zy(r){let e=Math.abs(r);return e>=864e5?bi(r,e,864e5,"day"):e>=36e5?bi(r,e,36e5,"hour"):e>=6e4?bi(r,e,6e4,"minute"):e>=1e3?bi(r,e,1e3,"second"):`${r} ms`}function bi(r,e,t,n){let o=e>=t*1.5;return`${Math.round(r/t)} ${n}${o?"s":""}`}function Gy(r){return typeof r=="object"&&r!==null&&"message"in r}function Ol(r){t.debug=t,t.default=t,t.coerce=c,t.disable=s,t.enable=o,t.enabled=i,t.humanize=xi,t.destroy=u,Object.keys(r).forEach(f=>{t[f]=r[f]}),t.names=[],t.skips=[],t.formatters={};function e(f){let l=0;for(let d=0;d<f.length;d++)l=(l<<5)-l+f.charCodeAt(d),l|=0;return t.colors[Math.abs(l)%t.colors.length]}t.selectColor=e;function t(f){let l,d=null,h,p;function m(...g){if(!m.enabled)return;let y=m,b=Number(new Date),w=b-(l||b);y.diff=w,y.prev=l,y.curr=b,l=b,g[0]=t.coerce(g[0]),typeof g[0]!="string"&&g.unshift("%O");let x=0;g[0]=g[0].replace(/%([a-zA-Z%])/g,(_,v)=>{if(_==="%%")return"%";x++;let B=t.formatters[v];if(typeof B=="function"){let T=g[x];_=B.call(y,T),g.splice(x,1),x--}return _}),t.formatArgs.call(y,g),(y.log||t.log).apply(y,g)}return m.namespace=f,m.useColors=t.useColors(),m.color=t.selectColor(f),m.extend=n,m.destroy=t.destroy,Object.defineProperty(m,"enabled",{enumerable:!0,configurable:!1,get:()=>d!==null?d:(h!==t.namespaces&&(h=t.namespaces,p=t.enabled(f)),p),set:g=>{d=g}}),typeof t.init=="function"&&t.init(m),m}function n(f,l){let d=t(this.namespace+(typeof l>"u"?":":l)+f);return d.log=this.log,d}function o(f){t.save(f),t.namespaces=f,t.names=[],t.skips=[];let l,d=(typeof f=="string"?f:"").split(/[\s,]+/),h=d.length;for(l=0;l<h;l++)d[l]&&(f=d[l].replace(/\*/g,".*?"),f[0]==="-"?t.skips.push(new RegExp("^"+f.substr(1)+"$")):t.names.push(new RegExp("^"+f+"$")))}function s(){let f=[...t.names.map(a),...t.skips.map(a).map(l=>"-"+l)].join(",");return t.enable(""),f}function i(f){if(f[f.length-1]==="*")return!0;let l,d;for(l=0,d=t.skips.length;l<d;l++)if(t.skips[l].test(f))return!1;for(l=0,d=t.names.length;l<d;l++)if(t.names[l].test(f))return!0;return!1}function a(f){return f.toString().substring(2,f.toString().length-2).replace(/\.\*\?$/,"*")}function c(f){return f instanceof Error?f.stack??f.message:f}function u(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return t.setupFormatters(t.formatters),t.enable(t.load()),t}var vi=Qy(),Wy=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function jy(){return typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/(edge|trident)\/(\d+)/)!=null?!1:typeof document<"u"&&document.documentElement?.style?.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/firefox\/(\d+)/)!=null&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent?.toLowerCase().match(/applewebkit\/(\d+)/)}function Zy(r){if(r[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+r[0]+(this.useColors?"%c ":" ")+"+"+xi(this.diff),!this.useColors)return;let e="color: "+this.color;r.splice(1,0,e,"color: inherit");let t=0,n=0;r[0].replace(/%[a-zA-Z%]/g,o=>{o!=="%%"&&(t++,o==="%c"&&(n=t))}),r.splice(n,0,e)}var Xy=console.debug??console.log??(()=>{});function Yy(r){try{r?vi?.setItem("debug",r):vi?.removeItem("debug")}catch{}}function Jy(){let r;try{r=vi?.getItem("debug")}catch{}return!r&&typeof process<"u"&&"env"in process&&(r=process.env.DEBUG),r}function Qy(){try{return localStorage}catch{}}function ew(r){r.j=function(e){try{return JSON.stringify(e)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}}var Vd=Ol({formatArgs:Zy,save:Yy,load:Jy,useColors:jy,setupFormatters:ew,colors:Wy,storage:vi,log:Xy});var je=Vd;je.formatters.b=r=>r==null?"undefined":W.baseEncode(r);je.formatters.t=r=>r==null?"undefined":ze.baseEncode(r);je.formatters.m=r=>r==null?"undefined":_c.baseEncode(r);je.formatters.p=r=>r==null?"undefined":r.toString();je.formatters.c=r=>r==null?"undefined":r.toString();je.formatters.k=r=>r==null?"undefined":r.toString();je.formatters.a=r=>r==null?"undefined":r.toString();function tw(r){let e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=r,e.destroy=()=>!0,e.extend=()=>e,e}function Ei(){return{forComponent(r){return rw(r)}}}function rw(r){let e=tw(`${r}:trace`);return je.enabled(`${r}:trace`)&&je.names.map(t=>t.toString()).find(t=>t.includes(":trace"))!=null&&(e=je(`${r}:trace`)),Object.assign(je(r),{error:je(`${r}:error`),trace:e})}function xr(r,e){let t={[Symbol.iterator]:()=>t,next:()=>{let n=r.next(),o=n.value;return n.done===!0||o==null?{done:!0,value:void 0}:{done:!1,value:e(o)}}};return t}function Ai(r){let e=rt(W.decode(`z${r}`));return an(e)}var lt=class{map;constructor(e){if(this.map=new Map,e!=null)for(let[t,n]of e.entries())this.map.set(t.toString(),{key:t,value:n})}[Symbol.iterator](){return this.entries()}clear(){this.map.clear()}delete(e){return this.map.delete(e.toString())}entries(){return xr(this.map.entries(),e=>[e[1].key,e[1].value])}forEach(e){this.map.forEach((t,n)=>{e(t.value,t.key,this)})}get(e){return this.map.get(e.toString())?.value}has(e){return this.map.has(e.toString())}set(e,t){this.map.set(e.toString(),{key:e,value:t})}keys(){return xr(this.map.values(),e=>e.key)}values(){return xr(this.map.values(),e=>e.value)}get size(){return this.map.size}};var vr=class r{set;constructor(e){if(this.set=new Set,e!=null)for(let t of e)this.set.add(t.toString())}get size(){return this.set.size}[Symbol.iterator](){return this.values()}add(e){this.set.add(e.toString())}clear(){this.set.clear()}delete(e){this.set.delete(e.toString())}entries(){return xr(this.set.entries(),e=>{let t=Ai(e[0]);return[t,t]})}forEach(e){this.set.forEach(t=>{let n=Ai(t);e(n,n,this)})}has(e){return this.set.has(e.toString())}values(){return xr(this.set.values(),e=>Ai(e))}intersection(e){let t=new r;for(let n of e)this.has(n)&&t.add(n);return t}difference(e){let t=new r;for(let n of this)e.has(n)||t.add(n);return t}union(e){let t=new r;for(let n of e)t.add(n);for(let n of this)t.add(n);return t}};var zd=Symbol.for("@achingbrain/uint8arraylist");function qd(r,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let t=0;for(let n of r){let o=t+n.byteLength;if(e<o)return{buf:n,index:e-t};t=o}throw new RangeError("index is out of bounds")}function _i(r){return!!r?.[zd]}var we=class r{bufs;length;[zd]=!0;constructor(...e){this.bufs=[],this.length=0,e.length>0&&this.appendAll(e)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...e){this.appendAll(e)}appendAll(e){let t=0;for(let n of e)if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.push(n);else if(_i(n))t+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}prepend(...e){this.prependAll(e)}prependAll(e){let t=0;for(let n of e.reverse())if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.unshift(n);else if(_i(n))t+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}get(e){let t=qd(this.bufs,e);return t.buf[t.index]}set(e,t){let n=qd(this.bufs,e);n.buf[n.index]=t}write(e,t=0){if(e instanceof Uint8Array)for(let n=0;n<e.length;n++)this.set(t+n,e[n]);else if(_i(e))for(let n=0;n<e.length;n++)this.set(t+n,e.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(e){if(e=Math.trunc(e),!(Number.isNaN(e)||e<=0)){if(e===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(e>=this.bufs[0].byteLength)e-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(e),this.length-=e;break}}}slice(e,t){let{bufs:n,length:o}=this._subList(e,t);return Fe(n,o)}subarray(e,t){let{bufs:n,length:o}=this._subList(e,t);return n.length===1?n[0]:Fe(n,o)}sublist(e,t){let{bufs:n,length:o}=this._subList(e,t),s=new r;return s.length=o,s.bufs=[...n],s}_subList(e,t){if(e=e??0,t=t??this.length,e<0&&(e=this.length+e),t<0&&(t=this.length+t),e<0||t>this.length)throw new RangeError("index is out of bounds");if(e===t)return{bufs:[],length:0};if(e===0&&t===this.length)return{bufs:this.bufs,length:this.length};let n=[],o=0;for(let s=0;s<this.bufs.length;s++){let i=this.bufs[s],a=o,c=a+i.byteLength;if(o=c,e>=c)continue;let u=e>=a&&e<c,f=t>a&&t<=c;if(u&&f){if(e===a&&t===c){n.push(i);break}let l=e-a;n.push(i.subarray(l,l+(t-e)));break}if(u){if(e===0){n.push(i);continue}n.push(i.subarray(e-a));continue}if(f){if(t===c){n.push(i);break}n.push(i.subarray(0,t-a));break}n.push(i)}return{bufs:n,length:t-e}}indexOf(e,t=0){if(!_i(e)&&!(e instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let n=e instanceof Uint8Array?e:e.subarray();if(t=Number(t??0),isNaN(t)&&(t=0),t<0&&(t=this.length+t),t<0&&(t=0),e.length===0)return t>this.length?this.length:t;let o=n.byteLength;if(o===0)throw new TypeError("search must be at least 1 byte long");let s=256,i=new Int32Array(s);for(let l=0;l<s;l++)i[l]=-1;for(let l=0;l<o;l++)i[n[l]]=l;let a=i,c=this.byteLength-n.byteLength,u=n.byteLength-1,f;for(let l=t;l<=c;l+=f){f=0;for(let d=u;d>=0;d--){let h=this.get(l+d);if(n[d]!==h){f=Math.max(1,d-a[h]);break}}if(f===0)return l}return-1}getInt8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getInt8(0)}setInt8(e,t){let n=Ie(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,t),this.write(n,e)}getInt16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,t)}setInt16(e,t,n){let o=ce(2);new DataView(o.buffer,o.byteOffset,o.byteLength).setInt16(0,t,n),this.write(o,e)}getInt32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,t)}setInt32(e,t,n){let o=ce(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setInt32(0,t,n),this.write(o,e)}getBigInt64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,t)}setBigInt64(e,t,n){let o=ce(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setBigInt64(0,t,n),this.write(o,e)}getUint8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getUint8(0)}setUint8(e,t){let n=Ie(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,t),this.write(n,e)}getUint16(e,t){let n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,t)}setUint16(e,t,n){let o=ce(2);new DataView(o.buffer,o.byteOffset,o.byteLength).setUint16(0,t,n),this.write(o,e)}getUint32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,t)}setUint32(e,t,n){let o=ce(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setUint32(0,t,n),this.write(o,e)}getBigUint64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,t)}setBigUint64(e,t,n){let o=ce(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setBigUint64(0,t,n),this.write(o,e)}getFloat32(e,t){let n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,t)}setFloat32(e,t,n){let o=ce(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setFloat32(0,t,n),this.write(o,e)}getFloat64(e,t){let n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,t)}setFloat64(e,t,n){let o=ce(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setFloat64(0,t,n),this.write(o,e)}equals(e){if(e==null||!(e instanceof r)||e.bufs.length!==this.bufs.length)return!1;for(let t=0;t<this.bufs.length;t++)if(!ie(this.bufs[t],e.bufs[t]))return!1;return!0}static fromUint8Arrays(e,t){let n=new r;return n.bufs=e,t==null&&(t=e.reduce((o,s)=>o+s.byteLength,0)),n.length=t,n}};var Fl=64,ut=class{fp;h;seed;constructor(e,t,n,o=2){if(o>Fl)throw new TypeError("Invalid Fingerprint Size");let s=t.hashV(e,n),i=ce(o);for(let a=0;a<i.length;a++)i[a]=s[a];i.length===0&&(i[0]=7),this.fp=i,this.h=t,this.seed=n}hash(){return this.h.hash(this.fp,this.seed)}equals(e){return e?.fp instanceof Uint8Array?ie(this.fp,e.fp):!1}};function Er(r,e){return Math.floor(Math.random()*(e-r))+r}var Ar=class{contents;constructor(e){this.contents=new Array(e).fill(null)}has(e){if(!(e instanceof ut))throw new TypeError("Invalid Fingerprint");return this.contents.some(t=>e.equals(t))}add(e){if(!(e instanceof ut))throw new TypeError("Invalid Fingerprint");for(let t=0;t<this.contents.length;t++)if(this.contents[t]==null)return this.contents[t]=e,!0;return!0}swap(e){if(!(e instanceof ut))throw new TypeError("Invalid Fingerprint");let t=Er(0,this.contents.length-1),n=this.contents[t];return this.contents[t]=e,n}remove(e){if(!(e instanceof ut))throw new TypeError("Invalid Fingerprint");let t=this.contents.findIndex(n=>e.equals(n));return t>-1?(this.contents[t]=null,!0):!1}};var Vl={32:16777619n,64:1099511628211n,128:309485009821345068724781371n,256:374144419156711147060143317175368453031918731002211n,512:35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852759n,1024:5016456510113118655434598811035278955030765345404790744303017523831112055108147451509157692220295382716162651878526895249385292291816524375083746691371804094271873160484737966720260389217684476157468082573n},Gd={32:2166136261n,64:14695981039346656037n,128:144066263297769815596495629667062367629n,256:100029257958052580907070968620625704837092796014241193945225284501741471925557n,512:9659303129496669498009435400716310466090418745672637896108374329434462657994582932197716438449813051892206539805784495328239340083876191928701583869517785n,1024:14197795064947621068722070641403218320880622795441933960878474914617582723252296732303717722150864096521202355549365628174669108571814760471015076148029755969804077320157692458563003215304957150157403644460363550505412711285966361610267868082893823963790439336411086884584107735010676915n},Wd=new globalThis.TextEncoder;function nw(r,e){let t=Vl[e],n=Gd[e];for(let o=0;o<r.length;o++)n^=BigInt(r[o]),n=BigInt.asUintN(e,n*t);return n}function ow(r,e,t){if(t.length===0)throw new Error("The `utf8Buffer` option must have a length greater than zero");let n=Vl[e],o=Gd[e],s=r;for(;s.length>0;){let i=Wd.encodeInto(s,t);s=s.slice(i.read);for(let a=0;a<i.written;a++)o^=BigInt(t[a]),o=BigInt.asUintN(e,o*n)}return o}function Hl(r,{size:e=32,utf8Buffer:t}={}){if(!Vl[e])throw new Error("The `size` option must be one of 32, 64, 128, 256, 512, or 1024");if(typeof r=="string"){if(t)return ow(r,e,t);r=Wd.encode(r)}return nw(r,e)}var sw=ar(Kd(),1);var wo={hash:r=>Number(Hl(r,{size:32})),hashV:(r,e)=>iw(wo.hash(r,e))};function iw(r){let e=r.toString(16);return e.length%2===1&&(e=`0${e}`),P(e,"base16")}var aw=500,bo=class{bucketSize;filterSize;fingerprintSize;buckets;count;hash;seed;constructor(e){this.filterSize=e.filterSize,this.bucketSize=e.bucketSize??4,this.fingerprintSize=e.fingerprintSize??2,this.count=0,this.buckets=[],this.hash=e.hash??wo,this.seed=e.seed??Er(0,Math.pow(2,10))}add(e){typeof e=="string"&&(e=P(e));let t=new ut(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,o=(n^t.hash())%this.filterSize;if(this.buckets[n]==null&&(this.buckets[n]=new Ar(this.bucketSize)),this.buckets[o]==null&&(this.buckets[o]=new Ar(this.bucketSize)),this.buckets[n].add(t)||this.buckets[o].add(t))return this.count++,!0;let s=[n,o],i=s[Er(0,s.length-1)];this.buckets[i]==null&&(this.buckets[i]=new Ar(this.bucketSize));for(let a=0;a<aw;a++){let c=this.buckets[i].swap(t);if(c!=null&&(i=(i^c.hash())%this.filterSize,this.buckets[i]==null&&(this.buckets[i]=new Ar(this.bucketSize)),this.buckets[i].add(c)))return this.count++,!0}return!1}has(e){typeof e=="string"&&(e=P(e));let t=new ut(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,o=this.buckets[n]?.has(t)??!1;if(o)return o;let s=(n^t.hash())%this.filterSize;return this.buckets[s]?.has(t)??!1}remove(e){typeof e=="string"&&(e=P(e));let t=new ut(e,this.hash,this.seed,this.fingerprintSize),n=this.hash.hash(e,this.seed)%this.filterSize,o=this.buckets[n]?.remove(t)??!1;if(o)return this.count--,o;let s=(n^t.hash())%this.filterSize,i=this.buckets[s]?.remove(t)??!1;return i&&this.count--,i}get reliable(){return Math.floor(100*(this.count/this.filterSize))<=90}},cw={1:.5,2:.84,4:.95,8:.98};function lw(r=.001){return r>.002?2:r>1e-5?4:8}function jd(r,e=.001){let t=lw(e),n=cw[t],o=Math.round(r/n),s=Math.min(Math.ceil(Math.log2(1/e)+Math.log2(2*t)),Fl);return{filterSize:o,bucketSize:t,fingerprintSize:s}}var Bi=class{filterSize;bucketSize;fingerprintSize;scale;filterSeries;hash;seed;constructor(e){this.bucketSize=e.bucketSize??4,this.filterSize=e.filterSize??(1<<18)/this.bucketSize,this.fingerprintSize=e.fingerprintSize??2,this.scale=e.scale??2,this.hash=e.hash??wo,this.seed=e.seed??Er(0,Math.pow(2,10)),this.filterSeries=[new bo({filterSize:this.filterSize,bucketSize:this.bucketSize,fingerprintSize:this.fingerprintSize,hash:this.hash,seed:this.seed})]}add(e){if(typeof e=="string"&&(e=P(e)),this.has(e))return!0;let t=this.filterSeries.find(n=>n.reliable);if(t==null){let n=this.filterSize*Math.pow(this.scale,this.filterSeries.length);t=new bo({filterSize:n,bucketSize:this.bucketSize,fingerprintSize:this.fingerprintSize,hash:this.hash,seed:this.seed}),this.filterSeries.push(t)}return t.add(e)}has(e){typeof e=="string"&&(e=P(e));for(let t=0;t<this.filterSeries.length;t++)if(this.filterSeries[t].has(e))return!0;return!1}remove(e){typeof e=="string"&&(e=P(e));for(let t=0;t<this.filterSeries.length;t++)if(this.filterSeries[t].remove(e))return!0;return!1}get count(){return this.filterSeries.reduce((e,t)=>e+t.count,0)}};function $l(r,e=.001,t){return new Bi({...jd(r,e),...t??{}})}var xo;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.publicKey!=null&&t.publicKey.byteLength>0&&(n.uint32(10),n.bytes(t.publicKey)),t.payloadType!=null&&t.payloadType.byteLength>0&&(n.uint32(18),n.bytes(t.payloadType)),t.payload!=null&&t.payload.byteLength>0&&(n.uint32(26),n.bytes(t.payload)),t.signature!=null&&t.signature.byteLength>0&&(n.uint32(42),n.bytes(t.signature)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={publicKey:ce(0),payloadType:ce(0),payload:ce(0),signature:ce(0)},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.publicKey=t.bytes();break}case 2:{s.payloadType=t.bytes();break}case 3:{s.payload=t.bytes();break}case 5:{s.signature=t.bytes();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})(xo||(xo={}));var Ii=class extends Error{constructor(e="Invalid signature"){super(e),this.name="InvalidSignatureError"}};var gn=class r{static createFromProtobuf=async e=>{let t=xo.decode(e),n=sn(t.publicKey);return new r({publicKey:n,payloadType:t.payloadType,payload:t.payload,signature:t.signature})};static seal=async(e,t)=>{if(t==null)throw new Error("Missing private key");let n=e.domain,o=e.codec,s=e.marshal(),i=Zd(n,o,s),a=await t.sign(i.subarray());return new r({publicKey:t.publicKey,payloadType:o,payload:s,signature:a})};static openAndCertify=async(e,t)=>{let n=await r.createFromProtobuf(e);if(!await n.validate(t))throw new Ii("Envelope signature is not valid for the given domain");return n};publicKey;payloadType;payload;signature;marshaled;constructor(e){let{publicKey:t,payloadType:n,payload:o,signature:s}=e;this.publicKey=t,this.payloadType=n,this.payload=o,this.signature=s}marshal(){return this.marshaled==null&&(this.marshaled=xo.encode({publicKey:ht(this.publicKey),payloadType:this.payloadType,payload:this.payload.subarray(),signature:this.signature})),this.marshaled}equals(e){return ie(this.marshal(),e.marshal())}async validate(e){let t=Zd(e,this.payloadType,this.payload);return this.publicKey.verify(t.subarray(),this.signature)}},Zd=(r,e,t)=>{let n=P(r),o=ke(n.byteLength),s=ke(e.length),i=ke(t.length);return new we(o,n,s,e,i,t)};function Xd(r,e){let t=(n,o)=>n.toString().localeCompare(o.toString());return r.length!==e.length?!1:(e.sort(t),r.sort(t).every((n,o)=>e[o].equals(n)))}var Yd="libp2p-peer-record",Jd=Uint8Array.from([3,1]);var vo;(function(r){let e;(function(n){let o;n.codec=()=>(o==null&&(o=Ue((s,i,a={})=>{a.lengthDelimited!==!1&&i.fork(),s.multiaddr!=null&&s.multiaddr.byteLength>0&&(i.uint32(10),i.bytes(s.multiaddr)),a.lengthDelimited!==!1&&i.ldelim()},(s,i,a={})=>{let c={multiaddr:ce(0)},u=i==null?s.len:s.pos+i;for(;s.pos<u;){let f=s.uint32();switch(f>>>3){case 1:{c.multiaddr=s.bytes();break}default:{s.skipType(f&7);break}}}return c})),o),n.encode=s=>Me(s,n.codec()),n.decode=(s,i)=>De(s,n.codec(),i)})(e=r.AddressInfo||(r.AddressInfo={}));let t;r.codec=()=>(t==null&&(t=Ue((n,o,s={})=>{if(s.lengthDelimited!==!1&&o.fork(),n.peerId!=null&&n.peerId.byteLength>0&&(o.uint32(10),o.bytes(n.peerId)),n.seq!=null&&n.seq!==0n&&(o.uint32(16),o.uint64(n.seq)),n.addresses!=null)for(let i of n.addresses)o.uint32(26),r.AddressInfo.codec().encode(i,o);s.lengthDelimited!==!1&&o.ldelim()},(n,o,s={})=>{let i={peerId:ce(0),seq:0n,addresses:[]},a=o==null?n.len:n.pos+o;for(;n.pos<a;){let c=n.uint32();switch(c>>>3){case 1:{i.peerId=n.bytes();break}case 2:{i.seq=n.uint64();break}case 3:{if(s.limits?.addresses!=null&&i.addresses.length===s.limits.addresses)throw new yr('Decode error - map field "addresses" had too many elements');i.addresses.push(r.AddressInfo.codec().decode(n,n.uint32(),{limits:s.limits?.addresses$}));break}default:{n.skipType(c&7);break}}}return i})),t),r.encode=n=>Me(n,r.codec()),r.decode=(n,o)=>De(n,r.codec(),o)})(vo||(vo={}));var Sr=class r{static createFromProtobuf=e=>{let t=vo.decode(e),n=an(rt(t.peerId)),o=(t.addresses??[]).map(i=>oe(i.multiaddr)),s=t.seq;return new r({peerId:n,multiaddrs:o,seqNumber:s})};static DOMAIN=Yd;static CODEC=Jd;peerId;multiaddrs;seqNumber;domain=r.DOMAIN;codec=r.CODEC;marshaled;constructor(e){let{peerId:t,multiaddrs:n,seqNumber:o}=e;this.peerId=t,this.multiaddrs=n??[],this.seqNumber=o??BigInt(Date.now())}marshal(){return this.marshaled==null&&(this.marshaled=vo.encode({peerId:this.peerId.toMultihash().bytes,seq:BigInt(this.seqNumber),addresses:this.multiaddrs.map(e=>({multiaddr:e.bytes}))})),this.marshaled}equals(e){return!(!(e instanceof r)||!this.peerId.equals(e.peerId)||this.seqNumber!==e.seqNumber||!Xd(this.multiaddrs,e.multiaddrs))}};function uw(r){return r[Symbol.asyncIterator]!=null}function fw(r){if(uw(r))return(async()=>{let t=[];for await(let n of r)t.push(n);return t})();let e=[];for(let t of r)e.push(t);return e}var Eo=fw;var nr={},yn=r=>{r.addEventListener("message",e=>{yn.dispatchEvent("message",r,e)}),r.port!=null&&r.port.addEventListener("message",e=>{yn.dispatchEvent("message",r,e)})};yn.addEventListener=(r,e)=>{nr[r]==null&&(nr[r]=[]),nr[r].push(e)};yn.removeEventListener=(r,e)=>{nr[r]!=null&&(nr[r]=nr[r].filter(t=>t===e))};yn.dispatchEvent=function(r,e,t){nr[r]!=null&&nr[r].forEach(n=>n(e,t))};var Kl=yn;var ql="lock:worker:request-read",zl="lock:worker:release-read",Gl="lock:master:grant-read",Wl="lock:worker:request-write",jl="lock:worker:release-write",Zl="lock:master:grant-write";var Qd=(r=21)=>Math.random().toString().substring(2);var ep=(r,e,t,n,o)=>(s,i)=>{if(i.data.type!==t)return;let a={type:i.data.type,name:i.data.name,identifier:i.data.identifier};r.dispatchEvent(new MessageEvent(e,{data:{name:a.name,handler:async()=>{s.postMessage({type:o,name:a.name,identifier:a.identifier}),await new Promise(c=>{let u=f=>{if(f==null||f.data==null)return;let l={type:f.data.type,name:f.data.name,identifier:f.data.identifier};l.type===n&&l.identifier===a.identifier&&(s.removeEventListener("message",u),c())};s.addEventListener("message",u)})}}}))},tp=(r,e,t,n)=>async()=>{let o=Qd();return globalThis.postMessage({type:e,identifier:o,name:r}),new Promise(s=>{let i=a=>{if(a==null||a.data==null)return;let c={type:a.data.type,identifier:a.data.identifier};c.type===t&&c.identifier===o&&(globalThis.removeEventListener("message",i),s(()=>{globalThis.postMessage({type:n,identifier:o,name:r})}))};globalThis.addEventListener("message",i)})},hw={singleProcess:!1},rp=r=>{if(r=Object.assign({},hw,r),!!globalThis.document||r.singleProcess){let t=new EventTarget;return Kl.addEventListener("message",ep(t,"requestReadLock",ql,zl,Gl)),Kl.addEventListener("message",ep(t,"requestWriteLock",Wl,jl,Zl)),t}return{isWorker:!0,readLock:t=>tp(t,ql,Gl,zl),writeLock:t=>tp(t,Wl,Zl,jl)}};var _r={},or;async function Xl(r,e){let t,n=new Promise(o=>{t=o});return r.add(async()=>mo((async()=>{await new Promise(o=>{t(()=>{o()})})})(),{milliseconds:e.timeout})),n}var dw=(r,e)=>{if(or.isWorker===!0)return{readLock:or.readLock(r,e),writeLock:or.writeLock(r,e)};let t=new rr({concurrency:1}),n;return{async readLock(){if(n!=null)return Xl(n,e);n=new rr({concurrency:e.concurrency,autoStart:!1});let o=n,s=Xl(n,e);return t.add(async()=>{o.start(),await o.onIdle().then(()=>{n===o&&(n=null)})}),s},async writeLock(){return n=null,Xl(t,e)}}},pw={name:"lock",concurrency:1/0,timeout:846e5,singleProcess:!1};function Yl(r){let e=Object.assign({},pw,r);return or==null&&(or=rp(e),or.isWorker!==!0&&(or.addEventListener("requestReadLock",t=>{_r[t.data.name]!=null&&_r[t.data.name].readLock().then(async n=>t.data.handler().finally(()=>{n()}))}),or.addEventListener("requestWriteLock",async t=>{_r[t.data.name]!=null&&_r[t.data.name].writeLock().then(async n=>t.data.handler().finally(()=>{n()}))}))),_r[e.name]==null&&(_r[e.name]=dw(e.name,e)),_r[e.name]}var wn;(function(r){let e;(function(o){let s;o.codec=()=>(s==null&&(s=Ue((i,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),i.key!=null&&i.key!==""&&(a.uint32(10),a.string(i.key)),i.value!=null&&i.value.byteLength>0&&(a.uint32(18),a.bytes(i.value)),c.lengthDelimited!==!1&&a.ldelim()},(i,a,c={})=>{let u={key:"",value:ce(0)},f=a==null?i.len:i.pos+a;for(;i.pos<f;){let l=i.uint32();switch(l>>>3){case 1:{u.key=i.string();break}case 2:{u.value=i.bytes();break}default:{i.skipType(l&7);break}}}return u})),s),o.encode=i=>Me(i,o.codec()),o.decode=(i,a)=>De(i,o.codec(),a)})(e=r.Peer$metadataEntry||(r.Peer$metadataEntry={}));let t;(function(o){let s;o.codec=()=>(s==null&&(s=Ue((i,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),i.key!=null&&i.key!==""&&(a.uint32(10),a.string(i.key)),i.value!=null&&(a.uint32(18),ki.codec().encode(i.value,a)),c.lengthDelimited!==!1&&a.ldelim()},(i,a,c={})=>{let u={key:""},f=a==null?i.len:i.pos+a;for(;i.pos<f;){let l=i.uint32();switch(l>>>3){case 1:{u.key=i.string();break}case 2:{u.value=ki.codec().decode(i,i.uint32(),{limits:c.limits?.value});break}default:{i.skipType(l&7);break}}}return u})),s),o.encode=i=>Me(i,o.codec()),o.decode=(i,a)=>De(i,o.codec(),a)})(t=r.Peer$tagsEntry||(r.Peer$tagsEntry={}));let n;r.codec=()=>(n==null&&(n=Ue((o,s,i={})=>{if(i.lengthDelimited!==!1&&s.fork(),o.addresses!=null)for(let a of o.addresses)s.uint32(10),Ci.codec().encode(a,s);if(o.protocols!=null)for(let a of o.protocols)s.uint32(18),s.string(a);if(o.publicKey!=null&&(s.uint32(34),s.bytes(o.publicKey)),o.peerRecordEnvelope!=null&&(s.uint32(42),s.bytes(o.peerRecordEnvelope)),o.metadata!=null&&o.metadata.size!==0)for(let[a,c]of o.metadata.entries())s.uint32(50),r.Peer$metadataEntry.codec().encode({key:a,value:c},s);if(o.tags!=null&&o.tags.size!==0)for(let[a,c]of o.tags.entries())s.uint32(58),r.Peer$tagsEntry.codec().encode({key:a,value:c},s);i.lengthDelimited!==!1&&s.ldelim()},(o,s,i={})=>{let a={addresses:[],protocols:[],metadata:new Map,tags:new Map},c=s==null?o.len:o.pos+s;for(;o.pos<c;){let u=o.uint32();switch(u>>>3){case 1:{if(i.limits?.addresses!=null&&a.addresses.length===i.limits.addresses)throw new yr('Decode error - map field "addresses" had too many elements');a.addresses.push(Ci.codec().decode(o,o.uint32(),{limits:i.limits?.addresses$}));break}case 2:{if(i.limits?.protocols!=null&&a.protocols.length===i.limits.protocols)throw new yr('Decode error - map field "protocols" had too many elements');a.protocols.push(o.string());break}case 4:{a.publicKey=o.bytes();break}case 5:{a.peerRecordEnvelope=o.bytes();break}case 6:{if(i.limits?.metadata!=null&&a.metadata.size===i.limits.metadata)throw new Kn('Decode error - map field "metadata" had too many elements');let f=r.Peer$metadataEntry.codec().decode(o,o.uint32());a.metadata.set(f.key,f.value);break}case 7:{if(i.limits?.tags!=null&&a.tags.size===i.limits.tags)throw new Kn('Decode error - map field "tags" had too many elements');let f=r.Peer$tagsEntry.codec().decode(o,o.uint32(),{limits:{value:i.limits?.tags$value}});a.tags.set(f.key,f.value);break}default:{o.skipType(u&7);break}}}return a})),n),r.encode=o=>Me(o,r.codec()),r.decode=(o,s)=>De(o,r.codec(),s)})(wn||(wn={}));var Ci;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.multiaddr!=null&&t.multiaddr.byteLength>0&&(n.uint32(10),n.bytes(t.multiaddr)),t.isCertified!=null&&(n.uint32(16),n.bool(t.isCertified)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={multiaddr:ce(0)},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.multiaddr=t.bytes();break}case 2:{s.isCertified=t.bool();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})(Ci||(Ci={}));var ki;(function(r){let e;r.codec=()=>(e==null&&(e=Ue((t,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),t.value!=null&&t.value!==0&&(n.uint32(8),n.uint32(t.value)),t.expiry!=null&&(n.uint32(16),n.uint64(t.expiry)),o.lengthDelimited!==!1&&n.ldelim()},(t,n,o={})=>{let s={value:0},i=n==null?t.len:t.pos+n;for(;t.pos<i;){let a=t.uint32();switch(a>>>3){case 1:{s.value=t.uint32();break}case 2:{s.expiry=t.uint64();break}default:{t.skipType(a&7);break}}}return s})),e),r.encode=t=>Me(t,r.codec()),r.decode=(t,n)=>De(t,r.codec(),n)})(ki||(ki={}));function bn(r,e){let t=wn.decode(e);if(t.publicKey!=null&&r.publicKey==null){let s=sn(t.publicKey);r=sl(s)}let n=new Map,o=BigInt(Date.now());for(let[s,i]of t.tags.entries())i.expiry!=null&&i.expiry<o||n.set(s,i);return{...t,id:r,addresses:t.addresses.map(({multiaddr:s,isCertified:i})=>({multiaddr:oe(s),isCertified:i??!1})),metadata:t.metadata,peerRecordEnvelope:t.peerRecordEnvelope??void 0,tags:n}}var Ut="/",np=new TextEncoder().encode(Ut),Ti=np[0],Br=class r{_buf;constructor(e,t){if(typeof e=="string")this._buf=P(e);else if(e instanceof Uint8Array)this._buf=e;else throw new Error("Invalid key, should be String of Uint8Array");if(t==null&&(t=!0),t&&this.clean(),this._buf.byteLength===0||this._buf[0]!==Ti)throw new Error("Invalid key")}toString(e="utf8"){return H(this._buf,e)}uint8Array(){return this._buf}get[Symbol.toStringTag](){return`Key(${this.toString()})`}static withNamespaces(e){return new r(e.join(Ut))}static random(){return new r(Math.random().toString().substring(2))}static asKey(e){return e instanceof Uint8Array||typeof e=="string"?new r(e):typeof e.uint8Array=="function"?new r(e.uint8Array()):null}clean(){if((this._buf==null||this._buf.byteLength===0)&&(this._buf=np),this._buf[0]!==Ti){let e=new Uint8Array(this._buf.byteLength+1);e.fill(Ti,0,1),e.set(this._buf,1),this._buf=e}for(;this._buf.byteLength>1&&this._buf[this._buf.byteLength-1]===Ti;)this._buf=this._buf.subarray(0,-1)}less(e){let t=this.list(),n=e.list();for(let o=0;o<t.length;o++){if(n.length<o+1)return!1;let s=t[o],i=n[o];if(s<i)return!0;if(s>i)return!1}return t.length<n.length}reverse(){return r.withNamespaces(this.list().slice().reverse())}namespaces(){return this.list()}baseNamespace(){let e=this.namespaces();return e[e.length-1]}list(){return this.toString().split(Ut).slice(1)}type(){return mw(this.baseNamespace())}name(){return gw(this.baseNamespace())}instance(e){return new r(this.toString()+":"+e)}path(){let e=this.parent().toString();return e.endsWith(Ut)||(e+=Ut),e+=this.type(),new r(e)}parent(){let e=this.list();return e.length===1?new r(Ut):new r(e.slice(0,-1).join(Ut))}child(e){return this.toString()===Ut?e:e.toString()===Ut?this:new r(this.toString()+e.toString(),!1)}isAncestorOf(e){return e.toString()===this.toString()?!1:e.toString().startsWith(this.toString())}isDecendantOf(e){return e.toString()===this.toString()?!1:this.toString().startsWith(e.toString())}isTopLevel(){return this.list().length===1}concat(...e){return r.withNamespaces([...this.namespaces(),...yw(e.map(t=>t.namespaces()))])}};function mw(r){let e=r.split(":");return e.length<2?"":e.slice(0,-1).join(":")}function gw(r){let e=r.split(":");return e[e.length-1]}function yw(r){return[].concat(...r)}var Jl="/peers/";function xn(r){if(!Ro(r)||r.type==null)throw new D("Invalid PeerId");let e=r.toCID().toString();return new Br(`${Jl}${e}`)}async function op(r,e,t){let n=new Map;for(let o of t){if(o==null)continue;if(o.multiaddr instanceof Uint8Array&&(o.multiaddr=oe(o.multiaddr)),!tr(o.multiaddr))throw new D("Multiaddr was invalid");if(!await e(r,o.multiaddr))continue;let s=o.isCertified??!1,i=o.multiaddr.toString(),a=n.get(i);a!=null?o.isCertified=a.isCertified||s:n.set(i,{multiaddr:o.multiaddr,isCertified:s})}return[...n.values()].sort((o,s)=>o.multiaddr.toString().localeCompare(s.multiaddr.toString())).map(({isCertified:o,multiaddr:s})=>({isCertified:o,multiaddr:s.bytes}))}async function Ni(r,e,t,n){if(e==null)throw new D("Invalid PeerData");if(e.publicKey!=null&&r.publicKey!=null&&!e.publicKey.equals(r.publicKey))throw new D("publicKey bytes do not match peer id publicKey bytes");let o=n.existingPeer;if(o!=null&&!r.equals(o.id))throw new D("peer id did not match existing peer id");let s=o?.addresses??[],i=new Set(o?.protocols??[]),a=o?.metadata??new Map,c=o?.tags??new Map,u=o?.peerRecordEnvelope;if(t==="patch"){if((e.multiaddrs!=null||e.addresses!=null)&&(s=[],e.multiaddrs!=null&&s.push(...e.multiaddrs.map(d=>({isCertified:!1,multiaddr:d}))),e.addresses!=null&&s.push(...e.addresses)),e.protocols!=null&&(i=new Set(e.protocols)),e.metadata!=null){let d=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);a=Li(d,{validate:sp})}if(e.tags!=null){let d=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags);c=Li(d,{validate:ip,map:ap})}e.peerRecordEnvelope!=null&&(u=e.peerRecordEnvelope)}if(t==="merge"){if(e.multiaddrs!=null&&s.push(...e.multiaddrs.map(d=>({isCertified:!1,multiaddr:d}))),e.addresses!=null&&s.push(...e.addresses),e.protocols!=null&&(i=new Set([...i,...e.protocols])),e.metadata!=null){let d=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);for(let[h,p]of d)p==null?a.delete(h):a.set(h,p);a=Li([...a.entries()],{validate:sp})}if(e.tags!=null){let d=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags),h=new Map(c);for(let[p,m]of d)m==null?h.delete(p):h.set(p,m);c=Li([...h.entries()],{validate:ip,map:ap})}e.peerRecordEnvelope!=null&&(u=e.peerRecordEnvelope)}let f;o?.id.publicKey!=null?f=ht(o.id.publicKey):e.publicKey!=null?f=ht(e.publicKey):r.publicKey!=null&&(f=ht(r.publicKey));let l={addresses:await op(r,n.addressFilter??(async()=>!0),s),protocols:[...i.values()].sort((d,h)=>d.localeCompare(h)),metadata:a,tags:c,publicKey:f,peerRecordEnvelope:u};return r.type!=="RSA"&&delete l.publicKey,l}function Li(r,e){let t=new Map;for(let[n,o]of r)o!=null&&e.validate(n,o);for(let[n,o]of r.sort(([s],[i])=>s.localeCompare(i)))o!=null&&t.set(n,e.map?.(n,o)??o);return t}function sp(r,e){if(typeof r!="string")throw new D("Metadata key must be a string");if(!(e instanceof Uint8Array))throw new D("Metadata value must be a Uint8Array")}function ip(r,e){if(typeof r!="string")throw new D("Tag name must be a string");if(e.value!=null){if(parseInt(`${e.value}`,10)!==e.value)throw new D("Tag value must be an integer");if(e.value<0||e.value>100)throw new D("Tag value must be between 0-100")}if(e.ttl!=null){if(parseInt(`${e.ttl}`,10)!==e.ttl)throw new D("Tag ttl must be an integer");if(e.ttl<0)throw new D("Tag ttl must be between greater than 0")}}function ap(r,e){let t;return e.expiry!=null&&(t=e.expiry),e.ttl!=null&&(t=BigInt(Date.now()+Number(e.ttl))),{value:e.value??0,expiry:t}}function Pi(r,e,t){let n=r.toString().split("/")[2],o=pe.parse(n,ze),s=ti(o),i=t.get(s);if(i!=null)return i;let a=bn(s,e);return t.set(s,a),a}function ww(r,e){return r==null?{}:{prefix:Jl,filters:(r.filters??[]).map(t=>({key:n,value:o})=>t(Pi(n,o,e))),orders:(r.orders??[]).map(t=>(n,o)=>t(Pi(n.key,n.value,e),Pi(o.key,o.value,e)))}}var Ri=class{peerId;datastore;lock;addressFilter;constructor(e,t={}){this.peerId=e.peerId,this.datastore=e.datastore,this.addressFilter=t.addressFilter,this.lock=Yl({name:"peer-store",singleProcess:!0})}async has(e){return this.datastore.has(xn(e))}async delete(e){if(this.peerId.equals(e))throw new D("Cannot delete self peer");await this.datastore.delete(xn(e))}async load(e){let t=await this.datastore.get(xn(e));return bn(e,t)}async save(e,t){let{existingBuf:n,existingPeer:o}=await this.#e(e),s=await Ni(e,t,"patch",{addressFilter:this.addressFilter});return this.#t(e,s,n,o)}async patch(e,t){let{existingBuf:n,existingPeer:o}=await this.#e(e),s=await Ni(e,t,"patch",{addressFilter:this.addressFilter,existingPeer:o});return this.#t(e,s,n,o)}async merge(e,t){let{existingBuf:n,existingPeer:o}=await this.#e(e),s=await Ni(e,t,"merge",{addressFilter:this.addressFilter,existingPeer:o});return this.#t(e,s,n,o)}async*all(e){let t=new lt;for await(let{key:n,value:o}of this.datastore.query(ww(e??{},t))){let s=Pi(n,o,t);s.id.equals(this.peerId)||(yield s)}}async#e(e){try{let t=await this.datastore.get(xn(e)),n=bn(e,t);return{existingBuf:t,existingPeer:n}}catch(t){if(t.name!=="NotFoundError")throw t}return{}}async#t(e,t,n,o){let s=wn.encode(t);return n!=null&&ie(s,n)?{peer:bn(e,s),previous:o,updated:!1}:(await this.datastore.put(xn(e),s),{peer:bn(e,s),previous:o,updated:!0})}};var Ql=class{store;events;peerId;log;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-store"),this.events=e.events,this.peerId=e.peerId,this.store=new Ri(e,t)}[Symbol.toStringTag]="@libp2p/peer-store";async forEach(e,t){this.log.trace("forEach await read lock");let n=await this.store.lock.readLock();this.log.trace("forEach got read lock");try{for await(let o of this.store.all(t))e(o)}finally{this.log.trace("forEach release read lock"),n()}}async all(e){this.log.trace("all await read lock");let t=await this.store.lock.readLock();this.log.trace("all got read lock");try{return await Eo(this.store.all(e))}finally{this.log.trace("all release read lock"),t()}}async delete(e){this.log.trace("delete await write lock");let t=await this.store.lock.writeLock();this.log.trace("delete got write lock");try{await this.store.delete(e)}finally{this.log.trace("delete release write lock"),t()}}async has(e){this.log.trace("has await read lock");let t=await this.store.lock.readLock();this.log.trace("has got read lock");try{return await this.store.has(e)}finally{this.log.trace("has release read lock"),t()}}async get(e){this.log.trace("get await read lock");let t=await this.store.lock.readLock();this.log.trace("get got read lock");try{return await this.store.load(e)}finally{this.log.trace("get release read lock"),t()}}async save(e,t){this.log.trace("save await write lock");let n=await this.store.lock.writeLock();this.log.trace("save got write lock");try{let o=await this.store.save(e,t);return this.#e(e,o),o.peer}finally{this.log.trace("save release write lock"),n()}}async patch(e,t){this.log.trace("patch await write lock");let n=await this.store.lock.writeLock();this.log.trace("patch got write lock");try{let o=await this.store.patch(e,t);return this.#e(e,o),o.peer}finally{this.log.trace("patch release write lock"),n()}}async merge(e,t){this.log.trace("merge await write lock");let n=await this.store.lock.writeLock();this.log.trace("merge got write lock");try{let o=await this.store.merge(e,t);return this.#e(e,o),o.peer}finally{this.log.trace("merge release write lock"),n()}}async consumePeerRecord(e,t){let n=await gn.openAndCertify(e,Sr.DOMAIN),o=ti(n.publicKey.toCID());if(t?.equals(o)===!1)return this.log("envelope peer id was not the expected peer id - expected: %p received: %p",t,o),!1;let s=Sr.createFromProtobuf(n.payload),i;try{i=await this.get(o)}catch(a){if(a.name!=="NotFoundError")throw a}if(i?.peerRecordEnvelope!=null){let a=await gn.createFromProtobuf(i.peerRecordEnvelope),c=Sr.createFromProtobuf(a.payload);if(c.seqNumber>=s.seqNumber)return this.log("sequence number was lower or equal to existing sequence number - stored: %d received: %d",c.seqNumber,s.seqNumber),!1}return await this.patch(s.peerId,{peerRecordEnvelope:e,addresses:s.multiaddrs.map(a=>({isCertified:!0,multiaddr:a}))}),!0}#e(e,t){t.updated&&(this.peerId.equals(e)?this.events.safeDispatchEvent("self:peer:update",{detail:t}):this.events.safeDispatchEvent("peer:update",{detail:t}))}};function cp(r,e={}){return new Ql(r,e)}var Di=class r extends Error{static name="NotFoundError";static code="ERR_NOT_FOUND";name=r.name;code=r.code;constructor(e="Not Found"){super(e)}};function bw(r){return r[Symbol.asyncIterator]!=null}function xw(r){if(bw(r))return(async()=>{for await(let e of r);})();for(let e of r);}var eu=xw;function vw(r){let[e,t]=r[Symbol.asyncIterator]!=null?[r[Symbol.asyncIterator](),Symbol.asyncIterator]:[r[Symbol.iterator](),Symbol.iterator],n=[];return{peek:()=>e.next(),push:o=>{n.push(o)},next:()=>n.length>0?{done:!1,value:n.shift()}:e.next(),[t](){return this}}}var lp=vw;function Ew(r){return r[Symbol.asyncIterator]!=null}function Aw(r,e){let t=0;if(Ew(r))return async function*(){for await(let c of r)await e(c,t++)&&(yield c)}();let n=lp(r),{value:o,done:s}=n.next();if(s===!0)return function*(){}();let i=e(o,t++);if(typeof i.then=="function")return async function*(){await i&&(yield o);for await(let c of n)await e(c,t++)&&(yield c)}();let a=e;return function*(){i===!0&&(yield o);for(let c of n)a(c,t++)&&(yield c)}()}var Ir=Aw;function Sw(r){return r[Symbol.asyncIterator]!=null}function _w(r,e){return Sw(r)?async function*(){yield*(await Eo(r)).sort(e)}():function*(){yield*Eo(r).sort(e)}()}var tu=_w;function Bw(r){return r[Symbol.asyncIterator]!=null}function Iw(r,e){return Bw(r)?async function*(){let t=0;if(!(e<1)){for await(let n of r)if(yield n,t++,t===e)return}}():function*(){let t=0;if(!(e<1)){for(let n of r)if(yield n,t++,t===e)return}}()}var ru=Iw;var Mi=class{put(e,t,n){return Promise.reject(new Error(".put is not implemented"))}get(e,t){return Promise.reject(new Error(".get is not implemented"))}has(e,t){return Promise.reject(new Error(".has is not implemented"))}delete(e,t){return Promise.reject(new Error(".delete is not implemented"))}async*putMany(e,t={}){for await(let{key:n,value:o}of e)await this.put(n,o,t),yield n}async*getMany(e,t={}){for await(let n of e)yield{key:n,value:await this.get(n,t)}}async*deleteMany(e,t={}){for await(let n of e)await this.delete(n,t),yield n}batch(){let e=[],t=[];return{put(n,o){e.push({key:n,value:o})},delete(n){t.push(n)},commit:async n=>{await eu(this.putMany(e,n)),e=[],await eu(this.deleteMany(t,n)),t=[]}}}async*_all(e,t){throw new Error("._all is not implemented")}async*_allKeys(e,t){throw new Error("._allKeys is not implemented")}query(e,t){let n=this._all(e,t);if(e.prefix!=null){let o=e.prefix;n=Ir(n,s=>s.key.toString().startsWith(o))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((o,s)=>Ir(o,s),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,s)=>tu(o,s),n)),e.offset!=null){let o=0,s=e.offset;n=Ir(n,()=>o++>=s)}return e.limit!=null&&(n=ru(n,e.limit)),n}queryKeys(e,t){let n=this._allKeys(e,t);if(e.prefix!=null){let o=e.prefix;n=Ir(n,s=>s.toString().startsWith(o))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((o,s)=>Ir(o,s),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,s)=>tu(o,s),n)),e.offset!=null){let o=e.offset,s=0;n=Ir(n,()=>s++>=o)}return e.limit!=null&&(n=ru(n,e.limit)),n}};var Ui=class extends Mi{data;constructor(){super(),this.data=new Map}put(e,t){return this.data.set(e.toString(),t),e}get(e){let t=this.data.get(e.toString());if(t==null)throw new Di;return t}has(e){return this.data.has(e.toString())}delete(e){this.data.delete(e.toString())}*_all(){for(let[e,t]of this.data.entries())yield{key:new Br(e),value:t}}*_allKeys(){for(let e of this.data.keys())yield new Br(e)}};function up(r,e){let t;return function(){let n=function(){t=void 0,r()};clearTimeout(t),t=setTimeout(n,e)}}var Cw=r=>r;function nu(r,e){let t=r.getPeerId();return t!=null&&yt(t).equals(e)&&(r=r.decapsulate(oe(`/p2p/${e.toString()}`))),r}var Oi=class{log;components;listen;announce;observed;announceFilter;constructor(e,t={}){let{listen:n=[],announce:o=[]}=t;this.components=e,this.log=e.logger.forComponent("libp2p:address-manager"),this.listen=n.map(s=>s.toString()),this.announce=new Set(o.map(s=>s.toString())),this.observed=new Map,this.announceFilter=t.announceFilter??Cw,this._updatePeerStoreAddresses=up(this._updatePeerStoreAddresses.bind(this),1e3),e.events.addEventListener("transport:listening",()=>{this._updatePeerStoreAddresses()}),e.events.addEventListener("transport:close",()=>{this._updatePeerStoreAddresses()})}[Symbol.toStringTag]="@libp2p/address-manager";_updatePeerStoreAddresses(){let e=this.getAnnounceAddrs().concat(this.components.transportManager.getAddrs()).concat([...this.observed.entries()].filter(([t,n])=>n.confident).map(([t])=>oe(t))).map(t=>t.getPeerId()===this.components.peerId.toString()?t.decapsulate(`/p2p/${this.components.peerId.toString()}`):t);this.components.peerStore.patch(this.components.peerId,{multiaddrs:e}).catch(t=>{this.log.error("error updating addresses",t)})}getListenAddrs(){return Array.from(this.listen).map(e=>oe(e))}getAnnounceAddrs(){return Array.from(this.announce).map(e=>oe(e))}getObservedAddrs(){return Array.from(this.observed).map(([e])=>oe(e))}addObservedAddr(e){e=nu(e,this.components.peerId);let t=e.toString();this.observed.has(t)||this.observed.set(t,{confident:!1})}confirmObservedAddr(e){e=nu(e,this.components.peerId);let t=e.toString(),o=(this.observed.get(t)??{confident:!1}).confident;this.observed.set(t,{confident:!0}),o||this._updatePeerStoreAddresses()}removeObservedAddr(e){e=nu(e,this.components.peerId);let t=e.toString();this.observed.delete(t)}getAddresses(){let e=this.getAnnounceAddrs().map(n=>n.toString());e.length===0&&(e=this.components.transportManager.getAddrs().map(n=>n.toString())),e=e.concat(Array.from(this.observed).filter(([n,o])=>o.confident).map(([n])=>n));let t=new Set(e);return this.announceFilter(Array.from(t).map(n=>oe(n))).map(n=>n.protos().pop()?.path===!0||n.getPeerId()===this.components.peerId.toString()?n:n.encapsulate(`/p2p/${this.components.peerId.toString()}`))}};var fp;(function(r){r.NOT_STARTED_YET="The libp2p node is not started yet",r.NOT_FOUND="Not found"})(fp||(fp={}));var Fi=class extends Error{constructor(e="Missing service"){super(e),this.name="MissingServiceError"}},Vi=class extends Error{constructor(e="Unmet service dependencies"){super(e),this.name="UnmetServiceDependenciesError"}},Ao=class extends Error{constructor(e="No content routers available"){super(e),this.name="NoContentRoutersError"}},So=class extends Error{constructor(e="No peer routers available"){super(e),this.name="NoPeerRoutersError"}},Hi=class extends Error{constructor(e="Should not try to find self"){super(e),this.name="QueriedForSelfError"}},$i=class extends Error{constructor(e="Unhandled protocol error"){super(e),this.name="UnhandledProtocolError"}},Ki=class extends Error{constructor(e="Duplicate protocol handler error"){super(e),this.name="DuplicateProtocolHandlerError"}},_o=class extends Error{constructor(e="Dial denied error"){super(e),this.name="DialDeniedError"}},Cr=class extends Error{constructor(e="No valid addresses"){super(e),this.name="NoValidAddressesError"}},qi=class extends Error{constructor(e="Connection intercepted"){super(e),this.name="ConnectionInterceptedError"}},zi=class extends Error{constructor(e="Connection denied"){super(e),this.name="ConnectionDeniedError"}},kr=class extends Error{constructor(e="Stream is not multiplexed"){super(e),this.name="MuxerUnavailableError"}},Tr=class extends Error{constructor(e="Encryption failed"){super(e),this.name="EncryptionFailedError"}},Gi=class extends Error{constructor(e="Transport unavailable"){super(e),this.name="TransportUnavailableError"}};var ou=class{components={};_started=!1;constructor(e={}){this.components={};for(let[t,n]of Object.entries(e))this.components[t]=n;this.components.logger==null&&(this.components.logger=Ei())}isStarted(){return this._started}async _invokeStartableMethod(e){await Promise.all(Object.values(this.components).filter(t=>Ko(t)).map(async t=>{await t[e]?.()}))}async beforeStart(){await this._invokeStartableMethod("beforeStart")}async start(){await this._invokeStartableMethod("start"),this._started=!0}async afterStart(){await this._invokeStartableMethod("afterStart")}async beforeStop(){await this._invokeStartableMethod("beforeStop")}async stop(){await this._invokeStartableMethod("stop"),this._started=!1}async afterStop(){await this._invokeStartableMethod("afterStop")}},Tw=["metrics","connectionProtector","dns"],Lw=["components","isStarted","beforeStart","start","afterStart","beforeStop","stop","afterStop","then","_invokeStartableMethod"];function hp(r={}){let e=new ou(r);return new Proxy(e,{get(n,o,s){if(typeof o=="string"&&!Lw.includes(o)){let i=e.components[o];if(i==null&&!Tw.includes(o))throw new Fi(`${o} not set`);return i}return Reflect.get(n,o,s)},set(n,o,s){return typeof o=="string"?e.components[o]=s:Reflect.set(n,o,s),!0}})}function dp(r){let e={};for(let t of Object.values(r.components))for(let n of Nw(t))e[n]=!0;for(let t of Object.values(r.components))for(let n of Pw(t))if(e[n]!==!0)throw new Vi(`Service "${Rw(t)}" required capability "${n}" but it was not provided by any component, you may need to add additional configuration when creating your node.`)}function Nw(r){return Array.isArray(r?.[kn])?r[kn]:[]}function Pw(r){return Array.isArray(r?.[Da])?r[Da]:[]}function Rw(r){return r?.[Symbol.toStringTag]??r?.toString()??"unknown"}function pp(r={}){return{denyDialPeer:async()=>!1,denyDialMultiaddr:async e=>{let t=e.stringTuples();return t[0][0]===4||t[0][0]===41?!!fi(`${t[0][1]}`):!1},denyInboundConnection:async()=>!1,denyOutboundConnection:async()=>!1,denyInboundEncryptedConnection:async()=>!1,denyOutboundEncryptedConnection:async()=>!1,denyInboundUpgradedConnection:async()=>!1,denyOutboundUpgradedConnection:async()=>!1,filterMultiaddrForPeer:async()=>!0,...r}}var mp=()=>{let r=new Error("Delay aborted");return r.name="AbortError",r},Dw=new WeakMap;function Mw({clearTimeout:r,setTimeout:e}={}){return(t,{value:n,signal:o}={})=>{if(o?.aborted)return Promise.reject(mp());let s,i,a,c=r??clearTimeout,u=()=>{c(s),a(mp())},f=()=>{o&&o.removeEventListener("abort",u)},l=new Promise((d,h)=>{i=()=>{f(),d(n)},a=h,s=(e??setTimeout)(i,t)});return o&&o.addEventListener("abort",u,{once:!0}),Dw.set(l,()=>{c(s),s=null,i()}),l}}var Uw=Mw(),gp=Uw;var Wi=class extends Error{remainingPoints;msBeforeNext;consumedPoints;isFirstInDuration;constructor(e="Rate limit exceeded",t){super(e),this.name="RateLimitError",this.remainingPoints=t.remainingPoints,this.msBeforeNext=t.msBeforeNext,this.consumedPoints=t.consumedPoints,this.isFirstInDuration=t.isFirstInDuration}};var ji=class{memoryStorage;points;duration;blockDuration;execEvenly;execEvenlyMinDelayMs;keyPrefix;constructor(e={}){this.points=e.points??4,this.duration=e.duration??1,this.blockDuration=e.blockDuration??0,this.execEvenly=e.execEvenly??!1,this.execEvenlyMinDelayMs=e.execEvenlyMinDelayMs??this.duration*1e3/this.points,this.keyPrefix=e.keyPrefix??"rlflx",this.memoryStorage=new su}async consume(e,t=1,n={}){let o=this.getKey(e),s=this._getKeySecDuration(n),i=this.memoryStorage.incrby(o,t,s);if(i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i.consumedPoints>this.points)throw this.blockDuration>0&&i.consumedPoints<=this.points+t&&(i=this.memoryStorage.set(o,i.consumedPoints,this.blockDuration)),new Wi("Rate limit exceeded",i);if(this.execEvenly&&i.msBeforeNext>0&&!i.isFirstInDuration){let a=Math.ceil(i.msBeforeNext/(i.remainingPoints+2));a<this.execEvenlyMinDelayMs&&(a=i.consumedPoints*this.execEvenlyMinDelayMs),await gp(a)}return i}penalty(e,t=1,n={}){let o=this.getKey(e),s=this._getKeySecDuration(n),i=this.memoryStorage.incrby(o,t,s);return i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i}reward(e,t=1,n={}){let o=this.getKey(e),s=this._getKeySecDuration(n),i=this.memoryStorage.incrby(o,-t,s);return i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i}block(e,t){let n=t*1e3,o=this.points+1;return this.memoryStorage.set(this.getKey(e),o,t),{remainingPoints:0,msBeforeNext:n===0?-1:n,consumedPoints:o,isFirstInDuration:!1}}set(e,t,n=0){let o=(n>=0?n:this.duration)*1e3;return this.memoryStorage.set(this.getKey(e),t,n),{remainingPoints:0,msBeforeNext:o===0?-1:o,consumedPoints:t,isFirstInDuration:!1}}get(e){let t=this.memoryStorage.get(this.getKey(e));return t!=null&&(t.remainingPoints=Math.max(this.points-t.consumedPoints,0)),t}delete(e){this.memoryStorage.delete(this.getKey(e))}_getKeySecDuration(e){return e?.customDuration!=null&&e.customDuration>=0?e.customDuration:this.duration}getKey(e){return this.keyPrefix.length>0?`${this.keyPrefix}:${e}`:e}parseKey(e){return e.substring(this.keyPrefix.length)}},su=class{storage;constructor(){this.storage=new Map}incrby(e,t,n){let o=this.storage.get(e);if(o!=null){let s=o.expiresAt!=null?o.expiresAt.getTime()-new Date().getTime():-1;return o.expiresAt==null||s>0?(o.value+=t,{remainingPoints:0,msBeforeNext:s,consumedPoints:o.value,isFirstInDuration:!1}):this.set(e,t,n)}return this.set(e,t,n)}set(e,t,n){let o=n*1e3,s=this.storage.get(e);s!=null&&clearTimeout(s.timeoutId);let i={value:t,expiresAt:o>0?new Date(Date.now()+o):void 0};return this.storage.set(e,i),o>0&&(i.timeoutId=setTimeout(()=>{this.storage.delete(e)},o),i.timeoutId.unref!=null&&i.timeoutId.unref()),{remainingPoints:0,msBeforeNext:o===0?-1:o,consumedPoints:i.value,isFirstInDuration:!0}}get(e){let t=this.storage.get(e);if(t!=null)return{remainingPoints:0,msBeforeNext:t.expiresAt!=null?t.expiresAt.getTime()-new Date().getTime():-1,consumedPoints:t.value,isFirstInDuration:!1}}delete(e){let t=this.storage.get(e);return t!=null?(t.timeoutId!=null&&clearTimeout(t.timeoutId),this.storage.delete(e),!0):!1}};function Zi(r){if(Ro(r))return{peerId:r,multiaddrs:[]};Array.isArray(r)||(r=[r]);let e;if(r.length>0){let t=r[0].getPeerId();e=t==null?void 0:yt(t),r.forEach(n=>{if(!tr(n))throw new Vt("Invalid multiaddr");let o=n.getPeerId();if(o==null){if(e!=null)throw new D("Multiaddrs must all have the same peer id or have no peer id")}else{let s=yt(o);if(e?.equals(s)!==!0)throw new D("Multiaddrs must all have the same peer id or have no peer id")}})}return{peerId:e,multiaddrs:r}}var Ow=["/ipfs/id/1.0.0","/ipfs/id/push/1.0.0","/libp2p/autonat/1.0.0","/libp2p/dcutr"];async function yp(r,e){let t=r?.streams?.map(o=>o.protocol)??[],n=e?.closableProtocols??Ow;if(!(t.filter(o=>o!=null&&!n.includes(o)).length>0))try{await r?.close(e)}catch(o){r?.abort(o)}}var wp="last-dial-failure",bp="last-dial-success";var Xi=100,Yi=50;var xp={maxConnections:Xi,allow:[]},Ji=class{maxConnections;connectionManager;peerStore;allow;events;log;constructor(e,t={}){this.maxConnections=t.maxConnections??xp.maxConnections,this.allow=t.allow??xp.allow,this.connectionManager=e.connectionManager,this.peerStore=e.peerStore,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager:connection-pruner"),this.maybePruneConnections=this.maybePruneConnections.bind(this)}start(){this.events.addEventListener("connection:open",this.maybePruneConnections)}stop(){this.events.removeEventListener("connection:open",this.maybePruneConnections)}maybePruneConnections(){this._maybePruneConnections().catch(e=>{this.log.error("error maybe pruning connections %e",e)})}async _maybePruneConnections(){let e=this.connectionManager.getConnections(),t=e.length;if(this.log("checking max connections limit %d/%d",t,this.maxConnections),t<=this.maxConnections)return;let n=new lt;for(let a of e){let c=a.remotePeer;if(!n.has(c)){n.set(c,0);try{let u=await this.peerStore.get(c);n.set(c,[...u.tags.values()].reduce((f,l)=>f+l.value,0))}catch(u){u.name!=="NotFoundError"&&this.log.error("error loading peer tags",u)}}}let o=this.sortConnections(e,n),s=Math.max(t-this.maxConnections,0),i=[];for(let a of o)if(this.log("too many connections open - closing a connection to %p",a.remotePeer),this.allow.some(u=>a.remoteAddr.toString().startsWith(u.toString()))||i.push(a),i.length===s)break;await Promise.all(i.map(async a=>{await yp(a,{signal:AbortSignal.timeout(1e3)})})),this.events.safeDispatchEvent("connection:prune",{detail:i})}sortConnections(e,t){return e.sort((n,o)=>{let s=n.timeline.open,i=o.timeline.open;return s<i?1:s>i?-1:0}).sort((n,o)=>n.direction==="outbound"&&o.direction==="inbound"?1:n.direction==="inbound"&&o.direction==="outbound"?-1:0).sort((n,o)=>n.streams.length>o.streams.length?1:n.streams.length<o.streams.length?-1:0).sort((n,o)=>{let s=t.get(n.remotePeer)??0,i=t.get(o.remotePeer)??0;return s>i?1:s<i?-1:0})}};function le(){let r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t}),r}var Qi=class{buffer;mask;top;btm;next;constructor(e){if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}},vn=class{size;hwm;head;tail;constructor(e={}){this.hwm=e.splitLimit??16,this.head=new Qi(this.hwm),this.tail=this.head,this.size=0}calculateSize(e){return e?.byteLength!=null?e.byteLength:1}push(e){if(e?.value!=null&&(this.size+=this.calculateSize(e.value)),!this.head.push(e)){let t=this.head;this.head=t.next=new Qi(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next!=null){let t=this.tail.next;this.tail.next=null,this.tail=t,e=this.tail.shift()}return e?.value!=null&&(this.size-=this.calculateSize(e.value)),e}isEmpty(){return this.head.isEmpty()}};var iu=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.code=t??"ABORT_ERR"}};function ea(r={}){return Fw(t=>{let n=t.shift();if(n==null)return{done:!0};if(n.error!=null)throw n.error;return{done:n.done===!0,value:n.value}},r)}function Fw(r,e){e=e??{};let t=e.onEnd,n=new vn,o,s,i,a=le(),c=async()=>{try{return n.isEmpty()?i?{done:!0}:await new Promise((g,y)=>{s=b=>{s=null,n.push(b);try{g(r(n))}catch(w){y(w)}return o}}):r(n)}finally{n.isEmpty()&&queueMicrotask(()=>{a.resolve(),a=le()})}},u=g=>s!=null?s(g):(n.push(g),o),f=g=>(n=new vn,s!=null?s({error:g}):(n.push({error:g}),o)),l=g=>{if(i)return o;if(e?.objectMode!==!0&&g?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return u({done:!1,value:g})},d=g=>i?o:(i=!0,g!=null?f(g):u({done:!0})),h=()=>(n=new vn,d(),{done:!0}),p=g=>(d(g),{done:!0});if(o={[Symbol.asyncIterator](){return this},next:c,return:h,throw:p,push:l,end:d,get readableLength(){return n.size},onEmpty:async g=>{let y=g?.signal;if(y?.throwIfAborted(),n.isEmpty())return;let b,w;y!=null&&(b=new Promise((x,A)=>{w=()=>{A(new iu)},y.addEventListener("abort",w)}));try{await Promise.race([a.promise,b])}finally{w!=null&&y!=null&&y?.removeEventListener("abort",w)}}},t==null)return o;let m=o;return o={[Symbol.asyncIterator](){return this},next(){return m.next()},throw(g){return m.throw(g),t!=null&&(t(g),t=void 0),{done:!0}},return(){return m.return(),t!=null&&(t(),t=void 0),{done:!0}},push:l,end(g){return m.end(g),t!=null&&(t(g),t=void 0),o},get readableLength(){return m.readableLength},onEmpty:g=>m.onEmpty(g)},o}var au=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=t??"ABORT_ERR"}};async function En(r,e,t,n){let o=new au(n?.errorMessage,n?.errorCode);return t?.aborted===!0?Promise.reject(o):new Promise((s,i)=>{function a(){t?.removeEventListener("abort",f),r.removeEventListener(e,c),n?.errorEvent!=null&&r.removeEventListener(n.errorEvent,u)}let c=l=>{try{if(n?.filter?.(l)===!1)return}catch(d){a(),i(d);return}a(),s(l)},u=l=>{a(),i(l.detail)},f=()=>{a(),i(o)};t?.addEventListener("abort",f),r.addEventListener(e,c),n?.errorEvent!=null&&r.addEventListener(n.errorEvent,u)})}var ta=class extends Error{type;code;constructor(e,t,n){super(e??"The operation was aborted"),this.type="aborted",this.name=n??"AbortError",this.code=t??"ABORT_ERR"}};async function sr(r,e,t){if(e==null)return r;if(e.aborted)return Promise.reject(new ta(t?.errorMessage,t?.errorCode,t?.errorName));let n,o=new ta(t?.errorMessage,t?.errorCode,t?.errorName);try{return await Promise.race([r,new Promise((s,i)=>{n=()=>{i(o)},e.addEventListener("abort",n)})])}finally{n!=null&&e.removeEventListener("abort",n)}}var ra=class{deferred;signal;constructor(e){this.signal=e,this.deferred=le(),this.onAbort=this.onAbort.bind(this),this.signal?.addEventListener("abort",this.onAbort)}onAbort(){this.deferred.reject(this.signal?.reason??new et)}cleanup(){this.signal?.removeEventListener("abort",this.onAbort)}};function Vw(){return`${parseInt(String(Math.random()*1e9),10).toString()}${Date.now()}`}var na=class{id;fn;options;recipients;status;timeline;controller;constructor(e,t){this.id=Vw(),this.status="queued",this.fn=e,this.options=t,this.recipients=[],this.timeline={created:Date.now()},this.controller=new AbortController,ee(1/0,this.controller.signal),this.onAbort=this.onAbort.bind(this)}abort(e){this.controller.abort(e)}onAbort(){this.recipients.reduce((t,n)=>t&&n.signal?.aborted===!0,!0)&&(this.controller.abort(new et),this.cleanup())}async join(e={}){let t=new ra(e.signal);return this.recipients.push(t),e.signal?.addEventListener("abort",this.onAbort),t.deferred.promise}async run(){this.status="running",this.timeline.started=Date.now();try{this.controller.signal.throwIfAborted();let e=await sr(this.fn({...this.options??{},signal:this.controller.signal}),this.controller.signal);this.recipients.forEach(t=>{t.deferred.resolve(e)}),this.status="complete"}catch(e){this.recipients.forEach(t=>{t.deferred.reject(e)}),this.status="errored"}finally{this.timeline.finished=Date.now(),this.cleanup()}}cleanup(){this.recipients.forEach(e=>{e.cleanup(),e.signal?.removeEventListener("abort",this.onAbort)})}};var An=class extends vt{concurrency;queue;pending;sort;constructor(e={}){super(),this.concurrency=e.concurrency??Number.POSITIVE_INFINITY,this.pending=0,e.metricName!=null&&e.metrics?.registerMetricGroup(e.metricName,{calculate:()=>({size:this.queue.length,running:this.pending,queued:this.queue.length-this.pending})}),this.sort=e.sort,this.queue=[]}tryToStartAnother(){if(this.size===0)return queueMicrotask(()=>{this.safeDispatchEvent("empty")}),this.running===0&&queueMicrotask(()=>{this.safeDispatchEvent("idle")}),!1;if(this.pending<this.concurrency){let e;for(let t of this.queue)if(t.status==="queued"){e=t;break}return e==null?!1:(this.safeDispatchEvent("active"),this.pending++,e.run().finally(()=>{for(let t=0;t<this.queue.length;t++)if(this.queue[t]===e){this.queue.splice(t,1);break}this.pending--,this.tryToStartAnother(),this.safeDispatchEvent("next")}),!0)}return!1}enqueue(e){this.queue.push(e),this.sort!=null&&this.queue.sort(this.sort)}async add(e,t){t?.signal?.throwIfAborted();let n=new na(e,t);return this.enqueue(n),this.safeDispatchEvent("add"),this.tryToStartAnother(),n.join(t).then(o=>(this.safeDispatchEvent("completed",{detail:o}),this.safeDispatchEvent("success",{detail:{job:n,result:o}}),o)).catch(o=>{if(n.status==="queued"){for(let s=0;s<this.queue.length;s++)if(this.queue[s]===n){this.queue.splice(s,1);break}}throw this.safeDispatchEvent("error",{detail:o}),this.safeDispatchEvent("failure",{detail:{job:n,error:o}}),o})}clear(){this.queue.splice(0,this.queue.length)}abort(){this.queue.forEach(e=>{e.abort(new et)}),this.clear()}async onEmpty(e){this.size!==0&&await En(this,"empty",e?.signal)}async onSizeLessThan(e,t){this.size<e||await En(this,"next",t?.signal,{filter:()=>this.size<e})}async onIdle(e){this.pending===0&&this.size===0||await En(this,"idle",e?.signal)}get size(){return this.queue.length}get queued(){return this.queue.length-this.pending}get running(){return this.pending}async*toGenerator(e){e?.signal?.throwIfAborted();let t=ea({objectMode:!0}),n=c=>{c!=null?this.abort():this.clear(),t.end(c)},o=c=>{c.detail!=null&&t.push(c.detail)},s=c=>{n(c.detail)},i=()=>{n()},a=()=>{n(new et("Queue aborted"))};this.addEventListener("completed",o),this.addEventListener("error",s),this.addEventListener("idle",i),e?.signal?.addEventListener("abort",a);try{yield*t}finally{this.removeEventListener("completed",o),this.removeEventListener("error",s),this.removeEventListener("idle",i),e?.signal?.removeEventListener("abort",a),n()}}};var oa=class extends An{constructor(e={}){super({...e,sort:(t,n)=>t.options.priority>n.options.priority?-1:t.options.priority<n.options.priority?1:0})}};function Ot(r){let e=new globalThis.AbortController;function t(){e.abort();for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}for(let s of r){if(s?.aborted===!0){t();break}s?.addEventListener!=null&&s.addEventListener("abort",t)}function n(){for(let s of r)s?.removeEventListener!=null&&s.removeEventListener("abort",t)}let o=e.signal;return o.clear=n,o}async function vp(r,e){let t=!1;for(let o of hn.keys())if(t=r.protoNames().includes(o),t)break;if(!t)return[r];let n=await r.resolve(e);return e.log("resolved %s to",r,n.map(o=>o.toString())),n}var Bo={addressSorter:dn,maxParallelDials:Yi,maxDialQueueLength:500,maxPeerAddrsToDial:25,dialTimeout:5e3,resolvers:{dnsaddr:br}},sa=class{queue;components;addressSorter;maxPeerAddrsToDial;maxDialQueueLength;dialTimeout;shutDownController;connections;log;constructor(e,t={}){this.addressSorter=t.addressSorter??Bo.addressSorter,this.maxPeerAddrsToDial=t.maxPeerAddrsToDial??Bo.maxPeerAddrsToDial,this.maxDialQueueLength=t.maxDialQueueLength??Bo.maxDialQueueLength,this.dialTimeout=t.dialTimeout??Bo.dialTimeout,this.connections=t.connections??new lt,this.log=e.logger.forComponent("libp2p:connection-manager:dial-queue"),this.components=e,this.shutDownController=new AbortController,ee(1/0,this.shutDownController.signal);for(let[n,o]of Object.entries(t.resolvers??{}))hn.set(n,o);this.queue=new oa({concurrency:t.maxParallelDials??Bo.maxParallelDials,metricName:"libp2p_dial_queue",metrics:e.metrics}),this.queue.addEventListener("error",n=>{n.detail.name!==et.name&&this.log.error("error in dial queue - %e",n.detail)})}start(){this.shutDownController=new AbortController,ee(1/0,this.shutDownController.signal)}stop(){this.shutDownController.abort(),this.queue.abort()}async dial(e,t={}){let{peerId:n,multiaddrs:o}=Zi(e),s=Array.from(this.connections.values()).flat().find(a=>t.force===!0?!1:a.remotePeer.equals(n)?!0:o.find(c=>c.equals(a.remoteAddr)));if(s?.status==="open")return this.log("already connected to %a",s.remoteAddr),t.onProgress?.(new fe("dial-queue:already-connected")),s;let i=this.queue.queue.find(a=>{if(n?.equals(a.options.peerId)===!0)return!0;let c=a.options.multiaddrs;if(c==null)return!1;for(let u of o)if(c.has(u.toString()))return!0;return!1});if(i!=null){this.log("joining existing dial target for %p",n);for(let a of o)i.options.multiaddrs.add(a.toString());return t.onProgress?.(new fe("dial-queue:already-in-dial-queue")),i.join(t)}if(this.queue.size>=this.maxDialQueueLength)throw new Ur("Dial queue is full");return this.log("creating dial target for %p",n,o.map(a=>a.toString())),t.onProgress?.(new fe("dial-queue:add-to-dial-queue")),this.queue.add(async a=>{a?.onProgress?.(new fe("dial-queue:start-dial"));let c=this.createDialAbortController(a?.signal),u;try{u=await this.calculateMultiaddrs(n,a?.multiaddrs,{...a,signal:c}),a?.onProgress?.(new fe("dial-queue:calculated-addresses",u)),u.map(({multiaddr:f})=>f.toString()).forEach(f=>{a?.multiaddrs.add(f)})}catch(f){throw c.clear(),f}try{let f=0,l=[];for(let d of u){if(f===this.maxPeerAddrsToDial)throw this.log("dialed maxPeerAddrsToDial (%d) addresses for %p, not trying any others",f,n),new Ur("Peer had more than maxPeerAddrsToDial");f++;try{let h=await this.components.transportManager.dial(d.multiaddr,{...a,signal:c});this.log("dial to %a succeeded",d.multiaddr);try{await this.components.peerStore.merge(h.remotePeer,{multiaddrs:[h.remoteAddr],metadata:{[bp]:P(Date.now().toString())}})}catch(p){this.log.error("could not update last dial failure key for %p",n,p)}return h}catch(h){if(this.log.error("dial failed to %a",d.multiaddr,h),n!=null)try{await this.components.peerStore.merge(n,{metadata:{[wp]:P(Date.now().toString())}})}catch(p){this.log.error("could not update last dial failure key for %p",n,p)}if(c.aborted)throw new Vo(h.message);l.push(h)}}throw l.length===1?l[0]:new AggregateError(l,"All multiaddr dials failed")}finally{c.clear()}},{peerId:n,priority:t.priority??fu,multiaddrs:new Set(o.map(a=>a.toString())),signal:t.signal,onProgress:t.onProgress})}createDialAbortController(e){let t=Ot([AbortSignal.timeout(this.dialTimeout),this.shutDownController.signal,e]);return ee(1/0,t),t}async calculateMultiaddrs(e,t=new Set,n={}){let o=[...t].map(l=>({multiaddr:oe(l),isCertified:!1}));if(e!=null){if(this.components.peerId.equals(e))throw new Ur("Tried to dial self");if(await this.components.connectionGater.denyDialPeer?.(e)===!0)throw new _o("The dial request is blocked by gater.allowDialPeer");if(o.length===0){this.log("loading multiaddrs for %p",e);try{let l=await this.components.peerStore.get(e);o.push(...l.addresses),this.log("loaded multiaddrs for %p",e,o.map(({multiaddr:d})=>d.toString()))}catch(l){if(l.name!=="NotFoundError")throw l}}if(o.length===0){this.log("looking up multiaddrs for %p in the peer routing",e);try{let l=await this.components.peerRouting.findPeer(e);this.log("found multiaddrs for %p in the peer routing",e,o.map(({multiaddr:d})=>d.toString())),o.push(...l.multiaddrs.map(d=>({multiaddr:d,isCertified:!1})))}catch(l){l.name!=="NoPeerRoutersError"&&this.log.error("looking up multiaddrs for %p in the peer routing failed",e,l)}}}let s=(await Promise.all(o.map(async l=>{let d=await vp(l.multiaddr,{dns:this.components.dns,...n,log:this.log});return d.length===1&&d[0].equals(l.multiaddr)?l:d.map(h=>({multiaddr:h,isCertified:!1}))}))).flat();if(e!=null){let l=`/p2p/${e.toString()}`;s=s.map(d=>d.multiaddr.protos().pop()?.path===!0?d:d.multiaddr.getPeerId()==null?{multiaddr:d.multiaddr.encapsulate(l),isCertified:d.isCertified}:d)}let i=s.filter(l=>{if(this.components.transportManager.dialTransportForMultiaddr(l.multiaddr)==null)return!1;let d=l.multiaddr.getPeerId();return e!=null&&d!=null?e.equals(d):!0}),a=new Map;for(let l of i){let d=l.multiaddr.toString(),h=a.get(d);if(h!=null){h.isCertified=h.isCertified||l.isCertified||!1;continue}a.set(d,l)}let c=[...a.values()];if(c.length===0)throw new Cr("The dial request has no valid addresses");let u=[];for(let l of c)this.components.connectionGater.denyDialMultiaddr!=null&&await this.components.connectionGater.denyDialMultiaddr(l.multiaddr)||u.push(l);let f=u.sort(this.addressSorter);if(f.length===0)throw new _o("The connection gater denied all addresses in the dial request");return this.log.trace("addresses for %p before filtering",e??"unknown peer",s.map(({multiaddr:l})=>l.toString())),this.log.trace("addresses for %p after filtering",e??"unknown peer",f.map(({multiaddr:l})=>l.toString())),f}async isDialable(e,t={}){Array.isArray(e)||(e=[e]);try{let n=await this.calculateMultiaddrs(void 0,new Set(e.map(o=>o.toString())),t);return t.runOnLimitedConnection===!1?n.find(o=>!uo.matches(o.multiaddr))!=null:!0}catch(n){this.log.trace("error calculating if multiaddr(s) were dialable",n)}return!1}};var ia=class extends An{has(e){return this.find(e)!=null}find(e){return this.queue.find(t=>e.equals(t.options.peerId))}};var Cp=ar(Bp(),1);var $w=Object.prototype.toString,Kw=r=>$w.call(r)==="[object Error]",qw=new Set(["network error","Failed to fetch","NetworkError when attempting to fetch resource.","The Internet connection appears to be offline.","Load failed","Network request failed","fetch failed","terminated"]);function hu(r){return r&&Kw(r)&&r.name==="TypeError"&&typeof r.message=="string"?r.message==="Load failed"?r.stack===void 0:qw.has(r.message):!1}var du=class extends Error{constructor(e){super(),e instanceof Error?(this.originalError=e,{message:e}=e):(this.originalError=new Error(e),this.originalError.stack=this.stack),this.name="AbortError",this.message=e}},Ip=(r,e,t)=>{let n=t.retries-(e-1);return r.attemptNumber=e,r.retriesLeft=n,r};async function pu(r,e){return new Promise((t,n)=>{e={onFailedAttempt(){},retries:10,shouldRetry:()=>!0,...e};let o=Cp.default.operation(e),s=()=>{o.stop(),n(e.signal?.reason)};e.signal&&!e.signal.aborted&&e.signal.addEventListener("abort",s,{once:!0});let i=()=>{e.signal?.removeEventListener("abort",s),o.stop()};o.attempt(async a=>{try{let c=await r(a);i(),t(c)}catch(c){try{if(!(c instanceof Error))throw new TypeError(`Non-error was thrown: "${c}". You should only throw errors.`);if(c instanceof du)throw c.originalError;if(c instanceof TypeError&&!hu(c))throw c;if(Ip(c,a,e),await e.shouldRetry(c)||(o.stop(),n(c)),await e.onFailedAttempt(c),!o.retry(c))throw o.mainError()}catch(u){Ip(u,a,e),i(),n(u)}}})})}var aa=class{log;queue;started;peerStore;retries;retryInterval;backoffFactor;connectionManager;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:reconnect-queue"),this.peerStore=e.peerStore,this.connectionManager=e.connectionManager,this.queue=new ia({concurrency:t.maxParallelReconnects??5,metricName:"libp2p_reconnect_queue",metrics:e.metrics}),this.started=!1,this.retries=t.retries??5,this.backoffFactor=t.backoffFactor,this.retryInterval=t.retryInterval,e.events.addEventListener("peer:disconnect",n=>{this.maybeReconnect(n.detail).catch(o=>{this.log.error("failed to maybe reconnect to %p",n.detail,o)})})}async maybeReconnect(e){!this.started||!(await this.peerStore.get(e)).tags.has(Ra)||this.queue.has(e)||this.queue.add(async n=>{await pu(async o=>{if(this.started)try{await this.connectionManager.openConnection(e,{signal:n?.signal})}catch(s){throw this.log("reconnecting to %p attempt %d of %d failed",e,o,this.retries,s),s}},{signal:n?.signal,retries:this.retries,factor:this.backoffFactor,minTimeout:this.retryInterval})},{peerId:e}).catch(n=>{this.log.error("failed to reconnect to %p",e,n)})}start(){this.started=!0}async afterStart(){Promise.resolve().then(async()=>{let e=await this.peerStore.all({filters:[t=>t.tags.has(Ra)]});await Promise.all(e.map(async t=>{await this.connectionManager.openConnection(t.id).catch(n=>{this.log.error(n)})}))}).catch(e=>{this.log.error(e)})}stop(){this.started=!1,this.queue.abort()}};var fu=50,mu={maxConnections:Xi,inboundConnectionThreshold:5,maxIncomingPendingConnections:10},ca=class{started;connections;allow;deny;maxIncomingPendingConnections;incomingPendingConnections;maxConnections;dialQueue;reconnectQueue;connectionPruner;inboundConnectionRateLimiter;peerStore;metrics;events;log;peerId;constructor(e,t={}){if(this.maxConnections=t.maxConnections??mu.maxConnections,this.maxConnections<1)throw new D("Connection Manager maxConnections must be greater than 0");this.connections=new lt,this.started=!1,this.peerId=e.peerId,this.peerStore=e.peerStore,this.metrics=e.metrics,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager"),this.onConnect=this.onConnect.bind(this),this.onDisconnect=this.onDisconnect.bind(this),this.allow=(t.allow??[]).map(n=>oe(n)),this.deny=(t.deny??[]).map(n=>oe(n)),this.incomingPendingConnections=0,this.maxIncomingPendingConnections=t.maxIncomingPendingConnections??mu.maxIncomingPendingConnections,this.inboundConnectionRateLimiter=new ji({points:t.inboundConnectionThreshold??mu.inboundConnectionThreshold,duration:1}),this.connectionPruner=new Ji({connectionManager:this,peerStore:e.peerStore,events:e.events,logger:e.logger},{maxConnections:this.maxConnections,allow:this.allow}),this.dialQueue=new sa(e,{addressSorter:t.addressSorter??dn,maxParallelDials:t.maxParallelDials??Yi,maxDialQueueLength:t.maxDialQueueLength??500,maxPeerAddrsToDial:t.maxPeerAddrsToDial??25,dialTimeout:t.dialTimeout??5e3,resolvers:t.resolvers??{dnsaddr:br},connections:this.connections}),this.reconnectQueue=new aa({events:e.events,peerStore:e.peerStore,logger:e.logger,connectionManager:this},{retries:t.reconnectRetries,retryInterval:t.reconnectRetryInterval,backoffFactor:t.reconnectBackoffFactor,maxParallelReconnects:t.maxParallelReconnects})}[Symbol.toStringTag]="@libp2p/connection-manager";async start(){this.metrics?.registerMetricGroup("libp2p_connection_manager_connections",{calculate:()=>{let e={inbound:0,"inbound pending":this.incomingPendingConnections,outbound:0};for(let t of this.connections.values())for(let n of t)e[n.direction]++;return e}}),this.metrics?.registerMetricGroup("libp2p_protocol_streams_total",{label:"protocol",calculate:()=>{let e={};for(let t of this.connections.values())for(let n of t)for(let o of n.streams){let s=`${o.direction} ${o.protocol??"unnegotiated"}`;e[s]=(e[s]??0)+1}return e}}),this.metrics?.registerMetricGroup("libp2p_connection_manager_protocol_streams_per_connection_90th_percentile",{label:"protocol",calculate:()=>{let e={};for(let n of this.connections.values())for(let o of n){let s={};for(let i of o.streams){let a=`${i.direction} ${i.protocol??"unnegotiated"}`;s[a]=(s[a]??0)+1}for(let[i,a]of Object.entries(s))e[i]=e[i]??[],e[i].push(a)}let t={};for(let[n,o]of Object.entries(e)){o=o.sort((i,a)=>i-a);let s=Math.floor(o.length*.9);t[n]=o[s]}return t}}),this.events.addEventListener("connection:open",this.onConnect),this.events.addEventListener("connection:close",this.onDisconnect),await Mu(this.dialQueue,this.reconnectQueue,this.connectionPruner),this.started=!0,this.log("started")}async stop(){this.events.removeEventListener("connection:open",this.onConnect),this.events.removeEventListener("connection:close",this.onDisconnect),await Uu(this.reconnectQueue,this.dialQueue,this.connectionPruner);let e=[];for(let t of this.connections.values())for(let n of t)e.push((async()=>{try{await n.close()}catch(o){this.log.error(o)}})());this.log("closing %d connections",e.length),await Promise.all(e),this.connections.clear(),this.log("stopped")}onConnect(e){this._onConnect(e).catch(t=>{this.log.error(t)})}async _onConnect(e){let{detail:t}=e;if(!this.started){await t.close();return}if(t.status!=="open")return;let n=t.remotePeer,o=!this.connections.has(n),s=this.connections.get(n)??[];s.push(t),this.connections.set(n,s),n.publicKey!=null&&n.type==="RSA"&&await this.peerStore.patch(n,{publicKey:n.publicKey}),o&&this.events.safeDispatchEvent("peer:connect",{detail:t.remotePeer})}onDisconnect(e){let{detail:t}=e,n=t.remotePeer,s=(this.connections.get(n)??[]).filter(i=>i.id!==t.id);this.connections.set(n,s),s.length===0&&(this.log("onDisconnect remove all connections for peer %p",n),this.connections.delete(n),this.events.safeDispatchEvent("peer:disconnect",{detail:t.remotePeer}))}getConnections(e){if(e!=null)return this.connections.get(e)??[];let t=[];for(let n of this.connections.values())t=t.concat(n);return t}getConnectionsMap(){return this.connections}async openConnection(e,t={}){if(!this.started)throw new xt("Not started");t.signal?.throwIfAborted();let{peerId:n}=Zi(e);if(this.peerId.equals(n))throw new Mr("Can not dial self");if(n!=null&&t.force!==!0){this.log("dial %p",n);let a=this.getConnections(n).find(c=>c.limits==null);if(a!=null)return this.log("had an existing non-limited connection to %p",n),t.onProgress?.(new fe("dial-queue:already-connected")),a}let o=await this.dialQueue.dial(e,{...t,priority:t.priority??fu});if(o.status!=="open")throw new Dr("Remote closed connection during opening");let s=this.connections.get(o.remotePeer);s==null&&(s=[],this.log("openConnection add connections for peer %p",n),this.connections.set(o.remotePeer,s));let i=!1;for(let a of s)if(a.id===o.id&&(i=!0),t.force!==!0&&a.id!==o.id&&a.remoteAddr.equals(o.remoteAddr))return o.abort(new Vt("Duplicate multiaddr connection")),a;return i||s.push(o),this.log("openConnection updated connections for peer %p %s",n,s.map(a=>`${a.id}/${a.direction}/${a.status}`)),o}async closeConnections(e,t={}){let n=this.connections.get(e)??[];await Promise.all(n.map(async o=>{try{await o.close(t)}catch(s){o.abort(s)}}))}async acceptIncomingConnection(e){if(this.deny.some(o=>e.remoteAddr.toString().startsWith(o.toString())))return this.log("connection from %a refused - connection remote address was in deny list",e.remoteAddr),!1;if(this.allow.some(o=>e.remoteAddr.toString().startsWith(o.toString())))return this.incomingPendingConnections++,!0;if(this.incomingPendingConnections===this.maxIncomingPendingConnections)return this.log("connection from %a refused - incomingPendingConnections exceeded by host",e.remoteAddr),!1;if(e.remoteAddr.isThinWaistAddress()){let o=e.remoteAddr.nodeAddress().address;try{await this.inboundConnectionRateLimiter.consume(o,1)}catch{return this.log("connection from %a refused - inboundConnectionThreshold exceeded by host %s",e.remoteAddr,o),!1}}return this.getConnections().length<this.maxConnections?(this.incomingPendingConnections++,!0):(this.log("connection from %a refused - maxConnections exceeded",e.remoteAddr),!1)}afterUpgradeInbound(){this.incomingPendingConnections--}getDialQueue(){let e={queued:"queued",running:"active",errored:"error",complete:"success"};return this.dialQueue.queue.queue.map(t=>({id:t.id,status:e[t.status],peerId:t.options.peerId,multiaddrs:[...t.options.multiaddrs].map(n=>oe(n))}))}async isDialable(e,t={}){return this.dialQueue.isDialable(e,t)}};var Sn=class{movingAverage;variance;deviation;forecast;timespan;previousTime;constructor(e){this.timespan=e,this.movingAverage=0,this.variance=0,this.deviation=0,this.forecast=0}alpha(e,t){return 1-Math.exp(-(e-t)/this.timespan)}push(e,t=Date.now()){if(this.previousTime!=null){let n=this.alpha(t,this.previousTime),o=e-this.movingAverage,s=n*o;this.movingAverage=n*e+(1-n)*this.movingAverage,this.variance=(1-n)*(this.variance+o*s),this.deviation=Math.sqrt(this.variance),this.forecast=this.movingAverage+n*o}else this.movingAverage=e;this.previousTime=t}};var Ww=1.2,jw=2,Zw=2e3,la=class{success;failure;next;metric;timeoutMultiplier;failureMultiplier;minTimeout;constructor(e={}){this.success=new Sn(e.interval??5e3),this.failure=new Sn(e.interval??5e3),this.next=new Sn(e.interval??5e3),this.failureMultiplier=e.failureMultiplier??jw,this.timeoutMultiplier=e.timeoutMultiplier??Ww,this.minTimeout=e.minTimeout??Zw,e.metricName!=null&&(this.metric=e.metrics?.registerMetricGroup(e.metricName))}getTimeoutSignal(e={}){let t=Math.max(Math.round(this.next.movingAverage*(e.timeoutFactor??this.timeoutMultiplier)),this.minTimeout),n=AbortSignal.timeout(t),o=Ot([e.signal,n]);return ee(1/0,o,n),o.start=Date.now(),o.timeout=t,o}cleanUp(e){let t=Date.now()-e.start;e.aborted?(this.failure.push(t),this.next.push(t*this.failureMultiplier),this.metric?.update({failureMovingAverage:this.failure.movingAverage,failureDeviation:this.failure.deviation,failureForecast:this.failure.forecast,failureVariance:this.failure.variance,failure:t})):(this.success.push(t),this.next.push(t),this.metric?.update({successMovingAverage:this.success.movingAverage,successDeviation:this.success.deviation,successForecast:this.success.forecast,successVariance:this.success.variance,success:t}))}};var gu=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=le(),this.haveNext=le()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let e=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=le(),e}async throw(e){return this.ended=!0,e!=null&&(this.haveNext.promise.catch(()=>{}),this.haveNext.reject(e)),{done:!0,value:void 0}}async return(){let e={done:!0,value:void 0};return await this._push(void 0),e}async push(e,t){await this._push(e,t)}async end(e,t){e!=null?await this.throw(e):await this._push(void 0,t)}async _push(e,t){if(e!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");for(;this.nextResult!=null;)await this.readNext.promise;e!=null?this.nextResult={done:!1,value:e}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=le(),await sr(this.readNext.promise,t?.signal,t)}};function kp(){return new gu}var ua=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var yu=class extends Error{code;constructor(e,t){super(e),this.code=t}},wu=class extends yu{type;constructor(e){super(e,"ABORT_ERR"),this.type="aborted",this.name="AbortError"}};function fa(r,e){let t=kp();r.sink(t).catch(async i=>{await t.end(i)}),r.sink=async i=>{for await(let a of i)await t.push(a);await t.end()};let n=r.source;r.source[Symbol.iterator]!=null?n=r.source[Symbol.iterator]():r.source[Symbol.asyncIterator]!=null&&(n=r.source[Symbol.asyncIterator]());let o=new we;return{read:async(i,a)=>{a?.signal?.throwIfAborted();let c,u=new Promise((f,l)=>{c=()=>{l(new wu("Read aborted"))},a?.signal?.addEventListener("abort",c)});try{if(i==null){let{done:l,value:d}=await Promise.race([n.next(),u]);return l===!0?new we:d}for(;o.byteLength<i;){let{value:l,done:d}=await Promise.race([n.next(),u]);if(d===!0)throw new ua("unexpected end of input");o.append(l)}let f=o.sublist(0,i);return o.consume(i),f}finally{c!=null&&a?.signal?.removeEventListener("abort",c)}},write:async(i,a)=>{a?.signal?.throwIfAborted(),i instanceof Uint8Array?await t.push(i,a):await t.push(i.subarray(),a)},unwrap:()=>{if(o.byteLength>0){let i=r.source;r.source=async function*(){e?.yieldBytes===!1?yield o:yield*o,yield*i}()}return r}}}var Xw=1e4,Yw="1.0.0",Jw="ping",Qw="ipfs",Tp=32,eb=!0,ha=class{protocol;components;log;heartbeatInterval;pingIntervalMs;abortController;timeout;abortConnectionOnPingFailure;constructor(e,t={}){this.components=e,this.protocol=`/${t.protocolPrefix??Qw}/${Jw}/${Yw}`,this.log=e.logger.forComponent("libp2p:connection-monitor"),this.pingIntervalMs=t.pingInterval??Xw,this.abortConnectionOnPingFailure=t.abortConnectionOnPingFailure??eb,this.timeout=new la({...t.pingTimeout??{},metrics:e.metrics,metricName:"libp2p_connection_monitor_ping_time_milliseconds"})}[Symbol.toStringTag]="@libp2p/connection-monitor";[kn]=["@libp2p/connection-monitor"];start(){this.abortController=new AbortController,ee(1/0,this.abortController.signal),this.heartbeatInterval=setInterval(()=>{this.components.connectionManager.getConnections().forEach(e=>{Promise.resolve().then(async()=>{let t=Date.now();try{let n=this.timeout.getTimeoutSignal({signal:this.abortController?.signal}),o=await e.newStream(this.protocol,{signal:n,runOnLimitedConnection:!0}),s=fa(o);t=Date.now(),await Promise.all([s.write(nn(Tp),{signal:n}),s.read(Tp,{signal:n})]),e.rtt=Date.now()-t,await s.unwrap().close({signal:n})}catch(n){if(n.name!=="UnsupportedProtocolError")throw n;e.rtt=(Date.now()-t)/2}}).catch(t=>{this.log.error("error during heartbeat",t),this.abortConnectionOnPingFailure?(this.log.error("aborting connection due to ping failure"),e.abort(t)):this.log("connection ping failed, but not aborting due to abortConnectionOnPingFailure flag")})})},this.pingIntervalMs)}stop(){this.abortController?.abort(),this.heartbeatInterval!=null&&clearInterval(this.heartbeatInterval)}};function tb(r){return r[Symbol.asyncIterator]!=null}function rb(...r){let e=[];for(let t of r)tb(t)||e.push(t);return e.length===r.length?function*(){for(let t of e)yield*t}():async function*(){let t=ea({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(r.map(async n=>{for await(let o of n)t.push(o)})),t.end()}catch(n){t.end(n)}}),yield*t}()}var Io=rb;var da=class{routers;started;components;constructor(e,t){this.routers=t.routers??[],this.started=!1,this.components=e}[Symbol.toStringTag]="@libp2p/content-routing";isStarted(){return this.started}async start(){this.started=!0}async stop(){this.started=!1}async*findProviders(e,t={}){if(this.routers.length===0)throw new Ao("No content routers available");let n=this,o=new vr;for await(let s of Io(...n.routers.map(i=>i.findProviders(e,t))))s!=null&&(s.multiaddrs.length>0&&await this.components.peerStore.merge(s.id,{multiaddrs:s.multiaddrs}),!o.has(s.id)&&(o.add(s.id),yield s))}async provide(e,t={}){if(this.routers.length===0)throw new Ao("No content routers available");await Promise.all(this.routers.map(async n=>{await n.provide(e,t)}))}async put(e,t,n){if(!this.isStarted())throw new xt;await Promise.all(this.routers.map(async o=>{await o.put(e,t,n)}))}async get(e,t){if(!this.isStarted())throw new xt;return Promise.any(this.routers.map(async n=>n.get(e,t)))}};var pa=globalThis.CustomEvent??Event;async function*bu(r,e={}){let t=e.concurrency??1/0;t<1&&(t=1/0);let n=e.ordered==null?!1:e.ordered,o=new EventTarget,s=[],i=le(),a=le(),c=!1,u,f=!1;o.addEventListener("task-complete",()=>{a.resolve()}),Promise.resolve().then(async()=>{try{for await(let p of r){if(s.length===t&&(i=le(),await i.promise),f)break;let m={done:!1};s.push(m),p().then(g=>{m.done=!0,m.ok=!0,m.value=g,o.dispatchEvent(new pa("task-complete"))},g=>{m.done=!0,m.err=g,o.dispatchEvent(new pa("task-complete"))})}c=!0,o.dispatchEvent(new pa("task-complete"))}catch(p){u=p,o.dispatchEvent(new pa("task-complete"))}});function l(){return n?s[0]?.done:!!s.find(p=>p.done)}function*d(){for(;s.length>0&&s[0].done;){let p=s[0];if(s.shift(),p.ok)yield p.value;else throw f=!0,i.resolve(),p.err;i.resolve()}}function*h(){for(;l();)for(let p=0;p<s.length;p++)if(s[p].done){let m=s[p];if(s.splice(p,1),p--,m.ok)yield m.value;else throw f=!0,i.resolve(),m.err;i.resolve()}}for(;;){if(l()||(a=le(),await a.promise),u!=null)throw u;if(n?yield*d():yield*h(),c&&s.length===0)break}}var ma=class{log;peerId;peerStore;routers;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:peer-routing"),this.peerId=e.peerId,this.peerStore=e.peerStore,this.routers=t.routers??[]}[Symbol.toStringTag]="@libp2p/peer-routing";async findPeer(e,t){if(this.routers.length===0)throw new So("No peer routers available");if(e.toString()===this.peerId.toString())throw new Hi("Should not try to find self");let n=this,o=Io(...this.routers.map(s=>async function*(){try{yield await s.findPeer(e,t)}catch(i){n.log.error(i)}}()));for await(let s of o)if(s!=null)return s.multiaddrs.length>0&&await this.peerStore.merge(s.id,{multiaddrs:s.multiaddrs}),s;throw new Mo}async*getClosestPeers(e,t={}){if(this.routers.length===0)throw new So("No peer routers available");let n=this,o=$l(1024);for await(let s of bu(async function*(){let i=Io(...n.routers.map(a=>a.getClosestPeers(e,t)));for await(let a of i)yield async()=>{if(a.multiaddrs.length===0)try{a=await n.findPeer(a.id,{...t,useCache:!1})}catch(c){n.log.error("could not find peer multiaddrs",c);return}return a}}()))s!=null&&(s.multiaddrs.length>0&&await this.peerStore.merge(s.id,{multiaddrs:s.multiaddrs}),!o.has(s.id.toMultihash().bytes)&&(o.add(s.id.toMultihash().bytes),yield s))}};var ga=class extends vt{peerRouting;log;walking;walkers;shutdownController;walkController;needNext;constructor(e){super(),this.log=e.logger.forComponent("libp2p:random-walk"),this.peerRouting=e.peerRouting,this.walkers=0,this.walking=!1,this.shutdownController=new AbortController,ee(1/0,this.shutdownController.signal)}[Symbol.toStringTag]="@libp2p/random-walk";start(){this.shutdownController=new AbortController,ee(1/0,this.shutdownController.signal)}stop(){this.shutdownController.abort()}async*walk(e){this.walking||this.startWalk(),this.walkers++;let t=Ot([this.shutdownController.signal,e?.signal]);ee(1/0,t);try{for(;;)this.needNext?.resolve(),this.needNext=le(),yield(await En(this,"walk:peer",t,{errorEvent:"walk:error"})).detail}finally{t.clear(),this.walkers--,this.walkers===0&&(this.walkController?.abort(),this.walkController=void 0)}}startWalk(){this.walking=!0,this.walkController=new AbortController,ee(1/0,this.walkController.signal);let e=Ot([this.walkController.signal,this.shutdownController.signal]);ee(1/0,e);let t=Date.now(),n=0;Promise.resolve().then(async()=>{for(this.log("start walk");this.walkers>0;)try{let o=nn(32),s=Date.now();for await(let i of this.peerRouting.getClosestPeers(o,{signal:e}))e.aborted&&this.log("aborting walk"),e.throwIfAborted(),this.log("found peer %p after %dms for %d walkers",i.id,Date.now()-s,this.walkers),n++,this.safeDispatchEvent("walk:peer",{detail:i}),this.walkers===1&&this.needNext!=null&&(this.log("wait for need next"),await sr(this.needNext.promise,e)),s=Date.now();this.log("walk iteration for %b and %d walkers finished, found %d peers",o,this.walkers,n)}catch(o){this.log.error("randomwalk errored",o),this.safeDispatchEvent("walk:error",{detail:o})}this.log("no walkers left, ended walk")}).catch(o=>{this.log.error("randomwalk errored",o)}).finally(()=>{this.log("finished walk, found %d peers after %dms",n,Date.now()-t),this.walking=!1})}};var xu=32,vu=64,ya=class{log;topologies;handlers;components;constructor(e){this.log=e.logger.forComponent("libp2p:registrar"),this.topologies=new Map,this.handlers=new Map,this.components=e,this._onDisconnect=this._onDisconnect.bind(this),this._onPeerUpdate=this._onPeerUpdate.bind(this),this._onPeerIdentify=this._onPeerIdentify.bind(this),this.components.events.addEventListener("peer:disconnect",this._onDisconnect),this.components.events.addEventListener("peer:update",this._onPeerUpdate),this.components.events.addEventListener("peer:identify",this._onPeerIdentify)}[Symbol.toStringTag]="@libp2p/registrar";getProtocols(){return Array.from(new Set([...this.handlers.keys()])).sort()}getHandler(e){let t=this.handlers.get(e);if(t==null)throw new $i(`No handler registered for protocol ${e}`);return t}getTopologies(e){let t=this.topologies.get(e);return t==null?[]:[...t.values()]}async handle(e,t,n){if(this.handlers.has(e))throw new Ki(`Handler already registered for protocol ${e}`);let o=wi.bind({ignoreUndefined:!0})({maxInboundStreams:xu,maxOutboundStreams:vu},n);this.handlers.set(e,{handler:t,options:o}),await this.components.peerStore.merge(this.components.peerId,{protocols:[e]})}async unhandle(e){(Array.isArray(e)?e:[e]).forEach(n=>{this.handlers.delete(n)}),await this.components.peerStore.patch(this.components.peerId,{protocols:this.getProtocols()})}async register(e,t){if(t==null)throw new D("invalid topology");let n=`${(Math.random()*1e9).toString(36)}${Date.now()}`,o=this.topologies.get(e);return o==null&&(o=new Map,this.topologies.set(e,o)),o.set(n,t),n}unregister(e){for(let[t,n]of this.topologies.entries())n.has(e)&&(n.delete(e),n.size===0&&this.topologies.delete(t))}_onDisconnect(e){let t=e.detail;this.components.peerStore.get(t).then(n=>{for(let o of n.protocols){let s=this.topologies.get(o);if(s!=null)for(let i of s.values())i.filter?.has(t)!==!1&&(i.filter?.remove(t),i.onDisconnect?.(t))}}).catch(n=>{n.name!=="NotFoundError"&&this.log.error("could not inform topologies of disconnecting peer %p",t,n)})}_onPeerUpdate(e){let{peer:t,previous:n}=e.detail,o=(n?.protocols??[]).filter(s=>!t.protocols.includes(s));for(let s of o){let i=this.topologies.get(s);if(i!=null)for(let a of i.values())a.filter?.has(t.id)!==!1&&(a.filter?.remove(t.id),a.onDisconnect?.(t.id))}}_onPeerIdentify(e){let t=e.detail.protocols,n=e.detail.connection,o=e.detail.peerId;for(let s of t){let i=this.topologies.get(s);if(i!=null)for(let a of i.values())n.limits!=null&&a.notifyOnLimitedConnection!==!0||a.filter?.has(o)!==!0&&(a.filter?.add(o),a.onConnect?.(o,n))}}};var Eu=class extends Map{metric;constructor(e){super();let{name:t,metrics:n}=e;this.metric=n.registerMetric(t),this.updateComponentMetric()}set(e,t){return super.set(e,t),this.updateComponentMetric(),this}delete(e){let t=super.delete(e);return this.updateComponentMetric(),t}clear(){super.clear(),this.updateComponentMetric()}updateComponentMetric(){this.metric.update(this.size)}};function Lp(r){let{name:e,metrics:t}=r,n;return t!=null?n=new Eu({name:e,metrics:t}):n=new Map,n}var wa=class{log;components;transports;listeners;faultTolerance;started;constructor(e,t={}){this.log=e.logger.forComponent("libp2p:transports"),this.components=e,this.started=!1,this.transports=new Map,this.listeners=Lp({name:"libp2p_transport_manager_listeners",metrics:this.components.metrics}),this.faultTolerance=t.faultTolerance??Ft.FATAL_ALL}[Symbol.toStringTag]="@libp2p/transport-manager";add(e){let t=e[Symbol.toStringTag];if(t==null)throw new D("Transport must have a valid tag");if(this.transports.has(t))throw new D(`There is already a transport with the tag ${t}`);this.log("adding transport %s",t),this.transports.set(t,e),this.listeners.has(t)||this.listeners.set(t,[])}isStarted(){return this.started}start(){this.started=!0}async afterStart(){let e=this.components.addressManager.getListenAddrs();await this.listen(e)}async stop(){let e=[];for(let[t,n]of this.listeners)for(this.log("closing listeners for %s",t);n.length>0;){let o=n.pop();o!=null&&e.push(o.close())}await Promise.all(e),this.log("all listeners closed");for(let t of this.listeners.keys())this.listeners.set(t,[]);this.started=!1}async dial(e,t){let n=this.dialTransportForMultiaddr(e);if(n==null)throw new Gi(`No transport available for address ${String(e)}`);return t?.onProgress?.(new fe("transport-manager:selected-transport",n[Symbol.toStringTag])),n.dial(e,{...t,upgrader:this.components.upgrader})}getAddrs(){let e=[];for(let t of this.listeners.values())for(let n of t)e=[...e,...n.getAddrs()];return e}getTransports(){return Array.of(...this.transports.values())}getListeners(){return Array.of(...this.listeners.values()).flat()}dialTransportForMultiaddr(e){for(let t of this.transports.values())if(t.dialFilter([e]).length>0)return t}listenTransportForMultiaddr(e){for(let t of this.transports.values())if(t.listenFilter([e]).length>0)return t}async listen(e){if(!this.isStarted())throw new xt("Not started");if(e==null||e.length===0){this.log("no addresses were provided for listening, this node is dial only");return}let t=[];for(let[n,o]of this.transports.entries()){let s=o.listenFilter(e),i=[];for(let u of s){this.log("creating listener for %s on %a",n,u);let f=o.createListener({upgrader:this.components.upgrader}),l=this.listeners.get(n)??[];l==null&&(l=[],this.listeners.set(n,l)),l.push(f),f.addEventListener("listening",()=>{this.components.events.safeDispatchEvent("transport:listening",{detail:f})}),f.addEventListener("close",()=>{let d=l.findIndex(h=>h===f);l.splice(d,1),this.components.events.safeDispatchEvent("transport:close",{detail:f})}),i.push(f.listen(u))}if(i.length===0){t.push(n);continue}if((await Promise.allSettled(i)).find(u=>u.status==="fulfilled")==null&&this.faultTolerance!==Ft.NO_FATAL)throw new Cr(`Transport (${n}) could not listen on any available address`)}if(t.length===this.transports.size){let n=`no valid addresses were provided for transports [${t.join(", ")}]`;if(this.faultTolerance===Ft.FATAL_ALL)throw new Cr(n);this.log(`libp2p in dial mode only: ${n}`)}}async remove(e){let t=this.listeners.get(e)??[];this.log.trace("removing transport %s",e);let n=[];for(this.log.trace("closing listeners for %s",e);t.length>0;){let o=t.pop();o!=null&&n.push(o.close())}await Promise.all(n),this.transports.delete(e),this.listeners.delete(e)}async removeAll(){let e=[];for(let t of this.transports.keys())e.push(this.remove(t));await Promise.all(e)}};var Be="/multistream/1.0.0";var ba=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},xa=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},va=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"};function Co(r,e={}){let t=fa(r,e);e.maxDataLength!=null&&e.maxLengthLength==null&&(e.maxLengthLength=he(e.maxDataLength));let n=e?.lengthDecoder??it,o=e?.lengthEncoder??ke;return{read:async i=>{let a=-1,c=new we;for(;;){c.append(await t.read(1,i));try{a=n(c)}catch(u){if(u instanceof RangeError)continue;throw u}if(a<0)throw new ba("Invalid message length");if(e?.maxLengthLength!=null&&c.byteLength>e.maxLengthLength)throw new va("message length length too long");if(a>-1)break}if(e?.maxDataLength!=null&&a>e.maxDataLength)throw new xa("message length too long");return t.read(a,i)},write:async(i,a)=>{await t.write(new we(o(i.byteLength),i),a)},writeV:async(i,a)=>{let c=new we(...i.flatMap(u=>[o(u.byteLength),u]));await t.write(c,a)},unwrap:()=>t.unwrap()}}var nb=P(`
+`);async function Nr(r,e,t){await r.write(e,t)}async function Np(r,e,t){await r.writeV(e,t)}async function ob(r,e){let t=await r.read(e);if(t.byteLength===0||t.get(t.byteLength-1)!==nb[0])throw e.log.error("Invalid mss message - missing newline",t),new Fo("Missing newline");return t.sublist(0,-1)}async function ir(r,e){let t=await ob(r,e);return H(t.subarray())}async function ko(r,e,t){if(e=Array.isArray(e)?[...e]:[e],e.length===1&&t.negotiateFully===!1)return sb(r,e[0],t);let n=Co(r,{...t,maxDataLength:1024}),o=e.shift();if(o==null)throw new Error("At least one protocol must be specified");t.log.trace('select: write ["%s", "%s"]',Be,o);let s=P(`${Be}
 `),i=P(`${o}
 `);await Np(n,[s,i],t),t.log.trace("select: reading multistream-select header");let a=await ir(n,t);if(t.log.trace('select: read "%s"',a),a===Be&&(t.log.trace("select: reading protocol response"),a=await ir(n,t),t.log.trace('select: read "%s"',a)),a===o)return{stream:n.unwrap(),protocol:o};for(let c of e){t.log.trace('select: write "%s"',c),await Nr(n,P(`${c}
-`),t),t.log.trace("select: reading protocol response");let u=await ir(n,t);if(t.log.trace('select: read "%s" for "%s"',u,c),u===c)return{stream:n.unwrap(),protocol:c}}throw new In("protocol selection failed")}function sb(r,e,t){let n=r.sink.bind(r),o=r.source,s=!1,i=!1,a=le(),c=!1,u=!1,f=le(),l=!1,d=!1,h=le(),p=Io({sink:n,source:o},{...t,maxDataLength:1024});r.sink=async b=>{let{sink:w}=p.unwrap();await w(async function*(){let x=!1;for await(let A of b){if(u&&await f.promise,c)yield A;else{u=!0,t.log.trace('optimistic: write ["%s", "%s", data(%d)] in sink',Be,e,A.byteLength);let _=`${e}
+`),t),t.log.trace("select: reading protocol response");let u=await ir(n,t);if(t.log.trace('select: read "%s" for "%s"',u,c),u===c)return{stream:n.unwrap(),protocol:c}}throw new Cn("protocol selection failed")}function sb(r,e,t){let n=r.sink.bind(r),o=r.source,s=!1,i=!1,a=le(),c=!1,u=!1,f=le(),l=!1,d=!1,h=le(),p=Co({sink:n,source:o},{...t,maxDataLength:1024});r.sink=async b=>{let{sink:w}=p.unwrap();await w(async function*(){let x=!1;for await(let A of b){if(u&&await f.promise,c)yield A;else{u=!0,t.log.trace('optimistic: write ["%s", "%s", data(%d)] in sink',Be,e,A.byteLength);let _=`${e}
 `;yield new we(Uint8Array.from([19]),P(`${Be}
-`),Ce(_.length),P(_),A).subarray(),t.log.trace('optimistic: wrote ["%s", "%s", data(%d)] in sink',Be,e,A.byteLength),c=!0,u=!1,f.resolve(),m().catch(v=>{t.log.error("could not finish optimistic protocol negotiation of %s",e,v)})}x=!0}x||await m()}())};async function m(){if(i){t.log.trace("optimistic: already negotiating %s stream",e),await a.promise;return}i=!0;try{c||(t.log.trace("optimistic: doing send protocol for %s stream",e),await g()),l||(t.log.trace("optimistic: doing read protocol for %s stream",e),await y())}finally{i=!1,s=!0,a.resolve()}}async function g(){if(u){await f.promise;return}u=!0;try{t.log.trace('optimistic: write ["%s", "%s", data] in source',Be,e),await p.writeV([P(`${Be}
+`),ke(_.length),P(_),A).subarray(),t.log.trace('optimistic: wrote ["%s", "%s", data(%d)] in sink',Be,e,A.byteLength),c=!0,u=!1,f.resolve(),m().catch(v=>{t.log.error("could not finish optimistic protocol negotiation of %s",e,v)})}x=!0}x||await m()}())};async function m(){if(i){t.log.trace("optimistic: already negotiating %s stream",e),await a.promise;return}i=!0;try{c||(t.log.trace("optimistic: doing send protocol for %s stream",e),await g()),l||(t.log.trace("optimistic: doing read protocol for %s stream",e),await y())}finally{i=!1,s=!0,a.resolve()}}async function g(){if(u){await f.promise;return}u=!0;try{t.log.trace('optimistic: write ["%s", "%s", data] in source',Be,e),await p.writeV([P(`${Be}
 `),P(`${e}
-`)]),t.log.trace('optimistic: wrote ["%s", "%s", data] in source',Be,e)}finally{c=!0,u=!1,f.resolve()}}async function y(){if(d){await h.promise;return}d=!0;try{t.log.trace("optimistic: reading multistream select header");let b=await ir(p,t);if(t.log.trace('optimistic: read multistream select header "%s"',b),b===Be&&(b=await ir(p,t)),t.log.trace('optimistic: read protocol "%s", expecting "%s"',b,e),b!==e)throw new In("protocol selection failed")}finally{l=!0,d=!1,h.resolve()}}if(r.source=async function*(){await m(),t.log.trace('optimistic: reading data from "%s" stream',e),yield*p.unwrap().source}(),r.closeRead!=null){let b=r.closeRead.bind(r);r.closeRead=async w=>{s||await m().catch(x=>{t.log.error("could not negotiate protocol before close read",x)}),await b(w)}}if(r.closeWrite!=null){let b=r.closeWrite.bind(r);r.closeWrite=async w=>{s||await m().catch(x=>{t.log.error("could not negotiate protocol before close write",x)}),await b(w)}}if(r.close!=null){let b=r.close.bind(r);r.close=async w=>{let x=[];u&&x.push(f.promise),d&&x.push(h.promise),x.length>0?await sr(Promise.all(x),w?.signal):(s=!0,i=!1,a.resolve()),await b(w)}}return{stream:r,protocol:e}}function Ea(r){return r[Symbol.asyncIterator]!=null}var Aa=r=>{let e=he(r),t=Ie(e);return Ce(r,t),Aa.bytes=e,t};Aa.bytes=0;function Sa(r,e){e=e??{};let t=e.lengthEncoder??Aa;function*n(o){let s=t(o.byteLength);s instanceof Uint8Array?yield s:yield*s,o instanceof Uint8Array?yield o:yield*o}return Ea(r)?async function*(){for await(let o of r)yield*n(o)}():function*(){for(let o of r)yield*n(o)}()}Sa.single=(r,e)=>{e=e??{};let t=e.lengthEncoder??Aa;return new we(t(r.byteLength),r)};var _a=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},Ba=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},Ia=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"},Co=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var ib=8,ab=1024*1024*4,Pr;(function(r){r[r.LENGTH=0]="LENGTH",r[r.DATA=1]="DATA"})(Pr||(Pr={}));var _u=r=>{let e=it(r);return _u.bytes=he(e),e};_u.bytes=0;function Su(r,e){let t=new we,n=Pr.LENGTH,o=-1,s=e?.lengthDecoder??_u,i=e?.maxLengthLength??ib,a=e?.maxDataLength??ab;function*c(){for(;t.byteLength>0;){if(n===Pr.LENGTH)try{if(o=s(t),o<0)throw new _a("Invalid message length");if(o>a)throw new Ba("Message length too long");let u=s.bytes;t.consume(u),e?.onLength!=null&&e.onLength(o),n=Pr.DATA}catch(u){if(u instanceof RangeError){if(t.byteLength>i)throw new Ia("Message length length too long");break}throw u}if(n===Pr.DATA){if(t.byteLength<o)break;let u=t.sublist(0,o);t.consume(o),e?.onData!=null&&e.onData(u),yield u,n=Pr.LENGTH}}}return Ea(r)?async function*(){for await(let u of r)t.append(u),yield*c();if(t.byteLength>0)throw new Co("Unexpected end of input")}():function*(){for(let u of r)t.append(u),yield*c();if(t.byteLength>0)throw new Co("Unexpected end of input")}()}Su.fromReader=(r,e)=>{let t=1,n=async function*(){for(;;)try{let{done:s,value:i}=await r.next(t);if(s===!0)return;i!=null&&(yield i)}catch(s){if(s.code==="ERR_UNDER_READ")return{done:!0,value:null};throw s}finally{t=1}}();return Su(n,{...e??{},onLength:s=>{t=s}})};async function To(r,e,t){e=Array.isArray(e)?e:[e],t.log.trace("handle: available protocols %s",e);let n=Io(r,{...t,maxDataLength:1024,maxLengthLength:2});for(;;){t.log.trace("handle: reading incoming string");let o=await ir(n,t);if(t.log.trace('handle: read "%s"',o),o===Be){t.log.trace('handle: respond with "%s" for "%s"',Be,o),await Nr(n,P(`${Be}
+`)]),t.log.trace('optimistic: wrote ["%s", "%s", data] in source',Be,e)}finally{c=!0,u=!1,f.resolve()}}async function y(){if(d){await h.promise;return}d=!0;try{t.log.trace("optimistic: reading multistream select header");let b=await ir(p,t);if(t.log.trace('optimistic: read multistream select header "%s"',b),b===Be&&(b=await ir(p,t)),t.log.trace('optimistic: read protocol "%s", expecting "%s"',b,e),b!==e)throw new Cn("protocol selection failed")}finally{l=!0,d=!1,h.resolve()}}if(r.source=async function*(){await m(),t.log.trace('optimistic: reading data from "%s" stream',e),yield*p.unwrap().source}(),r.closeRead!=null){let b=r.closeRead.bind(r);r.closeRead=async w=>{s||await m().catch(x=>{t.log.error("could not negotiate protocol before close read",x)}),await b(w)}}if(r.closeWrite!=null){let b=r.closeWrite.bind(r);r.closeWrite=async w=>{s||await m().catch(x=>{t.log.error("could not negotiate protocol before close write",x)}),await b(w)}}if(r.close!=null){let b=r.close.bind(r);r.close=async w=>{let x=[];u&&x.push(f.promise),d&&x.push(h.promise),x.length>0?await sr(Promise.all(x),w?.signal):(s=!0,i=!1,a.resolve()),await b(w)}}return{stream:r,protocol:e}}function Ea(r){return r[Symbol.asyncIterator]!=null}var Aa=r=>{let e=he(r),t=Ie(e);return ke(r,t),Aa.bytes=e,t};Aa.bytes=0;function Sa(r,e){e=e??{};let t=e.lengthEncoder??Aa;function*n(o){let s=t(o.byteLength);s instanceof Uint8Array?yield s:yield*s,o instanceof Uint8Array?yield o:yield*o}return Ea(r)?async function*(){for await(let o of r)yield*n(o)}():function*(){for(let o of r)yield*n(o)}()}Sa.single=(r,e)=>{e=e??{};let t=e.lengthEncoder??Aa;return new we(t(r.byteLength),r)};var _a=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},Ba=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},Ia=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"},To=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var ib=8,ab=1024*1024*4,Pr;(function(r){r[r.LENGTH=0]="LENGTH",r[r.DATA=1]="DATA"})(Pr||(Pr={}));var _u=r=>{let e=it(r);return _u.bytes=he(e),e};_u.bytes=0;function Su(r,e){let t=new we,n=Pr.LENGTH,o=-1,s=e?.lengthDecoder??_u,i=e?.maxLengthLength??ib,a=e?.maxDataLength??ab;function*c(){for(;t.byteLength>0;){if(n===Pr.LENGTH)try{if(o=s(t),o<0)throw new _a("Invalid message length");if(o>a)throw new Ba("Message length too long");let u=s.bytes;t.consume(u),e?.onLength!=null&&e.onLength(o),n=Pr.DATA}catch(u){if(u instanceof RangeError){if(t.byteLength>i)throw new Ia("Message length length too long");break}throw u}if(n===Pr.DATA){if(t.byteLength<o)break;let u=t.sublist(0,o);t.consume(o),e?.onData!=null&&e.onData(u),yield u,n=Pr.LENGTH}}}return Ea(r)?async function*(){for await(let u of r)t.append(u),yield*c();if(t.byteLength>0)throw new To("Unexpected end of input")}():function*(){for(let u of r)t.append(u),yield*c();if(t.byteLength>0)throw new To("Unexpected end of input")}()}Su.fromReader=(r,e)=>{let t=1,n=async function*(){for(;;)try{let{done:s,value:i}=await r.next(t);if(s===!0)return;i!=null&&(yield i)}catch(s){if(s.code==="ERR_UNDER_READ")return{done:!0,value:null};throw s}finally{t=1}}();return Su(n,{...e??{},onLength:s=>{t=s}})};async function Lo(r,e,t){e=Array.isArray(e)?e:[e],t.log.trace("handle: available protocols %s",e);let n=Co(r,{...t,maxDataLength:1024,maxLengthLength:2});for(;;){t.log.trace("handle: reading incoming string");let o=await ir(n,t);if(t.log.trace('handle: read "%s"',o),o===Be){t.log.trace('handle: respond with "%s" for "%s"',Be,o),await Nr(n,P(`${Be}
 `),t),t.log.trace('handle: responded with "%s" for "%s"',Be,o);continue}if(e.includes(o))return t.log.trace('handle: respond with "%s" for "%s"',o,o),await Nr(n,P(`${o}
 `),t),t.log.trace('handle: responded with "%s" for "%s"',o,o),{stream:n.unwrap(),protocol:o};if(o==="ls"){let s=new we(...e.map(i=>Sa.single(P(`${i}
 `))),P(`
-`));t.log.trace('handle: respond with "%s" for %s',e,o),await Nr(n,s,t),t.log.trace('handle: responded with "%s" for %s',e,o);continue}t.log.trace('handle: respond with "na" for "%s"',o),await Nr(n,P(`na
-`),t),t.log('handle: responded with "na" for "%s"',o)}}var lb=500,Bu=class{id;remoteAddr;remotePeer;direction;timeline;multiplexer;encryption;status;limits;log;tags;_newStream;_close;_abort;_getStreams;constructor(e){let{remoteAddr:t,remotePeer:n,newStream:o,close:s,abort:i,getStreams:a}=e;this.id=`${parseInt(String(Math.random()*1e9)).toString(36)}${Date.now()}`,this.remoteAddr=t,this.remotePeer=n,this.direction=e.direction,this.status="open",this.timeline=e.timeline,this.multiplexer=e.multiplexer,this.encryption=e.encryption,this.limits=e.limits,this.log=e.logger.forComponent(`libp2p:connection:${this.direction}:${this.id}`),this.remoteAddr.getPeerId()==null&&(this.remoteAddr=this.remoteAddr.encapsulate(`/p2p/${this.remotePeer}`)),this._newStream=o,this._close=s,this._abort=i,this._getStreams=a,this.tags=[]}[Symbol.toStringTag]="Connection";[Du]=!0;get streams(){return this._getStreams()}async newStream(e,t){if(this.status==="closing")throw new Ro("the connection is being closed");if(this.status==="closed")throw new Do("the connection is closed");if(Array.isArray(e)||(e=[e]),this.limits!=null&&t?.runOnLimitedConnection!==!0)throw new Mr("Cannot open protocol stream on limited connection");let n=await this._newStream(e,t);return n.direction="outbound",n}async close(e={}){if(!(this.status==="closed"||this.status==="closing")){if(this.log("closing connection to %a",this.remoteAddr),this.status="closing",e.signal==null){let t=AbortSignal.timeout(lb);ee(1/0,t),e={...e,signal:t}}try{this.log.trace("closing all streams"),await Promise.all(this.streams.map(async t=>t.close(e))),this.log.trace("closing underlying transport"),await this._close(e),this.log.trace("updating timeline with close time"),this.status="closed",this.timeline.close=Date.now()}catch(t){this.log.error("error encountered during graceful close of connection to %a",this.remoteAddr,t),this.abort(t)}}}abort(e){this.log.error("aborting connection to %a due to error",this.remoteAddr,e),this.status="closing",this.streams.forEach(t=>{t.abort(e)}),this.log.error("all streams aborted",this.streams.length),this._abort(e),this.timeline.close=Date.now(),this.status="closed"}};function Rp(r){return new Bu(r)}function hb(r,e){try{let{options:t}=e.getHandler(r);return t.maxInboundStreams}catch(t){if(t.name!=="UnhandledProtocolError")throw t}return xu}function db(r,e,t={}){try{let{options:n}=e.getHandler(r);if(n.maxOutboundStreams!=null)return n.maxOutboundStreams}catch(n){if(n.name!=="UnhandledProtocolError")throw n}return t.maxOutboundStreams??vu}function Dp(r,e,t){let n=0;return t.streams.forEach(o=>{o.direction===e&&o.protocol===r&&n++}),n}var ka=class{components;connectionEncrypters;streamMuxers;inboundUpgradeTimeout;outboundUpgradeTimeout;inboundStreamProtocolNegotiationTimeout;outboundStreamProtocolNegotiationTimeout;events;metrics;constructor(e,t){this.components=e,this.connectionEncrypters=new Map,t.connectionEncrypters.forEach(n=>{this.connectionEncrypters.set(n.protocol,n)}),this.streamMuxers=new Map,t.streamMuxers.forEach(n=>{this.streamMuxers.set(n.protocol,n)}),this.inboundUpgradeTimeout=t.inboundUpgradeTimeout??3e3,this.outboundUpgradeTimeout=t.outboundUpgradeTimeout??3e3,this.inboundStreamProtocolNegotiationTimeout=t.inboundStreamProtocolNegotiationTimeout??2e3,this.outboundStreamProtocolNegotiationTimeout=t.outboundStreamProtocolNegotiationTimeout??2e3,this.events=e.events,this.metrics={dials:e.metrics?.registerCounterGroup("libp2p_connection_manager_dials_total"),errors:e.metrics?.registerCounterGroup("libp2p_connection_manager_dial_errors_total")}}[Symbol.toStringTag]="@libp2p/upgrader";async shouldBlockConnection(e,...t){let n=this.components.connectionGater[e];if(n==null)return;if(await n.apply(this.components.connectionGater,t)===!0)throw new qi(`The multiaddr connection is blocked by gater.${e}`)}async upgradeInbound(e,t={}){try{if(this.metrics.dials?.increment({inbound:!0}),!await this.components.connectionManager.acceptIncomingConnection(e))throw new zi("connection denied");return await this.shouldBlockConnection("denyInboundConnection",e),await this._performUpgrade(e,"inbound",t)}catch(n){throw this.metrics.errors?.increment({inbound:!0}),n}finally{this.components.connectionManager.afterUpgradeInbound()}}async upgradeOutbound(e,t={}){try{this.metrics.dials?.increment({outbound:!0});let n=e.remoteAddr.getPeerId(),o;return n!=null&&(o=yt(n),await this.shouldBlockConnection("denyOutboundConnection",o,e)),await this._performUpgrade(e,"outbound",t)}catch(n){throw this.metrics.errors?.increment({outbound:!0}),n}}async _performUpgrade(e,t,n){let o,s,i,a,c,u=AbortSignal.timeout(t==="inbound"?this.inboundUpgradeTimeout:this.outboundUpgradeTimeout),f=Ot([u,n.signal]);ee(1/0,u,f),n.signal=f,this.components.metrics?.trackMultiaddrConnection(e),e.log.trace("starting the %s connection upgrade",t);let l=e;if(n?.skipProtection!==!0){let d=this.components.connectionProtector;d!=null&&(e.log("protecting the %s connection",t),l=await d.protect(e,n))}try{if(o=l,n?.skipEncryption!==!0){n?.onProgress?.(new fe(`upgrader:encrypt-${t}-connection`)),{conn:o,remotePeer:s,protocol:c}=await(t==="inbound"?this._encryptInbound(l,{...n,signal:f}):this._encryptOutbound(l,{...n,signal:f}));let d={...l,...o};await this.shouldBlockConnection(t==="inbound"?"denyInboundEncryptedConnection":"denyOutboundEncryptedConnection",s,d)}else{let d=e.remoteAddr.getPeerId();if(d==null)throw new Vt(`${t} connection that skipped encryption must have a peer id`);let h=yt(d);c="native",s=h}if(i=o,n?.muxerFactory!=null)a=n.muxerFactory;else if(this.streamMuxers.size>0){n?.onProgress?.(new fe(`upgrader:multiplex-${t}-connection`));let d=await(t==="inbound"?this._multiplexInbound({...l,...o},this.streamMuxers,n):this._multiplexOutbound({...l,...o},this.streamMuxers,n));a=d.muxerFactory,i=d.stream}}catch(d){throw e.log.error("failed to upgrade inbound connection %s %a - %e",t==="inbound"?"from":"to",e.remoteAddr,d),d}return await this.shouldBlockConnection(t==="inbound"?"denyInboundUpgradedConnection":"denyOutboundUpgradedConnection",s,e),e.log("successfully upgraded %s connection",t),this._createConnection({cryptoProtocol:c,direction:t,maConn:e,upgradedConn:i,muxerFactory:a,remotePeer:s,limits:n?.limits})}_createConnection(e){let{cryptoProtocol:t,direction:n,maConn:o,upgradedConn:s,remotePeer:i,muxerFactory:a,limits:c}=e,u,f,l;a!=null&&(u=a.createStreamMuxer({direction:n,onIncomingStream:p=>{l!=null&&Promise.resolve().then(async()=>{let m=this.components.registrar.getProtocols(),g=AbortSignal.timeout(this.inboundStreamProtocolNegotiationTimeout);ee(1/0,g);let{stream:y,protocol:b}=await To(p,m,{signal:g,log:p.log,yieldBytes:!1});if(l==null)return;l.log("incoming stream opened on %s",b);let w=hb(b,this.components.registrar);if(Dp(b,"inbound",l)===w){let A=new Ho(`Too many inbound protocol streams for protocol "${b}" - limit ${w}`);throw p.abort(A),A}p.source=y.source,p.sink=y.sink,p.protocol=b,y.closeWrite!=null&&(p.closeWrite=y.closeWrite),y.closeRead!=null&&(p.closeRead=y.closeRead),y.close!=null&&(p.close=y.close),await this.components.peerStore.merge(i,{protocols:[b]}),this.components.metrics?.trackProtocolStream(p,l),this._onStream({connection:l,stream:p,protocol:b})}).catch(async m=>{l.log.error("error handling incoming stream id %s - %e",p.id,m),p.timeline.close==null&&await p.close()})}}),f=async(p,m={})=>{if(u==null)throw new Cr("Connection is not multiplexed");l.log.trace("starting new stream for protocols %s",p);let g=await u.newStream();l.log.trace("started new stream %s for protocols %s",g.id,p);try{if(m.signal==null){g.log("no abort signal was passed while trying to negotiate protocols %s falling back to default timeout",p);let A=AbortSignal.timeout(this.outboundStreamProtocolNegotiationTimeout);ee(1/0,A),m={...m,signal:A}}g.log.trace("selecting protocol from protocols %s",p);let{stream:y,protocol:b}=await ko(g,p,{...m,log:g.log,yieldBytes:!0});g.log.trace("selected protocol %s",b);let w=db(b,this.components.registrar,m),x=Dp(b,"outbound",l);if(x>=w){let A=new $o(`Too many outbound protocol streams for protocol "${b}" - ${x}/${w}`);throw g.abort(A),A}return await this.components.peerStore.merge(i,{protocols:[b]}),g.source=y.source,g.sink=y.sink,g.protocol=b,y.closeWrite!=null&&(g.closeWrite=y.closeWrite),y.closeRead!=null&&(g.closeRead=y.closeRead),y.close!=null&&(g.close=y.close),this.components.metrics?.trackProtocolStream(g,l),g}catch(y){throw l.log.error("could not create new outbound stream on connection %s %a for protocols %s - %e",n==="inbound"?"from":"to",e.maConn.remoteAddr,p,y),g.timeline.close==null&&g.abort(y),y}},Promise.all([u.sink(s.source),s.sink(u.source)]).catch(p=>{l.log.error("error piping data through muxer - %e",p)}));let d=o.timeline;o.timeline=new Proxy(d,{set:(...p)=>(l!=null&&p[1]==="close"&&p[2]!=null&&d.close==null&&(async()=>{try{l.status==="open"&&await l.close()}catch(m){l.log.error("error closing connection after timeline close",m)}finally{this.events.safeDispatchEvent("connection:close",{detail:l})}})().catch(m=>{l.log.error("error thrown while dispatching connection:close event",m)}),Reflect.set(...p))}),o.timeline.upgraded=Date.now();let h=()=>{throw new Cr("Connection is not multiplexed")};return l=Rp({remoteAddr:o.remoteAddr,remotePeer:i,status:"open",direction:n,timeline:o.timeline,multiplexer:u?.protocol,encryption:t,limits:c,logger:this.components.logger,newStream:f??h,getStreams:()=>u!=null?u.streams:[],close:async p=>{u!=null&&(l.log.trace("close muxer"),await u.close(p)),l.log.trace("close maconn"),await o.close(p),l.log.trace("closed maconn")},abort:p=>{o.abort(p),u?.abort(p)}}),this.events.safeDispatchEvent("connection:open",{detail:l}),l}_onStream(e){let{connection:t,stream:n,protocol:o}=e,{handler:s,options:i}=this.components.registrar.getHandler(o);if(t.limits!=null&&i.runOnLimitedConnection!==!0)throw new Mr("Cannot open protocol stream on limited connection");s({connection:t,stream:n})}async _encryptInbound(e,t){let n=Array.from(this.connectionEncrypters.keys());try{let{stream:o,protocol:s}=await To(e,n,{...t,log:e.log}),i=this.connectionEncrypters.get(s);if(i==null)throw new Tr(`no crypto module found for ${s}`);return e.log("encrypting inbound connection to %a using %s",e.remoteAddr,s),{...await i.secureInbound(o,t),protocol:s}}catch(o){throw e.log.error("encrypting inbound connection from %a failed",e.remoteAddr,o),new Tr(o.message)}}async _encryptOutbound(e,t){let n=Array.from(this.connectionEncrypters.keys());try{e.log.trace("selecting encrypter from %s",n);let{stream:o,protocol:s}=await ko(e,n,{...t,log:e.log,yieldBytes:!0}),i=this.connectionEncrypters.get(s);if(i==null)throw new Tr(`no crypto module found for ${s}`);return e.log("encrypting outbound connection to %a using %s",e.remoteAddr,s),{...await i.secureOutbound(o,t),protocol:s}}catch(o){throw e.log.error("encrypting outbound connection to %a failed",e.remoteAddr,o),new Tr(o.message)}}async _multiplexOutbound(e,t,n){let o=Array.from(t.keys());e.log("outbound selecting muxer %s",o);try{e.log.trace("selecting stream muxer from %s",o);let{stream:s,protocol:i}=await ko(e,o,{...n,log:e.log,yieldBytes:!0});e.log("selected %s as muxer protocol",i);let a=t.get(i);return{stream:s,muxerFactory:a}}catch(s){throw e.log.error("error multiplexing outbound connection",s),new Cr(String(s))}}async _multiplexInbound(e,t,n){let o=Array.from(t.keys());e.log("inbound handling muxers %s",o);try{let{stream:s,protocol:i}=await To(e,o,{...n,log:e.log}),a=t.get(i);return{stream:s,muxerFactory:a}}catch(s){throw e.log.error("error multiplexing inbound connection",s),new Cr(String(s))}}};var Mp="2.1.3",Up="libp2p";var Ca=class extends vt{peerId;peerStore;contentRouting;peerRouting;metrics;services;logger;status;components;log;constructor(e){super(),this.status="stopped";let t=new vt,n=t.dispatchEvent.bind(t);t.dispatchEvent=a=>{let c=n(a),u=this.dispatchEvent(new CustomEvent(a.type,{detail:a.detail}));return c||u},ee(1/0,t),this.peerId=e.peerId,this.logger=e.logger??Ei(),this.log=this.logger.forComponent("libp2p"),this.services={};let o=this.components=hp({peerId:e.peerId,privateKey:e.privateKey,nodeInfo:e.nodeInfo??{name:Up,version:Mp},logger:this.logger,events:t,datastore:e.datastore??new Ui,connectionGater:pp(e.connectionGater),dns:e.dns});this.peerStore=this.configureComponent("peerStore",cp(o,{addressFilter:this.components.connectionGater.filterMultiaddrForPeer,...e.peerStore})),e.metrics!=null&&(this.metrics=this.configureComponent("metrics",e.metrics(this.components))),o.events.addEventListener("peer:update",a=>{if(a.detail.previous==null){let c={id:a.detail.peer.id,multiaddrs:a.detail.peer.addresses.map(u=>u.multiaddr)};o.events.safeDispatchEvent("peer:discovery",{detail:c})}}),e.connectionProtector!=null&&this.configureComponent("connectionProtector",e.connectionProtector(o)),this.components.upgrader=new ka(this.components,{connectionEncrypters:(e.connectionEncrypters??[]).map((a,c)=>this.configureComponent(`connection-encryption-${c}`,a(this.components))),streamMuxers:(e.streamMuxers??[]).map((a,c)=>this.configureComponent(`stream-muxers-${c}`,a(this.components))),inboundUpgradeTimeout:e.connectionManager?.inboundUpgradeTimeout,outboundUpgradeTimeout:e.connectionManager?.outboundUpgradeTimeout}),this.configureComponent("transportManager",new wa(this.components,e.transportManager)),this.configureComponent("connectionManager",new ca(this.components,e.connectionManager)),e.connectionMonitor?.enabled!==!1&&this.configureComponent("connectionMonitor",new ha(this.components,e.connectionMonitor)),this.configureComponent("registrar",new ya(this.components)),this.configureComponent("addressManager",new Oi(this.components,e.addresses));let s=(e.peerRouters??[]).map((a,c)=>this.configureComponent(`peer-router-${c}`,a(this.components)));this.peerRouting=this.components.peerRouting=this.configureComponent("peerRouting",new ma(this.components,{routers:s}));let i=(e.contentRouters??[]).map((a,c)=>this.configureComponent(`content-router-${c}`,a(this.components)));if(this.contentRouting=this.components.contentRouting=this.configureComponent("contentRouting",new da(this.components,{routers:i})),this.configureComponent("randomWalk",new ga(this.components)),(e.peerDiscovery??[]).forEach((a,c)=>{this.configureComponent(`peer-discovery-${c}`,a(this.components)).addEventListener("peer",f=>{this.#e(f)})}),e.transports?.forEach((a,c)=>{this.components.transportManager.add(this.configureComponent(`transport-${c}`,a(this.components)))}),e.services!=null)for(let a of Object.keys(e.services)){let c=e.services[a],u=c(this.components);if(u==null){this.log.error("service factory %s returned null or undefined instance",a);continue}this.services[a]=u,this.configureComponent(a,u),u[La]!=null&&(this.log("registering service %s for content routing",a),i.push(u[La])),u[Pa]!=null&&(this.log("registering service %s for peer routing",a),s.push(u[Pa])),u[Na]!=null&&(this.log("registering service %s for peer discovery",a),u[Na].addEventListener?.("peer",f=>{this.#e(f)}))}dp(o)}configureComponent(e,t){return t==null&&this.log.error("component %s was null or undefined",e),this.components[e]=t,t}async start(){if(this.status==="stopped"){this.status="starting",this.log("libp2p is starting");try{await this.components.beforeStart?.(),await this.components.start(),await this.components.afterStart?.(),this.status="started",this.safeDispatchEvent("start",{detail:this}),this.log("libp2p has started")}catch(e){throw this.log.error("An error occurred starting libp2p",e),this.status="started",await this.stop(),e}}}async stop(){this.status==="started"&&(this.log("libp2p is stopping"),this.status="stopping",await this.components.beforeStop?.(),await this.components.stop(),await this.components.afterStop?.(),this.status="stopped",this.safeDispatchEvent("stop",{detail:this}),this.log("libp2p has stopped"))}getConnections(e){return this.components.connectionManager.getConnections(e)}getDialQueue(){return this.components.connectionManager.getDialQueue()}getPeers(){let e=new vr;for(let t of this.components.connectionManager.getConnections())e.add(t.remotePeer);return Array.from(e)}async dial(e,t={}){return this.components.connectionManager.openConnection(e,{priority:75,...t})}async dialProtocol(e,t,n={}){if(t==null)throw new D("no protocols were provided to open a stream");if(t=Array.isArray(t)?t:[t],t.length===0)throw new D("no protocols were provided to open a stream");return(await this.dial(e,n)).newStream(t,n)}getMultiaddrs(){return this.components.addressManager.getAddresses()}getProtocols(){return this.components.registrar.getProtocols()}async hangUp(e,t={}){tr(e)&&(e=yt(e.getPeerId()??"")),await this.components.connectionManager.closeConnections(e,t)}async getPublicKey(e,t={}){if(this.log("getPublicKey %p",e),e.publicKey!=null)return e.publicKey;try{let i=await this.peerStore.get(e);if(i.id.publicKey!=null)return i.id.publicKey}catch(i){if(i.name!=="NotFoundError")throw i}let n=Fe([P("/pk/"),e.toMultihash().bytes]),o=await this.contentRouting.get(n,t),s=nn(o);return await this.peerStore.patch(e,{publicKey:s}),s}async handle(e,t,n){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async o=>{await this.components.registrar.handle(o,t,n)}))}async unhandle(e){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async t=>{await this.components.registrar.unhandle(t)}))}async register(e,t){return this.components.registrar.register(e,t)}unregister(e){this.components.registrar.unregister(e)}async isDialable(e,t={}){return this.components.connectionManager.isDialable(e,t)}#e(e){let{detail:t}=e;if(t.id.toString()===this.peerId.toString()){this.log.error("peer discovery mechanism discovered self");return}this.components.peerStore.merge(t.id,{multiaddrs:t.multiaddrs}).catch(n=>{this.log.error(n)})}};async function mb(r={}){r.privateKey??=await jh("Ed25519");let e=new Ca({...await Fd(r),peerId:Jh(r.privateKey)});return r.start!==!1&&await e.start(),e}return Yp(gb);})();
+`));t.log.trace('handle: respond with "%s" for %s',e,o),await Nr(n,s,t),t.log.trace('handle: responded with "%s" for %s',e,o);continue}t.log('handle: respond with "na" for "%s"',o),await Nr(n,P(`na
+`),t),t.log('handle: responded with "na" for "%s"',o)}}var lb=500,Bu=class{id;remoteAddr;remotePeer;direction;timeline;multiplexer;encryption;status;limits;log;tags;_newStream;_close;_abort;_getStreams;constructor(e){let{remoteAddr:t,remotePeer:n,newStream:o,close:s,abort:i,getStreams:a}=e;this.id=`${parseInt(String(Math.random()*1e9)).toString(36)}${Date.now()}`,this.remoteAddr=t,this.remotePeer=n,this.direction=e.direction,this.status="open",this.timeline=e.timeline,this.multiplexer=e.multiplexer,this.encryption=e.encryption,this.limits=e.limits,this.log=e.logger.forComponent(`libp2p:connection:${this.direction}:${this.id}`),this.remoteAddr.getPeerId()==null&&(this.remoteAddr=this.remoteAddr.encapsulate(`/p2p/${this.remotePeer}`)),this._newStream=o,this._close=s,this._abort=i,this._getStreams=a,this.tags=[]}[Symbol.toStringTag]="Connection";[Du]=!0;get streams(){return this._getStreams()}async newStream(e,t){if(this.status==="closing")throw new Do("the connection is being closed");if(this.status==="closed")throw new Dr("the connection is closed");if(Array.isArray(e)||(e=[e]),this.limits!=null&&t?.runOnLimitedConnection!==!0)throw new Or("Cannot open protocol stream on limited connection");let n=await this._newStream(e,t);return n.direction="outbound",n}async close(e={}){if(!(this.status==="closed"||this.status==="closing")){if(this.log("closing connection to %a",this.remoteAddr),this.status="closing",e.signal==null){let t=AbortSignal.timeout(lb);ee(1/0,t),e={...e,signal:t}}try{this.log.trace("closing underlying transport"),await this._close(e),this.log.trace("updating timeline with close time"),this.status="closed",this.timeline.close=Date.now()}catch(t){this.log.error("error encountered during graceful close of connection to %a",this.remoteAddr,t),this.abort(t)}}}abort(e){this.status!=="closed"&&(this.log.error("aborting connection to %a due to error",this.remoteAddr,e),this.status="closing",this._abort(e),this.status="closed",this.timeline.close=Date.now())}};function Rp(r){return new Bu(r)}function hb(r,e){try{let{options:t}=e.getHandler(r);return t.maxInboundStreams}catch(t){if(t.name!=="UnhandledProtocolError")throw t}return xu}function db(r,e,t={}){try{let{options:n}=e.getHandler(r);if(n.maxOutboundStreams!=null)return n.maxOutboundStreams}catch(n){if(n.name!=="UnhandledProtocolError")throw n}return t.maxOutboundStreams??vu}function Dp(r,e,t){let n=0;return t.streams.forEach(o=>{o.direction===e&&o.protocol===r&&n++}),n}var Ca=class{components;connectionEncrypters;streamMuxers;inboundUpgradeTimeout;outboundUpgradeTimeout;inboundStreamProtocolNegotiationTimeout;outboundStreamProtocolNegotiationTimeout;events;metrics;constructor(e,t){this.components=e,this.connectionEncrypters=new Map,t.connectionEncrypters.forEach(n=>{this.connectionEncrypters.set(n.protocol,n)}),this.streamMuxers=new Map,t.streamMuxers.forEach(n=>{this.streamMuxers.set(n.protocol,n)}),this.inboundUpgradeTimeout=t.inboundUpgradeTimeout??3e3,this.outboundUpgradeTimeout=t.outboundUpgradeTimeout??3e3,this.inboundStreamProtocolNegotiationTimeout=t.inboundStreamProtocolNegotiationTimeout??2e3,this.outboundStreamProtocolNegotiationTimeout=t.outboundStreamProtocolNegotiationTimeout??2e3,this.events=e.events,this.metrics={dials:e.metrics?.registerCounterGroup("libp2p_connection_manager_dials_total"),errors:e.metrics?.registerCounterGroup("libp2p_connection_manager_dial_errors_total")}}[Symbol.toStringTag]="@libp2p/upgrader";async shouldBlockConnection(e,...t){let n=this.components.connectionGater[e];if(n==null)return;if(await n.apply(this.components.connectionGater,t)===!0)throw new qi(`The multiaddr connection is blocked by gater.${e}`)}async upgradeInbound(e,t={}){try{if(this.metrics.dials?.increment({inbound:!0}),!await this.components.connectionManager.acceptIncomingConnection(e))throw new zi("connection denied");return await this.shouldBlockConnection("denyInboundConnection",e),await this._performUpgrade(e,"inbound",t)}catch(n){throw this.metrics.errors?.increment({inbound:!0}),n}finally{this.components.connectionManager.afterUpgradeInbound()}}async upgradeOutbound(e,t={}){try{this.metrics.dials?.increment({outbound:!0});let n=e.remoteAddr.getPeerId(),o;return n!=null&&(o=yt(n),await this.shouldBlockConnection("denyOutboundConnection",o,e)),await this._performUpgrade(e,"outbound",t)}catch(n){throw this.metrics.errors?.increment({outbound:!0}),n}}async _performUpgrade(e,t,n){let o,s,i,a,c,u=AbortSignal.timeout(t==="inbound"?this.inboundUpgradeTimeout:this.outboundUpgradeTimeout),f=Ot([u,n.signal]);ee(1/0,u,f),n.signal=f,this.components.metrics?.trackMultiaddrConnection(e),e.log.trace("starting the %s connection upgrade",t);let l=e;if(n?.skipProtection!==!0){let d=this.components.connectionProtector;d!=null&&(e.log("protecting the %s connection",t),l=await d.protect(e,n))}try{if(o=l,n?.skipEncryption!==!0){n?.onProgress?.(new fe(`upgrader:encrypt-${t}-connection`)),{conn:o,remotePeer:s,protocol:c}=await(t==="inbound"?this._encryptInbound(l,{...n,signal:f}):this._encryptOutbound(l,{...n,signal:f}));let d={...l,...o};await this.shouldBlockConnection(t==="inbound"?"denyInboundEncryptedConnection":"denyOutboundEncryptedConnection",s,d)}else{let d=e.remoteAddr.getPeerId();if(d==null)throw new Vt(`${t} connection that skipped encryption must have a peer id`);let h=yt(d);c="native",s=h}if(s.equals(this.components.peerId)){let d=new Mr("Can not dial self");throw e.abort(d),d}if(i=o,n?.muxerFactory!=null)a=n.muxerFactory;else if(this.streamMuxers.size>0){n?.onProgress?.(new fe(`upgrader:multiplex-${t}-connection`));let d=await(t==="inbound"?this._multiplexInbound({...l,...o},this.streamMuxers,n):this._multiplexOutbound({...l,...o},this.streamMuxers,n));a=d.muxerFactory,i=d.stream}}catch(d){throw e.log.error("failed to upgrade inbound connection %s %a - %e",t==="inbound"?"from":"to",e.remoteAddr,d),d}finally{f.clear()}return await this.shouldBlockConnection(t==="inbound"?"denyInboundUpgradedConnection":"denyOutboundUpgradedConnection",s,e),e.log("successfully upgraded %s connection",t),this._createConnection({cryptoProtocol:c,direction:t,maConn:e,upgradedConn:i,muxerFactory:a,remotePeer:s,limits:n?.limits})}_createConnection(e){let{cryptoProtocol:t,direction:n,maConn:o,upgradedConn:s,remotePeer:i,muxerFactory:a,limits:c}=e,u,f,l;a!=null&&(u=a.createStreamMuxer({direction:n,onIncomingStream:p=>{l!=null&&Promise.resolve().then(async()=>{let m=this.components.registrar.getProtocols(),g=AbortSignal.timeout(this.inboundStreamProtocolNegotiationTimeout);ee(1/0,g);let{stream:y,protocol:b}=await Lo(p,m,{signal:g,log:p.log,yieldBytes:!1});if(l==null)return;l.log("incoming stream opened on %s",b);let w=hb(b,this.components.registrar);if(Dp(b,"inbound",l)===w){let A=new Ho(`Too many inbound protocol streams for protocol "${b}" - limit ${w}`);throw p.abort(A),A}p.source=y.source,p.sink=y.sink,p.protocol=b,y.closeWrite!=null&&(p.closeWrite=y.closeWrite),y.closeRead!=null&&(p.closeRead=y.closeRead),y.close!=null&&(p.close=y.close),await this.components.peerStore.merge(i,{protocols:[b]}),this.components.metrics?.trackProtocolStream(p,l),this._onStream({connection:l,stream:p,protocol:b})}).catch(async m=>{l.log.error("error handling incoming stream id %s - %e",p.id,m),p.timeline.close==null&&await p.close()})}}),f=async(p,m={})=>{if(u==null)throw new kr("Connection is not multiplexed");l.log.trace("starting new stream for protocols %s",p);let g=await u.newStream();l.log.trace("started new stream %s for protocols %s",g.id,p);try{if(m.signal==null){g.log("no abort signal was passed while trying to negotiate protocols %s falling back to default timeout",p);let A=AbortSignal.timeout(this.outboundStreamProtocolNegotiationTimeout);ee(1/0,A),m={...m,signal:A}}g.log.trace("selecting protocol from protocols %s",p);let{stream:y,protocol:b}=await ko(g,p,{...m,log:g.log,yieldBytes:!0});g.log.trace("selected protocol %s",b);let w=db(b,this.components.registrar,m),x=Dp(b,"outbound",l);if(x>=w){let A=new $o(`Too many outbound protocol streams for protocol "${b}" - ${x}/${w}`);throw g.abort(A),A}return await this.components.peerStore.merge(i,{protocols:[b]}),g.source=y.source,g.sink=y.sink,g.protocol=b,y.closeWrite!=null&&(g.closeWrite=y.closeWrite),y.closeRead!=null&&(g.closeRead=y.closeRead),y.close!=null&&(g.close=y.close),this.components.metrics?.trackProtocolStream(g,l),g}catch(y){throw l.log.error("could not create new outbound stream on connection %s %a for protocols %s - %e",n==="inbound"?"from":"to",e.maConn.remoteAddr,p,y),g.timeline.close==null&&g.abort(y),y}},Promise.all([u.sink(s.source),s.sink(u.source)]).catch(p=>{l.log.error("error piping data through muxer - %e",p)}));let d=o.timeline;o.timeline=new Proxy(d,{set:(...p)=>(p[1]==="close"&&p[2]!=null&&d.close==null&&(async()=>{try{l.status==="open"&&await l.close()}catch(m){l.log.error("error closing connection after timeline close %e",m)}finally{this.events.safeDispatchEvent("connection:close",{detail:l})}})().catch(m=>{l.log.error("error thrown while dispatching connection:close event %e",m)}),Reflect.set(...p))}),o.timeline.upgraded=Date.now();let h=()=>{throw new kr("Connection is not multiplexed")};return l=Rp({remoteAddr:o.remoteAddr,remotePeer:i,status:"open",direction:n,timeline:o.timeline,multiplexer:u?.protocol,encryption:t,limits:c,logger:this.components.logger,newStream:f??h,getStreams:()=>u?.streams??[],close:async p=>{await u?.close(p),await o.close(p)},abort:p=>{o.abort(p),u?.abort(p)}}),this.events.safeDispatchEvent("connection:open",{detail:l}),l.__maConnTimeline=d,l}_onStream(e){let{connection:t,stream:n,protocol:o}=e,{handler:s,options:i}=this.components.registrar.getHandler(o);if(t.limits!=null&&i.runOnLimitedConnection!==!0)throw new Or("Cannot open protocol stream on limited connection");s({connection:t,stream:n})}async _encryptInbound(e,t){let n=Array.from(this.connectionEncrypters.keys());try{let{stream:o,protocol:s}=await Lo(e,n,{...t,log:e.log}),i=this.connectionEncrypters.get(s);if(i==null)throw new Tr(`no crypto module found for ${s}`);return e.log("encrypting inbound connection to %a using %s",e.remoteAddr,s),{...await i.secureInbound(o,t),protocol:s}}catch(o){throw e.log.error("encrypting inbound connection from %a failed",e.remoteAddr,o),new Tr(o.message)}}async _encryptOutbound(e,t){let n=Array.from(this.connectionEncrypters.keys());try{e.log.trace("selecting encrypter from %s",n);let{stream:o,protocol:s}=await ko(e,n,{...t,log:e.log,yieldBytes:!0}),i=this.connectionEncrypters.get(s);if(i==null)throw new Tr(`no crypto module found for ${s}`);return e.log("encrypting outbound connection to %a using %s",e.remoteAddr,s),{...await i.secureOutbound(o,t),protocol:s}}catch(o){throw e.log.error("encrypting outbound connection to %a failed",e.remoteAddr,o),new Tr(o.message)}}async _multiplexOutbound(e,t,n){let o=Array.from(t.keys());e.log("outbound selecting muxer %s",o);try{e.log.trace("selecting stream muxer from %s",o);let{stream:s,protocol:i}=await ko(e,o,{...n,log:e.log,yieldBytes:!0});e.log("selected %s as muxer protocol",i);let a=t.get(i);return{stream:s,muxerFactory:a}}catch(s){throw e.log.error("error multiplexing outbound connection",s),new kr(String(s))}}async _multiplexInbound(e,t,n){let o=Array.from(t.keys());e.log("inbound handling muxers %s",o);try{let{stream:s,protocol:i}=await Lo(e,o,{...n,log:e.log}),a=t.get(i);return{stream:s,muxerFactory:a}}catch(s){throw e.log.error("error multiplexing inbound connection",s),new kr(String(s))}}};var Mp="0.0.0",Up="libp2p";var ka=class extends vt{peerId;peerStore;contentRouting;peerRouting;metrics;services;logger;status;components;log;constructor(e){super(),this.status="stopped";let t=new vt,n=t.dispatchEvent.bind(t);t.dispatchEvent=a=>{let c=n(a),u=this.dispatchEvent(new CustomEvent(a.type,{detail:a.detail}));return c||u},ee(1/0,t),this.peerId=e.peerId,this.logger=e.logger??Ei(),this.log=this.logger.forComponent("libp2p"),this.services={};let o=this.components=hp({peerId:e.peerId,privateKey:e.privateKey,nodeInfo:e.nodeInfo??{name:Up,version:Mp},logger:this.logger,events:t,datastore:e.datastore??new Ui,connectionGater:pp(e.connectionGater),dns:e.dns});this.peerStore=this.configureComponent("peerStore",cp(o,{addressFilter:this.components.connectionGater.filterMultiaddrForPeer,...e.peerStore})),e.metrics!=null&&(this.metrics=this.configureComponent("metrics",e.metrics(this.components))),o.events.addEventListener("peer:update",a=>{if(a.detail.previous==null){let c={id:a.detail.peer.id,multiaddrs:a.detail.peer.addresses.map(u=>u.multiaddr)};o.events.safeDispatchEvent("peer:discovery",{detail:c})}}),e.connectionProtector!=null&&this.configureComponent("connectionProtector",e.connectionProtector(o)),this.components.upgrader=new Ca(this.components,{connectionEncrypters:(e.connectionEncrypters??[]).map((a,c)=>this.configureComponent(`connection-encryption-${c}`,a(this.components))),streamMuxers:(e.streamMuxers??[]).map((a,c)=>this.configureComponent(`stream-muxers-${c}`,a(this.components))),inboundUpgradeTimeout:e.connectionManager?.inboundUpgradeTimeout,outboundUpgradeTimeout:e.connectionManager?.outboundUpgradeTimeout}),this.configureComponent("transportManager",new wa(this.components,e.transportManager)),this.configureComponent("connectionManager",new ca(this.components,e.connectionManager)),e.connectionMonitor?.enabled!==!1&&this.configureComponent("connectionMonitor",new ha(this.components,e.connectionMonitor)),this.configureComponent("registrar",new ya(this.components)),this.configureComponent("addressManager",new Oi(this.components,e.addresses));let s=(e.peerRouters??[]).map((a,c)=>this.configureComponent(`peer-router-${c}`,a(this.components)));this.peerRouting=this.components.peerRouting=this.configureComponent("peerRouting",new ma(this.components,{routers:s}));let i=(e.contentRouters??[]).map((a,c)=>this.configureComponent(`content-router-${c}`,a(this.components)));if(this.contentRouting=this.components.contentRouting=this.configureComponent("contentRouting",new da(this.components,{routers:i})),this.configureComponent("randomWalk",new ga(this.components)),(e.peerDiscovery??[]).forEach((a,c)=>{this.configureComponent(`peer-discovery-${c}`,a(this.components)).addEventListener("peer",f=>{this.#e(f)})}),e.transports?.forEach((a,c)=>{this.components.transportManager.add(this.configureComponent(`transport-${c}`,a(this.components)))}),e.services!=null)for(let a of Object.keys(e.services)){let c=e.services[a],u=c(this.components);if(u==null){this.log.error("service factory %s returned null or undefined instance",a);continue}this.services[a]=u,this.configureComponent(a,u),u[La]!=null&&(this.log("registering service %s for content routing",a),i.push(u[La])),u[Pa]!=null&&(this.log("registering service %s for peer routing",a),s.push(u[Pa])),u[Na]!=null&&(this.log("registering service %s for peer discovery",a),u[Na].addEventListener?.("peer",f=>{this.#e(f)}))}dp(o)}configureComponent(e,t){return t==null&&this.log.error("component %s was null or undefined",e),this.components[e]=t,t}async start(){if(this.status==="stopped"){this.status="starting",this.log("libp2p is starting");try{await this.components.beforeStart?.(),await this.components.start(),await this.components.afterStart?.(),this.status="started",this.safeDispatchEvent("start",{detail:this}),this.log("libp2p has started")}catch(e){throw this.log.error("An error occurred starting libp2p",e),this.status="started",await this.stop(),e}}}async stop(){this.status==="started"&&(this.log("libp2p is stopping"),this.status="stopping",await this.components.beforeStop?.(),await this.components.stop(),await this.components.afterStop?.(),this.status="stopped",this.safeDispatchEvent("stop",{detail:this}),this.log("libp2p has stopped"))}getConnections(e){return this.components.connectionManager.getConnections(e)}getDialQueue(){return this.components.connectionManager.getDialQueue()}getPeers(){let e=new vr;for(let t of this.components.connectionManager.getConnections())e.add(t.remotePeer);return Array.from(e)}async dial(e,t={}){return this.components.connectionManager.openConnection(e,{priority:75,...t})}async dialProtocol(e,t,n={}){if(t==null)throw new D("no protocols were provided to open a stream");if(t=Array.isArray(t)?t:[t],t.length===0)throw new D("no protocols were provided to open a stream");return(await this.dial(e,n)).newStream(t,n)}getMultiaddrs(){return this.components.addressManager.getAddresses()}getProtocols(){return this.components.registrar.getProtocols()}async hangUp(e,t={}){tr(e)&&(e=yt(e.getPeerId()??"")),await this.components.connectionManager.closeConnections(e,t)}async getPublicKey(e,t={}){if(this.log("getPublicKey %p",e),e.publicKey!=null)return e.publicKey;try{let i=await this.peerStore.get(e);if(i.id.publicKey!=null)return i.id.publicKey}catch(i){if(i.name!=="NotFoundError")throw i}let n=Fe([P("/pk/"),e.toMultihash().bytes]),o=await this.contentRouting.get(n,t),s=sn(o);return await this.peerStore.patch(e,{publicKey:s}),s}async handle(e,t,n){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async o=>{await this.components.registrar.handle(o,t,n)}))}async unhandle(e){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async t=>{await this.components.registrar.unhandle(t)}))}async register(e,t){return this.components.registrar.register(e,t)}unregister(e){this.components.registrar.unregister(e)}async isDialable(e,t={}){return this.components.connectionManager.isDialable(e,t)}#e(e){let{detail:t}=e;if(t.id.toString()===this.peerId.toString()){this.log.error("peer discovery mechanism discovered self");return}this.components.peerStore.merge(t.id,{multiaddrs:t.multiaddrs}).catch(n=>{this.log.error(n)})}};async function mb(r={}){r.privateKey??=await jh("Ed25519");let e=new ka({...await Fd(r),peerId:Jh(r.privateKey)});return r.start!==!1&&await e.start(),e}return Yp(gb);})();
 /*! Bundled license information:
 
 pvtsutils/build/index.js:
diff --git a/node_modules/libp2p/dist/src/connection-manager/connection-pruner.d.ts b/node_modules/libp2p/dist/src/connection-manager/connection-pruner.d.ts
index 69aa592..ec37a5a 100644
--- a/node_modules/libp2p/dist/src/connection-manager/connection-pruner.d.ts
+++ b/node_modules/libp2p/dist/src/connection-manager/connection-pruner.d.ts
@@ -23,11 +23,14 @@ export declare class ConnectionPruner {
     private readonly events;
     private readonly log;
     constructor(components: ConnectionPrunerComponents, init?: ConnectionPrunerInit);
+    start(): void;
+    stop(): void;
+    maybePruneConnections(): void;
     /**
      * If we have more connections than our maximum, select some excess connections
      * to prune based on peer value
      */
-    maybePruneConnections(): Promise<void>;
+    private _maybePruneConnections;
     sortConnections(connections: Connection[], peerValues: PeerMap<number>): Connection[];
 }
 export {};
diff --git a/node_modules/libp2p/dist/src/connection-manager/connection-pruner.d.ts.map b/node_modules/libp2p/dist/src/connection-manager/connection-pruner.d.ts.map
index 65a0c5d..68324ba 100644
--- a/node_modules/libp2p/dist/src/connection-manager/connection-pruner.d.ts.map
+++ b/node_modules/libp2p/dist/src/connection-manager/connection-pruner.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"connection-pruner.d.ts","sourceRoot":"","sources":["../../../src/connection-manager/connection-pruner.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,0BAA0B,CAAA;AAGlD,OAAO,KAAK,EAAE,YAAY,EAAU,eAAe,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AACvH,OAAO,KAAK,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAA;AACnE,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAExD,UAAU,oBAAoB;IAC5B,cAAc,CAAC,EAAE,MAAM,CAAA;IACvB,KAAK,CAAC,EAAE,SAAS,EAAE,CAAA;CACpB;AAED,UAAU,0BAA0B;IAClC,iBAAiB,EAAE,iBAAiB,CAAA;IACpC,SAAS,EAAE,SAAS,CAAA;IACpB,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,CAAA;IACtC,MAAM,EAAE,eAAe,CAAA;CACxB;AAOD;;GAEG;AACH,qBAAa,gBAAgB;IAC3B,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAQ;IACvC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAmB;IACrD,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAW;IACrC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAa;IACnC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAgC;IACvD,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;gBAEf,UAAU,EAAE,0BAA0B,EAAE,IAAI,GAAE,oBAAyB;IAiBpF;;;OAGG;IACG,qBAAqB,IAAK,OAAO,CAAC,IAAI,CAAC;IAwE7C,eAAe,CAAE,WAAW,EAAE,UAAU,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,UAAU,EAAE;CAyDvF"}
\ No newline at end of file
+{"version":3,"file":"connection-pruner.d.ts","sourceRoot":"","sources":["../../../src/connection-manager/connection-pruner.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,0BAA0B,CAAA;AAGlD,OAAO,KAAK,EAAE,YAAY,EAAU,eAAe,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AACvH,OAAO,KAAK,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAA;AACnE,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAExD,UAAU,oBAAoB;IAC5B,cAAc,CAAC,EAAE,MAAM,CAAA;IACvB,KAAK,CAAC,EAAE,SAAS,EAAE,CAAA;CACpB;AAED,UAAU,0BAA0B;IAClC,iBAAiB,EAAE,iBAAiB,CAAA;IACpC,SAAS,EAAE,SAAS,CAAA;IACpB,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,CAAA;IACtC,MAAM,EAAE,eAAe,CAAA;CACxB;AAOD;;GAEG;AACH,qBAAa,gBAAgB;IAC3B,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAQ;IACvC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAmB;IACrD,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAW;IACrC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAa;IACnC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAgC;IACvD,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAQ;gBAEf,UAAU,EAAE,0BAA0B,EAAE,IAAI,GAAE,oBAAyB;IAUpF,KAAK,IAAK,IAAI;IAId,IAAI,IAAK,IAAI;IAIb,qBAAqB,IAAK,IAAI;IAO9B;;;OAGG;YACW,sBAAsB;IAwEpC,eAAe,CAAE,WAAW,EAAE,UAAU,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,UAAU,EAAE;CAyDvF"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/connection-manager/connection-pruner.js b/node_modules/libp2p/dist/src/connection-manager/connection-pruner.js
index 39b37a5..be04444 100644
--- a/node_modules/libp2p/dist/src/connection-manager/connection-pruner.js
+++ b/node_modules/libp2p/dist/src/connection-manager/connection-pruner.js
@@ -22,19 +22,25 @@ export class ConnectionPruner {
         this.peerStore = components.peerStore;
         this.events = components.events;
         this.log = components.logger.forComponent('libp2p:connection-manager:connection-pruner');
-        // check the max connection limit whenever a peer connects
-        components.events.addEventListener('connection:open', () => {
-            this.maybePruneConnections()
-                .catch(err => {
-                this.log.error(err);
-            });
+        this.maybePruneConnections = this.maybePruneConnections.bind(this);
+    }
+    start() {
+        this.events.addEventListener('connection:open', this.maybePruneConnections);
+    }
+    stop() {
+        this.events.removeEventListener('connection:open', this.maybePruneConnections);
+    }
+    maybePruneConnections() {
+        this._maybePruneConnections()
+            .catch(err => {
+            this.log.error('error maybe pruning connections %e', err);
         });
     }
     /**
      * If we have more connections than our maximum, select some excess connections
      * to prune based on peer value
      */
-    async maybePruneConnections() {
+    async _maybePruneConnections() {
         const connections = this.connectionManager.getConnections();
         const numConnections = connections.length;
         this.log('checking max connections limit %d/%d', numConnections, this.maxConnections);
diff --git a/node_modules/libp2p/dist/src/connection-manager/connection-pruner.js.map b/node_modules/libp2p/dist/src/connection-manager/connection-pruner.js.map
index e5af780..3b688b8 100644
--- a/node_modules/libp2p/dist/src/connection-manager/connection-pruner.js.map
+++ b/node_modules/libp2p/dist/src/connection-manager/connection-pruner.js.map
@@ -1 +1 @@
-{"version":3,"file":"connection-pruner.js","sourceRoot":"","sources":["../../../src/connection-manager/connection-pruner.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"connection-pruner.js","sourceRoot":"","sources":["../../../src/connection-manager/connection-pruner.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/connection-manager/dial-queue.js b/node_modules/libp2p/dist/src/connection-manager/dial-queue.js
index aaa408d..98cbc6d 100644
--- a/node_modules/libp2p/dist/src/connection-manager/dial-queue.js
+++ b/node_modules/libp2p/dist/src/connection-manager/dial-queue.js
@@ -98,7 +98,7 @@ export class DialQueue {
                 return addr.equals(conn.remoteAddr);
             });
         });
-        if (existingConnection != null) {
+        if (existingConnection?.status === 'open') {
             this.log('already connected to %a', existingConnection.remoteAddr);
             options.onProgress?.(new CustomProgressEvent('dial-queue:already-connected'));
             return existingConnection;
diff --git a/node_modules/libp2p/dist/src/connection-manager/dial-queue.js.map b/node_modules/libp2p/dist/src/connection-manager/dial-queue.js.map
index f2bd8ab..72bcb48 100644
--- a/node_modules/libp2p/dist/src/connection-manager/dial-queue.js.map
+++ b/node_modules/libp2p/dist/src/connection-manager/dial-queue.js.map
@@ -1 +1 @@
-{"version":3,"file":"dial-queue.js","sourceRoot":"","sources":["../../../src/connection-manager/dial-queue.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"dial-queue.js","sourceRoot":"","sources":["../../../src/connection-manager/dial-queue.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/connection-manager/index.d.ts b/node_modules/libp2p/dist/src/connection-manager/index.d.ts
index cbdf1d1..e5a1238 100644
--- a/node_modules/libp2p/dist/src/connection-manager/index.d.ts
+++ b/node_modules/libp2p/dist/src/connection-manager/index.d.ts
@@ -158,7 +158,6 @@ export declare class DefaultConnectionManager implements ConnectionManager, Star
     private readonly peerId;
     constructor(components: DefaultConnectionManagerComponents, init?: ConnectionManagerInit);
     readonly [Symbol.toStringTag] = "@libp2p/connection-manager";
-    isStarted(): boolean;
     /**
      * Starts the Connection Manager. If Metrics are not enabled on libp2p
      * only event loop and connection limits will be monitored.
diff --git a/node_modules/libp2p/dist/src/connection-manager/index.d.ts.map b/node_modules/libp2p/dist/src/connection-manager/index.d.ts.map
index 33e7bf3..8c7470f 100644
--- a/node_modules/libp2p/dist/src/connection-manager/index.d.ts.map
+++ b/node_modules/libp2p/dist/src/connection-manager/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/connection-manager/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/connection-manager/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/connection-manager/index.js b/node_modules/libp2p/dist/src/connection-manager/index.js
index 2145496..aeb523d 100644
--- a/node_modules/libp2p/dist/src/connection-manager/index.js
+++ b/node_modules/libp2p/dist/src/connection-manager/index.js
@@ -1,4 +1,4 @@
-import { InvalidMultiaddrError, InvalidParametersError, InvalidPeerIdError, NotStartedError, start, stop } from '@libp2p/interface';
+import { ConnectionClosedError, InvalidMultiaddrError, InvalidParametersError, InvalidPeerIdError, NotStartedError, start, stop } from '@libp2p/interface';
 import { PeerMap } from '@libp2p/peer-collections';
 import { defaultAddressSort } from '@libp2p/utils/address-sort';
 import { RateLimiter } from '@libp2p/utils/rate-limiter';
@@ -53,8 +53,6 @@ export class DefaultConnectionManager {
         this.log = components.logger.forComponent('libp2p:connection-manager');
         this.onConnect = this.onConnect.bind(this);
         this.onDisconnect = this.onDisconnect.bind(this);
-        this.events.addEventListener('connection:open', this.onConnect);
-        this.events.addEventListener('connection:close', this.onDisconnect);
         // allow/deny lists
         this.allow = (init.allow ?? []).map(ma => multiaddr(ma));
         this.deny = (init.deny ?? []).map(ma => multiaddr(ma));
@@ -99,9 +97,6 @@ export class DefaultConnectionManager {
         });
     }
     [Symbol.toStringTag] = '@libp2p/connection-manager';
-    isStarted() {
-        return this.started;
-    }
     /**
      * Starts the Connection Manager. If Metrics are not enabled on libp2p
      * only event loop and connection limits will be monitored.
@@ -117,12 +112,7 @@ export class DefaultConnectionManager {
                 };
                 for (const conns of this.connections.values()) {
                     for (const conn of conns) {
-                        if (conn.direction === 'inbound') {
-                            metric.inbound++;
-                        }
-                        else {
-                            metric.outbound++;
-                        }
+                        metric[conn.direction]++;
                     }
                 }
                 return metric;
@@ -171,7 +161,9 @@ export class DefaultConnectionManager {
                 return metric;
             }
         });
-        await start(this.dialQueue, this.reconnectQueue);
+        this.events.addEventListener('connection:open', this.onConnect);
+        this.events.addEventListener('connection:close', this.onDisconnect);
+        await start(this.dialQueue, this.reconnectQueue, this.connectionPruner);
         this.started = true;
         this.log('started');
     }
@@ -179,7 +171,9 @@ export class DefaultConnectionManager {
      * Stops the Connection Manager
      */
     async stop() {
-        await stop(this.reconnectQueue, this.dialQueue);
+        this.events.removeEventListener('connection:open', this.onConnect);
+        this.events.removeEventListener('connection:close', this.onDisconnect);
+        await stop(this.reconnectQueue, this.dialQueue, this.connectionPruner);
         // Close all connections we're tracking
         const tasks = [];
         for (const connectionList of this.connections.values()) {
@@ -214,16 +208,16 @@ export class DefaultConnectionManager {
             await connection.close();
             return;
         }
-        const peerId = connection.remotePeer;
-        const storedConns = this.connections.get(peerId);
-        let isNewPeer = false;
-        if (storedConns != null) {
-            storedConns.push(connection);
-        }
-        else {
-            isNewPeer = true;
-            this.connections.set(peerId, [connection]);
+        if (connection.status !== 'open') {
+            // this can happen when the remote closes the connection immediately after
+            // opening
+            return;
         }
+        const peerId = connection.remotePeer;
+        const isNewPeer = !this.connections.has(peerId);
+        const storedConns = this.connections.get(peerId) ?? [];
+        storedConns.push(connection);
+        this.connections.set(peerId, storedConns);
         // only need to store RSA public keys, all other types are embedded in the peer id
         if (peerId.publicKey != null && peerId.type === 'RSA') {
             await this.peerStore.patch(peerId, {
@@ -239,18 +233,17 @@ export class DefaultConnectionManager {
      */
     onDisconnect(evt) {
         const { detail: connection } = evt;
-        if (!this.started) {
-            // This can happen when we are in the process of shutting down the node
-            return;
-        }
         const peerId = connection.remotePeer;
-        let storedConn = this.connections.get(peerId);
-        if (storedConn != null && storedConn.length > 1) {
-            storedConn = storedConn.filter((conn) => conn.id !== connection.id);
-            this.connections.set(peerId, storedConn);
-        }
-        else if (storedConn != null) {
+        const peerConns = this.connections.get(peerId) ?? [];
+        // remove closed connection
+        const filteredPeerConns = peerConns.filter(conn => conn.id !== connection.id);
+        // update peer connections
+        this.connections.set(peerId, filteredPeerConns);
+        if (filteredPeerConns.length === 0) {
+            // trigger disconnect event if no connections remain
+            this.log('onDisconnect remove all connections for peer %p', peerId);
             this.connections.delete(peerId);
+            // broadcast disconnect event
             this.events.safeDispatchEvent('peer:disconnect', { detail: connection.remotePeer });
         }
     }
@@ -268,7 +261,7 @@ export class DefaultConnectionManager {
         return this.connections;
     }
     async openConnection(peerIdOrMultiaddr, options = {}) {
-        if (!this.isStarted()) {
+        if (!this.started) {
             throw new NotStartedError('Not started');
         }
         options.signal?.throwIfAborted();
@@ -290,14 +283,13 @@ export class DefaultConnectionManager {
             ...options,
             priority: options.priority ?? DEFAULT_DIAL_PRIORITY
         });
-        if (connection.remotePeer.equals(this.peerId)) {
-            const err = new InvalidPeerIdError('Can not dial self');
-            connection.abort(err);
-            throw err;
+        if (connection.status !== 'open') {
+            throw new ConnectionClosedError('Remote closed connection during opening');
         }
         let peerConnections = this.connections.get(connection.remotePeer);
         if (peerConnections == null) {
             peerConnections = [];
+            this.log('openConnection add connections for peer %p', peerId);
             this.connections.set(connection.remotePeer, peerConnections);
         }
         // we get notified of connections via the Upgrader emitting "connection"
@@ -318,6 +310,7 @@ export class DefaultConnectionManager {
         if (!trackedConnection) {
             peerConnections.push(connection);
         }
+        this.log('openConnection updated connections for peer %p %s', peerId, peerConnections.map(c => `${c.id}/${c.direction}/${c.status}`));
         return connection;
     }
     async closeConnections(peerId, options = {}) {
diff --git a/node_modules/libp2p/dist/src/connection-manager/index.js.map b/node_modules/libp2p/dist/src/connection-manager/index.js.map
index 27b22c3..ba6e3d8 100644
--- a/node_modules/libp2p/dist/src/connection-manager/index.js.map
+++ b/node_modules/libp2p/dist/src/connection-manager/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/connection-manager/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/connection-manager/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/connection/index.d.ts.map b/node_modules/libp2p/dist/src/connection/index.d.ts.map
index e73d473..7580f08 100644
--- a/node_modules/libp2p/dist/src/connection/index.d.ts.map
+++ b/node_modules/libp2p/dist/src/connection/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/connection/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAA0F,MAAM,mBAAmB,CAAA;AAC5I,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAA;AAC/L,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAIxD,UAAU,cAAc;IACtB,UAAU,EAAE,SAAS,CAAA;IACrB,UAAU,EAAE,MAAM,CAAA;IAClB,SAAS,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,OAAO,CAAC,EAAE,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;IACvE,KAAK,CAAC,OAAO,CAAC,EAAE,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IAC5C,KAAK,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,CAAA;IACvB,UAAU,IAAI,MAAM,EAAE,CAAA;IACtB,MAAM,EAAE,gBAAgB,CAAA;IACxB,SAAS,EAAE,SAAS,CAAA;IACpB,QAAQ,EAAE,kBAAkB,CAAA;IAC5B,WAAW,CAAC,EAAE,MAAM,CAAA;IACpB,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,MAAM,CAAC,EAAE,gBAAgB,CAAA;IACzB,MAAM,EAAE,eAAe,CAAA;CACxB;AAED;;;GAGG;AACH,qBAAa,cAAe,YAAW,UAAU;IAC/C;;OAEG;IACH,SAAgB,EAAE,EAAE,MAAM,CAAA;IAE1B;;OAEG;IACH,SAAgB,UAAU,EAAE,SAAS,CAAA;IAErC;;OAEG;IACH,SAAgB,UAAU,EAAE,MAAM,CAAA;IAE3B,SAAS,EAAE,SAAS,CAAA;IACpB,QAAQ,EAAE,kBAAkB,CAAA;IAC5B,WAAW,CAAC,EAAE,MAAM,CAAA;IACpB,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,MAAM,EAAE,gBAAgB,CAAA;IACxB,MAAM,CAAC,EAAE,gBAAgB,CAAA;IAChC,SAAgB,GAAG,EAAE,MAAM,CAAA;IAE3B;;;OAGG;IACI,IAAI,EAAE,MAAM,EAAE,CAAA;IAErB;;OAEG;IACH,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAsE;IAEjG;;OAEG;IACH,OAAO,CAAC,QAAQ,CAAC,MAAM,CAA2C;IAElE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAsB;IAE7C;;OAEG;IACH,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAgB;IAE5C;;;OAGG;gBACU,IAAI,EAAE,cAAc;IAyBjC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,gBAAe;IAE5C,QAAQ,CAAC,CAAC,gBAAgB,CAAC,QAAO;IAElC;;OAEG;IACH,IAAI,OAAO,IAAK,MAAM,EAAE,CAEvB;IAED;;OAEG;IACG,SAAS,CAAE,SAAS,EAAE,MAAM,GAAG,MAAM,EAAE,EAAE,OAAO,CAAC,EAAE,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC;IAwB3F;;OAEG;IACG,KAAK,CAAE,OAAO,GAAE,YAAiB,GAAG,OAAO,CAAC,IAAI,CAAC;IA0CvD,KAAK,CAAE,GAAG,EAAE,KAAK,GAAG,IAAI;CAczB;AAED,wBAAgB,gBAAgB,CAAE,IAAI,EAAE,cAAc,GAAG,UAAU,CAElE"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/connection/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAA0F,MAAM,mBAAmB,CAAA;AAC5I,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAA;AAC/L,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAIxD,UAAU,cAAc;IACtB,UAAU,EAAE,SAAS,CAAA;IACrB,UAAU,EAAE,MAAM,CAAA;IAClB,SAAS,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,OAAO,CAAC,EAAE,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;IACvE,KAAK,CAAC,OAAO,CAAC,EAAE,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IAC5C,KAAK,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,CAAA;IACvB,UAAU,IAAI,MAAM,EAAE,CAAA;IACtB,MAAM,EAAE,gBAAgB,CAAA;IACxB,SAAS,EAAE,SAAS,CAAA;IACpB,QAAQ,EAAE,kBAAkB,CAAA;IAC5B,WAAW,CAAC,EAAE,MAAM,CAAA;IACpB,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,MAAM,CAAC,EAAE,gBAAgB,CAAA;IACzB,MAAM,EAAE,eAAe,CAAA;CACxB;AAED;;;GAGG;AACH,qBAAa,cAAe,YAAW,UAAU;IAC/C;;OAEG;IACH,SAAgB,EAAE,EAAE,MAAM,CAAA;IAE1B;;OAEG;IACH,SAAgB,UAAU,EAAE,SAAS,CAAA;IAErC;;OAEG;IACH,SAAgB,UAAU,EAAE,MAAM,CAAA;IAE3B,SAAS,EAAE,SAAS,CAAA;IACpB,QAAQ,EAAE,kBAAkB,CAAA;IAC5B,WAAW,CAAC,EAAE,MAAM,CAAA;IACpB,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,MAAM,EAAE,gBAAgB,CAAA;IACxB,MAAM,CAAC,EAAE,gBAAgB,CAAA;IAChC,SAAgB,GAAG,EAAE,MAAM,CAAA;IAE3B;;;OAGG;IACI,IAAI,EAAE,MAAM,EAAE,CAAA;IAErB;;OAEG;IACH,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAsE;IAEjG;;OAEG;IACH,OAAO,CAAC,QAAQ,CAAC,MAAM,CAA2C;IAElE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAsB;IAE7C;;OAEG;IACH,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAgB;IAE5C;;;OAGG;gBACU,IAAI,EAAE,cAAc;IAyBjC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,gBAAe;IAE5C,QAAQ,CAAC,CAAC,gBAAgB,CAAC,QAAO;IAElC;;OAEG;IACH,IAAI,OAAO,IAAK,MAAM,EAAE,CAEvB;IAED;;OAEG;IACG,SAAS,CAAE,SAAS,EAAE,MAAM,GAAG,MAAM,EAAE,EAAE,OAAO,CAAC,EAAE,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC;IAwB3F;;OAEG;IACG,KAAK,CAAE,OAAO,GAAE,YAAiB,GAAG,OAAO,CAAC,IAAI,CAAC;IAmCvD,KAAK,CAAE,GAAG,EAAE,KAAK,GAAG,IAAI;CAezB;AAED,wBAAgB,gBAAgB,CAAE,IAAI,EAAE,cAAc,GAAG,UAAU,CAElE"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/connection/index.js b/node_modules/libp2p/dist/src/connection/index.js
index 121f1ac..9517cd2 100644
--- a/node_modules/libp2p/dist/src/connection/index.js
+++ b/node_modules/libp2p/dist/src/connection/index.js
@@ -113,9 +113,6 @@ export class ConnectionImpl {
             };
         }
         try {
-            this.log.trace('closing all streams');
-            // close all streams gracefully - this can throw if we're not multiplexed
-            await Promise.all(this.streams.map(async (s) => s.close(options)));
             this.log.trace('closing underlying transport');
             // close raw connection
             await this._close(options);
@@ -129,14 +126,15 @@ export class ConnectionImpl {
         }
     }
     abort(err) {
+        if (this.status === 'closed') {
+            return;
+        }
         this.log.error('aborting connection to %a due to error', this.remoteAddr, err);
         this.status = 'closing';
-        this.streams.forEach(s => { s.abort(err); });
-        this.log.error('all streams aborted', this.streams.length);
         // Abort raw connection
         this._abort(err);
-        this.timeline.close = Date.now();
         this.status = 'closed';
+        this.timeline.close = Date.now();
     }
 }
 export function createConnection(init) {
diff --git a/node_modules/libp2p/dist/src/connection/index.js.map b/node_modules/libp2p/dist/src/connection/index.js.map
index 0bd4bea..ebf33db 100644
--- a/node_modules/libp2p/dist/src/connection/index.js.map
+++ b/node_modules/libp2p/dist/src/connection/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/connection/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/connection/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/upgrader.d.ts.map b/node_modules/libp2p/dist/src/upgrader.d.ts.map
index edd1c60..547ba96 100644
--- a/node_modules/libp2p/dist/src/upgrader.d.ts.map
+++ b/node_modules/libp2p/dist/src/upgrader.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"upgrader.d.ts","sourceRoot":"","sources":["../../src/upgrader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"upgrader.d.ts","sourceRoot":"","sources":["../../src/upgrader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/upgrader.js b/node_modules/libp2p/dist/src/upgrader.js
index c1dcdaf..69e102e 100644
--- a/node_modules/libp2p/dist/src/upgrader.js
+++ b/node_modules/libp2p/dist/src/upgrader.js
@@ -1,4 +1,4 @@
-import { InvalidMultiaddrError, TooManyInboundProtocolStreamsError, TooManyOutboundProtocolStreamsError, LimitedConnectionError, setMaxListeners } from '@libp2p/interface';
+import { InvalidMultiaddrError, TooManyInboundProtocolStreamsError, TooManyOutboundProtocolStreamsError, LimitedConnectionError, setMaxListeners, InvalidPeerIdError } from '@libp2p/interface';
 import * as mss from '@libp2p/multistream-select';
 import { peerIdFromString } from '@libp2p/peer-id';
 import { anySignal } from 'any-signal';
@@ -186,6 +186,13 @@ export class DefaultUpgrader {
                 cryptoProtocol = 'native';
                 remotePeer = remotePeerId;
             }
+            // this can happen if we dial a multiaddr without a peer id, we only find
+            // out the identity of the remote after the connection is encrypted
+            if (remotePeer.equals(this.components.peerId)) {
+                const err = new InvalidPeerIdError('Can not dial self');
+                maConn.abort(err);
+                throw err;
+            }
             upgradedConn = encryptedConn;
             if (opts?.muxerFactory != null) {
                 muxerFactory = opts.muxerFactory;
@@ -210,6 +217,9 @@ export class DefaultUpgrader {
             maConn.log.error('failed to upgrade inbound connection %s %a - %e', direction === 'inbound' ? 'from' : 'to', maConn.remoteAddr, err);
             throw err;
         }
+        finally {
+            signal.clear();
+        }
         await this.shouldBlockConnection(direction === 'inbound' ? 'denyInboundUpgradedConnection' : 'denyOutboundUpgradedConnection', remotePeer, maConn);
         maConn.log('successfully upgraded %s connection', direction);
         return this._createConnection({
@@ -368,7 +378,7 @@ export class DefaultUpgrader {
         const _timeline = maConn.timeline;
         maConn.timeline = new Proxy(_timeline, {
             set: (...args) => {
-                if (connection != null && args[1] === 'close' && args[2] != null && _timeline.close == null) {
+                if (args[1] === 'close' && args[2] != null && _timeline.close == null) {
                     // Wait for close to finish before notifying of the closure
                     (async () => {
                         try {
@@ -377,7 +387,7 @@ export class DefaultUpgrader {
                             }
                         }
                         catch (err) {
-                            connection.log.error('error closing connection after timeline close', err);
+                            connection.log.error('error closing connection after timeline close %e', err);
                         }
                         finally {
                             this.events.safeDispatchEvent('connection:close', {
@@ -385,7 +395,7 @@ export class DefaultUpgrader {
                             });
                         }
                     })().catch(err => {
-                        connection.log.error('error thrown while dispatching connection:close event', err);
+                        connection.log.error('error thrown while dispatching connection:close event %e', err);
                     });
                 }
                 return Reflect.set(...args);
@@ -407,34 +417,26 @@ export class DefaultUpgrader {
             limits,
             logger: this.components.logger,
             newStream: newStream ?? errConnectionNotMultiplexed,
-            getStreams: () => { if (muxer != null) {
-                return muxer.streams;
-            }
-            else {
-                return [];
-            } },
+            getStreams: () => {
+                return muxer?.streams ?? [];
+            },
             close: async (options) => {
-                // Ensure remaining streams are closed gracefully
-                if (muxer != null) {
-                    connection.log.trace('close muxer');
-                    await muxer.close(options);
-                }
-                connection.log.trace('close maconn');
+                // ensure remaining streams are closed gracefully
+                await muxer?.close(options);
                 // close the underlying transport
                 await maConn.close(options);
-                connection.log.trace('closed maconn');
             },
             abort: (err) => {
                 maConn.abort(err);
-                // Ensure remaining streams are aborted
-                if (muxer != null) {
-                    muxer.abort(err);
-                }
+                // ensure remaining streams are aborted
+                muxer?.abort(err);
             }
         });
         this.events.safeDispatchEvent('connection:open', {
             detail: connection
         });
+        // @ts-expect-error nah
+        connection.__maConnTimeline = _timeline;
         return connection;
     }
     /**
diff --git a/node_modules/libp2p/dist/src/upgrader.js.map b/node_modules/libp2p/dist/src/upgrader.js.map
index 06e33e9..c6acca2 100644
--- a/node_modules/libp2p/dist/src/upgrader.js.map
+++ b/node_modules/libp2p/dist/src/upgrader.js.map
@@ -1 +1 @@
-{"version":3,"file":"upgrader.js","sourceRoot":"","sources":["../../src/upgrader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"upgrader.js","sourceRoot":"","sources":["../../src/upgrader.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/version.d.ts b/node_modules/libp2p/dist/src/version.d.ts
index e4c7717..d5e4825 100644
--- a/node_modules/libp2p/dist/src/version.d.ts
+++ b/node_modules/libp2p/dist/src/version.d.ts
@@ -1,3 +1,3 @@
-export declare const version = "2.1.3";
+export declare const version = "0.0.0";
 export declare const name = "libp2p";
 //# sourceMappingURL=version.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/src/version.js b/node_modules/libp2p/dist/src/version.js
index 7290799..b68fea0 100644
--- a/node_modules/libp2p/dist/src/version.js
+++ b/node_modules/libp2p/dist/src/version.js
@@ -1,3 +1,3 @@
-export const version = '2.1.3';
+export const version = '0.0.0';
 export const name = 'libp2p';
 //# sourceMappingURL=version.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts b/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts
new file mode 100644
index 0000000..985b1d1
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=address-manager.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts.map b/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts.map
new file mode 100644
index 0000000..ac1f6fc
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/address-manager.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"address-manager.spec.d.ts","sourceRoot":"","sources":["../../../test/addresses/address-manager.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/address-manager.spec.js b/node_modules/libp2p/dist/test/addresses/address-manager.spec.js
new file mode 100644
index 0000000..d26fa71
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/address-manager.spec.js
@@ -0,0 +1,194 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { DefaultAddressManager } from '../../src/address-manager/index.js';
+const listenAddresses = ['/ip4/127.0.0.1/tcp/15006/ws', '/ip4/127.0.0.1/tcp/15008/ws'];
+const announceAddreses = ['/dns4/peer.io'];
+describe('Address Manager', () => {
+    let peerId;
+    let peerStore;
+    let events;
+    beforeEach(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        peerStore = stubInterface({
+            patch: Sinon.stub().resolves({})
+        });
+        events = new TypedEventEmitter();
+    });
+    it('should not need any addresses', () => {
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface()
+        });
+        expect(am.getListenAddrs()).to.be.empty();
+        expect(am.getAnnounceAddrs()).to.be.empty();
+    });
+    it('should return listen multiaddrs on get', () => {
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface(),
+            listen: listenAddresses
+        });
+        expect(am.getListenAddrs()).to.have.lengthOf(listenAddresses.length);
+        expect(am.getAnnounceAddrs()).to.be.empty();
+        const listenMultiaddrs = am.getListenAddrs();
+        expect(listenMultiaddrs.length).to.equal(2);
+        expect(listenMultiaddrs[0].equals(multiaddr(listenAddresses[0]))).to.equal(true);
+        expect(listenMultiaddrs[1].equals(multiaddr(listenAddresses[1]))).to.equal(true);
+    });
+    it('should return announce multiaddrs on get', () => {
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface(),
+            listen: listenAddresses,
+            announce: announceAddreses
+        });
+        expect(am.getListenAddrs()).to.have.lengthOf(listenAddresses.length);
+        expect(am.getAnnounceAddrs()).to.have.lengthOf(announceAddreses.length);
+        const announceMultiaddrs = am.getAnnounceAddrs();
+        expect(announceMultiaddrs.length).to.equal(1);
+        expect(announceMultiaddrs[0].equals(multiaddr(announceAddreses[0]))).to.equal(true);
+    });
+    it('should add observed addresses', () => {
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        am.addObservedAddr(multiaddr('/ip4/123.123.123.123/tcp/39201'));
+        expect(am.getObservedAddrs()).to.have.lengthOf(1);
+    });
+    it('should allow duplicate listen addresses', () => {
+        const ma = multiaddr('/ip4/0.0.0.0/tcp/0');
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface(),
+            listen: [
+                ma.toString(),
+                ma.toString()
+            ]
+        });
+        expect(am.getListenAddrs()).to.deep.equal([
+            ma,
+            ma
+        ]);
+    });
+    it('should dedupe added observed addresses', () => {
+        const ma = multiaddr('/ip4/123.123.123.123/tcp/39201');
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            announceFilter: stubInterface()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        am.addObservedAddr(ma);
+        am.addObservedAddr(ma);
+        am.addObservedAddr(ma);
+        expect(am.getObservedAddrs()).to.have.lengthOf(1);
+        expect(am.getObservedAddrs().map(ma => ma.toString())).to.include(ma.toString());
+    });
+    it('should only set addresses once', async () => {
+        const ma = '/ip4/123.123.123.123/tcp/39201';
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager: stubInterface({
+                getAddrs: Sinon.stub().returns([])
+            }),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        am.confirmObservedAddr(multiaddr(ma));
+        am.confirmObservedAddr(multiaddr(ma));
+        am.confirmObservedAddr(multiaddr(ma));
+        am.confirmObservedAddr(multiaddr(`${ma.toString()}/p2p/${peerId.toString()}`));
+        // wait for address manager _updatePeerStoreAddresses debounce
+        await delay(1500);
+        expect(peerStore.patch).to.have.property('callCount', 1);
+    });
+    it('should strip our peer address from added observed addresses', () => {
+        const ma = multiaddr('/ip4/123.123.123.123/tcp/39201');
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        am.addObservedAddr(ma);
+        am.addObservedAddr(multiaddr(`${ma.toString()}/p2p/${peerId.toString()}`));
+        expect(am.getObservedAddrs()).to.have.lengthOf(1);
+        expect(am.getObservedAddrs().map(ma => ma.toString())).to.include(ma.toString());
+    });
+    it('should strip our peer address from added observed addresses in difference formats', () => {
+        const ma = multiaddr('/ip4/123.123.123.123/tcp/39201');
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager: stubInterface(),
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+        expect(am.getObservedAddrs()).to.be.empty();
+        am.addObservedAddr(ma);
+        am.addObservedAddr(multiaddr(`${ma.toString()}/p2p/${peerId.toString()}`));
+        expect(am.getObservedAddrs()).to.have.lengthOf(1);
+        expect(am.getObservedAddrs().map(ma => ma.toString())).to.include(ma.toString());
+    });
+    it('should not add our peer id to path multiaddrs', () => {
+        const ma = '/unix/foo/bar/baz';
+        const transportManager = stubInterface();
+        const am = new DefaultAddressManager({
+            peerId,
+            transportManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        }, {
+            listen: [ma],
+            announce: []
+        });
+        transportManager.getAddrs.returns([multiaddr(ma)]);
+        const addrs = am.getAddresses();
+        expect(addrs).to.have.lengthOf(1);
+        expect(addrs[0].toString()).to.not.include(`/p2p/${peerId.toString()}`);
+    });
+});
+//# sourceMappingURL=address-manager.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/address-manager.spec.js.map b/node_modules/libp2p/dist/test/addresses/address-manager.spec.js.map
new file mode 100644
index 0000000..b123cd3
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/address-manager.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"address-manager.spec.js","sourceRoot":"","sources":["../../../test/addresses/address-manager.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/addresses.node.d.ts b/node_modules/libp2p/dist/test/addresses/addresses.node.d.ts
new file mode 100644
index 0000000..8e88d60
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/addresses.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=addresses.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/addresses.node.d.ts.map b/node_modules/libp2p/dist/test/addresses/addresses.node.d.ts.map
new file mode 100644
index 0000000..de6ec2b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/addresses.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"addresses.node.d.ts","sourceRoot":"","sources":["../../../test/addresses/addresses.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/addresses.node.js b/node_modules/libp2p/dist/test/addresses/addresses.node.js
new file mode 100644
index 0000000..384d35a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/addresses.node.js
@@ -0,0 +1,222 @@
+/* eslint-env mocha */
+import { plaintext } from '@libp2p/plaintext';
+import { isLoopback } from '@libp2p/utils/multiaddr/is-loopback';
+import { webSockets } from '@libp2p/websockets';
+import { multiaddr, protocols } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { pEvent } from 'p-event';
+import sinon from 'sinon';
+import { createNode } from '../fixtures/creators/peer.js';
+import { getComponent } from '../fixtures/get-component.js';
+import { AddressesOptions } from './utils.js';
+const listenAddresses = ['/ip4/127.0.0.1/tcp/0', '/ip4/127.0.0.1/tcp/8000/ws'];
+const announceAddresses = ['/dns4/peer.io/tcp/433/p2p/12D3KooWNvSZnPi3RrhrTwEY4LuuBeB6K6facKUCJcyWG1aoDd2p'];
+describe('libp2p.addressManager', () => {
+    let libp2p;
+    afterEach(async () => {
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+    });
+    it('should keep listen addresses after start, even if changed', async () => {
+        libp2p = await createNode({
+            started: false,
+            config: {
+                ...AddressesOptions,
+                addresses: {
+                    listen: listenAddresses,
+                    announce: announceAddresses
+                }
+            }
+        });
+        const addressManager = getComponent(libp2p, 'addressManager');
+        let listenAddrs = addressManager.getListenAddrs().map(ma => ma.toString());
+        expect(listenAddrs).to.have.lengthOf(listenAddresses.length);
+        expect(listenAddrs).to.include(listenAddresses[0]);
+        expect(listenAddrs).to.include(listenAddresses[1]);
+        // Should not replace listen addresses after transport listen
+        // Only transportManager has visibility of the port used
+        await libp2p.start();
+        listenAddrs = addressManager.getListenAddrs().map(ma => ma.toString());
+        expect(listenAddrs).to.have.lengthOf(listenAddresses.length);
+        expect(listenAddrs).to.include(listenAddresses[0]);
+        expect(listenAddrs).to.include(listenAddresses[1]);
+    });
+    it('should announce transport listen addresses if announce addresses are not provided', async () => {
+        libp2p = await createNode({
+            started: false,
+            config: {
+                ...AddressesOptions,
+                addresses: {
+                    listen: listenAddresses
+                }
+            }
+        });
+        await libp2p.start();
+        const tmListen = getComponent(libp2p, 'transportManager').getAddrs().map((ma) => ma.toString());
+        // Announce 2 listen (transport)
+        const advertiseMultiaddrs = getComponent(libp2p, 'addressManager').getAddresses().map((ma) => ma.decapsulateCode(protocols('p2p').code).toString());
+        expect(advertiseMultiaddrs).to.have.lengthOf(2);
+        tmListen.forEach((m) => {
+            expect(advertiseMultiaddrs).to.include(m);
+        });
+        expect(advertiseMultiaddrs).to.not.include(listenAddresses[0]); // Random Port switch
+    });
+    it('should only announce the given announce addresses when provided', async () => {
+        libp2p = await createNode({
+            started: false,
+            config: {
+                ...AddressesOptions,
+                addresses: {
+                    listen: listenAddresses,
+                    announce: announceAddresses
+                }
+            }
+        });
+        await libp2p.start();
+        const tmListen = getComponent(libp2p, 'transportManager').getAddrs().map((ma) => ma.toString());
+        // Announce 1 announce addr
+        const advertiseMultiaddrs = getComponent(libp2p, 'addressManager').getAddresses().map((ma) => ma.decapsulateCode(protocols('p2p').code).toString());
+        expect(advertiseMultiaddrs.length).to.equal(announceAddresses.length);
+        advertiseMultiaddrs.forEach((m) => {
+            expect(tmListen).to.not.include(m);
+            expect(announceAddresses).to.include(m);
+        });
+    });
+    it('can filter out loopback addresses by the announce filter', async () => {
+        libp2p = await createNode({
+            started: false,
+            config: {
+                ...AddressesOptions,
+                addresses: {
+                    listen: listenAddresses,
+                    announceFilter: (multiaddrs) => multiaddrs.filter(m => !isLoopback(m))
+                }
+            }
+        });
+        await libp2p.start();
+        expect(getComponent(libp2p, 'addressManager').getAddresses()).to.have.lengthOf(0);
+        // Stub transportManager addresses to add a public address
+        const stubMa = multiaddr('/ip4/120.220.10.1/tcp/1000');
+        sinon.stub(getComponent(libp2p, 'transportManager'), 'getAddrs').returns([
+            ...listenAddresses.map((a) => multiaddr(a)),
+            stubMa
+        ]);
+        const multiaddrs = getComponent(libp2p, 'addressManager').getAddresses();
+        expect(multiaddrs.length).to.equal(1);
+        expect(multiaddrs[0].decapsulateCode(protocols('p2p').code).equals(stubMa)).to.eql(true);
+    });
+    it('can filter out loopback addresses to announced by the announce filter', async () => {
+        libp2p = await createNode({
+            started: false,
+            config: {
+                ...AddressesOptions,
+                addresses: {
+                    listen: listenAddresses,
+                    announce: announceAddresses,
+                    announceFilter: (multiaddrs) => multiaddrs.filter(m => !isLoopback(m))
+                }
+            }
+        });
+        const listenAddrs = getComponent(libp2p, 'addressManager').getListenAddrs().map((ma) => ma.toString());
+        expect(listenAddrs).to.have.lengthOf(listenAddresses.length);
+        expect(listenAddrs).to.include(listenAddresses[0]);
+        expect(listenAddrs).to.include(listenAddresses[1]);
+        await libp2p.start();
+        const loopbackAddrs = getComponent(libp2p, 'addressManager').getAddresses().filter(ma => isLoopback(ma));
+        expect(loopbackAddrs).to.be.empty();
+    });
+    it('should include observed addresses in returned multiaddrs', async () => {
+        libp2p = await createNode({
+            started: false,
+            config: {
+                ...AddressesOptions,
+                addresses: {
+                    listen: listenAddresses
+                }
+            }
+        });
+        const ma = '/ip4/83.32.123.53/tcp/43928';
+        await libp2p.start();
+        const addressManager = getComponent(libp2p, 'addressManager');
+        expect(addressManager.getAddresses()).to.have.lengthOf(listenAddresses.length);
+        addressManager.confirmObservedAddr(multiaddr(ma));
+        expect(addressManager.getAddresses()).to.have.lengthOf(listenAddresses.length + 1);
+        expect(addressManager.getAddresses().map(ma => ma.decapsulateCode(protocols('p2p').code).toString())).to.include(ma);
+    });
+    it('should populate the AddressManager from the config', async () => {
+        libp2p = await createNode({
+            started: false,
+            config: {
+                addresses: {
+                    listen: listenAddresses,
+                    announce: announceAddresses
+                },
+                transports: [
+                    webSockets()
+                ],
+                connectionEncrypters: [
+                    plaintext()
+                ]
+            }
+        });
+        expect(libp2p.getMultiaddrs().map(ma => ma.decapsulateCode(protocols('p2p').code).toString())).to.have.members(announceAddresses);
+        expect(libp2p.getMultiaddrs().map(ma => ma.decapsulateCode(protocols('p2p').code).toString())).to.not.have.members(listenAddresses);
+    });
+    it('should update our peer record with announce addresses on startup', async () => {
+        libp2p = await createNode({
+            started: false,
+            config: {
+                addresses: {
+                    listen: listenAddresses,
+                    announce: announceAddresses
+                },
+                transports: [
+                    webSockets()
+                ],
+                connectionEncrypters: [
+                    plaintext()
+                ]
+            }
+        });
+        const eventPromise = pEvent(libp2p, 'self:peer:update', {
+            filter: (event) => {
+                return event.detail.peer.addresses.map(({ multiaddr }) => multiaddr.toString())
+                    .includes(announceAddresses[0]);
+            }
+        });
+        await libp2p.start();
+        const event = await eventPromise;
+        expect(event.detail.peer.addresses.map(({ multiaddr }) => multiaddr.toString()))
+            .to.include.members(announceAddresses, 'peer info did not include announce addresses');
+    });
+    it('should only include confirmed observed addresses in peer record', async () => {
+        libp2p = await createNode({
+            started: false,
+            config: {
+                addresses: {
+                    listen: listenAddresses,
+                    announce: announceAddresses
+                },
+                transports: [
+                    webSockets()
+                ],
+                connectionEncrypters: [
+                    plaintext()
+                ]
+            }
+        });
+        await libp2p.start();
+        const eventPromise = pEvent(libp2p, 'self:peer:update');
+        const unconfirmedAddress = multiaddr('/ip4/127.0.0.1/tcp/4010/ws');
+        getComponent(libp2p, 'addressManager').addObservedAddr(unconfirmedAddress);
+        const confirmedAddress = multiaddr('/ip4/127.0.0.1/tcp/4011/ws');
+        getComponent(libp2p, 'addressManager').confirmObservedAddr(confirmedAddress);
+        const event = await eventPromise;
+        expect(event.detail.peer.addresses.map(({ multiaddr }) => multiaddr.toString()))
+            .to.not.include(unconfirmedAddress.toString(), 'peer info included unconfirmed observed address');
+        expect(event.detail.peer.addresses.map(({ multiaddr }) => multiaddr.toString()))
+            .to.include(confirmedAddress.toString(), 'peer info did not include confirmed observed address');
+    });
+});
+//# sourceMappingURL=addresses.node.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/addresses.node.js.map b/node_modules/libp2p/dist/test/addresses/addresses.node.js.map
new file mode 100644
index 0000000..cf90efe
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/addresses.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"addresses.node.js","sourceRoot":"","sources":["../../../test/addresses/addresses.node.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/utils.d.ts b/node_modules/libp2p/dist/test/addresses/utils.d.ts
new file mode 100644
index 0000000..fe756c8
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/utils.d.ts
@@ -0,0 +1,2 @@
+export declare const AddressesOptions: import("../../src/index.js").Libp2pOptions<Record<string, unknown>>;
+//# sourceMappingURL=utils.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/utils.d.ts.map b/node_modules/libp2p/dist/test/addresses/utils.d.ts.map
new file mode 100644
index 0000000..887bb9f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../test/addresses/utils.ts"],"names":[],"mappings":"AAIA,eAAO,MAAM,gBAAgB,qEAK3B,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/utils.js b/node_modules/libp2p/dist/test/addresses/utils.js
new file mode 100644
index 0000000..5329e43
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/utils.js
@@ -0,0 +1,10 @@
+import { tcp } from '@libp2p/tcp';
+import { webSockets } from '@libp2p/websockets';
+import { createBaseOptions } from '../fixtures/base-options.js';
+export const AddressesOptions = createBaseOptions({
+    transports: [
+        tcp(),
+        webSockets()
+    ]
+});
+//# sourceMappingURL=utils.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/addresses/utils.js.map b/node_modules/libp2p/dist/test/addresses/utils.js.map
new file mode 100644
index 0000000..d4fc623
--- /dev/null
+++ b/node_modules/libp2p/dist/test/addresses/utils.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../test/addresses/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AACjC,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAA;AAE/D,MAAM,CAAC,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;IAChD,UAAU,EAAE;QACV,GAAG,EAAE;QACL,UAAU,EAAE;KACb;CACF,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts
new file mode 100644
index 0000000..66141c1
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=connection-pruner.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts.map
new file mode 100644
index 0000000..a3c7ff3
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection-pruner.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/connection-pruner.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js
new file mode 100644
index 0000000..eb2205a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js
@@ -0,0 +1,80 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { PeerMap } from '@libp2p/peer-collections';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import { stubInterface } from 'sinon-ts';
+import { ConnectionPruner } from '../../src/connection-manager/connection-pruner.js';
+describe('connection-pruner', () => {
+    let pruner;
+    let components;
+    beforeEach(() => {
+        components = {
+            connectionManager: stubInterface(),
+            peerStore: stubInterface(),
+            events: new TypedEventEmitter()
+        };
+        pruner = new ConnectionPruner({
+            ...components,
+            logger: defaultLogger()
+        }, {});
+    });
+    it('should sort connections for pruning, closing connections without streams first unless they are tagged', async () => {
+        const tagged = ['tagged', 'untagged'];
+        const streams = ['streams', 'no-streams'];
+        const direction = ['inbound', 'outbound'];
+        const age = ['old', 'new'];
+        const connections = [];
+        const peerValues = new PeerMap();
+        for (const t of tagged) {
+            for (const s of streams) {
+                for (const d of direction) {
+                    for (const a of age) {
+                        const connection = stubInterface({
+                            id: `${t}-${s}-${d}-${a}`,
+                            remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                            streams: s === 'streams'
+                                ? [stubInterface()]
+                                : [],
+                            direction: d === 'inbound' ? 'inbound' : 'outbound',
+                            timeline: {
+                                open: a === 'old' ? 0 : (Date.now() - 100)
+                            }
+                        });
+                        // eslint-disable-next-line max-depth
+                        if (t === 'tagged') {
+                            peerValues.set(connection.remotePeer, 100);
+                        }
+                        connections.push(connection);
+                    }
+                }
+            }
+        }
+        // priority is:
+        // 1. tagged peers
+        // 2. connections with streams
+        // 3. outbound connections
+        // 4. longer-lived connections
+        expect(pruner.sortConnections(connections.sort((a, b) => Math.random() > 0.5 ? -1 : 1), peerValues).map(conn => conn.id))
+            .to.deep.equal([
+            'untagged-no-streams-inbound-new',
+            'untagged-no-streams-inbound-old',
+            'untagged-no-streams-outbound-new',
+            'untagged-no-streams-outbound-old',
+            'untagged-streams-inbound-new',
+            'untagged-streams-inbound-old',
+            'untagged-streams-outbound-new',
+            'untagged-streams-outbound-old',
+            'tagged-no-streams-inbound-new',
+            'tagged-no-streams-inbound-old',
+            'tagged-no-streams-outbound-new',
+            'tagged-no-streams-outbound-old',
+            'tagged-streams-inbound-new',
+            'tagged-streams-inbound-old',
+            'tagged-streams-outbound-new',
+            'tagged-streams-outbound-old'
+        ]);
+    });
+});
+//# sourceMappingURL=connection-pruner.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js.map
new file mode 100644
index 0000000..225c950
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/connection-pruner.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"connection-pruner.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/connection-pruner.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts
new file mode 100644
index 0000000..9a6ef47
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=dial-queue.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts.map
new file mode 100644
index 0000000..a7f5a26
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"dial-queue.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/dial-queue.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js
new file mode 100644
index 0000000..30e9845
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js
@@ -0,0 +1,260 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { NotFoundError } from '@libp2p/interface';
+import { matchMultiaddr } from '@libp2p/interface-compliance-tests/matchers';
+import { mockConnection, mockDuplex, mockMultiaddrConnection } from '@libp2p/interface-compliance-tests/mocks';
+import { peerLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr, resolvers } from '@multiformats/multiaddr';
+import { WebRTC } from '@multiformats/multiaddr-matcher';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import pDefer from 'p-defer';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { DialQueue } from '../../src/connection-manager/dial-queue.js';
+describe('dial queue', () => {
+    let components;
+    let dialer;
+    beforeEach(async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components = {
+            peerId,
+            peerStore: stubInterface(),
+            peerRouting: stubInterface(),
+            transportManager: stubInterface(),
+            connectionGater: stubInterface(),
+            logger: peerLogger(peerId)
+        };
+    });
+    afterEach(() => {
+        if (dialer != null) {
+            dialer.stop();
+        }
+        sinon.reset();
+    });
+    it('should end when a single multiaddr dials succeeds', async () => {
+        const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIdFromPrivateKey(await generateKeyPair('Ed25519'))));
+        const deferredConn = pDefer();
+        const actions = {
+            '/ip4/127.0.0.1/tcp/1231': async () => Promise.reject(new Error('dial failure')),
+            '/ip4/127.0.0.1/tcp/1232': async () => Promise.resolve(connection),
+            '/ip4/127.0.0.1/tcp/1233': async () => deferredConn.promise
+        };
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma) => {
+            const maStr = ma.toString();
+            const action = actions[maStr];
+            if (action != null) {
+                return action();
+            }
+            throw new Error(`No action found for multiaddr ${maStr}`);
+        });
+        dialer = new DialQueue(components, {
+            maxParallelDials: 2
+        });
+        // Make sure that dial attempt comes back before terminating last dial action
+        await expect(dialer.dial(Object.keys(actions).map(str => multiaddr(str))))
+            .to.eventually.equal(connection);
+        // End third dial attempt
+        deferredConn.resolve();
+        // prevent playwright-core error Error: Cannot find parent object page@... to create handle@...
+        await expect(deferredConn.promise).to.eventually.be.undefined();
+    });
+    it('should load addresses from the peer routing when peer id is not in the peer store', async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIdFromPrivateKey(await generateKeyPair('Ed25519'))));
+        const ma = multiaddr('/ip4/127.0.0.1/tcp/4001');
+        components.peerStore.get.withArgs(peerId).rejects(new NotFoundError('Not found'));
+        components.peerRouting.findPeer.withArgs(peerId).resolves({
+            id: peerId,
+            multiaddrs: [
+                ma
+            ]
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.withArgs(matchMultiaddr(ma.encapsulate(`/p2p/${peerId}`))).resolves(connection);
+        dialer = new DialQueue(components);
+        await expect(dialer.dial(peerId)).to.eventually.equal(connection);
+    });
+    it('should load addresses from the peer routing when none are present in the peer store', async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIdFromPrivateKey(await generateKeyPair('Ed25519'))));
+        const ma = multiaddr('/ip4/127.0.0.1/tcp/4001');
+        components.peerStore.get.withArgs(peerId).resolves({
+            id: peerId,
+            protocols: [],
+            metadata: new Map(),
+            tags: new Map(),
+            addresses: []
+        });
+        components.peerRouting.findPeer.withArgs(peerId).resolves({
+            id: peerId,
+            multiaddrs: [
+                ma
+            ]
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.withArgs(matchMultiaddr(ma.encapsulate(`/p2p/${peerId}`))).resolves(connection);
+        dialer = new DialQueue(components);
+        await expect(dialer.dial(peerId)).to.eventually.equal(connection);
+    });
+    it('should end when a single multiaddr dials succeeds even when a final dial fails', async () => {
+        const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIdFromPrivateKey(await generateKeyPair('Ed25519'))));
+        const deferredConn = pDefer();
+        const actions = {
+            '/ip4/127.0.0.1/tcp/1231': async () => Promise.reject(new Error('dial failure')),
+            '/ip4/127.0.0.1/tcp/1232': async () => Promise.resolve(connection),
+            '/ip4/127.0.0.1/tcp/1233': async () => deferredConn.promise
+        };
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma) => {
+            const maStr = ma.toString();
+            const action = actions[maStr];
+            if (action != null) {
+                return action();
+            }
+            throw new Error(`No action found for multiaddr ${maStr}`);
+        });
+        dialer = new DialQueue(components, {
+            maxParallelDials: 2
+        });
+        // Make sure that dial attempt comes back before terminating last dial action
+        await expect(dialer.dial(Object.keys(actions).map(str => multiaddr(str))))
+            .to.eventually.equal(connection);
+        // End third dial attempt
+        deferredConn.reject(new Error('Oh noes!'));
+        // prevent playwright-core error Error: Cannot find parent object page@... to create handle@...
+        await expect(deferredConn.promise).to.eventually.be.rejected();
+    });
+    it('should throw an AggregateError if all dials fail', async () => {
+        const actions = {
+            '/ip4/127.0.0.1/tcp/1231': async () => Promise.reject(new Error('dial failure')),
+            '/ip4/127.0.0.1/tcp/1232': async () => Promise.reject(new Error('dial failure')),
+            '/ip4/127.0.0.1/tcp/1233': async () => Promise.reject(new Error('dial failure'))
+        };
+        dialer = new DialQueue(components, {
+            maxParallelDials: 2
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma) => {
+            const maStr = ma.toString();
+            const action = actions[maStr];
+            if (action != null) {
+                return action();
+            }
+            throw new Error(`No action found for multiaddr ${maStr}`);
+        });
+        sinon.spy(actions, '/ip4/127.0.0.1/tcp/1231');
+        sinon.spy(actions, '/ip4/127.0.0.1/tcp/1232');
+        sinon.spy(actions, '/ip4/127.0.0.1/tcp/1233');
+        try {
+            await dialer.dial(Object.keys(actions).map(str => multiaddr(str)));
+            expect.fail('Should have thrown');
+        }
+        catch (err) {
+            expect(err).to.have.property('name', 'AggregateError');
+        }
+        expect(actions['/ip4/127.0.0.1/tcp/1231']).to.have.property('callCount', 1);
+        expect(actions['/ip4/127.0.0.1/tcp/1232']).to.have.property('callCount', 1);
+        expect(actions['/ip4/127.0.0.1/tcp/1233']).to.have.property('callCount', 1);
+    });
+    it('should handle a large number of addrs', async () => {
+        const reject = sinon.stub().callsFake(async () => Promise.reject(new Error('dial failure')));
+        const actions = {};
+        const addrs = [...new Array(25)].map((_, index) => `/ip4/127.0.0.1/tcp/12${index + 1}`);
+        addrs.forEach(addr => {
+            actions[addr] = reject;
+        });
+        dialer = new DialQueue(components, {
+            maxParallelDials: 2
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        components.transportManager.dial.callsFake(async (ma) => {
+            const maStr = ma.toString();
+            const action = actions[maStr];
+            if (action != null) {
+                return action();
+            }
+            throw new Error(`No action found for multiaddr ${maStr}`);
+        });
+        try {
+            await dialer.dial(Object.keys(actions).map(str => multiaddr(str)));
+            expect.fail('Should have thrown');
+        }
+        catch (err) {
+            expect(err).to.have.property('name', 'AggregateError');
+        }
+        expect(reject).to.have.property('callCount', addrs.length);
+    });
+    it('should ignore DNS addresses for other peers', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const otherRemotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const ma = multiaddr(`/dnsaddr/example.com/p2p/${remotePeer}`);
+        const maStr = `/ip4/123.123.123.123/tcp/2348/p2p/${remotePeer}`;
+        const resolvedAddresses = [
+            `/ip4/234.234.234.234/tcp/4213/p2p/${otherRemotePeer}`,
+            maStr
+        ];
+        let resolvedDNSAddrs = false;
+        let dialedBadAddress = false;
+        // simulate a DNSAddr that resolves to multiple different peers like
+        // bootstrap.libp2p.io
+        resolvers.set('dnsaddr', async (addr) => {
+            if (addr.equals(ma)) {
+                resolvedDNSAddrs = true;
+                return resolvedAddresses;
+            }
+            return [];
+        });
+        dialer = new DialQueue(components, {
+            maxParallelDials: 50
+        });
+        components.transportManager.dialTransportForMultiaddr.returns(stubInterface());
+        const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeer));
+        components.transportManager.dial.callsFake(async (ma, opts = {}) => {
+            if (ma.toString() === maStr) {
+                await delay(100);
+                return connection;
+            }
+            dialedBadAddress = true;
+            throw new Error('Could not dial address');
+        });
+        await expect(dialer.dial(ma)).to.eventually.equal(connection);
+        expect(resolvedDNSAddrs).to.be.true('Did not resolve DNSAddrs');
+        expect(dialedBadAddress).to.be.false('Dialed address with wrong peer id');
+        resolvers.delete('dnsaddr');
+    });
+    it('should dial WebRTC address with peer id appended', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const relayPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const ma = multiaddr(`/ip4/123.123.123.123/tcp/123/ws/p2p/${relayPeer}/p2p-circuit/webrtc`);
+        const maWithPeer = `${ma}/p2p/${remotePeer}`;
+        components.transportManager.dialTransportForMultiaddr.callsFake(ma => {
+            if (WebRTC.exactMatch(ma)) {
+                return stubInterface();
+            }
+        });
+        components.peerStore.get.withArgs(remotePeer).resolves({
+            id: remotePeer,
+            protocols: [],
+            metadata: new Map(),
+            tags: new Map(),
+            addresses: [{
+                    multiaddr: ma,
+                    isCertified: true
+                }]
+        });
+        const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeer));
+        components.transportManager.dial.callsFake(async (ma, opts = {}) => {
+            if (ma.toString() === maWithPeer) {
+                await delay(100);
+                return connection;
+            }
+            throw new Error('Could not dial address');
+        });
+        dialer = new DialQueue(components);
+        await expect(dialer.dial(remotePeer)).to.eventually.equal(connection);
+    });
+});
+//# sourceMappingURL=dial-queue.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js.map
new file mode 100644
index 0000000..a01586c
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/dial-queue.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"dial-queue.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/dial-queue.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/direct.node.d.ts b/node_modules/libp2p/dist/test/connection-manager/direct.node.d.ts
new file mode 100644
index 0000000..bf3a5d6
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/direct.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=direct.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/direct.node.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/direct.node.d.ts.map
new file mode 100644
index 0000000..2626222
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/direct.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"direct.node.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/direct.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/direct.node.js b/node_modules/libp2p/dist/test/connection-manager/direct.node.js
new file mode 100644
index 0000000..6d7ce62
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/direct.node.js
@@ -0,0 +1,675 @@
+/* eslint-env mocha */
+import fs from 'node:fs';
+import os from 'node:os';
+import path from 'node:path';
+import { yamux } from '@chainsafe/libp2p-yamux';
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { isConnection, AbortError, TypedEventEmitter, start, stop } from '@libp2p/interface';
+import { mockConnection, mockConnectionGater, mockDuplex, mockMultiaddrConnection, mockUpgrader } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { mplex } from '@libp2p/mplex';
+import { peerIdFromString, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { plaintext } from '@libp2p/plaintext';
+import { tcp } from '@libp2p/tcp';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core/memory';
+import delay from 'delay';
+import { pipe } from 'it-pipe';
+import { pushable } from 'it-pushable';
+import pDefer from 'p-defer';
+import pWaitFor from 'p-wait-for';
+import Sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { DefaultAddressManager } from '../../src/address-manager/index.js';
+import { defaultComponents } from '../../src/components.js';
+import { DialQueue } from '../../src/connection-manager/dial-queue.js';
+import { DefaultConnectionManager } from '../../src/connection-manager/index.js';
+import { createLibp2p } from '../../src/index.js';
+import { DefaultPeerRouting } from '../../src/peer-routing.js';
+import { DefaultTransportManager } from '../../src/transport-manager.js';
+import { ECHO_PROTOCOL, echo } from '../fixtures/echo-service.js';
+const listenAddr = multiaddr('/ip4/127.0.0.1/tcp/0');
+const unsupportedAddr = multiaddr('/ip4/127.0.0.1/tcp/9999/ws/p2p/QmckxVrJw1Yo8LqvmDJNUmdAsKtSbiKWmrXJFyKmUraBoN');
+describe('dialing (direct, TCP)', () => {
+    let remoteTM;
+    let localTM;
+    let remoteAddr;
+    let remoteComponents;
+    let localComponents;
+    let resolver;
+    beforeEach(async () => {
+        resolver = Sinon.stub();
+        const [localPeerId, remotePeerId] = await Promise.all([
+            peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            peerIdFromPrivateKey(await generateKeyPair('Ed25519'))
+        ]);
+        const remoteEvents = new TypedEventEmitter();
+        remoteComponents = defaultComponents({
+            peerId: remotePeerId,
+            events: remoteEvents,
+            datastore: new MemoryDatastore(),
+            upgrader: mockUpgrader({ events: remoteEvents }),
+            connectionGater: mockConnectionGater(),
+            transportManager: stubInterface({
+                getAddrs: Sinon.stub().returns([])
+            })
+        });
+        remoteComponents.peerStore = persistentPeerStore(remoteComponents);
+        remoteComponents.addressManager = new DefaultAddressManager(remoteComponents, {
+            listen: [
+                listenAddr.toString()
+            ]
+        });
+        remoteTM = remoteComponents.transportManager = new DefaultTransportManager(remoteComponents);
+        remoteTM.add(tcp()({
+            logger: defaultLogger()
+        }));
+        remoteComponents.peerRouting = new DefaultPeerRouting(remoteComponents);
+        const localEvents = new TypedEventEmitter();
+        localComponents = defaultComponents({
+            peerId: localPeerId,
+            events: localEvents,
+            datastore: new MemoryDatastore(),
+            upgrader: mockUpgrader({ events: localEvents }),
+            transportManager: stubInterface(),
+            connectionGater: mockConnectionGater()
+        });
+        localComponents.peerStore = persistentPeerStore(localComponents);
+        localComponents.connectionManager = new DefaultConnectionManager(localComponents, {
+            maxConnections: 100,
+            inboundUpgradeTimeout: 1000
+        });
+        localComponents.addressManager = new DefaultAddressManager(localComponents);
+        localComponents.peerRouting = new DefaultPeerRouting(localComponents);
+        localTM = localComponents.transportManager = new DefaultTransportManager(localComponents);
+        localTM.add(tcp()({
+            logger: defaultLogger()
+        }));
+        await start(localComponents);
+        await start(remoteComponents);
+        remoteAddr = remoteTM.getAddrs()[0].encapsulate(`/p2p/${remotePeerId.toString()}`);
+    });
+    afterEach(async () => {
+        await stop(localComponents);
+        await stop(remoteComponents);
+    });
+    afterEach(() => {
+        Sinon.restore();
+    });
+    it('should be able to connect to a remote node via its multiaddr', async () => {
+        const dialer = new DialQueue(localComponents);
+        const connection = await dialer.dial(remoteAddr);
+        expect(connection).to.exist();
+        await connection.close();
+    });
+    it('should be able to connect to remote node with duplicated addresses', async () => {
+        const remotePeer = peerIdFromString(remoteAddr.getPeerId() ?? '');
+        const dnsaddr = multiaddr(`/dnsaddr/remote.libp2p.io/p2p/${remotePeer}`);
+        await localComponents.peerStore.merge(remotePeer, {
+            multiaddrs: [
+                dnsaddr
+            ]
+        });
+        const dialer = new DialQueue(localComponents, {
+            resolvers: {
+                dnsaddr: resolver
+            },
+            maxParallelDials: 1
+        });
+        // Resolver stub
+        resolver.withArgs(dnsaddr).resolves([remoteAddr.toString()]);
+        const connection = await dialer.dial(remotePeer);
+        expect(connection).to.exist();
+        await connection.close();
+    });
+    it('should fail to connect to an unsupported multiaddr', async () => {
+        const dialer = new DialQueue(localComponents);
+        await expect(dialer.dial(unsupportedAddr))
+            .to.eventually.be.rejectedWith(Error)
+            .and.to.have.nested.property('.name', 'NoValidAddressesError');
+    });
+    it('should fail to connect if peer has no known addresses', async () => {
+        const dialer = new DialQueue(localComponents);
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        await expect(dialer.dial(peerId))
+            .to.eventually.be.rejectedWith(Error)
+            .and.to.have.nested.property('.name', 'NoValidAddressesError');
+    });
+    it('should be able to connect to a given peer id', async () => {
+        await localComponents.peerStore.patch(remoteComponents.peerId, {
+            multiaddrs: remoteTM.getAddrs()
+        });
+        const dialer = new DialQueue(localComponents);
+        const connection = await dialer.dial(remoteComponents.peerId);
+        expect(connection).to.exist();
+        await connection.close();
+    });
+    it('should fail to connect to a given peer with unsupported addresses', async () => {
+        await localComponents.peerStore.patch(remoteComponents.peerId, {
+            multiaddrs: [unsupportedAddr]
+        });
+        const dialer = new DialQueue(localComponents);
+        await expect(dialer.dial(remoteComponents.peerId))
+            .to.eventually.be.rejectedWith(Error)
+            .and.to.have.nested.property('.name', 'NoValidAddressesError');
+    });
+    it('should only try to connect to addresses supported by the transports configured', async () => {
+        const remoteAddrs = remoteTM.getAddrs();
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        await localComponents.peerStore.patch(peerId, {
+            multiaddrs: [...remoteAddrs, unsupportedAddr]
+        });
+        const dialer = new DialQueue(localComponents);
+        Sinon.spy(localTM, 'dial');
+        const connection = await dialer.dial(peerId);
+        expect(localTM.dial).to.have.property('callCount', remoteAddrs.length);
+        expect(connection).to.exist();
+        await connection.close();
+    });
+    it('should abort dials on queue task timeout', async () => {
+        const dialer = new DialQueue(localComponents, {
+            dialTimeout: 50
+        });
+        Sinon.stub(localTM, 'dial').callsFake(async (addr, options = {}) => {
+            expect(options.signal).to.exist();
+            expect(options.signal?.aborted).to.equal(false);
+            expect(addr.toString()).to.eql(remoteAddr.toString());
+            await delay(60);
+            expect(options.signal?.aborted).to.equal(true);
+            throw new AbortError();
+        });
+        await expect(dialer.dial(remoteAddr))
+            .to.eventually.be.rejectedWith(Error)
+            .and.to.have.property('name', 'TimeoutError');
+    });
+    it('should only dial to the max concurrency', async () => {
+        const peerId1 = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const peerId2 = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const peerId3 = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const addr1 = multiaddr(`/ip4/127.0.0.1/tcp/1234/p2p/${peerId1}`);
+        const addr2 = multiaddr(`/ip4/127.0.12.4/tcp/3210/p2p/${peerId2}`);
+        const addr3 = multiaddr(`/ip4/123.3.11.1/tcp/2010/p2p/${peerId3}`);
+        const slowDial = async () => {
+            await delay(100);
+            return mockConnection(mockMultiaddrConnection(mockDuplex(), peerId1));
+        };
+        const actions = {
+            [addr1.toString()]: slowDial,
+            [addr2.toString()]: slowDial,
+            [addr3.toString()]: async () => mockConnection(mockMultiaddrConnection(mockDuplex(), peerId3))
+        };
+        const dialer = new DialQueue(localComponents, {
+            maxParallelDials: 2
+        });
+        const transportManagerDialStub = Sinon.stub(localTM, 'dial');
+        transportManagerDialStub.callsFake(async (ma) => {
+            const maStr = ma.toString();
+            const action = actions[maStr];
+            if (action != null) {
+                return action();
+            }
+            throw new Error(`No action found for multiaddr ${maStr}`);
+        });
+        // dial 3 different peers
+        void Promise.all([
+            dialer.dial(addr1),
+            dialer.dial(addr2),
+            dialer.dial(addr3)
+        ]);
+        // Let the call stack run
+        await delay(0);
+        // We should have 2 in progress, and 1 waiting
+        expect(transportManagerDialStub).to.have.property('callCount', 2);
+        // stop dials
+        dialer.stop();
+    });
+});
+describe('libp2p.dialer (direct, TCP)', () => {
+    let libp2p;
+    let remoteLibp2p;
+    let remoteAddr;
+    beforeEach(async () => {
+        remoteLibp2p = await createLibp2p({
+            addresses: {
+                listen: [listenAddr.toString()]
+            },
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                echo: echo()
+            }
+        });
+        await remoteLibp2p.start();
+        remoteAddr = remoteLibp2p.getMultiaddrs()[0];
+    });
+    afterEach(async () => {
+        Sinon.restore();
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+        if (remoteLibp2p != null) {
+            await remoteLibp2p.stop();
+        }
+    });
+    it('should use the dialer for connecting to a peer', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await libp2p.start();
+        await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+            multiaddrs: remoteLibp2p.getMultiaddrs()
+        });
+        const connection = await libp2p.dial(remoteLibp2p.peerId);
+        expect(connection).to.exist();
+        const stream = await connection.newStream(ECHO_PROTOCOL);
+        expect(stream).to.exist();
+        expect(stream).to.have.property('protocol', ECHO_PROTOCOL);
+        await connection.close();
+    });
+    it('should close all streams when the connection closes', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await libp2p.start();
+        // register some stream handlers to simulate several protocols
+        await libp2p.handle('/stream-count/1', ({ stream }) => {
+            void pipe(stream, stream);
+        });
+        await libp2p.handle('/stream-count/2', ({ stream }) => {
+            void pipe(stream, stream);
+        });
+        await remoteLibp2p.handle('/stream-count/3', ({ stream }) => {
+            void pipe(stream, stream);
+        });
+        await remoteLibp2p.handle('/stream-count/4', ({ stream }) => {
+            void pipe(stream, stream);
+        });
+        const connection = await libp2p.dial(remoteLibp2p.getMultiaddrs());
+        // Create local to remote streams
+        const stream = await connection.newStream([ECHO_PROTOCOL, '/other/1.0.0']);
+        await connection.newStream('/stream-count/3');
+        await libp2p.dialProtocol(remoteLibp2p.peerId, '/stream-count/4');
+        // Partially write to the echo stream
+        const source = pushable();
+        void stream.sink(source);
+        source.push(uint8ArrayFromString('hello'));
+        // Create remote to local streams
+        await remoteLibp2p.dialProtocol(libp2p.peerId, ['/stream-count/1', '/other/1.0.0']);
+        await remoteLibp2p.dialProtocol(libp2p.peerId, ['/stream-count/2', '/other/1.0.0']);
+        // Verify stream count
+        const remoteConn = remoteLibp2p.getConnections(libp2p.peerId);
+        if (remoteConn == null) {
+            throw new Error('No remote connection found');
+        }
+        expect(connection.streams).to.have.length(5);
+        expect(remoteConn).to.have.lengthOf(1);
+        expect(remoteConn).to.have.nested.property('[0].streams').with.lengthOf(5);
+        // Close the connection and verify all streams have been closed
+        await connection.close();
+        await pWaitFor(() => connection.streams.length === 0);
+        await pWaitFor(() => remoteConn[0].streams.length === 0);
+    });
+    it('should throw when using dialProtocol with no protocols', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await libp2p.start();
+        // @ts-expect-error invalid params
+        await expect(libp2p.dialProtocol(remoteAddr))
+            .to.eventually.be.rejectedWith(Error)
+            .and.to.have.property('name', 'InvalidParametersError');
+        await expect(libp2p.dialProtocol(remoteAddr, []))
+            .to.eventually.be.rejectedWith(Error)
+            .and.to.have.property('name', 'InvalidParametersError');
+    });
+    it('should be able to use hangup to close connections', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await libp2p.start();
+        const connection = await libp2p.dial(remoteAddr);
+        expect(connection).to.exist();
+        expect(connection.timeline.close).to.not.exist();
+        await libp2p.hangUp(connection.remotePeer);
+        expect(connection.timeline.close).to.exist();
+    });
+    it('should use the protectors when provided for connecting', async () => {
+        const protector = {
+            async protect(connection) {
+                return connection;
+            }
+        };
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            connectionProtector: () => protector
+        });
+        const protectorProtectSpy = Sinon.spy(protector, 'protect');
+        await libp2p.start();
+        const connection = await libp2p.dial(remoteAddr);
+        expect(connection).to.exist();
+        const stream = await connection.newStream(ECHO_PROTOCOL);
+        expect(stream).to.exist();
+        expect(stream).to.have.property('protocol', ECHO_PROTOCOL);
+        await connection.close();
+        expect(protectorProtectSpy.callCount).to.equal(1);
+    });
+    it('should coalesce parallel dials to the same peer (id in multiaddr)', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await libp2p.start();
+        const dials = 10;
+        // PeerId should be in multiaddr
+        expect(remoteAddr.getPeerId()).to.equal(remoteLibp2p.peerId.toString());
+        await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+            multiaddrs: remoteLibp2p.getMultiaddrs()
+        });
+        const dialResults = await Promise.all([...new Array(dials)].map(async (_, index) => {
+            if (index % 2 === 0)
+                return libp2p.dial(remoteLibp2p.peerId);
+            return libp2p.dial(remoteAddr);
+        }));
+        // All should succeed and we should have ten results
+        expect(dialResults).to.have.length(10);
+        for (const connection of dialResults) {
+            expect(isConnection(connection)).to.equal(true);
+        }
+        // 1 connection, because we know the peer in the multiaddr
+        expect(libp2p.getConnections()).to.have.lengthOf(1);
+        expect(remoteLibp2p.getConnections()).to.have.lengthOf(1);
+    });
+    it('should coalesce parallel dials to the same error on failure', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await libp2p.start();
+        const dials = 10;
+        const error = new Error('Boom');
+        // @ts-expect-error private field access
+        Sinon.stub(libp2p.components.transportManager, 'dial').callsFake(async () => Promise.reject(error));
+        await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+            multiaddrs: remoteLibp2p.getMultiaddrs()
+        });
+        const dialResults = await Promise.allSettled([...new Array(dials)].map(async (_, index) => {
+            if (index % 2 === 0)
+                return libp2p.dial(remoteLibp2p.peerId);
+            return libp2p.dial(remoteAddr);
+        }));
+        // All should succeed and we should have ten results
+        expect(dialResults).to.have.length(10);
+        for (const result of dialResults) {
+            // All errors should be the exact same as `error`
+            expect(result).to.have.property('status', 'rejected');
+            expect(result).to.have.property('reason', error);
+        }
+        // 1 connection, because we know the peer in the multiaddr
+        expect(libp2p.getConnections()).to.have.lengthOf(0);
+        expect(remoteLibp2p.getConnections()).to.have.lengthOf(0);
+    });
+    it('should dial a unix socket', async () => {
+        if (os.platform() === 'win32') {
+            return;
+        }
+        if (remoteLibp2p != null) {
+            await remoteLibp2p.stop();
+        }
+        const unixAddr = path.join(os.tmpdir(), `test-${Math.random()}.sock`);
+        const unixMultiaddr = multiaddr('/unix' + unixAddr);
+        remoteLibp2p = await createLibp2p({
+            addresses: {
+                listen: [
+                    unixMultiaddr.toString()
+                ]
+            },
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await remoteLibp2p.start();
+        expect(fs.existsSync(unixAddr)).to.be.true();
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await libp2p.start();
+        const connection = await libp2p.dial(unixMultiaddr);
+        expect(connection.remotePeer.toString()).to.equal(remoteLibp2p.peerId.toString());
+    });
+    it('should negotiate protocol fully when dialing a protocol', async () => {
+        remoteLibp2p = await createLibp2p({
+            addresses: {
+                listen: [
+                    '/ip4/0.0.0.0/tcp/0'
+                ]
+            },
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await Promise.all([
+            remoteLibp2p.start(),
+            libp2p.start()
+        ]);
+        const protocol = '/test/1.0.0';
+        const streamOpen = pDefer();
+        await remoteLibp2p.handle(protocol, ({ stream }) => {
+            streamOpen.resolve(stream);
+        });
+        const outboundStream = await libp2p.dialProtocol(remoteLibp2p.getMultiaddrs(), protocol);
+        expect(outboundStream).to.have.property('protocol', protocol);
+        await expect(streamOpen.promise).to.eventually.have.property('protocol', protocol);
+    });
+    it('should negotiate protocol fully when opening on a connection', async () => {
+        remoteLibp2p = await createLibp2p({
+            addresses: {
+                listen: [
+                    '/ip4/0.0.0.0/tcp/0'
+                ]
+            },
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await Promise.all([
+            remoteLibp2p.start(),
+            libp2p.start()
+        ]);
+        const protocol = '/test/1.0.0';
+        const streamOpen = pDefer();
+        await remoteLibp2p.handle(protocol, ({ stream }) => {
+            streamOpen.resolve(stream);
+        });
+        const connection = await libp2p.dial(remoteLibp2p.getMultiaddrs());
+        const outboundStream = await connection.newStream(protocol);
+        expect(outboundStream).to.have.property('protocol', protocol);
+        await expect(streamOpen.promise).to.eventually.have.property('protocol', protocol);
+    });
+    it('should fail to dial self without a peer id', async () => {
+        libp2p = await createLibp2p({
+            addresses: {
+                listen: [
+                    '/ip4/0.0.0.0/tcp/0'
+                ]
+            },
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await libp2p.start();
+        const ma = libp2p.getMultiaddrs()[0].decapsulate(`/p2p/${libp2p.peerId}`);
+        expect(ma.getPeerId()).to.be.null();
+        await expect(libp2p.dial(ma))
+            .to.eventually.be.rejected()
+            .and.to.have.property('name', 'InvalidPeerIdError');
+    });
+    it('should only make one connection to peer even without a peer id', async () => {
+        remoteLibp2p = await createLibp2p({
+            addresses: {
+                listen: [
+                    '/ip4/0.0.0.0/tcp/0'
+                ]
+            },
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        libp2p = await createLibp2p({
+            transports: [
+                tcp()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await Promise.all([
+            remoteLibp2p.start(),
+            libp2p.start()
+        ]);
+        expect(libp2p.getConnections(remoteLibp2p.peerId)).to.be.empty();
+        const ma = remoteLibp2p.getMultiaddrs()[0].decapsulate(`/p2p/${remoteLibp2p.peerId}`);
+        expect(ma.getPeerId()).to.be.null();
+        const conn1 = await libp2p.dial(ma);
+        const conn2 = await libp2p.dial(ma);
+        expect(conn1).to.equal(conn2);
+        expect(libp2p.getConnections(remoteLibp2p.peerId)).to.have.lengthOf(1);
+    });
+});
+//# sourceMappingURL=direct.node.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/direct.node.js.map b/node_modules/libp2p/dist/test/connection-manager/direct.node.js.map
new file mode 100644
index 0000000..93f24ac
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/direct.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"direct.node.js","sourceRoot":"","sources":["../../../test/connection-manager/direct.node.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/direct.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/direct.spec.d.ts
new file mode 100644
index 0000000..bd766c5
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/direct.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=direct.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/direct.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/direct.spec.d.ts.map
new file mode 100644
index 0000000..45ebfd5
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/direct.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"direct.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/direct.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/direct.spec.js b/node_modules/libp2p/dist/test/connection-manager/direct.spec.js
new file mode 100644
index 0000000..609181b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/direct.spec.js
@@ -0,0 +1,430 @@
+/* eslint-env mocha */
+import { yamux } from '@chainsafe/libp2p-yamux';
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { identify } from '@libp2p/identify';
+import { AbortError, TypedEventEmitter } from '@libp2p/interface';
+import { mockConnectionGater, mockDuplex, mockMultiaddrConnection, mockUpgrader, mockConnection } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { mplex } from '@libp2p/mplex';
+import { peerIdFromString, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { plaintext } from '@libp2p/plaintext';
+import { defaultAddressSort } from '@libp2p/utils/address-sort';
+import { webSockets } from '@libp2p/websockets';
+import * as filters from '@libp2p/websockets/filters';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core/memory';
+import delay from 'delay';
+import pDefer from 'p-defer';
+import { pEvent } from 'p-event';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { defaultComponents } from '../../src/components.js';
+import { LAST_DIAL_FAILURE_KEY } from '../../src/connection-manager/constants.js';
+import { DefaultConnectionManager } from '../../src/connection-manager/index.js';
+import { createLibp2p } from '../../src/index.js';
+import { DefaultTransportManager } from '../../src/transport-manager.js';
+const unsupportedAddr = multiaddr('/ip4/127.0.0.1/tcp/9999');
+const relayMultiaddr = multiaddr(process.env.RELAY_MULTIADDR);
+describe('dialing (direct, WebSockets)', () => {
+    let localTM;
+    let localComponents;
+    let remoteAddr;
+    let remoteComponents;
+    let connectionManager;
+    beforeEach(async () => {
+        const localEvents = new TypedEventEmitter();
+        localComponents = defaultComponents({
+            peerId: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            datastore: new MemoryDatastore(),
+            upgrader: mockUpgrader({ events: localEvents }),
+            connectionGater: mockConnectionGater(),
+            transportManager: stubInterface(),
+            events: localEvents
+        });
+        localComponents.peerStore = persistentPeerStore(localComponents, {
+            addressFilter: localComponents.connectionGater.filterMultiaddrForPeer
+        });
+        localComponents.connectionManager = new DefaultConnectionManager(localComponents, {
+            maxConnections: 100,
+            inboundUpgradeTimeout: 1000
+        });
+        localTM = new DefaultTransportManager(localComponents);
+        localTM.add(webSockets({ filter: filters.all })({
+            logger: defaultLogger()
+        }));
+        localComponents.transportManager = localTM;
+        // this peer is spun up in .aegir.cjs
+        remoteAddr = relayMultiaddr;
+        remoteComponents = defaultComponents({
+            peerId: peerIdFromString(remoteAddr.getPeerId() ?? '')
+        });
+    });
+    afterEach(async () => {
+        sinon.restore();
+        if (connectionManager != null) {
+            await connectionManager.stop();
+        }
+    });
+    it('should be able to connect to a remote node via its multiaddr', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents);
+        await connectionManager.start();
+        const remotePeerId = peerIdFromString(remoteAddr.getPeerId() ?? '');
+        await localComponents.peerStore.patch(remotePeerId, {
+            multiaddrs: [remoteAddr]
+        });
+        const connection = await connectionManager.openConnection(remoteAddr);
+        expect(connection).to.exist();
+        await connection.close();
+    });
+    it('should fail to connect to an unsupported multiaddr', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents);
+        await connectionManager.start();
+        await expect(connectionManager.openConnection(unsupportedAddr.encapsulate(`/p2p/${remoteComponents.peerId.toString()}`)))
+            .to.eventually.be.rejectedWith(Error)
+            .and.to.have.nested.property('.name', 'NoValidAddressesError');
+    });
+    it('should mark a peer as having recently failed to connect', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents);
+        await connectionManager.start();
+        await expect(connectionManager.openConnection(multiaddr(`/ip4/127.0.0.1/tcp/12984/ws/p2p/${remoteComponents.peerId.toString()}`)))
+            .to.eventually.be.rejected();
+        const peer = await localComponents.peerStore.get(remoteComponents.peerId);
+        expect(peer.metadata.has(LAST_DIAL_FAILURE_KEY)).to.be.true();
+    });
+    it('should be able to connect to a given peer', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents);
+        await connectionManager.start();
+        const remotePeerId = peerIdFromString(remoteAddr.getPeerId() ?? '');
+        await localComponents.peerStore.patch(remotePeerId, {
+            multiaddrs: [remoteAddr]
+        });
+        const connection = await connectionManager.openConnection(remotePeerId);
+        expect(connection).to.exist();
+        await connection.close();
+    });
+    it('should fail to connect to a given peer with unsupported addresses', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents);
+        await connectionManager.start();
+        const remotePeerId = peerIdFromString(remoteAddr.getPeerId() ?? '');
+        await localComponents.peerStore.patch(remotePeerId, {
+            multiaddrs: [unsupportedAddr]
+        });
+        await expect(connectionManager.openConnection(remotePeerId))
+            .to.eventually.be.rejectedWith(Error)
+            .and.to.have.nested.property('.name', 'NoValidAddressesError');
+    });
+    it('should abort dials on queue task timeout', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents, {
+            dialTimeout: 50
+        });
+        await connectionManager.start();
+        const remotePeerId = peerIdFromString(remoteAddr.getPeerId() ?? '');
+        await localComponents.peerStore.patch(remotePeerId, {
+            multiaddrs: [remoteAddr]
+        });
+        sinon.stub(localTM, 'dial').callsFake(async (addr, options) => {
+            expect(options?.signal).to.exist();
+            expect(options?.signal?.aborted).to.equal(false);
+            expect(addr.toString()).to.eql(remoteAddr.toString());
+            await delay(60);
+            expect(options?.signal?.aborted).to.equal(true);
+            throw new AbortError();
+        });
+        await expect(connectionManager.openConnection(remoteAddr))
+            .to.eventually.be.rejected()
+            .and.to.have.property('name', 'TimeoutError');
+    });
+    it('should throw when a peer advertises more than the allowed number of addresses', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents, {
+            maxPeerAddrsToDial: 10
+        });
+        await connectionManager.start();
+        const remotePeerId = peerIdFromString(remoteAddr.getPeerId() ?? '');
+        await localComponents.peerStore.patch(remotePeerId, {
+            multiaddrs: Array.from({ length: 11 }, (_, i) => multiaddr(`/ip4/127.0.0.1/tcp/1500${i}/ws/p2p/${remotePeerId.toString()}`))
+        });
+        await expect(connectionManager.openConnection(remotePeerId))
+            .to.eventually.be.rejected()
+            .and.to.have.property('name', 'DialError');
+    });
+    it('should sort addresses on dial', async () => {
+        const peerMultiaddrs = [
+            multiaddr('/ip4/127.0.0.1/tcp/15001/ws'),
+            multiaddr('/ip4/20.0.0.1/tcp/15001/ws'),
+            multiaddr('/ip4/30.0.0.1/tcp/15001/ws')
+        ];
+        const addressesSorttSpy = sinon.spy(defaultAddressSort);
+        const localTMDialStub = sinon.stub(localTM, 'dial').callsFake(async (ma) => mockConnection(mockMultiaddrConnection(mockDuplex(), remoteComponents.peerId)));
+        connectionManager = new DefaultConnectionManager(localComponents, {
+            addressSorter: addressesSorttSpy,
+            maxParallelDials: 3
+        });
+        await connectionManager.start();
+        // Inject data into the AddressBook
+        await localComponents.peerStore.merge(remoteComponents.peerId, {
+            multiaddrs: peerMultiaddrs
+        });
+        // Perform 3 multiaddr dials
+        await connectionManager.openConnection(remoteComponents.peerId);
+        const sortedAddresses = peerMultiaddrs
+            .map((m) => ({ multiaddr: m, isCertified: false }))
+            .sort(defaultAddressSort);
+        expect(localTMDialStub.getCall(0).args[0].equals(sortedAddresses[0].multiaddr));
+    });
+    it('shutting down should abort pending dials', async () => {
+        const addrs = [
+            multiaddr('/ip4/0.0.0.0/tcp/8000/ws'),
+            multiaddr('/ip4/0.0.0.0/tcp/8001/ws'),
+            multiaddr('/ip4/0.0.0.0/tcp/8002/ws')
+        ];
+        connectionManager = new DefaultConnectionManager(localComponents, {
+            maxParallelDials: 2
+        });
+        await connectionManager.start();
+        // Inject data into the AddressBook
+        await localComponents.peerStore.merge(remoteComponents.peerId, {
+            multiaddrs: addrs
+        });
+        sinon.stub(localTM, 'dial').callsFake(async (_, options) => {
+            const deferredDial = pDefer();
+            const onAbort = () => {
+                options?.signal?.removeEventListener('abort', onAbort);
+                deferredDial.reject(new AbortError());
+            };
+            options?.signal?.addEventListener('abort', onAbort);
+            return deferredDial.promise;
+        });
+        // Perform 3 multiaddr dials
+        const dialPromise = connectionManager.openConnection(remoteComponents.peerId);
+        // Let the call stack run
+        await delay(0);
+        try {
+            await connectionManager.stop();
+            await dialPromise;
+            expect.fail('should have failed');
+        }
+        catch {
+            expect(connectionManager.getDialQueue()).to.have.lengthOf(0); // 0 dial requests
+        }
+    });
+    it('should dial only the multiaddr that is passed', async () => {
+        const addrs = [
+            multiaddr(`/ip4/0.0.0.0/tcp/8000/ws/p2p/${remoteComponents.peerId.toString()}`),
+            multiaddr(`/ip4/0.0.0.0/tcp/8001/ws/p2p/${remoteComponents.peerId.toString()}`),
+            multiaddr(`/ip4/0.0.0.0/tcp/8002/ws/p2p/${remoteComponents.peerId.toString()}`)
+        ];
+        // Inject data into the AddressBook
+        await localComponents.peerStore.merge(remoteComponents.peerId, {
+            multiaddrs: addrs
+        });
+        // different address not in the address book, same peer id
+        const dialMultiaddr = multiaddr(`/ip4/0.0.0.0/tcp/8003/ws/p2p/${remoteComponents.peerId.toString()}`);
+        connectionManager = new DefaultConnectionManager(localComponents);
+        await connectionManager.start();
+        const transactionManagerDialStub = sinon.stub(localTM, 'dial');
+        transactionManagerDialStub.callsFake(async (ma) => mockConnection(mockMultiaddrConnection(mockDuplex(), remoteComponents.peerId)));
+        // Perform dial
+        await connectionManager.openConnection(dialMultiaddr);
+        expect(transactionManagerDialStub).to.have.property('callCount', 1);
+        expect(transactionManagerDialStub.getCall(0).args[0].toString()).to.equal(dialMultiaddr.toString());
+    });
+    it('should throw if dialling an empty array is attempted', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents);
+        await connectionManager.start();
+        // Perform dial
+        await expect(connectionManager.openConnection([])).to.eventually.rejected
+            .with.property('name', 'NoValidAddressesError');
+    });
+    it('should throw if dialling multiaddrs with mismatched peer ids', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents);
+        await connectionManager.start();
+        // Perform dial
+        await expect(connectionManager.openConnection([
+            multiaddr(`/ip4/0.0.0.0/tcp/8000/ws/p2p/${(peerIdFromPrivateKey(await generateKeyPair('Ed25519'))).toString()}`),
+            multiaddr(`/ip4/0.0.0.0/tcp/8001/ws/p2p/${(peerIdFromPrivateKey(await generateKeyPair('Ed25519'))).toString()}`)
+        ])).to.eventually.rejected
+            .with.property('name', 'InvalidParametersError');
+    });
+    it('should throw if dialling multiaddrs with inconsistent peer ids', async () => {
+        connectionManager = new DefaultConnectionManager(localComponents);
+        await connectionManager.start();
+        // Perform dial
+        await expect(connectionManager.openConnection([
+            multiaddr(`/ip4/0.0.0.0/tcp/8000/ws/p2p/${(peerIdFromPrivateKey(await generateKeyPair('Ed25519'))).toString()}`),
+            multiaddr('/ip4/0.0.0.0/tcp/8001/ws')
+        ])).to.eventually.rejected
+            .with.property('name', 'InvalidParametersError');
+        // Perform dial
+        await expect(connectionManager.openConnection([
+            multiaddr('/ip4/0.0.0.0/tcp/8001/ws'),
+            multiaddr(`/ip4/0.0.0.0/tcp/8000/ws/p2p/${(peerIdFromPrivateKey(await generateKeyPair('Ed25519'))).toString()}`)
+        ])).to.eventually.rejected
+            .with.property('name', 'InvalidParametersError');
+    });
+});
+describe('libp2p.dialer (direct, WebSockets)', () => {
+    let libp2p;
+    afterEach(async () => {
+        sinon.restore();
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+    });
+    it('should run identify automatically after connecting', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets({
+                    filter: filters.all
+                })
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                identify: identify()
+            },
+            connectionGater: mockConnectionGater()
+        });
+        if (libp2p.services.identify == null) {
+            throw new Error('Identify service missing');
+        }
+        const identifySpy = sinon.spy(libp2p.services.identify, 'identify');
+        const peerStorePatchSpy = sinon.spy(libp2p.peerStore, 'patch');
+        const connectionPromise = pEvent(libp2p, 'connection:open');
+        await libp2p.start();
+        const connection = await libp2p.dial(relayMultiaddr);
+        expect(connection).to.exist();
+        // Wait for connection event to be emitted
+        await connectionPromise;
+        expect(identifySpy.callCount).to.equal(1);
+        await identifySpy.firstCall.returnValue;
+        expect(peerStorePatchSpy.callCount).to.equal(1);
+        await libp2p.stop();
+    });
+    it('should not run identify automatically after connecting', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets({
+                    filter: filters.all
+                })
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                identify: identify({
+                    runOnConnectionOpen: false
+                })
+            },
+            connectionGater: mockConnectionGater()
+        });
+        if (libp2p.services.identify == null) {
+            throw new Error('Identify service missing');
+        }
+        const identifySpy = sinon.spy(libp2p.services.identify, 'identify');
+        const connectionPromise = pEvent(libp2p, 'connection:open');
+        await libp2p.start();
+        const connection = await libp2p.dial(relayMultiaddr);
+        expect(connection).to.exist();
+        // Wait for connection event to be emitted
+        await connectionPromise;
+        expect(identifySpy.callCount).to.equal(0);
+        await libp2p.stop();
+    });
+    it('should be able to use hangup to close connections', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets({
+                    filter: filters.all
+                })
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            connectionGater: mockConnectionGater()
+        });
+        await libp2p.start();
+        const connection = await libp2p.dial(relayMultiaddr);
+        expect(connection).to.exist();
+        expect(connection.timeline.close).to.not.exist();
+        await libp2p.hangUp(connection.remotePeer);
+        expect(connection.timeline.close).to.exist();
+        await libp2p.stop();
+    });
+    it('should be able to use hangup when no connection exists', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets({
+                    filter: filters.all
+                })
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            connectionGater: mockConnectionGater()
+        });
+        await libp2p.hangUp(relayMultiaddr);
+    });
+    it('should fail to dial self', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets({
+                    filter: filters.all
+                })
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            connectionGater: mockConnectionGater()
+        });
+        await libp2p.start();
+        await expect(libp2p.dial(multiaddr(`/ip4/127.0.0.1/tcp/1234/ws/p2p/${libp2p.peerId.toString()}`)))
+            .to.eventually.be.rejected()
+            .and.to.have.property('name', 'InvalidPeerIdError');
+    });
+    it('should limit the maximum dial queue size', async () => {
+        const transport = stubInterface({
+            dialFilter: (ma) => ma,
+            dial: async () => {
+                await delay(1000);
+                return stubInterface();
+            }
+        });
+        libp2p = await createLibp2p({
+            transports: [
+                () => transport
+            ],
+            connectionManager: {
+                maxDialQueueLength: 1,
+                maxParallelDials: 1
+            }
+        });
+        await expect(Promise.all([
+            libp2p.dial(multiaddr('/ip4/127.0.0.1/tcp/1234')),
+            libp2p.dial(multiaddr('/ip4/127.0.0.1/tcp/1235'))
+        ])).to.eventually.be.rejected
+            .with.property('name', 'DialError');
+    });
+});
+//# sourceMappingURL=direct.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/direct.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/direct.spec.js.map
new file mode 100644
index 0000000..6426cb0
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/direct.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"direct.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/direct.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.node.d.ts b/node_modules/libp2p/dist/test/connection-manager/index.node.d.ts
new file mode 100644
index 0000000..9586729
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.node.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/index.node.d.ts.map
new file mode 100644
index 0000000..5b7c5c5
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.node.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/index.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.node.js b/node_modules/libp2p/dist/test/connection-manager/index.node.js
new file mode 100644
index 0000000..63e9ed7
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.node.js
@@ -0,0 +1,422 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter, start } from '@libp2p/interface';
+import { mockConnection, mockDuplex, mockMultiaddrConnection } from '@libp2p/interface-compliance-tests/mocks';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { dns } from '@multiformats/dns';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import all from 'it-all';
+import { pipe } from 'it-pipe';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { defaultComponents } from '../../src/components.js';
+import { DefaultConnectionManager } from '../../src/connection-manager/index.js';
+import { createBaseOptions } from '../fixtures/base-options.browser.js';
+import { createNode } from '../fixtures/creators/peer.js';
+import { ECHO_PROTOCOL, echo } from '../fixtures/echo-service.js';
+describe('Connection Manager', () => {
+    let libp2p;
+    let peerIds;
+    before(async () => {
+        peerIds = await Promise.all([
+            peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            peerIdFromPrivateKey(await generateKeyPair('Ed25519'))
+        ]);
+    });
+    beforeEach(async () => {
+        libp2p = await createNode({
+            config: createBaseOptions({
+                addresses: {
+                    listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                }
+            })
+        });
+    });
+    afterEach(async () => {
+        await libp2p.stop();
+    });
+    it('should filter connections on disconnect, removing the closed one', async () => {
+        const peerStore = stubInterface();
+        const components = defaultComponents({
+            peerId: peerIds[0],
+            peerStore,
+            transportManager: stubInterface(),
+            connectionGater: stubInterface(),
+            events: new TypedEventEmitter()
+        });
+        const connectionManager = new DefaultConnectionManager(components, {
+            maxConnections: 1000,
+            inboundUpgradeTimeout: 1000
+        });
+        await start(connectionManager);
+        const conn1 = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIds[1]));
+        const conn2 = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIds[1]));
+        expect(connectionManager.getConnections(peerIds[1])).to.have.lengthOf(0);
+        // Add connection to the connectionManager
+        components.events.safeDispatchEvent('connection:open', { detail: conn1 });
+        components.events.safeDispatchEvent('connection:open', { detail: conn2 });
+        expect(connectionManager.getConnections(peerIds[1])).to.have.lengthOf(2);
+        await conn2.close();
+        components.events.safeDispatchEvent('connection:close', { detail: conn2 });
+        expect(connectionManager.getConnections(peerIds[1])).to.have.lengthOf(1);
+        expect(conn1).to.have.nested.property('status', 'open');
+        await connectionManager.stop();
+    });
+    it('should close connections on stop', async () => {
+        const peerStore = stubInterface();
+        const components = defaultComponents({
+            peerId: peerIds[0],
+            peerStore,
+            transportManager: stubInterface(),
+            connectionGater: stubInterface(),
+            events: new TypedEventEmitter()
+        });
+        const connectionManager = new DefaultConnectionManager(components, {
+            maxConnections: 1000,
+            inboundUpgradeTimeout: 1000
+        });
+        await start(connectionManager);
+        const conn1 = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIds[1]));
+        const conn2 = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIds[1]));
+        // Add connection to the connectionManager
+        components.events.safeDispatchEvent('connection:open', { detail: conn1 });
+        components.events.safeDispatchEvent('connection:open', { detail: conn2 });
+        expect(connectionManager.getConnections(peerIds[1])).to.have.lengthOf(2);
+        await connectionManager.stop();
+        expect(connectionManager.getConnections(peerIds[1])).to.have.lengthOf(0);
+    });
+});
+describe('libp2p.connections', () => {
+    let libp2p;
+    afterEach(async () => {
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+    });
+    it('libp2p.connections gets the connectionManager conns', async () => {
+        libp2p = await createNode({
+            config: createBaseOptions({
+                addresses: {
+                    listen: ['/ip4/127.0.0.1/tcp/15003/ws']
+                }
+            })
+        });
+        const remoteLibp2p = await createNode({
+            config: createBaseOptions({
+                addresses: {
+                    listen: ['/ip4/127.0.0.1/tcp/15004/ws']
+                }
+            })
+        });
+        await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+            multiaddrs: remoteLibp2p.getMultiaddrs()
+        });
+        const conn = await libp2p.dial(remoteLibp2p.peerId);
+        expect(conn).to.be.ok();
+        expect(libp2p.getConnections()).to.have.lengthOf(1);
+        await libp2p.stop();
+        await remoteLibp2p.stop();
+    });
+    describe('proactive connections', () => {
+        let libp2p;
+        let nodes = [];
+        beforeEach(async () => {
+            nodes = await Promise.all([
+                createNode({
+                    config: {
+                        addresses: {
+                            listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                        }
+                    }
+                }),
+                createNode({
+                    config: {
+                        addresses: {
+                            listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                        }
+                    }
+                })
+            ]);
+        });
+        afterEach(async () => {
+            await Promise.all(nodes.map(async (node) => { await node.stop(); }));
+            if (libp2p != null) {
+                await libp2p.stop();
+            }
+            sinon.reset();
+        });
+        it('should be closed status once immediately stopping', async () => {
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/15003/ws']
+                    }
+                })
+            });
+            const remoteLibp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/15004/ws']
+                    }
+                })
+            });
+            await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+                multiaddrs: remoteLibp2p.getMultiaddrs()
+            });
+            await libp2p.dial(remoteLibp2p.peerId);
+            const conns = libp2p.getConnections();
+            expect(conns.length).to.eql(1);
+            const conn = conns[0];
+            await libp2p.stop();
+            expect(conn.status).to.eql('closed');
+            await remoteLibp2p.stop();
+        });
+        it('should open multiple connections when forced', async () => {
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    }
+                })
+            });
+            // connect once, should have one connection
+            await libp2p.dial(nodes[0].getMultiaddrs());
+            expect(libp2p.getConnections()).to.have.lengthOf(1);
+            // connect twice, should still only have one connection
+            await libp2p.dial(nodes[0].getMultiaddrs());
+            expect(libp2p.getConnections()).to.have.lengthOf(1);
+            // force connection, should have two connections now
+            await libp2p.dial(nodes[0].getMultiaddrs(), {
+                force: true
+            });
+            expect(libp2p.getConnections()).to.have.lengthOf(2);
+        });
+        it('should use custom DNS resolver', async () => {
+            const resolver = sinon.stub();
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    dns: dns({
+                        resolvers: {
+                            '.': resolver
+                        }
+                    })
+                })
+            });
+            const ma = multiaddr('/dnsaddr/example.com/tcp/12345');
+            const err = new Error('Could not resolve');
+            resolver.withArgs('_dnsaddr.example.com').rejects(err);
+            await expect(libp2p.dial(ma)).to.eventually.be.rejectedWith(err);
+        });
+    });
+    describe('connection gater', () => {
+        let libp2p;
+        let remoteLibp2p;
+        beforeEach(async () => {
+            remoteLibp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    services: {
+                        echo: echo()
+                    }
+                })
+            });
+        });
+        afterEach(async () => {
+            if (remoteLibp2p != null) {
+                await remoteLibp2p.stop();
+            }
+            if (libp2p != null) {
+                await libp2p.stop();
+            }
+        });
+        it('intercept peer dial', async () => {
+            const denyDialPeer = sinon.stub().returns(true);
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    connectionGater: {
+                        denyDialPeer
+                    }
+                })
+            });
+            await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+                multiaddrs: remoteLibp2p.getMultiaddrs()
+            });
+            await expect(libp2p.dial(remoteLibp2p.peerId))
+                .to.eventually.be.rejected().with.property('name', 'DialDeniedError');
+        });
+        it('intercept addr dial', async () => {
+            const denyDialMultiaddr = sinon.stub().returns(false);
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    connectionGater: {
+                        denyDialMultiaddr
+                    }
+                })
+            });
+            await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+                multiaddrs: remoteLibp2p.getMultiaddrs()
+            });
+            await libp2p.dial(remoteLibp2p.peerId);
+            for (const multiaddr of remoteLibp2p.getMultiaddrs()) {
+                expect(denyDialMultiaddr.calledWith(multiaddr)).to.be.true();
+            }
+        });
+        it('intercept multiaddr store', async () => {
+            const filterMultiaddrForPeer = sinon.stub().returns(true);
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    connectionGater: {
+                        filterMultiaddrForPeer
+                    }
+                })
+            });
+            const fullMultiaddr = remoteLibp2p.getMultiaddrs()[0];
+            await libp2p.peerStore.merge(remoteLibp2p.peerId, {
+                multiaddrs: [fullMultiaddr]
+            });
+            expect(filterMultiaddrForPeer.callCount).to.equal(1);
+            const args = filterMultiaddrForPeer.getCall(0).args;
+            expect(args[0].toString()).to.equal(remoteLibp2p.peerId.toString());
+            expect(args[1].toString()).to.equal(fullMultiaddr.toString());
+        });
+        it('intercept accept inbound connection', async () => {
+            const denyInboundConnection = sinon.stub().returns(false);
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    connectionGater: {
+                        denyInboundConnection
+                    }
+                })
+            });
+            await remoteLibp2p.peerStore.patch(libp2p.peerId, {
+                multiaddrs: libp2p.getMultiaddrs()
+            });
+            await remoteLibp2p.dial(libp2p.peerId);
+            expect(denyInboundConnection.called).to.be.true();
+        });
+        it('intercept accept outbound connection', async () => {
+            const denyOutboundConnection = sinon.stub().returns(false);
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    connectionGater: {
+                        denyOutboundConnection
+                    }
+                })
+            });
+            await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+                multiaddrs: remoteLibp2p.getMultiaddrs()
+            });
+            await libp2p.dial(remoteLibp2p.peerId);
+            expect(denyOutboundConnection.called).to.be.true();
+        });
+        it('intercept inbound encrypted', async () => {
+            const denyInboundEncryptedConnection = sinon.stub().returns(false);
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    connectionGater: {
+                        denyInboundEncryptedConnection
+                    }
+                })
+            });
+            await remoteLibp2p.peerStore.patch(libp2p.peerId, {
+                multiaddrs: libp2p.getMultiaddrs()
+            });
+            await remoteLibp2p.dial(libp2p.peerId);
+            expect(denyInboundEncryptedConnection.called).to.be.true();
+            expect(denyInboundEncryptedConnection.getCall(0).args[0].toMultihash().bytes).to.equalBytes(remoteLibp2p.peerId.toMultihash().bytes);
+        });
+        it('intercept outbound encrypted', async () => {
+            const denyOutboundEncryptedConnection = sinon.stub().returns(false);
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    connectionGater: {
+                        denyOutboundEncryptedConnection
+                    }
+                })
+            });
+            await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+                multiaddrs: remoteLibp2p.getMultiaddrs()
+            });
+            await libp2p.dial(remoteLibp2p.peerId);
+            expect(denyOutboundEncryptedConnection.called).to.be.true();
+            expect(denyOutboundEncryptedConnection.getCall(0).args[0].toMultihash().bytes).to.equalBytes(remoteLibp2p.peerId.toMultihash().bytes);
+        });
+        it('intercept inbound upgraded', async () => {
+            const denyInboundUpgradedConnection = sinon.stub().returns(false);
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    connectionGater: {
+                        denyInboundUpgradedConnection
+                    },
+                    services: {
+                        echo: echo()
+                    }
+                })
+            });
+            await remoteLibp2p.peerStore.patch(libp2p.peerId, {
+                multiaddrs: libp2p.getMultiaddrs()
+            });
+            const connection = await remoteLibp2p.dial(libp2p.peerId);
+            const stream = await connection.newStream(ECHO_PROTOCOL);
+            const input = [Uint8Array.from([0])];
+            const output = await pipe(input, stream, async (source) => all(source));
+            expect(denyInboundUpgradedConnection.called).to.be.true();
+            expect(denyInboundUpgradedConnection.getCall(0).args[0].toMultihash().bytes).to.equalBytes(remoteLibp2p.peerId.toMultihash().bytes);
+            expect(output.map(b => b.subarray())).to.deep.equal(input);
+        });
+        it('intercept outbound upgraded', async () => {
+            const denyOutboundUpgradedConnection = sinon.stub().returns(false);
+            libp2p = await createNode({
+                config: createBaseOptions({
+                    addresses: {
+                        listen: ['/ip4/127.0.0.1/tcp/0/ws']
+                    },
+                    connectionGater: {
+                        denyOutboundUpgradedConnection
+                    }
+                })
+            });
+            await libp2p.peerStore.patch(remoteLibp2p.peerId, {
+                multiaddrs: remoteLibp2p.getMultiaddrs()
+            });
+            const connection = await libp2p.dial(remoteLibp2p.peerId);
+            const stream = await connection.newStream(ECHO_PROTOCOL);
+            const input = [Uint8Array.from([0])];
+            const output = await pipe(input, stream, async (source) => all(source));
+            expect(denyOutboundUpgradedConnection.called).to.be.true();
+            expect(denyOutboundUpgradedConnection.getCall(0).args[0].toMultihash().bytes).to.equalBytes(remoteLibp2p.peerId.toMultihash().bytes);
+            expect(output.map(b => b.subarray())).to.deep.equal(input);
+        });
+    });
+});
+//# sourceMappingURL=index.node.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.node.js.map b/node_modules/libp2p/dist/test/connection-manager/index.node.js.map
new file mode 100644
index 0000000..5b150fc
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.node.js","sourceRoot":"","sources":["../../../test/connection-manager/index.node.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts
new file mode 100644
index 0000000..b37c2d2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts.map
new file mode 100644
index 0000000..2ed10ac
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/index.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.spec.js b/node_modules/libp2p/dist/test/connection-manager/index.spec.js
new file mode 100644
index 0000000..c44c5f7
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.spec.js
@@ -0,0 +1,448 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter, KEEP_ALIVE } from '@libp2p/interface';
+import { mockConnection, mockDuplex, mockMultiaddrConnection, mockMetrics } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { pEvent } from 'p-event';
+import pWaitFor from 'p-wait-for';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { DefaultConnectionManager } from '../../src/connection-manager/index.js';
+import { createBaseOptions } from '../fixtures/base-options.browser.js';
+import { createNode } from '../fixtures/creators/peer.js';
+import { getComponent } from '../fixtures/get-component.js';
+const defaultOptions = {
+    maxConnections: 10,
+    inboundUpgradeTimeout: 10000
+};
+function defaultComponents(peerId) {
+    return {
+        peerId,
+        peerStore: stubInterface(),
+        peerRouting: stubInterface(),
+        transportManager: stubInterface(),
+        connectionGater: stubInterface(),
+        events: new TypedEventEmitter(),
+        logger: defaultLogger()
+    };
+}
+describe('Connection Manager', () => {
+    let libp2p;
+    let connectionManager;
+    afterEach(async () => {
+        sinon.restore();
+        if (connectionManager != null) {
+            await connectionManager.stop();
+        }
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+    });
+    it('should be able to create without metrics', async () => {
+        libp2p = await createNode({
+            config: createBaseOptions(),
+            started: false
+        });
+        const spy = sinon.spy(getComponent(libp2p, 'connectionManager'), 'start');
+        await libp2p.start();
+        expect(spy).to.have.property('callCount', 1);
+        expect(libp2p.metrics).to.not.exist();
+    });
+    it('should be able to create with metrics', async () => {
+        libp2p = await createNode({
+            config: createBaseOptions({
+                metrics: mockMetrics()
+            }),
+            started: false
+        });
+        const spy = sinon.spy(getComponent(libp2p, 'connectionManager'), 'start');
+        await libp2p.start();
+        expect(spy).to.have.property('callCount', 1);
+        expect(libp2p.metrics).to.exist();
+    });
+    it('should close connections with low tag values first', async () => {
+        const max = 5;
+        libp2p = await createNode({
+            config: createBaseOptions({
+                connectionManager: {
+                    maxConnections: max
+                }
+            }),
+            started: false
+        });
+        await libp2p.start();
+        const closeSpies = new Map();
+        // wait for prune event
+        const eventPromise = pEvent(libp2p, 'connection:prune');
+        // Add 1 connection too many
+        for (let i = 0; i < max + 1; i++) {
+            const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIdFromPrivateKey(await generateKeyPair('Ed25519'))));
+            const spy = sinon.spy(connection, 'close');
+            const value = i * 10;
+            closeSpies.set(value, spy);
+            await libp2p.peerStore.merge(connection.remotePeer, {
+                tags: {
+                    'test-tag': {
+                        value
+                    }
+                }
+            });
+            getComponent(libp2p, 'events').safeDispatchEvent('connection:open', { detail: connection });
+        }
+        await eventPromise;
+        // get the lowest value
+        const lowest = Array.from(closeSpies.keys()).sort((a, b) => {
+            if (a > b) {
+                return 1;
+            }
+            if (a < b) {
+                return -1;
+            }
+            return 0;
+        })[0];
+        const lowestSpy = closeSpies.get(lowest);
+        expect(lowestSpy).to.have.property('callCount', 1);
+    });
+    it('should close shortest-lived connection if the tag values are equal', async () => {
+        const max = 5;
+        libp2p = await createNode({
+            config: createBaseOptions({
+                connectionManager: {
+                    maxConnections: max
+                }
+            }),
+            started: false
+        });
+        await libp2p.start();
+        const spies = new Map();
+        const eventPromise = pEvent(libp2p, 'connection:prune');
+        const createConnection = async (value, open = Date.now(), peerTag = 'test-tag') => {
+            // #TODO: Mock the connection timeline to simulate an older connection
+            const connection = mockConnection(mockMultiaddrConnection({ ...mockDuplex(), timeline: { open } }, peerIdFromPrivateKey(await generateKeyPair('Ed25519'))));
+            const spy = sinon.spy(connection, 'close');
+            // The lowest tag value will have the longest connection
+            spies.set(peerTag, spy);
+            await libp2p.peerStore.merge(connection.remotePeer, {
+                tags: {
+                    [peerTag]: {
+                        value
+                    }
+                }
+            });
+            getComponent(libp2p, 'events').safeDispatchEvent('connection:open', { detail: connection });
+        };
+        // Create one short of enough connections to initiate pruning
+        for (let i = 1; i < max; i++) {
+            const value = i * 10;
+            await createConnection(value);
+        }
+        const value = 0 * 10;
+        // Add a connection with the lowest tag value BUT the longest lived connection
+        await createConnection(value, 18000, 'longest');
+        // Add one more connection with the lowest tag value BUT the shortest-lived connection
+        await createConnection(value, Date.now(), 'shortest');
+        // wait for prune event
+        await eventPromise;
+        // get the lowest tagged value, but this would be also the longest lived connection
+        const longestLivedWithLowestTagSpy = spies.get('longest');
+        // Get lowest tagged connection but with a shorter-lived connection
+        const shortestLivedWithLowestTagSpy = spies.get('shortest');
+        expect(longestLivedWithLowestTagSpy).to.have.property('callCount', 0);
+        expect(shortestLivedWithLowestTagSpy).to.have.property('callCount', 1);
+    });
+    it('should not close connection that is on the allowlist when pruning', async () => {
+        const max = 2;
+        const remoteAddr = multiaddr('/ip4/83.13.55.32/tcp/59283');
+        libp2p = await createNode({
+            config: createBaseOptions({
+                connectionManager: {
+                    maxConnections: max,
+                    allow: [
+                        '/ip4/83.13.55.32'
+                    ]
+                }
+            }),
+            started: false
+        });
+        await libp2p.start();
+        const spies = new Map();
+        const eventPromise = pEvent(libp2p, 'connection:prune');
+        // Max out connections
+        for (let i = 0; i < max; i++) {
+            const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIdFromPrivateKey(await generateKeyPair('Ed25519'))));
+            const spy = sinon.spy(connection, 'close');
+            const value = (i + 1) * 10;
+            spies.set(value, spy);
+            await libp2p.peerStore.merge(connection.remotePeer, {
+                tags: {
+                    'test-tag': {
+                        value
+                    }
+                }
+            });
+            getComponent(libp2p, 'events').safeDispatchEvent('connection:open', { detail: connection });
+        }
+        // an outbound connection is opened from an address in the allow list
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const connection = mockConnection(mockMultiaddrConnection({
+            remoteAddr,
+            source: (async function* () {
+                yield* [];
+            })(),
+            sink: async () => { }
+        }, remotePeer));
+        const value = 0;
+        const spy = sinon.spy(connection, 'close');
+        spies.set(value, spy);
+        // Tag that allowed peer with lowest value
+        await libp2p.peerStore.merge(connection.remotePeer, {
+            tags: {
+                'test-tag': {
+                    value
+                }
+            }
+        });
+        getComponent(libp2p, 'events').safeDispatchEvent('connection:open', { detail: connection });
+        // wait for prune event
+        await eventPromise;
+        // get the lowest value
+        const lowest = Array.from(spies.keys()).sort((a, b) => {
+            if (a > b) {
+                return 1;
+            }
+            if (a < b) {
+                return -1;
+            }
+            return 0;
+        })[0];
+        const lowestSpy = spies.get(lowest);
+        // expect lowest value spy NOT to be called since the peer is in the allow list
+        expect(lowestSpy).to.have.property('callCount', 0);
+    });
+    it('should close connection when the maximum connections has been reached even without tags', async () => {
+        const max = 5;
+        libp2p = await createNode({
+            config: createBaseOptions({
+                connectionManager: {
+                    maxConnections: max
+                }
+            }),
+            started: false
+        });
+        await libp2p.start();
+        const eventPromise = pEvent(libp2p, 'connection:prune');
+        // Add 1 too many connections
+        const spy = sinon.spy();
+        for (let i = 0; i < max + 1; i++) {
+            const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), peerIdFromPrivateKey(await generateKeyPair('Ed25519'))));
+            sinon.stub(connection, 'close').callsFake(async () => spy()); // eslint-disable-line
+            getComponent(libp2p, 'events').safeDispatchEvent('connection:open', { detail: connection });
+        }
+        // wait for prune event
+        await eventPromise;
+        expect(spy).to.have.property('callCount', 1);
+    });
+    it('should fail if the connection manager has mismatched connection limit options', async () => {
+        await expect(createNode({
+            config: createBaseOptions({
+                connectionManager: {
+                    maxConnections: -1
+                }
+            }),
+            started: false
+        })).to.eventually.rejected('maxConnections must be greater');
+    });
+    it('should reconnect to important peers on startup', async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        libp2p = await createNode({
+            config: createBaseOptions(),
+            started: false
+        });
+        const connectionManager = getComponent(libp2p, 'connectionManager');
+        const connectionManagerOpenConnectionSpy = sinon.spy(connectionManager, 'openConnection');
+        await libp2p.start();
+        expect(connectionManagerOpenConnectionSpy.called).to.be.false('Attempted to connect to peers');
+        await libp2p.peerStore.merge(peerId, {
+            tags: {
+                [KEEP_ALIVE]: {}
+            }
+        });
+        await libp2p.stop();
+        await libp2p.start();
+        await pWaitFor(() => connectionManagerOpenConnectionSpy.called, {
+            interval: 100
+        });
+        expect(connectionManagerOpenConnectionSpy.called).to.be.true('Did not attempt to connect to important peer');
+        expect(connectionManagerOpenConnectionSpy.getCall(0).args[0].toString()).to.equal(peerId.toString(), 'Attempted to connect to the wrong peer');
+    });
+    it('should deny connections from denylist multiaddrs', async () => {
+        const remoteAddr = multiaddr('/ip4/83.13.55.32/tcp/59283');
+        connectionManager = new DefaultConnectionManager(defaultComponents(libp2p.peerId), {
+            ...defaultOptions,
+            deny: [
+                '/ip4/83.13.55.32'
+            ]
+        });
+        await connectionManager.start();
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const maConn = mockMultiaddrConnection({
+            remoteAddr,
+            source: (async function* () {
+                yield* [];
+            })(),
+            sink: async () => { }
+        }, remotePeer);
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.false();
+    });
+    it('should deny connections when maxConnections is exceeded', async () => {
+        connectionManager = new DefaultConnectionManager(defaultComponents(libp2p.peerId), {
+            ...defaultOptions,
+            maxConnections: 1
+        });
+        await connectionManager.start();
+        sinon.stub(connectionManager.dialQueue, 'dial').resolves(stubInterface({
+            status: 'open',
+            remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519'))
+        }));
+        // max out the connection limit
+        await connectionManager.openConnection(peerIdFromPrivateKey(await generateKeyPair('Ed25519')));
+        expect(connectionManager.getConnections()).to.have.lengthOf(1);
+        // an inbound connection is opened
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const maConn = mockMultiaddrConnection({
+            source: (async function* () {
+                yield* [];
+            })(),
+            sink: async () => { }
+        }, remotePeer);
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.false();
+    });
+    it('should deny connections from peers that connect too frequently', async () => {
+        connectionManager = new DefaultConnectionManager(defaultComponents(libp2p.peerId), {
+            ...defaultOptions,
+            inboundConnectionThreshold: 1
+        });
+        await connectionManager.start();
+        sinon.stub(connectionManager.dialQueue, 'dial').resolves(stubInterface({
+            status: 'open'
+        }));
+        // an inbound connection is opened
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const maConn = mockMultiaddrConnection({
+            source: (async function* () {
+                yield* [];
+            })(),
+            sink: async () => { },
+            // has to be thin waist, which it will be since we've not done the peer id handshake
+            // yet in the code being exercised by this test
+            remoteAddr: multiaddr('/ip4/34.4.63.125/tcp/4001')
+        }, remotePeer);
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.true();
+        // connect again within a second
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.false();
+    });
+    it('should allow connections from allowlist multiaddrs', async () => {
+        const remoteAddr = multiaddr('/ip4/83.13.55.32/tcp/59283');
+        connectionManager = new DefaultConnectionManager(defaultComponents(libp2p.peerId), {
+            ...defaultOptions,
+            maxConnections: 1,
+            allow: [
+                '/ip4/83.13.55.32'
+            ]
+        });
+        await connectionManager.start();
+        sinon.stub(connectionManager.dialQueue, 'dial').resolves(stubInterface({
+            status: 'open',
+            remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519'))
+        }));
+        // max out the connection limit
+        await connectionManager.openConnection(peerIdFromPrivateKey(await generateKeyPair('Ed25519')));
+        expect(connectionManager.getConnections()).to.have.lengthOf(1);
+        // an inbound connection is opened from an address in the allow list
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const maConn = mockMultiaddrConnection({
+            remoteAddr,
+            source: (async function* () {
+                yield* [];
+            })(),
+            sink: async () => { }
+        }, remotePeer);
+        await expect(connectionManager.acceptIncomingConnection(maConn))
+            .to.eventually.be.true();
+    });
+    it('should limit the number of inbound pending connections', async () => {
+        connectionManager = new DefaultConnectionManager(defaultComponents(libp2p.peerId), {
+            ...defaultOptions,
+            maxIncomingPendingConnections: 1
+        });
+        await connectionManager.start();
+        sinon.stub(connectionManager.dialQueue, 'dial').resolves(stubInterface({
+            status: 'open',
+            remotePeer: peerIdFromPrivateKey(await generateKeyPair('Ed25519'))
+        }));
+        // start the upgrade
+        const maConn1 = mockMultiaddrConnection({
+            source: (async function* () {
+                yield* [];
+            })(),
+            sink: async () => { }
+        }, peerIdFromPrivateKey(await generateKeyPair('Ed25519')));
+        await expect(connectionManager.acceptIncomingConnection(maConn1))
+            .to.eventually.be.true();
+        // start the upgrade
+        const maConn2 = mockMultiaddrConnection({
+            source: (async function* () {
+                yield* [];
+            })(),
+            sink: async () => { }
+        }, peerIdFromPrivateKey(await generateKeyPair('Ed25519')));
+        // should be false because we have not completed the upgrade of maConn1
+        await expect(connectionManager.acceptIncomingConnection(maConn2))
+            .to.eventually.be.false();
+        // finish the maConn1 pending upgrade
+        connectionManager.afterUpgradeInbound();
+        // should be true because we have now completed the upgrade of maConn1
+        await expect(connectionManager.acceptIncomingConnection(maConn2))
+            .to.eventually.be.true();
+    });
+    it('should allow dialing peers when an existing limited connection exists', async () => {
+        connectionManager = new DefaultConnectionManager(defaultComponents(libp2p.peerId), {
+            ...defaultOptions,
+            maxIncomingPendingConnections: 1
+        });
+        await connectionManager.start();
+        const targetPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const addr = multiaddr(`/ip4/123.123.123.123/tcp/123/p2p/${targetPeer}`);
+        const existingConnection = stubInterface({
+            status: 'open',
+            limits: {
+                bytes: 100n
+            },
+            remotePeer: targetPeer,
+            remoteAddr: multiaddr(`/ip4/123.123.123.123/tcp/123/p2p-circuit/p2p/${targetPeer}`)
+        });
+        const newConnection = stubInterface({
+            status: 'open',
+            remotePeer: targetPeer,
+            remoteAddr: addr
+        });
+        sinon.stub(connectionManager.dialQueue, 'dial')
+            .withArgs(addr)
+            .resolves(newConnection);
+        // we have an existing limited connection
+        const map = connectionManager.getConnectionsMap();
+        map.set(targetPeer, [
+            existingConnection
+        ]);
+        const conn = await connectionManager.openConnection(addr);
+        expect(conn).to.equal(newConnection);
+    });
+});
+//# sourceMappingURL=index.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/index.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/index.spec.js.map
new file mode 100644
index 0000000..8857880
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/index.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/index.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts
new file mode 100644
index 0000000..b2f8a8f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=reconnect-queue.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts.map
new file mode 100644
index 0000000..a06989a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"reconnect-queue.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/reconnect-queue.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js
new file mode 100644
index 0000000..d171fda
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js
@@ -0,0 +1,84 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { KEEP_ALIVE, TypedEventEmitter, start, stop } from '@libp2p/interface';
+import { peerLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import pRetry from 'p-retry';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { ReconnectQueue } from '../../src/connection-manager/reconnect-queue.js';
+describe('reconnect queue', () => {
+    let components;
+    let queue;
+    beforeEach(async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components = {
+            connectionManager: stubInterface(),
+            events: new TypedEventEmitter(),
+            peerStore: stubInterface(),
+            logger: peerLogger(peerId)
+        };
+    });
+    afterEach(async () => {
+        await stop(queue);
+        sinon.reset();
+    });
+    it('should reconnect to KEEP_ALIVE peers on startup', async () => {
+        queue = new ReconnectQueue(components);
+        const keepAlivePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components.peerStore.all.resolves([
+            stubInterface({
+                id: keepAlivePeer,
+                tags: new Map([[KEEP_ALIVE, {
+                            value: 1
+                        }]])
+            })
+        ]);
+        await start(queue);
+        await pRetry(() => {
+            expect(components.connectionManager.openConnection.calledWith(keepAlivePeer)).to.be.true();
+        }, {
+            retries: 5,
+            factor: 1
+        });
+    });
+    it('should reconnect to KEEP_ALIVE peers on disconnect', async () => {
+        queue = new ReconnectQueue(components);
+        const keepAlivePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components.peerStore.all.resolves([]);
+        components.peerStore.get.withArgs(keepAlivePeer).resolves(stubInterface({
+            id: keepAlivePeer,
+            tags: new Map([[KEEP_ALIVE, {
+                        value: 1
+                    }]])
+        }));
+        await start(queue);
+        components.events.safeDispatchEvent('peer:disconnect', new CustomEvent('peer:disconnect', {
+            detail: keepAlivePeer
+        }));
+        await pRetry(() => {
+            expect(components.connectionManager.openConnection.calledWith(keepAlivePeer)).to.be.true();
+        }, {
+            retries: 5,
+            factor: 1
+        });
+    });
+    it('should not reconnect to non-KEEP_ALIVE peers on disconnect', async () => {
+        queue = new ReconnectQueue(components);
+        const nonKeepAlivePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        components.peerStore.all.resolves([]);
+        components.peerStore.get.withArgs(nonKeepAlivePeer).resolves(stubInterface({
+            id: nonKeepAlivePeer,
+            tags: new Map()
+        }));
+        await start(queue);
+        components.events.safeDispatchEvent('peer:disconnect', new CustomEvent('peer:disconnect', {
+            detail: nonKeepAlivePeer
+        }));
+        await delay(1000);
+        expect(components.connectionManager.openConnection.calledWith(nonKeepAlivePeer)).to.be.false();
+    });
+});
+//# sourceMappingURL=reconnect-queue.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js.map
new file mode 100644
index 0000000..bbcbcca
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/reconnect-queue.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"reconnect-queue.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/reconnect-queue.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AAC9E,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAA;AAC3C,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,MAAM,MAAM,SAAS,CAAA;AAC5B,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAwB,aAAa,EAAE,MAAM,UAAU,CAAA;AAC9D,OAAO,EAAE,cAAc,EAAE,MAAM,iDAAiD,CAAA;AAIhF,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAI,UAKH,CAAA;IACD,IAAI,KAAqB,CAAA;IAEzB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,MAAM,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAErE,UAAU,GAAG;YACX,iBAAiB,EAAE,aAAa,EAAE;YAClC,MAAM,EAAE,IAAI,iBAAiB,EAAgB;YAC7C,SAAS,EAAE,aAAa,EAAa;YACrC,MAAM,EAAE,UAAU,CAAC,MAAM,CAAC;SAC3B,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,IAAI,CAAC,KAAK,CAAC,CAAA;QAEjB,KAAK,CAAC,KAAK,EAAE,CAAA;IACf,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,KAAK,GAAG,IAAI,cAAc,CAAC,UAAU,CAAC,CAAA;QAEtC,MAAM,aAAa,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAE5E,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;YAChC,aAAa,CAAO;gBAClB,EAAE,EAAE,aAAa;gBACjB,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE;4BAC1B,KAAK,EAAE,CAAC;yBACT,CAAC,CAAC,CAAC;aACL,CAAC;SACH,CAAC,CAAA;QAEF,MAAM,KAAK,CAAC,KAAK,CAAC,CAAA;QAElB,MAAM,MAAM,CAAC,GAAG,EAAE;YAChB,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAC5F,CAAC,EAAE;YACD,OAAO,EAAE,CAAC;YACV,MAAM,EAAE,CAAC;SACV,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;QAClE,KAAK,GAAG,IAAI,cAAc,CAAC,UAAU,CAAC,CAAA;QAEtC,MAAM,aAAa,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAE5E,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;QACrC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CACvD,aAAa,CAAO;YAClB,EAAE,EAAE,aAAa;YACjB,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE;wBAC1B,KAAK,EAAE,CAAC;qBACT,CAAC,CAAC,CAAC;SACL,CAAC,CACH,CAAA;QAED,MAAM,KAAK,CAAC,KAAK,CAAC,CAAA;QAElB,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,IAAI,WAAW,CAAC,iBAAiB,EAAE;YACxF,MAAM,EAAE,aAAa;SACtB,CAAC,CAAC,CAAA;QAEH,MAAM,MAAM,CAAC,GAAG,EAAE;YAChB,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAC5F,CAAC,EAAE;YACD,OAAO,EAAE,CAAC;YACV,MAAM,EAAE,CAAC;SACV,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,KAAK,GAAG,IAAI,cAAc,CAAC,UAAU,CAAC,CAAA;QAEtC,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAE/E,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;QACrC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAC1D,aAAa,CAAO;YAClB,EAAE,EAAE,gBAAgB;YACpB,IAAI,EAAE,IAAI,GAAG,EAAE;SAChB,CAAC,CACH,CAAA;QAED,MAAM,KAAK,CAAC,KAAK,CAAC,CAAA;QAElB,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,IAAI,WAAW,CAAC,iBAAiB,EAAE;YACxF,MAAM,EAAE,gBAAgB;SACzB,CAAC,CAAC,CAAA;QAEH,MAAM,KAAK,CAAC,IAAI,CAAC,CAAA;QAEjB,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAChG,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/resolver.spec.d.ts b/node_modules/libp2p/dist/test/connection-manager/resolver.spec.d.ts
new file mode 100644
index 0000000..f08a5bf
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/resolver.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=resolver.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/resolver.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-manager/resolver.spec.d.ts.map
new file mode 100644
index 0000000..976ef18
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/resolver.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"resolver.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-manager/resolver.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/resolver.spec.js b/node_modules/libp2p/dist/test/connection-manager/resolver.spec.js
new file mode 100644
index 0000000..0dce46e
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/resolver.spec.js
@@ -0,0 +1,161 @@
+/* eslint-env mocha */
+import { yamux } from '@chainsafe/libp2p-yamux';
+import { RELAY_V2_HOP_CODEC } from '@libp2p/circuit-relay-v2';
+import { circuitRelayServer, circuitRelayTransport } from '@libp2p/circuit-relay-v2';
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { identify } from '@libp2p/identify';
+import { mockConnection, mockConnectionGater, mockDuplex, mockMultiaddrConnection } from '@libp2p/interface-compliance-tests/mocks';
+import { mplex } from '@libp2p/mplex';
+import { peerIdFromString, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { plaintext } from '@libp2p/plaintext';
+import { webSockets } from '@libp2p/websockets';
+import * as filters from '@libp2p/websockets/filters';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import pDefer from 'p-defer';
+import sinon from 'sinon';
+import { createLibp2p } from '../../src/index.js';
+const relayAddr = multiaddr(process.env.RELAY_MULTIADDR);
+const relayedAddr = (peerId) => `${relayAddr.toString()}/p2p-circuit/p2p/${peerId.toString()}`;
+const getDnsRelayedAddrStub = (peerId) => [
+    `${relayedAddr(peerId)}`
+];
+describe('dialing (resolvable addresses)', () => {
+    let libp2p;
+    let remoteLibp2p;
+    let resolver;
+    beforeEach(async () => {
+        resolver = sinon.stub();
+        [libp2p, remoteLibp2p] = await Promise.all([
+            createLibp2p({
+                addresses: {
+                    listen: [`${relayAddr.toString()}/p2p-circuit`]
+                },
+                transports: [
+                    circuitRelayTransport(),
+                    webSockets({
+                        filter: filters.all
+                    })
+                ],
+                streamMuxers: [
+                    yamux(),
+                    mplex()
+                ],
+                connectionManager: {
+                    resolvers: {
+                        dnsaddr: resolver
+                    }
+                },
+                connectionEncrypters: [
+                    plaintext()
+                ],
+                connectionGater: mockConnectionGater(),
+                services: {
+                    identify: identify()
+                }
+            }),
+            createLibp2p({
+                addresses: {
+                    listen: [`${relayAddr.toString()}/p2p-circuit`]
+                },
+                transports: [
+                    circuitRelayTransport(),
+                    webSockets({
+                        filter: filters.all
+                    })
+                ],
+                streamMuxers: [
+                    yamux(),
+                    mplex()
+                ],
+                connectionManager: {
+                    resolvers: {
+                        dnsaddr: resolver
+                    }
+                },
+                connectionEncrypters: [
+                    plaintext()
+                ],
+                services: {
+                    relay: circuitRelayServer(),
+                    identify: identify()
+                },
+                connectionGater: mockConnectionGater()
+            })
+        ]);
+        await Promise.all([
+            libp2p.start(),
+            remoteLibp2p.start()
+        ]);
+    });
+    afterEach(async () => {
+        sinon.restore();
+        await Promise.all([libp2p, remoteLibp2p].map(async (n) => {
+            if (n != null) {
+                await n.stop();
+            }
+        }));
+    });
+    it('resolves dnsaddr to ws local address', async () => {
+        const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        // ensure remote libp2p creates reservation on relay
+        await remoteLibp2p.peerStore.merge(peerId, {
+            protocols: [RELAY_V2_HOP_CODEC]
+        });
+        const remoteId = remoteLibp2p.peerId;
+        const dialAddr = multiaddr(`/dnsaddr/remote.libp2p.io/p2p/${remoteId.toString()}`);
+        const relayedAddrFetched = multiaddr(relayedAddr(remoteId));
+        // Transport spy
+        const transport = getTransport(libp2p, '@libp2p/circuit-relay-v2-transport');
+        const transportDialSpy = sinon.spy(transport, 'dial');
+        // Resolver stub
+        resolver.onCall(0).returns(Promise.resolve(getDnsRelayedAddrStub(remoteId)));
+        // Dial with address resolve
+        const connection = await libp2p.dial(dialAddr);
+        expect(connection).to.exist();
+        expect(connection.remoteAddr.equals(relayedAddrFetched));
+        const dialArgs = transportDialSpy.firstCall.args;
+        expect(dialArgs[0].equals(relayedAddrFetched)).to.eql(true);
+    });
+    // TODO: Temporary solution does not resolve dns4/dns6
+    // Resolver just returns the received multiaddrs
+    it('stops recursive resolve if finds dns4/dns6 and dials it', async () => {
+        const remoteId = remoteLibp2p.peerId;
+        const dialAddr = multiaddr(`/dnsaddr/remote.libp2p.io/p2p/${remoteId.toString()}`);
+        // Stub resolver
+        const dnsMa = multiaddr(`/dns4/ams-1.remote.libp2p.io/tcp/443/wss/p2p/${remoteId.toString()}`);
+        resolver.returns(Promise.resolve([
+            `${dnsMa.toString()}`
+        ]));
+        const deferred = pDefer();
+        // Stub transport
+        const transport = getTransport(libp2p, '@libp2p/websockets');
+        const stubTransport = sinon.stub(transport, 'dial');
+        stubTransport.callsFake(async (multiaddr) => {
+            expect(multiaddr.equals(dnsMa)).to.equal(true);
+            deferred.resolve();
+            return mockConnection(mockMultiaddrConnection(mockDuplex(), peerIdFromString(multiaddr.getPeerId() ?? '')));
+        });
+        void libp2p.dial(dialAddr);
+        await deferred.promise;
+    });
+    it('fails to dial if resolve fails and there are no addresses to dial', async () => {
+        const remoteId = remoteLibp2p.peerId;
+        const dialAddr = multiaddr(`/dnsaddr/remote.libp2p.io/p2p/${remoteId.toString()}`);
+        const err = new Error();
+        // Stub resolver
+        resolver.returns(Promise.reject(err));
+        await expect(libp2p.dial(dialAddr))
+            .to.eventually.be.rejectedWith(err);
+    });
+});
+function getTransport(libp2p, tag) {
+    const transport = libp2p.components.transportManager.getTransports().find((t) => {
+        return t[Symbol.toStringTag] === tag;
+    });
+    if (transport != null) {
+        return transport;
+    }
+    throw new Error(`No transport found for ${tag}`);
+}
+//# sourceMappingURL=resolver.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-manager/resolver.spec.js.map b/node_modules/libp2p/dist/test/connection-manager/resolver.spec.js.map
new file mode 100644
index 0000000..bfdedc1
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-manager/resolver.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"resolver.spec.js","sourceRoot":"","sources":["../../../test/connection-manager/resolver.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts b/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts
new file mode 100644
index 0000000..b37c2d2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts.map b/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts.map
new file mode 100644
index 0000000..f4e7a1b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-monitor/index.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.d.ts","sourceRoot":"","sources":["../../../test/connection-monitor/index.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-monitor/index.spec.js b/node_modules/libp2p/dist/test/connection-monitor/index.spec.js
new file mode 100644
index 0000000..67caf27
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-monitor/index.spec.js
@@ -0,0 +1,124 @@
+/* eslint-env mocha */
+import { ConnectionClosedError, UnsupportedProtocolError, start, stop } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import { pair } from 'it-pair';
+import { stubInterface } from 'sinon-ts';
+import { ConnectionMonitor } from '../../src/connection-monitor.js';
+describe('connection monitor', () => {
+    let monitor;
+    let components;
+    beforeEach(() => {
+        components = {
+            logger: defaultLogger(),
+            connectionManager: stubInterface()
+        };
+    });
+    afterEach(async () => {
+        await stop(monitor);
+    });
+    it('should monitor the liveness of a connection', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        const stream = stubInterface({
+            ...pair()
+        });
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').resolves(stream);
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(100);
+        expect(connection.rtt).to.be.gte(0);
+    });
+    it('should monitor the liveness of a connection with a custom ping protocol prefix', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10,
+            protocolPrefix: 'foobar'
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        const stream = stubInterface({
+            ...pair()
+        });
+        connection.newStream.withArgs('/foobar/ping/1.0.0').resolves(stream);
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(100);
+        expect(connection.rtt).to.be.gte(0);
+    });
+    it('should monitor the liveness of a connection that does not support ping', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async () => {
+            await delay(10);
+            throw new UnsupportedProtocolError('Unsupported protocol');
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(100);
+        expect(connection.rtt).to.be.gte(0);
+    });
+    it('should abort a connection that times out', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 50,
+            pingTimeout: {
+                initialValue: 10
+            }
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async (protocols, opts) => {
+            await delay(200);
+            opts?.signal?.throwIfAborted();
+            return stubInterface();
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(500);
+        expect(connection.abort).to.have.property('called', true);
+    });
+    it('should abort a connection that fails', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async (protocols, opts) => {
+            throw new ConnectionClosedError('Connection closed');
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(500);
+        expect(connection.abort).to.have.property('called', true);
+    });
+    it('should not abort a connection that fails when abortConnectionOnPingFailure is false', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10,
+            abortConnectionOnPingFailure: false
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async (protocols, opts) => {
+            throw new ConnectionClosedError('Connection closed');
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(500);
+        expect(connection.abort).to.have.property('called', false);
+    });
+    it('should abort a connection that fails when abortConnectionOnPingFailure is true', async () => {
+        monitor = new ConnectionMonitor(components, {
+            pingInterval: 10,
+            abortConnectionOnPingFailure: true
+        });
+        await start(monitor);
+        const connection = stubInterface();
+        connection.newStream.withArgs('/ipfs/ping/1.0.0').callsFake(async (protocols, opts) => {
+            throw new ConnectionClosedError('Connection closed');
+        });
+        components.connectionManager.getConnections.returns([connection]);
+        await delay(100);
+        expect(connection.abort).to.have.property('called', true);
+    });
+});
+//# sourceMappingURL=index.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection-monitor/index.spec.js.map b/node_modules/libp2p/dist/test/connection-monitor/index.spec.js.map
new file mode 100644
index 0000000..f877153
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection-monitor/index.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../test/connection-monitor/index.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/compliance.spec.d.ts b/node_modules/libp2p/dist/test/connection/compliance.spec.d.ts
new file mode 100644
index 0000000..dac08d9
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/compliance.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=compliance.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/compliance.spec.d.ts.map b/node_modules/libp2p/dist/test/connection/compliance.spec.d.ts.map
new file mode 100644
index 0000000..1825872
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/compliance.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"compliance.spec.d.ts","sourceRoot":"","sources":["../../../test/connection/compliance.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/compliance.spec.js b/node_modules/libp2p/dist/test/connection/compliance.spec.js
new file mode 100644
index 0000000..790c314
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/compliance.spec.js
@@ -0,0 +1,72 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import tests from '@libp2p/interface-compliance-tests/connection';
+import { logger, peerLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { createConnection } from '../../src/connection/index.js';
+import { pair } from './fixtures/pair.js';
+describe('connection compliance', () => {
+    tests({
+        /**
+         * Test setup. `properties` allows the compliance test to override
+         * certain values for testing.
+         */
+        async setup(properties) {
+            const localPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const remoteAddr = multiaddr('/ip4/127.0.0.1/tcp/8081');
+            const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            let openStreams = [];
+            let streamId = 0;
+            const connection = createConnection({
+                remotePeer,
+                remoteAddr,
+                timeline: {
+                    open: Date.now() - 10,
+                    upgraded: Date.now()
+                },
+                direction: 'outbound',
+                encryption: '/secio/1.0.0',
+                multiplexer: '/mplex/6.7.0',
+                status: 'open',
+                logger: peerLogger(localPeer),
+                newStream: async (protocols) => {
+                    const id = `${streamId++}`;
+                    const stream = {
+                        ...pair(),
+                        close: async () => {
+                            void stream.sink(async function* () { }());
+                            openStreams = openStreams.filter(s => s.id !== id);
+                        },
+                        closeRead: async () => { },
+                        closeWrite: async () => {
+                            void stream.sink(async function* () { }());
+                        },
+                        id,
+                        abort: () => { },
+                        direction: 'outbound',
+                        protocol: protocols[0],
+                        timeline: {
+                            open: 0
+                        },
+                        metadata: {},
+                        status: 'open',
+                        writeStatus: 'ready',
+                        readStatus: 'ready',
+                        log: logger('test')
+                    };
+                    openStreams.push(stream);
+                    return stream;
+                },
+                close: async () => { },
+                abort: () => { },
+                getStreams: () => openStreams,
+                ...properties
+            });
+            return connection;
+        },
+        async teardown() {
+            // cleanup resources created by setup()
+        }
+    });
+});
+//# sourceMappingURL=compliance.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/compliance.spec.js.map b/node_modules/libp2p/dist/test/connection/compliance.spec.js.map
new file mode 100644
index 0000000..cadd6dc
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/compliance.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"compliance.spec.js","sourceRoot":"","sources":["../../../test/connection/compliance.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts b/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts
new file mode 100644
index 0000000..1d866b3
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts
@@ -0,0 +1,7 @@
+import { Uint8ArrayList } from 'uint8arraylist';
+import type { Source, Duplex } from 'it-stream-types';
+/**
+ * A pair of streams where one drains from the other
+ */
+export declare function pair(): Duplex<AsyncGenerator<Uint8ArrayList>, Source<Uint8ArrayList | Uint8Array>, Promise<void>>;
+//# sourceMappingURL=pair.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts.map b/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts.map
new file mode 100644
index 0000000..b5f8d62
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/fixtures/pair.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"pair.d.ts","sourceRoot":"","sources":["../../../../test/connection/fixtures/pair.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAA;AAC/C,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAA;AAErD;;GAEG;AACH,wBAAgB,IAAI,IAAK,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,MAAM,CAAC,cAAc,GAAG,UAAU,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAmBlH"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/fixtures/pair.js b/node_modules/libp2p/dist/test/connection/fixtures/pair.js
new file mode 100644
index 0000000..e5b3f71
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/fixtures/pair.js
@@ -0,0 +1,24 @@
+import map from 'it-map';
+import defer from 'p-defer';
+import { Uint8ArrayList } from 'uint8arraylist';
+/**
+ * A pair of streams where one drains from the other
+ */
+export function pair() {
+    const deferred = defer();
+    let piped = false;
+    return {
+        sink: async (source) => {
+            if (piped) {
+                throw new Error('already piped');
+            }
+            piped = true;
+            deferred.resolve(source);
+        },
+        source: (async function* () {
+            const source = await deferred.promise;
+            yield* map(source, (buf) => buf instanceof Uint8Array ? new Uint8ArrayList(buf) : buf);
+        }())
+    };
+}
+//# sourceMappingURL=pair.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/fixtures/pair.js.map b/node_modules/libp2p/dist/test/connection/fixtures/pair.js.map
new file mode 100644
index 0000000..fe7ef1d
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/fixtures/pair.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"pair.js","sourceRoot":"","sources":["../../../../test/connection/fixtures/pair.ts"],"names":[],"mappings":"AAAA,OAAO,GAAG,MAAM,QAAQ,CAAA;AACxB,OAAO,KAAK,MAAM,SAAS,CAAA;AAC3B,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAA;AAG/C;;GAEG;AACH,MAAM,UAAU,IAAI;IAClB,MAAM,QAAQ,GAAG,KAAK,EAAuC,CAAA;IAC7D,IAAI,KAAK,GAAG,KAAK,CAAA;IAEjB,OAAO;QACL,IAAI,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;YACnB,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAA;YAClC,CAAC;YAED,KAAK,GAAG,IAAI,CAAA;YACZ,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QAC1B,CAAC;QACD,MAAM,EAAE,CAAC,KAAK,SAAU,CAAC;YACvB,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAA;YAErC,KAAM,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,YAAY,UAAU,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACzF,CAAC,EAAE,CAAC;KACL,CAAA;AACH,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/index.spec.d.ts b/node_modules/libp2p/dist/test/connection/index.spec.d.ts
new file mode 100644
index 0000000..b37c2d2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/index.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/index.spec.d.ts.map b/node_modules/libp2p/dist/test/connection/index.spec.d.ts.map
new file mode 100644
index 0000000..99cb1ba
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/index.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.d.ts","sourceRoot":"","sources":["../../../test/connection/index.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/index.spec.js b/node_modules/libp2p/dist/test/connection/index.spec.js
new file mode 100644
index 0000000..3d686bf
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/index.spec.js
@@ -0,0 +1,54 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import Sinon from 'sinon';
+import { createConnection } from '../../src/connection/index.js';
+function defaultConnectionInit() {
+    return {
+        timeline: {
+            open: Date.now() - 10,
+            upgraded: Date.now()
+        },
+        direction: 'outbound',
+        encryption: '/secio/1.0.0',
+        multiplexer: '/mplex/6.7.0',
+        status: 'open',
+        newStream: Sinon.stub(),
+        close: Sinon.stub(),
+        abort: Sinon.stub(),
+        getStreams: Sinon.stub(),
+        logger: defaultLogger()
+    };
+}
+describe('connection', () => {
+    it('should not require local or remote addrs', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        return createConnection({
+            remotePeer,
+            remoteAddr: multiaddr('/ip4/127.0.0.1/tcp/4002'),
+            ...defaultConnectionInit()
+        });
+    });
+    it('should append remote peer id to address if not already present', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = createConnection({
+            remotePeer,
+            remoteAddr: multiaddr('/ip4/127.0.0.1/tcp/4002'),
+            ...defaultConnectionInit()
+        });
+        expect(conn.remoteAddr.getPeerId()).to.equal(remotePeer.toString());
+    });
+    it('should not append remote peer id to address if present', async () => {
+        const remotePeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const otherPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = createConnection({
+            remotePeer,
+            remoteAddr: multiaddr(`/ip4/127.0.0.1/tcp/4002/p2p/${otherPeer}`),
+            ...defaultConnectionInit()
+        });
+        expect(conn.remoteAddr.getPeerId()).to.equal(otherPeer.toString());
+    });
+});
+//# sourceMappingURL=index.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/connection/index.spec.js.map b/node_modules/libp2p/dist/test/connection/index.spec.js.map
new file mode 100644
index 0000000..6d75393
--- /dev/null
+++ b/node_modules/libp2p/dist/test/connection/index.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../test/connection/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAA;AAEhE,SAAS,qBAAqB;IAC5B,OAAO;QACL,QAAQ,EAAE;YACR,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;YACrB,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE;SACrB;QACD,SAAS,EAAE,UAAU;QACrB,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE,cAAc;QAC3B,MAAM,EAAE,MAAM;QACd,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE;QACvB,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE;QACnB,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE;QACnB,UAAU,EAAE,KAAK,CAAC,IAAI,EAAE;QACxB,MAAM,EAAE,aAAa,EAAE;KACxB,CAAA;AACH,CAAC;AAED,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,UAAU,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAEzE,OAAO,gBAAgB,CAAC;YACtB,UAAU;YACV,UAAU,EAAE,SAAS,CAAC,yBAAyB,CAAC;YAChD,GAAG,qBAAqB,EAAE;SAC3B,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;QAC9E,MAAM,UAAU,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAEzE,MAAM,IAAI,GAAG,gBAAgB,CAAC;YAC5B,UAAU;YACV,UAAU,EAAE,SAAS,CAAC,yBAAyB,CAAC;YAChD,GAAG,qBAAqB,EAAE;SAC3B,CAAC,CAAA;QAEF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAA;IACrE,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QACtE,MAAM,UAAU,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QACzE,MAAM,SAAS,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAExE,MAAM,IAAI,GAAG,gBAAgB,CAAC;YAC5B,UAAU;YACV,UAAU,EAAE,SAAS,CAAC,+BAA+B,SAAS,EAAE,CAAC;YACjE,GAAG,qBAAqB,EAAE;SAC3B,CAAC,CAAA;QAEF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAA;IACpE,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts
new file mode 100644
index 0000000..9a90f9c
--- /dev/null
+++ b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=content-routing.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts.map b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts.map
new file mode 100644
index 0000000..5b19f30
--- /dev/null
+++ b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"content-routing.spec.d.ts","sourceRoot":"","sources":["../../../test/content-routing/content-routing.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js
new file mode 100644
index 0000000..4a0e591
--- /dev/null
+++ b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js
@@ -0,0 +1,315 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { contentRoutingSymbol } from '@libp2p/interface';
+import { peerIdFromString, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import all from 'it-all';
+import drain from 'it-drain';
+import { CID } from 'multiformats/cid';
+import pDefer from 'p-defer';
+import { stubInterface } from 'sinon-ts';
+import { createLibp2p } from '../../src/index.js';
+describe('content-routing', () => {
+    describe('no routers', () => {
+        let node;
+        beforeEach(async () => {
+            node = await createLibp2p();
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('.findProviders should return an error', async () => {
+            try {
+                // @ts-expect-error invalid params
+                for await (const _ of node.contentRouting.findProviders('a cid')) { } // eslint-disable-line
+                throw new Error('.findProviders should return an error');
+            }
+            catch (err) {
+                expect(err).to.exist();
+                expect(err.name).to.equal('NoContentRoutersError');
+            }
+        });
+        it('.provide should return an error', async () => {
+            // @ts-expect-error invalid params
+            await expect(node.contentRouting.provide('a cid'))
+                .to.eventually.be.rejected
+                .with.property('name', 'NoContentRoutersError');
+        });
+    });
+    describe('via service that implements ContentRouting', () => {
+        let node;
+        let router;
+        beforeEach(async () => {
+            router = stubInterface();
+            node = await createLibp2p({
+                services: {
+                    router: () => ({
+                        [contentRoutingSymbol]: router
+                    })
+                }
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the configured service to provide', async () => {
+            const deferred = pDefer();
+            router.provide.callsFake(async function () {
+                deferred.resolve();
+            });
+            void node.contentRouting.provide(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'));
+            await deferred.promise;
+        });
+        it('should use the configured service to find providers', async () => {
+            const deferred = pDefer();
+            router.findProviders.callsFake(async function* () {
+                yield {
+                    id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/4001')
+                    ]
+                };
+                deferred.resolve();
+            });
+            await drain(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            return deferred.promise;
+        });
+    });
+    describe('via configured ContentRouter', () => {
+        let node;
+        let delegate;
+        beforeEach(async () => {
+            delegate = stubInterface();
+            delegate.provide.returns(Promise.resolve());
+            delegate.findProviders.returns(async function* () { }());
+            node = await createLibp2p({
+                contentRouters: [
+                    () => delegate
+                ]
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the delegate router to provide', async () => {
+            const deferred = pDefer();
+            delegate.provide.callsFake(async () => {
+                deferred.resolve();
+            });
+            void node.contentRouting.provide(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'));
+            return deferred.promise;
+        });
+        it('should use the delegate router to find providers', async () => {
+            const deferred = pDefer();
+            delegate.findProviders.returns(async function* () {
+                yield {
+                    id: node.peerId,
+                    multiaddrs: []
+                };
+                deferred.resolve();
+            }());
+            await drain(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            return deferred.promise;
+        });
+        it('should be able to register as a provider', async () => {
+            const cid = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+            await node.contentRouting.provide(cid);
+            expect(delegate.provide.calledWith(cid)).to.equal(true);
+        });
+        it('should handle errors when registering as a provider', async () => {
+            const cid = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+            delegate.provide.withArgs(cid).throws(new Error('Could not provide'));
+            await expect(node.contentRouting.provide(cid))
+                .to.eventually.be.rejected()
+                .with.property('message', 'Could not provide');
+        });
+        it('should be able to find providers', async () => {
+            const cid = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+            const provider = 'QmZNgCqZCvTsi3B4Vt7gsSqpkqDpE7M2Y9TDmEhbDb4ceF';
+            delegate.findProviders.withArgs(cid).returns(async function* () {
+                yield {
+                    id: peerIdFromString(provider),
+                    multiaddrs: [
+                        multiaddr('/ip4/0.0.0.0/tcp/0')
+                    ]
+                };
+            }());
+            const providers = await all(node.contentRouting.findProviders(cid));
+            expect(providers).to.have.length(1);
+            expect(providers[0].id.toString()).to.equal(provider);
+        });
+        it('should handle errors when finding providers', async () => {
+            const cid = CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB');
+            delegate.findProviders.withArgs(cid).throws(new Error('Could not find providers'));
+            await expect(drain(node.contentRouting.findProviders(cid)))
+                .to.eventually.be.rejected()
+                .with.property('message', 'Could not find providers');
+        });
+    });
+    describe('via services and configured content routers', () => {
+        let node;
+        let delegate;
+        let router;
+        beforeEach(async () => {
+            router = stubInterface();
+            delegate = stubInterface();
+            delegate.provide.returns(Promise.resolve());
+            delegate.findProviders.returns(async function* () { }());
+            node = await createLibp2p({
+                contentRouters: [
+                    () => delegate
+                ],
+                services: {
+                    router: () => ({
+                        [contentRoutingSymbol]: router
+                    })
+                }
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should store the multiaddrs of a peer', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            router.findProviders.callsFake(async function* () { });
+            delegate.findProviders.callsFake(async function* () {
+                yield result;
+            });
+            expect(await node.peerStore.has(providerPeerId)).to.not.be.ok();
+            await drain(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            await expect(node.peerStore.get(providerPeerId)).to.eventually.have.property('addresses').that.deep.include({
+                isCertified: false,
+                multiaddr: result.multiaddrs[0]
+            });
+        });
+        it('should not wait for routing findProviders to finish before returning results', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            const defer = pDefer();
+            router.findProviders.callsFake(async function* () {
+                await defer.promise;
+            });
+            delegate.findProviders.callsFake(async function* () {
+                yield result;
+                await defer.promise;
+            });
+            for await (const provider of node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'))) {
+                expect(provider.id).to.deep.equal(providerPeerId);
+                defer.resolve();
+            }
+        });
+        it('should dedupe results', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            router.findProviders.callsFake(async function* () {
+                yield result;
+            });
+            delegate.findProviders.callsFake(async function* () {
+                yield result;
+            });
+            const results = await all(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            expect(results).to.be.an('array').with.lengthOf(1).that.deep.equals([result]);
+        });
+        it('should combine multiaddrs when different addresses are returned by different content routers', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result1 = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            const result2 = {
+                id: providerPeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/213.213.213.213/tcp/2344')
+                ]
+            };
+            router.findProviders.callsFake(async function* () {
+                yield result1;
+            });
+            delegate.findProviders.callsFake(async function* () {
+                yield result2;
+            });
+            await drain(node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB')));
+            await expect(node.peerStore.get(providerPeerId)).to.eventually.have.property('addresses').that.deep.include({
+                isCertified: false,
+                multiaddr: result1.multiaddrs[0]
+            }).and.to.deep.include({
+                isCertified: false,
+                multiaddr: result2.multiaddrs[0]
+            });
+        });
+        it('should use both the service and delegate router to provide', async () => {
+            const serviceDeferred = pDefer();
+            const delegatedDeferred = pDefer();
+            router.provide.callsFake(async function () {
+                serviceDeferred.resolve();
+            });
+            delegate.provide.callsFake(async function () {
+                delegatedDeferred.resolve();
+            });
+            await node.contentRouting.provide(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'));
+            await Promise.all([
+                serviceDeferred.promise,
+                delegatedDeferred.promise
+            ]);
+        });
+        it('should use the service if the delegate fails to find providers', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = [{
+                    id: providerPeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/2341')
+                    ]
+                }];
+            router.findProviders.callsFake(async function* () {
+                yield results[0];
+            });
+            delegate.findProviders.callsFake(async function* () {
+            });
+            const providers = [];
+            for await (const prov of node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'))) {
+                providers.push(prov);
+            }
+            expect(providers).to.have.length.above(0);
+            expect(providers).to.eql(results);
+        });
+        it('should use the delegate if the service fails to find providers', async () => {
+            const providerPeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = [{
+                    id: providerPeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/2341')
+                    ]
+                }];
+            router.findProviders.callsFake(async function* () { });
+            delegate.findProviders.callsFake(async function* () {
+                yield results[0];
+            });
+            const providers = [];
+            for await (const prov of node.contentRouting.findProviders(CID.parse('QmU621oD8AhHw6t25vVyfYKmL9VV3PTgc52FngEhTGACFB'))) {
+                providers.push(prov);
+            }
+            expect(providers).to.have.length.above(0);
+            expect(providers).to.eql(results);
+        });
+    });
+});
+//# sourceMappingURL=content-routing.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js.map b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js.map
new file mode 100644
index 0000000..3d88b6a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/content-routing/content-routing.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"content-routing.spec.js","sourceRoot":"","sources":["../../../test/content-routing/content-routing.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/consume-peer-record.spec.d.ts b/node_modules/libp2p/dist/test/core/consume-peer-record.spec.d.ts
new file mode 100644
index 0000000..1f60e50
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/consume-peer-record.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=consume-peer-record.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/consume-peer-record.spec.d.ts.map b/node_modules/libp2p/dist/test/core/consume-peer-record.spec.d.ts.map
new file mode 100644
index 0000000..e87be48
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/consume-peer-record.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"consume-peer-record.spec.d.ts","sourceRoot":"","sources":["../../../test/core/consume-peer-record.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/consume-peer-record.spec.js b/node_modules/libp2p/dist/test/core/consume-peer-record.spec.js
new file mode 100644
index 0000000..d903151
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/consume-peer-record.spec.js
@@ -0,0 +1,37 @@
+/* eslint-env mocha */
+import { plaintext } from '@libp2p/plaintext';
+import { webSockets } from '@libp2p/websockets';
+import { multiaddr } from '@multiformats/multiaddr';
+import { createLibp2p } from '../../src/index.js';
+describe('Consume peer record', () => {
+    let libp2p;
+    beforeEach(async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+    });
+    afterEach(async () => {
+        await libp2p.stop();
+    });
+    it('should update addresses when observed addrs are confirmed', async () => {
+        let done;
+        libp2p.peerStore.patch = async () => {
+            done();
+            return {};
+        };
+        const p = new Promise(resolve => {
+            done = resolve;
+        });
+        await libp2p.start();
+        // @ts-expect-error components field is private
+        libp2p.components.addressManager.confirmObservedAddr(multiaddr('/ip4/123.123.123.123/tcp/3983'));
+        await p;
+        await libp2p.stop();
+    });
+});
+//# sourceMappingURL=consume-peer-record.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/consume-peer-record.spec.js.map b/node_modules/libp2p/dist/test/core/consume-peer-record.spec.js.map
new file mode 100644
index 0000000..6777d16
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/consume-peer-record.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"consume-peer-record.spec.js","sourceRoot":"","sources":["../../../test/core/consume-peer-record.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAI,MAAc,CAAA;IAElB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;SACF,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;IACrB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,IAAI,IAAgB,CAAA;QAEpB,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE;YAClC,IAAI,EAAE,CAAA;YACN,OAAO,EAAS,CAAA;QAClB,CAAC,CAAA;QAED,MAAM,CAAC,GAAG,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE;YACpC,IAAI,GAAG,OAAO,CAAA;QAChB,CAAC,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;QAEpB,+CAA+C;QAC/C,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,mBAAmB,CAAC,SAAS,CAAC,+BAA+B,CAAC,CAAC,CAAA;QAEhG,MAAM,CAAC,CAAA;QAEP,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;IACrB,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/core.spec.d.ts b/node_modules/libp2p/dist/test/core/core.spec.d.ts
new file mode 100644
index 0000000..79e42aa
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/core.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=core.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/core.spec.d.ts.map b/node_modules/libp2p/dist/test/core/core.spec.d.ts.map
new file mode 100644
index 0000000..b7dcb9b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/core.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"core.spec.d.ts","sourceRoot":"","sources":["../../../test/core/core.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/core.spec.js b/node_modules/libp2p/dist/test/core/core.spec.js
new file mode 100644
index 0000000..c55b64b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/core.spec.js
@@ -0,0 +1,56 @@
+/* eslint-env mocha */
+import { circuitRelayTransport } from '@libp2p/circuit-relay-v2';
+import { identify } from '@libp2p/identify';
+import { webSockets } from '@libp2p/websockets';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { createLibp2p } from '../../src/index.js';
+describe('core', () => {
+    let libp2p;
+    afterEach(async () => {
+        await libp2p.stop();
+    });
+    it('should start a minimal node', async () => {
+        libp2p = await createLibp2p();
+        expect(libp2p).to.have.property('status', 'started');
+    });
+    it('should say an address is not dialable if we have no transport for it', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets()
+            ]
+        });
+        const ma = multiaddr('/dns4/example.com/sctp/1234');
+        await expect(libp2p.isDialable(ma)).to.eventually.be.false();
+    });
+    it('should say an address is dialable if a transport is configured', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets()
+            ]
+        });
+        const ma = multiaddr('/dns4/example.com/tls/ws');
+        await expect(libp2p.isDialable(ma)).to.eventually.be.true();
+    });
+    it('should test if a protocol can run over a limited connection', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets(),
+                circuitRelayTransport()
+            ],
+            services: {
+                identify: identify()
+            }
+        });
+        await expect(libp2p.isDialable(multiaddr('/dns4/example.com/tls/ws'), {
+            runOnLimitedConnection: false
+        })).to.eventually.be.true();
+        await expect(libp2p.isDialable(multiaddr('/dns4/example.com/tls/ws/p2p/12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE1/p2p-circuit/p2p/12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE2'), {
+            runOnLimitedConnection: true
+        })).to.eventually.be.true();
+        await expect(libp2p.isDialable(multiaddr('/dns4/example.com/tls/ws/p2p/12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE1/p2p-circuit/p2p/12D3KooWSExt8hTzoaHEhn435BTK6BPNSY1LpTc1j2o9Gw53tXE2'), {
+            runOnLimitedConnection: false
+        })).to.eventually.be.false();
+    });
+});
+//# sourceMappingURL=core.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/core.spec.js.map b/node_modules/libp2p/dist/test/core/core.spec.js.map
new file mode 100644
index 0000000..f64d0bd
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/core.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"core.spec.js","sourceRoot":"","sources":["../../../test/core/core.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,qBAAqB,EAAE,MAAM,0BAA0B,CAAA;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAA;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;IACpB,IAAI,MAAc,CAAA;IAElB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;IACrB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,GAAG,MAAM,YAAY,EAAE,CAAA;QAE7B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;IACtD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sEAAsE,EAAE,KAAK,IAAI,EAAE;QACpF,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;SACF,CAAC,CAAA;QAEF,MAAM,EAAE,GAAG,SAAS,CAAC,6BAA6B,CAAC,CAAA;QAEnD,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC9D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;QAC9E,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;SACF,CAAC,CAAA;QAEF,MAAM,EAAE,GAAG,SAAS,CAAC,0BAA0B,CAAC,CAAA;QAEhD,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IAC7D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;QAC3E,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,UAAU,EAAE;gBACV,UAAU,EAAE;gBACZ,qBAAqB,EAAE;aACxB;YACD,QAAQ,EAAE;gBACR,QAAQ,EAAE,QAAQ,EAAE;aACrB;SACF,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,0BAA0B,CAAC,EAAE;YACpE,sBAAsB,EAAE,KAAK;SAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAE3B,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,wJAAwJ,CAAC,EAAE;YAClM,sBAAsB,EAAE,IAAI;SAC7B,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAE3B,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,wJAAwJ,CAAC,EAAE;YAClM,sBAAsB,EAAE,KAAK;SAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC9B,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/encryption.spec.d.ts b/node_modules/libp2p/dist/test/core/encryption.spec.d.ts
new file mode 100644
index 0000000..63c83cb
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/encryption.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=encryption.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/encryption.spec.d.ts.map b/node_modules/libp2p/dist/test/core/encryption.spec.d.ts.map
new file mode 100644
index 0000000..85fb6d2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/encryption.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"encryption.spec.d.ts","sourceRoot":"","sources":["../../../test/core/encryption.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/encryption.spec.js b/node_modules/libp2p/dist/test/core/encryption.spec.js
new file mode 100644
index 0000000..c9bdc35
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/encryption.spec.js
@@ -0,0 +1,19 @@
+/* eslint-env mocha */
+import { plaintext } from '@libp2p/plaintext';
+import { webSockets } from '@libp2p/websockets';
+import { createLibp2p } from '../../src/index.js';
+describe('Connection encryption configuration', () => {
+    it('can be created', async () => {
+        const config = {
+            start: false,
+            transports: [
+                webSockets()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        };
+        await createLibp2p(config);
+    });
+});
+//# sourceMappingURL=encryption.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/encryption.spec.js.map b/node_modules/libp2p/dist/test/core/encryption.spec.js.map
new file mode 100644
index 0000000..4552f8e
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/encryption.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"encryption.spec.js","sourceRoot":"","sources":["../../../test/core/encryption.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,EAAE,YAAY,EAAsB,MAAM,oBAAoB,CAAA;AAErE,QAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;IACnD,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,MAAM,GAAkB;YAC5B,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;SACF,CAAA;QACD,MAAM,YAAY,CAAC,MAAM,CAAC,CAAA;IAC5B,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/events.spec.d.ts b/node_modules/libp2p/dist/test/core/events.spec.d.ts
new file mode 100644
index 0000000..35b5a7f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/events.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=events.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/events.spec.d.ts.map b/node_modules/libp2p/dist/test/core/events.spec.d.ts.map
new file mode 100644
index 0000000..9671761
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/events.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"events.spec.d.ts","sourceRoot":"","sources":["../../../test/core/events.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/events.spec.js b/node_modules/libp2p/dist/test/core/events.spec.js
new file mode 100644
index 0000000..6888af2
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/events.spec.js
@@ -0,0 +1,42 @@
+/* eslint-env mocha */
+import { plaintext } from '@libp2p/plaintext';
+import { webSockets } from '@libp2p/websockets';
+import { expect } from 'aegir/chai';
+import { pEvent } from 'p-event';
+import { createLibp2p } from '../../src/index.js';
+describe('events', () => {
+    let node;
+    afterEach(async () => {
+        if (node != null) {
+            await node.stop();
+        }
+    });
+    it('should emit a start event', async () => {
+        node = await createLibp2p({
+            start: false,
+            transports: [
+                webSockets()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        const eventPromise = pEvent(node, 'start');
+        await node.start();
+        await expect(eventPromise).to.eventually.have.property('detail', node);
+    });
+    it('should emit a stop event', async () => {
+        node = await createLibp2p({
+            transports: [
+                webSockets()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        const eventPromise = pEvent(node, 'stop');
+        await node.stop();
+        await expect(eventPromise).to.eventually.have.property('detail', node);
+    });
+});
+//# sourceMappingURL=events.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/events.spec.js.map b/node_modules/libp2p/dist/test/core/events.spec.js.map
new file mode 100644
index 0000000..ec02992
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/events.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"events.spec.js","sourceRoot":"","sources":["../../../test/core/events.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAA;AAChC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,IAAI,IAAY,CAAA;IAEhB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;YACjB,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACnB,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,IAAI,GAAG,MAAM,YAAY,CAAC;YACxB,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;SACF,CAAC,CAAA;QAEF,MAAM,YAAY,GAAG,MAAM,CAA+B,IAAI,EAAE,OAAO,CAAC,CAAA;QAExE,MAAM,IAAI,CAAC,KAAK,EAAE,CAAA;QAClB,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;IACxE,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACxC,IAAI,GAAG,MAAM,YAAY,CAAC;YACxB,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;SACF,CAAC,CAAA;QAEF,MAAM,YAAY,GAAG,MAAM,CAA8B,IAAI,EAAE,MAAM,CAAC,CAAA;QAEtE,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;IACxE,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts b/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts
new file mode 100644
index 0000000..6dbf4bc
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=get-public-key.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts.map b/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts.map
new file mode 100644
index 0000000..92e484a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/get-public-key.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-public-key.spec.d.ts","sourceRoot":"","sources":["../../../test/core/get-public-key.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/get-public-key.spec.js b/node_modules/libp2p/dist/test/core/get-public-key.spec.js
new file mode 100644
index 0000000..2bd61f6
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/get-public-key.spec.js
@@ -0,0 +1,57 @@
+/* eslint-env mocha */
+import { generateKeyPair, publicKeyToProtobuf } from '@libp2p/crypto/keys';
+import { contentRoutingSymbol } from '@libp2p/interface';
+import { peerIdFromMultihash, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import { stubInterface } from 'sinon-ts';
+import { createLibp2p } from '../../src/index.js';
+describe('getPublicKey', () => {
+    let node;
+    let router;
+    beforeEach(async () => {
+        router = stubInterface();
+        router[contentRoutingSymbol] = router;
+        node = await createLibp2p({
+            services: {
+                router: () => router
+            }
+        });
+    });
+    afterEach(async () => {
+        if (node != null) {
+            await node.stop();
+        }
+    });
+    it('should extract embedded public key', async () => {
+        const otherPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const key = await node.getPublicKey(otherPeer);
+        expect(otherPeer.publicKey.equals(key)).to.be.true();
+    });
+    it('should get key from the peerstore', async () => {
+        const otherPeer = peerIdFromPrivateKey(await generateKeyPair('RSA', 512));
+        if (otherPeer.publicKey == null) {
+            throw new Error('Public key was missing');
+        }
+        await node.peerStore.patch(otherPeer, {
+            publicKey: otherPeer.publicKey
+        });
+        const key = await node.getPublicKey(otherPeer);
+        expect(otherPeer.publicKey.equals(key)).to.be.true();
+    });
+    it('should query content routing when the key is not in the keystore', async () => {
+        const otherPeer = peerIdFromPrivateKey(await generateKeyPair('RSA', 512));
+        router.get.callsFake(async () => {
+            if (otherPeer.publicKey == null) {
+                throw new Error('Public key was missing');
+            }
+            return Promise.resolve(publicKeyToProtobuf(otherPeer.publicKey));
+        });
+        // create a copy of the RSA key, this will not have the public key
+        const otherPeerWithoutPublicKey = peerIdFromMultihash(otherPeer.toMultihash());
+        expect(otherPeerWithoutPublicKey).to.have.property('publicKey', undefined);
+        const key = await node.getPublicKey(otherPeerWithoutPublicKey);
+        expect(otherPeer.publicKey?.equals(key)).to.be.true();
+        expect(router.get.called).to.be.true('routing was not queried');
+    });
+});
+//# sourceMappingURL=get-public-key.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/get-public-key.spec.js.map b/node_modules/libp2p/dist/test/core/get-public-key.spec.js.map
new file mode 100644
index 0000000..f41e97c
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/get-public-key.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-public-key.spec.js","sourceRoot":"","sources":["../../../test/core/get-public-key.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/listening.node.d.ts b/node_modules/libp2p/dist/test/core/listening.node.d.ts
new file mode 100644
index 0000000..9c74e4e
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/listening.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=listening.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/listening.node.d.ts.map b/node_modules/libp2p/dist/test/core/listening.node.d.ts.map
new file mode 100644
index 0000000..8d61647
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/listening.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"listening.node.d.ts","sourceRoot":"","sources":["../../../test/core/listening.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/listening.node.js b/node_modules/libp2p/dist/test/core/listening.node.js
new file mode 100644
index 0000000..0dc0c8e
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/listening.node.js
@@ -0,0 +1,40 @@
+/* eslint-env mocha */
+import { plaintext } from '@libp2p/plaintext';
+import { tcp } from '@libp2p/tcp';
+import { expect } from 'aegir/chai';
+import { createLibp2p } from '../../src/index.js';
+const listenAddr = '/ip4/0.0.0.0/tcp/0';
+describe('Listening', () => {
+    let libp2p;
+    after(async () => {
+        await libp2p.stop();
+    });
+    it('should replace wildcard host and port with actual host and port on startup', async () => {
+        libp2p = await createLibp2p({
+            addresses: {
+                listen: [listenAddr]
+            },
+            transports: [
+                tcp()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        await libp2p.start();
+        // @ts-expect-error components field is private
+        const addrs = libp2p.components.transportManager.getAddrs();
+        // Should get something like:
+        //   /ip4/127.0.0.1/tcp/50866
+        //   /ip4/192.168.1.2/tcp/50866
+        expect(addrs.length).to.be.at.least(1);
+        for (const addr of addrs) {
+            const opts = addr.toOptions();
+            expect(opts.family).to.equal(4);
+            expect(opts.transport).to.equal('tcp');
+            expect(opts.host).to.match(/[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/);
+            expect(opts.port).to.be.gt(0);
+        }
+    });
+});
+//# sourceMappingURL=listening.node.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/listening.node.js.map b/node_modules/libp2p/dist/test/core/listening.node.js.map
new file mode 100644
index 0000000..bc716be
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/listening.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"listening.node.js","sourceRoot":"","sources":["../../../test/core/listening.node.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AACjC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,MAAM,UAAU,GAAG,oBAAoB,CAAA;AAEvC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,IAAI,MAAc,CAAA;IAElB,KAAK,CAAC,KAAK,IAAI,EAAE;QACf,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;IACrB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4EAA4E,EAAE,KAAK,IAAI,EAAE;QAC1F,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,SAAS,EAAE;gBACT,MAAM,EAAE,CAAC,UAAU,CAAC;aACrB;YACD,UAAU,EAAE;gBACV,GAAG,EAAE;aACN;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;SACF,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;QAEpB,+CAA+C;QAC/C,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAA;QAE3D,6BAA6B;QAC7B,6BAA6B;QAC7B,+BAA+B;QAC/B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QACtC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,CAAA;YAC7B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YAC/B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAA;YAC5D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAC/B,CAAC;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts b/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts
new file mode 100644
index 0000000..6a1b640
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-id.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts.map b/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts.map
new file mode 100644
index 0000000..7d06eaa
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/peer-id.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-id.spec.d.ts","sourceRoot":"","sources":["../../../test/core/peer-id.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/peer-id.spec.js b/node_modules/libp2p/dist/test/core/peer-id.spec.js
new file mode 100644
index 0000000..d539a3c
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/peer-id.spec.js
@@ -0,0 +1,25 @@
+/* eslint-env mocha */
+import { plaintext } from '@libp2p/plaintext';
+import { webSockets } from '@libp2p/websockets';
+import { expect } from 'aegir/chai';
+import { createLibp2p } from '../../src/index.js';
+describe('peer-id', () => {
+    let libp2p;
+    afterEach(async () => {
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+    });
+    it('should create a PeerId if none is passed', async () => {
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        expect(libp2p.peerId).to.be.ok();
+    });
+});
+//# sourceMappingURL=peer-id.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/peer-id.spec.js.map b/node_modules/libp2p/dist/test/core/peer-id.spec.js.map
new file mode 100644
index 0000000..294ea5b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/peer-id.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-id.spec.js","sourceRoot":"","sources":["../../../test/core/peer-id.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAe,MAAM,oBAAoB,CAAA;AAE9D,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,IAAI,MAAc,CAAA;IAElB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC;YACnB,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;QACrB,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;SACF,CAAC,CAAA;QAEF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;IAClC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts b/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts
new file mode 100644
index 0000000..76f3841
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=random-walk.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts.map b/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts.map
new file mode 100644
index 0000000..fa2df07
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/random-walk.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"random-walk.spec.d.ts","sourceRoot":"","sources":["../../../test/core/random-walk.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/random-walk.spec.js b/node_modules/libp2p/dist/test/core/random-walk.spec.js
new file mode 100644
index 0000000..f86e63d
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/random-walk.spec.js
@@ -0,0 +1,204 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { stop } from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import all from 'it-all';
+import drain from 'it-drain';
+import map from 'it-map';
+import take from 'it-take';
+import pDefer from 'p-defer';
+import { stubInterface } from 'sinon-ts';
+import { RandomWalk as RandomWalkClass } from '../../src/random-walk.js';
+let port = 1234;
+async function createRandomPeerInfo() {
+    port++;
+    return {
+        id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+        multiaddrs: [
+            multiaddr(`/ip4/123.123.123.123/tcp/${port}`)
+        ]
+    };
+}
+// eslint-disable-next-line require-yield
+async function* slowIterator() {
+    await delay(1000);
+}
+describe('random-walk', () => {
+    let randomwalk;
+    let peerRouting;
+    beforeEach(async () => {
+        peerRouting = stubInterface();
+        randomwalk = new RandomWalkClass({
+            peerRouting,
+            logger: defaultLogger()
+        });
+    });
+    afterEach(async () => {
+        await stop(randomwalk);
+    });
+    it('should perform a random walk', async () => {
+        const randomPeer = await createRandomPeerInfo();
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* () {
+            yield randomPeer;
+        })
+            .onSecondCall().returns(slowIterator());
+        const peers = await all(take(randomwalk.walk(), 1));
+        expect(peers.map(peer => peer.id.toString())).to.include(randomPeer.id.toString());
+    });
+    it('should break out of a random walk', async () => {
+        let yielded = 0;
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yielded++;
+                yield await createRandomPeerInfo();
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        await drain(take(randomwalk.walk(), 1));
+        expect(yielded).to.equal(1);
+    });
+    it('should throw if walking fails', async () => {
+        const err = new Error('Oh no!');
+        const randomPeer1 = await createRandomPeerInfo();
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* () {
+            yield randomPeer1;
+            throw err;
+        })
+            .onThirdCall().returns(slowIterator());
+        await expect(all(randomwalk.walk())).to.eventually.be.rejectedWith(err);
+    });
+    it('should keep walking until the consumer stops pulling', async () => {
+        const randomPeer1 = await createRandomPeerInfo();
+        const randomPeer2 = await createRandomPeerInfo();
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* () {
+            yield randomPeer1;
+        })
+            .onSecondCall().callsFake(async function* () {
+            yield randomPeer2;
+        });
+        const peers = await all(take(randomwalk.walk(), 2));
+        expect(peers.map(peer => peer.id.toString())).to.deep.equal([
+            randomPeer1.id.toString(),
+            randomPeer2.id.toString()
+        ]);
+    });
+    it('should join an existing random walk', async () => {
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yield await createRandomPeerInfo();
+                await delay(100);
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        const [peers1, peers2] = await Promise.all([
+            all(take(randomwalk.walk(), 2)),
+            all(take(randomwalk.walk(), 2))
+        ]);
+        expect(peers1.map(peer => peer.id.toString())).to.deep.equal(peers2.map(peer => peer.id.toString()));
+    });
+    it('should continue random walk until all consumers satisfied', async () => {
+        let yielded = 0;
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yielded++;
+                yield await createRandomPeerInfo();
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        await Promise.all([
+            drain(take(randomwalk.walk(), 1)),
+            drain(take(randomwalk.walk(), 2))
+        ]);
+        expect(yielded).to.equal(3);
+    });
+    it('should not block walk on slow consumers', async () => {
+        let yielded = 0;
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yielded++;
+                yield await createRandomPeerInfo();
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        await Promise.all([
+            drain(take(randomwalk.walk(), 5)),
+            drain(map(take(randomwalk.walk(), 2), async (peer) => {
+                await delay(100);
+                return peer;
+            }))
+        ]);
+        expect(yielded).to.equal(10);
+    });
+    it('should unpause query if second consumer requires peers', async () => {
+        peerRouting.getClosestPeers
+            .onFirstCall().callsFake(async function* (key, options) {
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yield await createRandomPeerInfo();
+            }
+        })
+            .onSecondCall().returns(slowIterator());
+        const deferred = pDefer();
+        // one slow consumer starts
+        const slowPeersPromise = all(map(take(randomwalk.walk(), 2), async (peer, index) => {
+            if (index === 1) {
+                deferred.resolve();
+                await delay(100);
+            }
+            return peer;
+        }));
+        // wait for slow consumer to have received the first peer
+        await deferred.promise;
+        // start fast consumer
+        const [slowPeers, fastPeers] = await Promise.all([
+            slowPeersPromise,
+            all(take(randomwalk.walk(), 5))
+        ]);
+        // both should hav got peers
+        expect(slowPeers).to.have.lengthOf(2);
+        expect(fastPeers).to.have.lengthOf(5);
+    });
+    it('should abort a slow query', async () => {
+        peerRouting.getClosestPeers.returns(slowIterator());
+        await expect(drain(randomwalk.walk({
+            signal: AbortSignal.timeout(10)
+        }))).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+    });
+    it('should allow an impatient consumer to abort a slow query but other consumers to receive values', async () => {
+        peerRouting.getClosestPeers.callsFake(async function* (key, options) {
+            await delay(100);
+            for (let i = 0; i < 100; i++) {
+                options?.signal?.throwIfAborted();
+                yield await createRandomPeerInfo();
+            }
+        });
+        const results = await Promise.allSettled([
+            drain(randomwalk.walk({
+                signal: AbortSignal.timeout(10)
+            })),
+            all(take(randomwalk.walk({
+                signal: AbortSignal.timeout(5000)
+            }), 2))
+        ]);
+        expect(results).to.have.nested.property('[0].status', 'rejected');
+        expect(results).to.have.nested.property('[0].reason.name', 'AbortError');
+        expect(results).to.have.nested.property('[1].status', 'fulfilled');
+        expect(results).to.have.nested.property('[1].value').with.lengthOf(2);
+    });
+});
+//# sourceMappingURL=random-walk.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/random-walk.spec.js.map b/node_modules/libp2p/dist/test/core/random-walk.spec.js.map
new file mode 100644
index 0000000..40e5bb4
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/random-walk.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"random-walk.spec.js","sourceRoot":"","sources":["../../../test/core/random-walk.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts b/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts
new file mode 100644
index 0000000..277f0f0
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=service-dependencies.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts.map b/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts.map
new file mode 100644
index 0000000..2c47b5b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/service-dependencies.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"service-dependencies.spec.d.ts","sourceRoot":"","sources":["../../../test/core/service-dependencies.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/service-dependencies.spec.js b/node_modules/libp2p/dist/test/core/service-dependencies.spec.js
new file mode 100644
index 0000000..0a73584
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/service-dependencies.spec.js
@@ -0,0 +1,60 @@
+import { serviceCapabilities, serviceDependencies, stop } from '@libp2p/interface';
+import { expect } from 'aegir/chai';
+import { createLibp2p } from '../../src/index.js';
+/**
+ * A service with no dependencies
+ */
+function serviceA() {
+    return () => {
+        return {
+            [serviceCapabilities]: [
+                '@libp2p/service-a'
+            ]
+        };
+    };
+}
+/**
+ * A service with a dependency on service A
+ */
+function serviceB() {
+    return () => {
+        return {
+            [Symbol.toStringTag]: 'service-b',
+            [serviceDependencies]: [
+                '@libp2p/service-a'
+            ]
+        };
+    };
+}
+describe('service dependencies', () => {
+    let node;
+    afterEach(async () => {
+        await stop(node);
+    });
+    it('should start when services have no dependencies', async () => {
+        node = await createLibp2p({
+            services: {
+                a: serviceA()
+            }
+        });
+        expect(node).to.be.ok();
+    });
+    it('should error when service dependencies are unmet', async () => {
+        await expect(createLibp2p({
+            services: {
+                b: serviceB()
+            }
+        })).to.eventually.be.rejected
+            .with.property('name', 'UnmetServiceDependenciesError');
+    });
+    it('should not error when service dependencies are met', async () => {
+        node = await createLibp2p({
+            services: {
+                a: serviceA(),
+                b: serviceB()
+            }
+        });
+        expect(node).to.be.ok();
+    });
+});
+//# sourceMappingURL=service-dependencies.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/service-dependencies.spec.js.map b/node_modules/libp2p/dist/test/core/service-dependencies.spec.js.map
new file mode 100644
index 0000000..f029078
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/service-dependencies.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"service-dependencies.spec.js","sourceRoot":"","sources":["../../../test/core/service-dependencies.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AAClF,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD;;GAEG;AACH,SAAS,QAAQ;IACf,OAAO,GAAG,EAAE;QACV,OAAO;YACL,CAAC,mBAAmB,CAAC,EAAE;gBACrB,mBAAmB;aACpB;SACF,CAAA;IACH,CAAC,CAAA;AACH,CAAC;AAED;;GAEG;AACH,SAAS,QAAQ;IACf,OAAO,GAAG,EAAE;QACV,OAAO;YACL,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,WAAW;YACjC,CAAC,mBAAmB,CAAC,EAAE;gBACrB,mBAAmB;aACpB;SACF,CAAA;IACH,CAAC,CAAA;AACH,CAAC;AAED,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,IAAI,IAAY,CAAA;IAEhB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,IAAI,CAAC,IAAI,CAAC,CAAA;IAClB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,IAAI,GAAG,MAAM,YAAY,CAAC;YACxB,QAAQ,EAAE;gBACR,CAAC,EAAE,QAAQ,EAAE;aACd;SACF,CAAC,CAAA;QAEF,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;IACzB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,MAAM,CAAC,YAAY,CAAC;YACxB,QAAQ,EAAE;gBACR,CAAC,EAAE,QAAQ,EAAE;aACd;SACF,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ;aAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,+BAA+B,CAAC,CAAA;IAC3D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;QAClE,IAAI,GAAG,MAAM,YAAY,CAAC;YACxB,QAAQ,EAAE;gBACR,CAAC,EAAE,QAAQ,EAAE;gBACb,CAAC,EAAE,QAAQ,EAAE;aACd;SACF,CAAC,CAAA;QAEF,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;IACzB,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/status.node.d.ts b/node_modules/libp2p/dist/test/core/status.node.d.ts
new file mode 100644
index 0000000..d15b205
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/status.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=status.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/status.node.d.ts.map b/node_modules/libp2p/dist/test/core/status.node.d.ts.map
new file mode 100644
index 0000000..c6b7b9a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/status.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"status.node.d.ts","sourceRoot":"","sources":["../../../test/core/status.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/status.node.js b/node_modules/libp2p/dist/test/core/status.node.js
new file mode 100644
index 0000000..0463e9d
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/status.node.js
@@ -0,0 +1,36 @@
+/* eslint-env mocha */
+import { plaintext } from '@libp2p/plaintext';
+import { tcp } from '@libp2p/tcp';
+import { expect } from 'aegir/chai';
+import { createLibp2p } from '../../src/index.js';
+const listenAddr = '/ip4/0.0.0.0/tcp/0';
+describe('status', () => {
+    let libp2p;
+    after(async () => {
+        await libp2p.stop();
+    });
+    it('should have status', async () => {
+        libp2p = await createLibp2p({
+            start: false,
+            addresses: {
+                listen: [listenAddr]
+            },
+            transports: [
+                tcp()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ]
+        });
+        expect(libp2p).to.have.property('status', 'stopped');
+        const startP = libp2p.start();
+        expect(libp2p).to.have.property('status', 'starting');
+        await startP;
+        expect(libp2p).to.have.property('status', 'started');
+        const stopP = libp2p.stop();
+        expect(libp2p).to.have.property('status', 'stopping');
+        await stopP;
+        expect(libp2p).to.have.property('status', 'stopped');
+    });
+});
+//# sourceMappingURL=status.node.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/core/status.node.js.map b/node_modules/libp2p/dist/test/core/status.node.js.map
new file mode 100644
index 0000000..8fa7e38
--- /dev/null
+++ b/node_modules/libp2p/dist/test/core/status.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"status.node.js","sourceRoot":"","sources":["../../../test/core/status.node.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AACjC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,MAAM,UAAU,GAAG,oBAAoB,CAAA;AAEvC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,IAAI,MAAc,CAAA;IAElB,KAAK,CAAC,KAAK,IAAI,EAAE;QACf,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;IACrB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE;gBACT,MAAM,EAAE,CAAC,UAAU,CAAC;aACrB;YACD,UAAU,EAAE;gBACV,GAAG,EAAE;aACN;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;SACF,CAAC,CAAA;QAEF,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;QAEpD,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAA;QAE7B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;QAErD,MAAM,MAAM,CAAA;QAEZ,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;QAEpD,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAA;QAE3B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;QAErD,MAAM,KAAK,CAAA;QAEX,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;IACtD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/base-options.browser.d.ts b/node_modules/libp2p/dist/test/fixtures/base-options.browser.d.ts
new file mode 100644
index 0000000..76a8cbd
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/base-options.browser.d.ts
@@ -0,0 +1,4 @@
+import type { Libp2pOptions } from '../../src/index.js';
+import type { ServiceMap } from '@libp2p/interface';
+export declare function createBaseOptions<T extends ServiceMap = Record<string, unknown>>(overrides?: Libp2pOptions<T>): Libp2pOptions<T>;
+//# sourceMappingURL=base-options.browser.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/base-options.browser.d.ts.map b/node_modules/libp2p/dist/test/fixtures/base-options.browser.d.ts.map
new file mode 100644
index 0000000..7dc1cdf
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/base-options.browser.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"base-options.browser.d.ts","sourceRoot":"","sources":["../../../test/fixtures/base-options.browser.ts"],"names":[],"mappings":"AAQA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAA;AACvD,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAEnD,wBAAgB,iBAAiB,CAAE,CAAC,SAAS,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,EAAG,SAAS,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAsBlI"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/base-options.browser.js b/node_modules/libp2p/dist/test/fixtures/base-options.browser.js
new file mode 100644
index 0000000..ead29e7
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/base-options.browser.js
@@ -0,0 +1,31 @@
+import { circuitRelayTransport } from '@libp2p/circuit-relay-v2';
+import { identify } from '@libp2p/identify';
+import { mockConnectionGater } from '@libp2p/interface-compliance-tests/mocks';
+import { mplex } from '@libp2p/mplex';
+import { plaintext } from '@libp2p/plaintext';
+import { webSockets } from '@libp2p/websockets';
+import * as filters from '@libp2p/websockets/filters';
+import mergeOptions from 'merge-options';
+export function createBaseOptions(overrides) {
+    const options = {
+        transports: [
+            webSockets({
+                filter: filters.all
+            }),
+            circuitRelayTransport()
+        ],
+        streamMuxers: [
+            mplex(),
+            mplex()
+        ],
+        connectionEncrypters: [
+            plaintext()
+        ],
+        connectionGater: mockConnectionGater(),
+        services: {
+            identify: identify()
+        }
+    };
+    return mergeOptions(options, overrides);
+}
+//# sourceMappingURL=base-options.browser.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/base-options.browser.js.map b/node_modules/libp2p/dist/test/fixtures/base-options.browser.js.map
new file mode 100644
index 0000000..d8d2985
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/base-options.browser.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"base-options.browser.js","sourceRoot":"","sources":["../../../test/fixtures/base-options.browser.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,0BAA0B,CAAA;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAA;AAC3C,OAAO,EAAE,mBAAmB,EAAE,MAAM,0CAA0C,CAAA;AAC9E,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AACrC,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAA;AACrD,OAAO,YAAY,MAAM,eAAe,CAAA;AAIxC,MAAM,UAAU,iBAAiB,CAAmD,SAA4B;IAC9G,MAAM,OAAO,GAAkB;QAC7B,UAAU,EAAE;YACV,UAAU,CAAC;gBACT,MAAM,EAAE,OAAO,CAAC,GAAG;aACpB,CAAC;YACF,qBAAqB,EAAE;SACxB;QACD,YAAY,EAAE;YACZ,KAAK,EAAE;YACP,KAAK,EAAE;SACR;QACD,oBAAoB,EAAE;YACpB,SAAS,EAAE;SACZ;QACD,eAAe,EAAE,mBAAmB,EAAE;QACtC,QAAQ,EAAE;YACR,QAAQ,EAAE,QAAQ,EAAE;SACrB;KACF,CAAA;IAED,OAAO,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;AACzC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/base-options.d.ts b/node_modules/libp2p/dist/test/fixtures/base-options.d.ts
new file mode 100644
index 0000000..d816a24
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/base-options.d.ts
@@ -0,0 +1,4 @@
+import type { Libp2pOptions } from '../../src';
+import type { ServiceMap } from '@libp2p/interface';
+export declare function createBaseOptions<T extends ServiceMap = Record<string, unknown>>(...overrides: Array<Libp2pOptions<T>>): Libp2pOptions<T>;
+//# sourceMappingURL=base-options.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/base-options.d.ts.map b/node_modules/libp2p/dist/test/fixtures/base-options.d.ts.map
new file mode 100644
index 0000000..b294d19
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/base-options.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"base-options.d.ts","sourceRoot":"","sources":["../../../test/fixtures/base-options.ts"],"names":[],"mappings":"AASA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,WAAW,CAAA;AAC9C,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAEnD,wBAAgB,iBAAiB,CAAE,CAAC,SAAS,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,EAAG,GAAG,SAAS,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAyB3I"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/base-options.js b/node_modules/libp2p/dist/test/fixtures/base-options.js
new file mode 100644
index 0000000..cfd59de
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/base-options.js
@@ -0,0 +1,35 @@
+import { yamux } from '@chainsafe/libp2p-yamux';
+import { circuitRelayTransport } from '@libp2p/circuit-relay-v2';
+import { identify } from '@libp2p/identify';
+import { mplex } from '@libp2p/mplex';
+import { plaintext } from '@libp2p/plaintext';
+import { tcp } from '@libp2p/tcp';
+import { webSockets } from '@libp2p/websockets';
+import * as filters from '@libp2p/websockets/filters';
+import mergeOptions from 'merge-options';
+export function createBaseOptions(...overrides) {
+    const options = {
+        addresses: {
+            listen: [`${process.env.RELAY_MULTIADDR}/p2p-circuit`]
+        },
+        transports: [
+            tcp(),
+            webSockets({
+                filter: filters.all
+            }),
+            circuitRelayTransport()
+        ],
+        streamMuxers: [
+            yamux(),
+            mplex()
+        ],
+        connectionEncrypters: [
+            plaintext()
+        ],
+        services: {
+            identify: identify()
+        }
+    };
+    return mergeOptions(options, ...overrides);
+}
+//# sourceMappingURL=base-options.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/base-options.js.map b/node_modules/libp2p/dist/test/fixtures/base-options.js.map
new file mode 100644
index 0000000..9fadc29
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/base-options.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"base-options.js","sourceRoot":"","sources":["../../../test/fixtures/base-options.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAA;AAC/C,OAAO,EAAE,qBAAqB,EAAE,MAAM,0BAA0B,CAAA;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAA;AAC3C,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AACrC,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AACjC,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAA;AACrD,OAAO,YAAY,MAAM,eAAe,CAAA;AAIxC,MAAM,UAAU,iBAAiB,CAAmD,GAAG,SAAkC;IACvH,MAAM,OAAO,GAAkB;QAC7B,SAAS,EAAE;YACT,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,cAAc,CAAC;SACvD;QACD,UAAU,EAAE;YACV,GAAG,EAAE;YACL,UAAU,CAAC;gBACT,MAAM,EAAE,OAAO,CAAC,GAAG;aACpB,CAAC;YACF,qBAAqB,EAAE;SACxB;QACD,YAAY,EAAE;YACZ,KAAK,EAAE;YACP,KAAK,EAAE;SACR;QACD,oBAAoB,EAAE;YACpB,SAAS,EAAE;SACZ;QACD,QAAQ,EAAE;YACR,QAAQ,EAAE,QAAQ,EAAE;SACrB;KACF,CAAA;IAED,OAAO,YAAY,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,CAAA;AAC5C,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/creators/peer.d.ts b/node_modules/libp2p/dist/test/fixtures/creators/peer.d.ts
new file mode 100644
index 0000000..b692987
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/creators/peer.d.ts
@@ -0,0 +1,22 @@
+import type { Libp2pOptions } from '../../../src/index.js';
+import type { Libp2p, ServiceMap } from '@libp2p/interface';
+export interface CreatePeerOptions<T extends ServiceMap> {
+    /**
+     * number of peers
+     *
+     * @default 1
+     */
+    number?: number;
+    /**
+     * nodes should start
+     *
+     * @default true
+     */
+    started?: boolean;
+    config?: Libp2pOptions<T>;
+}
+/**
+ * Create libp2p nodes.
+ */
+export declare function createNode<T extends ServiceMap>(options?: CreatePeerOptions<T>): Promise<Libp2p<T>>;
+//# sourceMappingURL=peer.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/creators/peer.d.ts.map b/node_modules/libp2p/dist/test/fixtures/creators/peer.d.ts.map
new file mode 100644
index 0000000..701cb60
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/creators/peer.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer.d.ts","sourceRoot":"","sources":["../../../../test/fixtures/creators/peer.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAA;AAC1D,OAAO,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAI3D,MAAM,WAAW,iBAAiB,CAAE,CAAC,SAAS,UAAU;IACtD;;;;OAIG;IACH,MAAM,CAAC,EAAE,MAAM,CAAA;IAEf;;;;OAIG;IACH,OAAO,CAAC,EAAE,OAAO,CAAA;IAEjB,MAAM,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,CAAA;CAC1B;AAED;;GAEG;AACH,wBAAsB,UAAU,CAAE,CAAC,SAAS,UAAU,EAAG,OAAO,GAAE,iBAAiB,CAAC,CAAC,CAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CA2B/G"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/creators/peer.js b/node_modules/libp2p/dist/test/fixtures/creators/peer.js
new file mode 100644
index 0000000..6a0de9b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/creators/peer.js
@@ -0,0 +1,34 @@
+import { multiaddr } from '@multiformats/multiaddr';
+import { createLibp2p } from '../../../src/index.js';
+import { createBaseOptions } from '../base-options.browser.js';
+const listenAddr = multiaddr('/ip4/127.0.0.1/tcp/0');
+/**
+ * Create libp2p nodes.
+ */
+export async function createNode(options = {}) {
+    const started = options.started ?? true;
+    const config = options.config ?? {};
+    const addresses = started
+        ? {
+            listen: [listenAddr.toString()],
+            announce: [],
+            noAnnounce: [],
+            announceFilter: (addrs) => addrs
+        }
+        : {
+            listen: [],
+            announce: [],
+            noAnnounce: [],
+            announceFilter: (addrs) => addrs
+        };
+    const peer = await createLibp2p(createBaseOptions({
+        addresses,
+        start: started,
+        ...config
+    }));
+    if (started) {
+        await peer.start();
+    }
+    return peer;
+}
+//# sourceMappingURL=peer.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/creators/peer.js.map b/node_modules/libp2p/dist/test/fixtures/creators/peer.js.map
new file mode 100644
index 0000000..dd37507
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/creators/peer.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer.js","sourceRoot":"","sources":["../../../../test/fixtures/creators/peer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAA;AACpD,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAA;AAK9D,MAAM,UAAU,GAAG,SAAS,CAAC,sBAAsB,CAAC,CAAA;AAoBpD;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,UAAU,CAAyB,UAAgC,EAAE;IACzF,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,CAAA;IACvC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAA;IACnC,MAAM,SAAS,GAAuB,OAAO;QAC3C,CAAC,CAAC;YACE,MAAM,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC/B,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK;SACjC;QACH,CAAC,CAAC;YACE,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK;SACjC,CAAA;IACL,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,iBAAiB,CAAC;QAChD,SAAS;QACT,KAAK,EAAE,OAAO;QACd,GAAG,MAAM;KACV,CAAC,CAAC,CAAA;IAEH,IAAI,OAAO,EAAE,CAAC;QACZ,MAAM,IAAI,CAAC,KAAK,EAAE,CAAA;IACpB,CAAC;IAED,OAAO,IAAI,CAAA;AACb,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/echo-service.d.ts b/node_modules/libp2p/dist/test/fixtures/echo-service.d.ts
new file mode 100644
index 0000000..d2813e4
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/echo-service.d.ts
@@ -0,0 +1,10 @@
+import type { Registrar } from '@libp2p/interface-internal';
+export declare const ECHO_PROTOCOL = "/echo/1.0.0";
+export interface EchoInit {
+    protocol?: string;
+}
+export interface EchoComponents {
+    registrar: Registrar;
+}
+export declare function echo(init?: EchoInit): (components: EchoComponents) => unknown;
+//# sourceMappingURL=echo-service.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/echo-service.d.ts.map b/node_modules/libp2p/dist/test/fixtures/echo-service.d.ts.map
new file mode 100644
index 0000000..68f1edb
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/echo-service.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"echo-service.d.ts","sourceRoot":"","sources":["../../../test/fixtures/echo-service.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAA;AAE3D,eAAO,MAAM,aAAa,gBAAgB,CAAA;AAE1C,MAAM,WAAW,QAAQ;IACvB,QAAQ,CAAC,EAAE,MAAM,CAAA;CAClB;AAED,MAAM,WAAW,cAAc;IAC7B,SAAS,EAAE,SAAS,CAAA;CACrB;AAyBD,wBAAgB,IAAI,CAAE,IAAI,GAAE,QAAa,GAAG,CAAC,UAAU,EAAE,cAAc,KAAK,OAAO,CAIlF"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/echo-service.js b/node_modules/libp2p/dist/test/fixtures/echo-service.js
new file mode 100644
index 0000000..2610f79
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/echo-service.js
@@ -0,0 +1,27 @@
+import { pipe } from 'it-pipe';
+export const ECHO_PROTOCOL = '/echo/1.0.0';
+class EchoService {
+    protocol;
+    registrar;
+    constructor(components, init = {}) {
+        this.protocol = init.protocol ?? ECHO_PROTOCOL;
+        this.registrar = components.registrar;
+    }
+    async start() {
+        await this.registrar.handle(this.protocol, ({ stream }) => {
+            void pipe(stream, stream)
+                // sometimes connections are closed before multistream-select finishes
+                // which causes an error
+                .catch();
+        });
+    }
+    async stop() {
+        await this.registrar.unhandle(this.protocol);
+    }
+}
+export function echo(init = {}) {
+    return (components) => {
+        return new EchoService(components, init);
+    };
+}
+//# sourceMappingURL=echo-service.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/echo-service.js.map b/node_modules/libp2p/dist/test/fixtures/echo-service.js.map
new file mode 100644
index 0000000..6aa1a5d
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/echo-service.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"echo-service.js","sourceRoot":"","sources":["../../../test/fixtures/echo-service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAA;AAI9B,MAAM,CAAC,MAAM,aAAa,GAAG,aAAa,CAAA;AAU1C,MAAM,WAAW;IACE,QAAQ,CAAQ;IAChB,SAAS,CAAW;IAErC,YAAa,UAA0B,EAAE,OAAiB,EAAE;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,aAAa,CAAA;QAC9C,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAA;IACvC,CAAC;IAED,KAAK,CAAC,KAAK;QACT,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;YACxD,KAAK,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;gBACvB,sEAAsE;gBACtE,wBAAwB;iBACvB,KAAK,EAAE,CAAA;QACZ,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IAC9C,CAAC;CACF;AAED,MAAM,UAAU,IAAI,CAAE,OAAiB,EAAE;IACvC,OAAO,CAAC,UAAU,EAAE,EAAE;QACpB,OAAO,IAAI,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;IAC1C,CAAC,CAAA;AACH,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/get-component.d.ts b/node_modules/libp2p/dist/test/fixtures/get-component.d.ts
new file mode 100644
index 0000000..957fefd
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/get-component.d.ts
@@ -0,0 +1,2 @@
+export declare function getComponent<T = any>(libp2p: any, name: string): T;
+//# sourceMappingURL=get-component.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/get-component.d.ts.map b/node_modules/libp2p/dist/test/fixtures/get-component.d.ts.map
new file mode 100644
index 0000000..7b81941
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/get-component.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-component.d.ts","sourceRoot":"","sources":["../../../test/fixtures/get-component.ts"],"names":[],"mappings":"AAAA,wBAAgB,YAAY,CAAE,CAAC,GAAG,GAAG,EAAG,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,GAAG,CAAC,CAEpE"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/get-component.js b/node_modules/libp2p/dist/test/fixtures/get-component.js
new file mode 100644
index 0000000..081d3ce
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/get-component.js
@@ -0,0 +1,4 @@
+export function getComponent(libp2p, name) {
+    return libp2p.components[name];
+}
+//# sourceMappingURL=get-component.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/fixtures/get-component.js.map b/node_modules/libp2p/dist/test/fixtures/get-component.js.map
new file mode 100644
index 0000000..f782277
--- /dev/null
+++ b/node_modules/libp2p/dist/test/fixtures/get-component.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-component.js","sourceRoot":"","sources":["../../../test/fixtures/get-component.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,YAAY,CAAY,MAAW,EAAE,IAAY;IAC/D,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;AAChC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts
new file mode 100644
index 0000000..f6aed99
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-discovery.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts.map b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts.map
new file mode 100644
index 0000000..45c2948
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-discovery.spec.d.ts","sourceRoot":"","sources":["../../../test/peer-discovery/peer-discovery.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js
new file mode 100644
index 0000000..2f4c61a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js
@@ -0,0 +1,51 @@
+/* eslint-env mocha */
+import { TypedEventEmitter } from '@libp2p/interface';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { createLibp2p } from '../../src/index.js';
+describe('peer discovery', () => {
+    let libp2p;
+    afterEach(async () => {
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+        sinon.reset();
+    });
+    it('should start/stop startable discovery on libp2p start/stop', async () => {
+        const discovery = stubInterface();
+        libp2p = await createLibp2p({
+            peerDiscovery: [
+                () => discovery
+            ]
+        });
+        await libp2p.start();
+        expect(discovery.start.calledOnce).to.be.true();
+        expect(discovery.stop.called).to.be.false();
+        await libp2p.stop();
+        expect(discovery.start.calledOnce).to.be.true();
+        expect(discovery.stop.calledOnce).to.be.true();
+    });
+    it('should ignore self on discovery', async () => {
+        const discovery = new TypedEventEmitter();
+        libp2p = await createLibp2p({
+            peerDiscovery: [
+                () => discovery
+            ]
+        });
+        await libp2p.start();
+        const discoverySpy = sinon.spy();
+        libp2p.addEventListener('peer:discovery', discoverySpy);
+        discovery.safeDispatchEvent('peer', {
+            detail: {
+                id: libp2p.peerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/2341')
+                ]
+            }
+        });
+        expect(discoverySpy.called).to.eql(false);
+    });
+});
+//# sourceMappingURL=peer-discovery.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js.map b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js.map
new file mode 100644
index 0000000..6ba3221
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-discovery/peer-discovery.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-discovery.spec.js","sourceRoot":"","sources":["../../../test/peer-discovery/peer-discovery.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAGjD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,IAAI,MAAc,CAAA;IAElB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC;YACnB,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;QACrB,CAAC;QAED,KAAK,CAAC,KAAK,EAAE,CAAA;IACf,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,SAAS,GAAG,aAAa,EAA6B,CAAA;QAE5D,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,aAAa,EAAE;gBACb,GAAG,EAAE,CAAC,SAAS;aAChB;SACF,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;QACpB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAC/C,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAE3C,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;QACnB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAC/C,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IAChD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,SAAS,GAAG,IAAI,iBAAiB,EAAuB,CAAA;QAE9D,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,aAAa,EAAE;gBACb,GAAG,EAAE,CAAC,SAAS;aAChB;SACF,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;QACpB,MAAM,YAAY,GAAG,KAAK,CAAC,GAAG,EAAE,CAAA;QAChC,MAAM,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAA;QACvD,SAAS,CAAC,iBAAiB,CAAC,MAAM,EAAE;YAClC,MAAM,EAAE;gBACN,EAAE,EAAE,MAAM,CAAC,MAAM;gBACjB,UAAU,EAAE;oBACV,SAAS,CAAC,+BAA+B,CAAC;iBAC3C;aACF;SACF,CAAC,CAAA;QAEF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IAC3C,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts
new file mode 100644
index 0000000..5a9e16b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-routing.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts.map b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts.map
new file mode 100644
index 0000000..76a499c
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-routing.spec.d.ts","sourceRoot":"","sources":["../../../test/peer-routing/peer-routing.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js
new file mode 100644
index 0000000..04b2bd8
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js
@@ -0,0 +1,373 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { peerRoutingSymbol, NotFoundError } from '@libp2p/interface';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import all from 'it-all';
+import drain from 'it-drain';
+import pDefer from 'p-defer';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { createLibp2p } from '../../src/index.js';
+describe('peer-routing', () => {
+    let peerId;
+    beforeEach(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+    });
+    describe('no routers', () => {
+        let node;
+        beforeEach(async () => {
+            node = await createLibp2p();
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('.findPeer should return an error', async () => {
+            await expect(node.peerRouting.findPeer(peerId))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'NoPeerRoutersError');
+        });
+        it('.getClosestPeers should return an error', async () => {
+            try {
+                for await (const _ of node.peerRouting.getClosestPeers(peerId.toMultihash().bytes)) { } // eslint-disable-line
+                throw new Error('.getClosestPeers should return an error');
+            }
+            catch (err) {
+                expect(err).to.exist();
+                expect(err.name).to.equal('NoPeerRoutersError');
+            }
+        });
+    });
+    describe('via configured service', () => {
+        let node;
+        let router;
+        beforeEach(async () => {
+            router = stubInterface();
+            node = await createLibp2p({
+                services: {
+                    router: () => ({
+                        [peerRoutingSymbol]: router
+                    })
+                }
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the configured service', async () => {
+            const peerInfo = {
+                id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/4001')
+                ]
+            };
+            router.findPeer.callsFake(async function () {
+                return peerInfo;
+            });
+            await expect(node.peerRouting.findPeer(peerInfo.id)).to.eventually.deep.equal(peerInfo);
+        });
+        it('should use the service to get the closest peers', async () => {
+            const deferred = pDefer();
+            router.getClosestPeers.callsFake(async function* () {
+                yield {
+                    id: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+                deferred.resolve();
+            });
+            await drain(node.peerRouting.getClosestPeers(Uint8Array.from([0, 1, 2, 3, 4])));
+            await deferred.promise;
+        });
+        it('should error when peer tries to find itself', async () => {
+            await expect(node.peerRouting.findPeer(node.peerId))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'QueriedForSelfError');
+        });
+        it('should handle error thrown synchronously during find peer', async () => {
+            const unknownPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(function () {
+                throw new Error('Thrown sync');
+            });
+            await expect(node.peerRouting.findPeer(unknownPeer))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'NotFoundError');
+        });
+        it('should handle error thrown asynchronously during find peer', async () => {
+            const unknownPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(async function () {
+                throw new Error('Thrown async');
+            });
+            await expect(node.peerRouting.findPeer(unknownPeer))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'NotFoundError');
+        });
+        it('should handle error thrown asynchronously after delay during find peer', async () => {
+            const unknownPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(async function () {
+                await delay(100);
+                throw new Error('Thrown async');
+            });
+            await expect(node.peerRouting.findPeer(unknownPeer))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'NotFoundError');
+        });
+    });
+    describe('via configured peer router', () => {
+        let node;
+        let delegate;
+        beforeEach(async () => {
+            delegate = stubInterface();
+            node = await createLibp2p({
+                peerRouters: [
+                    () => delegate
+                ]
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the delegate router to find peers', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            delegate.findPeer.callsFake(async function () {
+                return {
+                    id: remotePeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+            });
+            expect(delegate.findPeer.called).to.be.false();
+            await node.peerRouting.findPeer(remotePeerId);
+            expect(delegate.findPeer.called).to.be.true();
+        });
+        it('should use the delegate router to get the closest peers', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            delegate.getClosestPeers.callsFake(async function* () {
+                yield {
+                    id: remotePeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+            });
+            expect(delegate.getClosestPeers.called).to.be.false();
+            await drain(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes));
+            expect(delegate.getClosestPeers.called).to.be.true();
+        });
+        it('should error when peer tries to find itself', async () => {
+            await expect(node.peerRouting.findPeer(node.peerId))
+                .to.eventually.be.rejected()
+                .and.to.have.property('name', 'QueriedForSelfError');
+        });
+        it('should handle errors from the delegate when finding closest peers', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            delegate.getClosestPeers.callsFake(async function* () {
+                throw new Error('Could not find closer peers');
+            });
+            expect(delegate.getClosestPeers.called).to.be.false();
+            await expect(drain(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes)))
+                .to.eventually.be.rejectedWith('Could not find closer peers');
+        });
+    });
+    describe('via service and delegate routers', () => {
+        let node;
+        let delegate;
+        let router;
+        beforeEach(async () => {
+            router = stubInterface();
+            delegate = stubInterface();
+            node = await createLibp2p({
+                peerRouters: [
+                    () => delegate
+                ],
+                services: {
+                    router: () => ({
+                        [peerRoutingSymbol]: router
+                    })
+                }
+            });
+        });
+        afterEach(async () => {
+            await node?.stop();
+        });
+        it('should use the delegate if the service fails to find the peer', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            router.findPeer.callsFake(async function () {
+                await delay(100);
+                throw new NotFoundError('Not found');
+            });
+            delegate.findPeer.callsFake(async () => {
+                return results;
+            });
+            const peer = await node.peerRouting.findPeer(remotePeerId);
+            expect(peer).to.eql(results);
+        });
+        it('should not wait for the service to return if the delegate does first', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            const defer = pDefer();
+            router.findPeer.callsFake(async function () {
+                await defer.promise;
+                throw new NotFoundError('Not found');
+            });
+            delegate.findPeer.callsFake(async () => {
+                return results;
+            });
+            const peer = await node.peerRouting.findPeer(remotePeerId);
+            expect(peer).to.eql(results);
+            defer.resolve();
+        });
+        it('should not wait for the delegate to return if the service does first', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            };
+            const defer = pDefer();
+            router.findPeer.callsFake(async function () {
+                return result;
+            });
+            delegate.findPeer.callsFake(async () => {
+                await defer.promise;
+                throw new NotFoundError('Not found');
+            });
+            const peer = await node.peerRouting.findPeer(remotePeerId);
+            expect(peer).to.eql(result);
+            defer.resolve(result);
+        });
+        it('should return value when one router errors synchronously and another returns a value', async () => {
+            const peer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(function () {
+                throw new Error('Thrown sync');
+            });
+            delegate.findPeer.callsFake(async function () {
+                return {
+                    id: peer,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+            });
+            await expect(node.peerRouting.findPeer(peer))
+                .to.eventually.deep.equal({
+                id: peer,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            });
+        });
+        it('should return value when one router errors asynchronously and another returns a value', async () => {
+            const peer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            router.findPeer.callsFake(async function () {
+                throw new Error('Thrown async');
+            });
+            delegate.findPeer.callsFake(async function () {
+                return {
+                    id: peer,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                };
+            });
+            await expect(node.peerRouting.findPeer(peer))
+                .to.eventually.deep.equal({
+                id: peer,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/49320')
+                ]
+            });
+        });
+        it('should store the addresses of the found peer', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/38982')
+                ]
+            };
+            const spy = sinon.spy(node.peerStore, 'merge');
+            router.findPeer.callsFake(async function () {
+                return result;
+            });
+            delegate.findPeer.callsFake(async () => {
+                const deferred = pDefer();
+                return deferred.promise;
+            });
+            await node.peerRouting.findPeer(remotePeerId);
+            expect(spy.calledWith(result.id, {
+                multiaddrs: result.multiaddrs
+            })).to.be.true();
+        });
+        it('should use the delegate if the service fails to get the closest peer', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = [{
+                    id: remotePeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/49320')
+                    ]
+                }];
+            router.getClosestPeers.callsFake(async function* () { });
+            delegate.getClosestPeers.callsFake(async function* () {
+                yield results[0];
+            });
+            const closest = await all(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes));
+            expect(closest).to.have.length.above(0);
+            expect(closest).to.eql(results);
+        });
+        it('should store the addresses of the closest peer', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const result = {
+                id: remotePeerId,
+                multiaddrs: [
+                    multiaddr('/ip4/123.123.123.123/tcp/38982')
+                ]
+            };
+            const spy = sinon.spy(node.peerStore, 'merge');
+            router.getClosestPeers.callsFake(async function* () { });
+            delegate.getClosestPeers.callsFake(async function* () {
+                yield result;
+            });
+            await drain(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes));
+            expect(spy.calledWith(result.id, {
+                multiaddrs: result.multiaddrs
+            })).to.be.true();
+        });
+        it('should dedupe closest peers', async () => {
+            const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+            const results = [{
+                    id: remotePeerId,
+                    multiaddrs: [
+                        multiaddr('/ip4/123.123.123.123/tcp/38982')
+                    ]
+                }];
+            router.getClosestPeers.callsFake(async function* () {
+                for (const peer of results) {
+                    yield peer;
+                }
+            });
+            delegate.getClosestPeers.callsFake(async function* () {
+                yield* results;
+            });
+            const peers = await all(node.peerRouting.getClosestPeers(remotePeerId.toMultihash().bytes));
+            expect(peers).to.be.an('array').with.a.lengthOf(1).that.deep.equals(results);
+        });
+    });
+});
+//# sourceMappingURL=peer-routing.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js.map b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js.map
new file mode 100644
index 0000000..44f03e6
--- /dev/null
+++ b/node_modules/libp2p/dist/test/peer-routing/peer-routing.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-routing.spec.js","sourceRoot":"","sources":["../../../test/peer-routing/peer-routing.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts b/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts
new file mode 100644
index 0000000..cba029f
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=errors.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts.map b/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts.map
new file mode 100644
index 0000000..4d60319
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/errors.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"errors.spec.d.ts","sourceRoot":"","sources":["../../../test/registrar/errors.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/errors.spec.js b/node_modules/libp2p/dist/test/registrar/errors.spec.js
new file mode 100644
index 0000000..f8406e1
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/errors.spec.js
@@ -0,0 +1,47 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { mockUpgrader } from '@libp2p/interface-compliance-tests/mocks';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core/memory';
+import { stubInterface } from 'sinon-ts';
+import { defaultComponents } from '../../src/components.js';
+import { DefaultConnectionManager } from '../../src/connection-manager/index.js';
+import { DefaultRegistrar } from '../../src/registrar.js';
+describe('registrar errors', () => {
+    let components;
+    let registrar;
+    let peerId;
+    before(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const events = new TypedEventEmitter();
+        components = defaultComponents({
+            peerId,
+            events,
+            datastore: new MemoryDatastore(),
+            upgrader: mockUpgrader({ events }),
+            transportManager: stubInterface(),
+            connectionGater: stubInterface()
+        });
+        components.peerStore = persistentPeerStore(components);
+        components.connectionManager = new DefaultConnectionManager(components, {
+            maxConnections: 1000,
+            inboundUpgradeTimeout: 1000
+        });
+        registrar = new DefaultRegistrar(components);
+    });
+    it('should fail to register a protocol if no multicodec is provided', () => {
+        // @ts-expect-error invalid parameters
+        return expect(registrar.register()).to.eventually.be.rejected();
+    });
+    it('should fail to register a protocol if an invalid topology is provided', () => {
+        const fakeTopology = {
+            random: 1
+        };
+        // @ts-expect-error invalid parameters
+        return expect(registrar.register(fakeTopology)).to.eventually.be.rejected();
+    });
+});
+//# sourceMappingURL=errors.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/errors.spec.js.map b/node_modules/libp2p/dist/test/registrar/errors.spec.js.map
new file mode 100644
index 0000000..0197b45
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/errors.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"errors.spec.js","sourceRoot":"","sources":["../../../test/registrar/errors.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,iBAAiB,EAAqC,MAAM,mBAAmB,CAAA;AACxF,OAAO,EAAE,YAAY,EAAE,MAAM,0CAA0C,CAAA;AACvE,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAA;AACxD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAA;AACvD,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,iBAAiB,EAAE,MAAM,yBAAyB,CAAA;AAC3D,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAA;AAChF,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAA;AAIzD,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,IAAI,UAAsB,CAAA;IAC1B,IAAI,SAAoB,CAAA;IACxB,IAAI,MAAc,CAAA;IAElB,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,MAAM,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;QAC/D,MAAM,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAA;QACtC,UAAU,GAAG,iBAAiB,CAAC;YAC7B,MAAM;YACN,MAAM;YACN,SAAS,EAAE,IAAI,eAAe,EAAE;YAChC,QAAQ,EAAE,YAAY,CAAC,EAAE,MAAM,EAAE,CAAC;YAClC,gBAAgB,EAAE,aAAa,EAAoB;YACnD,eAAe,EAAE,aAAa,EAAmB;SAClD,CAAC,CAAA;QACF,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAA;QACtD,UAAU,CAAC,iBAAiB,GAAG,IAAI,wBAAwB,CAAC,UAAU,EAAE;YACtE,cAAc,EAAE,IAAI;YACpB,qBAAqB,EAAE,IAAI;SAC5B,CAAC,CAAA;QACF,SAAS,GAAG,IAAI,gBAAgB,CAAC,UAAU,CAAC,CAAA;IAC9C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iEAAiE,EAAE,GAAG,EAAE;QACzE,sCAAsC;QACtC,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAA;IACjE,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;QAC/E,MAAM,YAAY,GAAG;YACnB,MAAM,EAAE,CAAC;SACV,CAAA;QAED,sCAAsC;QACtC,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAA;IAC7E,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts b/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts
new file mode 100644
index 0000000..ec9f636
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=protocols.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts.map b/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts.map
new file mode 100644
index 0000000..e4e211a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/protocols.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"protocols.spec.d.ts","sourceRoot":"","sources":["../../../test/registrar/protocols.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/protocols.spec.js b/node_modules/libp2p/dist/test/registrar/protocols.spec.js
new file mode 100644
index 0000000..fdaa263
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/protocols.spec.js
@@ -0,0 +1,48 @@
+/* eslint-env mocha */
+import { yamux } from '@chainsafe/libp2p-yamux';
+import { mplex } from '@libp2p/mplex';
+import { plaintext } from '@libp2p/plaintext';
+import { webSockets } from '@libp2p/websockets';
+import { expect } from 'aegir/chai';
+import pDefer from 'p-defer';
+import { createLibp2p } from '../../src/index.js';
+describe('registrar protocols', () => {
+    let libp2p;
+    afterEach(async () => {
+        await libp2p?.stop();
+    });
+    it('should be able to register and unregister a handler', async () => {
+        const deferred = pDefer();
+        libp2p = await createLibp2p({
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                test: (components) => {
+                    deferred.resolve(components);
+                }
+            }
+        });
+        const components = await deferred.promise;
+        const registrar = components.registrar;
+        expect(registrar.getProtocols()).to.not.have.any.keys(['/echo/1.0.0', '/echo/1.0.1']);
+        const echoHandler = () => { };
+        await libp2p.handle(['/echo/1.0.0', '/echo/1.0.1'], echoHandler);
+        expect(registrar.getHandler('/echo/1.0.0')).to.have.property('handler', echoHandler);
+        expect(registrar.getHandler('/echo/1.0.1')).to.have.property('handler', echoHandler);
+        await libp2p.unhandle(['/echo/1.0.0']);
+        expect(registrar.getProtocols()).to.not.have.any.keys(['/echo/1.0.0']);
+        expect(registrar.getHandler('/echo/1.0.1')).to.have.property('handler', echoHandler);
+        await expect(libp2p.peerStore.get(libp2p.peerId)).to.eventually.have.deep.property('protocols', [
+            '/echo/1.0.1'
+        ]);
+    });
+});
+//# sourceMappingURL=protocols.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/protocols.spec.js.map b/node_modules/libp2p/dist/test/registrar/protocols.spec.js.map
new file mode 100644
index 0000000..ade3f82
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/protocols.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"protocols.spec.js","sourceRoot":"","sources":["../../../test/registrar/protocols.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAA;AAC/C,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AACrC,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,MAAM,MAAM,SAAS,CAAA;AAC5B,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AAIjD,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAI,MAAc,CAAA;IAElB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,MAAM,EAAE,IAAI,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,QAAQ,GAAG,MAAM,EAAc,CAAA;QAErC,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;YACD,YAAY,EAAE;gBACZ,KAAK,EAAE;gBACP,KAAK,EAAE;aACR;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,CAAC,UAAe,EAAE,EAAE;oBACxB,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;gBAC9B,CAAC;aACF;SACF,CAAC,CAAA;QAEF,MAAM,UAAU,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAA;QAEzC,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAA;QAEtC,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAA;QAErF,MAAM,WAAW,GAAG,GAAS,EAAE,GAAE,CAAC,CAAA;QAClC,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,aAAa,CAAC,EAAE,WAAW,CAAC,CAAA;QAChE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;QACpF,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;QAEpF,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAA;QACtC,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAA;QACtE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;QAEpF,MAAM,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;YAC9F,aAAa;SACd,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts b/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts
new file mode 100644
index 0000000..49a8668
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=registrar.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts.map b/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts.map
new file mode 100644
index 0000000..222915a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/registrar.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"registrar.spec.d.ts","sourceRoot":"","sources":["../../../test/registrar/registrar.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/registrar.spec.js b/node_modules/libp2p/dist/test/registrar/registrar.spec.js
new file mode 100644
index 0000000..d2abf73
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/registrar.spec.js
@@ -0,0 +1,345 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { matchPeerId } from '@libp2p/interface-compliance-tests/matchers';
+import { mockDuplex, mockMultiaddrConnection, mockConnection } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { peerFilter } from '@libp2p/peer-collections';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import pDefer from 'p-defer';
+import { stubInterface } from 'sinon-ts';
+import { DefaultRegistrar } from '../../src/registrar.js';
+const protocol = '/test/1.0.0';
+describe('registrar topologies', () => {
+    let registrar;
+    let peerId;
+    before(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+    });
+    let connectionManager;
+    let peerStore;
+    let events;
+    beforeEach(async () => {
+        peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        connectionManager = stubInterface();
+        peerStore = stubInterface();
+        events = new TypedEventEmitter();
+        registrar = new DefaultRegistrar({
+            peerId,
+            connectionManager,
+            peerStore,
+            events,
+            logger: defaultLogger()
+        });
+    });
+    it('should be able to register a protocol', async () => {
+        const topology = {
+            onConnect: () => { },
+            onDisconnect: () => { }
+        };
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(0);
+        const identifier = await registrar.register(protocol, topology);
+        expect(identifier).to.exist();
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(1);
+    });
+    it('should be able to unregister a protocol', async () => {
+        const topology = {
+            onConnect: () => { },
+            onDisconnect: () => { }
+        };
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(0);
+        const identifier = await registrar.register(protocol, topology);
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(1);
+        registrar.unregister(identifier);
+        expect(registrar.getTopologies(protocol)).to.have.lengthOf(0);
+    });
+    it('should not error if unregistering unregistered topology handler', () => {
+        registrar.unregister('bad-identifier');
+    });
+    it('should call onConnect handler for connected peers after register', async () => {
+        const onConnectDefer = pDefer();
+        const onDisconnectDefer = pDefer();
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeerId));
+        // return connection from connection manager
+        connectionManager.getConnections.withArgs(remotePeerId).returns([conn]);
+        const topology = {
+            onConnect: (peerId, connection) => {
+                expect(peerId.equals(remotePeerId)).to.be.true();
+                expect(connection.id).to.eql(conn.id);
+                onConnectDefer.resolve();
+            },
+            onDisconnect: (peerId) => {
+                expect(peerId.equals(remotePeerId)).to.be.true();
+                onDisconnectDefer.resolve();
+            }
+        };
+        // Register protocol
+        await registrar.register(protocol, topology);
+        // Peer data is in the peer store
+        peerStore.get.withArgs(matchPeerId(remotePeerId)).resolves({
+            id: remotePeerId,
+            addresses: [],
+            protocols: [protocol],
+            metadata: new Map(),
+            tags: new Map()
+        });
+        // remote peer connects
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: conn
+            }
+        });
+        await onConnectDefer.promise;
+        // remote peer disconnects
+        await conn.close();
+        events.safeDispatchEvent('peer:disconnect', {
+            detail: remotePeerId
+        });
+        await onDisconnectDefer.promise;
+    });
+    it('should call onConnect handler after register, once a peer is connected and protocols are updated', async () => {
+        const onConnectDefer = pDefer();
+        const onDisconnectDefer = pDefer();
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeerId));
+        // return connection from connection manager
+        connectionManager.getConnections.withArgs(matchPeerId(remotePeerId)).returns([conn]);
+        const topology = {
+            onConnect: () => {
+                onConnectDefer.resolve();
+            },
+            onDisconnect: () => {
+                onDisconnectDefer.resolve();
+            }
+        };
+        // Register protocol
+        await registrar.register(protocol, topology);
+        // remote peer connects
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: conn
+            }
+        });
+        // Can get details after identify
+        peerStore.get.withArgs(matchPeerId(conn.remotePeer)).resolves({
+            id: conn.remotePeer,
+            addresses: [],
+            protocols: [protocol],
+            metadata: new Map(),
+            tags: new Map()
+        });
+        // we have a connection to this peer
+        connectionManager.getConnections.withArgs(matchPeerId(conn.remotePeer)).returns([conn]);
+        // identify completes
+        events.safeDispatchEvent('peer:update', {
+            detail: {
+                peer: {
+                    id: conn.remotePeer,
+                    protocols: [protocol],
+                    addresses: [],
+                    metadata: new Map()
+                }
+            }
+        });
+        await onConnectDefer.promise;
+        // Peer no longer supports the protocol our topology is registered for
+        events.safeDispatchEvent('peer:update', {
+            detail: {
+                peer: {
+                    id: conn.remotePeer,
+                    protocols: [],
+                    addresses: [],
+                    metadata: new Map()
+                },
+                previous: {
+                    id: conn.remotePeer,
+                    protocols: [protocol],
+                    addresses: [],
+                    metadata: new Map()
+                }
+            }
+        });
+        await onDisconnectDefer.promise;
+    });
+    it('should not call topology handlers for limited connection', async () => {
+        const onConnectDefer = pDefer();
+        const onDisconnectDefer = pDefer();
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeerId));
+        // connection is limited
+        conn.limits = {
+            bytes: 100n
+        };
+        // return connection from connection manager
+        connectionManager.getConnections.withArgs(matchPeerId(remotePeerId)).returns([conn]);
+        const topology = {
+            onConnect: () => {
+                onConnectDefer.reject(new Error('Topolgy onConnect called for limited connection'));
+            },
+            onDisconnect: () => {
+                onDisconnectDefer.reject(new Error('Topolgy onDisconnect called for limited connection'));
+            }
+        };
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // remote peer connects
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: conn
+            }
+        });
+        await expect(Promise.any([
+            onConnectDefer.promise,
+            onDisconnectDefer.promise,
+            new Promise((resolve) => {
+                setTimeout(() => {
+                    resolve();
+                }, 1000);
+            })
+        ])).to.eventually.not.be.rejected();
+    });
+    it('should call topology onConnect handler for limited connection when explicitly requested', async () => {
+        const onConnectDefer = pDefer();
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const conn = mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeerId));
+        // connection is limited
+        conn.limits = {
+            bytes: 100n
+        };
+        // return connection from connection manager
+        connectionManager.getConnections.withArgs(matchPeerId(remotePeerId)).returns([conn]);
+        const topology = {
+            notifyOnLimitedConnection: true,
+            onConnect: () => {
+                onConnectDefer.resolve();
+            }
+        };
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // remote peer connects
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: conn
+            }
+        });
+        await expect(onConnectDefer.promise).to.eventually.be.undefined();
+    });
+    it('should call topology handlers for non-limited connection opened after limited connection', async () => {
+        const onConnectDefer = pDefer();
+        let callCount = 0;
+        const topology = {
+            notifyOnLimitedConnection: true,
+            onConnect: () => {
+                callCount++;
+                if (callCount === 2) {
+                    onConnectDefer.resolve();
+                }
+            }
+        };
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const limitedConnection = mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeerId));
+        limitedConnection.limits = {
+            bytes: 100n
+        };
+        const nonLimitedConnection = mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeerId));
+        nonLimitedConnection.limits = {
+            bytes: 100n
+        };
+        // return connection from connection manager
+        connectionManager.getConnections.withArgs(matchPeerId(remotePeerId)).returns([
+            limitedConnection,
+            nonLimitedConnection
+        ]);
+        // remote peer connects over limited connection
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: limitedConnection
+            }
+        });
+        // remote peer opens non-limited connection
+        events.safeDispatchEvent('peer:identify', {
+            detail: {
+                peerId: remotePeerId,
+                protocols: [protocol],
+                connection: nonLimitedConnection
+            }
+        });
+        await expect(onConnectDefer.promise).to.eventually.be.undefined();
+    });
+    it('should use a filter to prevent duplicate onConnect notifications', async () => {
+        const topology = stubInterface({
+            filter: peerFilter(1024)
+        });
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        const connection = mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeerId));
+        // remote peer runs identify a few times
+        for (let i = 0; i < 5; i++) {
+            events.safeDispatchEvent('peer:identify', {
+                detail: {
+                    peerId: remotePeerId,
+                    protocols: [protocol],
+                    connection
+                }
+            });
+        }
+        // remote peer updates details a few times
+        for (let i = 0; i < 5; i++) {
+            events.safeDispatchEvent('peer:update', {
+                detail: {
+                    peer: {
+                        id: remotePeerId,
+                        protocols: [protocol]
+                    },
+                    previous: {
+                        protocols: []
+                    }
+                }
+            });
+        }
+        // should only have notified once
+        expect(topology.onConnect).to.have.property('callCount', 1);
+    });
+    it('should use a filter to prevent onDisconnect notifications that had no previous onConnect notification', async () => {
+        const topology = stubInterface({
+            filter: peerFilter(1024)
+        });
+        // register topology for protocol
+        await registrar.register(protocol, topology);
+        // setup connections before registrar
+        const remotePeerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+        // peer exists in peer store with the regsitered protocol
+        peerStore.get.withArgs(remotePeerId).resolves(stubInterface({
+            protocols: [protocol]
+        }));
+        // the peer disconnects
+        events.safeDispatchEvent('peer:disconnect', {
+            detail: remotePeerId
+        });
+        // should not have notified
+        expect(topology.onConnect).to.have.property('called', false);
+        expect(topology.onDisconnect).to.have.property('called', false);
+    });
+});
+//# sourceMappingURL=registrar.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/registrar/registrar.spec.js.map b/node_modules/libp2p/dist/test/registrar/registrar.spec.js.map
new file mode 100644
index 0000000..66501e3
--- /dev/null
+++ b/node_modules/libp2p/dist/test/registrar/registrar.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"registrar.spec.js","sourceRoot":"","sources":["../../../test/registrar/registrar.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.node.d.ts b/node_modules/libp2p/dist/test/transports/transport-manager.node.d.ts
new file mode 100644
index 0000000..e263e69
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.node.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=transport-manager.node.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.node.d.ts.map b/node_modules/libp2p/dist/test/transports/transport-manager.node.d.ts.map
new file mode 100644
index 0000000..a4afdb9
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.node.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"transport-manager.node.d.ts","sourceRoot":"","sources":["../../../test/transports/transport-manager.node.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.node.js b/node_modules/libp2p/dist/test/transports/transport-manager.node.js
new file mode 100644
index 0000000..3a93b9b
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.node.js
@@ -0,0 +1,109 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter, start, stop, FaultTolerance } from '@libp2p/interface';
+import { mockUpgrader } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { tcp } from '@libp2p/tcp';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core/memory';
+import { pEvent } from 'p-event';
+import pWaitFor from 'p-wait-for';
+import sinon from 'sinon';
+import { DefaultAddressManager } from '../../src/address-manager/index.js';
+import { defaultComponents } from '../../src/components.js';
+import { DefaultTransportManager } from '../../src/transport-manager.js';
+const addrs = [
+    multiaddr('/ip4/127.0.0.1/tcp/0'),
+    multiaddr('/ip4/127.0.0.1/tcp/0')
+];
+describe('Transport Manager (TCP)', () => {
+    let tm;
+    let localPeer;
+    let components;
+    before(async () => {
+        localPeer = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+    });
+    beforeEach(async () => {
+        const events = new TypedEventEmitter();
+        components = defaultComponents({
+            peerId: localPeer,
+            events,
+            datastore: new MemoryDatastore(),
+            upgrader: mockUpgrader({ events })
+        });
+        components.addressManager = new DefaultAddressManager(components, { listen: addrs.map(addr => addr.toString()) });
+        components.peerStore = persistentPeerStore(components);
+        tm = new DefaultTransportManager(components, {
+            faultTolerance: FaultTolerance.NO_FATAL
+        });
+        components.transportManager = tm;
+        await start(tm);
+    });
+    afterEach(async () => {
+        await tm.removeAll();
+        expect(tm.getTransports()).to.be.empty();
+        await stop(tm);
+    });
+    it('should be able to add and remove a transport', async () => {
+        expect(tm.getTransports()).to.have.lengthOf(0);
+        tm.add(tcp()({
+            logger: defaultLogger()
+        }));
+        expect(tm.getTransports()).to.have.lengthOf(1);
+        await tm.remove('@libp2p/tcp');
+        expect(tm.getTransports()).to.have.lengthOf(0);
+    });
+    it('should be able to listen', async () => {
+        const transport = tcp()({
+            logger: defaultLogger()
+        });
+        expect(tm.getTransports()).to.be.empty();
+        tm.add(transport);
+        expect(tm.getTransports()).to.have.lengthOf(1);
+        const spyListener = sinon.spy(transport, 'createListener');
+        await tm.listen(addrs);
+        // Ephemeral ip addresses may result in multiple listeners
+        expect(tm.getAddrs().length).to.equal(addrs.length);
+        await tm.stop();
+        expect(spyListener.called).to.be.true();
+    });
+    it('should be able to dial', async () => {
+        tm.add(tcp()({
+            logger: defaultLogger()
+        }));
+        await tm.listen(addrs);
+        const addr = tm.getAddrs().shift();
+        if (addr == null) {
+            throw new Error('Could not find addr');
+        }
+        const connection = await tm.dial(addr);
+        expect(connection).to.exist();
+        await connection.close();
+    });
+    it('should remove listeners when they stop listening', async () => {
+        const transport = tcp()({
+            logger: defaultLogger()
+        });
+        tm.add(transport);
+        expect(tm.getListeners()).to.have.lengthOf(0);
+        const spyListener = sinon.spy(transport, 'createListener');
+        await tm.listen(addrs);
+        expect(spyListener.callCount).to.equal(addrs.length);
+        // wait for listeners to start listening
+        await pWaitFor(async () => {
+            return tm.getListeners().length === addrs.length;
+        });
+        // wait for listeners to stop listening
+        const closePromise = Promise.all(spyListener.getCalls().map(async (call) => {
+            return pEvent(call.returnValue, 'close');
+        }));
+        await Promise.all(tm.getListeners().map(async (l) => { await l.close(); }));
+        await closePromise;
+        expect(tm.getListeners()).to.have.lengthOf(0);
+        await tm.stop();
+    });
+});
+//# sourceMappingURL=transport-manager.node.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.node.js.map b/node_modules/libp2p/dist/test/transports/transport-manager.node.js.map
new file mode 100644
index 0000000..68bf083
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.node.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"transport-manager.node.js","sourceRoot":"","sources":["../../../test/transports/transport-manager.node.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts b/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts
new file mode 100644
index 0000000..9f7b811
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=transport-manager.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts.map b/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts.map
new file mode 100644
index 0000000..edad9da
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"transport-manager.spec.d.ts","sourceRoot":"","sources":["../../../test/transports/transport-manager.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.spec.js b/node_modules/libp2p/dist/test/transports/transport-manager.spec.js
new file mode 100644
index 0000000..edecbb5
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.spec.js
@@ -0,0 +1,149 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter, start, stop, FaultTolerance } from '@libp2p/interface';
+import { mockUpgrader } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { plaintext } from '@libp2p/plaintext';
+import { webSockets } from '@libp2p/websockets';
+import * as filters from '@libp2p/websockets/filters';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import sinon from 'sinon';
+import { DefaultAddressManager } from '../../src/address-manager/index.js';
+import { createLibp2p } from '../../src/index.js';
+import { DefaultTransportManager } from '../../src/transport-manager.js';
+const listenAddr = multiaddr('/ip4/127.0.0.1/tcp/0');
+describe('Transport Manager (WebSockets)', () => {
+    let tm;
+    let components;
+    beforeEach(async () => {
+        const events = new TypedEventEmitter();
+        components = {
+            peerId: peerIdFromPrivateKey(await generateKeyPair('Ed25519')),
+            events,
+            upgrader: mockUpgrader({ events }),
+            logger: defaultLogger()
+        };
+        components.addressManager = new DefaultAddressManager(components, { listen: [listenAddr.toString()] });
+        tm = new DefaultTransportManager(components, {
+            faultTolerance: FaultTolerance.NO_FATAL
+        });
+        await start(tm);
+    });
+    afterEach(async () => {
+        await tm.removeAll();
+        await stop(tm);
+        expect(tm.getTransports()).to.be.empty();
+    });
+    it('should be able to add and remove a transport', async () => {
+        const transport = webSockets({
+            filter: filters.all
+        });
+        expect(tm.getTransports()).to.have.lengthOf(0);
+        tm.add(transport({
+            logger: defaultLogger()
+        }));
+        expect(tm.getTransports()).to.have.lengthOf(1);
+        await tm.remove('@libp2p/websockets');
+        expect(tm.getTransports()).to.have.lengthOf(0);
+    });
+    it('should not be able to add a transport twice', async () => {
+        tm.add(webSockets()({
+            logger: defaultLogger()
+        }));
+        expect(() => {
+            tm.add(webSockets()({
+                logger: defaultLogger()
+            }));
+        })
+            .to.throw()
+            .and.to.have.property('name', 'InvalidParametersError');
+    });
+    it('should be able to dial', async () => {
+        tm.add(webSockets({ filter: filters.all })({
+            logger: defaultLogger()
+        }));
+        const addr = multiaddr(process.env.RELAY_MULTIADDR);
+        const connection = await tm.dial(addr);
+        expect(connection).to.exist();
+        await connection.close();
+    });
+    it('should fail to dial an unsupported address', async () => {
+        tm.add(webSockets({ filter: filters.all })({
+            logger: defaultLogger()
+        }));
+        const addr = multiaddr('/ip4/127.0.0.1/tcp/0');
+        await expect(tm.dial(addr))
+            .to.eventually.be.rejected()
+            .and.to.have.property('name', 'TransportUnavailableError');
+    });
+    it('should fail to listen with no valid address', async () => {
+        tm = new DefaultTransportManager(components);
+        tm.add(webSockets({ filter: filters.all })({
+            logger: defaultLogger()
+        }));
+        await expect(start(tm))
+            .to.eventually.be.rejected()
+            .and.to.have.property('name', 'NoValidAddressesError');
+        await stop(tm);
+    });
+});
+describe('libp2p.transportManager (dial only)', () => {
+    let libp2p;
+    afterEach(async () => {
+        sinon.restore();
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+    });
+    it('fails to start if multiaddr fails to listen', async () => {
+        libp2p = await createLibp2p({
+            addresses: {
+                listen: ['/ip4/127.0.0.1/tcp/0']
+            },
+            transports: [webSockets()],
+            connectionEncrypters: [plaintext()],
+            start: false
+        });
+        await expect(libp2p.start()).to.eventually.be.rejected
+            .with.property('name', 'NoValidAddressesError');
+    });
+    it('does not fail to start if provided listen multiaddr are not compatible to configured transports (when supporting dial only mode)', async () => {
+        libp2p = await createLibp2p({
+            addresses: {
+                listen: ['/ip4/127.0.0.1/tcp/0']
+            },
+            transportManager: {
+                faultTolerance: FaultTolerance.NO_FATAL
+            },
+            transports: [
+                webSockets()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            start: false
+        });
+        await expect(libp2p.start()).to.eventually.be.undefined();
+    });
+    it('does not fail to start if provided listen multiaddr fail to listen on configured transports (when supporting dial only mode)', async () => {
+        libp2p = await createLibp2p({
+            addresses: {
+                listen: ['/ip4/127.0.0.1/tcp/12345/p2p/QmWDn2LY8nannvSWJzruUYoLZ4vV83vfCBwd8DipvdgQc3/p2p-circuit']
+            },
+            transportManager: {
+                faultTolerance: FaultTolerance.NO_FATAL
+            },
+            transports: [
+                webSockets()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            start: false
+        });
+        await expect(libp2p.start()).to.eventually.be.undefined();
+    });
+});
+//# sourceMappingURL=transport-manager.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/transports/transport-manager.spec.js.map b/node_modules/libp2p/dist/test/transports/transport-manager.spec.js.map
new file mode 100644
index 0000000..bcde11a
--- /dev/null
+++ b/node_modules/libp2p/dist/test/transports/transport-manager.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"transport-manager.spec.js","sourceRoot":"","sources":["../../../test/transports/transport-manager.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAClF,OAAO,EAAE,YAAY,EAAE,MAAM,0CAA0C,CAAA;AACvE,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAC/C,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAA;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAA;AAC1E,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AACjD,OAAO,EAAE,uBAAuB,EAAE,MAAM,gCAAgC,CAAA;AAIxE,MAAM,UAAU,GAAG,SAAS,CAAC,sBAAsB,CAAC,CAAA;AAEpD,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;IAC9C,IAAI,EAA2B,CAAA;IAC/B,IAAI,UAAsB,CAAA;IAE1B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAA;QACtC,UAAU,GAAG;YACX,MAAM,EAAE,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;YAC9D,MAAM;YACN,QAAQ,EAAE,YAAY,CAAC,EAAE,MAAM,EAAE,CAAC;YAClC,MAAM,EAAE,aAAa,EAAE;SACjB,CAAA;QACR,UAAU,CAAC,cAAc,GAAG,IAAI,qBAAqB,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAA;QAEtG,EAAE,GAAG,IAAI,uBAAuB,CAAC,UAAU,EAAE;YAC3C,cAAc,EAAE,cAAc,CAAC,QAAQ;SACxC,CAAC,CAAA;QACF,MAAM,KAAK,CAAC,EAAE,CAAC,CAAA;IACjB,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,EAAE,CAAC,SAAS,EAAE,CAAA;QACpB,MAAM,IAAI,CAAC,EAAE,CAAC,CAAA;QACd,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,SAAS,GAAG,UAAU,CAAC;YAC3B,MAAM,EAAE,OAAO,CAAC,GAAG;SACpB,CAAC,CAAA;QAEF,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAC9C,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC;YACf,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAC,CAAA;QAEH,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAC9C,MAAM,EAAE,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAA;QACrC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAChD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;YAClB,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAC,CAAA;QAEH,MAAM,CAAC,GAAG,EAAE;YACV,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;gBAClB,MAAM,EAAE,aAAa,EAAE;aACxB,CAAC,CAAC,CAAA;QACL,CAAC,CAAC;aACC,EAAE,CAAC,KAAK,EAAE;aACV,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAA;IAC3D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;YACzC,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAC,CAAA;QACH,MAAM,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;QACnD,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACtC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC7B,MAAM,UAAU,CAAC,KAAK,EAAE,CAAA;IAC1B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;YACzC,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAC,CAAA;QACH,MAAM,IAAI,GAAG,SAAS,CAAC,sBAAsB,CAAC,CAAA;QAC9C,MAAM,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACxB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;aAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAA;IAC9D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,EAAE,GAAG,IAAI,uBAAuB,CAAC,UAAU,CAAC,CAAA;QAC5C,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;YACzC,MAAM,EAAE,aAAa,EAAE;SACxB,CAAC,CAAC,CAAA;QAEH,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aACpB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;aAC3B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAA;QAExD,MAAM,IAAI,CAAC,EAAE,CAAC,CAAA;IAChB,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AAEF,QAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;IACnD,IAAI,MAAc,CAAA;IAElB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,KAAK,CAAC,OAAO,EAAE,CAAA;QAEf,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC;YACnB,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;QACrB,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,SAAS,EAAE;gBACT,MAAM,EAAE,CAAC,sBAAsB,CAAC;aACjC;YACD,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC;YAC1B,oBAAoB,EAAE,CAAC,SAAS,EAAE,CAAC;YACnC,KAAK,EAAE,KAAK;SACb,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ;aACnD,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAA;IACnD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kIAAkI,EAAE,KAAK,IAAI,EAAE;QAChJ,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,SAAS,EAAE;gBACT,MAAM,EAAE,CAAC,sBAAsB,CAAC;aACjC;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,cAAc,CAAC,QAAQ;aACxC;YACD,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;YACD,KAAK,EAAE,KAAK;SACb,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,EAAE,CAAA;IAC3D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,8HAA8H,EAAE,KAAK,IAAI,EAAE;QAC5I,MAAM,GAAG,MAAM,YAAY,CAAC;YAC1B,SAAS,EAAE;gBACT,MAAM,EAAE,CAAC,yFAAyF,CAAC;aACpG;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,cAAc,CAAC,QAAQ;aACxC;YACD,UAAU,EAAE;gBACV,UAAU,EAAE;aACb;YACD,oBAAoB,EAAE;gBACpB,SAAS,EAAE;aACZ;YACD,KAAK,EAAE,KAAK;SACb,CAAC,CAAA;QAEF,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,EAAE,CAAA;IAC3D,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts
new file mode 100644
index 0000000..9763583
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=upgrader.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts.map b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts.map
new file mode 100644
index 0000000..aa71154
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"upgrader.spec.d.ts","sourceRoot":"","sources":["../../../test/upgrading/upgrader.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js
new file mode 100644
index 0000000..24400c1
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js
@@ -0,0 +1,865 @@
+/* eslint-env mocha */
+import { yamux } from '@chainsafe/libp2p-yamux';
+import { circuitRelayTransport } from '@libp2p/circuit-relay-v2';
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { identify } from '@libp2p/identify';
+import { TypedEventEmitter } from '@libp2p/interface';
+import { mockConnectionGater, mockConnectionManager, mockMultiaddrConnPair, mockRegistrar, mockStream, mockMuxer } from '@libp2p/interface-compliance-tests/mocks';
+import { mplex } from '@libp2p/mplex';
+import { peerIdFromCID, peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { persistentPeerStore } from '@libp2p/peer-store';
+import { plaintext } from '@libp2p/plaintext';
+import { webSockets } from '@libp2p/websockets';
+import * as filters from '@libp2p/websockets/filters';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { MemoryDatastore } from 'datastore-core';
+import delay from 'delay';
+import all from 'it-all';
+import drain from 'it-drain';
+import { pipe } from 'it-pipe';
+import pDefer from 'p-defer';
+import { pEvent } from 'p-event';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { Uint8ArrayList } from 'uint8arraylist';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { defaultComponents } from '../../src/components.js';
+import { createLibp2p } from '../../src/index.js';
+import { DEFAULT_MAX_OUTBOUND_STREAMS } from '../../src/registrar.js';
+import { DefaultUpgrader } from '../../src/upgrader.js';
+const addrs = [
+    multiaddr('/ip4/127.0.0.1/tcp/0'),
+    multiaddr('/ip4/127.0.0.1/tcp/0')
+];
+describe('Upgrader', () => {
+    let localUpgrader;
+    let localMuxerFactory;
+    let localYamuxerFactory;
+    let localConnectionEncrypter;
+    let localConnectionProtector;
+    let remoteUpgrader;
+    let remoteMuxerFactory;
+    let remoteYamuxerFactory;
+    let remoteConnectionEncrypter;
+    let remoteConnectionProtector;
+    let localPeer;
+    let remotePeer;
+    let localComponents;
+    let remoteComponents;
+    beforeEach(async () => {
+        const localKey = await generateKeyPair('Ed25519');
+        localPeer = peerIdFromPrivateKey(localKey);
+        const remoteKey = await generateKeyPair('Ed25519');
+        remotePeer = peerIdFromPrivateKey(remoteKey);
+        localConnectionProtector = stubInterface();
+        localConnectionProtector.protect.resolvesArg(0);
+        localComponents = defaultComponents({
+            peerId: localPeer,
+            privateKey: localKey,
+            connectionGater: mockConnectionGater(),
+            registrar: mockRegistrar(),
+            datastore: new MemoryDatastore(),
+            connectionProtector: localConnectionProtector,
+            events: new TypedEventEmitter()
+        });
+        localComponents.peerStore = persistentPeerStore(localComponents);
+        localComponents.connectionManager = mockConnectionManager(localComponents);
+        localMuxerFactory = mplex()(localComponents);
+        localYamuxerFactory = yamux()(localComponents);
+        localConnectionEncrypter = plaintext()(localComponents);
+        localUpgrader = new DefaultUpgrader(localComponents, {
+            connectionEncrypters: [
+                localConnectionEncrypter
+            ],
+            streamMuxers: [
+                localMuxerFactory,
+                localYamuxerFactory
+            ],
+            inboundUpgradeTimeout: 1000
+        });
+        remoteConnectionProtector = stubInterface();
+        remoteConnectionProtector.protect.resolvesArg(0);
+        remoteComponents = defaultComponents({
+            peerId: remotePeer,
+            privateKey: remoteKey,
+            connectionGater: mockConnectionGater(),
+            registrar: mockRegistrar(),
+            datastore: new MemoryDatastore(),
+            connectionProtector: remoteConnectionProtector,
+            events: new TypedEventEmitter()
+        });
+        remoteComponents.peerStore = persistentPeerStore(remoteComponents);
+        remoteComponents.connectionManager = mockConnectionManager(remoteComponents);
+        remoteMuxerFactory = mplex()(remoteComponents);
+        remoteYamuxerFactory = yamux()(remoteComponents);
+        remoteConnectionEncrypter = plaintext()(remoteComponents);
+        remoteUpgrader = new DefaultUpgrader(remoteComponents, {
+            connectionEncrypters: [
+                remoteConnectionEncrypter
+            ],
+            streamMuxers: [
+                remoteMuxerFactory,
+                remoteYamuxerFactory
+            ],
+            inboundUpgradeTimeout: 1000
+        });
+        await localComponents.registrar.handle('/echo/1.0.0', ({ stream }) => {
+            void pipe(stream, stream);
+        }, {
+            maxInboundStreams: 10,
+            maxOutboundStreams: 10
+        });
+        await remoteComponents.registrar.handle('/echo/1.0.0', ({ stream }) => {
+            void pipe(stream, stream);
+        }, {
+            maxInboundStreams: 10,
+            maxOutboundStreams: 10
+        });
+    });
+    afterEach(() => {
+        sinon.restore();
+    });
+    it('should upgrade with valid muxers and crypto', async () => {
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        expect(connections).to.have.length(2);
+        const stream = await connections[0].newStream('/echo/1.0.0');
+        expect(stream).to.have.property('protocol', '/echo/1.0.0');
+        const hello = uint8ArrayFromString('hello there!');
+        const result = await pipe([hello], stream, function toBuffer(source) {
+            return (async function* () {
+                for await (const val of source)
+                    yield val.slice();
+            })();
+        }, async (source) => all(source));
+        expect(result).to.eql([hello]);
+    });
+    it('should upgrade with only crypto', async () => {
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        // No available muxers
+        localUpgrader = new DefaultUpgrader(localComponents, {
+            connectionEncrypters: [
+                plaintext()(localComponents)
+            ],
+            streamMuxers: [],
+            inboundUpgradeTimeout: 1000
+        });
+        remoteUpgrader = new DefaultUpgrader(remoteComponents, {
+            connectionEncrypters: [
+                plaintext()(remoteComponents)
+            ],
+            streamMuxers: [],
+            inboundUpgradeTimeout: 1000
+        });
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        expect(connections).to.have.length(2);
+        await expect(connections[0].newStream('/echo/1.0.0')).to.be.rejected();
+        // Verify the MultiaddrConnection close method is called
+        const inboundCloseSpy = sinon.spy(inbound, 'close');
+        const outboundCloseSpy = sinon.spy(outbound, 'close');
+        await Promise.all(connections.map(async (conn) => { await conn.close(); }));
+        expect(inboundCloseSpy.callCount).to.equal(1);
+        expect(outboundCloseSpy.callCount).to.equal(1);
+    });
+    it('should use a private connection protector when provided', async () => {
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        const protector = {
+            async protect(connection) {
+                return connection;
+            }
+        };
+        const protectorProtectSpy = sinon.spy(protector, 'protect');
+        localComponents.connectionProtector = protector;
+        remoteComponents.connectionProtector = protector;
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        expect(connections).to.have.length(2);
+        const stream = await connections[0].newStream('/echo/1.0.0');
+        expect(stream).to.have.property('protocol', '/echo/1.0.0');
+        const hello = uint8ArrayFromString('hello there!');
+        const result = await pipe([hello], stream, function toBuffer(source) {
+            return (async function* () {
+                for await (const val of source)
+                    yield val.slice();
+            })();
+        }, async (source) => all(source));
+        expect(result).to.eql([hello]);
+        expect(protectorProtectSpy.callCount).to.eql(2);
+    });
+    it('should fail if crypto fails', async () => {
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        class BoomCrypto {
+            static protocol = '/insecure';
+            protocol = '/insecure';
+            async secureInbound() { throw new Error('Boom'); }
+            async secureOutbound() { throw new Error('Boom'); }
+        }
+        localUpgrader = new DefaultUpgrader(localComponents, {
+            connectionEncrypters: [
+                new BoomCrypto()
+            ],
+            streamMuxers: [],
+            inboundUpgradeTimeout: 1000
+        });
+        remoteUpgrader = new DefaultUpgrader(remoteComponents, {
+            connectionEncrypters: [
+                new BoomCrypto()
+            ],
+            streamMuxers: [],
+            inboundUpgradeTimeout: 1000
+        });
+        // Wait for the results of each side of the connection
+        const results = await Promise.allSettled([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        // Ensure both sides fail
+        expect(results).to.have.length(2);
+        results.forEach(result => {
+            expect(result).to.have.property('status', 'rejected');
+            expect(result).to.have.nested.property('reason.name', 'EncryptionFailedError');
+        });
+    });
+    it('should clear timeout if upgrade is successful', async () => {
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        localUpgrader = new DefaultUpgrader(localComponents, {
+            connectionEncrypters: [
+                plaintext()(localComponents)
+            ],
+            streamMuxers: [
+                yamux()(localComponents)
+            ],
+            inboundUpgradeTimeout: 1000
+        });
+        remoteUpgrader = new DefaultUpgrader(remoteComponents, {
+            connectionEncrypters: [
+                plaintext()(remoteComponents)
+            ],
+            streamMuxers: [
+                yamux()(remoteComponents)
+            ],
+            inboundUpgradeTimeout: 1000
+        });
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        await delay(2000);
+        expect(connections).to.have.length(2);
+        connections.forEach(conn => {
+            conn.close().catch(() => {
+                throw new Error('Failed to close connection');
+            });
+        });
+    });
+    it('should fail if muxers do not match', async () => {
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        class OtherMuxer {
+            protocol = '/muxer-local';
+            streams = [];
+            newStream(name) {
+                throw new Error('Not implemented');
+            }
+            source = (async function* () {
+                yield* [];
+            })();
+            async sink() { }
+            async close() { }
+            abort() { }
+        }
+        class OtherMuxerFactory {
+            protocol = '/muxer-local';
+            createStreamMuxer(init) {
+                return new OtherMuxer();
+            }
+        }
+        class OtherOtherMuxerFactory {
+            protocol = '/muxer-local-other';
+            createStreamMuxer(init) {
+                return new OtherMuxer();
+            }
+        }
+        localUpgrader = new DefaultUpgrader(localComponents, {
+            connectionEncrypters: [
+                plaintext()(localComponents)
+            ],
+            streamMuxers: [
+                new OtherMuxerFactory(),
+                new OtherOtherMuxerFactory()
+            ],
+            inboundUpgradeTimeout: 1000
+        });
+        remoteUpgrader = new DefaultUpgrader(remoteComponents, {
+            connectionEncrypters: [
+                plaintext()(remoteComponents)
+            ],
+            streamMuxers: [
+                yamux()(remoteComponents),
+                mplex()(remoteComponents)
+            ],
+            inboundUpgradeTimeout: 1000
+        });
+        // Wait for the results of each side of the connection
+        const results = await Promise.allSettled([
+            localUpgrader.upgradeOutbound(inbound),
+            remoteUpgrader.upgradeInbound(outbound)
+        ]);
+        // Ensure both sides fail
+        expect(results).to.have.length(2);
+        results.forEach(result => {
+            expect(result).to.have.property('status', 'rejected');
+            expect(result).to.have.nested.property('reason.name', 'MuxerUnavailableError');
+        });
+    });
+    it('should map getStreams and close methods', async () => {
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        expect(connections).to.have.length(2);
+        // Create a few streams, at least 1 in each direction
+        // use multiple protocols to trigger regular multistream select
+        await connections[0].newStream(['/echo/1.0.0', '/echo/1.0.1']);
+        await connections[1].newStream(['/echo/1.0.0', '/echo/1.0.1']);
+        await connections[0].newStream(['/echo/1.0.0', '/echo/1.0.1']);
+        connections.forEach(conn => {
+            expect(conn.streams).to.have.length(3);
+        });
+        // Verify the MultiaddrConnection close method is called
+        const inboundCloseSpy = sinon.spy(inbound, 'close');
+        const outboundCloseSpy = sinon.spy(outbound, 'close');
+        await Promise.all(connections.map(async (conn) => { await conn.close(); }));
+        expect(inboundCloseSpy.callCount).to.equal(1);
+        expect(outboundCloseSpy.callCount).to.equal(1);
+    });
+    it('should call connection handlers', async () => {
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        const localConnectionEventReceived = pDefer();
+        const localConnectionEndEventReceived = pDefer();
+        const remoteConnectionEventReceived = pDefer();
+        const remoteConnectionEndEventReceived = pDefer();
+        localComponents.events.addEventListener('connection:open', () => {
+            localConnectionEventReceived.resolve();
+        });
+        localComponents.events.addEventListener('connection:close', () => {
+            localConnectionEndEventReceived.resolve();
+        });
+        remoteComponents.events.addEventListener('connection:open', () => {
+            remoteConnectionEventReceived.resolve();
+        });
+        remoteComponents.events.addEventListener('connection:close', () => {
+            remoteConnectionEndEventReceived.resolve();
+        });
+        // Verify onConnection is called with the connection
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        expect(connections).to.have.length(2);
+        await Promise.all([
+            localConnectionEventReceived.promise,
+            remoteConnectionEventReceived.promise
+        ]);
+        // Verify onConnectionEnd is called with the connection
+        await Promise.all(connections.map(async (conn) => { await conn.close(); }));
+        await Promise.all([
+            localConnectionEndEventReceived.promise,
+            remoteConnectionEndEventReceived.promise
+        ]);
+    });
+    it('should fail to create a stream for an unsupported protocol', async () => {
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        expect(connections).to.have.length(2);
+        const results = await Promise.allSettled([
+            connections[0].newStream('/unsupported/1.0.0'),
+            connections[1].newStream('/unsupported/1.0.0')
+        ]);
+        expect(results).to.have.length(2);
+        results.forEach(result => {
+            expect(result).to.have.property('status', 'rejected');
+            expect(result).to.have.nested.property('reason.name', 'UnsupportedProtocolError');
+        });
+    });
+    it('should abort protocol selection for slow streams', async () => {
+        const createStreamMuxerSpy = sinon.spy(localMuxerFactory, 'createStreamMuxer');
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        // 10 ms timeout
+        const signal = AbortSignal.timeout(10);
+        // should have created muxer for connection
+        expect(createStreamMuxerSpy).to.have.property('callCount', 1);
+        // create mock muxed stream that never sends data
+        const muxer = createStreamMuxerSpy.getCall(0).returnValue;
+        muxer.newStream = () => {
+            return mockStream({
+                source: (async function* () {
+                    // longer than the timeout
+                    await delay(1000);
+                    yield new Uint8ArrayList();
+                }()),
+                sink: drain
+            });
+        };
+        await expect(connections[0].newStream(['/echo/1.0.0', '/echo/1.0.1'], {
+            signal
+        }))
+            .to.eventually.be.rejected.with.property('name', 'AbortError');
+    });
+    it('should close streams when protocol negotiation fails', async () => {
+        await remoteComponents.registrar.unhandle('/echo/1.0.0');
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer });
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound),
+            remoteUpgrader.upgradeInbound(inbound)
+        ]);
+        expect(connections[0].streams).to.have.lengthOf(0);
+        expect(connections[1].streams).to.have.lengthOf(0);
+        await expect(connections[0].newStream(['/echo/1.0.0', '/echo/1.0.1']))
+            .to.eventually.be.rejected.with.property('name', 'UnsupportedProtocolError');
+        // wait for remote to close
+        await delay(100);
+        expect(connections[0].streams).to.have.lengthOf(0);
+        expect(connections[1].streams).to.have.lengthOf(0);
+    });
+    it('should allow skipping encryption, protection and muxing', async () => {
+        const localStreamMuxerFactorySpy = sinon.spy(localMuxerFactory, 'createStreamMuxer');
+        const localMuxerFactoryOverride = mockMuxer();
+        const localStreamMuxerFactoryOverrideSpy = sinon.spy(localMuxerFactoryOverride, 'createStreamMuxer');
+        const localConnectionEncrypterSpy = sinon.spy(localConnectionEncrypter, 'secureOutbound');
+        const remoteStreamMuxerFactorySpy = sinon.spy(remoteMuxerFactory, 'createStreamMuxer');
+        const remoteMuxerFactoryOverride = mockMuxer();
+        const remoteStreamMuxerFactoryOverrideSpy = sinon.spy(remoteMuxerFactoryOverride, 'createStreamMuxer');
+        const remoteConnectionEncrypterSpy = sinon.spy(remoteConnectionEncrypter, 'secureInbound');
+        const { inbound, outbound } = mockMultiaddrConnPair({
+            addrs: [
+                multiaddr('/ip4/127.0.0.1/tcp/0').encapsulate(`/p2p/${remotePeer.toString()}`),
+                multiaddr('/ip4/127.0.0.1/tcp/0')
+            ],
+            remotePeer
+        });
+        outbound.remoteAddr = multiaddr('/ip4/127.0.0.1/tcp/0').encapsulate(`/p2p/${remotePeer}`);
+        inbound.remoteAddr = multiaddr('/ip4/127.0.0.1/tcp/0').encapsulate(`/p2p/${localPeer}`);
+        const connections = await Promise.all([
+            localUpgrader.upgradeOutbound(outbound, {
+                skipEncryption: true,
+                skipProtection: true,
+                muxerFactory: localMuxerFactoryOverride
+            }),
+            remoteUpgrader.upgradeInbound(inbound, {
+                skipEncryption: true,
+                skipProtection: true,
+                muxerFactory: remoteMuxerFactoryOverride
+            })
+        ]);
+        expect(connections).to.have.length(2);
+        const stream = await connections[0].newStream(['/echo/1.0.0', '/echo/1.0.1']);
+        expect(stream).to.have.property('protocol', '/echo/1.0.0');
+        const hello = uint8ArrayFromString('hello there!');
+        const result = await pipe([hello], stream, function toBuffer(source) {
+            return (async function* () {
+                for await (const val of source)
+                    yield val.slice();
+            })();
+        }, async (source) => all(source));
+        expect(result).to.eql([hello]);
+        expect(localStreamMuxerFactorySpy.callCount).to.equal(0, 'did not use passed stream muxer factory');
+        expect(localStreamMuxerFactoryOverrideSpy.callCount).to.equal(1, 'did not use passed stream muxer factory');
+        expect(remoteStreamMuxerFactorySpy.callCount).to.equal(0, 'did not use passed stream muxer factory');
+        expect(remoteStreamMuxerFactoryOverrideSpy.callCount).to.equal(1, 'did not use passed stream muxer factory');
+        expect(localConnectionEncrypterSpy.callCount).to.equal(0, 'used local connection encrypter');
+        expect(remoteConnectionEncrypterSpy.callCount).to.equal(0, 'used remote connection encrypter');
+        expect(localConnectionProtector.protect.callCount).to.equal(0, 'used local connection protector');
+        expect(remoteConnectionProtector.protect.callCount).to.equal(0, 'used remote connection protector');
+    });
+});
+describe('libp2p.upgrader', () => {
+    let peers;
+    let libp2p;
+    let remoteLibp2p;
+    before(async () => {
+        peers = await Promise.all([
+            generateKeyPair('Ed25519'),
+            generateKeyPair('Ed25519')
+        ]);
+    });
+    afterEach(async () => {
+        sinon.restore();
+        if (libp2p != null) {
+            await libp2p.stop();
+        }
+        if (remoteLibp2p != null) {
+            await remoteLibp2p.stop();
+        }
+    });
+    it('should create an Upgrader', async () => {
+        const deferred = pDefer();
+        const protector = {
+            async protect(connection) {
+                return connection;
+            }
+        };
+        libp2p = await createLibp2p({
+            privateKey: peers[0],
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            connectionProtector: () => protector,
+            services: {
+                test: (components) => {
+                    deferred.resolve(components);
+                }
+            }
+        });
+        const components = await deferred.promise;
+        expect(components.upgrader).to.exist();
+        expect(components.connectionProtector).to.exist();
+    });
+    it('should return muxed streams', async () => {
+        const localDeferred = pDefer();
+        const remoteDeferred = pDefer();
+        const remotePeer = peers[1];
+        libp2p = await createLibp2p({
+            privateKey: peers[0],
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                test: (components) => {
+                    localDeferred.resolve(components);
+                }
+            }
+        });
+        const echoHandler = () => { };
+        await libp2p.handle(['/echo/1.0.0'], echoHandler);
+        remoteLibp2p = await createLibp2p({
+            privateKey: remotePeer,
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                test: (components) => {
+                    remoteDeferred.resolve(components);
+                }
+            }
+        });
+        await remoteLibp2p.handle('/echo/1.0.0', echoHandler);
+        const localComponents = await localDeferred.promise;
+        const remoteComponents = await remoteDeferred.promise;
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer: peerIdFromCID(remotePeer.publicKey.toCID()) });
+        const [localConnection] = await Promise.all([
+            localComponents.upgrader.upgradeOutbound(outbound),
+            remoteComponents.upgrader.upgradeInbound(inbound)
+        ]);
+        const remoteLibp2pUpgraderOnStreamSpy = sinon.spy(remoteComponents.upgrader, '_onStream');
+        const stream = await localConnection.newStream(['/echo/1.0.0', '/echo/1.0.1']);
+        expect(stream).to.include.keys(['id', 'sink', 'source']);
+        const [arg0] = remoteLibp2pUpgraderOnStreamSpy.getCall(0).args;
+        expect(arg0.stream).to.include.keys(['id', 'sink', 'source']);
+    });
+    it('should emit connect and disconnect events', async () => {
+        const remotePeer = peers[1];
+        libp2p = await createLibp2p({
+            privateKey: peers[0],
+            addresses: {
+                listen: [
+                    `${process.env.RELAY_MULTIADDR}/p2p-circuit`
+                ]
+            },
+            transports: [
+                webSockets({
+                    filter: filters.all
+                }),
+                circuitRelayTransport()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            connectionGater: mockConnectionGater(),
+            services: {
+                identify: identify()
+            }
+        });
+        await libp2p.start();
+        remoteLibp2p = await createLibp2p({
+            privateKey: remotePeer,
+            transports: [
+                webSockets({
+                    filter: filters.all
+                }),
+                circuitRelayTransport()
+            ],
+            streamMuxers: [
+                yamux(),
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            connectionGater: mockConnectionGater(),
+            services: {
+                identify: identify()
+            }
+        });
+        await remoteLibp2p.start();
+        // Upgrade and check the connect event
+        const connectionPromise = pEvent(libp2p, 'connection:open');
+        const connection = await remoteLibp2p.dial(libp2p.getMultiaddrs());
+        const connectEvent = await connectionPromise;
+        if (connectEvent.type !== 'connection:open') {
+            throw new Error(`Incorrect event type, expected: 'connection:open' actual: ${connectEvent.type}`);
+        }
+        expect(remotePeer.publicKey.equals(connectEvent.detail.remotePeer.publicKey)).to.equal(true);
+        const disconnectionPromise = pEvent(libp2p, 'peer:disconnect');
+        // Close and check the disconnect event
+        await connection.close();
+        const disconnectEvent = await disconnectionPromise;
+        if (disconnectEvent.type !== 'peer:disconnect') {
+            throw new Error(`Incorrect event type, expected: 'peer:disconnect' actual: ${disconnectEvent.type}`);
+        }
+        expect(remotePeer.publicKey.equals(disconnectEvent.detail.publicKey)).to.equal(true);
+    });
+    it('should limit the number of incoming streams that can be opened using a protocol', async () => {
+        const localDeferred = pDefer();
+        const remoteDeferred = pDefer();
+        const protocol = '/a-test-protocol/1.0.0';
+        const remotePeer = peers[1];
+        libp2p = await createLibp2p({
+            privateKey: peers[0],
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                test: (components) => {
+                    localDeferred.resolve(components);
+                }
+            },
+            connectionGater: mockConnectionGater()
+        });
+        remoteLibp2p = await createLibp2p({
+            privateKey: remotePeer,
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                mplex()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                test: (components) => {
+                    remoteDeferred.resolve(components);
+                }
+            },
+            connectionGater: mockConnectionGater()
+        });
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer: peerIdFromPrivateKey(remotePeer) });
+        const localComponents = await localDeferred.promise;
+        const remoteComponents = await remoteDeferred.promise;
+        const [localToRemote] = await Promise.all([
+            localComponents.upgrader.upgradeOutbound(outbound),
+            remoteComponents.upgrader.upgradeInbound(inbound)
+        ]);
+        let streamCount = 0;
+        await libp2p.handle(protocol, (data) => { }, {
+            maxInboundStreams: 10,
+            maxOutboundStreams: 10
+        });
+        await remoteLibp2p.handle(protocol, (data) => {
+            streamCount++;
+        }, {
+            maxInboundStreams: 1,
+            maxOutboundStreams: 1
+        });
+        expect(streamCount).to.equal(0);
+        await localToRemote.newStream([protocol, '/other/1.0.0']);
+        expect(streamCount).to.equal(1);
+        const s = await localToRemote.newStream(protocol);
+        await expect(drain(s.source)).to.eventually.be.rejected()
+            .with.property('name', 'StreamResetError');
+    });
+    it('should limit the number of outgoing streams that can be opened using a protocol', async () => {
+        const localDeferred = pDefer();
+        const remoteDeferred = pDefer();
+        const protocol = '/a-test-protocol/1.0.0';
+        const remotePeer = peers[1];
+        libp2p = await createLibp2p({
+            privateKey: peers[0],
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                test: (components) => {
+                    localDeferred.resolve(components);
+                }
+            },
+            connectionGater: mockConnectionGater()
+        });
+        remoteLibp2p = await createLibp2p({
+            privateKey: remotePeer,
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                test: (components) => {
+                    remoteDeferred.resolve(components);
+                }
+            }
+        });
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer: peerIdFromPrivateKey(remotePeer) });
+        const localComponents = await localDeferred.promise;
+        const remoteComponents = await remoteDeferred.promise;
+        const [localToRemote] = await Promise.all([
+            localComponents.upgrader.upgradeOutbound(outbound),
+            remoteComponents.upgrader.upgradeInbound(inbound)
+        ]);
+        let streamCount = 0;
+        await libp2p.handle(protocol, (data) => { }, {
+            maxInboundStreams: 1,
+            maxOutboundStreams: 1
+        });
+        await remoteLibp2p.handle(protocol, (data) => {
+            streamCount++;
+        }, {
+            maxInboundStreams: 10,
+            maxOutboundStreams: 10
+        });
+        expect(streamCount).to.equal(0);
+        await localToRemote.newStream([protocol, '/other/1.0.0']);
+        expect(streamCount).to.equal(1);
+        await expect(localToRemote.newStream(protocol)).to.eventually.be.rejected()
+            .with.property('name', 'TooManyOutboundProtocolStreamsError');
+    });
+    it('should allow overriding the number of outgoing streams that can be opened using a protocol without a handler', async () => {
+        const localDeferred = pDefer();
+        const remoteDeferred = pDefer();
+        const protocol = '/a-test-protocol/1.0.0';
+        const remotePeer = peers[1];
+        libp2p = await createLibp2p({
+            privateKey: peers[0],
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                test: (components) => {
+                    localDeferred.resolve(components);
+                }
+            },
+            connectionGater: mockConnectionGater()
+        });
+        remoteLibp2p = await createLibp2p({
+            privateKey: remotePeer,
+            transports: [
+                webSockets()
+            ],
+            streamMuxers: [
+                yamux()
+            ],
+            connectionEncrypters: [
+                plaintext()
+            ],
+            services: {
+                test: (components) => {
+                    remoteDeferred.resolve(components);
+                }
+            }
+        });
+        const { inbound, outbound } = mockMultiaddrConnPair({ addrs, remotePeer: peerIdFromPrivateKey(remotePeer) });
+        const localComponents = await localDeferred.promise;
+        const remoteComponents = await remoteDeferred.promise;
+        const [localToRemote] = await Promise.all([
+            localComponents.upgrader.upgradeOutbound(outbound),
+            remoteComponents.upgrader.upgradeInbound(inbound)
+        ]);
+        let streamCount = 0;
+        const limit = DEFAULT_MAX_OUTBOUND_STREAMS + 1;
+        await remoteLibp2p.handle(protocol, (data) => {
+            streamCount++;
+        }, {
+            maxInboundStreams: limit + 1,
+            maxOutboundStreams: 10
+        });
+        expect(streamCount).to.equal(0);
+        for (let i = 0; i < limit; i++) {
+            await localToRemote.newStream([protocol, '/other/1.0.0'], {
+                maxOutboundStreams: limit
+            });
+        }
+        expect(streamCount).to.equal(limit);
+        // should reject without overriding limit
+        await expect(localToRemote.newStream(protocol)).to.eventually.be.rejected()
+            .with.property('name', 'TooManyOutboundProtocolStreamsError');
+        // should reject even with overriding limit
+        await expect(localToRemote.newStream(protocol, {
+            maxOutboundStreams: limit
+        })).to.eventually.be.rejected()
+            .with.property('name', 'TooManyOutboundProtocolStreamsError');
+    });
+});
+//# sourceMappingURL=upgrader.spec.js.map
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js.map b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js.map
new file mode 100644
index 0000000..f756019
--- /dev/null
+++ b/node_modules/libp2p/dist/test/upgrading/upgrader.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"upgrader.spec.js","sourceRoot":"","sources":["../../../test/upgrading/upgrader.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/tsconfig.tsbuildinfo b/node_modules/libp2p/dist/tsconfig.tsbuildinfo
new file mode 100644
index 0000000..a5cf9b1
--- /dev/null
+++ b/node_modules/libp2p/dist/tsconfig.tsbuildinfo
@@ -0,0 +1 @@
+{"program":{"fileNames":["../../../node_modules/typescript/lib/lib.es5.d.ts","../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../node_modules/typescript/lib/lib.es2021.d.ts","../../../node_modules/typescript/lib/lib.es2022.d.ts","../../../node_modules/typescript/lib/lib.es2023.d.ts","../../../node_modules/typescript/lib/lib.dom.d.ts","../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../node_modules/typescript/lib/lib.webworker.d.ts","../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../node_modules/typescript/lib/lib.es2021.promise.d.ts","../../../node_modules/typescript/lib/lib.es2021.string.d.ts","../../../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../../node_modules/typescript/lib/lib.es2021.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.array.d.ts","../../../node_modules/typescript/lib/lib.es2022.error.d.ts","../../../node_modules/typescript/lib/lib.es2022.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.object.d.ts","../../../node_modules/typescript/lib/lib.es2022.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2022.string.d.ts","../../../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2023.array.d.ts","../../../node_modules/typescript/lib/lib.es2023.collection.d.ts","../../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../node_modules/multiformats/dist/src/bases/interface.d.ts","../../../node_modules/multiformats/dist/src/block/interface.d.ts","../../../node_modules/multiformats/dist/src/hashes/interface.d.ts","../../../node_modules/multiformats/dist/src/link/interface.d.ts","../../../node_modules/multiformats/dist/src/cid.d.ts","../../../node_modules/uint8arraylist/dist/src/index.d.ts","../../interface/dist/src/keys/index.d.ts","../../interface/dist/src/peer-id/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/protocols-table.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/index.d.ts","../../../node_modules/progress-events/dist/src/index.d.ts","../../../node_modules/@multiformats/dns/dist/src/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/dnsaddr.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/index.d.ts","../../../node_modules/it-stream-types/dist/src/index.d.ts","../../interface/dist/src/connection/index.d.ts","../../interface/dist/src/peer-info/index.d.ts","../../interface/dist/src/content-routing/index.d.ts","../../interface/dist/src/event-target.d.ts","../../interface/dist/src/metrics/index.d.ts","../../interface/dist/src/peer-routing/index.d.ts","../../interface/dist/src/peer-store/index.d.ts","../../interface/dist/src/startable.d.ts","../../interface/dist/src/stream-handler/index.d.ts","../../interface/dist/src/topology/index.d.ts","../../interface/dist/src/stream-muxer/index.d.ts","../../interface/dist/src/transport/index.d.ts","../../interface/dist/src/connection-encrypter/index.d.ts","../../interface/dist/src/connection-gater/index.d.ts","../../interface/dist/src/peer-discovery/index.d.ts","../../interface/dist/src/peer-store/tags.d.ts","../../../node_modules/it-pushable/dist/src/index.d.ts","../../interface/dist/src/pubsub/index.d.ts","../../interface/dist/src/record/index.d.ts","../../interface/dist/src/errors.d.ts","../../../node_modules/@types/node/assert.d.ts","../../../node_modules/@types/node/assert/strict.d.ts","../../../node_modules/buffer/index.d.ts","../../../node_modules/undici-types/header.d.ts","../../../node_modules/undici-types/readable.d.ts","../../../node_modules/undici-types/file.d.ts","../../../node_modules/undici-types/fetch.d.ts","../../../node_modules/undici-types/formdata.d.ts","../../../node_modules/undici-types/connector.d.ts","../../../node_modules/undici-types/client.d.ts","../../../node_modules/undici-types/errors.d.ts","../../../node_modules/undici-types/dispatcher.d.ts","../../../node_modules/undici-types/global-dispatcher.d.ts","../../../node_modules/undici-types/global-origin.d.ts","../../../node_modules/undici-types/pool-stats.d.ts","../../../node_modules/undici-types/pool.d.ts","../../../node_modules/undici-types/handlers.d.ts","../../../node_modules/undici-types/balanced-pool.d.ts","../../../node_modules/undici-types/agent.d.ts","../../../node_modules/undici-types/mock-interceptor.d.ts","../../../node_modules/undici-types/mock-agent.d.ts","../../../node_modules/undici-types/mock-client.d.ts","../../../node_modules/undici-types/mock-pool.d.ts","../../../node_modules/undici-types/mock-errors.d.ts","../../../node_modules/undici-types/proxy-agent.d.ts","../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../node_modules/undici-types/retry-handler.d.ts","../../../node_modules/undici-types/retry-agent.d.ts","../../../node_modules/undici-types/api.d.ts","../../../node_modules/undici-types/interceptors.d.ts","../../../node_modules/undici-types/util.d.ts","../../../node_modules/undici-types/cookies.d.ts","../../../node_modules/undici-types/patch.d.ts","../../../node_modules/undici-types/websocket.d.ts","../../../node_modules/undici-types/eventsource.d.ts","../../../node_modules/undici-types/filereader.d.ts","../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../node_modules/undici-types/content-type.d.ts","../../../node_modules/undici-types/cache.d.ts","../../../node_modules/undici-types/index.d.ts","../../../node_modules/@types/node/globals.d.ts","../../../node_modules/@types/node/async_hooks.d.ts","../../../node_modules/@types/node/buffer.d.ts","../../../node_modules/@types/node/child_process.d.ts","../../../node_modules/@types/node/cluster.d.ts","../../../node_modules/@types/node/console.d.ts","../../../node_modules/@types/node/constants.d.ts","../../../node_modules/@types/node/crypto.d.ts","../../../node_modules/@types/node/dgram.d.ts","../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../node_modules/@types/node/dns.d.ts","../../../node_modules/@types/node/dns/promises.d.ts","../../../node_modules/@types/node/domain.d.ts","../../../node_modules/@types/node/dom-events.d.ts","../../../node_modules/@types/node/events.d.ts","../../../node_modules/@types/node/fs.d.ts","../../../node_modules/@types/node/fs/promises.d.ts","../../../node_modules/@types/node/http.d.ts","../../../node_modules/@types/node/http2.d.ts","../../../node_modules/@types/node/https.d.ts","../../../node_modules/@types/node/inspector.d.ts","../../../node_modules/@types/node/module.d.ts","../../../node_modules/@types/node/net.d.ts","../../../node_modules/@types/node/os.d.ts","../../../node_modules/@types/node/path.d.ts","../../../node_modules/@types/node/perf_hooks.d.ts","../../../node_modules/@types/node/process.d.ts","../../../node_modules/@types/node/punycode.d.ts","../../../node_modules/@types/node/querystring.d.ts","../../../node_modules/@types/node/readline.d.ts","../../../node_modules/@types/node/readline/promises.d.ts","../../../node_modules/@types/node/repl.d.ts","../../../node_modules/@types/node/sea.d.ts","../../../node_modules/@types/node/stream.d.ts","../../../node_modules/@types/node/stream/promises.d.ts","../../../node_modules/@types/node/stream/consumers.d.ts","../../../node_modules/@types/node/stream/web.d.ts","../../../node_modules/@types/node/string_decoder.d.ts","../../../node_modules/@types/node/test.d.ts","../../../node_modules/@types/node/timers.d.ts","../../../node_modules/@types/node/timers/promises.d.ts","../../../node_modules/@types/node/tls.d.ts","../../../node_modules/@types/node/trace_events.d.ts","../../../node_modules/@types/node/tty.d.ts","../../../node_modules/@types/node/url.d.ts","../../../node_modules/@types/node/util.d.ts","../../../node_modules/@types/node/v8.d.ts","../../../node_modules/@types/node/vm.d.ts","../../../node_modules/@types/node/wasi.d.ts","../../../node_modules/@types/node/worker_threads.d.ts","../../../node_modules/@types/node/zlib.d.ts","../../../node_modules/@types/node/globals.global.d.ts","../../../node_modules/@types/node/index.d.ts","../../interface/dist/src/events.d.ts","../../interface/dist/src/index.d.ts","../../logger/dist/src/index.d.ts","../src/errors.ts","../../interface-internal/dist/src/address-manager/index.d.ts","../../peer-collections/dist/src/map.d.ts","../../peer-collections/dist/src/set.d.ts","../../peer-collections/dist/src/list.d.ts","../../peer-collections/dist/src/filter.d.ts","../../peer-collections/dist/src/tracked-map.d.ts","../../peer-collections/dist/src/tracked-set.d.ts","../../peer-collections/dist/src/tracked-list.d.ts","../../peer-collections/dist/src/index.d.ts","../../interface-internal/dist/src/connection-manager/index.d.ts","../../interface-internal/dist/src/random-walk/index.d.ts","../../interface-internal/dist/src/record/index.d.ts","../../interface-internal/dist/src/registrar/index.d.ts","../../interface-internal/dist/src/transport-manager/index.d.ts","../../interface-internal/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/codecs/interface.d.ts","../../../node_modules/multiformats/dist/src/codecs/json.d.ts","../../../node_modules/multiformats/dist/src/codecs/raw.d.ts","../../../node_modules/multiformats/dist/src/bytes.d.ts","../../../node_modules/multiformats/dist/src/hashes/digest.d.ts","../../../node_modules/multiformats/dist/src/hashes/hasher.d.ts","../../../node_modules/multiformats/dist/src/varint.d.ts","../../../node_modules/multiformats/dist/src/interface.d.ts","../../../node_modules/multiformats/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/bases/base.d.ts","../../../node_modules/multiformats/dist/src/basics.d.ts","../../../node_modules/uint8arrays/dist/src/util/bases.d.ts","../../../node_modules/uint8arrays/dist/src/to-string.d.ts","../../../node_modules/interface-datastore/dist/src/key.d.ts","../../../node_modules/interface-store/dist/src/errors.d.ts","../../../node_modules/interface-store/dist/src/index.d.ts","../../../node_modules/interface-datastore/dist/src/index.d.ts","../src/components.ts","../../utils/dist/src/address-sort.d.ts","../../../node_modules/merge-options/index.d.ts","../../crypto/dist/src/keys/interface.d.ts","../../crypto/dist/src/keys/ecdh/index.d.ts","../../crypto/dist/src/keys/key-stretcher.d.ts","../../crypto/dist/src/keys/index.d.ts","../../peer-id/dist/src/index.d.ts","../../peer-store/dist/src/index.d.ts","../../../node_modules/datastore-core/dist/src/base.d.ts","../../../node_modules/datastore-core/dist/src/memory.d.ts","../../../node_modules/uint8arrays/dist/src/concat.d.ts","../../../node_modules/uint8arrays/dist/src/from-string.d.ts","../src/address-manager/utils.ts","../src/address-manager/index.ts","../src/config/connection-gater.ts","../../utils/dist/src/rate-limiter.d.ts","../src/get-peer.ts","../../utils/dist/src/close.d.ts","../src/connection-manager/constants.defaults.ts","../src/connection-manager/constants.ts","../src/connection-manager/connection-pruner.ts","../../../node_modules/p-defer/index.d.ts","../../utils/dist/src/queue/recipient.d.ts","../../utils/dist/src/queue/job.d.ts","../../utils/dist/src/queue/index.d.ts","../../utils/dist/src/priority-queue.d.ts","../../../node_modules/@multiformats/multiaddr-matcher/dist/src/index.d.ts","../../../node_modules/any-signal/dist/src/index.d.ts","../src/connection-manager/utils.ts","../src/connection-manager/dial-queue.ts","../../utils/dist/src/peer-queue.d.ts","../../../node_modules/@types/retry/index.d.ts","../../../node_modules/p-retry/index.d.ts","../src/connection-manager/reconnect-queue.ts","../src/connection-manager/index.ts","../../crypto/dist/src/hmac/index.d.ts","../../crypto/dist/src/pbkdf2.d.ts","../../crypto/dist/src/random-bytes.d.ts","../../crypto/dist/src/index.d.ts","../../utils/dist/src/adaptive-timeout.d.ts","../../../node_modules/it-byte-stream/dist/src/index.d.ts","../src/connection-monitor.ts","../../../node_modules/it-merge/dist/src/index.d.ts","../src/content-routing.ts","../../utils/dist/src/filters/bloom-filter.d.ts","../../utils/dist/src/filters/hashes.d.ts","../../utils/dist/src/filters/cuckoo-filter.d.ts","../../utils/dist/src/filters/scalable-cuckoo-filter.d.ts","../../utils/dist/src/filters/fingerprint.d.ts","../../utils/dist/src/filters/bucket.d.ts","../../utils/dist/src/filters/index.d.ts","../../../node_modules/it-parallel/dist/src/index.d.ts","../src/peer-routing.ts","../../../node_modules/race-event/dist/src/index.d.ts","../../../node_modules/race-signal/dist/src/index.d.ts","../src/random-walk.ts","../src/registrar.ts","../../utils/dist/src/tracked-map.d.ts","../src/transport-manager.ts","../../multistream-select/dist/src/constants.d.ts","../../../node_modules/it-length-prefixed-stream/dist/src/index.d.ts","../../multistream-select/dist/src/select.d.ts","../../multistream-select/dist/src/handle.d.ts","../../multistream-select/dist/src/index.d.ts","../src/connection/index.ts","../src/upgrader.ts","../src/version.ts","../src/libp2p.ts","../src/index.ts","../src/config.ts","../../utils/dist/src/private-ip.d.ts","../src/config/connection-gater.browser.ts","../src/connection-manager/constants.browser.ts","../../../node_modules/@types/chai/index.d.ts","../../../node_modules/@types/chai-as-promised/index.d.ts","../../../node_modules/chai-parentheses/index.d.ts","../../../node_modules/@types/chai-subset/index.d.ts","../../../node_modules/chai-bites/index.d.ts","../../../node_modules/@types/chai-string/index.d.ts","../../../node_modules/aegir/dist/utils/chai.d.ts","../../../node_modules/delay/index.d.ts","../../../node_modules/@types/sinonjs__fake-timers/index.d.ts","../../../node_modules/@types/sinon/index.d.ts","../../../node_modules/sinon-ts/dist/src/index.d.ts","../test/addresses/address-manager.spec.ts","../../connection-encrypter-plaintext/dist/src/index.d.ts","../../utils/dist/src/multiaddr/is-loopback.d.ts","../../../node_modules/@types/ws/index.d.ts","../../../node_modules/it-ws/dist/src/sink.d.ts","../../../node_modules/it-ws/dist/src/web-socket.d.ts","../../../node_modules/it-ws/dist/src/duplex.d.ts","../../../node_modules/it-ws/dist/src/client.d.ts","../../transport-websockets/dist/src/index.d.ts","../../../node_modules/p-timeout/index.d.ts","../../../node_modules/p-event/index.d.ts","../../../node_modules/protons-runtime/dist/src/codec.d.ts","../../../node_modules/protons-runtime/dist/src/decode.d.ts","../../../node_modules/protons-runtime/dist/src/encode.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/enum.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/message.d.ts","../../../node_modules/protons-runtime/dist/src/utils/reader.d.ts","../../../node_modules/protons-runtime/dist/src/utils/writer.d.ts","../../../node_modules/protons-runtime/dist/src/index.d.ts","../../transport-circuit-relay-v2/dist/src/pb/index.d.ts","../../../node_modules/it-protobuf-stream/dist/src/index.d.ts","../../transport-circuit-relay-v2/dist/src/server/reservation-store.d.ts","../../transport-circuit-relay-v2/dist/src/server/index.d.ts","../../transport-circuit-relay-v2/dist/src/transport/discovery.d.ts","../../transport-circuit-relay-v2/dist/src/transport/reservation-store.d.ts","../../transport-circuit-relay-v2/dist/src/transport/index.d.ts","../../transport-circuit-relay-v2/dist/src/constants.d.ts","../../transport-circuit-relay-v2/dist/src/index.d.ts","../../protocol-identify/dist/src/index.d.ts","../../interface-compliance-tests/dist/src/mocks/connection-gater.d.ts","../../interface-compliance-tests/dist/src/mocks/connection-manager.d.ts","../../interface-compliance-tests/dist/src/mocks/connection.d.ts","../../interface-compliance-tests/dist/src/mocks/multiaddr-connection.d.ts","../../utils/dist/src/abstract-stream.d.ts","../../interface-compliance-tests/dist/src/mocks/muxer.d.ts","../../interface-compliance-tests/dist/src/mocks/registrar.d.ts","../../interface-compliance-tests/dist/src/mocks/upgrader.d.ts","../../interface-compliance-tests/dist/src/mocks/duplex.d.ts","../../interface-compliance-tests/dist/src/mocks/metrics.d.ts","../../interface-compliance-tests/dist/src/mocks/index.d.ts","../../stream-multiplexer-mplex/dist/src/message-types.d.ts","../../stream-multiplexer-mplex/dist/src/stream.d.ts","../../stream-multiplexer-mplex/dist/src/mplex.d.ts","../../stream-multiplexer-mplex/dist/src/index.d.ts","../../transport-websockets/dist/src/filters.d.ts","../test/fixtures/base-options.browser.ts","../test/fixtures/creators/peer.ts","../test/fixtures/get-component.ts","../../transport-tcp/dist/src/listener.d.ts","../../transport-tcp/dist/src/index.d.ts","../../../node_modules/@chainsafe/libp2p-yamux/dist/src/config.d.ts","../../../node_modules/@chainsafe/libp2p-yamux/dist/src/frame.d.ts","../../../node_modules/@chainsafe/libp2p-yamux/dist/src/stream.d.ts","../../../node_modules/@chainsafe/libp2p-yamux/dist/src/muxer.d.ts","../../../node_modules/@chainsafe/libp2p-yamux/dist/src/index.d.ts","../test/fixtures/base-options.ts","../test/addresses/utils.ts","../test/addresses/addresses.node.ts","../../interface-compliance-tests/dist/src/index.d.ts","../../interface-compliance-tests/dist/src/connection/index.d.ts","../../../node_modules/it-map/dist/src/index.d.ts","../test/connection/fixtures/pair.ts","../test/connection/compliance.spec.ts","../test/connection/index.spec.ts","../test/connection-manager/connection-pruner.spec.ts","../../interface-compliance-tests/dist/src/matchers.d.ts","../test/connection-manager/dial-queue.spec.ts","../../../node_modules/it-pipe/dist/src/index.d.ts","../../../node_modules/p-wait-for/index.d.ts","../test/fixtures/echo-service.ts","../test/connection-manager/direct.node.ts","../test/connection-manager/direct.spec.ts","../../../node_modules/it-all/dist/src/index.d.ts","../test/connection-manager/index.node.ts","../test/connection-manager/index.spec.ts","../test/connection-manager/reconnect-queue.spec.ts","../test/connection-manager/resolver.spec.ts","../../../node_modules/it-pair/dist/src/index.d.ts","../test/connection-monitor/index.spec.ts","../../../node_modules/it-drain/dist/src/index.d.ts","../test/content-routing/content-routing.spec.ts","../test/core/consume-peer-record.spec.ts","../test/core/core.spec.ts","../test/core/encryption.spec.ts","../test/core/events.spec.ts","../test/core/get-public-key.spec.ts","../test/core/listening.node.ts","../test/core/peer-id.spec.ts","../../../node_modules/it-take/dist/src/index.d.ts","../test/core/random-walk.spec.ts","../test/core/service-dependencies.spec.ts","../test/core/status.node.ts","../test/peer-discovery/peer-discovery.spec.ts","../test/peer-routing/peer-routing.spec.ts","../test/registrar/errors.spec.ts","../test/registrar/protocols.spec.ts","../test/registrar/registrar.spec.ts","../test/transports/transport-manager.node.ts","../test/transports/transport-manager.spec.ts","../../../node_modules/datastore-core/dist/src/shard.d.ts","../../../node_modules/datastore-core/dist/src/keytransform.d.ts","../../../node_modules/datastore-core/dist/src/sharding.d.ts","../../../node_modules/datastore-core/dist/src/mount.d.ts","../../../node_modules/datastore-core/dist/src/tiered.d.ts","../../../node_modules/datastore-core/dist/src/namespace.d.ts","../../../node_modules/datastore-core/dist/src/index.d.ts","../test/upgrading/upgrader.spec.ts","../../../node_modules/keyv/src/index.d.ts","../../../node_modules/@types/http-cache-semantics/index.d.ts","../../../node_modules/@types/responselike/index.d.ts","../../../node_modules/@types/cacheable-request/index.d.ts","../../../node_modules/@types/ms/index.d.ts","../../../node_modules/@types/debug/index.d.ts","../../../node_modules/@types/dns-packet/index.d.ts","../../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../../node_modules/@types/istanbul-lib-report/index.d.ts","../../../node_modules/@types/istanbul-reports/index.d.ts","../../../node_modules/@types/json-schema/index.d.ts","../../../node_modules/@types/json5/index.d.ts","../../../node_modules/@types/keyv/index.d.ts","../../../node_modules/@types/linkify-it/build/index.cjs.d.ts","../../../node_modules/@types/linkify-it/index.d.ts","../../../node_modules/@types/lodash/common/common.d.ts","../../../node_modules/@types/lodash/common/array.d.ts","../../../node_modules/@types/lodash/common/collection.d.ts","../../../node_modules/@types/lodash/common/date.d.ts","../../../node_modules/@types/lodash/common/function.d.ts","../../../node_modules/@types/lodash/common/lang.d.ts","../../../node_modules/@types/lodash/common/math.d.ts","../../../node_modules/@types/lodash/common/number.d.ts","../../../node_modules/@types/lodash/common/object.d.ts","../../../node_modules/@types/lodash/common/seq.d.ts","../../../node_modules/@types/lodash/common/string.d.ts","../../../node_modules/@types/lodash/common/util.d.ts","../../../node_modules/@types/lodash/index.d.ts","../../../node_modules/@types/lodash.random/index.d.ts","../../../node_modules/@types/lodash.range/index.d.ts","../../../node_modules/@types/mdurl/build/index.cjs.d.ts","../../../node_modules/@types/mdurl/index.d.ts","../../../node_modules/@types/markdown-it/dist/index.cjs.d.ts","../../../node_modules/@types/markdown-it/index.d.ts","../../../node_modules/@types/unist/index.d.ts","../../../node_modules/@types/mdast/index.d.ts","../../../node_modules/@types/minimatch/index.d.ts","../../../node_modules/@types/minimist/index.d.ts","../../../node_modules/@types/mocha/index.d.ts","../../../node_modules/@types/multicast-dns/index.d.ts","../../../node_modules/@types/murmurhash3js-revisited/index.d.ts","../../../node_modules/@types/netmask/index.d.ts","../../../node_modules/@types/node-forge/index.d.ts","../../../node_modules/@types/normalize-package-data/index.d.ts","../../../node_modules/@types/parse-json/index.d.ts","../../../node_modules/@types/semver/classes/semver.d.ts","../../../node_modules/@types/semver/functions/parse.d.ts","../../../node_modules/@types/semver/functions/valid.d.ts","../../../node_modules/@types/semver/functions/clean.d.ts","../../../node_modules/@types/semver/functions/inc.d.ts","../../../node_modules/@types/semver/functions/diff.d.ts","../../../node_modules/@types/semver/functions/major.d.ts","../../../node_modules/@types/semver/functions/minor.d.ts","../../../node_modules/@types/semver/functions/patch.d.ts","../../../node_modules/@types/semver/functions/prerelease.d.ts","../../../node_modules/@types/semver/functions/compare.d.ts","../../../node_modules/@types/semver/functions/rcompare.d.ts","../../../node_modules/@types/semver/functions/compare-loose.d.ts","../../../node_modules/@types/semver/functions/compare-build.d.ts","../../../node_modules/@types/semver/functions/sort.d.ts","../../../node_modules/@types/semver/functions/rsort.d.ts","../../../node_modules/@types/semver/functions/gt.d.ts","../../../node_modules/@types/semver/functions/lt.d.ts","../../../node_modules/@types/semver/functions/eq.d.ts","../../../node_modules/@types/semver/functions/neq.d.ts","../../../node_modules/@types/semver/functions/gte.d.ts","../../../node_modules/@types/semver/functions/lte.d.ts","../../../node_modules/@types/semver/functions/cmp.d.ts","../../../node_modules/@types/semver/functions/coerce.d.ts","../../../node_modules/@types/semver/classes/comparator.d.ts","../../../node_modules/@types/semver/classes/range.d.ts","../../../node_modules/@types/semver/functions/satisfies.d.ts","../../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../../node_modules/@types/semver/ranges/min-version.d.ts","../../../node_modules/@types/semver/ranges/valid.d.ts","../../../node_modules/@types/semver/ranges/outside.d.ts","../../../node_modules/@types/semver/ranges/gtr.d.ts","../../../node_modules/@types/semver/ranges/ltr.d.ts","../../../node_modules/@types/semver/ranges/intersects.d.ts","../../../node_modules/@types/semver/ranges/simplify.d.ts","../../../node_modules/@types/semver/ranges/subset.d.ts","../../../node_modules/@types/semver/internals/identifiers.d.ts","../../../node_modules/@types/semver/index.d.ts","../../../node_modules/@types/stack-utils/index.d.ts","../../../node_modules/@types/strip-bom/index.d.ts","../../../node_modules/@types/strip-json-comments/index.d.ts","../../../node_modules/@types/tdigest/index.d.ts","../../../node_modules/@types/which/index.d.ts","../../../node_modules/@types/xsalsa20/index.d.ts","../../../node_modules/@types/yargs-parser/index.d.ts","../../../node_modules/@types/yargs/index.d.ts","../../../node_modules/@types/yauzl/index.d.ts"],"fileInfos":[{"version":"824cb491a40f7e8fdeb56f1df5edf91b23f3e3ee6b4cde84d4a99be32338faee","affectsGlobalScope":true},"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","5514e54f17d6d74ecefedc73c504eadffdeda79c7ea205cf9febead32d45c4bc","1c0cdb8dc619bc549c3e5020643e7cf7ae7940058e8c7e5aefa5871b6d86f44b",{"version":"87d693a4920d794a73384b3c779cadcb8548ac6945aa7a925832fe2418c9527a","affectsGlobalScope":true},{"version":"76f838d5d49b65de83bc345c04aa54c62a3cfdb72a477dc0c0fce89a30596c30","affectsGlobalScope":true},{"version":"db88e2781075c7bca86634724f38a132de718ddf3a470a3a2cdb182f4364af9e","affectsGlobalScope":true},{"version":"138fb588d26538783b78d1e3b2c2cc12d55840b97bf5e08bca7f7a174fbe2f17","affectsGlobalScope":true},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true},{"version":"bc47685641087c015972a3f072480889f0d6c65515f12bd85222f49a98952ed7","affectsGlobalScope":true},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true},{"version":"6fc23bb8c3965964be8c597310a2878b53a0306edb71d4b5a4dfe760186bcc01","affectsGlobalScope":true},{"version":"ea011c76963fb15ef1cdd7ce6a6808b46322c527de2077b6cfdf23ae6f5f9ec7","affectsGlobalScope":true},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true},{"version":"bb42a7797d996412ecdc5b2787720de477103a0b2e53058569069a0e2bae6c7e","affectsGlobalScope":true},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true},{"version":"b541a838a13f9234aba650a825393ffc2292dc0fc87681a5d81ef0c96d281e7a","affectsGlobalScope":true},{"version":"b20fe0eca9a4e405f1a5ae24a2b3290b37cf7f21eba6cbe4fc3fab979237d4f3","affectsGlobalScope":true},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true},{"version":"49ed889be54031e1044af0ad2c603d627b8bda8b50c1a68435fe85583901d072","affectsGlobalScope":true},{"version":"e93d098658ce4f0c8a0779e6cab91d0259efb88a318137f686ad76f8410ca270","affectsGlobalScope":true},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true},{"version":"5e07ed3809d48205d5b985642a59f2eba47c402374a7cf8006b686f79efadcbd","affectsGlobalScope":true},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true},{"version":"8073890e29d2f46fdbc19b8d6d2eb9ea58db9a2052f8640af20baff9afbc8640","affectsGlobalScope":true},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true},{"version":"51e547984877a62227042850456de71a5c45e7fe86b7c975c6e68896c86fa23b","affectsGlobalScope":true},{"version":"956d27abdea9652e8368ce029bb1e0b9174e9678a273529f426df4b3d90abd60","affectsGlobalScope":true},{"version":"4fa6ed14e98aa80b91f61b9805c653ee82af3502dc21c9da5268d3857772ca05","affectsGlobalScope":true},{"version":"e6633e05da3ff36e6da2ec170d0d03ccf33de50ca4dc6f5aeecb572cedd162fb","affectsGlobalScope":true},{"version":"d8670852241d4c6e03f2b89d67497a4bbefe29ecaa5a444e2c11a9b05e6fccc6","affectsGlobalScope":true},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true},{"version":"caccc56c72713969e1cfe5c3d44e5bab151544d9d2b373d7dbe5a1e4166652be","affectsGlobalScope":true},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true},{"version":"50d53ccd31f6667aff66e3d62adf948879a3a16f05d89882d1188084ee415bbc","affectsGlobalScope":true},{"version":"08a58483392df5fcc1db57d782e87734f77ae9eab42516028acbfe46f29a3ef7","affectsGlobalScope":true},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true},{"version":"13f6e6380c78e15e140243dc4be2fa546c287c6d61f4729bc2dd7cf449605471","affectsGlobalScope":true},{"version":"33358442698bb565130f52ba79bfd3d4d484ac85fe33f3cb1759c54d18201393","affectsGlobalScope":true},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true},"4a3605bef1a5ef29fd5a1696dd95b0b4e2259e2d07a4d88fac79f3a9765c44a2","370079895f1acdd4bb5194a403c85bf60cfbb2654bced9430a6c7210e7246be8","90240231e730deed31569f6c686766a538e4a024bbc33ea1738fe924f477ba61","552223520e823223ee13c5764e9b69b1819c985818a8bcda435d8d1dbd909bee","49b7c3ddd683c09aa437dd92681699387441f522524b14d2331ce494a9bf2f27","d35b5db21a04a45ae6323c4d4b25acc983dfe2870fc670fd05249eb19d839a5e","ca9a05720907ecf989983efa8f02e456604161a17730e58cc599a852fd6a02a2","51720c0374406647b50f84f24c7b623f1d01e1955f7e929da7c5c0629b4390ad","5212dd78d1d63ab33332c8846a0ea5ce248159e74033cde16de48373036b4704","954b3c04ee9f94ca1e262f3e5a6e833b0da0066514b3d4b97b92b7f0c85f8700","a2fc9ce1ae5bed7068d701d8aeebf13321de0f42c217dc2e10f1622dcaa53a7f","8e81f220cb935d551e88cff11541d5e89d3a3494a52fe6247e98016a9dbd4c2d","6b2576a04253626ba41b7dc7ec5977bec07f3b6952b16249d9fa8a3a0d79901c","9de17491f2bfbccea92500e174079d53bdedae34dbebe5d4a12a06ab09814710","e88481085a8576fa52efc913e631c1a833d16179486469b8538d8c4fab2f7381","aec68502c8f4ffaecb4440b37363473582fec0bfee4fb8668a87daa7f700f708","d71577e78c7a4257074aaf82f595724175210c89e8b467ef82f949a6cbd891bc","cf548af8b03cbbc79fdc4f357b5560f618c6d2f68c8688e6eb759c3c11d962c3","c84146dbc9d2e5f43d2cbf15485a4eabf90219dbb66c0d481f20f12d3851bffc","323aa55bca8a32c4b48353f48683bdc02aca0d985757f86f7610bb6bcd719561","99c24f331c9f4e75a779b9a988e942442db3cf29923ceb820d3bdd4ed1edfef2","25b1f20d5868ef9ef18132f7dd76b40b7038688ff7c56c58930537a8dff9f231","4105fa0ecfaffb578c8051c3de22e8c984191aac8de14641ee99beed9c5e5bd9","3a476c8989ff0b66a14f3b0dc1ef590d8ee2ea6fcc80e0c49cd447acd397dd28","8c92080253bac0506d82b83d555a029582595f0944abb349954ea732322baa5c","45d4c8d63a67224af62bebff18da32bb2817e306c9fd9e5d1dac6ef8d2da7ead","230eb449f719119cab1728252f20ecdd36d7a20cef659e4a51ada1a232a8aaad","2b83c561e623b28a06f15e44b02ccbc7b4ec388c8ffb8646132487a1fd7c99c4","c1c7b50665ce0b8aa4b95f3843167ac7ac25d1f724d77c2a07b597abb9cf394c","1bf687d978bdd6d5aff10b9eb0ff0695179f8594d4446946fd0182d6d25fa433","ec26029e3a4eccf8ee79d5c76093fbe928cedc83d813fca9be4f055d61530013","e0ff6a627dfbfb9d32e49f34879a763680e37758c509ddd809cb316b96f34390","2113d72680c7ddad6d3b6f70a29432a35c074c94ec6823a7c16ccd69847d965c","c8ffd61bf2db2e7bccb996dd70c9499805cb338f1b1c781987e38ba99dd5b296","55e5a976b594dc02f054860fb59a5299872a5b3c8c90e96733a5c9c9d4ed1fb8","fac83d4c6898d5bf90c508cc84409ded40fdc14611cf42d7fb750fb2c7847979","d012f94950fd654771664f96132a11fcaacde6226ac421516ec5aff3ef25b449","4f1eb6b9c2b666278e09019281953fc4ecadad3b2ba2781b2602445743eaaeca","75848e9f0cfb046e64bc8610b0b07e97288d340196a2d5bc6bcbf01e595a81d9","2db0dd3aaa2ed285950273ce96ae8a450b45423aa9da2d10e194570f1233fa6b","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","4967529644e391115ca5592184d4b63980569adf60ee685f968fd59ab1557188","5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","4d2b0eb911816f66abe4970898f97a2cfc902bcd743cbfa5017fad79f7ef90d8","bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","e53a3c2a9f624d90f24bf4588aacd223e7bec1b9d0d479b68d2f4a9e6011147f","24b8685c62562f5d98615c5a0c1d05f297cf5065f15246edfe99e81ec4c0e011","93507c745e8f29090efb99399c3f77bec07db17acd75634249dc92f961573387","339dc5265ee5ed92e536a93a04c4ebbc2128f45eeec6ed29f379e0085283542c","4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107",{"version":"c75ac0682b74face8d051331544f633445f5d203dc773d579fa109a7cbee9f06","affectsGlobalScope":true},"3d77c73be94570813f8cadd1f05ebc3dc5e2e4fdefe4d340ca20cd018724ee36",{"version":"e8dbde089a4b9d5b2124764ebbcfe577ffcb3a1df5cfb512a504c708ddfc7262","affectsGlobalScope":true},"62f1c00d3d246e0e3cf0224f91e122d560428ec1ccc36bb51d4574a84f1dbad0","53f0960fdcc53d097918adfd8861ffbe0db989c56ffc16c052197bf115da5ed6",{"version":"662163e5327f260b23ca0a1a1ad8a74078aabb587c904fcb5ef518986987eaff","affectsGlobalScope":true},"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb",{"version":"f85c06e750743acf31f0cfd3be284a364d469761649e29547d0dd6be48875150","affectsGlobalScope":true},"b0c0d1d13be149f790a75b381b413490f98558649428bb916fd2d71a3f47a134","3c884d9d9ec454bdf0d5a0b8465bf8297d2caa4d853851d92cc417ac6f30b969","0364f8bb461d6e84252412d4e5590feda4eb582f77d47f7a024a7a9ff105dfdc","5433f7f77cd1fd53f45bd82445a4e437b2f6a72a32070e907530a4fea56c30c8","d0ca5d7df114035258a9d01165be309371fcccf0cccd9d57b1453204686d1ed0",{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true},{"version":"9a30b7fefd7f8abbca4828d481c61c18e40fe5ff107e113b1c1fcd2c8dcf2743","affectsGlobalScope":true},"173b6275a81ebdb283b180654890f46516c21199734fed01a773b1c168b8c45c","304f66274aa8119e8d65a49b1cff84cbf803def6afe1b2cc987386e9a9890e22","1b9adafe8a7fefaeaf9099a0e06f602903f6268438147b843a33a5233ac71745","98273274f2dbb79b0b2009b20f74eca4a7146a3447c912d580cd5d2d94a7ae30","c933f7ba4b201c98b14275fd11a14abb950178afd2074703250fe3654fc10cd2","dccdf1677e531e33f8ac961a68bc537418c9a414797c1ea7e91307501cdc3f5e",{"version":"ea455cc68871b049bcecd9f56d4cf27b852d6dafd5e3b54468ca87cc11604e4d","affectsGlobalScope":true},"8f5814f29dbaf8bacd1764aebdf1c8a6eb86381f6a188ddbac0fcbaab855ce52","a63d03de72adfb91777784015bd3b4125abd2f5ef867fc5a13920b5649e8f52b","d20e003f3d518a7c1f749dbe27c6ab5e3be7b3c905a48361b04a9557de4a6900",{"version":"452e8a437aa57fe832dece2a5d3ea8dd0ab1de03ca778d09798c56ece0a29e80","affectsGlobalScope":true},{"version":"a20f1e119615bf7632729fd89b6c0b5ffdc2df3b512d6304146294528e3ebe19","affectsGlobalScope":true},"575fb200043b11b464db8e42cc64379c5fd322b6d787638e005b5ee98a64486d","6de2f225d942562733e231a695534b30039bdf1875b377bb7255881f0df8ede8","56249fd3ef1f6b90888e606f4ea648c43978ef43a7263aafad64f8d83cd3b8aa","139ad1dc93a503da85b7a0d5f615bddbae61ad796bc68fedd049150db67a1e26","7b166975fdbd3b37afb64707b98bca88e46577bbc6c59871f9383a7df2daacd1","9eece5e586312581ccd106d4853e861aaaa1a39f8e3ea672b8c3847eedd12f6e","81505c54d7cad0009352eaa21bd923ab7cdee7ec3405357a54d9a5da033a2084","269929a24b2816343a178008ac9ae9248304d92a8ba8e233055e0ed6dbe6ef71","93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633",{"version":"73aa178e8fb1449ef3666093d8dca25f96302a80ee45f8ff027df8e4792bf9fd","affectsGlobalScope":true},"2ee1645e0df9d84467cfe1d67b0ad3003c2f387de55874d565094464ee6f2927",{"version":"fdedf82878e4c744bc2a1c1e802ae407d63474da51f14a54babe039018e53d8f","affectsGlobalScope":true},{"version":"9cf780e96b687e4bdfd1907ed26a688c18b89797490a00598fa8b8ab683335dd","affectsGlobalScope":true},"98e00f3613402504bc2a2c9a621800ab48e0a463d1eed062208a4ae98ad8f84c","9ae88ce9f73446c24b2d2452e993b676da1b31fca5ceb7276e7f36279f693ed1","e49d7625faff2a7842e4e7b9b197f972633fca685afcf6b4403400c97d087c36","b82c38abc53922b1b3670c3af6f333c21b735722a8f156e7d357a2da7c53a0a0",{"version":"b423f53647708043299ded4daa68d95c967a2ac30aa1437adc4442129d7d0a6c","affectsGlobalScope":true},{"version":"21fcdcb618236f0feaca7e511e2da10c19970f86e09c934cef2d45b340ad92b5","affectsGlobalScope":true},"4f0fc7b7f54422bd97cfaf558ddb4bca86893839367b746a8f86b60ac7619673","4cdd8b6b51599180a387cc7c1c50f49eca5ce06595d781638fd0216520d98246","d91a7d8b5655c42986f1bdfe2105c4408f472831c8f20cf11a8c3345b6b56c8c",{"version":"8704423bf338bff381ebc951ed819935d0252d90cd6de7dffe5b0a5debb65d07","affectsGlobalScope":true},"b33379077284c9e55d2410d814b71b15522c5f71f9e93e15a8c3c41d463b00f6",{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true},"a42be67ed1ddaec743582f41fc219db96a1b69719fccac6d1464321178d610fc","cb25d3de15c4f5590256242ebd721e0e89bdb9a34d9c40993eba8f7aae6ccb0e","5463c98206a890ea7a759fbcc97b0c042ab1a740b3e24037f7fbf40bae70a3c5","841f7ca2af7f4d9cca1f9fa2288a4849fc9d49ca15b47336892efd06a14dd1d8",{"version":"11a0f507dc51643badef4ffaa191d9315d553d404585a33895e7520bd5589096","signature":"04db8428d1dffa17736d78edbccbd7205cd1e758ba2a88e7d06097b3843638f1"},"af89ab13b40dd28cd91818fc6329914d2b9663591831f032ff0f0cb4a028d4a5","63007f1618ada5041fb3b47630b64a9987d268bf740dd72334c38b5d23f5239b","3395f90467d2bb9db039a5c22ed6659ca2ff6f0b4f7ee5f223b0f77288f54ea7","20df2907d398e369d49e8906d6e0f096c465501e9ceff9d61293bf0f4e9020f1","302aa8248dab7c689c103162e542224aa7f3b0db46e29d0fb468fac721cf1c41","2dda4c8b032feaef160074bdc73cffe28516b420ec6cb697732c02ad75cd65f7","5fde0e81ce573a8774e3017c80147470dbb453cdffc861c81f466bc6ce0cb3a6","9686a908777c5aa687eb342e2764237ba8fbf6e878d51a1f258b4cf437862bfe","d8dd09519d9bea7a7c4b658cb20c459bfdf19656b250275b1bf22fa6c3f70679","03c98c0f1ac51d8ccfac7e265cbd9f53b236a332b27adcb9a0f7be9583dabb58","da98d8109f379be48d459a6821ebd7cc728af62557e1c44f864e04360686af93","ef6e6d838cc600162626a53167046484f38e9a4bab9454e72350bed76c497228","26c9f388d17515a3d01b831708765c1cfd9a5b9e209c05c17c527087e6b4b41f","c8b50ecedc9ff1b0e83c96f0a334d022874199f7c2d00d182ca6672176b0ea9d","b66ede73039e8751e06e3cab843e5a4265c1124a3285c3d854092c37a966b1f5","1447d46bff9e7c5c77da14515a7456ea5e919ce6e28f5e6746edf99818e4be47","ba3f6f0ee47f46cdce55620aec5726de80e92a930982634afe9918c114c38f0b","6f38045547cdfd54ec19abcd943cace72c775fde739c5e0e1d917cf3030c16b5","929fc31f7523aaa1d19735b77e637af06e58d76007648ec088ecfbec1521cbfe","3d0e04c8ca3f41da5f3d689500d9c4aeb54a1c59764d66d58f0e579b9af720e5","a6eb23f2a83113ce0ab7203bfda2be0888720f8d694a20abaef83b9f62832061","363dca5004ac5a3d9c2bba12812b97a64461911762f0b8f9320a8856ec53bcad","557b8c7481296f4b7ed362320f3bbb40bb87404edf880c81224f365a8d1e17f3","283ed3d075bf7d3e8793f63b2a52f475ed84d95b7b6351c5d5bcc6c49d4b845b","6544dab49004fecb69a4ef775e9ad2773a6148b1f9bfd9b75508e3afa11f5d35","b499490bd2f0d602501eb24d4e91ccb2d7fdfd24acb86889d74d5f16ac15c4ca","e2dd36a524ea5b13de1ed104ede9cea79696588175c1df1940d6a29113a4aee0","a878d4c7237a7af50e96534295fcf723134d70cbb1e9bfd8365266b912aee6ec","a1f708ddf34053065f8f53682123421af299cee37ae110a86ba07851adf940da","406ad29837d74e2ec97cdd8bba6295b6c984c1793d287c77fd1bb9ac9ff105cc","749effab6d7e72df8d126868c82b8166cdde84d48453e44f65cbad42ad900b06","11705a4aad6e2e724b82ffee6c4fa271d798f0fb68806ace4b1c425c266f8d98",{"version":"e2f657a1b70e04d1eda14b2274000fbabc9a033b5866bc9c04b4b8b2cf73d39f","signature":"3630ed70bc81eb54659965fcac105c0d420e667b1d0eaf96ab243de4e81ecd68"},"9515f4b9cbd708f23030aa1d452998e67ec57f63202985ff2b779f2a86dcfeba","d9619bdf47b220d356c646b3693eb6fd5cd0cfd1016da5b2f1d37ad0763da88d","7a6f74294b8fb90f5e3832be21e25898dd81b2a1adc36dda6929813ba4135311","3f1370424c252aed11747282fc619f04497e426f63917bf2182fd46d51adc58a","5d40e6a7071d0d1e6e558e17214ff786ecb3ea73e31b25a88c2cbe2435fa1252","1e75b52eae196e444c69710711ea2cb64838b178db183f7b1281c1b7f6f8ef78","5bccd6ffc11fed820a432ac819200e6af38f8c3625e6eae0cf0f07ca85856392","5e2fec9c89491e38ba2c78e6b4383540bc60dc24def61aa325cb726b497ebd85","8b1b666fe96fd9e713f1279a3e446f16ee824f46ca0c2c075e4e89f0b1258e6c","6aecbb60c2216da24acb86490f7c6270a820fd85424c8a509e3d284aa47f7a56","2e34b7e7c07624978db18b34c8a528928a7c24bc4b047add3e9d90bdc49e267f","ac63a01fcac70315fc9b416e9a57e568b18032c7cfcaa314e1751f03ef71286f",{"version":"a9c5ce8f8c58d9765a03253195220cf4f92dafcec282422eb8a040529347810f","signature":"eb7e1526f24a930a1704fb10dbb8ea6b67155201538511c0597a78fe52cd5ad0"},{"version":"13d7ecd0ce7c8fef9768050ba479656d233dfd3275c50153e6ccd2d52bdbb6c8","signature":"25578b2e19ab0fd92fdc00543abc195d65bdfcb0b800243d5c001129c93907b5"},{"version":"32c4a92588bfa0298fe11cb5c83cc46dc77ca7276fda9da2f475bbcf7462a5db","signature":"4998a268b7398a7a210df39dee751e568593d04180abfefef6a124b9128ea516"},"c61ec50aa5316dc1d88360ec2fb8deac5afbcd8d9ffe3d9817b6bff5d2499c71",{"version":"956f5d6f96ac62bd9442506cdd58cf2a2c8dd9e908af89947b54585afe139372","signature":"092dbd8c46fa05726bd318af94e9a053b12a129c7bcd221975da367b6772842b"},"2ee4d493a67dabb327879be7c04f3bc6d1b1ab6954aec1592481d931e3d36d0d",{"version":"046981b7bd976860e876a80dd68556eeedae026653da8c361797834374314012","signature":"83d9bfaf1595792d0b6c16a93bd2778b44a633e1be3d377875600923ccb05eb7"},{"version":"adb987f4b6d53c2b6e68bd46becd9d8e101e3d1857919ba1af8f03aede8b2f0b","signature":"c0e84661644d7ba5b7eb3bca15314792c0f5722697ea79ce328dc1d25bff176f"},{"version":"8ac35e311a8d49e887c0b33ce0a385953dddb7561c1acd5733aaf663e1aa7a8a","signature":"7581ff7793084fd7c83a3cb4a0e3dc86a2441959c9a336091a2157d346f6c18b"},"68f02ba57c531227ef5804dd57f2e940b10c544c96dadd3c0ef958ba4b6fdbc1","d84174912accc090e9b061b36101f8401add7f486ee532f45d298fb8e550dcb8","f0e9c96fe0af329a25c943d4a19fc3f6d2430914f49a83d1666cbaace3e41a7a","fe56be56cbb42589717961f30320ec0fef09d558354968d74cb0e2be11405816","3780b990e935be00e1d77afaaf9e80ec9b7d79ea4d1f230206c054eb6717c9d5","6dac9f53452a9dbe28378adabb26c8356367fab19acc13b706b78aec1f71337f","ca027df9fd496a200d99ca0db4b0077463ce4926a6c8e05cfae522c5971ccbc0",{"version":"1abb1983dd2a510cd713bc7eeec532f6ccee66d655883a41634ec13d4b3bcc03","signature":"d978abf156864867cdc522069b2aae851a8c0565ed1725d86302b60f98d0bc90"},{"version":"91d55043c5583407845d6644bf42a013a752406007d26c0fa5d51f17ef258a1a","signature":"89d55270e34359d2c38b432aaa551c2998ecaf94d5ec402ef485f9db9f755605"},"28a9532c090eea9406b31cb032f44a069f4e396a4b5ca3cf5905b0ff81692073","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","3725da27619321470183eb7dd61190b139e5bcc4cf9366d6d828906a76e31742",{"version":"ac73cc64ff218eefc51b45c468332af449b3c57f23b1bb60406f73af170051d5","signature":"1b093407eb2d8f48db4dd93b13a479557ed1ed412185c2394f1f891fbc205115"},{"version":"66236563c00daa87b799e00c8a0a981e73a9d3ac4c804e032edc4500984f4160","signature":"54ac12908a042b316766e42db94d9f4683a01a6d03ba85597c252d2ebc28ab82"},"18e2ed308bb90cde2d3d2b4ed6de12abe41b6f73e321616176b7f258de3c2774","60cbc38a9b402c14c388a7254781752b279017b3adeb94b840dcbf4872a6a410","3d2ec84143e6462a786b5d9ecf06f4f6f67a59a1f16c5a3a5e41721ba8478b7f","96b8f393e636547f0477e387138cd7ca9a7c556343b89f446cfc5672dee5e643","e043a9288022e8d802117e5e9e718443296f9c69a5eab7ed89b2fb76128a0140","4729c40012c9b4ae235cdeb76bc9cf5c127e09eb08ecf5b1b51b8d03d58e5555",{"version":"f2c84d7b62df70ad1ed5489aed397980063a333a43d277879255b9b03d1a982b","signature":"4d0407c72e75d3f506fe60dba4828cf65be4d086344eec72590784177d4412bc"},"ebc51770c27d90812d97af081e035c941e7ce706a909c838e759b6d605967f83",{"version":"90c96514c5022569aa3e10af801a243d7432066cf5153050b453ab4bf58e18c6","signature":"01bb72c69e34206900c568915c790ac8ee937cff996e465750d6f1d2a9d35a42"},"a0f75924004f4b28455fce9eb769a74018ed9b87e1748303ca2a92eff2bb9545","be25f10b39d3022e8468848ed0bc8b8797f2c9d984891ebf297924a8e7c62c17","20882ebc70455849b63fc73338936be40b06d02a4c0f33b48b92fd755eb40d5f","bda768ad5b551bab838df002f5df2190bac23345ae53c97053bfee3c8c6d290c","f0eb1ae06e702b50a11e3131e570e5cbd729552d18a7171b867f911ae7e19fce","41e9b0d9e91fdb53011917fb076c3f1a50657e75dbb844952831d69cdf34eccd","107a5a2d55c18a2c8bf1e01118b1895a4c10edd16ce32ee495c6b76294f275ca","16d2f9cb00807e9b65a3d22a3ed27bad7499679fd0308b086f15c04ad8ecaa89",{"version":"da44ed2f0387648e433f562a6e9d0a10c3cd19dcfb986cb03b18baee4b25c44a","signature":"b146cfa736437ae6885c72a8a2ffdd017b9880328d6f03f329b46019faf4f662"},"7d958de24d9de7d848f9c7259dfc8116868d5b6b130759fe46310089c24bc90f","4f995212d227171f1d5c1e57a749b8a8383867f4c01b6492cceb0da9fc784c98",{"version":"9b38dd26fabde1d36ca0bd5fbdfb36e9cc82fe820580499ca31b6ae7109a53d7","signature":"e8356763213683bfd44db0146b2ee420a07695b2a1afdb22a0d32390e7b921be"},{"version":"117ddc07895c8ff43ab0382fced05d8ab9cb20c5e3e8f23ba0f12698d8d81a4a","signature":"acc51cd4b6cb7fcd987f1502b36de6faee02259d336cf7f1f43f4f5399cbe883"},"66f4f8aadf702451ce0603300cbf565f2d1d5aed12215474ad6a22dcfa34d209",{"version":"22b5dfe722ce2aae0c580b1d75d10bb3a6905f93f8f8ce3190955148b449d857","signature":"357f2ba403c4f78a11b64df1e9ffb56e241924d6cc768a38c05c7dc7cfe70ff0"},"18ea46e4d0790901645c0c35dba475cd9cc807bff21069d0712dc6cdd8e5a948","38aaec0cd25bec1bec8511430fcfc6a7ce53ec44fa7e4e68717c551d0c786ef0","c777a68c2938e67dab6f2625e7c0f9996ff1bb6e3205c602a4c3e6d0bb0da198","0d9b14b7e6e52b3fe52b70ec992a55f8dd5c63a56f403dd504a12e7df3a6aaab","13464a8c6e30893261acf4c91b6a2478952a354abc9d12bb0a7aa54fc789971a",{"version":"751ef6b3e0986c26fc64283124b1f7a0fbd56c5aabfe349e8622acdcfc2483fd","signature":"bed36f8d416b14fbc1c9527d36e51337856c34112d80e46efa74ef0b13a65e59"},{"version":"165b246ba1c9a37e029832c312e518d922b66c6483100efc6a4dab40f6fda952","signature":"f4e195d040797aaecdea11f5768a3015483d62cd5112d86f2d28d36096c4f2f1"},{"version":"49edd25481acf33a4ddc1e247ec183e8baedcc3046ec73d0bd667d548002e8a3","signature":"fa091e487523449b62860cde2e6b83dddccf8443c3340f5834ff8ee937b97862"},{"version":"ce1295c2d4b938bc47ae0d721c0c483abedc874ca5ed78d7399c5af08909b6b8","signature":"e5bd0f549d253e308df90cfc326eefb0a69f0b5239e619e22d6ed7c658ad149e"},{"version":"74b0049d264f1a6406f9f97ccc7646a6874f2fd7dde593a8ef2ca7bae3a3d044","signature":"a411fc0b36f8bcb1bead85af6a065eaca1f7280868c766fa7799b0186f8d56a4"},{"version":"0bf0eeb20c97936ff502e536c5ef4f421edfe6f6c5ee5bbb0767ea8a8fc6994f","signature":"4b5d8d06fc1446cd4abd86ff03a18d873fde94cd4be7bad889f9dd01e1cd9643"},"4c5adbe8fbc482c38f2eca46983bbd573c052d321f17ee937868699aed7e08a8",{"version":"fae69892ea0fbc0c66de32f284bb9820e7735647659fa017c2e906dc5990df57","signature":"5ff011aadc979170c41395725b039a0455158959c8ae78ca63d354f06af481d6"},{"version":"793b59048bbafb008a4455bdf6ac0eadf6a8e85b3858d734581f00896f12e96b","signature":"6ede01de2be0bfa013eaaffc50f3f9c1f17f29df153825d3e3a7f92ead8fad40"},{"version":"6a9eb9c5d3f7474937973fe4b0a9e53025634c2e39118eda436d89f3e9df976f","affectsGlobalScope":true},{"version":"86e56d97b13ef0a58bc9c59aee782ae7d47d63802b5b32129ec5e5d62c20dbfa","affectsGlobalScope":true},{"version":"c1f79c6d85cd84518fd7349588b3c61bdc189f58e3866f925cbf4631c81e31f9","affectsGlobalScope":true},{"version":"54db406753da16e177f094aa66da79840f447de6d87ddd1543a80c9418c52545","affectsGlobalScope":true},{"version":"42f28f4cfca4a70bd89c1d55d76c7978275030b894f6793f36890265c11a83a4","affectsGlobalScope":true},{"version":"7cf1027da9599f056355b46bbea31dbf7f715f797dffb9cbb3402d4490c503e5","affectsGlobalScope":true},"96dbd0787b57ae02981d26d5f2441f0f8444fb46d7578c56527eab89cff13a7d","27573b15894c6311146838fa3b45786bacc013a4bca6c84adc1b11a4e7c8a4c0","7d2a0ba1297be385a89b5515b88cd31b4a1eeef5236f710166dc1b36b1741e1b","8e87660f5170c195ade218937e360484775be6a4e75a098665d9ba5a2e4cdc15","8d16e3ff29dd0650435766702b01c2f7e9d1f289a48fcbf8e93687d6ecf33f26",{"version":"16d6c9ab7a11d681089018209a723c81964fe44a279b136b841d2716475aeada","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"61c01b359e70860cf9bec2b84e1aa770485c7d99a672fcaced88af4197573108","4f590c560ee71a07def1a8e0d663d9d7ddb0d806deab94d8ceaac1f6408ac314","9a2eaab4e54953c6b2ba21f7ac4c2593859da03917011c10a2acd8864e38e7b2","3f666b04eebdae90161ddb1688911a72644fb9836c076707758391ecdd0efaaa","1dcd0086953c3ed3210ddbb09c9933c3a59629a47feacfdf8245cf3efc69c7af","a1b197aea47af843f1951a3a4ce8a83d4fd23b22adc620cbfdca8063a18900b8","0c4ba3558cec749d376e43f9795ecfab6ad3893e0f8a40a761b0d32bf95524f8","a7225f0b4bf125ad8d8874f04225e331707c5109f79186a48672c1b557231281","91764b36fe5e1c5d688f5f90eeea47703a059ab9a81bf80f7bbc9b04507b7bd3","115327b8e1f68c03004d841b83e332ed16b8f48af59ac00f38313887d7ec2920","6d268309f0e15dd820b2df9806234166554cb4e2fe00d11737adcb4e5489f700","58cf96187feb10cc8ad3bb080871cd30888ef63bc5db131f11458850ef8f6245","9102986ff52326a2016e8cddc1cf3092f0808ac916dcc8dc2d2c7195cd181987","fa82b7b22d9df87323e31e9e2ad75911028f3e544647fd212424b3c4452fee3f","01f20dac9dc14f0d306e5d1215c5c1c3b4d1805905e60ae92fabac4031eae7da","9ceec2a882368c0160a8a3879aa0efce0fb985751fc23ff6191006030969cfa4","cad5d6451789234434c28dd2d6a8267b0d64c479b1ad267321faa31ba90d570b","6516fc98fa10b0cb22c7e332bacea4a7ea80257e113f6cdddd924d03bfde218e","3b012229e05e873e290030748b2c35b2ac097294bd3a4254cf135c710a8197f0","ec6adf14f44d63199b70a1117f13d380dfd0b1e1f0a6357b0ecf04cf0c56ab68","4f5ed150ac06c9ec2f0c8e51252b298ec14f3c99fac2c4b8bdd192ce0d1e0caa","171d8b085debb418586db7cc9e25fdfec7da6e2595b8bbb0c5ac958f3c25a4b5","4ea55f0389147ea2ee84910bdede2b24533d65a07a3884b208d15f3856379a11","78f76071b5b3f4348a30e33af90569073e0efd25158cf6ea57615987e64eaaba","35acab151d1013a7d102c56d7c62e2087b762a75c09f35d0a399b7a2cb89371f","2645c87fd2ec8044c5d57c0a7f5efea8a6161fff14bda46113443f295f64fd90","385d0fce26420c02a51c046585ef2f4ef5e7cfa2a2101c360b786e147749aab2","22a93cb3d5425e601f498416441ea181a31ff9bc7d52d0e89061938f930d35cc","1f63ac6272e4d2d43cb25552b4ed8a89ffc86244ea655f685e8e3685433c7b23","064056137306dc32a88c020d9458913482f96076bccdbc404eae7c085058ce42","094be99dc9410d3cb517ba523ae031864c5e258a3904ed8058773672768c2c6c","fafe1e5b2114bc57a6da341cad2bb44298543caa3fd7680e6bb0f29215048aa2","4f5ce1915e34f5b360495c87e410b72cdf1e9c2c92b805f6f63ba93eb162e08f","3439a0999ac6ad470f814394edb401d2a8b932234b4cafe304a53ab25c5a6619","5ad6d882be6f8e602795bc0bd0fac7806b16ba7715be494fe0279e2c5e3e23c0","596ab45ef67fa8dae4996a2a61dc5055ae2b3dc5102cf3b43ee7965a7088943b","a3f9f52ce73700565c8d9ba2aa75823ab8fc8e7258a27ecb828cd4257b8f918d","5f4884638ab10b753ec0c7406916fc746bb99cc0044b9a4a67b2006b7e57e8af","e9783ee473a21d5e8b12ca7dd1f22f0a657e5cb0bb9cd0186da5efa90d4a7cbd","22c980472aeac42a88c7954c9645c5cf0c511142afd048699daf516b25f9ea2d","aabcb267f8a73a9923157af617c47e2d707481760e60967dfa836613e2b7433b","1571f35df4f2a4b83c321fda357626c289d86dbf88a2c222cda192e747c1e42d","4c6a569dc88e533fb0ed53aaf80fe6ead7f26bd722dee4dc4972de63e61b1d0e","2e5e5c1e456256a0ae3b2aad2b771fc751081ce0a28ec5dc2c64e65b0412dea0",{"version":"96935b2b09d2eae666d7b98e0c8f0405fc9b72878f4a17c24fde4eeeb57d77e6","signature":"24e087d3b31a47d62c6c3993d39192013c5053f8fbca6071bafc7cec8a8d001b"},{"version":"036dfaf70dbff1bdfa9b034561c981d69c4d1e6b9553f6ef5997f4b8ab838238","signature":"47fb8139c068d7e9af2534caf80fa2c53e7554ec4dce79e36bf0339551ccc181"},{"version":"916b65950bbe8258dfdd7b26891b8bc0b246fe8673f1da934d813459618d19d7","signature":"1aa53e7a52a19defcd4ed96bc83ec88b35195a9a2df22e6840b4ca2ea5bbcf59"},"a014705f62ab3731cd6e83cc0d47055301bda50e883a7c5b308c5fc294384f00","9e137844a15764f343e49ca4443d833350c06f39a8caeacb96b00833439680b7","8211eeec7cb8f7b3605df9b4fec52960d4b6f9bce9435ce50e7fd94f143640d4","1633b84fd3346ad6500a88e7a119ac778bb6f6b2746a3b7b8164c5ef2721822f","47fbed5e984278b46c60b87df76e63d4ea31bf80f29d49cbfb5cd140dd8e0a6e","58aa2c2157a9620698ca6280d24143dc332221cf0008c0af1c99d74494785989","4d00cb0cbfca5ad8ceaee993887e618bada234de55a9bbc2adc33192ae57f4c4",{"version":"dfce4934f9f27a8f32de11728b94acf34c2d2ab76743ea0c15035a1893e9b398","signature":"e0f6fbf8d68b52c380346198897e0a93f1ae28f86330a88becc270b8c0091036"},{"version":"8cb350cb47ec9806c322ff42235c998bfd2431f8aaea942bc8fa788c4884602a","signature":"878912f2da7af40fcdf0e9c72301491113ad60d80b56f75f9dbcdaf9560efc75"},{"version":"213899ec3b185cc166d9ef4b5dc7f25b751e18879d730361386c361518dd68a1","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"5bca2169d85cde638dc45542bb3674c42e5a0eea70ac2737cb48848a0c9e10b4","0da3f2eded50c1a339c4cc6c659c0175db5421f1e49791a808fe691d8ebc1444","bcc66913f07d898149b4bb118d1b04c4925f0d61dceeecc65ef5bb58b5004d4c",{"version":"f18c42254c093ff60ee9d0fd4e7ee14cd6d1a15bacc4cd987eefc2e2557a8dc6","signature":"518a3cef0d51ba223da57c7e8be03696fc4aa41a9f55e1630d548dac970eb6ac"},{"version":"b0b4568cdd4686a5cf477b8ade5a42997d1616324e5c082d699f17bdf5779833","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"477c62189c4eac3ae432858a86b72ba359deaa01c1b83f6133931f6627a9e010","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"bf8a207158e798de73abdfcd606ab5c4972e5255711ac3cce242d396eaee5330","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"d5e5cc8638a383690c2916be246d31e0c6c3ffd5dd59b55f236bbf56bdcbd5c0",{"version":"8ece586fc1f2d0f3beb7b523ca49c43e4d96c1628e71e0178380700a61281f31","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"56558ae167446acf230ea2cc072a835309a37ae63d286b484308afd8c504c2d6","adb5ad16c19ff8dbfa9daa3a7dc8e1b039c381a2b94383144a53368681ad8ca0",{"version":"ec4f9a26827ebcb6cdf0334fb9e8be3ba0b7fbe4ba24790098d8529c73e3cdc1","signature":"d3b9483441473ada0b69be59044149d25a05bfc3fd3199b73595541e3778e6a3"},{"version":"f123cbb0352a8d5e5bbc31dadf918a485718494c14c60c04592023ab169d470a","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"23c297d8b7b56463253113f6a8f123f2fa0c69f13804ac44de883d1da6b1391b","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"5ccc3c7f73ef48c223635cd4506f21133560de7abc4c09c623327bb1b54386dc",{"version":"3c5f79ad2d8d1f03a54376c8acb2ef0d0c0e0c4f7312775626b45c71b2d9e6a1","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"8f706e2691eb26e46dd750682801dd97527b9367aad224280b98f43912f18e14","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"2177dc9e08480fab08d0142dae595ecb696de0d358f3a84fca6b38706d0a8097","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"f5b74ea823d1550a3f04c7670b2588e900f059b0da824e97d82da758b259486b","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"e1ea54d2635ea7e40d668c71bd74fb4aa8671672a3421cb5a7dc06711d87aa23",{"version":"7ee9d5eb92bb6cf5fe1870ceda0ca1531bce65b31533fb808a552ff98275042b","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"687ec53a7422d8cf80477fffa82a2db211f724039267931642befcd4907aec26",{"version":"d89c541d6fcbb9a1d466f5a66c1d4cf45fc6a5a2e8f4054585c750343ad4caff","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"8c330385b186cd54e451102591c2f21d7e2d96bdefab0031b718db7a63b86705","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"ec622169d0af21120666e6385551529d356651b7bc55e1727fa08d8d8dd37035","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e8a53ac6988624901a60bc26dd213833eb255c1ad81f0e1050aed515500fbe01","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"41c31ff8647d35c5d3de034fa5eea864f15af1138ddec23b3f1d94bbb96a42c5","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"df4435080db6f62965ef279dfcc5edc91e9c3442729be2b31b0e472bf28e280e","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"b9d75187f78a50ef3da1f5d7b89154411bb1d9cc77ec1e526d5e5c3120fa6c0d","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e6dda00aefc85eb1545c8eabad3e639b91bb60edd13ccd422231a625c8bb95e5","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"72322a0b1586d3de59d3c5edc9eacf34480d1bb20d6de633fb63044de9682401",{"version":"43641b19a23908007337743c5bce76a3670428ba5d1ac5e5a1d5537ddcb1e6f4","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"055b1094fe84c7bfe84b0de10ef6d325088c7014c051430435f84bfaf9cb05c7","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"acb39fdb6f3d7fcacf26610b0a5472408f5bccebf6f5786341c253feeb52d8fb","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"bea3d14ef48bde3d9c30261e16c42f220d4f74bbfb5d27a135079cd719f2c0e7","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e2cee66c19e06ab44e896d747e5bc8708e3a8cff723a73370445837cac3252ae","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"2f3ebcbf385d85fe173ee8a491ff6f0bc5e1d21ba11beef143d905c21b6f13ab","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"4e2eb1316e2a369acfacd99e653890c473639fc30d210e68acd6f46aaff03f1d","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"da977f3cc2f3af77c215b66b0d1c039f8fb642615231cd4eb436e84237e8633d","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"16aaf0135239fe2bafc4cd1f1310532fcbe90986fb1b8adb464ea7c714f4331a","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"641a1cc3fcda9057555b24dd26ccdd939e028d21b0bf6b023d5f91044b9dd154","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"7c59943d77166c1aecd731af8683a7b5a0984e1bc0427fa35be504d77c41fdcd","d357e56d630bcd0f63cfc678e306702555b4f791c2d8e07f037de39171be4cd3","c7ab5bd8603f3d24c94a95b780fb3bac66e45212fb304495f205b53dc2a9808b","a93ae01c9ed49ba423599144ffa3cd520db83e53b32471865905a65113bb3e59","6088973936033e869d3616b63d25c15363862b491f46af77d40a5215ee8cc1a8","9a4b7c467be504c4500cf6e54b0a3b8afdfbe0ed2c1da640202f44a7cef721b2","5cf9f5e95313f8ad7c507e9f109ab749f8033cbf0be469d19975b501489ee4f5",{"version":"59487b352f4aa63782dbf425bcab992e35e6503d9cd1362cc11c9c92c0627330","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"42baf4ca38c38deaf411ea73f37bc39ff56c6e5c761a968b64ac1b25c92b5cd8","d7dbe0ad36bdca8a6ecf143422a48e72cc8927bab7b23a1a2485c2f78a7022c6","8718fa41d7cf4aa91de4e8f164c90f88e0bf343aa92a1b9b725a9c675c64e16b","f992cd6cc0bcbaa4e6c810468c90f2d8595f8c6c3cf050c806397d3de8585562","68cc8d6fcc2f270d7108f02f3ebc59480a54615be3e09a47e14527f349e9d53e","3eb11dbf3489064a47a2e1cf9d261b1f100ef0b3b50ffca6c44dd99d6dd81ac1","bc222163edcb8df6ba9b506d053d6c5afcae50e85695151cf4636a3107deaba9","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","fec943fdb3275eb6e006b35e04a8e2e99e9adf3f4b969ddf15315ac7575a93e4","742f21debb3937c3839a63245648238555bdab1ea095d43fd10c88a64029bf76","7cfdf3b9a5ba934a058bfc9390c074104dc7223b7e3c16fd5335206d789bc3d3","4992e90e1ccc4f69f46e40f067d90b4a1d943ca9eb8e2054661bab13b7496ecb","458111fc89d11d2151277c822dfdc1a28fa5b6b2493cf942e37d4cd0a6ee5f22","da2b6356b84a40111aaecb18304ea4e4fcb43d70efb1c13ca7d7a906445ee0d3","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","aa2c18a1b5a086bbcaae10a4efba409cc95ba7287d8cf8f2591b53704fea3dea","6f294731b495c65ecf46a5694f0082954b961cf05463bea823f8014098eaffa0","0aaef8cded245bf5036a7a40b65622dd6c4da71f7a35343112edbe112b348a1e","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","bdf0ed7d9ebae6175a5d1b4ec4065d07f8099379370a804b1faff05004dc387d","7c14ccd2eaa82619fffc1bfa877eb68a012e9fb723d07ee98db451fadb618906","5256ff2882306972c3eeae034d8e553a60d930f3e44d22189c54248232258438","df996e25faa505f85aeb294d15ebe61b399cf1d1e49959cdfaf2cc0815c203f9","4f6a12044ee6f458db11964153830abbc499e73d065c51c329ec97407f4b13dd","13e834b958fe7e9010d2161497f98916974a0618be7a773281a253a948da8b0d","dae5c8e0ca15779492744cb4071c5b3c94c2121940fbaefb43ca9a045557a0c9","0944f27ebff4b20646b71e7e3faaaae50a6debd40bc63e225de1320dd15c5795","5d30565583300c9256072a013ac0318cc603ff769b4c5cafc222394ea93963e1","8a7219b41d3c1c93f3f3b779146f313efade2404eeece88dcd366df7e2364977","a109c4289d59d9019cfe1eeab506fe57817ee549499b02a83a7e9d3bdf662d63","89121c1bf2990f5219bfd802a3e7fc557de447c62058d6af68d6b6348d64499a","d4a22007b481fe2a2e6bfd3a42c00cd62d41edb36d30fc4697df2692e9891fc8","8841e2aa774b89bd23302dede20663306dc1b9902431ac64b24be8b8d0e3f649","fbca5ffaebf282ec3cdac47b0d1d4a138a8b0bb32105251a38acb235087d3318",{"version":"c67a7b7eec0175ea53343429d32897fcad406c663ba4b775eab8be8164bff91c","affectsGlobalScope":true},"62a8effc4dd17bbc2c05927b4ca5f67e73fdb458e203b128c041d0d70ffa6b55","cb482592bfcbdfcefa8d155590399e8bff66277e60e17bfada7c2f31322e7b87","d3213ac97e906cb1a935cf80061aacdb05a943a4d0316b469ab44565c34147f2","8b5402ae709d042c3530ed3506c135a967159f42aed3221267e70c5b7240b577","22293bd6fa12747929f8dfca3ec1684a3fe08638aa18023dd286ab337e88a592","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","7d8ddf0f021c53099e34ee831a06c394d50371816caa98684812f089b4c6b3d4","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","4006c872e38a2c4e09c593bc0cdd32b7b4f5c4843910bea0def631c483fff6c5","ab6aa3a65d473871ee093e3b7b71ed0f9c69e07d1d4295f45c9efd91a771241d","41392155643024553ab15aa2074c7ed144958cbfe941aefcdfad119492985885","d9a256f69f3956993e65efd88336644be8f8dd36d149e859c14704ef6c6c0eec","5aac5efd20619b522faeeb0badf250834850c605ad8c5fb91c6502a54057f413","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","74d5a87c3616cd5d8691059d531504403aa857e09cbaecb1c64dfb9ace0db185"],"root":[200,233,[246,248],250,[252,254],262,263,267,268,275,277,286,289,290,292,[298,303],305,306,318,[363,365],[373,375],[379,382],384,[387,389],[391,394],396,[398,405],[407,416],424],"options":{"allowJs":true,"checkJs":true,"composite":true,"declaration":true,"declarationMap":true,"emitDeclarationOnly":false,"esModuleInterop":true,"module":7,"noEmitOnError":true,"outDir":"./","removeComments":false,"skipLibCheck":true,"sourceMap":true,"strict":true,"stripInternal":true,"target":9},"fileIdsList":[[198,369,371],[70,83,100,198,368,369,370,372],[70,198,351,368,369],[76,77],[76],[74,75,78],[82],[73,78,80,81],[78,80,82],[79,82],[158,161,188,196,425,426,427],[307],[429],[196],[432],[433],[158,196],[438],[452],[440,442,443,444,445,446,447,448,449,450,451,452],[440,441,443,444,445,446,447,448,449,450,451,452],[441,442,443,444,445,446,447,448,449,450,451,452],[440,441,442,444,445,446,447,448,449,450,451,452],[440,441,442,443,445,446,447,448,449,450,451,452],[440,441,442,443,444,446,447,448,449,450,451,452],[440,441,442,443,444,445,447,448,449,450,451,452],[440,441,442,443,444,445,446,448,449,450,451,452],[440,441,442,443,444,445,446,447,449,450,451,452],[440,441,442,443,444,445,446,447,448,450,451,452],[440,441,442,443,444,445,446,447,448,449,451,452],[440,441,442,443,444,445,446,447,448,449,450,452],[440,441,442,443,444,445,446,447,448,449,450,451],[439,456],[457],[459],[455],[152,158,196,431],[104],[145],[146,151,180],[147,152,158,159,166,177,188],[147,148,158,166],[149,189],[150,151,159,167],[151,177,185],[152,154,158,166],[145,153],[154,155],[158],[156,158],[145,158],[158,159,160,177,188],[158,159,160,173,177,180],[143,193],[154,158,161,166,177,188],[158,159,161,162,166,177,185,188],[161,163,177,185,188],[104,105,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],[158,164],[165,188,193],[154,158,166,177],[167],[168],[145,169],[104,105,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],[171],[172],[158,173,174],[173,175,189,191],[146,158,177,178,179,180],[146,177,179],[177,178],[180],[181],[104,177],[158,183,184],[183,184],[151,166,177,185],[186],[166,187],[146,161,172,188],[151,189],[177,190],[165,191],[192],[146,151,158,160,169,177,188,191,193],[177,194],[161,177,196],[470,509],[470,494,509],[509],[470],[470,495,509],[470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],[495,509],[315],[158,161,163,177,185,188,194,196],[516],[158,177,196],[307,308,309,310,311,312],[307,308],[231,232],[232,242,243,417,418,419,420,421,422],[231,232,242,423],[229,231,232,242],[231,232,242],[231,232,418],[232,423],[229,231],[228],[230],[70,83],[70,83,274],[83],[70,83,294],[321,322,324],[83,321,322,323],[83,321],[321],[65],[217,218,224,225],[68,69],[68],[66],[216],[67],[67,220],[69,219,220,221,222,223],[65,66,67,68,216],[65,66,67],[327],[265],[336],[329],[70,329],[329,330,331,332,333,334,335],[70,336],[316],[227],[224,226],[115,119,188],[115,177,188],[110],[112,115,185,188],[166,185],[110,196],[112,115,166,188],[107,108,111,114,146,158,177,188],[115,122],[107,113],[115,136,137],[111,115,146,180,188,196],[146,196],[136,146,196],[109,110,196],[115],[109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142],[115,130],[115,122,123],[113,115,123,124],[114],[107,110,115],[115,119,123,124],[119],[113,115,118,188],[107,112,115,122],[146,177],[110,115,136,146,193,196],[198],[239,269,270,271],[236],[198,224,236,237,238],[198,376],[82,198,316],[82,198,215],[70,83,198,215],[347,348,349,350,352,353,354,355,356],[70,82,83,198],[100,198,351],[198,215],[77,82,198,209],[201,210,211,212,213,214],[70,198],[77,82,198],[70,72,83,84,198],[72,82,84],[70,72,82,83,198],[69,85,198],[71,72,77,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,197],[67,69,70],[84],[85,87],[67,69,71],[72,82],[72,85,198],[71,72,82],[70,71,72,84,87,100],[70,71],[70,83,84,198],[72,84],[77,82,84,87,94,198],[82,198,215,240,246],[78,198,199,200,215,232],[80,82,198,234,235,302],[82,198,304],[82,198,209,215,251,253],[252],[77,78,80,82,198,200,209,215,234,245,250,253,259,260,261,262,268],[77,80,82,198,209,215,234,249,250,253,254,258,263,267],[198,215,253,264,266],[82,198],[198,215,272,273,274],[69,198,200,209,276],[82,198,240],[78,198,232,233,239,240,241,247,268,275,292,301,303],[82,198,199,209,215,233,239,240,241,243,244,245,247,248,268,275,277,286,289,290,292,299,300,302],[198,199,200,276,284,285],[198,215,255,261,272,287,288],[198,199,200,215,235],[77,82,198,200,215,291],[77,198,200,215,240,253,261,290,297,298],[82,198,199,215,239,240,247,313,314,316,317],[82,198,215,313,316,319,320,326,328,364,365,374],[326,367,373],[198,199,209,215,239,240,254,313,317],[82,198,199,215,239,240,255,260,263,313,314,316,317,357,383],[82,100,159,167,168,198,199,215,233,239,240,241,243,245,247,255,263,268,286,292,302,313,314,316,317,319,357,361,367,372,385,386,387],[82,198,199,215,233,234,239,240,241,243,253,255,268,292,302,313,314,316,317,319,326,328,346,357,361,362,372],[78,82,198,215,233,239,240,268,302,313,316,317,357,363,364,385,387,390],[82,198,199,215,239,240,268,313,316,317,328,357,363,364,365,386],[198,199,215,239,240,266,267,313,314,316,317],[82,198,239,240,255,302,313,316,319,326,345,346,357,361,362,372],[198,199,215,275,313,314,317,395],[82,198,199,239,240,298,377,379],[70,83,255,378],[82,199,239,240,298,313,316],[69,82,198,239,240,255,302,313,317,390,397],[82,198,302,319,326],[82,198,302,313,326,345,346],[302,319,326],[198,302,313,319,326,328],[198,239,240,302,313,317],[198,302,313,319,367],[302,313,319,326],[82,198,199,215,239,240,255,289,313,314,317,378,390,397,406],[198,302,313],[198,235,302,319,326,345,346,357,361,362],[198,235,302,319,326,345,346,361,362,367,372],[82,198,247,302,363],[198,215,385],[82,198,302,313,316,317],[82,198,239,240,255,302,313,314,316,317,390,397],[198,215,233,239,240,241,243,268,290,313,317,357],[198,233,255,302,313,319,326,361,372],[198,199,209,215,239,240,255,290,313,317,357,383],[82,198,199,233,239,240,241,243,247,292,313,316,328,357,367,386],[82,198,199,233,239,240,247,292,302,313,316,319,326,357,362],[70,82,198,233,239,240,241,245,255,290,299,302,313,314,316,317,319,326,328,345,346,357,361,362,372,385,390,397,423],[83,297],[198,293,294,295,296],[83,198,297],[202,203,204,205,206,207,208],[198,204],[198,202],[198,203],[67,69,198],[82,198,232],[198,360],[70],[70,83,198,358,359,361],[70,198,351,358],[82,198,209,337,339,340,341,342,343,344],[198,215,337,338,339,345],[82,198,209,337,345],[198,215,341,342],[198,215,337],[77,82,198,366],[82,198,367],[77,161,196,198,321,325],[70,83,198,199],[198,261],[284],[282],[279,284],[279],[278,279,280,281,282,283],[280,284],[198,257,258],[198,258],[198,256,257],[198,256,258],[255],[78,198,215,232],[198,302],[82,198,209,215],[77,78,82,198,209,215,259],[82,198,209,215,254,263,267],[198,215,273],[69,198],[78,198,232,233,241,247,268,275,292],[82,198,215,233,302],[198,199],[198,199,215],[302],[215]],"referencedMap":[[372,1],[371,2],[370,3],[78,4],[75,5],[74,5],[76,6],[260,7],[81,7],[82,8],[73,7],[79,9],[80,10],[428,11],[308,12],[312,12],[310,12],[430,13],[431,14],[433,15],[434,16],[437,17],[439,18],[453,19],[454,19],[441,20],[442,21],[440,22],[443,23],[444,24],[445,25],[446,26],[447,27],[448,28],[449,29],[450,30],[451,31],[452,32],[457,33],[458,34],[460,35],[456,36],[464,37],[467,14],[104,38],[105,38],[145,39],[146,40],[147,41],[148,42],[149,43],[150,44],[151,45],[152,46],[153,47],[154,48],[155,48],[157,49],[156,50],[158,51],[159,52],[160,53],[144,54],[161,55],[162,56],[163,57],[196,58],[164,59],[165,60],[166,61],[167,62],[168,63],[169,64],[170,65],[171,66],[172,67],[173,68],[174,68],[175,69],[177,70],[179,71],[178,72],[180,73],[181,74],[182,75],[183,76],[184,77],[185,78],[186,79],[187,80],[188,81],[189,82],[190,83],[191,84],[192,85],[193,86],[194,87],[427,88],[494,89],[495,90],[470,91],[473,91],[492,89],[493,89],[483,89],[482,92],[480,89],[475,89],[488,89],[486,89],[490,89],[474,89],[487,89],[491,89],[476,89],[477,89],[489,89],[471,89],[478,89],[479,89],[481,89],[485,89],[496,93],[484,89],[472,89],[509,94],[503,93],[505,95],[504,93],[497,93],[498,93],[500,93],[502,93],[506,95],[507,95],[499,95],[501,95],[316,96],[321,97],[515,14],[517,98],[518,99],[313,100],[311,12],[309,101],[242,102],[423,103],[418,104],[243,105],[420,106],[422,107],[417,108],[419,104],[421,106],[232,109],[229,110],[231,111],[274,112],[294,113],[395,114],[385,114],[338,115],[325,116],[324,117],[322,118],[323,119],[425,49],[225,120],[226,121],[66,122],[69,123],[216,124],[217,125],[218,125],[220,126],[221,127],[224,128],[223,129],[68,130],[328,131],[266,132],[386,131],[329,133],[332,134],[333,134],[330,135],[331,134],[336,136],[334,137],[335,133],[317,138],[245,139],[228,139],[227,140],[122,141],[132,142],[121,141],[142,143],[113,144],[112,145],[141,14],[135,146],[140,147],[115,148],[129,149],[114,150],[138,151],[110,152],[109,153],[139,154],[111,155],[116,156],[120,156],[143,157],[133,158],[124,159],[125,160],[127,161],[123,162],[126,163],[136,14],[118,164],[119,165],[128,166],[108,167],[131,158],[130,156],[137,168],[319,169],[272,170],[237,171],[239,172],[238,171],[377,173],[383,174],[347,169],[348,175],[349,176],[355,112],[357,177],[356,169],[350,178],[352,179],[353,180],[354,180],[201,7],[210,181],[215,182],[211,169],[212,183],[213,169],[214,184],[96,185],[97,186],[84,187],[86,188],[197,17],[198,189],[71,190],[88,191],[98,192],[72,193],[85,194],[89,195],[90,196],[101,197],[102,198],[92,191],[94,199],[93,200],[95,201],[247,202],[233,203],[303,204],[305,205],[248,169],[254,206],[306,207],[253,207],[263,208],[268,209],[267,210],[262,211],[275,212],[298,211],[277,213],[250,214],[302,215],[301,216],[286,217],[289,218],[290,219],[292,220],[299,221],[318,222],[375,223],[374,224],[382,225],[384,226],[388,227],[389,228],[391,229],[392,230],[393,231],[394,232],[396,233],[380,234],[379,235],[381,236],[398,237],[399,238],[400,239],[401,240],[402,241],[403,242],[404,243],[405,244],[407,245],[408,246],[409,243],[363,247],[373,248],[364,249],[387,250],[410,251],[411,252],[412,253],[413,254],[414,255],[415,256],[416,257],[424,258],[199,169],[296,259],[297,260],[295,261],[205,169],[209,262],[204,169],[202,169],[203,169],[208,263],[206,264],[207,265],[240,266],[241,267],[346,180],[361,268],[358,269],[360,270],[359,271],[345,272],[337,137],[340,273],[339,274],[341,180],[343,275],[342,276],[367,277],[366,278],[362,7],[326,279],[351,280],[273,281],[234,169],[251,169],[278,282],[283,283],[280,284],[282,285],[284,286],[281,287],[320,7],[264,288],[259,289],[258,290],[257,291],[256,292],[291,169]],"exportedModulesMap":[[372,1],[371,2],[370,3],[78,4],[75,5],[74,5],[76,6],[260,7],[81,7],[82,8],[73,7],[79,9],[80,10],[428,11],[308,12],[312,12],[310,12],[430,13],[431,14],[433,15],[434,16],[437,17],[439,18],[453,19],[454,19],[441,20],[442,21],[440,22],[443,23],[444,24],[445,25],[446,26],[447,27],[448,28],[449,29],[450,30],[451,31],[452,32],[457,33],[458,34],[460,35],[456,36],[464,37],[467,14],[104,38],[105,38],[145,39],[146,40],[147,41],[148,42],[149,43],[150,44],[151,45],[152,46],[153,47],[154,48],[155,48],[157,49],[156,50],[158,51],[159,52],[160,53],[144,54],[161,55],[162,56],[163,57],[196,58],[164,59],[165,60],[166,61],[167,62],[168,63],[169,64],[170,65],[171,66],[172,67],[173,68],[174,68],[175,69],[177,70],[179,71],[178,72],[180,73],[181,74],[182,75],[183,76],[184,77],[185,78],[186,79],[187,80],[188,81],[189,82],[190,83],[191,84],[192,85],[193,86],[194,87],[427,88],[494,89],[495,90],[470,91],[473,91],[492,89],[493,89],[483,89],[482,92],[480,89],[475,89],[488,89],[486,89],[490,89],[474,89],[487,89],[491,89],[476,89],[477,89],[489,89],[471,89],[478,89],[479,89],[481,89],[485,89],[496,93],[484,89],[472,89],[509,94],[503,93],[505,95],[504,93],[497,93],[498,93],[500,93],[502,93],[506,95],[507,95],[499,95],[501,95],[316,96],[321,97],[515,14],[517,98],[518,99],[313,100],[311,12],[309,101],[242,102],[423,103],[418,104],[243,105],[420,106],[422,107],[417,108],[419,104],[421,106],[232,109],[229,110],[231,111],[274,112],[294,113],[395,114],[385,114],[338,115],[325,116],[324,117],[322,118],[323,119],[425,49],[225,120],[226,121],[66,122],[69,123],[216,124],[217,125],[218,125],[220,126],[221,127],[224,128],[223,129],[68,130],[328,131],[266,132],[386,131],[329,133],[332,134],[333,134],[330,135],[331,134],[336,136],[334,137],[335,133],[317,138],[245,139],[228,139],[227,140],[122,141],[132,142],[121,141],[142,143],[113,144],[112,145],[141,14],[135,146],[140,147],[115,148],[129,149],[114,150],[138,151],[110,152],[109,153],[139,154],[111,155],[116,156],[120,156],[143,157],[133,158],[124,159],[125,160],[127,161],[123,162],[126,163],[136,14],[118,164],[119,165],[128,166],[108,167],[131,158],[130,156],[137,168],[319,169],[272,170],[237,171],[239,172],[238,171],[377,173],[383,174],[347,169],[348,175],[349,176],[355,112],[357,177],[356,169],[350,178],[352,179],[353,180],[354,180],[201,7],[210,181],[215,182],[211,169],[212,183],[213,169],[214,184],[96,185],[97,186],[84,187],[86,188],[197,17],[198,189],[71,190],[88,191],[98,192],[72,193],[85,194],[89,195],[90,196],[101,197],[102,198],[92,191],[94,199],[93,200],[95,201],[247,175],[233,293],[303,294],[305,169],[248,169],[254,295],[306,207],[253,207],[263,296],[268,297],[267,180],[262,211],[275,298],[298,211],[277,299],[250,211],[302,300],[301,301],[286,302],[289,180],[290,303],[292,175],[299,180],[374,304],[379,112],[363,294],[373,294],[364,294],[387,305],[199,169],[296,259],[297,260],[295,261],[205,169],[209,262],[204,169],[202,169],[203,169],[208,263],[206,264],[207,265],[240,266],[241,267],[346,180],[361,268],[358,269],[360,270],[359,271],[345,272],[337,137],[340,273],[339,274],[341,180],[343,275],[342,276],[367,277],[366,278],[362,7],[326,279],[351,280],[273,281],[234,169],[251,169],[278,282],[283,283],[280,284],[282,285],[284,286],[281,287],[320,7],[264,288],[259,289],[258,290],[257,291],[256,292],[291,169]],"semanticDiagnosticsPerFile":[368,369,372,371,370,78,75,74,76,260,81,82,73,79,80,428,308,312,310,307,430,431,426,432,433,434,435,436,437,438,439,453,454,441,442,440,443,444,445,446,447,448,449,450,451,452,457,458,460,455,456,461,462,463,429,464,465,466,467,104,105,145,146,147,148,149,150,151,152,153,154,155,157,156,158,159,160,144,195,161,162,163,196,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,468,469,427,265,494,495,470,473,492,493,483,482,480,475,488,486,490,474,487,491,476,477,489,471,478,479,481,485,496,484,472,509,508,503,505,504,497,498,500,502,506,507,499,501,316,315,510,511,512,513,459,514,321,515,516,517,518,313,261,106,311,309,242,423,418,243,420,422,417,419,421,314,232,229,230,231,390,274,397,294,378,276,395,285,385,338,100,83,406,325,324,322,323,425,235,225,65,226,66,219,69,216,217,218,220,221,67,224,223,68,222,255,328,266,327,386,77,329,332,333,330,331,336,334,335,287,288,317,63,64,11,12,15,14,2,16,17,18,19,20,21,22,23,3,24,4,25,29,26,27,28,30,31,32,5,33,34,35,36,6,40,37,38,39,41,7,42,47,48,43,44,45,46,8,52,49,50,51,53,9,54,55,56,59,57,58,60,61,10,1,62,13,70,244,245,228,227,122,132,121,142,113,112,141,135,140,115,129,114,138,110,109,139,111,116,117,120,107,143,133,124,125,127,123,126,136,118,119,128,108,131,130,134,137,319,269,272,237,239,236,238,270,271,377,376,383,347,348,349,355,357,356,350,352,353,354,201,210,215,211,212,213,214,96,97,84,86,103,87,197,198,71,88,98,72,85,89,90,99,101,102,91,92,94,93,95,247,246,233,303,305,248,254,306,252,253,263,268,267,262,275,298,277,200,250,302,301,286,289,290,292,299,300,318,375,374,382,384,388,389,391,392,393,394,396,380,379,381,398,399,400,401,402,403,404,405,407,408,409,363,373,364,387,365,410,411,412,413,414,415,416,424,199,293,296,297,295,205,209,204,202,203,208,206,207,240,241,346,361,358,360,359,344,345,337,340,339,341,343,342,367,366,362,326,351,273,234,251,278,283,280,282,279,284,281,320,264,259,304,258,257,256,249,291],"latestChangedDtsFile":"./src/connection-manager/index.d.ts"},"version":"5.4.5"}
\ No newline at end of file
diff --git a/node_modules/libp2p/dist/typedoc-urls.json b/node_modules/libp2p/dist/typedoc-urls.json
deleted file mode 100644
index ab0ba1d..0000000
--- a/node_modules/libp2p/dist/typedoc-urls.json
+++ /dev/null
@@ -1,19 +0,0 @@
-{
-  "AddressFilter": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.AddressFilter.html",
-  "AddressManagerInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.AddressManagerInit.html",
-  "ConnectionManagerInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.ConnectionManagerInit.html",
-  "ConnectionMonitorInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.ConnectionMonitorInit.html",
-  "Libp2pInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.Libp2pInit.html",
-  ".:Libp2pInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.Libp2pInit.html",
-  "TransportManagerInit": "https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.TransportManagerInit.html",
-  "Libp2pOptions": "https://libp2p.github.io/js-libp2p/types/libp2p.index.Libp2pOptions.html",
-  ".:Libp2pOptions": "https://libp2p.github.io/js-libp2p/types/libp2p.index.Libp2pOptions.html",
-  "ServiceFactoryMap": "https://libp2p.github.io/js-libp2p/types/libp2p.index.ServiceFactoryMap.html",
-  ".:ServiceFactoryMap": "https://libp2p.github.io/js-libp2p/types/libp2p.index.ServiceFactoryMap.html",
-  "createLibp2p": "https://libp2p.github.io/js-libp2p/functions/libp2p.index.createLibp2p.html",
-  ".:createLibp2p": "https://libp2p.github.io/js-libp2p/functions/libp2p.index.createLibp2p.html",
-  "name": "https://libp2p.github.io/js-libp2p/variables/libp2p.version.name.html",
-  "./version:name": "https://libp2p.github.io/js-libp2p/variables/libp2p.version.name.html",
-  "version": "https://libp2p.github.io/js-libp2p/variables/libp2p.version.version.html",
-  "./version:version": "https://libp2p.github.io/js-libp2p/variables/libp2p.version.version.html"
-}
\ No newline at end of file
diff --git a/node_modules/libp2p/src/.DS_Store b/node_modules/libp2p/src/.DS_Store
new file mode 100644
index 0000000..77cb7f1
Binary files /dev/null and b/node_modules/libp2p/src/.DS_Store differ
diff --git a/node_modules/libp2p/src/connection-manager/connection-pruner.ts b/node_modules/libp2p/src/connection-manager/connection-pruner.ts
index 784e391..271cffe 100644
--- a/node_modules/libp2p/src/connection-manager/connection-pruner.ts
+++ b/node_modules/libp2p/src/connection-manager/connection-pruner.ts
@@ -40,21 +40,29 @@ export class ConnectionPruner {
     this.peerStore = components.peerStore
     this.events = components.events
     this.log = components.logger.forComponent('libp2p:connection-manager:connection-pruner')
+    this.maybePruneConnections = this.maybePruneConnections.bind(this)
+  }
 
-    // check the max connection limit whenever a peer connects
-    components.events.addEventListener('connection:open', () => {
-      this.maybePruneConnections()
-        .catch(err => {
-          this.log.error(err)
-        })
-    })
+  start (): void {
+    this.events.addEventListener('connection:open', this.maybePruneConnections)
+  }
+
+  stop (): void {
+    this.events.removeEventListener('connection:open', this.maybePruneConnections)
+  }
+
+  maybePruneConnections (): void {
+    this._maybePruneConnections()
+      .catch(err => {
+        this.log.error('error maybe pruning connections %e', err)
+      })
   }
 
   /**
    * If we have more connections than our maximum, select some excess connections
    * to prune based on peer value
    */
-  async maybePruneConnections (): Promise<void> {
+  private async _maybePruneConnections (): Promise<void> {
     const connections = this.connectionManager.getConnections()
     const numConnections = connections.length
 
diff --git a/node_modules/libp2p/src/connection-manager/dial-queue.ts b/node_modules/libp2p/src/connection-manager/dial-queue.ts
index 34de960..1b0be10 100644
--- a/node_modules/libp2p/src/connection-manager/dial-queue.ts
+++ b/node_modules/libp2p/src/connection-manager/dial-queue.ts
@@ -153,7 +153,7 @@ export class DialQueue {
       })
     })
 
-    if (existingConnection != null) {
+    if (existingConnection?.status === 'open') {
       this.log('already connected to %a', existingConnection.remoteAddr)
       options.onProgress?.(new CustomProgressEvent('dial-queue:already-connected'))
       return existingConnection
diff --git a/node_modules/libp2p/src/connection-manager/index.ts b/node_modules/libp2p/src/connection-manager/index.ts
index 607f0c2..77e61cf 100644
--- a/node_modules/libp2p/src/connection-manager/index.ts
+++ b/node_modules/libp2p/src/connection-manager/index.ts
@@ -1,4 +1,4 @@
-import { InvalidMultiaddrError, InvalidParametersError, InvalidPeerIdError, NotStartedError, start, stop } from '@libp2p/interface'
+import { ConnectionClosedError, InvalidMultiaddrError, InvalidParametersError, InvalidPeerIdError, NotStartedError, start, stop } from '@libp2p/interface'
 import { PeerMap } from '@libp2p/peer-collections'
 import { defaultAddressSort } from '@libp2p/utils/address-sort'
 import { RateLimiter } from '@libp2p/utils/rate-limiter'
@@ -214,8 +214,6 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
 
     this.onConnect = this.onConnect.bind(this)
     this.onDisconnect = this.onDisconnect.bind(this)
-    this.events.addEventListener('connection:open', this.onConnect)
-    this.events.addEventListener('connection:close', this.onDisconnect)
 
     // allow/deny lists
     this.allow = (init.allow ?? []).map(ma => multiaddr(ma))
@@ -268,10 +266,6 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
 
   readonly [Symbol.toStringTag] = '@libp2p/connection-manager'
 
-  isStarted (): boolean {
-    return this.started
-  }
-
   /**
    * Starts the Connection Manager. If Metrics are not enabled on libp2p
    * only event loop and connection limits will be monitored.
@@ -288,11 +282,7 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
 
         for (const conns of this.connections.values()) {
           for (const conn of conns) {
-            if (conn.direction === 'inbound') {
-              metric.inbound++
-            } else {
-              metric.outbound++
-            }
+            metric[conn.direction]++
           }
         }
 
@@ -356,9 +346,13 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
       }
     })
 
+    this.events.addEventListener('connection:open', this.onConnect)
+    this.events.addEventListener('connection:close', this.onDisconnect)
+
     await start(
       this.dialQueue,
-      this.reconnectQueue
+      this.reconnectQueue,
+      this.connectionPruner
     )
 
     this.started = true
@@ -369,9 +363,13 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
    * Stops the Connection Manager
    */
   async stop (): Promise<void> {
+    this.events.removeEventListener('connection:open', this.onConnect)
+    this.events.removeEventListener('connection:close', this.onDisconnect)
+
     await stop(
       this.reconnectQueue,
-      this.dialQueue
+      this.dialQueue,
+      this.connectionPruner
     )
 
     // Close all connections we're tracking
@@ -413,17 +411,19 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
       return
     }
 
-    const peerId = connection.remotePeer
-    const storedConns = this.connections.get(peerId)
-    let isNewPeer = false
-
-    if (storedConns != null) {
-      storedConns.push(connection)
-    } else {
-      isNewPeer = true
-      this.connections.set(peerId, [connection])
+    if (connection.status !== 'open') {
+      // this can happen when the remote closes the connection immediately after
+      // opening
+      return
     }
 
+    const peerId = connection.remotePeer
+    const isNewPeer = !this.connections.has(peerId)
+    const storedConns = this.connections.get(peerId) ?? []
+    storedConns.push(connection)
+
+    this.connections.set(peerId, storedConns)
+
     // only need to store RSA public keys, all other types are embedded in the peer id
     if (peerId.publicKey != null && peerId.type === 'RSA') {
       await this.peerStore.patch(peerId, {
@@ -441,20 +441,21 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
    */
   onDisconnect (evt: CustomEvent<Connection>): void {
     const { detail: connection } = evt
+    const peerId = connection.remotePeer
+    const peerConns = this.connections.get(peerId) ?? []
 
-    if (!this.started) {
-      // This can happen when we are in the process of shutting down the node
-      return
-    }
+    // remove closed connection
+    const filteredPeerConns = peerConns.filter(conn => conn.id !== connection.id)
 
-    const peerId = connection.remotePeer
-    let storedConn = this.connections.get(peerId)
+    // update peer connections
+    this.connections.set(peerId, filteredPeerConns)
 
-    if (storedConn != null && storedConn.length > 1) {
-      storedConn = storedConn.filter((conn) => conn.id !== connection.id)
-      this.connections.set(peerId, storedConn)
-    } else if (storedConn != null) {
+    if (filteredPeerConns.length === 0) {
+      // trigger disconnect event if no connections remain
+      this.log('onDisconnect remove all connections for peer %p', peerId)
       this.connections.delete(peerId)
+
+      // broadcast disconnect event
       this.events.safeDispatchEvent('peer:disconnect', { detail: connection.remotePeer })
     }
   }
@@ -478,7 +479,7 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
   }
 
   async openConnection (peerIdOrMultiaddr: PeerId | Multiaddr | Multiaddr[], options: OpenConnectionOptions = {}): Promise<Connection> {
-    if (!this.isStarted()) {
+    if (!this.started) {
       throw new NotStartedError('Not started')
     }
 
@@ -508,16 +509,15 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
       priority: options.priority ?? DEFAULT_DIAL_PRIORITY
     })
 
-    if (connection.remotePeer.equals(this.peerId)) {
-      const err = new InvalidPeerIdError('Can not dial self')
-      connection.abort(err)
-      throw err
+    if (connection.status !== 'open') {
+      throw new ConnectionClosedError('Remote closed connection during opening')
     }
 
     let peerConnections = this.connections.get(connection.remotePeer)
 
     if (peerConnections == null) {
       peerConnections = []
+      this.log('openConnection add connections for peer %p', peerId)
       this.connections.set(connection.remotePeer, peerConnections)
     }
 
@@ -544,6 +544,7 @@ export class DefaultConnectionManager implements ConnectionManager, Startable {
       peerConnections.push(connection)
     }
 
+    this.log('openConnection updated connections for peer %p %s', peerId, peerConnections.map(c => `${c.id}/${c.direction}/${c.status}`))
     return connection
   }
 
diff --git a/node_modules/libp2p/src/connection/index.ts b/node_modules/libp2p/src/connection/index.ts
index 735515b..bb0a064 100644
--- a/node_modules/libp2p/src/connection/index.ts
+++ b/node_modules/libp2p/src/connection/index.ts
@@ -161,13 +161,6 @@ export class ConnectionImpl implements Connection {
     }
 
     try {
-      this.log.trace('closing all streams')
-
-      // close all streams gracefully - this can throw if we're not multiplexed
-      await Promise.all(
-        this.streams.map(async s => s.close(options))
-      )
-
       this.log.trace('closing underlying transport')
 
       // close raw connection
@@ -184,18 +177,19 @@ export class ConnectionImpl implements Connection {
   }
 
   abort (err: Error): void {
+    if (this.status === 'closed') {
+      return
+    }
+
     this.log.error('aborting connection to %a due to error', this.remoteAddr, err)
 
     this.status = 'closing'
-    this.streams.forEach(s => { s.abort(err) })
-
-    this.log.error('all streams aborted', this.streams.length)
 
     // Abort raw connection
     this._abort(err)
 
-    this.timeline.close = Date.now()
     this.status = 'closed'
+    this.timeline.close = Date.now()
   }
 }
 
diff --git a/node_modules/libp2p/src/upgrader.ts b/node_modules/libp2p/src/upgrader.ts
index 349140b..753185f 100644
--- a/node_modules/libp2p/src/upgrader.ts
+++ b/node_modules/libp2p/src/upgrader.ts
@@ -1,4 +1,4 @@
-import { InvalidMultiaddrError, TooManyInboundProtocolStreamsError, TooManyOutboundProtocolStreamsError, LimitedConnectionError, setMaxListeners } from '@libp2p/interface'
+import { InvalidMultiaddrError, TooManyInboundProtocolStreamsError, TooManyOutboundProtocolStreamsError, LimitedConnectionError, setMaxListeners, InvalidPeerIdError } from '@libp2p/interface'
 import * as mss from '@libp2p/multistream-select'
 import { peerIdFromString } from '@libp2p/peer-id'
 import { anySignal } from 'any-signal'
@@ -304,6 +304,14 @@ export class DefaultUpgrader implements Upgrader {
         remotePeer = remotePeerId
       }
 
+      // this can happen if we dial a multiaddr without a peer id, we only find
+      // out the identity of the remote after the connection is encrypted
+      if (remotePeer.equals(this.components.peerId)) {
+        const err = new InvalidPeerIdError('Can not dial self')
+        maConn.abort(err)
+        throw err
+      }
+
       upgradedConn = encryptedConn
       if (opts?.muxerFactory != null) {
         muxerFactory = opts.muxerFactory
@@ -326,6 +334,8 @@ export class DefaultUpgrader implements Upgrader {
     } catch (err: any) {
       maConn.log.error('failed to upgrade inbound connection %s %a - %e', direction === 'inbound' ? 'from' : 'to', maConn.remoteAddr, err)
       throw err
+    } finally {
+      signal.clear()
     }
 
     await this.shouldBlockConnection(direction === 'inbound' ? 'denyInboundUpgradedConnection' : 'denyOutboundUpgradedConnection', remotePeer, maConn)
@@ -538,7 +548,7 @@ export class DefaultUpgrader implements Upgrader {
     const _timeline = maConn.timeline
     maConn.timeline = new Proxy(_timeline, {
       set: (...args) => {
-        if (connection != null && args[1] === 'close' && args[2] != null && _timeline.close == null) {
+        if (args[1] === 'close' && args[2] != null && _timeline.close == null) {
           // Wait for close to finish before notifying of the closure
           (async () => {
             try {
@@ -546,14 +556,14 @@ export class DefaultUpgrader implements Upgrader {
                 await connection.close()
               }
             } catch (err: any) {
-              connection.log.error('error closing connection after timeline close', err)
+              connection.log.error('error closing connection after timeline close %e', err)
             } finally {
               this.events.safeDispatchEvent('connection:close', {
                 detail: connection
               })
             }
           })().catch(err => {
-            connection.log.error('error thrown while dispatching connection:close event', err)
+            connection.log.error('error thrown while dispatching connection:close event %e', err)
           })
         }
 
@@ -578,25 +588,21 @@ export class DefaultUpgrader implements Upgrader {
       limits,
       logger: this.components.logger,
       newStream: newStream ?? errConnectionNotMultiplexed,
-      getStreams: () => { if (muxer != null) { return muxer.streams } else { return [] } },
+      getStreams: () => {
+        return muxer?.streams ?? []
+      },
       close: async (options?: AbortOptions) => {
-        // Ensure remaining streams are closed gracefully
-        if (muxer != null) {
-          connection.log.trace('close muxer')
-          await muxer.close(options)
-        }
+        // ensure remaining streams are closed gracefully
+        await muxer?.close(options)
 
-        connection.log.trace('close maconn')
         // close the underlying transport
         await maConn.close(options)
-        connection.log.trace('closed maconn')
       },
       abort: (err) => {
         maConn.abort(err)
-        // Ensure remaining streams are aborted
-        if (muxer != null) {
-          muxer.abort(err)
-        }
+
+        // ensure remaining streams are aborted
+        muxer?.abort(err)
       }
     })
 
@@ -604,6 +610,9 @@ export class DefaultUpgrader implements Upgrader {
       detail: connection
     })
 
+    // @ts-expect-error nah
+    connection.__maConnTimeline = _timeline
+
     return connection
   }
 
diff --git a/node_modules/libp2p/src/version.ts b/node_modules/libp2p/src/version.ts
index a93875e..36a3d88 100644
--- a/node_modules/libp2p/src/version.ts
+++ b/node_modules/libp2p/src/version.ts
@@ -1,2 +1,2 @@
-export const version = '2.1.3'
+export const version = '0.0.0'
 export const name = 'libp2p'
