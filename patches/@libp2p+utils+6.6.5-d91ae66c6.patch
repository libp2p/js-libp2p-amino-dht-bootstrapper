diff --git a/node_modules/@libp2p/utils/dist/src/adaptive-timeout.d.ts b/node_modules/@libp2p/utils/dist/src/adaptive-timeout.d.ts
index c0d1423..5fb1189 100644
--- a/node_modules/@libp2p/utils/dist/src/adaptive-timeout.d.ts
+++ b/node_modules/@libp2p/utils/dist/src/adaptive-timeout.d.ts
@@ -3,6 +3,7 @@ import type { ClearableSignal } from 'any-signal';
 export declare const DEFAULT_TIMEOUT_MULTIPLIER = 1.2;
 export declare const DEFAULT_FAILURE_MULTIPLIER = 2;
 export declare const DEFAULT_MIN_TIMEOUT = 5000;
+export declare const DEFAULT_MAX_TIMEOUT = 60000;
 export interface AdaptiveTimeoutSignal extends ClearableSignal {
     start: number;
     timeout: number;
@@ -14,6 +15,7 @@ export interface AdaptiveTimeoutInit {
     timeoutMultiplier?: number;
     failureMultiplier?: number;
     minTimeout?: number;
+    maxTimeout?: number;
 }
 export interface GetTimeoutSignalOptions {
     timeoutFactor?: number;
@@ -27,6 +29,7 @@ export declare class AdaptiveTimeout {
     private readonly timeoutMultiplier;
     private readonly failureMultiplier;
     private readonly minTimeout;
+    private readonly maxTimeout;
     constructor(init?: AdaptiveTimeoutInit);
     getTimeoutSignal(options?: GetTimeoutSignalOptions): AdaptiveTimeoutSignal;
     cleanUp(signal: AdaptiveTimeoutSignal): void;
diff --git a/node_modules/@libp2p/utils/dist/src/adaptive-timeout.d.ts.map b/node_modules/@libp2p/utils/dist/src/adaptive-timeout.d.ts.map
index 4a7b929..79aa4cb 100644
--- a/node_modules/@libp2p/utils/dist/src/adaptive-timeout.d.ts.map
+++ b/node_modules/@libp2p/utils/dist/src/adaptive-timeout.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"adaptive-timeout.d.ts","sourceRoot":"","sources":["../../src/adaptive-timeout.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAe,OAAO,EAAE,MAAM,mBAAmB,CAAA;AAC7D,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,YAAY,CAAA;AAEjD,eAAO,MAAM,0BAA0B,MAAM,CAAA;AAC7C,eAAO,MAAM,0BAA0B,IAAI,CAAA;AAC3C,eAAO,MAAM,mBAAmB,OAAO,CAAA;AAEvC,MAAM,WAAW,qBAAsB,SAAQ,eAAe;IAC5D,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,WAAW,mBAAmB;IAClC,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,OAAO,CAAC,EAAE,OAAO,CAAA;IACjB,QAAQ,CAAC,EAAE,MAAM,CAAA;IACjB,iBAAiB,CAAC,EAAE,MAAM,CAAA;IAC1B,iBAAiB,CAAC,EAAE,MAAM,CAAA;IAC1B,UAAU,CAAC,EAAE,MAAM,CAAA;CACpB;AAED,MAAM,WAAW,uBAAuB;IACtC,aAAa,CAAC,EAAE,MAAM,CAAA;IACtB,MAAM,CAAC,EAAE,WAAW,CAAA;CACrB;AAED,qBAAa,eAAe;IAC1B,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAe;IACvC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAe;IACvC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAe;IACpC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAa;IACrC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAQ;IAC1C,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAQ;IAC1C,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAQ;gBAEtB,IAAI,GAAE,mBAAwB;IAa3C,gBAAgB,CAAE,OAAO,GAAE,uBAA4B,GAAG,qBAAqB;IAiB/E,OAAO,CAAE,MAAM,EAAE,qBAAqB,GAAG,IAAI;CAyB9C"}
\ No newline at end of file
+{"version":3,"file":"adaptive-timeout.d.ts","sourceRoot":"","sources":["../../src/adaptive-timeout.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAe,OAAO,EAAE,MAAM,mBAAmB,CAAA;AAC7D,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,YAAY,CAAA;AAEjD,eAAO,MAAM,0BAA0B,MAAM,CAAA;AAC7C,eAAO,MAAM,0BAA0B,IAAI,CAAA;AAC3C,eAAO,MAAM,mBAAmB,OAAQ,CAAA;AACxC,eAAO,MAAM,mBAAmB,QAAS,CAAA;AAEzC,MAAM,WAAW,qBAAsB,SAAQ,eAAe;IAC5D,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,WAAW,mBAAmB;IAClC,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,OAAO,CAAC,EAAE,OAAO,CAAA;IACjB,QAAQ,CAAC,EAAE,MAAM,CAAA;IACjB,iBAAiB,CAAC,EAAE,MAAM,CAAA;IAC1B,iBAAiB,CAAC,EAAE,MAAM,CAAA;IAC1B,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,UAAU,CAAC,EAAE,MAAM,CAAA;CACpB;AAED,MAAM,WAAW,uBAAuB;IACtC,aAAa,CAAC,EAAE,MAAM,CAAA;IACtB,MAAM,CAAC,EAAE,WAAW,CAAA;CACrB;AAED,qBAAa,eAAe;IAC1B,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAe;IACvC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAe;IACvC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAe;IACpC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAa;IACrC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAQ;IAC1C,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAQ;IAC1C,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAQ;IACnC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAQ;gBAEtB,IAAI,GAAE,mBAAwB;IAc3C,gBAAgB,CAAE,OAAO,GAAE,uBAA4B,GAAG,qBAAqB;IAuB/E,OAAO,CAAE,MAAM,EAAE,qBAAqB,GAAG,IAAI;CAyB9C"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/src/adaptive-timeout.js b/node_modules/@libp2p/utils/dist/src/adaptive-timeout.js
index 75cd1e4..14efb27 100644
--- a/node_modules/@libp2p/utils/dist/src/adaptive-timeout.js
+++ b/node_modules/@libp2p/utils/dist/src/adaptive-timeout.js
@@ -3,7 +3,8 @@ import { anySignal } from 'any-signal';
 import { MovingAverage } from './moving-average.js';
 export const DEFAULT_TIMEOUT_MULTIPLIER = 1.2;
 export const DEFAULT_FAILURE_MULTIPLIER = 2;
-export const DEFAULT_MIN_TIMEOUT = 5000;
+export const DEFAULT_MIN_TIMEOUT = 5_000;
+export const DEFAULT_MAX_TIMEOUT = 60_000;
 export class AdaptiveTimeout {
     success;
     failure;
@@ -12,6 +13,7 @@ export class AdaptiveTimeout {
     timeoutMultiplier;
     failureMultiplier;
     minTimeout;
+    maxTimeout;
     constructor(init = {}) {
         this.success = new MovingAverage(init.interval ?? 5000);
         this.failure = new MovingAverage(init.interval ?? 5000);
@@ -19,6 +21,7 @@ export class AdaptiveTimeout {
         this.failureMultiplier = init.failureMultiplier ?? DEFAULT_FAILURE_MULTIPLIER;
         this.timeoutMultiplier = init.timeoutMultiplier ?? DEFAULT_TIMEOUT_MULTIPLIER;
         this.minTimeout = init.minTimeout ?? DEFAULT_MIN_TIMEOUT;
+        this.maxTimeout = init.maxTimeout ?? DEFAULT_MAX_TIMEOUT;
         if (init.metricName != null) {
             this.metric = init.metrics?.registerMetricGroup(init.metricName);
         }
@@ -26,7 +29,13 @@ export class AdaptiveTimeout {
     getTimeoutSignal(options = {}) {
         // calculate timeout for individual peers based on moving average of
         // previous successful requests
-        const timeout = Math.max(Math.round(this.next.movingAverage * (options.timeoutFactor ?? this.timeoutMultiplier)), this.minTimeout);
+        let timeout = Math.round(this.next.movingAverage * (options.timeoutFactor ?? this.timeoutMultiplier));
+        if (timeout < this.minTimeout) {
+            timeout = this.minTimeout;
+        }
+        if (timeout > this.maxTimeout) {
+            timeout = this.maxTimeout;
+        }
         const sendTimeout = AbortSignal.timeout(timeout);
         const timeoutSignal = anySignal([options.signal, sendTimeout]);
         setMaxListeners(Infinity, timeoutSignal, sendTimeout);
diff --git a/node_modules/@libp2p/utils/dist/src/adaptive-timeout.js.map b/node_modules/@libp2p/utils/dist/src/adaptive-timeout.js.map
index b2a4edd..3a51b9b 100644
--- a/node_modules/@libp2p/utils/dist/src/adaptive-timeout.js.map
+++ b/node_modules/@libp2p/utils/dist/src/adaptive-timeout.js.map
@@ -1 +1 @@
-{"version":3,"file":"adaptive-timeout.js","sourceRoot":"","sources":["../../src/adaptive-timeout.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"adaptive-timeout.js","sourceRoot":"","sources":["../../src/adaptive-timeout.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.d.ts b/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.d.ts
new file mode 100644
index 0000000..f2d5ba5
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=abstract-stream.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.d.ts.map
new file mode 100644
index 0000000..f27c3c7
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"abstract-stream.spec.d.ts","sourceRoot":"","sources":["../../test/abstract-stream.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.js b/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.js
new file mode 100644
index 0000000..cc5853c
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.js
@@ -0,0 +1,197 @@
+import { logger } from '@libp2p/logger';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import all from 'it-all';
+import drain from 'it-drain';
+import pDefer from 'p-defer';
+import Sinon from 'sinon';
+import { Uint8ArrayList } from 'uint8arraylist';
+import { AbstractStream } from '../src/abstract-stream.js';
+class TestStream extends AbstractStream {
+    async sendNewStream(options) {
+    }
+    async sendData(buf, options) {
+    }
+    async sendReset(options) {
+    }
+    async sendCloseWrite(options) {
+    }
+    async sendCloseRead(options) {
+    }
+}
+describe('abstract stream', () => {
+    let stream;
+    beforeEach(() => {
+        stream = new TestStream({
+            id: 'test',
+            direction: 'outbound',
+            log: logger('test'),
+            onEnd: () => { }
+        });
+    });
+    it('sends data', async () => {
+        const sendSpy = Sinon.spy(stream, 'sendData');
+        const data = [
+            Uint8Array.from([0, 1, 2, 3, 4])
+        ];
+        await stream.sink(data);
+        const call = sendSpy.getCall(0);
+        expect(call.args[0].subarray()).to.equalBytes(data[0]);
+    });
+    it('receives data', async () => {
+        const data = new Uint8ArrayList(Uint8Array.from([0, 1, 2, 3, 4]));
+        stream.sourcePush(data);
+        stream.remoteCloseWrite();
+        const output = await all(stream.source);
+        expect(output[0]?.subarray()).to.equalBytes(data.subarray());
+    });
+    it('closes', async () => {
+        const sendCloseReadSpy = Sinon.spy(stream, 'sendCloseRead');
+        const sendCloseWriteSpy = Sinon.spy(stream, 'sendCloseWrite');
+        const onEndSpy = Sinon.spy(stream, 'onEnd');
+        await stream.close();
+        expect(sendCloseReadSpy.calledOnce).to.be.true();
+        expect(sendCloseWriteSpy.calledOnce).to.be.true();
+        expect(onEndSpy.calledOnce).to.be.true();
+        expect(stream).to.have.property('status', 'closed');
+        expect(stream).to.have.property('writeStatus', 'closed');
+        expect(stream).to.have.property('readStatus', 'closed');
+        expect(stream).to.have.nested.property('timeline.close').that.is.a('number');
+        expect(stream).to.have.nested.property('timeline.closeRead').that.is.a('number');
+        expect(stream).to.have.nested.property('timeline.closeWrite').that.is.a('number');
+        expect(stream).to.not.have.nested.property('timeline.reset');
+        expect(stream).to.not.have.nested.property('timeline.abort');
+    });
+    it('closes for reading', async () => {
+        const sendCloseReadSpy = Sinon.spy(stream, 'sendCloseRead');
+        const sendCloseWriteSpy = Sinon.spy(stream, 'sendCloseWrite');
+        await stream.closeRead();
+        expect(sendCloseReadSpy.calledOnce).to.be.true();
+        expect(sendCloseWriteSpy.called).to.be.false();
+        expect(stream).to.have.property('status', 'open');
+        expect(stream).to.have.property('writeStatus', 'ready');
+        expect(stream).to.have.property('readStatus', 'closed');
+        expect(stream).to.not.have.nested.property('timeline.close');
+        expect(stream).to.have.nested.property('timeline.closeRead').that.is.a('number');
+        expect(stream).to.not.have.nested.property('timeline.closeWrite');
+        expect(stream).to.not.have.nested.property('timeline.reset');
+        expect(stream).to.not.have.nested.property('timeline.abort');
+    });
+    it('closes for writing', async () => {
+        const sendCloseReadSpy = Sinon.spy(stream, 'sendCloseRead');
+        const sendCloseWriteSpy = Sinon.spy(stream, 'sendCloseWrite');
+        await stream.closeWrite();
+        expect(sendCloseReadSpy.called).to.be.false();
+        expect(sendCloseWriteSpy.calledOnce).to.be.true();
+        expect(stream).to.have.property('status', 'open');
+        expect(stream).to.have.property('writeStatus', 'closed');
+        expect(stream).to.have.property('readStatus', 'ready');
+        expect(stream).to.not.have.nested.property('timeline.close');
+        expect(stream).to.not.have.nested.property('timeline.closeRead');
+        expect(stream).to.have.nested.property('timeline.closeWrite').that.is.a('number');
+        expect(stream).to.not.have.nested.property('timeline.reset');
+        expect(stream).to.not.have.nested.property('timeline.abort');
+    });
+    it('aborts', async () => {
+        const sendResetSpy = Sinon.spy(stream, 'sendReset');
+        stream.abort(new Error('Urk!'));
+        expect(sendResetSpy.calledOnce).to.be.true();
+        expect(stream).to.have.property('status', 'aborted');
+        expect(stream).to.have.property('writeStatus', 'closed');
+        expect(stream).to.have.property('readStatus', 'closed');
+        expect(stream).to.have.nested.property('timeline.close').that.is.a('number');
+        expect(stream).to.have.nested.property('timeline.closeRead').that.is.a('number');
+        expect(stream).to.have.nested.property('timeline.closeWrite').that.is.a('number');
+        expect(stream).to.not.have.nested.property('timeline.reset');
+        expect(stream).to.have.nested.property('timeline.abort').that.is.a('number');
+        await expect(stream.sink([])).to.eventually.be.rejected
+            .with.property('name', 'StreamStateError');
+        await expect(drain(stream.source)).to.eventually.be.rejected
+            .with('Urk!');
+    });
+    it('gets reset remotely', async () => {
+        stream.reset();
+        expect(stream).to.have.property('status', 'reset');
+        expect(stream).to.have.property('writeStatus', 'closed');
+        expect(stream).to.have.property('readStatus', 'closed');
+        expect(stream).to.have.nested.property('timeline.close').that.is.a('number');
+        expect(stream).to.have.nested.property('timeline.closeRead').that.is.a('number');
+        expect(stream).to.have.nested.property('timeline.closeWrite').that.is.a('number');
+        expect(stream).to.have.nested.property('timeline.reset').that.is.a('number');
+        expect(stream).to.not.have.nested.property('timeline.abort');
+        await expect(stream.sink([])).to.eventually.be.rejected
+            .with.property('name', 'StreamStateError');
+        await expect(drain(stream.source)).to.eventually.be.rejected
+            .with.property('name', 'StreamResetError');
+    });
+    it('does not send close read when remote closes write', async () => {
+        const sendCloseReadSpy = Sinon.spy(stream, 'sendCloseRead');
+        stream.remoteCloseWrite();
+        await delay(100);
+        expect(sendCloseReadSpy.called).to.be.false();
+    });
+    it('does not send close write when remote closes read', async () => {
+        const sendCloseWriteSpy = Sinon.spy(stream, 'sendCloseWrite');
+        stream.remoteCloseRead();
+        await delay(100);
+        expect(sendCloseWriteSpy.called).to.be.false();
+    });
+    it('does not send close read or write when remote resets', async () => {
+        const sendCloseReadSpy = Sinon.spy(stream, 'sendCloseRead');
+        const sendCloseWriteSpy = Sinon.spy(stream, 'sendCloseWrite');
+        stream.reset();
+        await delay(100);
+        expect(sendCloseReadSpy.called).to.be.false();
+        expect(sendCloseWriteSpy.called).to.be.false();
+    });
+    it('should wait for sending data to finish when closing gracefully', async () => {
+        const sendStarted = pDefer();
+        let timeFinished = 0;
+        const wasAbortedBeforeSendingFinished = pDefer();
+        const wasAbortedAfterSendingFinished = pDefer();
+        // stub send method to simulate slow sending
+        stream.sendData = async (data, options) => {
+            sendStarted.resolve();
+            await delay(1000);
+            timeFinished = Date.now();
+            // slow send has finished, make sure we weren't aborted before we were
+            // done sending data
+            wasAbortedBeforeSendingFinished.resolve(options?.signal?.aborted);
+            // save a reference to the signal, should be aborted after
+            // `stream.close()` returns
+            wasAbortedAfterSendingFinished.resolve(options?.signal);
+        };
+        const data = [
+            Uint8Array.from([0, 1, 2, 3, 4])
+        ];
+        void stream.sink(data);
+        // wait for send to start
+        await sendStarted.promise;
+        // close stream
+        await stream.close();
+        // should have waited for send to complete
+        expect(Date.now()).to.be.greaterThanOrEqual(timeFinished);
+        await expect(wasAbortedBeforeSendingFinished.promise).to.eventually.be.false();
+        await expect(wasAbortedAfterSendingFinished.promise).to.eventually.have.property('aborted', true);
+    });
+    it('should abort close due to timeout with slow sender', async () => {
+        const sendStarted = pDefer();
+        // stub send method to simulate slow sending
+        stream.sendData = async () => {
+            sendStarted.resolve();
+            await delay(1000);
+        };
+        const data = [
+            Uint8Array.from([0, 1, 2, 3, 4])
+        ];
+        void stream.sink(data);
+        // wait for send to start
+        await sendStarted.promise;
+        // close stream, should be aborted
+        await expect(stream.close({
+            signal: AbortSignal.timeout(1)
+        })).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+    });
+});
+//# sourceMappingURL=abstract-stream.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.js.map b/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.js.map
new file mode 100644
index 0000000..ebf476f
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/abstract-stream.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"abstract-stream.spec.js","sourceRoot":"","sources":["../../test/abstract-stream.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.d.ts b/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.d.ts
new file mode 100644
index 0000000..430a2d9
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=adaptive-timeout.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.d.ts.map
new file mode 100644
index 0000000..8ef7459
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"adaptive-timeout.spec.d.ts","sourceRoot":"","sources":["../../test/adaptive-timeout.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.js b/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.js
new file mode 100644
index 0000000..37233b2
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.js
@@ -0,0 +1,80 @@
+import { expect } from 'aegir/chai';
+import Sinon from 'sinon';
+import { AdaptiveTimeout, DEFAULT_MIN_TIMEOUT, DEFAULT_TIMEOUT_MULTIPLIER } from '../src/adaptive-timeout.js';
+describe('adaptive-timeout', () => {
+    let clock;
+    beforeEach(() => {
+        clock = Sinon.useFakeTimers();
+    });
+    afterEach(() => {
+        clock.restore();
+    });
+    it('should return an initial signal with a default timeout', () => {
+        const adaptiveTimeout = new AdaptiveTimeout();
+        const signal = adaptiveTimeout.getTimeoutSignal();
+        expect(signal).to.have.property('timeout', DEFAULT_MIN_TIMEOUT);
+        adaptiveTimeout.cleanUp(signal);
+    });
+    it('should adapt the timeout to previous values', () => {
+        const adaptiveTimeout = new AdaptiveTimeout();
+        const signal1 = adaptiveTimeout.getTimeoutSignal();
+        clock.tick(5000);
+        adaptiveTimeout.cleanUp(signal1);
+        const signal2 = adaptiveTimeout.getTimeoutSignal();
+        expect(signal2).to.have.property('timeout', 5000 * DEFAULT_TIMEOUT_MULTIPLIER);
+    });
+    it('should allow overriding the adapted timeout', () => {
+        const adaptiveTimeout = new AdaptiveTimeout();
+        const signal1 = adaptiveTimeout.getTimeoutSignal();
+        clock.tick(5000);
+        adaptiveTimeout.cleanUp(signal1);
+        const signal2 = adaptiveTimeout.getTimeoutSignal({
+            timeoutFactor: 1
+        });
+        expect(signal2).to.have.property('timeout', 5000);
+    });
+    it('should reduce the timeout', () => {
+        const adaptiveTimeout = new AdaptiveTimeout();
+        const signal1 = adaptiveTimeout.getTimeoutSignal();
+        clock.tick(8000);
+        adaptiveTimeout.cleanUp(signal1);
+        const signal2 = adaptiveTimeout.getTimeoutSignal({
+            timeoutFactor: 1
+        });
+        expect(signal2).to.have.property('timeout', 8000);
+        clock.tick(6000);
+        adaptiveTimeout.cleanUp(signal2);
+        const signal3 = adaptiveTimeout.getTimeoutSignal({
+            timeoutFactor: 1
+        });
+        expect(signal3).to.have.property('timeout', 6602);
+    });
+    it('should increase the timeout', () => {
+        const adaptiveTimeout = new AdaptiveTimeout();
+        const signal1 = adaptiveTimeout.getTimeoutSignal();
+        clock.tick(8000);
+        adaptiveTimeout.cleanUp(signal1);
+        const signal2 = adaptiveTimeout.getTimeoutSignal({
+            timeoutFactor: 1
+        });
+        expect(signal2).to.have.property('timeout', 8000);
+        clock.tick(9000);
+        adaptiveTimeout.cleanUp(signal2);
+        const signal3 = adaptiveTimeout.getTimeoutSignal({
+            timeoutFactor: 1
+        });
+        expect(signal3).to.have.property('timeout', 8835);
+    });
+    it('should wrap an existing signal', () => {
+        const controller = new AbortController();
+        const adaptiveTimeout = new AdaptiveTimeout();
+        const signal = adaptiveTimeout.getTimeoutSignal({
+            signal: controller.signal
+        });
+        expect(signal).to.have.property('aborted', false);
+        controller.abort();
+        expect(signal).to.have.property('aborted', true);
+        adaptiveTimeout.cleanUp(signal);
+    });
+});
+//# sourceMappingURL=adaptive-timeout.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.js.map b/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.js.map
new file mode 100644
index 0000000..9510b34
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/adaptive-timeout.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"adaptive-timeout.spec.js","sourceRoot":"","sources":["../../test/adaptive-timeout.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/array-equals.spec.d.ts b/node_modules/@libp2p/utils/dist/test/array-equals.spec.d.ts
new file mode 100644
index 0000000..f0d8e89
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/array-equals.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=array-equals.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/array-equals.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/array-equals.spec.d.ts.map
new file mode 100644
index 0000000..fe9e9f2
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/array-equals.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"array-equals.spec.d.ts","sourceRoot":"","sources":["../../test/array-equals.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/array-equals.spec.js b/node_modules/@libp2p/utils/dist/test/array-equals.spec.js
new file mode 100644
index 0000000..d504b66
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/array-equals.spec.js
@@ -0,0 +1,58 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { arrayEquals } from '../src/array-equals.js';
+describe('non primitive array equals', () => {
+    it('returns true if two arrays of multiaddrs are equal', () => {
+        const a = [
+            multiaddr('/ip4/127.0.0.1/tcp/8000'),
+            multiaddr('/ip4/127.0.0.1/tcp/3000/ws'),
+            multiaddr('/dns4/test.libp2p.io')
+        ];
+        const b = [
+            multiaddr('/ip4/127.0.0.1/tcp/8000'),
+            multiaddr('/ip4/127.0.0.1/tcp/3000/ws'),
+            multiaddr('/dns4/test.libp2p.io')
+        ];
+        expect(arrayEquals(a, b)).to.eql(true);
+    });
+    it('returns true if two arrays of multiaddrs have the same content but different orders', () => {
+        const a = [
+            multiaddr('/ip4/127.0.0.1/tcp/8000'),
+            multiaddr('/ip4/127.0.0.1/tcp/3000/ws'),
+            multiaddr('/dns4/test.libp2p.io')
+        ];
+        const b = [
+            multiaddr('/ip4/127.0.0.1/tcp/3000/ws'),
+            multiaddr('/ip4/127.0.0.1/tcp/8000'),
+            multiaddr('/dns4/test.libp2p.io')
+        ];
+        expect(arrayEquals(a, b)).to.eql(true);
+    });
+    it('returns false if two arrays of multiaddrs are different', () => {
+        const a = [
+            multiaddr('/ip4/127.0.0.1/tcp/8000'),
+            multiaddr('/ip4/127.0.0.1/tcp/3000/ws'),
+            multiaddr('/dns4/test.libp2p.io')
+        ];
+        const b = [
+            multiaddr('/ip4/127.0.0.1/tcp/8001'),
+            multiaddr('/ip4/127.0.0.1/tcp/3000/ws'),
+            multiaddr('/dns4/test.libp2p.io')
+        ];
+        expect(arrayEquals(a, b)).to.eql(false);
+    });
+    it('returns false if two arrays of multiaddrs are partially equal, but different lengths', () => {
+        const a = [
+            multiaddr('/ip4/127.0.0.1/tcp/8000'),
+            multiaddr('/ip4/127.0.0.1/tcp/3000/ws'),
+            multiaddr('/dns4/test.libp2p.io')
+        ];
+        const b = [
+            multiaddr('/ip4/127.0.0.1/tcp/8000'),
+            multiaddr('/dns4/test.libp2p.io')
+        ];
+        expect(arrayEquals(a, b)).to.eql(false);
+    });
+});
+//# sourceMappingURL=array-equals.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/array-equals.spec.js.map b/node_modules/@libp2p/utils/dist/test/array-equals.spec.js.map
new file mode 100644
index 0000000..d0ca9ab
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/array-equals.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"array-equals.spec.js","sourceRoot":"","sources":["../../test/array-equals.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAA;AAEpD,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;QAC5D,MAAM,CAAC,GAAG;YACR,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,sBAAsB,CAAC;SAClC,CAAA;QAED,MAAM,CAAC,GAAG;YACR,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,sBAAsB,CAAC;SAClC,CAAA;QAED,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IACxC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qFAAqF,EAAE,GAAG,EAAE;QAC7F,MAAM,CAAC,GAAG;YACR,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,sBAAsB,CAAC;SAClC,CAAA;QAED,MAAM,CAAC,GAAG;YACR,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,sBAAsB,CAAC;SAClC,CAAA;QAED,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IACxC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACjE,MAAM,CAAC,GAAG;YACR,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,sBAAsB,CAAC;SAClC,CAAA;QAED,MAAM,CAAC,GAAG;YACR,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,sBAAsB,CAAC;SAClC,CAAA;QAED,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IACzC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sFAAsF,EAAE,GAAG,EAAE;QAC9F,MAAM,CAAC,GAAG;YACR,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,sBAAsB,CAAC;SAClC,CAAA;QAED,MAAM,CAAC,GAAG;YACR,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,sBAAsB,CAAC;SAClC,CAAA;QAED,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IACzC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/close-source.spec.d.ts b/node_modules/@libp2p/utils/dist/test/close-source.spec.d.ts
new file mode 100644
index 0000000..8bfd23a
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/close-source.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=close-source.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/close-source.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/close-source.spec.d.ts.map
new file mode 100644
index 0000000..88c55b7
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/close-source.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"close-source.spec.d.ts","sourceRoot":"","sources":["../../test/close-source.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/close-source.spec.js b/node_modules/@libp2p/utils/dist/test/close-source.spec.js
new file mode 100644
index 0000000..592583a
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/close-source.spec.js
@@ -0,0 +1,22 @@
+import { expect } from 'aegir/chai';
+import { stubInterface } from 'sinon-ts';
+import { closeSource } from '../src/close-source.js';
+describe('close source', () => {
+    it('should close an async iterable', async () => {
+        let count = 0;
+        const iterable = (async function* () {
+            while (true) {
+                yield count++;
+            }
+        })();
+        const val = await iterable.next();
+        expect(val).to.have.property('done', false);
+        expect(val).to.have.property('value', 0);
+        closeSource(iterable, stubInterface());
+        const last = await iterable.next();
+        expect(last).to.have.property('done', true);
+        expect(last).to.have.property('value', undefined);
+        expect(count).to.equal(1);
+    });
+});
+//# sourceMappingURL=close-source.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/close-source.spec.js.map b/node_modules/@libp2p/utils/dist/test/close-source.spec.js.map
new file mode 100644
index 0000000..b59587c
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/close-source.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"close-source.spec.js","sourceRoot":"","sources":["../../test/close-source.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AACxC,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAA;AAGpD,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,MAAM,QAAQ,GAAG,CAAC,KAAK,SAAU,CAAC;YAChC,OAAO,IAAI,EAAE,CAAC;gBACZ,MAAM,KAAK,EAAE,CAAA;YACf,CAAC;QACH,CAAC,CAAC,EAAE,CAAA;QAEJ,MAAM,GAAG,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;QACjC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QAC3C,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;QAExC,WAAW,CAAC,QAAQ,EAAE,aAAa,EAAU,CAAC,CAAA;QAE9C,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;QAClC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;QAC3C,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;QACjD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAC3B,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/close.spec.d.ts b/node_modules/@libp2p/utils/dist/test/close.spec.d.ts
new file mode 100644
index 0000000..c3c810b
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/close.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=close.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/close.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/close.spec.d.ts.map
new file mode 100644
index 0000000..2744a26
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/close.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"close.spec.d.ts","sourceRoot":"","sources":["../../test/close.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/close.spec.js b/node_modules/@libp2p/utils/dist/test/close.spec.js
new file mode 100644
index 0000000..c8e8d85
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/close.spec.js
@@ -0,0 +1,127 @@
+import { expect } from 'aegir/chai';
+import { stubInterface } from 'sinon-ts';
+import { safelyCloseConnectionIfUnused, safelyCloseStream } from '../src/close.js';
+describe('closing', () => {
+    describe('streams', () => {
+        it('should close a stream', async () => {
+            const stream = stubInterface();
+            await safelyCloseStream(stream);
+            expect(stream.close.called).to.be.true();
+        });
+        it('should pass options to a stream when closing', async () => {
+            const options = {};
+            const stream = stubInterface();
+            await safelyCloseStream(stream, options);
+            expect(stream.close.calledWith(options)).to.be.true();
+        });
+        it('should abort a stream when closing fails', async () => {
+            const err = new Error('Urk!');
+            const stream = stubInterface({
+                close: () => {
+                    throw err;
+                }
+            });
+            await safelyCloseStream(stream);
+            expect(stream.abort.calledWith(err)).to.be.true();
+        });
+        it('should not error when no stream is passed', async () => {
+            await safelyCloseStream();
+        });
+    });
+    describe('connections', () => {
+        it('should close a connection', async () => {
+            const connection = stubInterface({
+                streams: []
+            });
+            await safelyCloseConnectionIfUnused(connection);
+            expect(connection.close.called).to.be.true();
+        });
+        it('should pass options to a connection when closing', async () => {
+            const options = {};
+            const connection = stubInterface({
+                streams: []
+            });
+            await safelyCloseConnectionIfUnused(connection, options);
+            expect(connection.close.calledWith(options)).to.be.true();
+        });
+        it('should abort a connection when closing fails', async () => {
+            const err = new Error('Urk!');
+            const connection = stubInterface({
+                streams: [],
+                close: () => {
+                    throw err;
+                }
+            });
+            await safelyCloseConnectionIfUnused(connection);
+            expect(connection.abort.calledWith(err)).to.be.true();
+        });
+        it('should close a connection with an un-negotiated stream', async () => {
+            const connection = stubInterface({
+                streams: [
+                    stubInterface({
+                        protocol: undefined
+                    })
+                ]
+            });
+            await safelyCloseConnectionIfUnused(connection);
+            expect(connection.close.called).to.be.true();
+        });
+        it('should close a connection with a closable stream', async () => {
+            const connection = stubInterface({
+                streams: [
+                    stubInterface({
+                        protocol: '/ipfs/id/1.0.0'
+                    })
+                ]
+            });
+            await safelyCloseConnectionIfUnused(connection);
+            expect(connection.close.called).to.be.true();
+        });
+        it('should close a connection with a closable stream', async () => {
+            const protocol = '/my/closable/protocol';
+            const connection = stubInterface({
+                streams: [
+                    stubInterface({
+                        protocol
+                    })
+                ]
+            });
+            await safelyCloseConnectionIfUnused(connection, {
+                closableProtocols: [
+                    protocol
+                ]
+            });
+            expect(connection.close.called).to.be.true();
+        });
+        it('should not close a connection with a non-closable stream', async () => {
+            const protocol = '/my/non-closable/protocol';
+            const connection = stubInterface({
+                streams: [
+                    stubInterface({
+                        protocol
+                    })
+                ]
+            });
+            await safelyCloseConnectionIfUnused(connection);
+            expect(connection.close.called).to.be.false();
+            expect(connection.abort.called).to.be.false();
+        });
+        it('should not close a connection with a mixture of closable and non-closable streams', async () => {
+            const protocol = '/my/non-closable/protocol';
+            const connection = stubInterface({
+                streams: [
+                    stubInterface({
+                        protocol: '/ipfs/id/1.0.0'
+                    }),
+                    stubInterface({
+                        protocol
+                    })
+                ]
+            });
+            await safelyCloseConnectionIfUnused(connection);
+            expect(connection.close.called).to.be.false();
+            expect(connection.abort.called).to.be.false();
+        });
+    });
+});
+//# sourceMappingURL=close.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/close.spec.js.map b/node_modules/@libp2p/utils/dist/test/close.spec.js.map
new file mode 100644
index 0000000..61bcc52
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/close.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"close.spec.js","sourceRoot":"","sources":["../../test/close.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/debounce.spec.d.ts b/node_modules/@libp2p/utils/dist/test/debounce.spec.d.ts
new file mode 100644
index 0000000..aa248da
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/debounce.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=debounce.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/debounce.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/debounce.spec.d.ts.map
new file mode 100644
index 0000000..edfa045
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/debounce.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"debounce.spec.d.ts","sourceRoot":"","sources":["../../test/debounce.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/debounce.spec.js b/node_modules/@libp2p/utils/dist/test/debounce.spec.js
new file mode 100644
index 0000000..fa7a703
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/debounce.spec.js
@@ -0,0 +1,36 @@
+import { stop } from '@libp2p/interface';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import { debounce } from '../src/debounce.js';
+describe('debounce', () => {
+    it('should debounce function', async () => {
+        let invocations = 0;
+        const fn = () => {
+            invocations++;
+        };
+        const debounced = debounce(fn, 10);
+        debounced();
+        debounced();
+        debounced();
+        debounced();
+        debounced();
+        await delay(500);
+        expect(invocations).to.equal(1);
+    });
+    it('should cancel debounced function', async () => {
+        let invocations = 0;
+        const fn = () => {
+            invocations++;
+        };
+        const debounced = debounce(fn, 10000);
+        debounced();
+        debounced();
+        debounced();
+        debounced();
+        debounced();
+        await stop(debounced);
+        await delay(500);
+        expect(invocations).to.equal(0);
+    });
+});
+//# sourceMappingURL=debounce.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/debounce.spec.js.map b/node_modules/@libp2p/utils/dist/test/debounce.spec.js.map
new file mode 100644
index 0000000..1ce6b86
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/debounce.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"debounce.spec.js","sourceRoot":"","sources":["../../test/debounce.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AACxC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAA;AAE7C,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACxC,IAAI,WAAW,GAAG,CAAC,CAAA;QACnB,MAAM,EAAE,GAAG,GAAS,EAAE;YACpB,WAAW,EAAE,CAAA;QACf,CAAC,CAAA;QAED,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;QAElC,SAAS,EAAE,CAAA;QACX,SAAS,EAAE,CAAA;QACX,SAAS,EAAE,CAAA;QACX,SAAS,EAAE,CAAA;QACX,SAAS,EAAE,CAAA;QAEX,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA;QAEhB,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IACjC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,IAAI,WAAW,GAAG,CAAC,CAAA;QACnB,MAAM,EAAE,GAAG,GAAS,EAAE;YACpB,WAAW,EAAE,CAAA;QACf,CAAC,CAAA;QAED,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;QAErC,SAAS,EAAE,CAAA;QACX,SAAS,EAAE,CAAA;QACX,SAAS,EAAE,CAAA;QACX,SAAS,EAAE,CAAA;QACX,SAAS,EAAE,CAAA;QAEX,MAAM,IAAI,CAAC,SAAS,CAAC,CAAA;QAErB,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA;QAEhB,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IACjC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.d.ts b/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.d.ts
new file mode 100644
index 0000000..acd8e09
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=bloom-filter.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.d.ts.map
new file mode 100644
index 0000000..6174f03
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"bloom-filter.spec.d.ts","sourceRoot":"","sources":["../../../test/filter/bloom-filter.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.js b/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.js
new file mode 100644
index 0000000..7ef8992
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.js
@@ -0,0 +1,164 @@
+// ported from xxbloom - https://github.com/ceejbot/xxbloom/blob/master/LICENSE
+import { expect } from 'aegir/chai';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { BloomFilter, createBloomFilter } from '../../src/filters/bloom-filter.js';
+function hasBitsSet(buffer) {
+    let isset = 0;
+    for (let i = 0; i < buffer.length; i++) {
+        isset |= (buffer[i] !== 0 ? 1 : 0);
+    }
+    return isset;
+}
+describe('bloom-filter', () => {
+    it('constructs a filter of the requested size', () => {
+        const filter = new BloomFilter({ hashes: 4, bits: 32 });
+        expect(filter.seeds).to.have.lengthOf(4);
+        expect(filter.bits).to.equal(32);
+        expect(filter.buffer).to.be.an.instanceOf(Uint8Array);
+    });
+    it('zeroes out its storage buffer', () => {
+        const filter = new BloomFilter({ hashes: 3, bits: 64 });
+        for (let i = 0; i < filter.buffer.length; i++) {
+            expect(filter.buffer[i]).to.equal(0);
+        }
+    });
+    it('uses passed-in seeds if provided', () => {
+        const filter = new BloomFilter({ bits: 256, seeds: [1, 2, 3, 4, 5] });
+        expect(filter.seeds.length).to.equal(5);
+        expect(filter.seeds[0]).to.equal(1);
+        expect(filter.seeds[4]).to.equal(5);
+    });
+    describe('createBloomFilter()', () => {
+        it('creates a filter with good defaults', () => {
+            let filter = createBloomFilter(95);
+            expect(filter).to.have.property('bits', 1048);
+            expect(filter).to.have.property('seeds').with.lengthOf(8);
+            filter = createBloomFilter(148);
+            expect(filter).to.have.property('bits', 1632);
+            expect(filter).to.have.property('seeds').with.lengthOf(8);
+            filter = createBloomFilter(10);
+            expect(filter).to.have.property('bits', 110);
+            expect(filter).to.have.property('seeds').with.lengthOf(8);
+        });
+        it('createBloomFilter() lets you specify an error rate', () => {
+            let filter = createBloomFilter(20000);
+            expect(filter).to.have.property('bits', 220555);
+            // @ts-expect-error private field
+            const previous = filter.bits;
+            filter = createBloomFilter(20000, 0.2);
+            // @ts-expect-error private field
+            expect(filter.bits).to.be.below(previous);
+        });
+    });
+    describe('setting and getting bits', () => {
+        it('sets the specified bit', () => {
+            const filter = new BloomFilter({ hashes: 3, bits: 16 });
+            filter.setbit(0);
+            let val = filter.getbit(0);
+            expect(val).to.equal(true);
+            filter.setbit(1);
+            val = filter.getbit(1);
+            expect(val).to.equal(true);
+            val = filter.getbit(2);
+            expect(val).to.equal(false);
+            filter.setbit(10);
+            val = filter.getbit(10);
+            expect(val).to.equal(true);
+        });
+        it('can set all bits', () => {
+            let i;
+            let value;
+            const filter = new BloomFilter({ hashes: 3, bits: 16 });
+            expect(filter.buffer.length).to.equal(2);
+            for (i = 0; i < 16; i++) {
+                filter.setbit(i);
+            }
+            for (i = 0; i < 2; i++) {
+                value = filter.buffer[i];
+                expect(value).to.equal(255);
+            }
+        });
+        it('slides over into the next buffer slice when setting bits', () => {
+            let val;
+            const filter = new BloomFilter({ hashes: 3, bits: 64 });
+            filter.setbit(8);
+            val = filter.buffer[1];
+            expect(val).to.equal(1);
+            filter.setbit(17);
+            val = filter.buffer[2];
+            expect(val).to.equal(2);
+            filter.setbit(34);
+            val = filter.buffer[4];
+            expect(val).to.equal(4);
+        });
+    });
+    describe('add()', () => {
+        it('can store buffers', () => {
+            const filter = new BloomFilter({ hashes: 4, bits: 128 });
+            expect(hasBitsSet(filter.buffer)).to.equal(0);
+            filter.add(uint8ArrayFromString('cat'));
+            expect(hasBitsSet(filter.buffer)).to.equal(1);
+        });
+        it('can store strings', () => {
+            const filter = new BloomFilter({ hashes: 4, bits: 128 });
+            filter.add('cat');
+            expect(hasBitsSet(filter.buffer)).to.equal(1);
+        });
+        it('can add a hundred random items', () => {
+            const alpha = '0123456789abcdefghijklmnopqrstuvwxyz';
+            function randomWord(length) {
+                length = length ?? Math.ceil(Math.random() * 20);
+                let result = '';
+                for (let i = 0; i < length; i++) {
+                    result += alpha[Math.floor(Math.random() * alpha.length)];
+                }
+                return result;
+            }
+            const filter = createBloomFilter(100);
+            const words = [];
+            for (let i = 0; i < 100; i++) {
+                const w = randomWord();
+                words.push(w);
+                filter.add(w);
+            }
+            for (let i = 0; i < words.length; i++) {
+                expect(filter.has(words[i])).to.equal(true);
+            }
+        });
+    });
+    describe('has()', () => {
+        it('returns true when called on a stored item', () => {
+            const filter = new BloomFilter({ hashes: 3, bits: 16 });
+            filter.add('cat');
+            expect(hasBitsSet(filter.buffer)).to.equal(1);
+            expect(filter.has('cat')).to.be.true();
+        });
+        it('returns false for items not in the set (mostly)', () => {
+            const filter = new BloomFilter({ hashes: 4, bits: 50 });
+            filter.add('cat');
+            expect(filter.has('dog')).to.be.false();
+        });
+        it('responds appropriately for arrays of added items', () => {
+            const filter = new BloomFilter({ hashes: 3, bits: 128 });
+            filter.add('cat');
+            filter.add('dog');
+            filter.add('wallaby');
+            expect(filter.has('cat')).to.equal(true);
+            expect(filter.has('dog')).to.equal(true);
+            expect(filter.has('wallaby')).to.equal(true);
+            expect(filter.has('orange')).to.equal(false);
+        });
+    });
+    describe('clear()', () => {
+        it('clears the filter', () => {
+            const filter = new BloomFilter({ hashes: 3, bits: 128 });
+            filter.add('cat');
+            filter.add('dog');
+            filter.add('wallaby');
+            expect(hasBitsSet(filter.buffer)).to.equal(1);
+            filter.clear();
+            expect(hasBitsSet(filter.buffer)).to.equal(0);
+        });
+    });
+});
+//# sourceMappingURL=bloom-filter.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.js.map b/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.js.map
new file mode 100644
index 0000000..b017c11
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/bloom-filter.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"bloom-filter.spec.js","sourceRoot":"","sources":["../../../test/filter/bloom-filter.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.d.ts b/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.d.ts
new file mode 100644
index 0000000..26e1ea4
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=cuckoo-filter.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.d.ts.map
new file mode 100644
index 0000000..830fda8
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"cuckoo-filter.spec.d.ts","sourceRoot":"","sources":["../../../test/filter/cuckoo-filter.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.js b/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.js
new file mode 100644
index 0000000..0e0658e
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.js
@@ -0,0 +1,44 @@
+import { randomBytes } from '@libp2p/crypto';
+import { expect } from 'aegir/chai';
+import { CuckooFilter } from '../../src/filters/cuckoo-filter.js';
+describe('cuckoo-filter', () => {
+    let keys;
+    let cuckoo;
+    beforeEach(() => {
+        keys = [];
+        cuckoo = new CuckooFilter({
+            filterSize: 1500,
+            bucketSize: 6,
+            fingerprintSize: 4
+        });
+    });
+    it('add 1500 keys', () => {
+        for (let i = 0; i < 1500; i++) {
+            const rand = randomBytes(36);
+            keys.push(rand);
+            expect(cuckoo.add(rand)).to.be.true();
+        }
+        expect(cuckoo.count).to.equal(1500);
+    });
+    it('check keys are in filter', () => {
+        for (const key of keys) {
+            expect(cuckoo.has(key)).to.be.true();
+        }
+    });
+    it('removes keys', () => {
+        for (const key of keys) {
+            expect(cuckoo.remove(key)).to.be.true();
+            expect(cuckoo.has(key)).to.be.false();
+        }
+        expect(cuckoo.count).to.equal(0);
+    });
+    it('becomes unreliable', () => {
+        while (true) {
+            cuckoo.add(randomBytes(36));
+            if (!cuckoo.reliable) {
+                break;
+            }
+        }
+    });
+});
+//# sourceMappingURL=cuckoo-filter.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.js.map b/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.js.map
new file mode 100644
index 0000000..2ab1c12
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/cuckoo-filter.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"cuckoo-filter.spec.js","sourceRoot":"","sources":["../../../test/filter/cuckoo-filter.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAA;AAEjE,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,IAAI,IAAkB,CAAA;IACtB,IAAI,MAAoB,CAAA;IAExB,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,GAAG,EAAE,CAAA;QACT,MAAM,GAAG,IAAI,YAAY,CAAC;YACxB,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,CAAC;YACb,eAAe,EAAE,CAAC;SACnB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9B,MAAM,IAAI,GAAG,WAAW,CAAC,EAAE,CAAC,CAAA;YAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAEf,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACvC,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACrC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACtC,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,cAAc,EAAE,GAAG,EAAE;QACtB,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;YACvC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACvC,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAClC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC5B,OAAO,IAAI,EAAE,CAAC;YACZ,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAA;YAE3B,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACrB,MAAK;YACP,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.d.ts b/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.d.ts
new file mode 100644
index 0000000..a714022
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=scalable-cuckoo-filter.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.d.ts.map
new file mode 100644
index 0000000..f1fb1d2
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"scalable-cuckoo-filter.spec.d.ts","sourceRoot":"","sources":["../../../test/filter/scalable-cuckoo-filter.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.js b/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.js
new file mode 100644
index 0000000..fa8d45c
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.js
@@ -0,0 +1,45 @@
+import { randomBytes } from '@libp2p/crypto';
+import { expect } from 'aegir/chai';
+import { ScalableCuckooFilter, createScalableCuckooFilter } from '../../src/filters/scalable-cuckoo-filter.js';
+describe('scalable-cuckoo-filter', () => {
+    let keys;
+    let cuckoo;
+    beforeEach(() => {
+        keys = [];
+        cuckoo = new ScalableCuckooFilter({
+            filterSize: 1500,
+            bucketSize: 6,
+            fingerprintSize: 4
+        });
+    });
+    it('add 150k keys', () => {
+        for (let i = 0; i < 150000; i++) {
+            const rand = randomBytes(36);
+            keys.push(rand);
+            expect(cuckoo.add(rand)).to.be.true();
+        }
+        // collisions may occur
+        expect(cuckoo.count).to.be.greaterThan(140000);
+        expect(cuckoo).to.have.nested.property('filterSeries.length')
+            .that.is.greaterThan(1);
+    });
+    it('check keys are in filter', () => {
+        for (const key of keys) {
+            expect(cuckoo.has(key)).to.be.true();
+        }
+    });
+    it('removes keys', () => {
+        for (const key of keys) {
+            expect(cuckoo.remove(key)).to.be.true();
+            expect(cuckoo.has(key)).to.be.false();
+        }
+        expect(cuckoo.count).to.equal(0);
+    });
+    it('optimizes input', () => {
+        const filter = createScalableCuckooFilter(100000, 0.001);
+        const key = randomBytes(32);
+        filter.add(key);
+        expect(filter.has(key)).to.equal(true);
+    });
+});
+//# sourceMappingURL=scalable-cuckoo-filter.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.js.map b/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.js.map
new file mode 100644
index 0000000..5d1099b
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/filter/scalable-cuckoo-filter.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"scalable-cuckoo-filter.spec.js","sourceRoot":"","sources":["../../../test/filter/scalable-cuckoo-filter.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,oBAAoB,EAAE,0BAA0B,EAAE,MAAM,6CAA6C,CAAA;AAE9G,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,IAAI,IAAkB,CAAA;IACtB,IAAI,MAA4B,CAAA;IAEhC,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,GAAG,EAAE,CAAA;QACT,MAAM,GAAG,IAAI,oBAAoB,CAAC;YAChC,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,CAAC;YACb,eAAe,EAAE,CAAC;SACnB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAChC,MAAM,IAAI,GAAG,WAAW,CAAC,EAAE,CAAC,CAAA;YAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAEf,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACvC,CAAC;QAED,uBAAuB;QACvB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QAC9C,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC;aAC1D,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IAC3B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACtC,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,cAAc,EAAE,GAAG,EAAE;QACtB,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;YACvC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACvC,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAClC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE;QACzB,MAAM,MAAM,GAAG,0BAA0B,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACxD,MAAM,GAAG,GAAG,WAAW,CAAC,EAAE,CAAC,CAAA;QAE3B,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAEf,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACxC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.d.ts b/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.d.ts
new file mode 100644
index 0000000..eadc79f
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.d.ts
@@ -0,0 +1,13 @@
+import { TypedEventEmitter } from '@libp2p/interface';
+export interface TestSignalEvents {
+    abort: CustomEvent;
+}
+export declare class TestSignal extends TypedEventEmitter<TestSignalEvents> {
+    aborted: boolean;
+    reason: any;
+    constructor();
+    throwIfAborted(): void;
+    onabort(): void;
+    abort(reason?: any): void;
+}
+//# sourceMappingURL=test-signal.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.d.ts.map b/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.d.ts.map
new file mode 100644
index 0000000..497231d
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"test-signal.d.ts","sourceRoot":"","sources":["../../../test/fixtures/test-signal.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AAErD,MAAM,WAAW,gBAAgB;IAC/B,KAAK,EAAE,WAAW,CAAA;CACnB;AAED,qBAAa,UAAW,SAAQ,iBAAiB,CAAC,gBAAgB,CAAC;IAC1D,OAAO,EAAE,OAAO,CAAA;IAChB,MAAM,EAAE,GAAG,CAAA;;IAQlB,cAAc,IAAK,IAAI;IAIvB,OAAO,IAAK,IAAI;IAIhB,KAAK,CAAE,MAAM,CAAC,EAAE,GAAG,GAAG,IAAI;CAK3B"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.js b/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.js
new file mode 100644
index 0000000..cfc4d1a
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.js
@@ -0,0 +1,19 @@
+import { TypedEventEmitter } from '@libp2p/interface';
+export class TestSignal extends TypedEventEmitter {
+    aborted;
+    reason;
+    constructor() {
+        super();
+        this.aborted = false;
+    }
+    throwIfAborted() {
+    }
+    onabort() {
+    }
+    abort(reason) {
+        this.aborted = true;
+        this.reason = reason;
+        this.safeDispatchEvent('abort');
+    }
+}
+//# sourceMappingURL=test-signal.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.js.map b/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.js.map
new file mode 100644
index 0000000..07e1da9
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/fixtures/test-signal.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"test-signal.js","sourceRoot":"","sources":["../../../test/fixtures/test-signal.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AAMrD,MAAM,OAAO,UAAW,SAAQ,iBAAmC;IAC1D,OAAO,CAAS;IAChB,MAAM,CAAK;IAElB;QACE,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAA;IACtB,CAAC;IAED,cAAc;IAEd,CAAC;IAED,OAAO;IAEP,CAAC;IAED,KAAK,CAAE,MAAY;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAA;IACjC,CAAC;CACF"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.d.ts b/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.d.ts
new file mode 100644
index 0000000..1cc1001
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=get-thin-waist-addresses.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.d.ts.map
new file mode 100644
index 0000000..f12e6de
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-thin-waist-addresses.spec.d.ts","sourceRoot":"","sources":["../../test/get-thin-waist-addresses.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.js b/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.js
new file mode 100644
index 0000000..569e0e8
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.js
@@ -0,0 +1,82 @@
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { isNode, isElectronMain } from 'wherearewe';
+import { getThinWaistAddresses } from '../src/get-thin-waist-addresses.js';
+describe('get-thin-waist-addresses', () => {
+    it('should not return addresses when not passed anything', () => {
+        expect(getThinWaistAddresses()).to.have.lengthOf(0);
+        expect(getThinWaistAddresses(undefined)).to.have.lengthOf(0);
+    });
+    it('should get thin waist addresses from specific address', () => {
+        const input = multiaddr('/ip4/123.123.123.123/tcp/1234');
+        const addrs = getThinWaistAddresses(input);
+        expect(addrs).to.deep.equal([input]);
+    });
+    it('should get thin waist addresses from specific address and override the port', () => {
+        const input = multiaddr('/ip4/123.123.123.123/tcp/1234');
+        const addrs = getThinWaistAddresses(input, 100);
+        expect(addrs).to.deep.equal([multiaddr('/ip4/123.123.123.123/tcp/100')]);
+    });
+    it('should ignore non-thin waist tuples from specific address', () => {
+        const input = multiaddr('/ip4/123.123.123.123/udp/1234/webrtc');
+        const addrs = getThinWaistAddresses(input);
+        expect(addrs).to.deep.equal([
+            multiaddr('/ip4/123.123.123.123/udp/1234')
+        ]);
+    });
+    it('should get thin waist addresses from IPv4 wildcard', function () {
+        if (!isNode && !isElectronMain) {
+            return this.skip();
+        }
+        const input = multiaddr('/ip4/0.0.0.0/tcp/1234');
+        const addrs = getThinWaistAddresses(input);
+        expect(addrs).to.have.property('length').that.is.greaterThan(0);
+        for (const addr of addrs) {
+            const options = addr.toOptions();
+            expect(options).to.have.property('family', 4);
+            expect(options).to.have.property('host').that.does.not.equal('0.0.0.0');
+        }
+    });
+    it('should get thin waist addresses from IPv4 wildcard and override the port', function () {
+        if (!isNode && !isElectronMain) {
+            return this.skip();
+        }
+        const input = multiaddr('/ip4/0.0.0.0/tcp/1234');
+        const addrs = getThinWaistAddresses(input, 100);
+        expect(addrs).to.have.property('length').that.is.greaterThan(0);
+        for (const addr of addrs) {
+            const options = addr.toOptions();
+            expect(options).to.have.property('family', 4);
+            expect(options).to.have.property('host').that.does.not.equal('0.0.0.0');
+            expect(options).to.have.property('port', 100);
+        }
+    });
+    it('should get thin waist addresses from IPv6 wildcard', function () {
+        if (!isNode && !isElectronMain) {
+            return this.skip();
+        }
+        const input = multiaddr('/ip6/::/tcp/1234');
+        const addrs = getThinWaistAddresses(input);
+        expect(addrs).to.have.property('length').that.is.greaterThan(0);
+        for (const addr of addrs) {
+            const options = addr.toOptions();
+            expect(options).to.have.property('family', 6);
+            expect(options).to.have.property('host').that.does.not.equal('::');
+        }
+    });
+    it('should get thin waist addresses from IPv6 wildcard and override the port', function () {
+        if (!isNode && !isElectronMain) {
+            return this.skip();
+        }
+        const input = multiaddr('/ip6/::/tcp/1234');
+        const addrs = getThinWaistAddresses(input, 100);
+        expect(addrs).to.have.property('length').that.is.greaterThan(0);
+        for (const addr of addrs) {
+            const options = addr.toOptions();
+            expect(options).to.have.property('family', 6);
+            expect(options).to.have.property('host').that.does.not.equal('::');
+            expect(options).to.have.property('port', 100);
+        }
+    });
+});
+//# sourceMappingURL=get-thin-waist-addresses.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.js.map b/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.js.map
new file mode 100644
index 0000000..e816902
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/get-thin-waist-addresses.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"get-thin-waist-addresses.spec.js","sourceRoot":"","sources":["../../test/get-thin-waist-addresses.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.d.ts b/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.d.ts
new file mode 100644
index 0000000..542700b
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=global-unicast-ip.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.d.ts.map
new file mode 100644
index 0000000..346300d
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"global-unicast-ip.spec.d.ts","sourceRoot":"","sources":["../../test/global-unicast-ip.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.js b/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.js
new file mode 100644
index 0000000..4aaaa6a
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.js
@@ -0,0 +1,49 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { isGlobalUnicastIp } from '../src/global-unicast-ip.js';
+describe('isGlobalUnicastIp', () => {
+    it('identifies ip4 multiaddrs as non-global unicast', () => {
+        [
+            '169.254.35.4',
+            '169.254.35.4',
+            '169.254.0.0',
+            '169.254.255.255',
+            '101.0.26.90',
+            '10.0.0.1',
+            '192.168.0.1',
+            '172.16.0.1'
+        ].forEach(ma => {
+            expect(isGlobalUnicastIp(ma)).to.be.false(`"${ma}" was identified as global unicast`);
+        });
+    });
+    it('identifies global unicast ip6 multiaddrs', () => {
+        [
+            '2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095',
+            '2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095%en0'
+        ].forEach(ma => {
+            expect(isGlobalUnicastIp(ma)).to.be.true(`"${ma}" was not identified as global unicast`);
+        });
+    });
+    it('identifies non global unicast ip6 multiaddrs', () => {
+        [
+            '::',
+            'fe80::1%lo0',
+            'fe80::1%lo0',
+            'fe80::1893:def4:af04:635a%en',
+            'fe80::1893:def4:af04:635a',
+            'fe80::1893:def4:af04:635a',
+            '::2:0:59c:a24:801'
+        ].forEach(ma => {
+            expect(isGlobalUnicastIp(ma)).to.be.false(`"${ma}" was identified as global unicast`);
+        });
+    });
+    it('identifies other multiaddrs as not global unicast addresses', () => {
+        [
+            'wss0.bootstrap.libp2p.io',
+            'wss0.bootstrap.libp2p.io'
+        ].forEach(ma => {
+            expect(isGlobalUnicastIp(ma)).to.be.false(`"${ma}" was identified as global unicast`);
+        });
+    });
+});
+//# sourceMappingURL=global-unicast-ip.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.js.map b/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.js.map
new file mode 100644
index 0000000..eb95338
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/global-unicast-ip.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"global-unicast-ip.spec.js","sourceRoot":"","sources":["../../test/global-unicast-ip.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAA;AAE/D,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD;YACE,cAAc;YACd,cAAc;YACd,aAAa;YACb,iBAAiB;YACjB,aAAa;YACb,UAAU;YACV,aAAa;YACb,YAAY;SACb,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAA;QACvF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD;YACE,wCAAwC;YACxC,4CAA4C;SAC7C,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,wCAAwC,CAAC,CAAA;QAC1F,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD;YACE,IAAI;YACJ,aAAa;YACb,aAAa;YACb,8BAA8B;YAC9B,2BAA2B;YAC3B,2BAA2B;YAC3B,mBAAmB;SACpB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAA;QACvF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;QACrE;YACE,0BAA0B;YAC1B,0BAA0B;SAC3B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAA;QACvF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.d.ts b/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.d.ts
new file mode 100644
index 0000000..891c3bc
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=ip-port-to-multiaddr.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.d.ts.map
new file mode 100644
index 0000000..04dfe64
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ip-port-to-multiaddr.spec.d.ts","sourceRoot":"","sources":["../../test/ip-port-to-multiaddr.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.js b/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.js
new file mode 100644
index 0000000..18411da
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.js
@@ -0,0 +1,41 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { ipPortToMultiaddr } from '../src/ip-port-to-multiaddr.js';
+describe('IP and port to Multiaddr', () => {
+    it('creates multiaddr from valid IPv4 IP and port', () => {
+        const ip = '127.0.0.1';
+        const port = '9090';
+        expect(ipPortToMultiaddr(ip, port).toString()).to.equal(`/ip4/${ip}/tcp/${port}`);
+    });
+    it('creates multiaddr from valid IPv4 IP and numeric port', () => {
+        const ip = '127.0.0.1';
+        const port = 9090;
+        expect(ipPortToMultiaddr(ip, port).toString()).to.equal(`/ip4/${ip}/tcp/${port}`);
+    });
+    it('creates multiaddr from valid IPv4 in IPv6 IP and port', () => {
+        const ip = '0:0:0:0:0:0:101.45.75.219';
+        const port = '9090';
+        expect(ipPortToMultiaddr(ip, port).toString()).to.equal(`/ip6/::652d:4bdb/tcp/${port}`);
+    });
+    it('creates multiaddr from valid IPv6 IP and port', () => {
+        const ip = '::1';
+        const port = '9090';
+        expect(ipPortToMultiaddr(ip, port).toString()).to.equal(`/ip6/${ip}/tcp/${port}`);
+    });
+    it('throws for missing IP address', () => {
+        // @ts-expect-error invalid args
+        expect(() => ipPortToMultiaddr()).to.throw('invalid ip provided')
+            .with.property('name', 'InvalidParametersError');
+    });
+    it('throws for invalid IP address', () => {
+        const ip = 'not-an-ip';
+        const port = '234';
+        expect(() => ipPortToMultiaddr(ip, port)).to.throw('invalid ip:port for creating a multiaddr').with.property('name', 'InvalidParametersError');
+    });
+    it('throws for invalid port', () => {
+        const ip = '127.0.0.1';
+        const port = 'garbage';
+        expect(() => ipPortToMultiaddr(ip, port)).to.throw('invalid port provided').with.property('name', 'InvalidParametersError');
+    });
+});
+//# sourceMappingURL=ip-port-to-multiaddr.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.js.map b/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.js.map
new file mode 100644
index 0000000..de73ebd
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/ip-port-to-multiaddr.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ip-port-to-multiaddr.spec.js","sourceRoot":"","sources":["../../test/ip-port-to-multiaddr.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,iBAAiB,EAAE,MAAM,gCAAgC,CAAA;AAElE,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,EAAE,GAAG,WAAW,CAAA;QACtB,MAAM,IAAI,GAAG,MAAM,CAAA;QACnB,MAAM,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAA;IACnF,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;QAC/D,MAAM,EAAE,GAAG,WAAW,CAAA;QACtB,MAAM,IAAI,GAAG,IAAI,CAAA;QACjB,MAAM,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAA;IACnF,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;QAC/D,MAAM,EAAE,GAAG,2BAA2B,CAAA;QACtC,MAAM,IAAI,GAAG,MAAM,CAAA;QACnB,MAAM,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,wBAAwB,IAAI,EAAE,CAAC,CAAA;IACzF,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,EAAE,GAAG,KAAK,CAAA;QAChB,MAAM,IAAI,GAAG,MAAM,CAAA;QACnB,MAAM,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAA;IACnF,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,gCAAgC;QAChC,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC;aAC9D,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAA;IACpD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,EAAE,GAAG,WAAW,CAAA;QACtB,MAAM,IAAI,GAAG,KAAK,CAAA;QAClB,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAA;IAChJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,EAAE,GAAG,WAAW,CAAA;QACtB,MAAM,IAAI,GAAG,SAAS,CAAA;QACtB,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAA;IAC7H,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.d.ts b/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.d.ts
new file mode 100644
index 0000000..1b82c6b
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=is-async-generator.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.d.ts.map
new file mode 100644
index 0000000..115c06c
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-async-generator.spec.d.ts","sourceRoot":"","sources":["../../test/is-async-generator.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.js b/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.js
new file mode 100644
index 0000000..f57a184
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.js
@@ -0,0 +1,35 @@
+import { expect } from 'aegir/chai';
+import { isAsyncGenerator } from '../src/is-async-generator.js';
+describe('is-async-generator', () => {
+    it('should return true if the value is an async generator', () => {
+        async function* asyncGen() {
+            yield 1;
+        }
+        const asyncGenerator = asyncGen();
+        expect(isAsyncGenerator(asyncGenerator)).to.be.true();
+        const asyncGenObj = (async function* () {
+            yield 1;
+        })();
+        expect(isAsyncGenerator(asyncGenObj)).to.be.true();
+    });
+    it('should return false if the value is not an async generator', () => {
+        expect(isAsyncGenerator(1)).to.be.false();
+        expect(isAsyncGenerator('string')).to.be.false();
+        expect(isAsyncGenerator({})).to.be.false();
+        expect(isAsyncGenerator([])).to.be.false();
+        expect(isAsyncGenerator(null)).to.be.false();
+        expect(isAsyncGenerator(undefined)).to.be.false();
+        expect(isAsyncGenerator(() => { })).to.be.false();
+        expect(isAsyncGenerator(async () => { })).to.be.false();
+        expect(isAsyncGenerator(function* () {
+            yield 1;
+        })).to.be.false();
+        expect(isAsyncGenerator(async function* () {
+            yield 1;
+        })).to.be.false(); // async generator function, not generator
+        expect(isAsyncGenerator(Promise.resolve())).to.be.false();
+        expect(isAsyncGenerator({ next: async () => { } })).to.be.false();
+        expect(isAsyncGenerator({ [Symbol.asyncIterator]: () => { } })).to.be.false();
+    });
+});
+//# sourceMappingURL=is-async-generator.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.js.map b/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.js.map
new file mode 100644
index 0000000..e57943a
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-async-generator.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-async-generator.spec.js","sourceRoot":"","sources":["../../test/is-async-generator.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAA;AAE/D,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;QAC/D,KAAK,SAAU,CAAC,CAAC,QAAQ;YACvB,MAAM,CAAC,CAAA;QACT,CAAC;QACD,MAAM,cAAc,GAAG,QAAQ,EAAE,CAAA;QACjC,MAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAErD,MAAM,WAAW,GAAG,CAAC,KAAK,SAAU,CAAC;YACnC,MAAM,CAAC,CAAA;QACT,CAAC,CAAC,EAAE,CAAA;QACJ,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IACpD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;QACpE,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACzC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAChD,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC1C,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC1C,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC5C,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACjD,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAChD,MAAM,CAAC,gBAAgB,CAAC,KAAK,IAAI,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACtD,MAAM,CACJ,gBAAgB,CAAC,QAAS,CAAC;YACzB,MAAM,CAAC,CAAA;QACT,CAAC,CAAC,CACH,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACf,MAAM,CACJ,gBAAgB,CAAC,KAAK,SAAU,CAAC;YAC/B,MAAM,CAAC,CAAA;QACT,CAAC,CAAC,CACH,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA,CAAC,0CAA0C;QAC1D,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACzD,MAAM,CAAC,gBAAgB,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,GAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAChE,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC9E,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-generator.spec.d.ts b/node_modules/@libp2p/utils/dist/test/is-generator.spec.d.ts
new file mode 100644
index 0000000..8774f11
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-generator.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=is-generator.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-generator.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/is-generator.spec.d.ts.map
new file mode 100644
index 0000000..99037c1
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-generator.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-generator.spec.d.ts","sourceRoot":"","sources":["../../test/is-generator.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-generator.spec.js b/node_modules/@libp2p/utils/dist/test/is-generator.spec.js
new file mode 100644
index 0000000..307b222
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-generator.spec.js
@@ -0,0 +1,35 @@
+import { expect } from 'aegir/chai';
+import { isGenerator } from '../src/is-generator.js';
+describe('is-generator', () => {
+    it('should return true if the value is a generator', () => {
+        function* gen() {
+            yield 1;
+        }
+        const generator = gen();
+        expect(isGenerator(generator)).to.be.true();
+        const genObj = (function* () {
+            yield 1;
+        })();
+        expect(isGenerator(genObj)).to.be.true();
+    });
+    it('should return false if the value is not a generator', () => {
+        expect(isGenerator(1)).to.be.false();
+        expect(isGenerator('string')).to.be.false();
+        expect(isGenerator({})).to.be.false();
+        expect(isGenerator([])).to.be.false();
+        expect(isGenerator(null)).to.be.false();
+        expect(isGenerator(undefined)).to.be.false();
+        expect(isGenerator(() => { })).to.be.false();
+        expect(isGenerator(async () => { })).to.be.false();
+        expect(isGenerator(function* () {
+            yield 1;
+        })).to.be.false(); // generator function, not generator
+        expect(isGenerator(async function* () {
+            yield 1;
+        })).to.be.false();
+        expect(isGenerator(Promise.resolve())).to.be.false();
+        expect(isGenerator({ next: () => { } })).to.be.false();
+        expect(isGenerator({ [Symbol.iterator]: () => { } })).to.be.false();
+    });
+});
+//# sourceMappingURL=is-generator.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-generator.spec.js.map b/node_modules/@libp2p/utils/dist/test/is-generator.spec.js.map
new file mode 100644
index 0000000..a304d93
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-generator.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-generator.spec.js","sourceRoot":"","sources":["../../test/is-generator.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAA;AAEpD,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,QAAS,CAAC,CAAC,GAAG;YACZ,MAAM,CAAC,CAAA;QACT,CAAC;QACD,MAAM,SAAS,GAAG,GAAG,EAAE,CAAA;QACvB,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QAE3C,MAAM,MAAM,GAAG,CAAC,QAAS,CAAC;YACxB,MAAM,CAAC,CAAA;QACT,CAAC,CAAC,EAAE,CAAA;QACJ,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;QAC7D,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACpC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC3C,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACrC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACrC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACvC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC5C,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC3C,MAAM,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACjD,MAAM,CACJ,WAAW,CAAC,QAAS,CAAC;YACpB,MAAM,CAAC,CAAA;QACT,CAAC,CAAC,CACH,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA,CAAC,oCAAoC;QACpD,MAAM,CACJ,WAAW,CAAC,KAAK,SAAU,CAAC;YAC1B,MAAM,CAAC,CAAA;QACT,CAAC,CAAC,CACH,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACf,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACpD,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACrD,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IACpE,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-promise.spec.d.ts b/node_modules/@libp2p/utils/dist/test/is-promise.spec.d.ts
new file mode 100644
index 0000000..3a1455d
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-promise.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=is-promise.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-promise.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/is-promise.spec.d.ts.map
new file mode 100644
index 0000000..c6f4c11
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-promise.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-promise.spec.d.ts","sourceRoot":"","sources":["../../test/is-promise.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-promise.spec.js b/node_modules/@libp2p/utils/dist/test/is-promise.spec.js
new file mode 100644
index 0000000..739c209
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-promise.spec.js
@@ -0,0 +1,52 @@
+import { expect } from 'aegir/chai';
+import { isPromise } from '../src/is-promise.js';
+describe('is-promise', () => {
+    it('should detect Promise.resolve', () => {
+        expect(isPromise(Promise.resolve('ok'))).to.be.true();
+    });
+    it('should detect Promise.reject', () => {
+        expect(isPromise(Promise.reject(new Error('not ok')).catch(() => {
+            // prevent unhandled promise rejection
+        }))).to.be.true();
+    });
+    it('should detect new Promise', () => {
+        expect(isPromise(new Promise(() => { }))).to.be.true();
+    });
+    it('should not detect boolean', () => {
+        expect(isPromise(true)).to.be.false();
+    });
+    it('should not detect object', () => {
+        expect(isPromise({})).to.be.false();
+    });
+    it('should not detect number', () => {
+        expect(isPromise({})).to.be.false();
+    });
+    it('should not detect partial promise', () => {
+        expect(isPromise({ then: true })).to.be.false();
+    });
+    it('should return true if the value is a promise', () => {
+        expect(isPromise(Promise.resolve())).to.be.true();
+        expect(isPromise(new Promise(() => { }))).to.be.true();
+        const rejected = Promise.reject(new Error('test'));
+        expect(isPromise(rejected)).to.be.true();
+        rejected.catch(() => { });
+    });
+    it('should return false if the value is not a promise', () => {
+        expect(isPromise(1)).to.be.false();
+        expect(isPromise('string')).to.be.false();
+        expect(isPromise({})).to.be.false();
+        expect(isPromise([])).to.be.false();
+        expect(isPromise(null)).to.be.false();
+        expect(isPromise(undefined)).to.be.false();
+        expect(isPromise(() => { })).to.be.false();
+        expect(isPromise(async () => { })).to.be.false();
+        expect(isPromise(function* () {
+            yield 1;
+        })).to.be.false();
+        expect(isPromise(async function* () {
+            yield 1;
+        })).to.be.false();
+        expect(isPromise({ then: 1 })).to.be.false();
+    });
+});
+//# sourceMappingURL=is-promise.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/is-promise.spec.js.map b/node_modules/@libp2p/utils/dist/test/is-promise.spec.js.map
new file mode 100644
index 0000000..0fc7ff3
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/is-promise.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-promise.spec.js","sourceRoot":"","sources":["../../test/is-promise.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAA;AAEhD,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IACvD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;YAC9D,sCAAsC;QACxC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IACnB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,MAAM,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;IACvD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IACvC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IACrC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IACrC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IACjD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACjD,MAAM,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACrD,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAA;QAClD,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACxC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAA;IAC1B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;QAC3D,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAClC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACzC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACnC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACnC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACrC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC1C,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACzC,MAAM,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAC/C,MAAM,CACJ,SAAS,CAAC,QAAS,CAAC;YAClB,MAAM,CAAC,CAAA;QACT,CAAC,CAAC,CACH,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACf,MAAM,CACJ,SAAS,CAAC,KAAK,SAAU,CAAC;YACxB,MAAM,CAAC,CAAA;QACT,CAAC,CAAC,CACH,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACf,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC9C,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.d.ts b/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.d.ts
new file mode 100644
index 0000000..ec72c9f
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=link-local-ip.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.d.ts.map
new file mode 100644
index 0000000..7b72207
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"link-local-ip.spec.d.ts","sourceRoot":"","sources":["../../test/link-local-ip.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.js b/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.js
new file mode 100644
index 0000000..6f334cb
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.js
@@ -0,0 +1,53 @@
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { isLinkLocalIp } from '../src/link-local-ip.js';
+describe('isLinkLocalIp', () => {
+    it('identifies link-local ip4 multiaddrs', () => {
+        [
+            '169.254.35.4',
+            '169.254.35.4',
+            '169.254.0.0',
+            '169.254.255.255'
+        ].forEach(ma => {
+            expect(isLinkLocalIp(ma)).to.be.true();
+        });
+    });
+    it('identifies non link-local ip4 multiaddrs', () => {
+        [
+            '101.0.26.90',
+            '10.0.0.1',
+            '192.168.0.1',
+            '172.16.0.1'
+        ].forEach(ma => {
+            expect(isLinkLocalIp(ma)).to.be.false();
+        });
+    });
+    it('identifies link-local ip6 multiaddrs', () => {
+        [
+            'fe80::1%lo0',
+            'fe80::1%lo0',
+            'fe80::1893:def4:af04:635a%en',
+            'fe80::1893:def4:af04:635a',
+            'fe80::1893:def4:af04:635a'
+        ].forEach(ma => {
+            expect(isLinkLocalIp(ma)).to.be.true();
+        });
+    });
+    it('identifies non link-local ip6 multiaddrs', () => {
+        [
+            '2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095',
+            '::'
+        ].forEach(ma => {
+            expect(isLinkLocalIp(ma)).to.be.false();
+        });
+    });
+    it('identifies other multiaddrs as not link-local addresses', () => {
+        [
+            'wss0.bootstrap.libp2p.io',
+            'wss0.bootstrap.libp2p.io'
+        ].forEach(ma => {
+            expect(isLinkLocalIp(ma)).to.be.false();
+        });
+    });
+});
+//# sourceMappingURL=link-local-ip.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.js.map b/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.js.map
new file mode 100644
index 0000000..5b11d08
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/link-local-ip.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"link-local-ip.spec.js","sourceRoot":"","sources":["../../test/link-local-ip.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAA;AAEvD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C;YACE,cAAc;YACd,cAAc;YACd,aAAa;YACb,iBAAiB;SAClB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACxC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD;YACE,aAAa;YACb,UAAU;YACV,aAAa;YACb,YAAY;SACb,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACzC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C;YACE,aAAa;YACb,aAAa;YACb,8BAA8B;YAC9B,2BAA2B;YAC3B,2BAA2B;SAC5B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACxC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD;YACE,wCAAwC;YACxC,IAAI;SACL,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACzC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACjE;YACE,0BAA0B;YAC1B,0BAA0B;SAC3B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACzC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/merge-options.spec.d.ts b/node_modules/@libp2p/utils/dist/test/merge-options.spec.d.ts
new file mode 100644
index 0000000..493540c
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/merge-options.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=merge-options.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/merge-options.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/merge-options.spec.d.ts.map
new file mode 100644
index 0000000..811e30a
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/merge-options.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"merge-options.spec.d.ts","sourceRoot":"","sources":["../../test/merge-options.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/merge-options.spec.js b/node_modules/@libp2p/utils/dist/test/merge-options.spec.js
new file mode 100644
index 0000000..d2cba6f
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/merge-options.spec.js
@@ -0,0 +1,283 @@
+import { expect } from 'aegir/chai';
+import { mergeOptions } from '../src/merge-options.js';
+const defineProtoProperty = (options, value) => {
+    Object.defineProperty(options, '__proto__', {
+        value,
+        writable: true,
+        enumerable: true,
+        configurable: true
+    });
+    return options;
+};
+describe('merge-options', () => {
+    it('should support array values', () => {
+        const array1 = ['foo', 'bar'];
+        const array2 = ['baz'];
+        const result = mergeOptions({ array: array1 }, { array: array2 });
+        expect(result).to.deep.equal({ array: array2 });
+        expect(result.array).to.not.equal(array1);
+        expect(result.array).to.not.equal(array2);
+    });
+    it('should support concatenation', () => {
+        const array1 = ['foo'];
+        const array2 = ['bar'];
+        const result = mergeOptions.call({ concatArrays: true }, { array: array1 }, { array: array2 });
+        expect(result.array).to.deep.equal(['foo', 'bar']);
+        expect(result.array).to.not.equal(array1);
+        expect(result.array).to.not.equal(array2);
+    });
+    it('should support concatenation via apply', () => {
+        const array1 = ['foo'];
+        const array2 = ['bar'];
+        const result = mergeOptions.apply({ concatArrays: true }, [{ array: array1 }, { array: array2 }]);
+        expect(result.array).to.deep.equal(['foo', 'bar']);
+        expect(result.array).to.not.equal(array1);
+        expect(result.array).to.not.equal(array2);
+    });
+    it('should support concatenation of sparse arrays', () => {
+        const sparseArray1 = [];
+        const sparseArray2 = [];
+        sparseArray1[2] = 42;
+        sparseArray2[5] = 'unicorns';
+        const result = mergeOptions.call({ concatArrays: true }, { foo: sparseArray1 }, { foo: sparseArray2 });
+        expect(result.foo).to.deep.equal([42, 'unicorns']);
+        expect(result.array).to.not.equal(sparseArray1);
+        expect(result.array).to.not.equal(sparseArray2);
+    });
+    it('should support concatenation of sparse arrays via apply', () => {
+        const sparseArray1 = [];
+        const sparseArray2 = [];
+        sparseArray1[2] = 42;
+        sparseArray2[5] = 'unicorns';
+        const result = mergeOptions.apply({ concatArrays: true }, [{ foo: sparseArray1 }, { foo: sparseArray2 }]);
+        expect(result.foo).to.deep.equal([42, 'unicorns']);
+        expect(result.array).to.not.equal(sparseArray1);
+        expect(result.array).to.not.equal(sparseArray2);
+    });
+    it('should clone option objects', () => {
+        const plainObject1 = { value: 'foo' };
+        const plainObject2 = { value: 'bar' };
+        const result = mergeOptions({ array: [plainObject1] }, { array: [plainObject2] });
+        expect(result.array).to.deep.equal([plainObject2]);
+        expect(result.array[0]).to.not.equal(plainObject1);
+        expect(result.array[0]).to.not.equal(plainObject2);
+    });
+    it('should ignore `undefined` Option Objects', () => {
+        expect(mergeOptions(undefined)).to.deep.equal({});
+        expect(mergeOptions(undefined, { foo: true }, { foo: false })).to.deep.equal({ foo: false });
+        expect(mergeOptions({ foo: true }, undefined, { foo: false })).to.deep.equal({ foo: false });
+    });
+    it('should support Object.create(null) Option Objects', () => {
+        const option1 = Object.create(null);
+        option1.foo = Object.create(null);
+        expect(mergeOptions(option1, { bar: Object.create(null) })).to.deep.equal({ foo: Object.create(null), bar: Object.create(null) });
+    });
+    it('should throw TypeError on non-option-objects', async () => {
+        const promise = Promise.reject(new Error());
+        [
+            42,
+            'unicorn',
+            new Date(),
+            promise,
+            Symbol('unicorn'),
+            /regexp/,
+            function () { },
+            null
+        ].forEach(value => {
+            expect(() => mergeOptions(value)).to.throw(TypeError);
+            expect(() => mergeOptions({}, value)).to.throw(TypeError);
+            expect(() => mergeOptions({ foo: 'bar' }, value)).to.throw(TypeError);
+            expect(() => mergeOptions(Object.create(null), value)).to.throw(TypeError);
+        });
+        await expect(promise).to.eventually.be.rejected();
+    });
+    it('should support `undefined` Option Values', () => {
+        expect(mergeOptions({ foo: true }, { foo: undefined })).to.deep.equal({ foo: undefined });
+    });
+    it('should support undefined as target, null as source', () => {
+        const result = mergeOptions({ foo: undefined }, { foo: null });
+        expect(result).to.have.property('foo', null);
+    });
+    it('should support null as target, undefined as source', () => {
+        const result = mergeOptions({ foo: null }, { foo: undefined });
+        expect(result).to.have.property('foo', undefined);
+    });
+    it('should support Date as target, Number as source', () => {
+        const result = mergeOptions({ date: new Date() }, { date: 990741600000 });
+        expect(result.date.constructor).to.equal(Number);
+        expect(result).to.have.property('date', 990741600000);
+    });
+    it('should support Date as target, Date as source', () => {
+        const result = mergeOptions({ date: new Date() }, { date: new Date(990741600000) });
+        expect(result.date.constructor).to.equal(Date);
+        expect(result.date.getTime()).to.equal(990741600000);
+    });
+    it('should support RegExp as target, String as source', () => {
+        const result = mergeOptions({ regexp: /reg/ }, { regexp: 'string' });
+        expect(result.regexp.constructor).to.equal(String);
+        expect(result).to.have.property('regexp', 'string');
+    });
+    it('should support RegExp as target, RegExp as source', () => {
+        const result = mergeOptions({ regexp: /reg/ }, { regexp: /new/ });
+        expect(result.regexp.constructor).to.equal(RegExp);
+        expect(result.regexp.test('new')).to.be.true();
+    });
+    it('should support Promise as target, Number as source', () => {
+        const promise1 = Promise.resolve(666);
+        const promise2 = 42;
+        const result = mergeOptions({ promise: promise1 }, { promise: promise2 });
+        expect(result.promise.constructor).to.equal(Number);
+        expect(result).to.have.property('promise', 42);
+    });
+    it('should support Promise as target, Promise as source', async () => {
+        const promise1 = Promise.resolve(666);
+        const promise2 = Promise.resolve(42);
+        const result = mergeOptions({ promise: promise1 }, { promise: promise2 });
+        expect(result.promise.constructor).to.equal(Promise);
+        await expect(result.promise).to.eventually.equal(42);
+    });
+    it('should support user-defined object as target, user-defined object as source', () => {
+        class User {
+            firstName;
+            constructor(firstName) {
+                this.firstName = firstName;
+            }
+        }
+        const alice = new User('Alice');
+        const bob = new User('Bob');
+        const result = mergeOptions({ user: alice }, { user: bob });
+        expect(result.user.constructor).to.equal(User);
+        expect(result).to.have.property('user', bob);
+        expect(result).to.have.nested.property('user.firstName', 'Bob');
+    });
+    it('should preserve property order', () => {
+        const letters = 'abcdefghijklmnopqrst';
+        const source = {};
+        letters.split('').forEach(letter => {
+            source[letter] = letter;
+        });
+        const target = mergeOptions({}, source);
+        expect(Object.keys(target).join('')).to.equal(letters);
+    });
+    it('should not allow prototype pollution', () => {
+        const maliciousPayload = '{"__proto__":{"oops":"It works !"}}';
+        const a = {};
+        expect(a).to.not.have.property('oops');
+        mergeOptions(a, JSON.parse(maliciousPayload));
+        expect(a).to.not.have.property('oops');
+    });
+    it('should not allow pollution of array values (regression test)', () => {
+        const array1 = [];
+        const array2 = [];
+        const pristine = [];
+        defineProtoProperty(array2, { oops: 'It works !' });
+        expect(pristine).to.not.have.property('oops');
+        mergeOptions({ array: array1 }, { array: array2 });
+        expect(pristine).to.not.have.property('oops');
+    });
+    it('should allow recursive merge', () => {
+        const a = {};
+        const b = defineProtoProperty({ a }, { oops: 'It works !' });
+        expect(b).to.not.have.nested.property('a.oops');
+        mergeOptions({ a: {} }, b);
+        expect(b).to.not.have.nested.property('a.oops');
+    });
+    it('should clone', async () => {
+        const defaultPromise = Promise.reject(new Error());
+        const optionsPromise = Promise.resolve('bar');
+        const defaultOptions = {
+            fn: () => false,
+            promise: defaultPromise,
+            array: ['foo'],
+            nested: { unicorns: 'none' }
+        };
+        const options = {
+            fn: () => true,
+            promise: optionsPromise,
+            array: ['baz'],
+            nested: { unicorns: 'many' }
+        };
+        const result = mergeOptions(defaultOptions, options);
+        expect(result).to.deep.equal(options);
+        expect(result.fn).to.equal(options.fn);
+        expect(result.promise).to.equal(options.promise);
+        expect(result.array).to.not.equal(options.array);
+        expect(result.nested).to.not.equal(options.nested);
+        await expect(defaultPromise).to.eventually.be.rejected();
+        await expect(optionsPromise).to.eventually.be.ok();
+    });
+    it('array.concat example', () => {
+        expect(mergeOptions({ patterns: ['src/**'] }, { patterns: ['test/**'] })).to.deep.equal({ patterns: ['test/**'] });
+        expect(mergeOptions.call({ concatArrays: true }, { patterns: ['src/**'] }, { patterns: ['test/**'] })).to.deep.equal({ patterns: ['src/**', 'test/**'] });
+        expect(mergeOptions.apply({ concatArrays: true }, [{ patterns: ['src/**'] }, { patterns: ['test/**'] }])).to.deep.equal({ patterns: ['src/**', 'test/**'] });
+    });
+    it('basic examples', () => {
+        expect(mergeOptions({ foo: 0 }, { bar: 1 }, { baz: 2 }, { bar: 3 })).to.deep.equal({ foo: 0, bar: 3, baz: 2 });
+        expect(mergeOptions({ nested: { unicorns: 'none' } }, { nested: { unicorns: 'many' } })).to.deep.equal({ nested: { unicorns: 'many' } });
+        expect(mergeOptions({ [Symbol.for('key')]: 0 }, { [Symbol.for('key')]: 42 })).to.deep.equal({ [Symbol.for('key')]: 42 });
+    });
+    it('return new option objects', () => {
+        const fooKey = Symbol('foo');
+        const source1 = {};
+        const source2 = {};
+        source1[fooKey] = { bar: false };
+        source2[fooKey] = { bar: true };
+        const fooRef1 = source1[fooKey];
+        const fooRef2 = source2[fooKey];
+        const result = mergeOptions(source1, source2);
+        expect(result).to.deep.equal(source2);
+        expect(result).to.not.equal(source2);
+        expect(result[fooKey]).to.not.equal(source1[fooKey]);
+        expect(result[fooKey]).to.not.equal(source2[fooKey]);
+        expect(result[fooKey]).to.not.equal(fooRef1);
+        expect(result[fooKey]).to.not.equal(fooRef2);
+    });
+    it('undefined values', () => {
+        expect(mergeOptions.call({ ignoreUndefined: true }, { foo: 0 }, { foo: undefined }))
+            .to.deep.equal({ foo: 0 });
+    });
+    it('deep undefined values', () => {
+        expect(mergeOptions.call({ ignoreUndefined: true }, { nested: { unicorns: 'none' } }, { nested: { unicorns: undefined } }))
+            .to.deep.equal({ nested: { unicorns: 'none' } });
+    });
+    it('undefined options objects', () => {
+        expect(mergeOptions.call({ ignoreUndefined: true }, { nested: { unicorns: 'none' } }, { nested: undefined }))
+            .to.deep.equal({ nested: { unicorns: 'none' } });
+    });
+    it('ignore non-own properties', () => {
+        const optionObject = { foo: 'bar' };
+        // eslint-disable-next-line no-extend-native
+        Object.defineProperty(Object.prototype, 'TEST_NonOwnButEnumerable', {
+            value: optionObject,
+            configurable: true,
+            enumerable: true
+        });
+        const result = mergeOptions({}, optionObject, { baz: true });
+        expect(result.baz).to.be.true();
+        expect(result.TEST_NonOwnButEnumerable).to.deep.equal(optionObject);
+        expect(Object.hasOwnProperty.call(result, 'TEST_NonOwnButEnumerable')).to.be.false();
+        // @ts-expect-error not a property
+        delete Object.prototype.TEST_NonOwnButEnumerable;
+        expect('TEST_NonOwnButEnumerable' in result).to.be.false();
+    });
+    it('ignore non-enumerable properties', () => {
+        const optionObject = Object.create(null);
+        const key = Symbol('TEST_NonEnumerableButOwn');
+        Object.defineProperty(optionObject, key, {
+            value: 42,
+            configurable: true,
+            enumerable: false
+        });
+        const result = mergeOptions({}, optionObject, { baz: true });
+        if (Object.getOwnPropertySymbols) {
+            const ownPropertySymbols = Object.getOwnPropertySymbols(result);
+            expect(ownPropertySymbols).to.deep.equal([]);
+        }
+        else {
+            expect(key in result).to.be.false();
+        }
+        expect(result).to.not.deep.equal(optionObject);
+        expect(result.baz).to.be.true();
+    });
+});
+//# sourceMappingURL=merge-options.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/merge-options.spec.js.map b/node_modules/@libp2p/utils/dist/test/merge-options.spec.js.map
new file mode 100644
index 0000000..8a00209
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/merge-options.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"merge-options.spec.js","sourceRoot":"","sources":["../../test/merge-options.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/moving-average.spec.d.ts b/node_modules/@libp2p/utils/dist/test/moving-average.spec.d.ts
new file mode 100644
index 0000000..3c32080
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/moving-average.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=moving-average.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/moving-average.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/moving-average.spec.d.ts.map
new file mode 100644
index 0000000..99751e3
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/moving-average.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"moving-average.spec.d.ts","sourceRoot":"","sources":["../../test/moving-average.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/moving-average.spec.js b/node_modules/@libp2p/utils/dist/test/moving-average.spec.js
new file mode 100644
index 0000000..c694c9b
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/moving-average.spec.js
@@ -0,0 +1,73 @@
+import { expect } from 'aegir/chai';
+import { MovingAverage } from '../src/moving-average.js';
+describe('moving-average', () => {
+    it('moving average with one value gets that value', () => {
+        const ma = new MovingAverage(5000);
+        ma.push(5, Date.now());
+        expect(ma).to.have.property('movingAverage', 5);
+    });
+    it('moving average on a constant value returns that value', () => {
+        const ma = new MovingAverage(5000);
+        const now = Date.now();
+        ma.push(5, now);
+        ma.push(5, now + 1000);
+        ma.push(5, now + 2000);
+        ma.push(5, now + 3000);
+        expect(ma).to.have.property('movingAverage', 5);
+    });
+    it('moving average works', () => {
+        const ma = new MovingAverage(50000);
+        const now = Date.now();
+        ma.push(1, now);
+        ma.push(2, now + 1000);
+        ma.push(3, now + 2000);
+        ma.push(3, now + 3000);
+        ma.push(10, now + 4000);
+        expect(ma).to.have.property('movingAverage')
+            .that.is.lessThan(1.28);
+        expect(ma).to.have.property('movingAverage')
+            .that.is.greaterThan(1.27);
+    });
+    it('variance is 0 on one sample', () => {
+        const ma = new MovingAverage(5000);
+        ma.push(5, Date.now());
+        expect(ma).to.have.property('variance', 0);
+    });
+    it('variance is 0 on samples with same value', () => {
+        const ma = new MovingAverage(5000);
+        const now = Date.now();
+        ma.push(3, now);
+        ma.push(3, now + 1000);
+        ma.push(3, now + 2000);
+        ma.push(3, now + 3000);
+        ma.push(3, now + 4000);
+        expect(ma).to.have.property('variance', 0);
+    });
+    it('variance works (1)', () => {
+        const ma = new MovingAverage(5000);
+        const now = Date.now();
+        ma.push(0, now);
+        ma.push(1, now + 1000);
+        ma.push(2, now + 2000);
+        ma.push(3, now + 3000);
+        ma.push(4, now + 4000);
+        expect(ma).to.have.property('variance')
+            .that.is.lessThan(2.54);
+        expect(ma).to.have.property('variance')
+            .that.is.greaterThan(2.53);
+    });
+    it('variance works (2)', () => {
+        const ma = new MovingAverage(5000);
+        const now = Date.now();
+        ma.push(0, now);
+        ma.push(1, now + 1000);
+        ma.push(1, now + 2000);
+        ma.push(1, now + 3000);
+        ma.push(1, now + 4000);
+        expect(ma).to.have.property('variance')
+            .that.is.lessThan(0.25);
+        expect(ma).to.have.property('variance')
+            .that.is.greaterThan(0.24);
+    });
+});
+//# sourceMappingURL=moving-average.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/moving-average.spec.js.map b/node_modules/@libp2p/utils/dist/test/moving-average.spec.js.map
new file mode 100644
index 0000000..2925773
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/moving-average.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"moving-average.spec.js","sourceRoot":"","sources":["../../test/moving-average.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.d.ts b/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.d.ts
new file mode 100644
index 0000000..3996d97
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=is-global-unicast.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.d.ts.map
new file mode 100644
index 0000000..582e746
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-global-unicast.spec.d.ts","sourceRoot":"","sources":["../../../test/multiaddr/is-global-unicast.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.js b/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.js
new file mode 100644
index 0000000..24ef796
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.js
@@ -0,0 +1,51 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { isGlobalUnicast } from '../../src/multiaddr/is-global-unicast.js';
+describe('multiaddr isGlobalUnicast', () => {
+    it('identifies ip4 multiaddrs as non-global unicast', () => {
+        [
+            multiaddr('/ip4/169.254.35.4'),
+            multiaddr('/ip4/169.254.35.4/tcp/1000'),
+            multiaddr('/ip4/169.254.0.0/tcp/1000'),
+            multiaddr('/ip4/169.254.255.255/tcp/1000'),
+            multiaddr('/ip4/101.0.26.90/tcp/1000'),
+            multiaddr('/ip4/10.0.0.1/tcp/1000'),
+            multiaddr('/ip4/192.168.0.1/tcp/1000'),
+            multiaddr('/ip4/172.16.0.1/tcp/1000')
+        ].forEach(ma => {
+            expect(isGlobalUnicast(ma)).to.be.false(`"${ma}" was identified as global unicast`);
+        });
+    });
+    it('identifies global unicast ip6 multiaddrs', () => {
+        [
+            multiaddr('/ip6/2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095/tcp/1000'),
+            multiaddr('/ip6/2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095%en0/tcp/1000')
+        ].forEach(ma => {
+            expect(isGlobalUnicast(ma)).to.be.true(`"${ma}" was not identified as global unicast`);
+        });
+    });
+    it('identifies non global unicast ip6 multiaddrs', () => {
+        [
+            multiaddr('/ip6/fe80::1%lo0'),
+            multiaddr('/ip6/fe80::1%lo0/tcp/1000'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a%en'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a/udp/2183'),
+            multiaddr('/ip6/::/tcp/1000'),
+            multiaddr('/ip6/::2:0:59c:a24:801/tcp/64142')
+        ].forEach(ma => {
+            expect(isGlobalUnicast(ma)).to.be.false(`"${ma}" was identified as global unicast`);
+        });
+    });
+    it('identifies other multiaddrs as not global unicast addresses', () => {
+        [
+            multiaddr('/dns4/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/dns6/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/memory/addr-1')
+        ].forEach(ma => {
+            expect(isGlobalUnicast(ma)).to.be.false(`"${ma}" was identified as global unicast`);
+        });
+    });
+});
+//# sourceMappingURL=is-global-unicast.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.js.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.js.map
new file mode 100644
index 0000000..b8a8655
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-global-unicast.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-global-unicast.spec.js","sourceRoot":"","sources":["../../../test/multiaddr/is-global-unicast.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAA;AAE1E,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD;YACE,SAAS,CAAC,mBAAmB,CAAC;YAC9B,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,+BAA+B,CAAC;YAC1C,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,wBAAwB,CAAC;YACnC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,0BAA0B,CAAC;SACtC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAA;QACrF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD;YACE,SAAS,CAAC,sDAAsD,CAAC;YACjE,SAAS,CAAC,0DAA0D,CAAC;SACtE,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,wCAAwC,CAAC,CAAA;QACxF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD;YACE,SAAS,CAAC,kBAAkB,CAAC;YAC7B,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,mCAAmC,CAAC;YAC9C,SAAS,CAAC,gCAAgC,CAAC;YAC3C,SAAS,CAAC,yCAAyC,CAAC;YACpD,SAAS,CAAC,kBAAkB,CAAC;YAC7B,SAAS,CAAC,kCAAkC,CAAC;SAC9C,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAA;QACrF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;QACrE;YACE,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,gBAAgB,CAAC;SAC5B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAA;QACrF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.d.ts b/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.d.ts
new file mode 100644
index 0000000..536b6c6
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=is-ip-based.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.d.ts.map
new file mode 100644
index 0000000..0cc5c21
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-ip-based.spec.d.ts","sourceRoot":"","sources":["../../../test/multiaddr/is-ip-based.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.js b/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.js
new file mode 100644
index 0000000..7123da7
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.js
@@ -0,0 +1,38 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { isIpBased } from '../../src/multiaddr/is-ip-based.js';
+describe('multiaddr isIpBased', () => {
+    it('identifies IP-based multiaddrs', () => {
+        [
+            multiaddr('/ip4/169.254.35.4'),
+            multiaddr('/ip4/169.254.35.4/tcp/1000'),
+            multiaddr('/ip4/169.254.0.0/tcp/1000'),
+            multiaddr('/ip4/169.254.255.255/tcp/1000'),
+            multiaddr('/ip4/101.0.26.90/tcp/1000'),
+            multiaddr('/ip4/10.0.0.1/tcp/1000'),
+            multiaddr('/ip4/192.168.0.1/tcp/1000'),
+            multiaddr('/ip4/172.16.0.1/tcp/1000'),
+            multiaddr('/ip6/fe80::1%lo0/tcp/1000'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a%en'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a/udp/2183'),
+            multiaddr('/ip6/::/tcp/1000'),
+            multiaddr('/ip6/::2:0:59c:a24:801/tcp/64142')
+        ].forEach(ma => {
+            expect(isIpBased(ma)).to.be.true(`"${ma}" was not identified as IP based`);
+        });
+    });
+    it('identifies non-IP-based multiaddrs', () => {
+        [
+            multiaddr('/memory/address-1'),
+            multiaddr('/unix/path/to/socket'),
+            multiaddr('/dns4/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/dns6/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/dnsaddr/wss0.bootstrap.libp2p.io/tcp/443')
+        ].forEach(ma => {
+            expect(isIpBased(ma)).to.be.false(`"${ma}" was identified as IP based`);
+        });
+    });
+});
+//# sourceMappingURL=is-ip-based.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.js.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.js.map
new file mode 100644
index 0000000..d624dde
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-ip-based.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-ip-based.spec.js","sourceRoot":"","sources":["../../../test/multiaddr/is-ip-based.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,SAAS,EAAE,MAAM,oCAAoC,CAAA;AAE9D,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;QACxC;YACE,SAAS,CAAC,mBAAmB,CAAC;YAC9B,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,+BAA+B,CAAC;YAC1C,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,wBAAwB,CAAC;YACnC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,0BAA0B,CAAC;YACrC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,mCAAmC,CAAC;YAC9C,SAAS,CAAC,gCAAgC,CAAC;YAC3C,SAAS,CAAC,yCAAyC,CAAC;YACpD,SAAS,CAAC,kBAAkB,CAAC;YAC7B,SAAS,CAAC,kCAAkC,CAAC;SAC9C,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,kCAAkC,CAAC,CAAA;QAC5E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C;YACE,SAAS,CAAC,mBAAmB,CAAC;YAC9B,SAAS,CAAC,sBAAsB,CAAC;YACjC,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,2CAA2C,CAAC;SACvD,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAA;QACzE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.d.ts b/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.d.ts
new file mode 100644
index 0000000..4135254
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=is-link-local.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.d.ts.map
new file mode 100644
index 0000000..07881ca
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-link-local.spec.d.ts","sourceRoot":"","sources":["../../../test/multiaddr/is-link-local.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.js b/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.js
new file mode 100644
index 0000000..b745ca1
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.js
@@ -0,0 +1,56 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { isLinkLocal } from '../../src/multiaddr/is-link-local.js';
+describe('multiaddr isLinkLocal', () => {
+    it('identifies link-local ip4 multiaddrs', () => {
+        [
+            multiaddr('/ip4/169.254.35.4'),
+            multiaddr('/ip4/169.254.35.4/tcp/1000'),
+            multiaddr('/ip4/169.254.0.0/tcp/1000'),
+            multiaddr('/ip4/169.254.255.255/tcp/1000')
+        ].forEach(ma => {
+            expect(isLinkLocal(ma)).to.be.true(`"${ma}" was not identified as link local`);
+        });
+    });
+    it('identifies non link-local ip4 multiaddrs', () => {
+        [
+            multiaddr('/ip4/101.0.26.90/tcp/1000'),
+            multiaddr('/ip4/10.0.0.1/tcp/1000'),
+            multiaddr('/ip4/192.168.0.1/tcp/1000'),
+            multiaddr('/ip4/172.16.0.1/tcp/1000')
+        ].forEach(ma => {
+            expect(isLinkLocal(ma)).to.be.false(`"${ma}" was identified as link local`);
+        });
+    });
+    it('identifies link-local ip6 multiaddrs', () => {
+        [
+            multiaddr('/ip6/fe80::1%lo0'),
+            multiaddr('/ip6/fe80::1%lo0/tcp/1000'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a%en'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a/udp/2183')
+        ].forEach(ma => {
+            expect(isLinkLocal(ma)).to.be.true(`"${ma}" was not identified as link local`);
+        });
+    });
+    it('identifies non link-local ip6 multiaddrs', () => {
+        [
+            multiaddr('/ip6/2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095/tcp/1000'),
+            multiaddr('/ip6/::/tcp/1000')
+        ].forEach(ma => {
+            expect(isLinkLocal(ma)).to.be.false(`"${ma}" was identified as link local`);
+        });
+    });
+    it('identifies other multiaddrs as not link-local addresses', () => {
+        [
+            multiaddr('/dns4/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/dns6/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/unix/path/to/socket'),
+            multiaddr('/memory/addr-1')
+        ].forEach(ma => {
+            expect(isLinkLocal(ma)).to.be.false(`"${ma}" was identified as link local`);
+        });
+    });
+});
+//# sourceMappingURL=is-link-local.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.js.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.js.map
new file mode 100644
index 0000000..847ba54
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-link-local.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-link-local.spec.js","sourceRoot":"","sources":["../../../test/multiaddr/is-link-local.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,WAAW,EAAE,MAAM,sCAAsC,CAAA;AAElE,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C;YACE,SAAS,CAAC,mBAAmB,CAAC;YAC9B,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,+BAA+B,CAAC;SAC3C,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAA;QAChF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD;YACE,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,wBAAwB,CAAC;YACnC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,0BAA0B,CAAC;SACtC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAA;QAC7E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C;YACE,SAAS,CAAC,kBAAkB,CAAC;YAC7B,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,mCAAmC,CAAC;YAC9C,SAAS,CAAC,gCAAgC,CAAC;YAC3C,SAAS,CAAC,yCAAyC,CAAC;SACrD,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAA;QAChF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD;YACE,SAAS,CAAC,sDAAsD,CAAC;YACjE,SAAS,CAAC,kBAAkB,CAAC;SAC9B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAA;QAC7E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACjE;YACE,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,sBAAsB,CAAC;YACjC,SAAS,CAAC,gBAAgB,CAAC;SAC5B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAA;QAC7E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.d.ts b/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.d.ts
new file mode 100644
index 0000000..b4a89ef
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=is-loopback.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.d.ts.map
new file mode 100644
index 0000000..1f584c0
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-loopback.spec.d.ts","sourceRoot":"","sources":["../../../test/multiaddr/is-loopback.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.js b/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.js
new file mode 100644
index 0000000..9bdd6d4
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.js
@@ -0,0 +1,52 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { isLoopback } from '../../src/multiaddr/is-loopback.js';
+describe('multiaddr isLoopback', () => {
+    it('identifies loopback ip4 multiaddrs', () => {
+        [
+            multiaddr('/ip4/127.0.0.1/tcp/1000'),
+            multiaddr('/ip4/127.0.1.1/tcp/1000'),
+            multiaddr('/ip4/127.1.1.1/tcp/1000'),
+            multiaddr('/ip4/127.255.255.255/tcp/1000')
+        ].forEach(ma => {
+            expect(isLoopback(ma)).to.be.true(`"${ma}" was not identified as loopback`);
+        });
+    });
+    it('identifies non loopback ip4 multiaddrs', () => {
+        [
+            multiaddr('/ip4/101.0.26.90/tcp/1000'),
+            multiaddr('/ip4/10.0.0.1/tcp/1000'),
+            multiaddr('/ip4/192.168.0.1/tcp/1000'),
+            multiaddr('/ip4/172.16.0.1/tcp/1000')
+        ].forEach(ma => {
+            expect(isLoopback(ma)).to.be.false(`"${ma}" was identified as loopback`);
+        });
+    });
+    it('identifies loopback ip6 multiaddrs', () => {
+        [
+            multiaddr('/ip6/::1/tcp/1000')
+        ].forEach(ma => {
+            expect(isLoopback(ma)).to.be.true(`"${ma}" was not identified as loopback`);
+        });
+    });
+    it('identifies non loopback ip6 multiaddrs', () => {
+        [
+            multiaddr('/ip6/2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095/tcp/1000'),
+            multiaddr('/ip6/::/tcp/1000')
+        ].forEach(ma => {
+            expect(isLoopback(ma)).to.be.false(`"${ma}" was identified as loopback`);
+        });
+    });
+    it('identifies other multiaddrs as not loopback addresses', () => {
+        [
+            multiaddr('/dns4/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/dns6/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/unix/path/to/socket'),
+            multiaddr('/memory/addr-1')
+        ].forEach(ma => {
+            expect(isLoopback(ma)).to.be.false(`"${ma}" was identified as loopback`);
+        });
+    });
+});
+//# sourceMappingURL=is-loopback.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.js.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.js.map
new file mode 100644
index 0000000..b2553a3
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-loopback.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-loopback.spec.js","sourceRoot":"","sources":["../../../test/multiaddr/is-loopback.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAA;AAE/D,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C;YACE,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,yBAAyB,CAAC;YACpC,SAAS,CAAC,+BAA+B,CAAC;SAC3C,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,kCAAkC,CAAC,CAAA;QAC7E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD;YACE,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,wBAAwB,CAAC;YACnC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,0BAA0B,CAAC;SACtC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAA;QAC1E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C;YACE,SAAS,CAAC,mBAAmB,CAAC;SAC/B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,kCAAkC,CAAC,CAAA;QAC7E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD;YACE,SAAS,CAAC,sDAAsD,CAAC;YACjE,SAAS,CAAC,kBAAkB,CAAC;SAC9B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAA;QAC1E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;QAC/D;YACE,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,sBAAsB,CAAC;YACjC,SAAS,CAAC,gBAAgB,CAAC;SAC5B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAA;QAC1E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.d.ts b/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.d.ts
new file mode 100644
index 0000000..7a22699
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=is-network-address.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.d.ts.map
new file mode 100644
index 0000000..666c5f4
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-network-address.spec.d.ts","sourceRoot":"","sources":["../../../test/multiaddr/is-network-address.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.js b/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.js
new file mode 100644
index 0000000..44a2931
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.js
@@ -0,0 +1,38 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { isNetworkAddress } from '../../src/multiaddr/is-network-address.js';
+describe('multiaddr isNetworkAddress', () => {
+    it('identifies network multiaddrs', () => {
+        [
+            multiaddr('/ip4/169.254.35.4'),
+            multiaddr('/ip4/169.254.35.4/tcp/1000'),
+            multiaddr('/ip4/169.254.0.0/tcp/1000'),
+            multiaddr('/ip4/169.254.255.255/tcp/1000'),
+            multiaddr('/ip4/101.0.26.90/tcp/1000'),
+            multiaddr('/ip4/10.0.0.1/tcp/1000'),
+            multiaddr('/ip4/192.168.0.1/tcp/1000'),
+            multiaddr('/ip4/172.16.0.1/tcp/1000'),
+            multiaddr('/ip6/fe80::1%lo0/tcp/1000'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a%en'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a'),
+            multiaddr('/ip6/fe80::1893:def4:af04:635a/udp/2183'),
+            multiaddr('/ip6/::/tcp/1000'),
+            multiaddr('/ip6/::2:0:59c:a24:801/tcp/64142'),
+            multiaddr('/dns4/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/dns6/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/dnsaddr/wss0.bootstrap.libp2p.io/tcp/443')
+        ].forEach(ma => {
+            expect(isNetworkAddress(ma)).to.be.true(`"${ma}" was not identified as network address`);
+        });
+    });
+    it('identifies non-network multiaddrs', () => {
+        [
+            multiaddr('/memory/address-1'),
+            multiaddr('/unix/path/to/socket')
+        ].forEach(ma => {
+            expect(isNetworkAddress(ma)).to.be.false(`"${ma}" was identified as network address`);
+        });
+    });
+});
+//# sourceMappingURL=is-network-address.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.js.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.js.map
new file mode 100644
index 0000000..97a207d
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-network-address.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-network-address.spec.js","sourceRoot":"","sources":["../../../test/multiaddr/is-network-address.spec.ts"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,gBAAgB,EAAE,MAAM,2CAA2C,CAAA;AAE5E,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC;YACE,SAAS,CAAC,mBAAmB,CAAC;YAC9B,SAAS,CAAC,4BAA4B,CAAC;YACvC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,+BAA+B,CAAC;YAC1C,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,wBAAwB,CAAC;YACnC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,0BAA0B,CAAC;YACrC,SAAS,CAAC,2BAA2B,CAAC;YACtC,SAAS,CAAC,mCAAmC,CAAC;YAC9C,SAAS,CAAC,gCAAgC,CAAC;YAC3C,SAAS,CAAC,yCAAyC,CAAC;YACpD,SAAS,CAAC,kBAAkB,CAAC;YAC7B,SAAS,CAAC,kCAAkC,CAAC;YAC7C,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,wCAAwC,CAAC;YACnD,SAAS,CAAC,2CAA2C,CAAC;SACvD,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,yCAAyC,CAAC,CAAA;QAC1F,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C;YACE,SAAS,CAAC,mBAAmB,CAAC;YAC9B,SAAS,CAAC,sBAAsB,CAAC;SAClC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACb,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,qCAAqC,CAAC,CAAA;QACvF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.d.ts b/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.d.ts
new file mode 100644
index 0000000..2cce2a5
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=is-private.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.d.ts.map
new file mode 100644
index 0000000..ec8658c
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-private.spec.d.ts","sourceRoot":"","sources":["../../../test/multiaddr/is-private.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.js b/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.js
new file mode 100644
index 0000000..c67b874
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.js
@@ -0,0 +1,100 @@
+/* eslint-env mocha */
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import { isPrivate } from '../../src/multiaddr/is-private.js';
+describe('multiaddr isPrivate', () => {
+    it('identifies private ip4 multiaddrs', () => {
+        [
+            multiaddr('/ip4/127.0.0.1/tcp/1000'),
+            multiaddr('/ip4/10.0.0.1/tcp/1000'),
+            multiaddr('/ip4/192.168.0.1/tcp/1000'),
+            multiaddr('/ip4/172.16.0.1/tcp/1000'),
+            multiaddr('/ip4/172.16.0.1/tcp/1000/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN'),
+            multiaddr('/ip4/172.16.0.1/tcp/1000/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/p2p/12D3KooWNvSZnPi3RrhrTwEY4LuuBeB6K6facKUCJcyWG1aoDd2p'),
+            multiaddr('/ip4/172.16.0.1')
+        ].forEach(ma => {
+            expect(isPrivate(ma)).to.be.true(`"${ma}" was not identified as private`);
+        });
+    });
+    it('identifies public ip4 multiaddrs', () => {
+        [
+            multiaddr('/ip4/101.0.26.90/tcp/1000'),
+            multiaddr('/ip4/40.1.20.9/tcp/1000'),
+            multiaddr('/ip4/92.168.0.1/tcp/1000'),
+            multiaddr('/ip4/2.16.0.1/tcp/1000'),
+            multiaddr('/ip4/2.16.0.1/tcp/1000/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN'),
+            multiaddr('/ip4/2.16.0.1/tcp/1000/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN/p2p-circuit/p2p/12D3KooWNvSZnPi3RrhrTwEY4LuuBeB6K6facKUCJcyWG1aoDd2p'),
+            multiaddr('/ip4/2.16.0.1')
+        ].forEach(ma => {
+            expect(isPrivate(ma)).to.be.false(`"${ma}" was identified as private`);
+        });
+    });
+    it('identifies private ip6 multiaddrs', () => {
+        [
+            multiaddr('/ip6/fd52:8342:fc46:6c91:3ac9:86ff:fe31:7095/tcp/1000'),
+            multiaddr('/ip6/fd52:8342:fc46:6c91:3ac9:86ff:fe31:1/tcp/1000'),
+            multiaddr('/ip6/::ffff:0a00:0001/tcp/1000'), // 10.0.0.1
+            multiaddr('/ip6/::ffff:ac10:0001/tcp/1000'), // 172.16.0.1
+            multiaddr('/ip6/::ffff:c0a8:0001/tcp/1000'), // 192.168.0.1
+            multiaddr('/ip6/::ffff:7f00:0001/tcp/1000'), // 127.0.0.1
+            multiaddr('/ip6/::ffff:10.0.0.1/tcp/1000'),
+            multiaddr('/ip6/::ffff:172.16.0.1/tcp/1000'),
+            multiaddr('/ip6/::ffff:192.168.0.1/tcp/1000'),
+            multiaddr('/ip6/::ffff:127.0.0.1/tcp/1000'),
+            multiaddr('/ip6/::ffff:127.0.0.1')
+        ].forEach(ma => {
+            try {
+                expect(isPrivate(ma)).to.be.true(`"${ma}" was not identified as private`);
+            }
+            catch {
+                throw new Error(`Failed for ${ma.toString()}`);
+            }
+        });
+    });
+    it('identifies public ip6 multiaddrs', () => {
+        [
+            multiaddr('/ip6/2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095/tcp/1000'),
+            multiaddr('/ip6/2000:8a0:7ac5:4201:3ac9:86ff:fe31:7095/tcp/1000'),
+            multiaddr('/ip6/::ffff:6500:1a5a/tcp/1000'), // 101.0.26.90
+            multiaddr('/ip6/::ffff:2801:1409/tcp/1000'), // 40.1.20.9
+            multiaddr('/ip6/::ffff:5ca8:0001/tcp/1000'), // 92.168.0.1 (not a private range)
+            multiaddr('/ip6/::ffff:0200:0010/tcp/1000'), // 2.16.0.1 (not a private range)
+            multiaddr('/ip6/::ffff:ac09:0001/tcp/1000'), // 172.15.0.1 (not a private range)
+            multiaddr('/ip6/::ffff:ac20:0001/tcp/1000'), // 172.32.0.1 (not a private range)
+            multiaddr('/ip6/::ffff:c0a7:0001/tcp/1000'), // 192.167.0.1 (not a private range)
+            multiaddr('/ip6/::ffff:c0a9:0001/tcp/1000'), // 192.169.0.1 (not a private range)
+            multiaddr('/ip6/::ffff:101.0.26.90/tcp/1000'),
+            multiaddr('/ip6/::ffff:40.1.20.9/tcp/1000'),
+            multiaddr('/ip6/::ffff:92.168.0.1/tcp/1000'), // not a private range
+            multiaddr('/ip6/::ffff:2.16.0.1/tcp/1000'), // not a private range
+            multiaddr('/ip6/::ffff:172.15.0.1/tcp/1000'), // not a private range
+            multiaddr('/ip6/::ffff:172.32.0.1/tcp/1000'), // not a private range
+            multiaddr('/ip6/::ffff:192.167.0.1/tcp/1000'), // not a private range
+            multiaddr('/ip6/::ffff:192.169.0.1/tcp/1000'), // not a private range
+            multiaddr('/ip6/::ffff:192.169.0.1') // not a private range
+        ].forEach(ma => {
+            expect(isPrivate(ma)).to.be.false(`"${ma}" was identified as private`);
+        });
+    });
+    it('identifies other multiaddrs as not private addresses', () => {
+        [
+            multiaddr('/dns4/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/dns6/wss0.bootstrap.libp2p.io/tcp/443'),
+            multiaddr('/dns6/wss0.bootstrap.libp2p.io'),
+            multiaddr('/memory/addr-1'),
+            multiaddr('/unix/foo/bar/baz.sock')
+        ].forEach(ma => {
+            expect(isPrivate(ma)).to.be.false(`"${ma}" was identified as private`);
+        });
+    });
+    it('identifies non-public addresses', () => {
+        [
+            multiaddr('/ip4/127.0.0.1/tcp/1000/p2p-circuit'),
+            multiaddr('/ip4/127.0.0.1/sctp/1000'),
+            multiaddr('/ip4/127.0.0.1')
+        ].forEach(ma => {
+            expect(isPrivate(ma)).to.be.true(`"${ma}" was not identified as private`);
+        });
+    });
+});
+//# sourceMappingURL=is-private.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.js.map b/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.js.map
new file mode 100644
index 0000000..f5e7731
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/multiaddr/is-private.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"is-private.spec.js","sourceRoot":"","sources":["../../../test/multiaddr/is-private.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.d.ts b/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.d.ts
new file mode 100644
index 0000000..ef708e6
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-job-queue.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.d.ts.map
new file mode 100644
index 0000000..ac482ec
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-job-queue.spec.d.ts","sourceRoot":"","sources":["../../test/peer-job-queue.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.js b/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.js
new file mode 100644
index 0000000..87ef691
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.js
@@ -0,0 +1,131 @@
+/* eslint-env mocha */
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import pDefer from 'p-defer';
+import { raceEvent } from 'race-event';
+import { PeerQueue } from '../src/peer-queue.js';
+describe('peer queue', () => {
+    it('should have jobs', async () => {
+        const deferred = pDefer();
+        const privateKeyA = await generateKeyPair('Ed25519');
+        const peerIdA = peerIdFromPrivateKey(privateKeyA);
+        const privateKeyB = await generateKeyPair('Ed25519');
+        const peerIdB = peerIdFromPrivateKey(privateKeyB);
+        const queue = new PeerQueue({
+            concurrency: 1
+        });
+        expect(queue.has(peerIdA)).to.be.false();
+        void queue.add(async () => {
+            await deferred.promise;
+        }, {
+            peerId: peerIdB
+        });
+        void queue.add(async () => {
+            await deferred.promise;
+        }, {
+            peerId: peerIdA
+        });
+        expect(queue.has(peerIdA)).to.be.true();
+        deferred.resolve();
+        await queue.onIdle();
+        expect(queue.has(peerIdA)).to.be.false();
+    });
+    it('can join existing jobs', async () => {
+        const value = 'hello world';
+        const deferred = pDefer();
+        const privateKeyA = await generateKeyPair('Ed25519');
+        const peerIdA = peerIdFromPrivateKey(privateKeyA);
+        const queue = new PeerQueue({
+            concurrency: 1
+        });
+        expect(queue.has(peerIdA)).to.be.false();
+        expect(queue.find(peerIdA)).to.be.undefined();
+        void queue.add(async () => {
+            return deferred.promise;
+        }, {
+            peerId: peerIdA
+        });
+        const job = queue.find(peerIdA);
+        const join = job?.join();
+        deferred.resolve(value);
+        await expect(join).to.eventually.equal(value);
+        expect(queue.has(peerIdA)).to.be.false();
+        expect(queue.find(peerIdA)).to.be.undefined();
+    });
+    it('can join an existing job that fails', async () => {
+        const error = new Error('nope!');
+        const deferred = pDefer();
+        const privateKeyA = await generateKeyPair('Ed25519');
+        const peerIdA = peerIdFromPrivateKey(privateKeyA);
+        const queue = new PeerQueue({
+            concurrency: 1
+        });
+        void queue.add(async () => {
+            return deferred.promise;
+        }, {
+            peerId: peerIdA
+        })
+            .catch(() => { });
+        const job = queue.find(peerIdA);
+        const joinedJob = job?.join();
+        deferred.reject(error);
+        await expect(joinedJob).to.eventually.rejected
+            .with.property('message', error.message);
+    });
+    it('cannot join jobs after clear', async () => {
+        const value = 'hello world';
+        const deferred = pDefer();
+        const privateKeyA = await generateKeyPair('Ed25519');
+        const peerIdA = peerIdFromPrivateKey(privateKeyA);
+        const queue = new PeerQueue({
+            concurrency: 1
+        });
+        expect(queue.has(peerIdA)).to.be.false();
+        expect(queue.find(peerIdA)).to.be.undefined();
+        void queue.add(async () => {
+            return deferred.promise;
+        }, {
+            peerId: peerIdA
+        }).catch(() => { });
+        queue.clear();
+        expect(queue.find(peerIdA)).to.be.undefined();
+        deferred.resolve(value);
+    });
+    it('emits success event', async () => {
+        const value = 'hello world';
+        const privateKeyA = await generateKeyPair('Ed25519');
+        const peerIdA = peerIdFromPrivateKey(privateKeyA);
+        const queue = new PeerQueue({
+            concurrency: 1
+        });
+        void queue.add(async () => {
+            await delay(100);
+            return value;
+        }, {
+            peerId: peerIdA
+        }).catch(() => { });
+        const event = await raceEvent(queue, 'success');
+        expect(event.detail.job.options.peerId).to.equal(peerIdA);
+        expect(event.detail.result).to.equal(value);
+    });
+    it('emits failure event', async () => {
+        const err = new Error('Oh no!');
+        const privateKeyA = await generateKeyPair('Ed25519');
+        const peerIdA = peerIdFromPrivateKey(privateKeyA);
+        const queue = new PeerQueue({
+            concurrency: 1
+        });
+        void queue.add(async () => {
+            await delay(100);
+            throw err;
+        }, {
+            peerId: peerIdA
+        }).catch(() => { });
+        const event = await raceEvent(queue, 'failure');
+        expect(event.detail.job.options.peerId).to.equal(peerIdA);
+        expect(event.detail.error).to.equal(err);
+    });
+});
+//# sourceMappingURL=peer-job-queue.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.js.map b/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.js.map
new file mode 100644
index 0000000..2bf0e2f
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/peer-job-queue.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-job-queue.spec.js","sourceRoot":"","sources":["../../test/peer-job-queue.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/priority-queue.spec.d.ts b/node_modules/@libp2p/utils/dist/test/priority-queue.spec.d.ts
new file mode 100644
index 0000000..0a9c0c9
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/priority-queue.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=priority-queue.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/priority-queue.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/priority-queue.spec.d.ts.map
new file mode 100644
index 0000000..80325b2
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/priority-queue.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"priority-queue.spec.d.ts","sourceRoot":"","sources":["../../test/priority-queue.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/priority-queue.spec.js b/node_modules/@libp2p/utils/dist/test/priority-queue.spec.js
new file mode 100644
index 0000000..5c340f1
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/priority-queue.spec.js
@@ -0,0 +1,17 @@
+import { expect } from 'aegir/chai';
+import { PriorityQueue } from '../src/priority-queue.js';
+describe('priority-queue', () => {
+    it('adds with priority', async () => {
+        const result = [];
+        const queue = new PriorityQueue({ concurrency: 1 });
+        void queue.add(async () => result.push(1), { priority: 1 });
+        void queue.add(async () => result.push(0), { priority: 0 });
+        void queue.add(async () => result.push(1), { priority: 1 });
+        void queue.add(async () => result.push(2), { priority: 1 });
+        void queue.add(async () => result.push(3), { priority: 2 });
+        void queue.add(async () => result.push(0), { priority: -1 });
+        await queue.onEmpty();
+        expect(result).to.deep.equal([1, 3, 1, 2, 0, 0]);
+    });
+});
+//# sourceMappingURL=priority-queue.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/priority-queue.spec.js.map b/node_modules/@libp2p/utils/dist/test/priority-queue.spec.js.map
new file mode 100644
index 0000000..c9abe23
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/priority-queue.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"priority-queue.spec.js","sourceRoot":"","sources":["../../test/priority-queue.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAA;AAExD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,MAAM,GAAa,EAAE,CAAA;QAC3B,MAAM,KAAK,GAAG,IAAI,aAAa,CAAS,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAA;QAC3D,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAA;QAC3D,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAA;QAC3D,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAA;QAC3D,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAA;QAC3D,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAA;QAC3D,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA;QAE5D,MAAM,KAAK,CAAC,OAAO,EAAE,CAAA;QAErB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IAClD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/private-ip.spec.d.ts b/node_modules/@libp2p/utils/dist/test/private-ip.spec.d.ts
new file mode 100644
index 0000000..b36afb3
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/private-ip.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=private-ip.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/private-ip.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/private-ip.spec.d.ts.map
new file mode 100644
index 0000000..5ef0ce6
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/private-ip.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"private-ip.spec.d.ts","sourceRoot":"","sources":["../../test/private-ip.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/private-ip.spec.js b/node_modules/@libp2p/utils/dist/test/private-ip.spec.js
new file mode 100644
index 0000000..7c75ad0
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/private-ip.spec.js
@@ -0,0 +1,187 @@
+/* spell-checker:disable */
+/* eslint-env mocha */
+import { expect } from 'aegir/chai';
+import { isPrivateIp } from '../src/private-ip.js';
+describe('private-ip', function () {
+    const pubIps = [
+        '44.37.112.180',
+        '46.192.247.73',
+        '71.12.102.112',
+        '101.0.26.90',
+        '111.211.73.40',
+        '156.238.194.84',
+        '164.101.185.82',
+        '223.231.138.242',
+        '226.84.185.150',
+        '227.202.96.196',
+        '::1fff:0.0.0.0',
+        '::1fff:10.0.0.0',
+        '::1fff:0:0.0.0.0',
+        '::1fff:0:10.0.0.0',
+        '2001:2:ffff:ffff:ffff:ffff:ffff:ffff',
+        '64:ff9a::0.0.0.0',
+        '64:ff9a::255.255.255.255',
+        '99::',
+        '99::ffff:ffff:ffff:ffff',
+        '101::',
+        '101::ffff:ffff:ffff:ffff',
+        '2000::',
+        '2000::ffff:ffff:ffff:ffff:ffff:ffff',
+        '2001:10::',
+        '2001:1f:ffff:ffff:ffff:ffff:ffff:ffff',
+        '2001:db7::',
+        '2001:db7:ffff:ffff:ffff:ffff:ffff:ffff',
+        '2001:db9::',
+        'fb00::',
+        'fbff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',
+        'fec0::'
+    ];
+    const privIps = [
+        '0.0.0.0',
+        '0.0.0.1',
+        '0.0.0.7',
+        '0.0.0.255',
+        '0.0.255.255',
+        '0.1.255.255',
+        '0.15.255.255',
+        '0.63.255.255',
+        '0.255.255.254',
+        '0.255.255.255',
+        '10.0.0.0',
+        '10.0.0.1',
+        '10.255.255.254',
+        '10.255.255.255',
+        '100.64.0.0',
+        '100.64.0.1',
+        '100.127.255.254',
+        '100.127.255.255',
+        '127.0.0.0',
+        '127.0.0.1',
+        '127.255.255.254',
+        '127.255.255.255',
+        '169.254.0.0',
+        '169.254.0.1',
+        '169.254.255.254',
+        '169.254.255.255',
+        '172.16.0.0',
+        '172.16.0.1',
+        '172.31.255.254',
+        '172.31.255.255',
+        '192.0.0.0',
+        '192.0.0.1',
+        '192.0.0.6',
+        '192.0.0.7',
+        '192.0.0.8',
+        '192.0.0.9',
+        '192.0.0.10',
+        '192.0.0.11',
+        '192.0.0.170',
+        '192.0.0.171',
+        '192.0.0.254',
+        '192.0.0.255',
+        '192.0.2.0',
+        '192.0.2.1',
+        '192.0.2.254',
+        '192.0.2.255',
+        '192.31.196.0',
+        '192.31.196.1',
+        '192.31.196.254',
+        '192.31.196.255',
+        '192.52.193.0',
+        '192.52.193.1',
+        '192.52.193.254',
+        '192.52.193.255',
+        '192.88.99.0',
+        '192.88.99.1',
+        '192.88.99.254',
+        '192.88.99.255',
+        '192.168.0.0',
+        '192.168.0.1',
+        '192.168.255.254',
+        '192.168.255.255',
+        '192.175.48.0',
+        '192.175.48.1',
+        '192.175.48.254',
+        '192.175.48.255',
+        '198.18.0.0',
+        '198.18.0.1',
+        '198.19.255.254',
+        '198.19.255.255',
+        '198.51.100.0',
+        '198.51.100.1',
+        '198.51.100.254',
+        '198.51.100.255',
+        '203.0.113.0',
+        '203.0.113.1',
+        '203.0.113.254',
+        '203.0.113.255',
+        '240.0.0.0',
+        '240.0.0.1',
+        '255.0.0.0',
+        '255.192.0.0',
+        '255.240.0.0',
+        '255.254.0.0',
+        '255.255.0.0',
+        '255.255.255.0',
+        '255.255.255.248',
+        '255.255.255.254',
+        '255.255.255.255',
+        '::',
+        '::1',
+        '::ffff:0.0.0.0',
+        '::ffff:255.255.255.255',
+        '64:ff9b::0.0.0.0',
+        '64:ff9b::16.10.11.1',
+        '64:ff9b::255.255.255.255',
+        '100::',
+        '100::0:0:0:0',
+        '100::1:eabc:0:2',
+        '100::ffff:ffff:ffff:ffff',
+        '2001::',
+        '2001::a:b:c',
+        '2001::ffff:ffff:ffff:ffff:ffff:ffff',
+        '2001:20::',
+        '2001:20::a:b:c',
+        '2001:2f::a:b:c',
+        '2001:2f:ffff:ffff:ffff:ffff:ffff:ffff',
+        '2001:db8::',
+        '2001:db8::1',
+        '2001:db8:abc::1',
+        '2001:db8:ffff:ffff:ffff:ffff:ffff:ffff',
+        '2002::',
+        '2002::1',
+        '2002::abc:1',
+        '2002:ffff:ffff:ffff:ffff:ffff:ffff:ffff',
+        'fe80::',
+        'fe80::1',
+        'fe80::abc:1',
+        'febf:ffff:ffff:ffff:ffff:ffff:ffff:ffff',
+        'fc00::',
+        'fc00::1',
+        'fc00::abc:1',
+        'fdff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',
+        'ff00::',
+        'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'
+    ];
+    const invalidIps = [
+        '100::ffff::',
+        '::ffff:0.0.255.255.255',
+        '::ffff:0.255.255.255.255'
+    ];
+    it('identifies public ips', function () {
+        for (const ip of pubIps) {
+            expect(isPrivateIp(ip)).to.be.false(`isPrivateIp('${ip}') should be false`);
+        }
+    });
+    it('identifies private ips', function () {
+        for (const ip of privIps) {
+            expect(isPrivateIp(ip)).to.be.true(`isPrivateIp('${ip}') should be true`);
+        }
+    });
+    it('identifies invalid ips', function () {
+        for (const ip of invalidIps) {
+            expect(isPrivateIp(ip)).to.be.undefined(`isPrivateIp('${ip}') should be undefined`);
+        }
+    });
+});
+//# sourceMappingURL=private-ip.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/private-ip.spec.js.map b/node_modules/@libp2p/utils/dist/test/private-ip.spec.js.map
new file mode 100644
index 0000000..8695056
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/private-ip.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"private-ip.spec.js","sourceRoot":"","sources":["../../test/private-ip.spec.ts"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B,sBAAsB;AAEtB,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAA;AAElD,QAAQ,CAAC,YAAY,EAAE;IACrB,MAAM,MAAM,GAAG;QACb,eAAe;QACf,eAAe;QACf,eAAe;QACf,aAAa;QACb,eAAe;QACf,gBAAgB;QAChB,gBAAgB;QAChB,iBAAiB;QACjB,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,iBAAiB;QACjB,kBAAkB;QAClB,mBAAmB;QACnB,sCAAsC;QACtC,kBAAkB;QAClB,0BAA0B;QAC1B,MAAM;QACN,yBAAyB;QACzB,OAAO;QACP,0BAA0B;QAC1B,QAAQ;QACR,qCAAqC;QACrC,WAAW;QACX,uCAAuC;QACvC,YAAY;QACZ,wCAAwC;QACxC,YAAY;QACZ,QAAQ;QACR,yCAAyC;QACzC,QAAQ;KACT,CAAA;IAED,MAAM,OAAO,GAAG;QACd,SAAS;QACT,SAAS;QACT,SAAS;QACT,WAAW;QACX,aAAa;QACb,aAAa;QACb,cAAc;QACd,cAAc;QACd,eAAe;QACf,eAAe;QACf,UAAU;QACV,UAAU;QACV,gBAAgB;QAChB,gBAAgB;QAChB,YAAY;QACZ,YAAY;QACZ,iBAAiB;QACjB,iBAAiB;QACjB,WAAW;QACX,WAAW;QACX,iBAAiB;QACjB,iBAAiB;QACjB,aAAa;QACb,aAAa;QACb,iBAAiB;QACjB,iBAAiB;QACjB,YAAY;QACZ,YAAY;QACZ,gBAAgB;QAChB,gBAAgB;QAChB,WAAW;QACX,WAAW;QACX,WAAW;QACX,WAAW;QACX,WAAW;QACX,WAAW;QACX,YAAY;QACZ,YAAY;QACZ,aAAa;QACb,aAAa;QACb,aAAa;QACb,aAAa;QACb,WAAW;QACX,WAAW;QACX,aAAa;QACb,aAAa;QACb,cAAc;QACd,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAChB,cAAc;QACd,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAChB,aAAa;QACb,aAAa;QACb,eAAe;QACf,eAAe;QACf,aAAa;QACb,aAAa;QACb,iBAAiB;QACjB,iBAAiB;QACjB,cAAc;QACd,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAChB,YAAY;QACZ,YAAY;QACZ,gBAAgB;QAChB,gBAAgB;QAChB,cAAc;QACd,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAChB,aAAa;QACb,aAAa;QACb,eAAe;QACf,eAAe;QACf,WAAW;QACX,WAAW;QACX,WAAW;QACX,aAAa;QACb,aAAa;QACb,aAAa;QACb,aAAa;QACb,eAAe;QACf,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,IAAI;QACJ,KAAK;QACL,gBAAgB;QAChB,wBAAwB;QACxB,kBAAkB;QAClB,qBAAqB;QACrB,0BAA0B;QAC1B,OAAO;QACP,cAAc;QACd,iBAAiB;QACjB,0BAA0B;QAC1B,QAAQ;QACR,aAAa;QACb,qCAAqC;QACrC,WAAW;QACX,gBAAgB;QAChB,gBAAgB;QAChB,uCAAuC;QACvC,YAAY;QACZ,aAAa;QACb,iBAAiB;QACjB,wCAAwC;QACxC,QAAQ;QACR,SAAS;QACT,aAAa;QACb,yCAAyC;QACzC,QAAQ;QACR,SAAS;QACT,aAAa;QACb,yCAAyC;QACzC,QAAQ;QACR,SAAS;QACT,aAAa;QACb,yCAAyC;QACzC,QAAQ;QACR,yCAAyC;KAC1C,CAAA;IAED,MAAM,UAAU,GAAG;QACjB,aAAa;QACb,wBAAwB;QACxB,0BAA0B;KAC3B,CAAA;IAED,EAAE,CAAC,uBAAuB,EAAE;QAC1B,KAAK,MAAM,EAAE,IAAI,MAAM,EAAE,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,CAAA;QAC7E,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wBAAwB,EAAE;QAC3B,KAAK,MAAM,EAAE,IAAI,OAAO,EAAE,CAAC;YACzB,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAA;QAC3E,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wBAAwB,EAAE;QAC3B,KAAK,MAAM,EAAE,IAAI,UAAU,EAAE,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,gBAAgB,EAAE,wBAAwB,CAAC,CAAA;QACrF,CAAC;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/queue.spec.d.ts b/node_modules/@libp2p/utils/dist/test/queue.spec.d.ts
new file mode 100644
index 0000000..edea720
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/queue.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=queue.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/queue.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/queue.spec.d.ts.map
new file mode 100644
index 0000000..d7f5c71
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/queue.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"queue.spec.d.ts","sourceRoot":"","sources":["../../test/queue.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/queue.spec.js b/node_modules/@libp2p/utils/dist/test/queue.spec.js
new file mode 100644
index 0000000..c707143
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/queue.spec.js
@@ -0,0 +1,627 @@
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import all from 'it-all';
+import pDefer from 'p-defer';
+import { Queue } from '../src/queue/index.js';
+import { TestSignal } from './fixtures/test-signal.js';
+const fixture = Symbol('fixture');
+function randomInt(minimum, maximum) {
+    return Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);
+}
+describe('queue', () => {
+    it('adds', async () => {
+        const queue = new Queue({});
+        const promise = queue.add(async () => fixture);
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        await expect(promise).to.eventually.equal(fixture);
+    });
+    it('adds with limited concurrency', async () => {
+        const queue = new Queue({ concurrency: 2 });
+        const promise = queue.add(async () => fixture);
+        const promise2 = queue.add(async () => {
+            await delay(100);
+            return fixture;
+        });
+        const promise3 = queue.add(async () => fixture);
+        expect(queue).to.have.property('size', 3);
+        expect(queue).to.have.property('queued', 1);
+        expect(queue).to.have.property('running', 2);
+        await expect(promise).to.eventually.equal(fixture);
+        await expect(promise2).to.eventually.equal(fixture);
+        await expect(promise3).to.eventually.equal(fixture);
+    });
+    it('adds with concurrency 1', async () => {
+        const concurrency = 1;
+        const queue = new Queue({ concurrency });
+        queue.addEventListener('active', () => {
+            expect(queue).to.have.property('running').that.is.lessThanOrEqual(concurrency);
+        });
+        queue.addEventListener('idle', () => {
+            expect(queue).to.have.property('running').that.is.lessThanOrEqual(concurrency);
+        });
+        queue.addEventListener('next', () => {
+            expect(queue).to.have.property('running').that.is.lessThanOrEqual(concurrency);
+        });
+        queue.addEventListener('completed', () => {
+            expect(queue).to.have.property('running').that.is.lessThanOrEqual(concurrency);
+        });
+        for (let i = 0; i < 100; i++) {
+            void queue.add(async () => {
+                await delay(10);
+            });
+        }
+        await queue.onIdle();
+    });
+    it('adds with concurrency 5', async () => {
+        const concurrency = 5;
+        const queue = new Queue({ concurrency });
+        queue.addEventListener('active', () => {
+            expect(queue).to.have.property('running').that.is.lessThanOrEqual(concurrency);
+        });
+        queue.addEventListener('idle', () => {
+            expect(queue).to.have.property('running').that.is.lessThanOrEqual(concurrency);
+        });
+        queue.addEventListener('next', () => {
+            expect(queue).to.have.property('running').that.is.lessThanOrEqual(concurrency);
+        });
+        queue.addEventListener('completed', () => {
+            expect(queue).to.have.property('running').that.is.lessThanOrEqual(concurrency);
+        });
+        for (let i = 0; i < 100; i++) {
+            void queue.add(async () => {
+                await delay(10);
+            });
+        }
+        await queue.onIdle();
+    });
+    it('updates concurrency while adding', async () => {
+        let concurrency = 5;
+        const queue = new Queue({ concurrency });
+        let running = 0;
+        const input = Array.from({ length: 100 }).fill(0).map(async (_value, index) => queue.add(async () => {
+            running++;
+            expect(running).to.be.lessThanOrEqual(concurrency);
+            expect(queue).to.have.property('running').that.is.lessThanOrEqual(concurrency);
+            await delay(randomInt(30, 200));
+            running--;
+            if (index % 30 === 0) {
+                queue.concurrency = --concurrency;
+                expect(queue.concurrency).to.equal(concurrency);
+            }
+        }));
+        await Promise.all(input);
+    });
+    it('.onEmpty()', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        void queue.add(async () => 0);
+        void queue.add(async () => 0);
+        expect(queue).to.have.property('size', 2);
+        expect(queue).to.have.property('running', 1);
+        expect(queue).to.have.property('running', 1);
+        await queue.onEmpty();
+        expect(queue).to.have.property('size', 0);
+        void queue.add(async () => 0);
+        void queue.add(async () => 0);
+        expect(queue).to.have.property('size', 2);
+        expect(queue).to.have.property('running', 1);
+        expect(queue).to.have.property('running', 1);
+        await queue.onEmpty();
+        expect(queue).to.have.property('size', 0);
+        // Test an empty queue
+        await queue.onEmpty();
+        expect(queue).to.have.property('size', 0);
+    });
+    it('aborts .onEmpty()', async () => {
+        const queue = new Queue({ concurrency: 2 });
+        void queue.add(async () => delay(1000));
+        await expect(queue.onEmpty({
+            signal: AbortSignal.timeout(10)
+        })).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+    });
+    it('.onIdle()', async () => {
+        const queue = new Queue({ concurrency: 2 });
+        void queue.add(async () => delay(100));
+        void queue.add(async () => delay(100));
+        void queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 3);
+        expect(queue).to.have.property('queued', 1);
+        expect(queue).to.have.property('running', 2);
+        await queue.onIdle();
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        void queue.add(async () => delay(100));
+        void queue.add(async () => delay(100));
+        void queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 3);
+        expect(queue).to.have.property('queued', 1);
+        expect(queue).to.have.property('running', 2);
+        await queue.onIdle();
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+    });
+    it('aborts .onIdle()', async () => {
+        const queue = new Queue({ concurrency: 2 });
+        void queue.add(async () => delay(1000));
+        await expect(queue.onIdle({
+            signal: AbortSignal.timeout(10)
+        })).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+    });
+    it('.onSizeLessThan()', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        void queue.add(async () => delay(100));
+        void queue.add(async () => delay(100));
+        void queue.add(async () => delay(100));
+        void queue.add(async () => delay(100));
+        void queue.add(async () => delay(100));
+        await queue.onSizeLessThan(4);
+        expect(queue).to.have.property('size', 3);
+        expect(queue).to.have.property('queued', 2);
+        expect(queue).to.have.property('running', 1);
+        await queue.onSizeLessThan(2);
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        await queue.onSizeLessThan(10);
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        await queue.onSizeLessThan(1);
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+    });
+    it('aborts .onSizeLessThan()', async () => {
+        const queue = new Queue({ concurrency: 2 });
+        void queue.add(async () => delay(1000));
+        await expect(queue.onSizeLessThan(1, {
+            signal: AbortSignal.timeout(10)
+        })).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+    });
+    it('.onIdle() - no pending', async () => {
+        const queue = new Queue();
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        await queue.onIdle();
+    });
+    it('.clear()', async () => {
+        const queue = new Queue({ concurrency: 2 });
+        void queue.add(async () => delay(20_000));
+        void queue.add(async () => delay(20_000));
+        void queue.add(async () => delay(20_000));
+        void queue.add(async () => delay(20_000));
+        void queue.add(async () => delay(20_000));
+        void queue.add(async () => delay(20_000));
+        expect(queue).to.have.property('size', 6);
+        expect(queue).to.have.property('queued', 4);
+        expect(queue).to.have.property('running', 2);
+        queue.clear();
+        expect(queue).to.have.property('size', 0);
+    });
+    it('.add() - handle task throwing error', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        void queue.add(async () => 'sync 1');
+        void queue.add(async () => {
+            throw new Error('broken');
+        }).catch(err => {
+            expect(err).to.have.property('message', 'broken');
+        });
+        void queue.add(async () => 'sync 2');
+        expect(queue).to.have.property('size', 3);
+        expect(queue).to.have.property('queued', 2);
+        expect(queue).to.have.property('running', 1);
+        await queue.onIdle();
+    });
+    it('should emit active event per item', async () => {
+        const items = [0, 1, 2, 3, 4];
+        const queue = new Queue();
+        let eventCount = 0;
+        queue.addEventListener('active', () => {
+            eventCount++;
+        });
+        for (const item of items) {
+            void queue.add(async () => item);
+        }
+        await queue.onIdle();
+        expect(eventCount).to.equal(items.length);
+    });
+    it('should emit idle event when idle', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        let timesCalled = 0;
+        queue.addEventListener('idle', () => {
+            timesCalled++;
+        });
+        const job1 = queue.add(async () => delay(100));
+        const job2 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 2);
+        expect(queue).to.have.property('queued', 1);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(0);
+        await job1;
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(0);
+        await job2;
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        await delay(10);
+        expect(timesCalled).to.equal(1);
+        const job3 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(1);
+        await job3;
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        await delay(10);
+        expect(timesCalled).to.equal(2);
+    });
+    it('should emit empty event when empty', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        let timesCalled = 0;
+        queue.addEventListener('empty', () => {
+            timesCalled++;
+        });
+        const { resolve: resolveJob1, promise: job1Promise } = pDefer();
+        const { resolve: resolveJob2, promise: job2Promise } = pDefer();
+        const job1 = queue.add(async () => job1Promise);
+        const job2 = queue.add(async () => job2Promise);
+        expect(queue).to.have.property('size', 2);
+        expect(queue).to.have.property('queued', 1);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(0);
+        resolveJob1();
+        await job1;
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(0);
+        resolveJob2();
+        await job2;
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        await delay(10);
+        expect(timesCalled).to.equal(1);
+    });
+    it('should emit add event when adding task', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        let timesCalled = 0;
+        queue.addEventListener('add', () => {
+            timesCalled++;
+        });
+        const job1 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(1);
+        const job2 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 2);
+        expect(queue).to.have.property('queued', 1);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(2);
+        await job1;
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(2);
+        await job2;
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        expect(timesCalled).to.equal(2);
+        const job3 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(3);
+        await job3;
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        expect(timesCalled).to.equal(3);
+    });
+    it('should emit next event when completing task', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        let timesCalled = 0;
+        queue.addEventListener('next', () => {
+            timesCalled++;
+        });
+        const job1 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(0);
+        const job2 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 2);
+        expect(queue).to.have.property('queued', 1);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(0);
+        await job1;
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(1);
+        await job2;
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        expect(timesCalled).to.equal(2);
+        const job3 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(timesCalled).to.equal(2);
+        await job3;
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        expect(timesCalled).to.equal(3);
+    });
+    it('should emit completed / error events', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        let errorEvents = 0;
+        let completedEvents = 0;
+        queue.addEventListener('error', () => {
+            errorEvents++;
+        });
+        queue.addEventListener('completed', () => {
+            completedEvents++;
+        });
+        const job1 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(errorEvents).to.equal(0);
+        expect(completedEvents).to.equal(0);
+        const job2 = queue.add(async () => {
+            await delay(1);
+            throw new Error('failure');
+        });
+        expect(queue).to.have.property('size', 2);
+        expect(queue).to.have.property('queued', 1);
+        expect(queue).to.have.property('running', 1);
+        expect(errorEvents).to.equal(0);
+        expect(completedEvents).to.equal(0);
+        await job1;
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(errorEvents).to.equal(0);
+        expect(completedEvents).to.equal(1);
+        await expect(job2).to.eventually.be.rejected();
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        expect(errorEvents).to.equal(1);
+        expect(completedEvents).to.equal(1);
+        const job3 = queue.add(async () => delay(100));
+        expect(queue).to.have.property('size', 1);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 1);
+        expect(errorEvents).to.equal(1);
+        expect(completedEvents).to.equal(1);
+        await job3;
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+        expect(errorEvents).to.equal(1);
+        expect(completedEvents).to.equal(2);
+    });
+    it('should skip an aborted job', async () => {
+        const queue = new Queue();
+        const controller = new AbortController();
+        controller.abort();
+        await expect(queue.add(async () => { }, {
+            signal: controller.signal
+        })).to.eventually.be.rejected();
+    });
+    it('should abort a job', async () => {
+        const queue = new Queue();
+        const controller = new AbortController();
+        await expect(queue.add(async () => {
+            await delay(10);
+            controller.abort();
+            controller.signal.throwIfAborted();
+        }, {
+            signal: controller.signal
+        })).to.eventually.be.rejected();
+    });
+    it('should pass AbortSignal instance to job', async () => {
+        const queue = new Queue();
+        await queue.add(async (options) => {
+            expect(options).to.have.property('signal');
+        });
+    });
+    it('aborting multiple jobs at the same time', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        const controller1 = new AbortController();
+        const controller2 = new AbortController();
+        const task1 = queue.add(async () => new Promise(() => { }), {
+            signal: controller1.signal
+        });
+        const task2 = queue.add(async () => new Promise(() => { }), {
+            signal: controller2.signal
+        });
+        setTimeout(() => {
+            controller1.abort();
+            controller2.abort();
+        }, 0);
+        await Promise.all([
+            expect(task1).to.eventually.be.rejected(),
+            expect(task2).to.eventually.be.rejected()
+        ]);
+        expect(queue).to.have.property('size', 0);
+        expect(queue).to.have.property('queued', 0);
+        expect(queue).to.have.property('running', 0);
+    });
+    it('should abort jobs', async () => {
+        const abortSignalFired = pDefer();
+        const jobWasRejected = pDefer();
+        const queue = new Queue({ concurrency: 1 });
+        queue.add(async (options) => {
+            options?.signal?.addEventListener('abort', () => {
+                abortSignalFired.resolve();
+            });
+            await delay(100);
+        }).catch((err) => {
+            jobWasRejected.resolve(err);
+        });
+        queue.abort();
+        await Promise.all([
+            abortSignalFired.promise,
+            jobWasRejected.promise
+        ]);
+    });
+    it('can be used as a generator', async () => {
+        const results = [0, 1, 2, 3, 4];
+        const queue = new Queue({ concurrency: 1 });
+        for (let i = 0; i < results.length; i++) {
+            void queue.add(async () => {
+                await delay(10);
+                return results[i];
+            });
+        }
+        await expect(all(queue.toGenerator())).to.eventually.deep.equal(results);
+    });
+    it('can abort a generator', async () => {
+        const controller = new AbortController();
+        const results = [0, 1, 2, 3, 4];
+        const queue = new Queue({ concurrency: 1 });
+        for (let i = 0; i < results.length; i++) {
+            void queue.add(async () => {
+                await delay(100);
+                return results[i];
+            })
+                .catch(() => { });
+        }
+        setTimeout(() => {
+            controller.abort();
+        });
+        await expect(all(queue.toGenerator({
+            signal: controller.signal
+        }))).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+    });
+    it('can break out of a loop with a generator', async () => {
+        const results = [0, 1, 2, 3, 4];
+        const queue = new Queue({ concurrency: 1 });
+        let started = 0;
+        const collected = [];
+        for (let i = 0; i < results.length; i++) {
+            // eslint-disable-next-line no-loop-func
+            void queue.add(async () => {
+                started++;
+                await delay(100);
+                return results[i];
+            })
+                .catch(() => { });
+        }
+        for await (const result of queue.toGenerator()) {
+            collected.push(result);
+            if (result === 1) {
+                break;
+            }
+        }
+        expect(started).to.equal(3);
+        expect(collected).to.deep.equal([0, 1]);
+        expect(queue.size).to.equal(0);
+    });
+    it('cleans up listeners after all job recipients abort', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        void queue.add(async () => {
+            await delay(100);
+        }, {
+            slow: true
+        });
+        const signal = new TestSignal();
+        const jobResult = queue.add(async () => { }, {
+            slow: false,
+            signal
+        });
+        expect(queue.size).to.equal(2);
+        expect(queue.queued).to.equal(1);
+        expect(queue.running).to.equal(1);
+        const slowJob = queue.queue.find(job => !job.options.slow);
+        expect(slowJob?.recipients).to.have.lengthOf(1);
+        expect(slowJob?.recipients[0].signal).to.equal(signal);
+        // listeners added
+        expect(signal.listenerCount('abort')).to.equal(2);
+        // abort job stuck in queue
+        signal.abort();
+        // all listeners removed
+        expect(signal.listenerCount('abort')).to.equal(0);
+        await expect(jobResult).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+    });
+    it('rejects aborted jobs with the abort reason if supplied', async () => {
+        const queue = new Queue({ concurrency: 1 });
+        void queue.add(async () => {
+            await delay(100);
+        }, {
+            slow: true
+        });
+        const signal = new TestSignal();
+        const jobResult = queue.add(async () => { }, {
+            slow: false,
+            signal
+        });
+        const err = new Error('Took too long');
+        // abort job stuck in queue
+        signal.abort(err);
+        // result rejects
+        await expect(jobResult).to.eventually.be.rejectedWith(err);
+    });
+    it('immediately removes aborted job', async () => {
+        const signal = new TestSignal();
+        const queue = new Queue({ concurrency: 1 });
+        void queue.add(async () => {
+            await delay(100);
+        }, {
+            slow: true
+        });
+        const jobResult = queue.add(async () => { }, {
+            slow: false,
+            signal
+        });
+        expect(queue.size).to.equal(2);
+        expect(queue.queued).to.equal(1);
+        expect(queue.running).to.equal(1);
+        // abort job stuck in queue
+        signal.abort();
+        await expect(jobResult).to.eventually.be.rejected
+            .with.property('name', 'AbortError');
+        // counts updated
+        expect(queue.size).to.equal(1);
+        expect(queue.queued).to.equal(0);
+        expect(queue.running).to.equal(1);
+        // job not in queue any more
+        expect(queue.queue.find(job => !job.options.slow)).to.be.undefined();
+    });
+    it('rejects job when the queue is full', async () => {
+        const queue = new Queue({
+            concurrency: 1,
+            maxSize: 1
+        });
+        const job = async () => {
+            await delay(100);
+            return 'hello';
+        };
+        const p = queue.add(job);
+        await expect(queue.add(job)).to.eventually.be.rejected
+            .with.property('name', 'QueueFullError');
+        await expect(p).to.eventually.equal('hello');
+        await expect(queue.add(job)).to.eventually.equal('hello');
+    });
+});
+//# sourceMappingURL=queue.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/queue.spec.js.map b/node_modules/@libp2p/utils/dist/test/queue.spec.js.map
new file mode 100644
index 0000000..5a0023d
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/queue.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"queue.spec.js","sourceRoot":"","sources":["../../test/queue.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.d.ts b/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.d.ts
new file mode 100644
index 0000000..cafcff7
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=rate-limiter.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.d.ts.map
new file mode 100644
index 0000000..695259a
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"rate-limiter.spec.d.ts","sourceRoot":"","sources":["../../test/rate-limiter.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.js b/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.js
new file mode 100644
index 0000000..7596586
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.js
@@ -0,0 +1,198 @@
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import { RateLimiter } from '../src/rate-limiter.js';
+describe('RateLimiter with fixed window', function () {
+    this.timeout(5000);
+    it('consume 1 point', async () => {
+        const testKey = 'consume1';
+        const rateLimiterMemory = new RateLimiter({ points: 2, duration: 5 });
+        await rateLimiterMemory.consume(testKey);
+        const res = rateLimiterMemory.memoryStorage.get(rateLimiterMemory.getKey(testKey));
+        expect(res).to.have.property('consumedPoints', 1);
+    });
+    it('can not consume more than maximum points', async () => {
+        const testKey = 'consume2';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 5 });
+        await expect(rateLimiterMemory.consume(testKey, 2)).to.eventually.be.rejected
+            .with.property('msBeforeNext').that.is.gte(0);
+    });
+    it('execute evenly over duration with minimum delay 20 ms', async () => {
+        const testKey = 'consumeEvenlyMinDelay';
+        const rateLimiterMemory = new RateLimiter({
+            points: 100, duration: 1, execEvenly: true, execEvenlyMinDelayMs: 20
+        });
+        await rateLimiterMemory.consume(testKey);
+        const timeFirstConsume = Date.now();
+        await rateLimiterMemory.consume(testKey);
+        expect(Date.now() - timeFirstConsume >= 20).to.equal(true);
+    });
+    it('execute evenly over duration', async () => {
+        const testKey = 'consumeEvenly';
+        const rateLimiterMemory = new RateLimiter({
+            points: 2, duration: 5, execEvenly: true, execEvenlyMinDelayMs: 1
+        });
+        await rateLimiterMemory.consume(testKey);
+        const timeFirstConsume = Date.now();
+        await rateLimiterMemory.consume(testKey);
+        // Second consume should be delayed more than 2 seconds
+        // Explanation:
+        // 1) consume at 0ms, remaining duration = 5000ms
+        // 2) delayed consume for (4999 / (0 + 2)) ~= 2500ms, where 2 is a fixed value
+        // , because it mustn't delay in the beginning and in the end of duration
+        // 3) consume after 2500ms by timeout
+        const diff = Date.now() - timeFirstConsume;
+        expect(diff > 2400 && diff < 2600).to.equal(true);
+    });
+    it('makes penalty', async () => {
+        const testKey = 'penalty1';
+        const rateLimiterMemory = new RateLimiter({ points: 3, duration: 5 });
+        await rateLimiterMemory.consume(testKey);
+        rateLimiterMemory.penalty(testKey);
+        const res = rateLimiterMemory.memoryStorage.get(rateLimiterMemory.getKey(testKey));
+        expect(res).to.have.property('consumedPoints', 2);
+    });
+    it('reward points', async () => {
+        const testKey = 'reward1';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 5 });
+        await rateLimiterMemory.consume(testKey);
+        rateLimiterMemory.reward(testKey);
+        const res = rateLimiterMemory.memoryStorage.get(rateLimiterMemory.getKey(testKey));
+        expect(res).to.have.property('consumedPoints', 0);
+    });
+    it('use keyPrefix from options', () => {
+        const testKey = 'key';
+        const keyPrefix = 'test';
+        const rateLimiterMemory = new RateLimiter({ keyPrefix, points: 1, duration: 5 });
+        expect(rateLimiterMemory.getKey(testKey)).to.equal('test:key');
+    });
+    it('blocks key for block duration when consumed more than points', async () => {
+        const testKey = 'block';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 1, blockDuration: 2 });
+        await expect(rateLimiterMemory.consume(testKey, 2)).to.eventually.be.rejected
+            .with.property('msBeforeNext').that.is.greaterThan(1000);
+    });
+    it('do not block key second time until block expires no matter how many points consumed', async () => {
+        const testKey = 'doNotBlockTwice';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 1, blockDuration: 2 });
+        await expect(rateLimiterMemory.consume(testKey, 2)).to.eventually.be.rejected();
+        await delay(1201);
+        await expect(rateLimiterMemory.consume(testKey)).to.eventually.be.rejected()
+            .with.property('msBeforeNext').that.is.lessThan(1000);
+    });
+    it('block expires in blockDuration seconds', async () => {
+        const testKey = 'blockExpires';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 1, blockDuration: 2 });
+        await expect(rateLimiterMemory.consume(testKey, 2)).to.eventually.be.rejected();
+        await delay(2000);
+        const res = await rateLimiterMemory.consume(testKey);
+        expect(res).to.have.property('consumedPoints', 1);
+    });
+    it('block custom key', async () => {
+        const testKey = 'blockCustom';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 1 });
+        rateLimiterMemory.block(testKey, 2);
+        await expect(rateLimiterMemory.consume(testKey)).to.eventually.be.rejected()
+            .with.property('msBeforeNext').that.is.within(1000, 2000);
+    });
+    it('get by key', async () => {
+        const testKey = 'get';
+        const rateLimiterMemory = new RateLimiter({ points: 2, duration: 5 });
+        await rateLimiterMemory.consume(testKey);
+        const res = rateLimiterMemory.get(testKey);
+        expect(res).to.have.property('remainingPoints', 1);
+    });
+    it('get resolves null if key is not set', () => {
+        const testKey = 'getByNotExistingKey';
+        const rateLimiterMemory = new RateLimiter({ points: 2, duration: 5 });
+        expect(rateLimiterMemory.get(testKey)).to.be.undefined();
+    });
+    it('delete resolves true if key is set', async () => {
+        const testKey = 'deleteKey';
+        const rateLimiterMemory = new RateLimiter({ points: 2, duration: 5 });
+        await rateLimiterMemory.consume(testKey);
+        rateLimiterMemory.delete(testKey);
+        expect(rateLimiterMemory.get(testKey)).to.be.undefined();
+    });
+    it('delete resolves false if key is not set', () => {
+        const testKey = 'deleteKey2';
+        const rateLimiterMemory = new RateLimiter({ points: 2, duration: 5 });
+        rateLimiterMemory.delete(testKey);
+        expect(rateLimiterMemory.get(testKey)).to.be.undefined();
+    });
+    it('consume applies options.customDuration to set expire', async () => {
+        const testKey = 'options.customDuration';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 5 });
+        const res = await rateLimiterMemory.consume(testKey, 1, { customDuration: 1 });
+        expect(res.msBeforeNext).to.be.lte(1000);
+    });
+    it('consume applies options.customDuration to set not expiring key', async () => {
+        const testKey = 'options.customDuration.forever';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 5 });
+        const res = await rateLimiterMemory.consume(testKey, 1, { customDuration: 0 });
+        expect(res).to.have.property('msBeforeNext', -1);
+    });
+    it('penalty applies options.customDuration to set expire', () => {
+        const testKey = 'options.customDuration';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 5 });
+        const res = rateLimiterMemory.penalty(testKey, 1, { customDuration: 1 });
+        expect(res).to.have.property('msBeforeNext').that.is.lte(1000);
+    });
+    it('reward applies options.customDuration to set expire', () => {
+        const testKey = 'options.customDuration';
+        const rateLimiterMemory = new RateLimiter({ points: 1, duration: 5 });
+        const res = rateLimiterMemory.reward(testKey, 1, { customDuration: 1 });
+        expect(res).to.have.property('msBeforeNext').that.is.lte(1000);
+    });
+    it('does not expire key if duration set to 0', async () => {
+        const testKey = 'neverExpire';
+        const rateLimiterMemory = new RateLimiter({ points: 2, duration: 0 });
+        await rateLimiterMemory.consume(testKey, 1);
+        await rateLimiterMemory.consume(testKey, 1);
+        const res = rateLimiterMemory.get(testKey);
+        expect(res).to.have.property('consumedPoints', 2);
+        expect(res).to.have.property('msBeforeNext', -1);
+    });
+    it('block key forever, if secDuration is 0', async () => {
+        const testKey = 'neverExpire';
+        const rateLimiter = new RateLimiter({ points: 1, duration: 1 });
+        rateLimiter.block(testKey, 0);
+        await delay(1000);
+        const res = rateLimiter.get(testKey);
+        expect(res).to.have.property('consumedPoints', 2);
+        expect(res).to.have.property('msBeforeNext', -1);
+    });
+    it('set points by key', () => {
+        const testKey = 'set';
+        const rateLimiter = new RateLimiter({ points: 10, duration: 1 });
+        rateLimiter.set(testKey, 12);
+        const res = rateLimiter.get(testKey);
+        expect(res).to.have.property('consumedPoints', 12);
+        expect(res).to.have.property('remainingPoints', 0);
+    });
+    it('set points by key forever', async () => {
+        const testKey = 'setForever';
+        const rateLimiter = new RateLimiter({ points: 10, duration: 1 });
+        rateLimiter.set(testKey, 12, 0);
+        await delay(1100);
+        const res = rateLimiter.get(testKey);
+        expect(res).to.have.property('consumedPoints', 12);
+        expect(res).to.have.property('msBeforeNext', -1);
+    });
+    it('consume should start new time window if previous already expired (msBeforeNext is negative)', async () => {
+        const keyPrefix = 'test';
+        const testKey = 'consume-negative-before-next';
+        const rateLimiterMemory = new RateLimiter({ points: 2, duration: 5, keyPrefix });
+        await rateLimiterMemory.consume(testKey);
+        const rec = rateLimiterMemory.memoryStorage.storage.get(`${keyPrefix}:${testKey}`);
+        expect(rec).to.be.ok();
+        if (rec == null) {
+            throw new Error('No record for key');
+        }
+        rec.expiresAt = new Date(Date.now() - 1000);
+        const res = await rateLimiterMemory.consume(testKey);
+        expect(res).to.have.property('consumedPoints', 1);
+        expect(res).to.have.property('remainingPoints', 1);
+        expect(res).to.have.property('msBeforeNext', 5000);
+    });
+});
+//# sourceMappingURL=rate-limiter.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.js.map b/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.js.map
new file mode 100644
index 0000000..8cff9e1
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/rate-limiter.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"rate-limiter.spec.js","sourceRoot":"","sources":["../../test/rate-limiter.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/repeating-task.spec.d.ts b/node_modules/@libp2p/utils/dist/test/repeating-task.spec.d.ts
new file mode 100644
index 0000000..dfe8311
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/repeating-task.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=repeating-task.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/repeating-task.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/repeating-task.spec.d.ts.map
new file mode 100644
index 0000000..f6cdb0f
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/repeating-task.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"repeating-task.spec.d.ts","sourceRoot":"","sources":["../../test/repeating-task.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/repeating-task.spec.js b/node_modules/@libp2p/utils/dist/test/repeating-task.spec.js
new file mode 100644
index 0000000..bff7598
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/repeating-task.spec.js
@@ -0,0 +1,102 @@
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import pDefer from 'p-defer';
+import { repeatingTask } from '../src/repeating-task.js';
+describe('repeating-task', () => {
+    it('should repeat a task', async () => {
+        let count = 0;
+        const task = repeatingTask(() => {
+            count++;
+        }, 100);
+        task.start();
+        await delay(1000);
+        task.stop();
+        expect(count).to.be.greaterThan(1);
+    });
+    it('should run a task immediately', async () => {
+        let count = 0;
+        const task = repeatingTask(() => {
+            count++;
+        }, 60000, {
+            runImmediately: true
+        });
+        task.start();
+        await delay(10);
+        task.stop();
+        expect(count).to.equal(1);
+    });
+    it('should time out a task', async () => {
+        const deferred = pDefer();
+        const task = repeatingTask((opts) => {
+            opts?.signal?.addEventListener('abort', () => {
+                deferred.resolve();
+            });
+        }, 100, {
+            timeout: 10
+        });
+        task.start();
+        await deferred.promise;
+        task.stop();
+    });
+    it('should repeat a task that throws', async () => {
+        let count = 0;
+        const task = repeatingTask(() => {
+            count++;
+            throw new Error('Urk!');
+        }, 100);
+        task.start();
+        await delay(1000);
+        task.stop();
+        expect(count).to.be.greaterThan(1);
+    });
+    it('should update the interval of a task', async () => {
+        let count = 0;
+        const task = repeatingTask(() => {
+            count++;
+            if (count === 1) {
+                task.setInterval(2000);
+            }
+        }, 100);
+        task.start();
+        await delay(1000);
+        task.stop();
+        expect(count).to.equal(1);
+    });
+    it('should update the timeout of a task', async () => {
+        let count = 0;
+        const task = repeatingTask(async (options) => {
+            // simulate a delay
+            await delay(100);
+            if (options?.signal?.aborted !== true) {
+                count++;
+            }
+            if (count === 1) {
+                // set the task timeout to less than our simulated delay
+                task.setTimeout(10);
+            }
+        }, 100, {
+            timeout: 500
+        });
+        task.start();
+        await delay(1000);
+        task.stop();
+        expect(count).to.equal(1);
+    });
+    it('should not reschedule the task if the interval is updated to the same value', async () => {
+        let count = 0;
+        const task = repeatingTask(() => {
+            count++;
+        }, 1_000, {
+            runImmediately: true
+        });
+        task.start();
+        await delay(100);
+        task.setInterval(200);
+        await delay(100);
+        task.setInterval(200);
+        await delay(100);
+        task.stop();
+        expect(count).to.equal(2);
+    });
+});
+//# sourceMappingURL=repeating-task.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/repeating-task.spec.js.map b/node_modules/@libp2p/utils/dist/test/repeating-task.spec.js.map
new file mode 100644
index 0000000..d605d48
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/repeating-task.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"repeating-task.spec.js","sourceRoot":"","sources":["../../test/repeating-task.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.d.ts b/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.d.ts
new file mode 100644
index 0000000..650c5ed
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=stream-to-ma-conn.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.d.ts.map
new file mode 100644
index 0000000..9ed1054
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"stream-to-ma-conn.spec.d.ts","sourceRoot":"","sources":["../../test/stream-to-ma-conn.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.js b/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.js
new file mode 100644
index 0000000..ce1458c
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.js
@@ -0,0 +1,68 @@
+/* eslint-env mocha */
+import { defaultLogger, logger } from '@libp2p/logger';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import all from 'it-all';
+import { pair } from 'it-pair';
+import { pipe } from 'it-pipe';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { streamToMaConnection } from '../src/stream-to-ma-conn.js';
+function toMuxedStream(stream) {
+    const muxedStream = {
+        ...stream,
+        close: async () => { },
+        closeRead: async () => { },
+        closeWrite: async () => { },
+        abort: () => { },
+        direction: 'outbound',
+        timeline: {
+            open: Date.now()
+        },
+        metadata: {},
+        id: `muxed-stream-${Math.random()}`,
+        status: 'open',
+        readStatus: 'ready',
+        writeStatus: 'ready',
+        log: logger('muxed-stream')
+    };
+    return muxedStream;
+}
+describe('Convert stream into a multiaddr connection', () => {
+    const localAddr = multiaddr('/ip4/101.45.75.219/tcp/6000');
+    const remoteAddr = multiaddr('/ip4/100.46.74.201/tcp/6002');
+    it('converts a stream and adds the provided metadata', async () => {
+        const stream = pair();
+        const maConn = streamToMaConnection({
+            stream: toMuxedStream(stream),
+            localAddr,
+            remoteAddr,
+            logger: defaultLogger()
+        });
+        expect(maConn).to.exist();
+        expect(maConn.sink).to.exist();
+        expect(maConn.source).to.exist();
+        expect(maConn.remoteAddr).to.eql(remoteAddr);
+        expect(maConn.timeline).to.exist();
+        expect(maConn.timeline.open).to.exist();
+        expect(maConn.timeline.close).to.not.exist();
+        await maConn.close();
+        expect(maConn.timeline.close).to.exist();
+    });
+    it('can stream data over the multiaddr connection', async () => {
+        const stream = pair();
+        const maConn = streamToMaConnection({
+            stream: toMuxedStream(stream),
+            localAddr,
+            remoteAddr,
+            logger: defaultLogger()
+        });
+        const data = uint8ArrayFromString('hey');
+        const streamData = await pipe(async function* () {
+            yield data;
+        }, maConn, async (source) => all(source));
+        expect(streamData).to.eql([data]);
+        // underlying stream end closes the connection
+        expect(maConn.timeline.close).to.exist();
+    });
+});
+//# sourceMappingURL=stream-to-ma-conn.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.js.map b/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.js.map
new file mode 100644
index 0000000..a720f15
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/stream-to-ma-conn.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"stream-to-ma-conn.spec.js","sourceRoot":"","sources":["../../test/stream-to-ma-conn.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/tracked-list.spec.d.ts b/node_modules/@libp2p/utils/dist/test/tracked-list.spec.d.ts
new file mode 100644
index 0000000..6774e7d
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/tracked-list.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=tracked-list.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/tracked-list.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/tracked-list.spec.d.ts.map
new file mode 100644
index 0000000..ffe0c73
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/tracked-list.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"tracked-list.spec.d.ts","sourceRoot":"","sources":["../../test/tracked-list.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/tracked-list.spec.js b/node_modules/@libp2p/utils/dist/test/tracked-list.spec.js
new file mode 100644
index 0000000..3c41790
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/tracked-list.spec.js
@@ -0,0 +1,53 @@
+import { expect } from 'aegir/chai';
+import { stubInterface } from 'sinon-ts';
+import { trackedList } from '../src/tracked-list.js';
+describe('tracked-list', () => {
+    let metrics;
+    beforeEach(() => {
+        metrics = stubInterface();
+    });
+    it('should return a list with metrics', () => {
+        const name = 'system_component_metric';
+        const metric = stubInterface();
+        // @ts-expect-error the wrong overload is selected
+        metrics.registerMetric.withArgs(name).returns(metric);
+        const list = trackedList({
+            name,
+            metrics
+        });
+        expect(list).to.be.an.instanceOf(Array);
+        expect(metrics.registerMetric.calledWith(name)).to.be.true();
+    });
+    it('should return a map without metrics', () => {
+        const name = 'system_component_metric';
+        const metric = stubInterface();
+        // @ts-expect-error the wrong overload is selected
+        metrics.registerMetric.withArgs(name).returns(metric);
+        const list = trackedList({
+            name
+        });
+        expect(list).to.be.an.instanceOf(Array);
+        expect(metrics.registerMetric.called).to.be.false();
+    });
+    it('should track metrics', () => {
+        const name = 'system_component_metric';
+        const list = trackedList({
+            name,
+            metrics
+        });
+        const calculate = metrics.registerMetric.getCall(0).args[1].calculate;
+        expect(list).to.be.an.instanceOf(Array);
+        expect(calculate()).to.equal(0);
+        list.push('value1');
+        expect(calculate()).to.equal(1);
+        list.push('value2');
+        expect(calculate()).to.equal(2);
+        list.push('value3');
+        expect(calculate()).to.equal(3);
+        list.pop();
+        expect(calculate()).to.equal(2);
+        list.splice(0, list.length);
+        expect(calculate()).to.equal(0);
+    });
+});
+//# sourceMappingURL=tracked-list.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/tracked-list.spec.js.map b/node_modules/@libp2p/utils/dist/test/tracked-list.spec.js.map
new file mode 100644
index 0000000..871aa5a
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/tracked-list.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"tracked-list.spec.js","sourceRoot":"","sources":["../../test/tracked-list.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/tracked-map.spec.d.ts b/node_modules/@libp2p/utils/dist/test/tracked-map.spec.d.ts
new file mode 100644
index 0000000..b05eaa1
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/tracked-map.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=tracked-map.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/tracked-map.spec.d.ts.map b/node_modules/@libp2p/utils/dist/test/tracked-map.spec.d.ts.map
new file mode 100644
index 0000000..f4a22e1
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/tracked-map.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"tracked-map.spec.d.ts","sourceRoot":"","sources":["../../test/tracked-map.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/tracked-map.spec.js b/node_modules/@libp2p/utils/dist/test/tracked-map.spec.js
new file mode 100644
index 0000000..18a7f0b
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/tracked-map.spec.js
@@ -0,0 +1,68 @@
+import { expect } from 'aegir/chai';
+import { stubInterface } from 'sinon-ts';
+import { trackedMap } from '../src/tracked-map.js';
+describe('tracked-map', () => {
+    let metrics;
+    beforeEach(() => {
+        metrics = stubInterface();
+    });
+    it('should return a map with metrics', () => {
+        const name = 'system_component_metric';
+        const metric = stubInterface();
+        // @ts-expect-error the wrong overload is selected
+        metrics.registerMetric.withArgs(name).returns(metric);
+        const map = trackedMap({
+            name,
+            metrics
+        });
+        expect(map).to.be.an.instanceOf(Map);
+        expect(metrics.registerMetric.calledWith(name)).to.be.true();
+    });
+    it('should return a map without metrics', () => {
+        const name = 'system_component_metric';
+        const metric = stubInterface();
+        // @ts-expect-error the wrong overload is selected
+        metrics.registerMetric.withArgs(name).returns(metric);
+        const map = trackedMap({
+            name
+        });
+        expect(map).to.be.an.instanceOf(Map);
+        expect(metrics.registerMetric.called).to.be.false();
+    });
+    it('should track metrics', () => {
+        const name = 'system_component_metric';
+        let value = 0;
+        let callCount = 0;
+        const metric = stubInterface();
+        // @ts-expect-error the wrong overload is selected
+        metrics.registerMetric.withArgs(name).returns(metric);
+        metric.update.callsFake((v) => {
+            if (typeof v === 'number') {
+                value = v;
+            }
+            callCount++;
+        });
+        const map = trackedMap({
+            name,
+            metrics
+        });
+        expect(map).to.be.an.instanceOf(Map);
+        expect(callCount).to.equal(1);
+        map.set('key1', 'value1');
+        expect(value).to.equal(1);
+        expect(callCount).to.equal(2);
+        map.set('key1', 'value2');
+        expect(value).to.equal(1);
+        expect(callCount).to.equal(3);
+        map.set('key2', 'value3');
+        expect(value).to.equal(2);
+        expect(callCount).to.equal(4);
+        map.delete('key2');
+        expect(value).to.equal(1);
+        expect(callCount).to.equal(5);
+        map.clear();
+        expect(value).to.equal(0);
+        expect(callCount).to.equal(6);
+    });
+});
+//# sourceMappingURL=tracked-map.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/dist/test/tracked-map.spec.js.map b/node_modules/@libp2p/utils/dist/test/tracked-map.spec.js.map
new file mode 100644
index 0000000..56357ee
--- /dev/null
+++ b/node_modules/@libp2p/utils/dist/test/tracked-map.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"tracked-map.spec.js","sourceRoot":"","sources":["../../test/tracked-map.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/utils/src/adaptive-timeout.ts b/node_modules/@libp2p/utils/src/adaptive-timeout.ts
index fcd9190..ed70e5b 100644
--- a/node_modules/@libp2p/utils/src/adaptive-timeout.ts
+++ b/node_modules/@libp2p/utils/src/adaptive-timeout.ts
@@ -6,7 +6,8 @@ import type { ClearableSignal } from 'any-signal'
 
 export const DEFAULT_TIMEOUT_MULTIPLIER = 1.2
 export const DEFAULT_FAILURE_MULTIPLIER = 2
-export const DEFAULT_MIN_TIMEOUT = 5000
+export const DEFAULT_MIN_TIMEOUT = 5_000
+export const DEFAULT_MAX_TIMEOUT = 60_000
 
 export interface AdaptiveTimeoutSignal extends ClearableSignal {
   start: number
@@ -20,6 +21,7 @@ export interface AdaptiveTimeoutInit {
   timeoutMultiplier?: number
   failureMultiplier?: number
   minTimeout?: number
+  maxTimeout?: number
 }
 
 export interface GetTimeoutSignalOptions {
@@ -35,6 +37,7 @@ export class AdaptiveTimeout {
   private readonly timeoutMultiplier: number
   private readonly failureMultiplier: number
   private readonly minTimeout: number
+  private readonly maxTimeout: number
 
   constructor (init: AdaptiveTimeoutInit = {}) {
     this.success = new MovingAverage(init.interval ?? 5000)
@@ -43,6 +46,7 @@ export class AdaptiveTimeout {
     this.failureMultiplier = init.failureMultiplier ?? DEFAULT_FAILURE_MULTIPLIER
     this.timeoutMultiplier = init.timeoutMultiplier ?? DEFAULT_TIMEOUT_MULTIPLIER
     this.minTimeout = init.minTimeout ?? DEFAULT_MIN_TIMEOUT
+    this.maxTimeout = init.maxTimeout ?? DEFAULT_MAX_TIMEOUT
 
     if (init.metricName != null) {
       this.metric = init.metrics?.registerMetricGroup(init.metricName)
@@ -52,10 +56,16 @@ export class AdaptiveTimeout {
   getTimeoutSignal (options: GetTimeoutSignalOptions = {}): AdaptiveTimeoutSignal {
     // calculate timeout for individual peers based on moving average of
     // previous successful requests
-    const timeout = Math.max(
-      Math.round(this.next.movingAverage * (options.timeoutFactor ?? this.timeoutMultiplier)),
-      this.minTimeout
-    )
+    let timeout = Math.round(this.next.movingAverage * (options.timeoutFactor ?? this.timeoutMultiplier))
+
+    if (timeout < this.minTimeout) {
+      timeout = this.minTimeout
+    }
+
+    if (timeout > this.maxTimeout) {
+      timeout = this.maxTimeout
+    }
+
     const sendTimeout = AbortSignal.timeout(timeout)
     const timeoutSignal = anySignal([options.signal, sendTimeout]) as AdaptiveTimeoutSignal
     setMaxListeners(Infinity, timeoutSignal, sendTimeout)
