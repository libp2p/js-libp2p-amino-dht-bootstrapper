import type { BootstrapInit } from '@libp2p/bootstrap'
import type { AddressManagerInit, ConnectionManagerInit } from 'libp2p'

export interface BootstrapConfig {
  addresses: Omit<AddressManagerInit, 'announceFilter'>
  connectionManager: ConnectionManagerInit
  bootstrap: BootstrapInit
  privateKey: string
}

export const defaultConfig: BootstrapConfig = {
  addresses: {
    announce: [],
    noAnnounce: [],
    listen: [
      '/ip4/0.0.0.0/tcp/4003/ws',
      '/ip4/0.0.0.0/tcp/4001',
      '/ip6/::/tcp/4004/ws',
      '/ip6/::/tcp/4001',
      '/ip4/0.0.0.0/udp/4002/webrtc'
    ]
  },
  bootstrap: {
    list: [
      '/dns4/am6.bootstrap.libp2p.io/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',
      '/dns4/sg1.bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',
      '/dns4/sv15.bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN'
    ]
  },
  privateKey: 'generated by `auto-config.ts`',
  connectionManager: {
    inboundConnectionThreshold: 100,
    maxIncomingPendingConnections: 100,
    maxConnections: 500
  }
}
